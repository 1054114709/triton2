// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_globalserver_5fpb_2ehxx__INCLUDED
#define PROTOBUF_globalserver_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();

class CMapData;
class CMessageGlobalTeleportRequest;
class CMessageGlobalTeleportResponse;
class CMessageChangeServerRequest;
class CMessageChangeServerResponse;
class CMessageCreateRepetionRequest;
class CMessageCreateRepetionResponse;
class CMessagePlayerApplyWarRequest;
class CMessagePlayerApplyWarResponse;
class CMessageWarEnableNotify;
class CMessagePlayerLeaveWarNotify;
class CMessageWarEndNotify;
class CMessageKickGlobalPlayerNotify;
class CMessageKickGlobalPlayerACK;
class PBWorldPlayer;
class CMessageSyncGlobalPlayeNotify;

enum EMGlobalServerMessageID {
  ID_S2D_REQUEST_GLOBALTELEPORT = 58368,
  ID_D2S_RESPONSE_GLOBALTELEPORT = 58369,
  ID_D2G_REQUEST_CHANGESERVER = 58370,
  ID_G2D_RESPONSE_CHANGESERVER = 58371,
  ID_D2G_REQUEST_CREATEREPETION = 58372,
  ID_G2D_RESPONSE_CREATEREPETION = 58373,
  ID_S2D_REQUEST_PLAYERAPPLYWAR = 58374,
  ID_D2S_REQPONSE_PLAYERAPPLYWAR = 58375,
  ID_D2S_NOTIFY_WARENABLE = 58376,
  ID_S2D_NOTIFY_PLAYERLEAVEWAR = 58377,
  ID_S2D_NOTIFY_WAREND = 58378,
  ID_S2S_NOTIFY_KICKGLOBALPLAYER = 58379,
  ID_S2S_NOTIFY_KICKGLOBALPLAYERACK = 58380,
  ID_S2S_NOTIFY_SYNCGLOBALPLAYE = 58381
};
const ::google::protobuf::EnumDescriptor* EMGlobalServerMessageID_descriptor();
bool EMGlobalServerMessageID_IsValid(int value);
const EMGlobalServerMessageID EMGlobalServerMessageID_MIN = ID_S2D_REQUEST_GLOBALTELEPORT;
const EMGlobalServerMessageID EMGlobalServerMessageID_MAX = ID_S2S_NOTIFY_SYNCGLOBALPLAYE;

inline const ::std::string& EMGlobalServerMessageID_Name(EMGlobalServerMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMGlobalServerMessageID_descriptor(), value);
}
inline bool EMGlobalServerMessageID_Parse(
    const ::std::string& name, EMGlobalServerMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMGlobalServerMessageID>(
    EMGlobalServerMessageID_descriptor(), name, value);
}
// ===================================================================

class CMapData : public ::google::protobuf::Message {
 public:
  CMapData();
  virtual ~CMapData();
  
  CMapData(const CMapData& from);
  
  inline CMapData& operator=(const CMapData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMapData& default_instance();
  void Swap(CMapData* other);
  
  // implements Message ----------------------------------------------
  
  CMapData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMapData& from);
  void MergeFrom(const CMapData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 3;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 4;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 4;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 lineid_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMapData* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGlobalTeleportRequest : public ::google::protobuf::Message {
 public:
  CMessageGlobalTeleportRequest();
  virtual ~CMessageGlobalTeleportRequest();
  
  CMessageGlobalTeleportRequest(const CMessageGlobalTeleportRequest& from);
  
  inline CMessageGlobalTeleportRequest& operator=(const CMessageGlobalTeleportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGlobalTeleportRequest& default_instance();
  void Swap(CMessageGlobalTeleportRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGlobalTeleportRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGlobalTeleportRequest& from);
  void MergeFrom(const CMessageGlobalTeleportRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ServerType = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 3;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 5;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 5;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 OriginalServerID = 6;
  inline bool has_originalserverid() const;
  inline void clear_originalserverid();
  static const int kOriginalServerIDFieldNumber = 6;
  inline ::google::protobuf::uint32 originalserverid() const;
  inline void set_originalserverid(::google::protobuf::uint32 value);
  
  // optional uint32 OriginalWorldID = 7;
  inline bool has_originalworldid() const;
  inline void clear_originalworldid();
  static const int kOriginalWorldIDFieldNumber = 7;
  inline ::google::protobuf::uint32 originalworldid() const;
  inline void set_originalworldid(::google::protobuf::uint32 value);
  
  // optional uint32 TeleType = 8;
  inline bool has_teletype() const;
  inline void clear_teletype();
  static const int kTeleTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 teletype() const;
  inline void set_teletype(::google::protobuf::uint32 value);
  
  // optional .CMapData MapData = 9;
  inline bool has_mapdata() const;
  inline void clear_mapdata();
  static const int kMapDataFieldNumber = 9;
  inline const ::CMapData& mapdata() const;
  inline ::CMapData* mutable_mapdata();
  
  // optional uint32 GameID = 10;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIDFieldNumber = 10;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);
  
  // optional string Mac = 11;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 11;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 originalserverid_;
  ::google::protobuf::uint32 originalworldid_;
  ::google::protobuf::uint32 teletype_;
  ::CMapData* mapdata_;
  ::google::protobuf::uint32 gameid_;
  ::std::string* mac_;
  static const ::std::string _default_mac_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGlobalTeleportRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGlobalTeleportResponse : public ::google::protobuf::Message {
 public:
  CMessageGlobalTeleportResponse();
  virtual ~CMessageGlobalTeleportResponse();
  
  CMessageGlobalTeleportResponse(const CMessageGlobalTeleportResponse& from);
  
  inline CMessageGlobalTeleportResponse& operator=(const CMessageGlobalTeleportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGlobalTeleportResponse& default_instance();
  void Swap(CMessageGlobalTeleportResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGlobalTeleportResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGlobalTeleportResponse& from);
  void MergeFrom(const CMessageGlobalTeleportResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string Addr = 2;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 2;
  inline const ::std::string& addr() const;
  inline void set_addr(const ::std::string& value);
  inline void set_addr(const char* value);
  inline void set_addr(const char* value, size_t size);
  inline ::std::string* mutable_addr();
  
  // optional uint32 LoginToken = 3;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 3;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 5;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 5;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 6;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 6;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 7;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 7;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 8;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 8;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint64 ReptionKey = 10;
  inline bool has_reptionkey() const;
  inline void clear_reptionkey();
  static const int kReptionKeyFieldNumber = 10;
  inline ::google::protobuf::uint64 reptionkey() const;
  inline void set_reptionkey(::google::protobuf::uint64 value);
  
  // optional uint32 TeamFlag = 11;
  inline bool has_teamflag() const;
  inline void clear_teamflag();
  static const int kTeamFlagFieldNumber = 11;
  inline ::google::protobuf::uint32 teamflag() const;
  inline void set_teamflag(::google::protobuf::uint32 value);
  
  // optional uint32 RepetionIndex = 12;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 12;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
  // optional uint32 SceneWorldID = 13;
  inline bool has_sceneworldid() const;
  inline void clear_sceneworldid();
  static const int kSceneWorldIDFieldNumber = 13;
  inline ::google::protobuf::uint32 sceneworldid() const;
  inline void set_sceneworldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::std::string* addr_;
  static const ::std::string _default_addr_;
  ::google::protobuf::uint32 logintoken_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint64 reptionkey_;
  ::google::protobuf::uint32 teamflag_;
  ::google::protobuf::uint32 repetionindex_;
  ::google::protobuf::uint32 sceneworldid_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGlobalTeleportResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeServerRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeServerRequest();
  virtual ~CMessageChangeServerRequest();
  
  CMessageChangeServerRequest(const CMessageChangeServerRequest& from);
  
  inline CMessageChangeServerRequest& operator=(const CMessageChangeServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeServerRequest& default_instance();
  void Swap(CMessageChangeServerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeServerRequest& from);
  void MergeFrom(const CMessageChangeServerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 3;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CurrentWorldID = 5;
  inline bool has_currentworldid() const;
  inline void clear_currentworldid();
  static const int kCurrentWorldIDFieldNumber = 5;
  inline ::google::protobuf::uint32 currentworldid() const;
  inline void set_currentworldid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 6;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 6;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 7;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 7;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 8;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 8;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 9;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 9;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 ServerKey = 10;
  inline bool has_serverkey() const;
  inline void clear_serverkey();
  static const int kServerKeyFieldNumber = 10;
  inline ::google::protobuf::uint32 serverkey() const;
  inline void set_serverkey(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 11;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 11;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamFlag = 12;
  inline bool has_teamflag() const;
  inline void clear_teamflag();
  static const int kTeamFlagFieldNumber = 12;
  inline ::google::protobuf::uint32 teamflag() const;
  inline void set_teamflag(::google::protobuf::uint32 value);
  
  // optional uint32 GameID = 13;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIDFieldNumber = 13;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);
  
  // optional string Mac = 14;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 14;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 currentworldid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 serverkey_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 teamflag_;
  ::google::protobuf::uint32 gameid_;
  ::std::string* mac_;
  static const ::std::string _default_mac_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeServerResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeServerResponse();
  virtual ~CMessageChangeServerResponse();
  
  CMessageChangeServerResponse(const CMessageChangeServerResponse& from);
  
  inline CMessageChangeServerResponse& operator=(const CMessageChangeServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeServerResponse& default_instance();
  void Swap(CMessageChangeServerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeServerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeServerResponse& from);
  void MergeFrom(const CMessageChangeServerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 3;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 3;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 ServerKey = 4;
  inline bool has_serverkey() const;
  inline void clear_serverkey();
  static const int kServerKeyFieldNumber = 4;
  inline ::google::protobuf::uint32 serverkey() const;
  inline void set_serverkey(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 5;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 5;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional string Addr = 6;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 6;
  inline const ::std::string& addr() const;
  inline void set_addr(const ::std::string& value);
  inline void set_addr(const char* value);
  inline void set_addr(const char* value, size_t size);
  inline ::std::string* mutable_addr();
  
  // optional uint32 LoginToken = 7;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 7;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 serverkey_;
  ::google::protobuf::uint32 serverid_;
  ::std::string* addr_;
  static const ::std::string _default_addr_;
  ::google::protobuf::uint32 logintoken_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeServerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateRepetionRequest : public ::google::protobuf::Message {
 public:
  CMessageCreateRepetionRequest();
  virtual ~CMessageCreateRepetionRequest();
  
  CMessageCreateRepetionRequest(const CMessageCreateRepetionRequest& from);
  
  inline CMessageCreateRepetionRequest& operator=(const CMessageCreateRepetionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateRepetionRequest& default_instance();
  void Swap(CMessageCreateRepetionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateRepetionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateRepetionRequest& from);
  void MergeFrom(const CMessageCreateRepetionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ReptionIndex = 1;
  inline bool has_reptionindex() const;
  inline void clear_reptionindex();
  static const int kReptionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 reptionindex() const;
  inline void set_reptionindex(::google::protobuf::uint32 value);
  
  // optional uint32 RegKey = 2;
  inline bool has_regkey() const;
  inline void clear_regkey();
  static const int kRegKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 regkey() const;
  inline void set_regkey(::google::protobuf::uint32 value);
  
  // optional uint64 RepetionLevel = 3;
  inline bool has_repetionlevel() const;
  inline void clear_repetionlevel();
  static const int kRepetionLevelFieldNumber = 3;
  inline ::google::protobuf::uint64 repetionlevel() const;
  inline void set_repetionlevel(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 reptionindex_;
  ::google::protobuf::uint32 regkey_;
  ::google::protobuf::uint64 repetionlevel_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateRepetionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateRepetionResponse : public ::google::protobuf::Message {
 public:
  CMessageCreateRepetionResponse();
  virtual ~CMessageCreateRepetionResponse();
  
  CMessageCreateRepetionResponse(const CMessageCreateRepetionResponse& from);
  
  inline CMessageCreateRepetionResponse& operator=(const CMessageCreateRepetionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateRepetionResponse& default_instance();
  void Swap(CMessageCreateRepetionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateRepetionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateRepetionResponse& from);
  void MergeFrom(const CMessageCreateRepetionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 RegKey = 2;
  inline bool has_regkey() const;
  inline void clear_regkey();
  static const int kRegKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 regkey() const;
  inline void set_regkey(::google::protobuf::uint32 value);
  
  // optional uint64 ReptionKey = 3;
  inline bool has_reptionkey() const;
  inline void clear_reptionkey();
  static const int kReptionKeyFieldNumber = 3;
  inline ::google::protobuf::uint64 reptionkey() const;
  inline void set_reptionkey(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 regkey_;
  ::google::protobuf::uint64 reptionkey_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateRepetionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerApplyWarRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerApplyWarRequest();
  virtual ~CMessagePlayerApplyWarRequest();
  
  CMessagePlayerApplyWarRequest(const CMessagePlayerApplyWarRequest& from);
  
  inline CMessagePlayerApplyWarRequest& operator=(const CMessagePlayerApplyWarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerApplyWarRequest& default_instance();
  void Swap(CMessagePlayerApplyWarRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerApplyWarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerApplyWarRequest& from);
  void MergeFrom(const CMessagePlayerApplyWarRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleLevel = 4;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRoleLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::uint32 value);
  
  // optional uint32 RepetionIndex = 5;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 5;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 rolelevel_;
  ::google::protobuf::uint32 repetionindex_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerApplyWarRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerApplyWarResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerApplyWarResponse();
  virtual ~CMessagePlayerApplyWarResponse();
  
  CMessagePlayerApplyWarResponse(const CMessagePlayerApplyWarResponse& from);
  
  inline CMessagePlayerApplyWarResponse& operator=(const CMessagePlayerApplyWarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerApplyWarResponse& default_instance();
  void Swap(CMessagePlayerApplyWarResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerApplyWarResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerApplyWarResponse& from);
  void MergeFrom(const CMessagePlayerApplyWarResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 RegKey = 3;
  inline bool has_regkey() const;
  inline void clear_regkey();
  static const int kRegKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 regkey() const;
  inline void set_regkey(::google::protobuf::uint32 value);
  
  // optional uint32 CanStart = 4;
  inline bool has_canstart() const;
  inline void clear_canstart();
  static const int kCanStartFieldNumber = 4;
  inline ::google::protobuf::uint32 canstart() const;
  inline void set_canstart(::google::protobuf::uint32 value);
  
  // optional uint32 MinLevel = 5;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 6;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 TeamFlag = 7;
  inline bool has_teamflag() const;
  inline void clear_teamflag();
  static const int kTeamFlagFieldNumber = 7;
  inline ::google::protobuf::uint32 teamflag() const;
  inline void set_teamflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 regkey_;
  ::google::protobuf::uint32 canstart_;
  ::google::protobuf::uint32 minlevel_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 teamflag_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerApplyWarResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarEnableNotify : public ::google::protobuf::Message {
 public:
  CMessageWarEnableNotify();
  virtual ~CMessageWarEnableNotify();
  
  CMessageWarEnableNotify(const CMessageWarEnableNotify& from);
  
  inline CMessageWarEnableNotify& operator=(const CMessageWarEnableNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarEnableNotify& default_instance();
  void Swap(CMessageWarEnableNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarEnableNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarEnableNotify& from);
  void MergeFrom(const CMessageWarEnableNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WarRegKey = 1;
  inline bool has_warregkey() const;
  inline void clear_warregkey();
  static const int kWarRegKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 warregkey() const;
  inline void set_warregkey(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamFlag = 3;
  inline bool has_teamflag() const;
  inline void clear_teamflag();
  static const int kTeamFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 teamflag() const;
  inline void set_teamflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 warregkey_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 teamflag_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarEnableNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerLeaveWarNotify : public ::google::protobuf::Message {
 public:
  CMessagePlayerLeaveWarNotify();
  virtual ~CMessagePlayerLeaveWarNotify();
  
  CMessagePlayerLeaveWarNotify(const CMessagePlayerLeaveWarNotify& from);
  
  inline CMessagePlayerLeaveWarNotify& operator=(const CMessagePlayerLeaveWarNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerLeaveWarNotify& default_instance();
  void Swap(CMessagePlayerLeaveWarNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerLeaveWarNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerLeaveWarNotify& from);
  void MergeFrom(const CMessagePlayerLeaveWarNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerLeaveWarNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarEndNotify : public ::google::protobuf::Message {
 public:
  CMessageWarEndNotify();
  virtual ~CMessageWarEndNotify();
  
  CMessageWarEndNotify(const CMessageWarEndNotify& from);
  
  inline CMessageWarEndNotify& operator=(const CMessageWarEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarEndNotify& default_instance();
  void Swap(CMessageWarEndNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarEndNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarEndNotify& from);
  void MergeFrom(const CMessageWarEndNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 ReptionKey = 1;
  inline bool has_reptionkey() const;
  inline void clear_reptionkey();
  static const int kReptionKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 reptionkey() const;
  inline void set_reptionkey(::google::protobuf::uint64 value);
  
  // optional uint32 WarRegKey = 2;
  inline bool has_warregkey() const;
  inline void clear_warregkey();
  static const int kWarRegKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 warregkey() const;
  inline void set_warregkey(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 reptionkey_;
  ::google::protobuf::uint32 warregkey_;
  ::google::protobuf::uint32 reason_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarEndNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickGlobalPlayerNotify : public ::google::protobuf::Message {
 public:
  CMessageKickGlobalPlayerNotify();
  virtual ~CMessageKickGlobalPlayerNotify();
  
  CMessageKickGlobalPlayerNotify(const CMessageKickGlobalPlayerNotify& from);
  
  inline CMessageKickGlobalPlayerNotify& operator=(const CMessageKickGlobalPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickGlobalPlayerNotify& default_instance();
  void Swap(CMessageKickGlobalPlayerNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickGlobalPlayerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickGlobalPlayerNotify& from);
  void MergeFrom(const CMessageKickGlobalPlayerNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickGlobalPlayerNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickGlobalPlayerACK : public ::google::protobuf::Message {
 public:
  CMessageKickGlobalPlayerACK();
  virtual ~CMessageKickGlobalPlayerACK();
  
  CMessageKickGlobalPlayerACK(const CMessageKickGlobalPlayerACK& from);
  
  inline CMessageKickGlobalPlayerACK& operator=(const CMessageKickGlobalPlayerACK& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickGlobalPlayerACK& default_instance();
  void Swap(CMessageKickGlobalPlayerACK* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickGlobalPlayerACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickGlobalPlayerACK& from);
  void MergeFrom(const CMessageKickGlobalPlayerACK& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleWorldID = 3;
  inline bool has_roleworldid() const;
  inline void clear_roleworldid();
  static const int kRoleWorldIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleworldid() const;
  inline void set_roleworldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleworldid_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickGlobalPlayerACK* default_instance_;
};
// -------------------------------------------------------------------

class PBWorldPlayer : public ::google::protobuf::Message {
 public:
  PBWorldPlayer();
  virtual ~PBWorldPlayer();
  
  PBWorldPlayer(const PBWorldPlayer& from);
  
  inline PBWorldPlayer& operator=(const PBWorldPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWorldPlayer& default_instance();
  void Swap(PBWorldPlayer* other);
  
  // implements Message ----------------------------------------------
  
  PBWorldPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWorldPlayer& from);
  void MergeFrom(const PBWorldPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // repeated uint32 RoleID = 2;
  inline int roleid_size() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& roleid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_roleid();
  inline ::google::protobuf::uint32 roleid(int index) const;
  inline void set_roleid(int index, ::google::protobuf::uint32 value);
  inline void add_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > roleid_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBWorldPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSyncGlobalPlayeNotify : public ::google::protobuf::Message {
 public:
  CMessageSyncGlobalPlayeNotify();
  virtual ~CMessageSyncGlobalPlayeNotify();
  
  CMessageSyncGlobalPlayeNotify(const CMessageSyncGlobalPlayeNotify& from);
  
  inline CMessageSyncGlobalPlayeNotify& operator=(const CMessageSyncGlobalPlayeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSyncGlobalPlayeNotify& default_instance();
  void Swap(CMessageSyncGlobalPlayeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSyncGlobalPlayeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSyncGlobalPlayeNotify& from);
  void MergeFrom(const CMessageSyncGlobalPlayeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBWorldPlayer WorldPlayerList = 1;
  inline int worldplayerlist_size() const;
  inline void clear_worldplayerlist();
  static const int kWorldPlayerListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBWorldPlayer >& worldplayerlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWorldPlayer >* mutable_worldplayerlist();
  inline const ::PBWorldPlayer& worldplayerlist(int index) const;
  inline ::PBWorldPlayer* mutable_worldplayerlist(int index);
  inline ::PBWorldPlayer* add_worldplayerlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBWorldPlayer > worldplayerlist_;
  friend void  protobuf_AddDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_AssignDesc_globalserver_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_globalserver_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSyncGlobalPlayeNotify* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMapData

// optional uint32 MapID = 1;
inline bool CMapData::has_mapid() const {
  return _has_bit(0);
}
inline void CMapData::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMapData::mapid() const {
  return mapid_;
}
inline void CMapData::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 PosX = 2;
inline bool CMapData::has_posx() const {
  return _has_bit(1);
}
inline void CMapData::clear_posx() {
  posx_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMapData::posx() const {
  return posx_;
}
inline void CMapData::set_posx(::google::protobuf::uint32 value) {
  _set_bit(1);
  posx_ = value;
}

// optional uint32 PosY = 3;
inline bool CMapData::has_posy() const {
  return _has_bit(2);
}
inline void CMapData::clear_posy() {
  posy_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMapData::posy() const {
  return posy_;
}
inline void CMapData::set_posy(::google::protobuf::uint32 value) {
  _set_bit(2);
  posy_ = value;
}

// optional uint32 LineID = 4;
inline bool CMapData::has_lineid() const {
  return _has_bit(3);
}
inline void CMapData::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMapData::lineid() const {
  return lineid_;
}
inline void CMapData::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(3);
  lineid_ = value;
}

// -------------------------------------------------------------------

// CMessageGlobalTeleportRequest

// optional uint32 ServerType = 1;
inline bool CMessageGlobalTeleportRequest::has_servertype() const {
  return _has_bit(0);
}
inline void CMessageGlobalTeleportRequest::clear_servertype() {
  servertype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::servertype() const {
  return servertype_;
}
inline void CMessageGlobalTeleportRequest::set_servertype(::google::protobuf::uint32 value) {
  _set_bit(0);
  servertype_ = value;
}

// optional uint32 WorldID = 2;
inline bool CMessageGlobalTeleportRequest::has_worldid() const {
  return _has_bit(1);
}
inline void CMessageGlobalTeleportRequest::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::worldid() const {
  return worldid_;
}
inline void CMessageGlobalTeleportRequest::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  worldid_ = value;
}

// optional uint32 ServerID = 3;
inline bool CMessageGlobalTeleportRequest::has_serverid() const {
  return _has_bit(2);
}
inline void CMessageGlobalTeleportRequest::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::serverid() const {
  return serverid_;
}
inline void CMessageGlobalTeleportRequest::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(2);
  serverid_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageGlobalTeleportRequest::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageGlobalTeleportRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::roleid() const {
  return roleid_;
}
inline void CMessageGlobalTeleportRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// optional uint32 AccountID = 5;
inline bool CMessageGlobalTeleportRequest::has_accountid() const {
  return _has_bit(4);
}
inline void CMessageGlobalTeleportRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::accountid() const {
  return accountid_;
}
inline void CMessageGlobalTeleportRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(4);
  accountid_ = value;
}

// optional uint32 OriginalServerID = 6;
inline bool CMessageGlobalTeleportRequest::has_originalserverid() const {
  return _has_bit(5);
}
inline void CMessageGlobalTeleportRequest::clear_originalserverid() {
  originalserverid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::originalserverid() const {
  return originalserverid_;
}
inline void CMessageGlobalTeleportRequest::set_originalserverid(::google::protobuf::uint32 value) {
  _set_bit(5);
  originalserverid_ = value;
}

// optional uint32 OriginalWorldID = 7;
inline bool CMessageGlobalTeleportRequest::has_originalworldid() const {
  return _has_bit(6);
}
inline void CMessageGlobalTeleportRequest::clear_originalworldid() {
  originalworldid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::originalworldid() const {
  return originalworldid_;
}
inline void CMessageGlobalTeleportRequest::set_originalworldid(::google::protobuf::uint32 value) {
  _set_bit(6);
  originalworldid_ = value;
}

// optional uint32 TeleType = 8;
inline bool CMessageGlobalTeleportRequest::has_teletype() const {
  return _has_bit(7);
}
inline void CMessageGlobalTeleportRequest::clear_teletype() {
  teletype_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::teletype() const {
  return teletype_;
}
inline void CMessageGlobalTeleportRequest::set_teletype(::google::protobuf::uint32 value) {
  _set_bit(7);
  teletype_ = value;
}

// optional .CMapData MapData = 9;
inline bool CMessageGlobalTeleportRequest::has_mapdata() const {
  return _has_bit(8);
}
inline void CMessageGlobalTeleportRequest::clear_mapdata() {
  if (mapdata_ != NULL) mapdata_->::CMapData::Clear();
  _clear_bit(8);
}
inline const ::CMapData& CMessageGlobalTeleportRequest::mapdata() const {
  return mapdata_ != NULL ? *mapdata_ : *default_instance_->mapdata_;
}
inline ::CMapData* CMessageGlobalTeleportRequest::mutable_mapdata() {
  _set_bit(8);
  if (mapdata_ == NULL) mapdata_ = new ::CMapData;
  return mapdata_;
}

// optional uint32 GameID = 10;
inline bool CMessageGlobalTeleportRequest::has_gameid() const {
  return _has_bit(9);
}
inline void CMessageGlobalTeleportRequest::clear_gameid() {
  gameid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportRequest::gameid() const {
  return gameid_;
}
inline void CMessageGlobalTeleportRequest::set_gameid(::google::protobuf::uint32 value) {
  _set_bit(9);
  gameid_ = value;
}

// optional string Mac = 11;
inline bool CMessageGlobalTeleportRequest::has_mac() const {
  return _has_bit(10);
}
inline void CMessageGlobalTeleportRequest::clear_mac() {
  if (mac_ != &_default_mac_) {
    mac_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& CMessageGlobalTeleportRequest::mac() const {
  return *mac_;
}
inline void CMessageGlobalTeleportRequest::set_mac(const ::std::string& value) {
  _set_bit(10);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageGlobalTeleportRequest::set_mac(const char* value) {
  _set_bit(10);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageGlobalTeleportRequest::set_mac(const char* value, size_t size) {
  _set_bit(10);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGlobalTeleportRequest::mutable_mac() {
  _set_bit(10);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  return mac_;
}

// -------------------------------------------------------------------

// CMessageGlobalTeleportResponse

// optional uint32 Errcode = 1;
inline bool CMessageGlobalTeleportResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageGlobalTeleportResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::errcode() const {
  return errcode_;
}
inline void CMessageGlobalTeleportResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional string Addr = 2;
inline bool CMessageGlobalTeleportResponse::has_addr() const {
  return _has_bit(1);
}
inline void CMessageGlobalTeleportResponse::clear_addr() {
  if (addr_ != &_default_addr_) {
    addr_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageGlobalTeleportResponse::addr() const {
  return *addr_;
}
inline void CMessageGlobalTeleportResponse::set_addr(const ::std::string& value) {
  _set_bit(1);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void CMessageGlobalTeleportResponse::set_addr(const char* value) {
  _set_bit(1);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void CMessageGlobalTeleportResponse::set_addr(const char* value, size_t size) {
  _set_bit(1);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGlobalTeleportResponse::mutable_addr() {
  _set_bit(1);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  return addr_;
}

// optional uint32 LoginToken = 3;
inline bool CMessageGlobalTeleportResponse::has_logintoken() const {
  return _has_bit(2);
}
inline void CMessageGlobalTeleportResponse::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::logintoken() const {
  return logintoken_;
}
inline void CMessageGlobalTeleportResponse::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(2);
  logintoken_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageGlobalTeleportResponse::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageGlobalTeleportResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::roleid() const {
  return roleid_;
}
inline void CMessageGlobalTeleportResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// optional uint32 LineID = 5;
inline bool CMessageGlobalTeleportResponse::has_lineid() const {
  return _has_bit(4);
}
inline void CMessageGlobalTeleportResponse::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::lineid() const {
  return lineid_;
}
inline void CMessageGlobalTeleportResponse::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(4);
  lineid_ = value;
}

// optional uint32 MapID = 6;
inline bool CMessageGlobalTeleportResponse::has_mapid() const {
  return _has_bit(5);
}
inline void CMessageGlobalTeleportResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::mapid() const {
  return mapid_;
}
inline void CMessageGlobalTeleportResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(5);
  mapid_ = value;
}

// optional uint32 PosX = 7;
inline bool CMessageGlobalTeleportResponse::has_posx() const {
  return _has_bit(6);
}
inline void CMessageGlobalTeleportResponse::clear_posx() {
  posx_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::posx() const {
  return posx_;
}
inline void CMessageGlobalTeleportResponse::set_posx(::google::protobuf::uint32 value) {
  _set_bit(6);
  posx_ = value;
}

// optional uint32 PosY = 8;
inline bool CMessageGlobalTeleportResponse::has_posy() const {
  return _has_bit(7);
}
inline void CMessageGlobalTeleportResponse::clear_posy() {
  posy_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::posy() const {
  return posy_;
}
inline void CMessageGlobalTeleportResponse::set_posy(::google::protobuf::uint32 value) {
  _set_bit(7);
  posy_ = value;
}

// optional uint64 ReptionKey = 10;
inline bool CMessageGlobalTeleportResponse::has_reptionkey() const {
  return _has_bit(8);
}
inline void CMessageGlobalTeleportResponse::clear_reptionkey() {
  reptionkey_ = GOOGLE_ULONGLONG(0);
  _clear_bit(8);
}
inline ::google::protobuf::uint64 CMessageGlobalTeleportResponse::reptionkey() const {
  return reptionkey_;
}
inline void CMessageGlobalTeleportResponse::set_reptionkey(::google::protobuf::uint64 value) {
  _set_bit(8);
  reptionkey_ = value;
}

// optional uint32 TeamFlag = 11;
inline bool CMessageGlobalTeleportResponse::has_teamflag() const {
  return _has_bit(9);
}
inline void CMessageGlobalTeleportResponse::clear_teamflag() {
  teamflag_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::teamflag() const {
  return teamflag_;
}
inline void CMessageGlobalTeleportResponse::set_teamflag(::google::protobuf::uint32 value) {
  _set_bit(9);
  teamflag_ = value;
}

// optional uint32 RepetionIndex = 12;
inline bool CMessageGlobalTeleportResponse::has_repetionindex() const {
  return _has_bit(10);
}
inline void CMessageGlobalTeleportResponse::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::repetionindex() const {
  return repetionindex_;
}
inline void CMessageGlobalTeleportResponse::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(10);
  repetionindex_ = value;
}

// optional uint32 SceneWorldID = 13;
inline bool CMessageGlobalTeleportResponse::has_sceneworldid() const {
  return _has_bit(11);
}
inline void CMessageGlobalTeleportResponse::clear_sceneworldid() {
  sceneworldid_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageGlobalTeleportResponse::sceneworldid() const {
  return sceneworldid_;
}
inline void CMessageGlobalTeleportResponse::set_sceneworldid(::google::protobuf::uint32 value) {
  _set_bit(11);
  sceneworldid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeServerRequest

// optional uint32 RoleID = 1;
inline bool CMessageChangeServerRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageChangeServerRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::roleid() const {
  return roleid_;
}
inline void CMessageChangeServerRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 WorldID = 2;
inline bool CMessageChangeServerRequest::has_worldid() const {
  return _has_bit(1);
}
inline void CMessageChangeServerRequest::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::worldid() const {
  return worldid_;
}
inline void CMessageChangeServerRequest::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  worldid_ = value;
}

// optional uint32 ServerID = 3;
inline bool CMessageChangeServerRequest::has_serverid() const {
  return _has_bit(2);
}
inline void CMessageChangeServerRequest::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::serverid() const {
  return serverid_;
}
inline void CMessageChangeServerRequest::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(2);
  serverid_ = value;
}

// optional uint32 AccountID = 4;
inline bool CMessageChangeServerRequest::has_accountid() const {
  return _has_bit(3);
}
inline void CMessageChangeServerRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::accountid() const {
  return accountid_;
}
inline void CMessageChangeServerRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(3);
  accountid_ = value;
}

// optional uint32 CurrentWorldID = 5;
inline bool CMessageChangeServerRequest::has_currentworldid() const {
  return _has_bit(4);
}
inline void CMessageChangeServerRequest::clear_currentworldid() {
  currentworldid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::currentworldid() const {
  return currentworldid_;
}
inline void CMessageChangeServerRequest::set_currentworldid(::google::protobuf::uint32 value) {
  _set_bit(4);
  currentworldid_ = value;
}

// optional uint32 MapID = 6;
inline bool CMessageChangeServerRequest::has_mapid() const {
  return _has_bit(5);
}
inline void CMessageChangeServerRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::mapid() const {
  return mapid_;
}
inline void CMessageChangeServerRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(5);
  mapid_ = value;
}

// optional uint32 PosX = 7;
inline bool CMessageChangeServerRequest::has_posx() const {
  return _has_bit(6);
}
inline void CMessageChangeServerRequest::clear_posx() {
  posx_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::posx() const {
  return posx_;
}
inline void CMessageChangeServerRequest::set_posx(::google::protobuf::uint32 value) {
  _set_bit(6);
  posx_ = value;
}

// optional uint32 PosY = 8;
inline bool CMessageChangeServerRequest::has_posy() const {
  return _has_bit(7);
}
inline void CMessageChangeServerRequest::clear_posy() {
  posy_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::posy() const {
  return posy_;
}
inline void CMessageChangeServerRequest::set_posy(::google::protobuf::uint32 value) {
  _set_bit(7);
  posy_ = value;
}

// optional uint64 Key = 9;
inline bool CMessageChangeServerRequest::has_key() const {
  return _has_bit(8);
}
inline void CMessageChangeServerRequest::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(8);
}
inline ::google::protobuf::uint64 CMessageChangeServerRequest::key() const {
  return key_;
}
inline void CMessageChangeServerRequest::set_key(::google::protobuf::uint64 value) {
  _set_bit(8);
  key_ = value;
}

// optional uint32 ServerKey = 10;
inline bool CMessageChangeServerRequest::has_serverkey() const {
  return _has_bit(9);
}
inline void CMessageChangeServerRequest::clear_serverkey() {
  serverkey_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::serverkey() const {
  return serverkey_;
}
inline void CMessageChangeServerRequest::set_serverkey(::google::protobuf::uint32 value) {
  _set_bit(9);
  serverkey_ = value;
}

// optional uint32 LineID = 11;
inline bool CMessageChangeServerRequest::has_lineid() const {
  return _has_bit(10);
}
inline void CMessageChangeServerRequest::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::lineid() const {
  return lineid_;
}
inline void CMessageChangeServerRequest::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(10);
  lineid_ = value;
}

// optional uint32 TeamFlag = 12;
inline bool CMessageChangeServerRequest::has_teamflag() const {
  return _has_bit(11);
}
inline void CMessageChangeServerRequest::clear_teamflag() {
  teamflag_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::teamflag() const {
  return teamflag_;
}
inline void CMessageChangeServerRequest::set_teamflag(::google::protobuf::uint32 value) {
  _set_bit(11);
  teamflag_ = value;
}

// optional uint32 GameID = 13;
inline bool CMessageChangeServerRequest::has_gameid() const {
  return _has_bit(12);
}
inline void CMessageChangeServerRequest::clear_gameid() {
  gameid_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessageChangeServerRequest::gameid() const {
  return gameid_;
}
inline void CMessageChangeServerRequest::set_gameid(::google::protobuf::uint32 value) {
  _set_bit(12);
  gameid_ = value;
}

// optional string Mac = 14;
inline bool CMessageChangeServerRequest::has_mac() const {
  return _has_bit(13);
}
inline void CMessageChangeServerRequest::clear_mac() {
  if (mac_ != &_default_mac_) {
    mac_->clear();
  }
  _clear_bit(13);
}
inline const ::std::string& CMessageChangeServerRequest::mac() const {
  return *mac_;
}
inline void CMessageChangeServerRequest::set_mac(const ::std::string& value) {
  _set_bit(13);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageChangeServerRequest::set_mac(const char* value) {
  _set_bit(13);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CMessageChangeServerRequest::set_mac(const char* value, size_t size) {
  _set_bit(13);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeServerRequest::mutable_mac() {
  _set_bit(13);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  return mac_;
}

// -------------------------------------------------------------------

// CMessageChangeServerResponse

// optional uint32 Errcode = 1;
inline bool CMessageChangeServerResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageChangeServerResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeServerResponse::errcode() const {
  return errcode_;
}
inline void CMessageChangeServerResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageChangeServerResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageChangeServerResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeServerResponse::roleid() const {
  return roleid_;
}
inline void CMessageChangeServerResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 WorldID = 3;
inline bool CMessageChangeServerResponse::has_worldid() const {
  return _has_bit(2);
}
inline void CMessageChangeServerResponse::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeServerResponse::worldid() const {
  return worldid_;
}
inline void CMessageChangeServerResponse::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(2);
  worldid_ = value;
}

// optional uint32 ServerKey = 4;
inline bool CMessageChangeServerResponse::has_serverkey() const {
  return _has_bit(3);
}
inline void CMessageChangeServerResponse::clear_serverkey() {
  serverkey_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeServerResponse::serverkey() const {
  return serverkey_;
}
inline void CMessageChangeServerResponse::set_serverkey(::google::protobuf::uint32 value) {
  _set_bit(3);
  serverkey_ = value;
}

// optional uint32 ServerID = 5;
inline bool CMessageChangeServerResponse::has_serverid() const {
  return _has_bit(4);
}
inline void CMessageChangeServerResponse::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeServerResponse::serverid() const {
  return serverid_;
}
inline void CMessageChangeServerResponse::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(4);
  serverid_ = value;
}

// optional string Addr = 6;
inline bool CMessageChangeServerResponse::has_addr() const {
  return _has_bit(5);
}
inline void CMessageChangeServerResponse::clear_addr() {
  if (addr_ != &_default_addr_) {
    addr_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageChangeServerResponse::addr() const {
  return *addr_;
}
inline void CMessageChangeServerResponse::set_addr(const ::std::string& value) {
  _set_bit(5);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void CMessageChangeServerResponse::set_addr(const char* value) {
  _set_bit(5);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void CMessageChangeServerResponse::set_addr(const char* value, size_t size) {
  _set_bit(5);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeServerResponse::mutable_addr() {
  _set_bit(5);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  return addr_;
}

// optional uint32 LoginToken = 7;
inline bool CMessageChangeServerResponse::has_logintoken() const {
  return _has_bit(6);
}
inline void CMessageChangeServerResponse::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageChangeServerResponse::logintoken() const {
  return logintoken_;
}
inline void CMessageChangeServerResponse::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(6);
  logintoken_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateRepetionRequest

// optional uint32 ReptionIndex = 1;
inline bool CMessageCreateRepetionRequest::has_reptionindex() const {
  return _has_bit(0);
}
inline void CMessageCreateRepetionRequest::clear_reptionindex() {
  reptionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionRequest::reptionindex() const {
  return reptionindex_;
}
inline void CMessageCreateRepetionRequest::set_reptionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  reptionindex_ = value;
}

// optional uint32 RegKey = 2;
inline bool CMessageCreateRepetionRequest::has_regkey() const {
  return _has_bit(1);
}
inline void CMessageCreateRepetionRequest::clear_regkey() {
  regkey_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionRequest::regkey() const {
  return regkey_;
}
inline void CMessageCreateRepetionRequest::set_regkey(::google::protobuf::uint32 value) {
  _set_bit(1);
  regkey_ = value;
}

// optional uint64 RepetionLevel = 3;
inline bool CMessageCreateRepetionRequest::has_repetionlevel() const {
  return _has_bit(2);
}
inline void CMessageCreateRepetionRequest::clear_repetionlevel() {
  repetionlevel_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageCreateRepetionRequest::repetionlevel() const {
  return repetionlevel_;
}
inline void CMessageCreateRepetionRequest::set_repetionlevel(::google::protobuf::uint64 value) {
  _set_bit(2);
  repetionlevel_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateRepetionResponse

// optional uint32 Errcode = 1;
inline bool CMessageCreateRepetionResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageCreateRepetionResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionResponse::errcode() const {
  return errcode_;
}
inline void CMessageCreateRepetionResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 RegKey = 2;
inline bool CMessageCreateRepetionResponse::has_regkey() const {
  return _has_bit(1);
}
inline void CMessageCreateRepetionResponse::clear_regkey() {
  regkey_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionResponse::regkey() const {
  return regkey_;
}
inline void CMessageCreateRepetionResponse::set_regkey(::google::protobuf::uint32 value) {
  _set_bit(1);
  regkey_ = value;
}

// optional uint64 ReptionKey = 3;
inline bool CMessageCreateRepetionResponse::has_reptionkey() const {
  return _has_bit(2);
}
inline void CMessageCreateRepetionResponse::clear_reptionkey() {
  reptionkey_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageCreateRepetionResponse::reptionkey() const {
  return reptionkey_;
}
inline void CMessageCreateRepetionResponse::set_reptionkey(::google::protobuf::uint64 value) {
  _set_bit(2);
  reptionkey_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerApplyWarRequest

// optional uint32 WorldID = 1;
inline bool CMessagePlayerApplyWarRequest::has_worldid() const {
  return _has_bit(0);
}
inline void CMessagePlayerApplyWarRequest::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarRequest::worldid() const {
  return worldid_;
}
inline void CMessagePlayerApplyWarRequest::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 ServerID = 2;
inline bool CMessagePlayerApplyWarRequest::has_serverid() const {
  return _has_bit(1);
}
inline void CMessagePlayerApplyWarRequest::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarRequest::serverid() const {
  return serverid_;
}
inline void CMessagePlayerApplyWarRequest::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(1);
  serverid_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessagePlayerApplyWarRequest::has_roleid() const {
  return _has_bit(2);
}
inline void CMessagePlayerApplyWarRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarRequest::roleid() const {
  return roleid_;
}
inline void CMessagePlayerApplyWarRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional uint32 RoleLevel = 4;
inline bool CMessagePlayerApplyWarRequest::has_rolelevel() const {
  return _has_bit(3);
}
inline void CMessagePlayerApplyWarRequest::clear_rolelevel() {
  rolelevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarRequest::rolelevel() const {
  return rolelevel_;
}
inline void CMessagePlayerApplyWarRequest::set_rolelevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  rolelevel_ = value;
}

// optional uint32 RepetionIndex = 5;
inline bool CMessagePlayerApplyWarRequest::has_repetionindex() const {
  return _has_bit(4);
}
inline void CMessagePlayerApplyWarRequest::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarRequest::repetionindex() const {
  return repetionindex_;
}
inline void CMessagePlayerApplyWarRequest::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(4);
  repetionindex_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerApplyWarResponse

// optional uint32 Errcode = 1;
inline bool CMessagePlayerApplyWarResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessagePlayerApplyWarResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarResponse::errcode() const {
  return errcode_;
}
inline void CMessagePlayerApplyWarResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessagePlayerApplyWarResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessagePlayerApplyWarResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarResponse::roleid() const {
  return roleid_;
}
inline void CMessagePlayerApplyWarResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 RegKey = 3;
inline bool CMessagePlayerApplyWarResponse::has_regkey() const {
  return _has_bit(2);
}
inline void CMessagePlayerApplyWarResponse::clear_regkey() {
  regkey_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarResponse::regkey() const {
  return regkey_;
}
inline void CMessagePlayerApplyWarResponse::set_regkey(::google::protobuf::uint32 value) {
  _set_bit(2);
  regkey_ = value;
}

// optional uint32 CanStart = 4;
inline bool CMessagePlayerApplyWarResponse::has_canstart() const {
  return _has_bit(3);
}
inline void CMessagePlayerApplyWarResponse::clear_canstart() {
  canstart_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarResponse::canstart() const {
  return canstart_;
}
inline void CMessagePlayerApplyWarResponse::set_canstart(::google::protobuf::uint32 value) {
  _set_bit(3);
  canstart_ = value;
}

// optional uint32 MinLevel = 5;
inline bool CMessagePlayerApplyWarResponse::has_minlevel() const {
  return _has_bit(4);
}
inline void CMessagePlayerApplyWarResponse::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarResponse::minlevel() const {
  return minlevel_;
}
inline void CMessagePlayerApplyWarResponse::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(4);
  minlevel_ = value;
}

// optional uint32 MaxLevel = 6;
inline bool CMessagePlayerApplyWarResponse::has_maxlevel() const {
  return _has_bit(5);
}
inline void CMessagePlayerApplyWarResponse::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarResponse::maxlevel() const {
  return maxlevel_;
}
inline void CMessagePlayerApplyWarResponse::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  maxlevel_ = value;
}

// optional uint32 TeamFlag = 7;
inline bool CMessagePlayerApplyWarResponse::has_teamflag() const {
  return _has_bit(6);
}
inline void CMessagePlayerApplyWarResponse::clear_teamflag() {
  teamflag_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePlayerApplyWarResponse::teamflag() const {
  return teamflag_;
}
inline void CMessagePlayerApplyWarResponse::set_teamflag(::google::protobuf::uint32 value) {
  _set_bit(6);
  teamflag_ = value;
}

// -------------------------------------------------------------------

// CMessageWarEnableNotify

// optional uint32 WarRegKey = 1;
inline bool CMessageWarEnableNotify::has_warregkey() const {
  return _has_bit(0);
}
inline void CMessageWarEnableNotify::clear_warregkey() {
  warregkey_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWarEnableNotify::warregkey() const {
  return warregkey_;
}
inline void CMessageWarEnableNotify::set_warregkey(::google::protobuf::uint32 value) {
  _set_bit(0);
  warregkey_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageWarEnableNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageWarEnableNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWarEnableNotify::roleid() const {
  return roleid_;
}
inline void CMessageWarEnableNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 TeamFlag = 3;
inline bool CMessageWarEnableNotify::has_teamflag() const {
  return _has_bit(2);
}
inline void CMessageWarEnableNotify::clear_teamflag() {
  teamflag_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWarEnableNotify::teamflag() const {
  return teamflag_;
}
inline void CMessageWarEnableNotify::set_teamflag(::google::protobuf::uint32 value) {
  _set_bit(2);
  teamflag_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerLeaveWarNotify

// optional uint32 RoleID = 1;
inline bool CMessagePlayerLeaveWarNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessagePlayerLeaveWarNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveWarNotify::roleid() const {
  return roleid_;
}
inline void CMessagePlayerLeaveWarNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 Reason = 2;
inline bool CMessagePlayerLeaveWarNotify::has_reason() const {
  return _has_bit(1);
}
inline void CMessagePlayerLeaveWarNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveWarNotify::reason() const {
  return reason_;
}
inline void CMessagePlayerLeaveWarNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(1);
  reason_ = value;
}

// -------------------------------------------------------------------

// CMessageWarEndNotify

// optional uint64 ReptionKey = 1;
inline bool CMessageWarEndNotify::has_reptionkey() const {
  return _has_bit(0);
}
inline void CMessageWarEndNotify::clear_reptionkey() {
  reptionkey_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMessageWarEndNotify::reptionkey() const {
  return reptionkey_;
}
inline void CMessageWarEndNotify::set_reptionkey(::google::protobuf::uint64 value) {
  _set_bit(0);
  reptionkey_ = value;
}

// optional uint32 WarRegKey = 2;
inline bool CMessageWarEndNotify::has_warregkey() const {
  return _has_bit(1);
}
inline void CMessageWarEndNotify::clear_warregkey() {
  warregkey_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWarEndNotify::warregkey() const {
  return warregkey_;
}
inline void CMessageWarEndNotify::set_warregkey(::google::protobuf::uint32 value) {
  _set_bit(1);
  warregkey_ = value;
}

// optional uint32 Reason = 3;
inline bool CMessageWarEndNotify::has_reason() const {
  return _has_bit(2);
}
inline void CMessageWarEndNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWarEndNotify::reason() const {
  return reason_;
}
inline void CMessageWarEndNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(2);
  reason_ = value;
}

// -------------------------------------------------------------------

// CMessageKickGlobalPlayerNotify

// optional uint32 RoleID = 1;
inline bool CMessageKickGlobalPlayerNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageKickGlobalPlayerNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickGlobalPlayerNotify::roleid() const {
  return roleid_;
}
inline void CMessageKickGlobalPlayerNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 Reason = 2;
inline bool CMessageKickGlobalPlayerNotify::has_reason() const {
  return _has_bit(1);
}
inline void CMessageKickGlobalPlayerNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickGlobalPlayerNotify::reason() const {
  return reason_;
}
inline void CMessageKickGlobalPlayerNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(1);
  reason_ = value;
}

// -------------------------------------------------------------------

// CMessageKickGlobalPlayerACK

// optional uint32 RoleID = 1;
inline bool CMessageKickGlobalPlayerACK::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageKickGlobalPlayerACK::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickGlobalPlayerACK::roleid() const {
  return roleid_;
}
inline void CMessageKickGlobalPlayerACK::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageKickGlobalPlayerACK::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageKickGlobalPlayerACK::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickGlobalPlayerACK::accountid() const {
  return accountid_;
}
inline void CMessageKickGlobalPlayerACK::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 RoleWorldID = 3;
inline bool CMessageKickGlobalPlayerACK::has_roleworldid() const {
  return _has_bit(2);
}
inline void CMessageKickGlobalPlayerACK::clear_roleworldid() {
  roleworldid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageKickGlobalPlayerACK::roleworldid() const {
  return roleworldid_;
}
inline void CMessageKickGlobalPlayerACK::set_roleworldid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleworldid_ = value;
}

// -------------------------------------------------------------------

// PBWorldPlayer

// optional uint32 WorldID = 1;
inline bool PBWorldPlayer::has_worldid() const {
  return _has_bit(0);
}
inline void PBWorldPlayer::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBWorldPlayer::worldid() const {
  return worldid_;
}
inline void PBWorldPlayer::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// repeated uint32 RoleID = 2;
inline int PBWorldPlayer::roleid_size() const {
  return roleid_.size();
}
inline void PBWorldPlayer::clear_roleid() {
  roleid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldPlayer::roleid() const {
  return roleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldPlayer::mutable_roleid() {
  return &roleid_;
}
inline ::google::protobuf::uint32 PBWorldPlayer::roleid(int index) const {
  return roleid_.Get(index);
}
inline void PBWorldPlayer::set_roleid(int index, ::google::protobuf::uint32 value) {
  roleid_.Set(index, value);
}
inline void PBWorldPlayer::add_roleid(::google::protobuf::uint32 value) {
  roleid_.Add(value);
}

// -------------------------------------------------------------------

// CMessageSyncGlobalPlayeNotify

// repeated .PBWorldPlayer WorldPlayerList = 1;
inline int CMessageSyncGlobalPlayeNotify::worldplayerlist_size() const {
  return worldplayerlist_.size();
}
inline void CMessageSyncGlobalPlayeNotify::clear_worldplayerlist() {
  worldplayerlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWorldPlayer >&
CMessageSyncGlobalPlayeNotify::worldplayerlist() const {
  return worldplayerlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWorldPlayer >*
CMessageSyncGlobalPlayeNotify::mutable_worldplayerlist() {
  return &worldplayerlist_;
}
inline const ::PBWorldPlayer& CMessageSyncGlobalPlayeNotify::worldplayerlist(int index) const {
  return worldplayerlist_.Get(index);
}
inline ::PBWorldPlayer* CMessageSyncGlobalPlayeNotify::mutable_worldplayerlist(int index) {
  return worldplayerlist_.Mutable(index);
}
inline ::PBWorldPlayer* CMessageSyncGlobalPlayeNotify::add_worldplayerlist() {
  return worldplayerlist_.Add();
}

#endif  // PROTOBUF_globalserver_5fpb_2ehxx__INCLUDED
