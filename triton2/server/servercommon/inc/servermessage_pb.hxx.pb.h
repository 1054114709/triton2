// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_servermessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_servermessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "ibstore_pb.hxx.pb.h"
#include "property_pb.hxx.pb.h"
#include "countrymessage_pb.hxx.pb.h"
#include "boursemessage_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();

class CMessageYQSActivtyStartNotice;
class CMessageS2GGetCampRankForYQSRequest;
class CampRankForYQSForSever;
class CMessageG2SGetCampRankForYQSResponse;
class CMessageS2GUpdateYQSGrowingRequest;
class CMessageG2SUpdateYQSGrowingResponse;
class CMessageG2SSettleNotice;
class CMessageInternalTimeOut;
class CMessageCountryInfo;
class CMessageRedirectGErrorCode;
class CMessageRedirectSErrorCode;
class CMessagePlayerRedirectEnterMapResponse;
class CMessageGateInfoNotice;
class CMessageGateInfoResponse;
class CMessagePlayerEnterGateNotice;
class CMessagePlayerEnterGateResponse;
class CMessagePlayerLeaveGateNotice;
class CMessageServerInfoNotice;
class CMessageServerInfoResponse;
class CMessagePlayerEnterMapNotice;
class CMessagePlayerRedirectMapNotice;
class CMessagePlayerEnterMapResponse;
class CMessagePlayerLoginCompleteNotice;
class CMessagePlayerLeaveMapNotice;
class CMessagePlayerLeaveMapResponse;
class CMessagePlayerReturn2GateNotice;
class CMessagePlayerReturn2GateResponse;
class CMessageCreateMapNotice;
class CMessageCreateMapResponse;
class BattleLevel;
class PBDate;
class PBDateSpace;
class CMessageRegistRepetionInfo;
class CMessageDestroyRepetionMap;
class CMessageG2SRepetionEventCode;
class CMessagePlayerRedirectRequest;
class CMessagePlayerRedirectResponse;
class CMessagePlayerEnterConfirmNotice;
class CMessageSceneNotOpenNotice;
class CMessageUpdateVersionNotice;
class CMessageRegistServerRequest;
class CMessageRegistServerResponse;
class CMessageHeartBeatNotice;
class CMessagePlayerOnLineFriendRequest;
class PBSinglePlayerInfo;
class CMessagePlayerOnLineFriendResponse;
class CMessagePlayerChangeStatusNotice;
class CMessageGameHeartBeatNotice;
class CMessageERatingProtoStream;
class CMessageERatingStateNotice;
class CMessageCreateGateTeamRequest;
class CMessageCreateGateTeamResponse;
class CMessageJoinGateTeamRequest;
class CMessageJoinGateTeamResponse;
class CMessageRequestJoinReply;
class CMessageJoinGateTeamInvite;
class CMessageJoinTeamInviteResponse;
class CMessageInviteJoinReply;
class CMessageInvite2Request;
class CMessageKickoutGateTeamRequest;
class CMessageChangeHeaderRequest;
class CMessageChangeDistributeRequest;
class CMessageChangeDistributeResponse;
class CMessageLeaveGateTeamRequest;
class CMessageEndGateTeamRequest;
class CMessageNotifySceneToUpdateTeam;
class CMessageNotifySceneToSendTeamList;
class CMessageNotifyErrToScene;
class CMessageUpdateTeamPropertyRequest;
class CMessageUpdateTeamPropertyResponse;
class CMessageFollowRequest;
class CMessageFollowResponse;
class CMessageSendClaimRecruitRequest;
class CMessageSendClaimRecruitResponse;
class CMessageQueryClaimRecruitRequest;
class CMessageQueryClaimRecruitResponse;
class CMessageDeleteClaimRecruitRequest;
class CMessageDeleteClaimRecruitResponse;
class CMessageObtainGateTeamRequest;
class CMessageClearInvReqRecordRequest;
class PBMsg;
class PBTeamItem;
class PBTeamInfo;
class CMessageGateShutDownNotice;
class CMessageKickOffPlayerRequest;
class CMessageKickOffPlayerResponse;
class CMessageGetPlayerMailiInfoRequest;
class CMessageGetPlayerMailInfoResponse;
class CMessageChangeMailCountNotify;
class CMessageUserIbExchangeNotice;
class CMessageUserUseIbItemNotice;
class CMessageAddFriendRequest;
class CMessageAddFriendResponse;
class CMessageGetCharIDRequest;
class CMessageGetCharIDResponse;
class CMessageRoleChangeCampNotice;
class CMessageLoginSvrStartUpNotice;
class CMessageGate2LoginHeartBeatNotice;
class PBPersonalRankInfo;
class CMessagePersonalRankInfoNotify;
class PBRankTopTen;
class CMessageRankRemove;
class CMessagePersonalRankInfoRequest;
class CMessageNewRankTopTenNotify;
class CMessageRoleGameInfoReportToGateNotify;
class CMessageBattleTeamWait;
class CMessageBattleWaitLeaveRequest;
class CMessageBattleJoinNotice;
class CMessageBattlePlayerJoin;
class CMessageBattleWaitNotice;
class CMessageServerValidateRequest;
class CMessageBattleWaitLeaveResponse;
class CMessageServerValidateResponse;
class CTracedPlayerInfo;
class CMessageNotifyTracedPlayer;
class CMessageBattleCreateRequest;
class CMessageBattleCreateResponse;
class CMessageFamilyIDNameNotify;
class PBCorpsNpc;
class CMessageNpcListNotify;
class CMessageBidTimeOutNotify;
class CMessageBattleStartRequest;
class CMessageBattleStartResponse;
class CMessageBattleEndNotify;
class CMessageBidRestartNotify;
class CMessageObtainTopTenRequest;
class PBRankTitle;
class CMessageObtainTopTenResponse;
class CMessageCorpsBidTimerStopRequest;
class CMessageCorpsJoinBattleNotice;
class CMessageNotifyBattleResult2Gate;
class CMessageCorpsBattleFlagRequest;
class CMessageCorpsBattleFlagResponse;
class CMessageCreateRepetionNotify;
class CMessageCreateRepetionErr;
class CMessageTeamIntoRepetion;
class CMessageSingleIntoRepetion;
class CMessageCorpsStartBattleRequest;
class CMessageIntoRepetionNotify;
class CMessageChangeFamilyContributeNotify;
class CMessageChangeFamilyGloryNotify;
class CMessageChangeFamilyMoneyNotify;
class CMessageSynIbStoreRequest;
class CMessageSynIbStoreResponse;
class CMessageSynFuncStoreRequest;
class CMessageSynFuncStoreResponse;
class CMessageChangeCorpsContributeNotify;
class CMessageChangeCorpsGloryNotify;
class CMessageChangeCorpsMoneyNotify;
class CMessageChangeCorpsBossTimes;
class CMessageChangeCorpsBossRefineValue;
class CMessageChangeCorpsCollectActive;
class CMessageFamilyApExpChangedNotify;
class CMessageCorpsApExpChangedNotify;
class CMessageChangeJudgeScoreReuqest;
class CMessageChangeWizardRequest;
class CMessageChangeWizardResponse;
class CMessageChangeConstructRequest;
class CMessageChangeConstructResponse;
class CMessageChangePowerRequest;
class CMessageChangePowerResponse;
class CMessageUseFunctionNotify;
class CMessageSetOfficialNotify;
class CMessageChangeFriendNotify;
class CMessageKillPersonRequest;
class CMessageKillPersonResponse;
class CMessageSyncNationNotify;
class CMessageBuyFamilyItemRequest;
class CMessageBuyFamilyItemResponse;
class CMessageBuyCorpsItemRequest;
class CMessageBuyCorpsItemResponse;
class CMessageClearFamilyRepetionInfoNotify;
class CMessageJudgeModifySuccessNotice;
class CMessage4EQueryYuanBaoRequest;
class CMessage4EQueryYuanBaoResponse;
class CMessage4EDrawYuanBaoRequest;
class CMessage4EDrawYuanBaoResponse;
class CMessageFamilyExchangeRequest;
class CMessageFamilyExchangeResponse;
class CMessageCorpsExchangeRequest;
class CMessageCorpsExchangeResponse;
class CMessageAddFamilyExchangeItemNotify;
class CMessageAddCorpsExchangeItemNotify;
class CMessageGateEntityGMMove;
class CMessageSceneEntityGMMove;
class SingleActivityObj;
class DropInfo;
class MapDrop;
class SingleActivityInfo;
class CMessageTodayActivitysNotify;
class SingleActivity;
class CMessageActivityChangeNotify;
class CMessageChangePasswordStatusNotify;
class CMessageUpdateNationTitleNotice;
class CMessageGetNationTitleListRequest;
class CMessageGetNationTitleListResponse;
class CMessageSGProVipFlagNotice;
class CMessageResetRolePasswordNotify;
class CMessgeSafeShutdownNotify;
class CMessgeSafeShutdownAck;
class CMessageRollCorpsMoneyRequest;
class CMessageCorpsBattleMapNotice;
class CMessageTrySummonRequest;
class CMessageTrySummonResponse;
class CMessageRealSummonRequest;
class CMessageRealSummonNotify;
class CMessageLockGoodsRequest;
class CMessageLockGoodsResponse;
class CMessageS2GRoleMove;
class CMessageG2SRoleMove;
class CMessageWarChangeNotify;
class CMessageReliveChangeNotify;
class WarHonorData;
class CMessageObtainWarHonorNotify;
class CMessageBourseG2SLoadList;
class CMessageBourseS2GLoadList;
class CMessageSyncWarStatusNotify;
class CMessageWarControlNotify;
class CMessageBourseTradeNotice;
class CMessageReSavePlayerRequest;
class CMessageReSavePlayerResponse;
class CMessageBoursePlayerTradeBuyNotice;
class CMessageBoursePlayerTradeSellNotice;
class CMessageWarStoneOverNotify;
class CMessageCreateWarStoneNotify;
class CMessageAddTaxNotify;
class CMessageSendSysMailToPlayer;
class CMessageCampAddHonerScore;
class CMessageBattleTeamFixWait;
class CMessageActivityEventNotify;
class CMessageAddMasterPointRequest;
class CMessageAddMasterPointNotify;
class CMessageBattleSingleFixWait;
class CMessageSpecialEventNotify;
class CMessageAcquireMasterNotify;
class CMessageBattleWinnerNotify;
class CMessageChangeFamilyStabilityNotify;
class CMessageS2GJoinOnTimeOpenBattleRequest;
class CMessageSyncGTAndLWNotify;
class CMessageS2GBattleClose;
class CMessageS2GIntoCorpsBossRepetion;
class CMessgeS2GEndCorpsBossRepetion;
class PBGroupTasks;
class CMessageGateCheckGroupPublishRequest;
class CMessageGatePublishGroupRequest;
class PBGroupInfo;
class CMessageGateCheckGroupPublishResponse;
class CMessageGatePublishGroupResponse;

enum EMServerMessageID {
  ID_INTER_TIMEOUT = 32768,
  ID_G2L_GATE_INFO_NOTICE = 32769,
  ID_L2G_GATE_INFO_RESPONSE = 32770,
  ID_S2G_SERVER_INFO_NOTICE = 32774,
  ID_G2S_SERVER_INFO_RESPONSE = 32775,
  ID_G2S_CREATE_MAP_NOTICE = 32783,
  ID_S2G_CREATE_MAP_RESPONSE = 32784,
  ID_G2S_SCENE_NOT_OPEN_NOTICE = 32788,
  ID_G2L_UPDATE_VERSION_NOTICE = 32789,
  ID_X2X_ERATING_PROTO_STREAM = 32790,
  ID_L2G_ERATING_STATUS_NOTICE = 32791,
  ID_G2L_GATE_SHUTDOWN_NOTICE = 32792,
  ID_G2L_HEARTBEAT_NOTICE = 32793,
  ID_X2P_REGIST_SERVER_REQUEST = 32800,
  ID_P2X_REGIST_SERVER_RESPONSE = 32801,
  ID_X2P_HEART_BEAT_NOTICE = 32802,
  ID_G2S_COUNTRY_INFO = 32816,
  ID_S2G_GAME_HEART_BEAT_NOTICE = 32817,
  ID_A2G_GAME_PRIVILEGE_NOTICE = 32818,
  ID_G2S_NOTIFY_SAFE_SHUTDOWN = 32819,
  ID_S2G_REGIST_REPETION_INFO = 32820,
  ID_S2G_ACK_SAFE_SHUTDOWN = 32821,
  ID_L2G_LOGINSVRSTARTUP_NOTICE = 32832,
  ID_L2G_PLAYER_ENTER_GATE_NOTICE = 33795,
  ID_G2L_PLAYER_ENTER_GATE_RESPONSE = 33796,
  ID_G2L_PLAYER_LEAVE_GATE_NOTICE = 33797,
  ID_G2S_PLAYER_ENTER_MAP_NOTICE = 33800,
  ID_S2G_PLAYER_ENTER_MAP_RESPONSE = 33801,
  ID_G2S_PLAYER_LOGIN_COMPLETE_NOTICE = 33802,
  ID_S2G_PLAYER_LEAVE_MAP_NOTICE = 33803,
  ID_G2S_PLAYER_LEAVE_MAP_RESPONSE = 33804,
  ID_S2G_PLAYER_RETURN2GATE_NOTICE = 33805,
  ID_G2S_PLAYER_RETURN2GATE_RESPONSE = 33806,
  ID_S2G_PLAYER_REDIRECT_REQUEST = 33809,
  ID_G2S_PLAYER_REDIRECT_RESPONSE = 33810,
  ID_S2G_PLAYER_ENTER_CONFIRM_NOTICE = 33811,
  ID_G2S_KICKOFF_PLAYER_REQUEST = 33827,
  ID_S2G_KICKOFF_PLAYER_RESPONSE = 33828,
  ID_G2S_REDIRECT_MAP_NOTICE = 33830,
  ID_S2G_REDIRECT_ENTER_MAP_RESPONSE = 33831,
  ID_G2S_REDIRECT_G_ERROR_CODE = 33832,
  ID_S2G_REDIRECT_S_ERROR_CODE = 33833,
  ID_S2G_SERVICE_MAILCOUNT_NOTICE = 33845,
  ID_S2G_ENTITY_GM_MOVE = 33846,
  ID_G2S_ENTITY_GM_MOVE = 33847,
  ID_S2G_ROLECHANGECAMP_NOTICE = 33849,
  ID_S2G_NOTIFY_ROLEGAMEINFO2GATE = 33857,
  ID_G2S_TRACEDPLAYER_NOTIFY = 33858,
  ID_G2S_NOTIFY_CREATE_REPETION = 33859,
  ID_S2G_NOTIFY_CHANGEPASSWORDSTATUS = 33860,
  ID_S2G_NOTIFY_VIPFLAG = 33861,
  ID_G2S_NOTIFY_RESETROLEPASSWORD = 33862,
  ID_S2G_ROLE_MOVE = 33863,
  ID_G2S_ROLE_MOVE = 33864,
  ID_G2S_REQUEST_RESAVEPLAYER = 33865,
  ID_S2G_RESPONSE_RESAVEPLAYER = 33866,
  ID_S2G_REQUEST_PLAYERPBULISHTASK = 36865,
  ID_G2S_RESPONSE_PBULISHTASKRESULT = 36866,
  ID_S2G_REQUEST_CHECKPUBLISHBOARD = 36867,
  ID_G2S_RESPONSE_CHECKPUBLISHBOARD = 36868,
  ID_S2G_PLAYER_ONLINE_FRIEND_REQUEST = 38913,
  ID_G2S_PLAYER_ONLINE_FIREND_RESPONSE = 38914,
  ID_S2G_PLAYER_CHANGE_STATUS_NOTICE = 38915,
  ID_S2G_ADDFRIEND_REQUEST = 38916,
  ID_G2S_ADDFRIEND_RESPONSE = 38917,
  ID_S2G_GETCHARID_REQUEST = 38918,
  ID_G2S_GETCHARID_RESPONSE = 38919,
  ID_S2G_ADDMASTERPOINT_REQUEST = 38920,
  ID_G2S_ADDMASTERPOINT_NOTIFY = 38921,
  ID_S2G_ACQUIREMASTER_NOTIFY = 38922,
  ID_S2G_REQUEST_CREATETEAMATGATE = 39937,
  ID_S2G_REQUEST_JOINREQUEST = 39938,
  ID_S2G_REQUEST_REPLYJOINREQUEST = 39939,
  ID_S2G_REQUEST_JOININVITE = 39940,
  ID_S2G_REQUEST_REPLYJOININVITE = 39941,
  ID_S2G_REQUEST_KICKOUTTEAM = 39942,
  ID_S2G_REQUEST_CHANGEHEADER = 39943,
  ID_S2G_REQUEST_LEAVETEAM = 39944,
  ID_S2G_REQUEST_ENDTEAM = 39945,
  ID_G2S_NOTIFY_ERRORNOTICE = 39946,
  ID_G2S_RESPONSE_CREATETEAM = 39947,
  ID_G2S_RESPONSE_JOINREQUEST = 39948,
  ID_G2S_RESPONSE_JOININVITE = 39949,
  ID_G2S_NOTIFY_UPDATETEAM = 39950,
  ID_G2S_NOTIFY_SENDLIST = 39951,
  ID_G2S_RESPONSE_INVITEREQUEST = 39952,
  ID_S2G_REQUEST_UPDATETEAMPRO = 39953,
  ID_G2S_RESPONSE_UPDATETEAMPRO = 39954,
  ID_S2G_REQUEST_CLAIMRECRUIT = 39955,
  ID_S2G_REQUEST_QUERYCLAIMRECRUIT = 39956,
  ID_G2S_RESPONSE_QUERYCLAIMRECRUIT = 39957,
  ID_G2S_RESPONSE_CLAIMRECRUIT = 39958,
  ID_S2G_REQUEST_FOLLOW = 39959,
  ID_G2S_RESPONSE_FOLLOW = 39960,
  ID_S2G_REQUEST_DELETECLAIMRECRUIT = 39961,
  ID_G2S_RESPONSE_DELETECLAIMRECRUIT = 39962,
  ID_S2G_REQUEST_DISTRIBUTE = 39963,
  ID_G2S_RESPONSE_DISTRIBUTE = 39964,
  ID_S2G_REQUEST_OBTAINTEAMATGATE = 39965,
  ID_S2G_REQUEST_CLEARRECORD = 39966,
  ID_C2G_REQUEST_GETMAILINFO = 40961,
  ID_G2S_RESPONSE_GETMAIINFO = 40962,
  ID_G2S_NOTIFY_SENDSYSMAILTOPLAYER = 40963,
  ID_S2G_DESTROY_REPETION_MAP = 44033,
  ID_S2G_BATTLE_TEAM_WAIT = 44034,
  ID_S2G_BATTLE_WAIT_LEAVE_REQUEST = 44035,
  ID_G2S_BATTLE_JOIN_NOTICE = 44036,
  ID_S2G_BATTLE_PLAYER_JOIN = 44037,
  ID_G2S_BATTLE_WAIT_NOTICE = 44038,
  ID_G2S_BATTLE_WAIT_LEAVE_RESPONSE = 44039,
  ID_S2G_BATTLE_CREATE_REQUEST = 44040,
  ID_G2S_BATTLE_CREATE_RESPONSE = 44041,
  ID_S2G_CREATE_REPETION_ERR = 44042,
  ID_S2G_INTO_REPETION_TEAM = 44043,
  ID_S2G_INTO_REPETION_SINGLE = 44044,
  ID_G2S_INTO_REPETION_NOTIFY = 44045,
  ID_G2S_REPETION_EVENT_CODE = 44046,
  ID_S2G_BATTLE_TEAM_FIX_WAIT = 44047,
  ID_S2G_BATTLE_SINGLE_FIX_WAIT = 44048,
  ID_S2G_BATTLE_FIX_WAIT_LEAVE_REQUEST = 44049,
  ID_S2G_REPETION_BATTLE_WINNER_NOTIFY = 44050,
  ID_S2G_JOIN_ONTIME_OPEN_BATTLE_REQUEST = 44051,
  ID_S2G_BATTLE_CLOSE = 44052,
  ID_S2G_INTO_CORPSBOSS_REPETION = 44053,
  ID_S2G_END_CORPSBOSS_REPETION = 44054,
  ID_G2S_TODAYACTIVITYS_LIST_NOTIFY = 45057,
  ID_G2S_ACTIVITY_CHANGE_NOTIFY = 45058,
  ID_G2S_ACTIVITY_EVENT_NOTIFY = 45059,
  ID_S2G_GETCAMPRANKFORYQS_REQUEST = 45060,
  ID_G2S_GETCAMPRANKFORYQS_RESPONSE = 45061,
  ID_S2G_UPDATEYQSGROWING_REQUEST = 45062,
  ID_G2S_UPDATEYQSGROWING_RESPONSE = 45063,
  ID_G2S_SETTLE_NOTICE = 45064,
  ID_G2S_YAOQIANSHUSTART_NOTICE = 45065,
  ID_S2G_REQUEST_FAMILYMSG = 46081,
  ID_G2S_RESPONSE_FAMILYMSG = 46082,
  ID_G2S_NOTIFY_FAMILYIDNAME = 46083,
  ID_G2S_NOTIFY_NPCLIST = 46084,
  ID_S2G_NOTIFY_BIDTIMEOUT = 46085,
  ID_S2G_REQUEST_BATTLESTART = 46086,
  ID_G2S_RESPONSE_BATTLESTART = 46087,
  ID_S2G_NOTIFY_BATTLEEND = 46088,
  ID_G2S_NOTIFY_BIDRESTART = 46089,
  ID_S2G_NOTIFY_CHANGEFAMILYCONTRIBUTE = 46090,
  ID_S2G_NOTIFY_CHANGEFAMILYGLORY = 46091,
  ID_S2G_NOTIFY_CHANGEFAMILYMONEY = 46092,
  ID_S2G_NOTIFY_FAMILYAPANDEXPCHANGED = 46093,
  ID_S2G_REQUEST_BUYFAMILYITEM = 46094,
  ID_G2S_RESPONSE_BUYFAMILYITEM = 46095,
  ID_G2S_NOTIFY_CLEARFAMILYREPETIONIFO = 46096,
  ID_S2G_REQUEST_FAMILYEXCHANGE = 46097,
  ID_G2S_RESPONSE_FAMILYEXCHANGE = 46098,
  ID_S2G_NOTIFY_ADDFAMILYEXCHANGEITEM = 46099,
  ID_S2G_NOTIFY_CHANGEFAMILYSTABILITY = 46100,
  ID_S2G_REQUEST_BIDTIMERSTOP = 47105,
  ID_G2S_NOTIFY_JOINBATTLE = 47106,
  ID_S2G_REQUEST_BATTLERESULT = 47107,
  ID_S2G_REQUEST_BATTLEFLAG = 47108,
  ID_G2S_RESPONSE_BATTLEFLAG = 47109,
  ID_S2G_REQUEST_STARTCOPRSBATTLE = 47110,
  ID_S2G_NOTIFY_CHANGECORPSCONTRIBUTE = 47111,
  ID_S2G_NOTIFY_CHANGECORPSGLORY = 47112,
  ID_S2G_NOTIFY_CHANGECORPSMONEY = 47113,
  ID_S2G_NOTIFY_CORPSAPEXPCHANGED = 47114,
  ID_S2G_REQUEST_BUYCORPSITEM = 47115,
  ID_G2S_RESPONSE_BUYCORPSITEM = 47116,
  ID_S2G_REQUEST_CORPSEXCHANGE = 47117,
  ID_G2S_RESPONSE_CORPSEXCHANGE = 47118,
  ID_S2G_REQUEST_ADDCORPSEXCHANGEITEM = 47119,
  ID_S2G_REQUEST_CALLBACK_CORPSMONEY = 47120,
  ID_S2G_REQUEST_BATTLEMAP = 47121,
  ID_S2G_CHANGE_CORPSBOSSTIMES = 47122,
  ID_S2G_CHANGE_CORPSBOSSREFINEVALUE = 47123,
  ID_S2G_CHANGE_CORPSCOLLECTACTIVE = 47124,
  ID_S2G_NOTIFY_PERSONALRANKINFO = 48129,
  ID_G2S_REQUEST_PERSONALRANKINFO = 48130,
  ID_G2S_NOTIFY_NEWTOPTEN = 48131,
  ID_S2G_REQUEST_TOPTEN = 48132,
  ID_G2S_RESPONSE_TOPTEN = 48133,
  ID_S2G_RANK_REMOVE = 48134,
  ID_G2E_IBEXCHANGE_NOTICE = 51201,
  ID_S2E_IBITEMUSED_NOTICE = 51202,
  ID_S2G_LISTIBITEMS_REQUEST = 51203,
  ID_G2S_LISTIBITEMS_RESPONSE = 51204,
  ID_S2G_PURCHASEIBITEM_REQUEST = 51205,
  ID_G2S_PURCHASEIBITEM_RESPONSE = 51206,
  ID_S2G_ROLEIBTRANS_NOTIFY = 51207,
  ID_S2V_SERVERVALIDATE_REQUEST = 51208,
  ID_V2S_SERVERVALIDATE_RESPONSE = 51209,
  ID_S2G_SYNIBSTORE_REQUEST = 51210,
  ID_G2S_SYNIBSTORE_RESPONSE = 51211,
  ID_S2G_QUERYYUANBAO_REQUEST = 51212,
  ID_G2S_QUERYYUANBAO_RESPONSE = 51213,
  ID_S2G_DRAWYUANBAO_REQUEST = 51214,
  ID_G2S_DRAWYUANBAO_RESPONSE = 51215,
  ID_S2G_LOCKGOODS_REQUEST = 51216,
  ID_G2S_LOCKGOODS_RESPONSE = 51217,
  ID_G2S_NOTIFY_IBSTOREPROMOTION = 51218,
  ID_S2G_SYNFUNCSTORE_REQUEST = 51219,
  ID_G2S_SYNFUNCSTORE_RESPONSE = 51220,
  ID_S2G_REQUEST_CHANGESCORE = 52225,
  ID_G2S_NOTIFY_JUDGEMODIFY = 52226,
  ID_S2G_REQUEST_CHANGEWIZARD = 54273,
  ID_G2S_RESPONSE_CHANGEWIZARD = 54274,
  ID_S2G_REQUEST_CHANGECONSTRUCT = 54275,
  ID_G2S_REQPONSE_CHANGECONSTRUCT = 54276,
  ID_S2G_REQUEST_CHANGEPOWER = 54277,
  ID_G2S_RESPONSE_CHANGEPOWER = 54278,
  ID_G2S_NOTIFY_USEFUNCTION = 54279,
  ID_G2S_NOTIFY_SETOFFICIAL = 54280,
  ID_S2G_NOTIFY_CHANGEFRIEND = 54281,
  ID_S2G_REQUEST_KILLPERSON = 54282,
  ID_G2S_RESPONSE_KILLPERSON = 54283,
  ID_G2S_NOTIFY_SYNCNATION = 54284,
  ID_G2S_NOTIFY_NATIONTITLE = 54285,
  ID_S2G_REQUEST_NATIONTITLELIST = 54286,
  ID_G2S_RESPONSE_NATIONTITLELIST = 54287,
  ID_S2G_REQUEST_TRYSUMMON = 54288,
  ID_G2S_RESPONSE_TRYSUMMON = 54289,
  ID_S2G_REQUEST_REALSUMMON = 54290,
  ID_G2S_NOTIFY_REALSUMMON = 54291,
  ID_S2G_NOTIFY_WARCHANGE = 54292,
  ID_G2S_NOTIFY_RELIVECHANGE = 54293,
  ID_S2G_NOTIFY_OBTAINWARHONOR = 54294,
  ID_G2S_NOTIFY_SYNCWARSTATUS = 54295,
  ID_S2G_NOTIFY_WARCONTROL = 54296,
  ID_S2G_NOTIFY_WARSTONEOVER = 54297,
  ID_G2S_NOTIFY_CREATEWARSTONE = 54298,
  ID_S2G_NOTIFY_ADDTAX = 54299,
  ID_S2G_ADDHONER_NOTICE = 54300,
  ID_G2S_CAMPWAEKLIST_NOTICE = 54301,
  ID_S2G_CAMPWEAKLIST_REQUEST = 54302,
  ID_G2S_CAMPWEAKLIST_RESPONSE = 54303,
  ID_S2G_NOTIFY_SPECIALEVENT = 54304,
  ID_D2G_BOURSELIST_NOTICE = 55297,
  ID_S2G_BOURSELIST_LOAD = 55298,
  ID_G2S_BOURSELIST_LOAD = 55299,
  ID_D2G_BOURSE_TRADE_NOTICE = 55300,
  ID_G2S_BOURSE_TRADE_BUY = 55301,
  ID_G2S_BOURSE_TRADE_SELL = 55302,
  ID_D22_BOURSE_LOG = 55303,
  ID_G2S_NOTIFY_SYNCGTANDLW = 55304
};
const ::google::protobuf::EnumDescriptor* EMServerMessageID_descriptor();
bool EMServerMessageID_IsValid(int value);
const EMServerMessageID EMServerMessageID_MIN = ID_INTER_TIMEOUT;
const EMServerMessageID EMServerMessageID_MAX = ID_G2S_NOTIFY_SYNCGTANDLW;

inline const ::std::string& EMServerMessageID_Name(EMServerMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMServerMessageID_descriptor(), value);
}
inline bool EMServerMessageID_Parse(
    const ::std::string& name, EMServerMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMServerMessageID>(
    EMServerMessageID_descriptor(), name, value);
}
enum EMFriendAddRetCode {
  RET_SUCCESS = 0,
  RET_INVALID_PLAYER = 1,
  RET_OFFLINE = 2
};
const ::google::protobuf::EnumDescriptor* EMFriendAddRetCode_descriptor();
bool EMFriendAddRetCode_IsValid(int value);
const EMFriendAddRetCode EMFriendAddRetCode_MIN = RET_SUCCESS;
const EMFriendAddRetCode EMFriendAddRetCode_MAX = RET_OFFLINE;

inline const ::std::string& EMFriendAddRetCode_Name(EMFriendAddRetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMFriendAddRetCode_descriptor(), value);
}
inline bool EMFriendAddRetCode_Parse(
    const ::std::string& name, EMFriendAddRetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMFriendAddRetCode>(
    EMFriendAddRetCode_descriptor(), name, value);
}
enum EMSaveResult {
  EM_SAVE2DB = 0,
  EM_SAVE2FILE = 1,
  EM_NOSAVE = 2
};
const ::google::protobuf::EnumDescriptor* EMSaveResult_descriptor();
bool EMSaveResult_IsValid(int value);
const EMSaveResult EMSaveResult_MIN = EM_SAVE2DB;
const EMSaveResult EMSaveResult_MAX = EM_NOSAVE;

inline const ::std::string& EMSaveResult_Name(EMSaveResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMSaveResult_descriptor(), value);
}
inline bool EMSaveResult_Parse(
    const ::std::string& name, EMSaveResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMSaveResult>(
    EMSaveResult_descriptor(), name, value);
}
enum EMLeaveReason {
  EM_LEAVE_REDIRECT = 1,
  EM_LEAVE_RETURN2GATE = 2,
  EM_LEAVE_LEAVEGAME = 3,
  EM_LEAVE_KICKOUT = 4,
  EM_LEAVE_CLOSESOCKET = 5
};
const ::google::protobuf::EnumDescriptor* EMLeaveReason_descriptor();
bool EMLeaveReason_IsValid(int value);
const EMLeaveReason EMLeaveReason_MIN = EM_LEAVE_REDIRECT;
const EMLeaveReason EMLeaveReason_MAX = EM_LEAVE_CLOSESOCKET;

inline const ::std::string& EMLeaveReason_Name(EMLeaveReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMLeaveReason_descriptor(), value);
}
inline bool EMLeaveReason_Parse(
    const ::std::string& name, EMLeaveReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMLeaveReason>(
    EMLeaveReason_descriptor(), name, value);
}
enum EMGateInfoResponse {
  ERROR_SUCCESS = 0,
  ERROR_OUTOFDATE = 1
};
const ::google::protobuf::EnumDescriptor* EMGateInfoResponse_descriptor();
bool EMGateInfoResponse_IsValid(int value);
const EMGateInfoResponse EMGateInfoResponse_MIN = ERROR_SUCCESS;
const EMGateInfoResponse EMGateInfoResponse_MAX = ERROR_OUTOFDATE;

inline const ::std::string& EMGateInfoResponse_Name(EMGateInfoResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMGateInfoResponse_descriptor(), value);
}
inline bool EMGateInfoResponse_Parse(
    const ::std::string& name, EMGateInfoResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMGateInfoResponse>(
    EMGateInfoResponse_descriptor(), name, value);
}
// ===================================================================

class CMessageYQSActivtyStartNotice : public ::google::protobuf::Message {
 public:
  CMessageYQSActivtyStartNotice();
  virtual ~CMessageYQSActivtyStartNotice();
  
  CMessageYQSActivtyStartNotice(const CMessageYQSActivtyStartNotice& from);
  
  inline CMessageYQSActivtyStartNotice& operator=(const CMessageYQSActivtyStartNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageYQSActivtyStartNotice& default_instance();
  void Swap(CMessageYQSActivtyStartNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageYQSActivtyStartNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageYQSActivtyStartNotice& from);
  void MergeFrom(const CMessageYQSActivtyStartNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 campid = 2;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 2;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 camprankid = 3;
  inline bool has_camprankid() const;
  inline void clear_camprankid();
  static const int kCamprankidFieldNumber = 3;
  inline ::google::protobuf::uint32 camprankid() const;
  inline void set_camprankid(::google::protobuf::uint32 value);
  
  // optional uint32 growing = 4;
  inline bool has_growing() const;
  inline void clear_growing();
  static const int kGrowingFieldNumber = 4;
  inline ::google::protobuf::uint32 growing() const;
  inline void set_growing(::google::protobuf::uint32 value);
  
  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 handindawnum = 6;
  inline bool has_handindawnum() const;
  inline void clear_handindawnum();
  static const int kHandindawnumFieldNumber = 6;
  inline ::google::protobuf::uint32 handindawnum() const;
  inline void set_handindawnum(::google::protobuf::uint32 value);
  
  // optional uint32 settlephase = 7;
  inline bool has_settlephase() const;
  inline void clear_settlephase();
  static const int kSettlephaseFieldNumber = 7;
  inline ::google::protobuf::uint32 settlephase() const;
  inline void set_settlephase(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 camprankid_;
  ::google::protobuf::uint32 growing_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 handindawnum_;
  ::google::protobuf::uint32 settlephase_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageYQSActivtyStartNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2GGetCampRankForYQSRequest : public ::google::protobuf::Message {
 public:
  CMessageS2GGetCampRankForYQSRequest();
  virtual ~CMessageS2GGetCampRankForYQSRequest();
  
  CMessageS2GGetCampRankForYQSRequest(const CMessageS2GGetCampRankForYQSRequest& from);
  
  inline CMessageS2GGetCampRankForYQSRequest& operator=(const CMessageS2GGetCampRankForYQSRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2GGetCampRankForYQSRequest& default_instance();
  void Swap(CMessageS2GGetCampRankForYQSRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2GGetCampRankForYQSRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2GGetCampRankForYQSRequest& from);
  void MergeFrom(const CMessageS2GGetCampRankForYQSRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 param1 = 2;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 2;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 param1_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2GGetCampRankForYQSRequest* default_instance_;
};
// -------------------------------------------------------------------

class CampRankForYQSForSever : public ::google::protobuf::Message {
 public:
  CampRankForYQSForSever();
  virtual ~CampRankForYQSForSever();
  
  CampRankForYQSForSever(const CampRankForYQSForSever& from);
  
  inline CampRankForYQSForSever& operator=(const CampRankForYQSForSever& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CampRankForYQSForSever& default_instance();
  void Swap(CampRankForYQSForSever* other);
  
  // implements Message ----------------------------------------------
  
  CampRankForYQSForSever* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CampRankForYQSForSever& from);
  void MergeFrom(const CampRankForYQSForSever& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // optional uint32 campid = 2;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 2;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 growinggrade = 3;
  inline bool has_growinggrade() const;
  inline void clear_growinggrade();
  static const int kGrowinggradeFieldNumber = 3;
  inline ::google::protobuf::uint32 growinggrade() const;
  inline void set_growinggrade(::google::protobuf::uint32 value);
  
  // optional uint32 growingphase = 4;
  inline bool has_growingphase() const;
  inline void clear_growingphase();
  static const int kGrowingphaseFieldNumber = 4;
  inline ::google::protobuf::uint32 growingphase() const;
  inline void set_growingphase(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 growinggrade_;
  ::google::protobuf::uint32 growingphase_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CampRankForYQSForSever* default_instance_;
};
// -------------------------------------------------------------------

class CMessageG2SGetCampRankForYQSResponse : public ::google::protobuf::Message {
 public:
  CMessageG2SGetCampRankForYQSResponse();
  virtual ~CMessageG2SGetCampRankForYQSResponse();
  
  CMessageG2SGetCampRankForYQSResponse(const CMessageG2SGetCampRankForYQSResponse& from);
  
  inline CMessageG2SGetCampRankForYQSResponse& operator=(const CMessageG2SGetCampRankForYQSResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageG2SGetCampRankForYQSResponse& default_instance();
  void Swap(CMessageG2SGetCampRankForYQSResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageG2SGetCampRankForYQSResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageG2SGetCampRankForYQSResponse& from);
  void MergeFrom(const CMessageG2SGetCampRankForYQSResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 playerId = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 param1 = 3;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 3;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);
  
  // repeated .CampRankForYQSForSever camprankinfo = 4;
  inline int camprankinfo_size() const;
  inline void clear_camprankinfo();
  static const int kCamprankinfoFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::CampRankForYQSForSever >& camprankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::CampRankForYQSForSever >* mutable_camprankinfo();
  inline const ::CampRankForYQSForSever& camprankinfo(int index) const;
  inline ::CampRankForYQSForSever* mutable_camprankinfo(int index);
  inline ::CampRankForYQSForSever* add_camprankinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 param1_;
  ::google::protobuf::RepeatedPtrField< ::CampRankForYQSForSever > camprankinfo_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageG2SGetCampRankForYQSResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2GUpdateYQSGrowingRequest : public ::google::protobuf::Message {
 public:
  CMessageS2GUpdateYQSGrowingRequest();
  virtual ~CMessageS2GUpdateYQSGrowingRequest();
  
  CMessageS2GUpdateYQSGrowingRequest(const CMessageS2GUpdateYQSGrowingRequest& from);
  
  inline CMessageS2GUpdateYQSGrowingRequest& operator=(const CMessageS2GUpdateYQSGrowingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2GUpdateYQSGrowingRequest& default_instance();
  void Swap(CMessageS2GUpdateYQSGrowingRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2GUpdateYQSGrowingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2GUpdateYQSGrowingRequest& from);
  void MergeFrom(const CMessageS2GUpdateYQSGrowingRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 campid = 2;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 2;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 growingchangevalue = 3;
  inline bool has_growingchangevalue() const;
  inline void clear_growingchangevalue();
  static const int kGrowingchangevalueFieldNumber = 3;
  inline ::google::protobuf::uint32 growingchangevalue() const;
  inline void set_growingchangevalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 growingchangevalue_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2GUpdateYQSGrowingRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageG2SUpdateYQSGrowingResponse : public ::google::protobuf::Message {
 public:
  CMessageG2SUpdateYQSGrowingResponse();
  virtual ~CMessageG2SUpdateYQSGrowingResponse();
  
  CMessageG2SUpdateYQSGrowingResponse(const CMessageG2SUpdateYQSGrowingResponse& from);
  
  inline CMessageG2SUpdateYQSGrowingResponse& operator=(const CMessageG2SUpdateYQSGrowingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageG2SUpdateYQSGrowingResponse& default_instance();
  void Swap(CMessageG2SUpdateYQSGrowingResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageG2SUpdateYQSGrowingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageG2SUpdateYQSGrowingResponse& from);
  void MergeFrom(const CMessageG2SUpdateYQSGrowingResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 campid = 4;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 4;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 camprankid = 5;
  inline bool has_camprankid() const;
  inline void clear_camprankid();
  static const int kCamprankidFieldNumber = 5;
  inline ::google::protobuf::uint32 camprankid() const;
  inline void set_camprankid(::google::protobuf::uint32 value);
  
  // optional uint32 growing = 6;
  inline bool has_growing() const;
  inline void clear_growing();
  static const int kGrowingFieldNumber = 6;
  inline ::google::protobuf::uint32 growing() const;
  inline void set_growing(::google::protobuf::uint32 value);
  
  // optional uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 handindawnum = 8;
  inline bool has_handindawnum() const;
  inline void clear_handindawnum();
  static const int kHandindawnumFieldNumber = 8;
  inline ::google::protobuf::uint32 handindawnum() const;
  inline void set_handindawnum(::google::protobuf::uint32 value);
  
  // optional uint32 settlephase = 9;
  inline bool has_settlephase() const;
  inline void clear_settlephase();
  static const int kSettlephaseFieldNumber = 9;
  inline ::google::protobuf::uint32 settlephase() const;
  inline void set_settlephase(::google::protobuf::uint32 value);
  
  // optional uint32 deltagrowing = 10;
  inline bool has_deltagrowing() const;
  inline void clear_deltagrowing();
  static const int kDeltagrowingFieldNumber = 10;
  inline ::google::protobuf::uint32 deltagrowing() const;
  inline void set_deltagrowing(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 camprankid_;
  ::google::protobuf::uint32 growing_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 handindawnum_;
  ::google::protobuf::uint32 settlephase_;
  ::google::protobuf::uint32 deltagrowing_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageG2SUpdateYQSGrowingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageG2SSettleNotice : public ::google::protobuf::Message {
 public:
  CMessageG2SSettleNotice();
  virtual ~CMessageG2SSettleNotice();
  
  CMessageG2SSettleNotice(const CMessageG2SSettleNotice& from);
  
  inline CMessageG2SSettleNotice& operator=(const CMessageG2SSettleNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageG2SSettleNotice& default_instance();
  void Swap(CMessageG2SSettleNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageG2SSettleNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageG2SSettleNotice& from);
  void MergeFrom(const CMessageG2SSettleNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 campid = 2;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 2;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 camprankid = 3;
  inline bool has_camprankid() const;
  inline void clear_camprankid();
  static const int kCamprankidFieldNumber = 3;
  inline ::google::protobuf::uint32 camprankid() const;
  inline void set_camprankid(::google::protobuf::uint32 value);
  
  // optional uint32 growing = 4;
  inline bool has_growing() const;
  inline void clear_growing();
  static const int kGrowingFieldNumber = 4;
  inline ::google::protobuf::uint32 growing() const;
  inline void set_growing(::google::protobuf::uint32 value);
  
  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 handindawnum = 6;
  inline bool has_handindawnum() const;
  inline void clear_handindawnum();
  static const int kHandindawnumFieldNumber = 6;
  inline ::google::protobuf::uint32 handindawnum() const;
  inline void set_handindawnum(::google::protobuf::uint32 value);
  
  // optional uint32 settlephase = 7;
  inline bool has_settlephase() const;
  inline void clear_settlephase();
  static const int kSettlephaseFieldNumber = 7;
  inline ::google::protobuf::uint32 settlephase() const;
  inline void set_settlephase(::google::protobuf::uint32 value);
  
  // optional uint32 settlefinish = 8;
  inline bool has_settlefinish() const;
  inline void clear_settlefinish();
  static const int kSettlefinishFieldNumber = 8;
  inline ::google::protobuf::uint32 settlefinish() const;
  inline void set_settlefinish(::google::protobuf::uint32 value);
  
  // optional uint32 noticeid = 9;
  inline bool has_noticeid() const;
  inline void clear_noticeid();
  static const int kNoticeidFieldNumber = 9;
  inline ::google::protobuf::uint32 noticeid() const;
  inline void set_noticeid(::google::protobuf::uint32 value);
  
  // optional uint32 noticeparam1 = 10;
  inline bool has_noticeparam1() const;
  inline void clear_noticeparam1();
  static const int kNoticeparam1FieldNumber = 10;
  inline ::google::protobuf::uint32 noticeparam1() const;
  inline void set_noticeparam1(::google::protobuf::uint32 value);
  
  // optional uint32 noticeparam2 = 11;
  inline bool has_noticeparam2() const;
  inline void clear_noticeparam2();
  static const int kNoticeparam2FieldNumber = 11;
  inline ::google::protobuf::uint32 noticeparam2() const;
  inline void set_noticeparam2(::google::protobuf::uint32 value);
  
  // optional uint32 noticeparam3 = 12;
  inline bool has_noticeparam3() const;
  inline void clear_noticeparam3();
  static const int kNoticeparam3FieldNumber = 12;
  inline ::google::protobuf::uint32 noticeparam3() const;
  inline void set_noticeparam3(::google::protobuf::uint32 value);
  
  // optional uint32 encourage = 13;
  inline bool has_encourage() const;
  inline void clear_encourage();
  static const int kEncourageFieldNumber = 13;
  inline ::google::protobuf::uint32 encourage() const;
  inline void set_encourage(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 camprankid_;
  ::google::protobuf::uint32 growing_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 handindawnum_;
  ::google::protobuf::uint32 settlephase_;
  ::google::protobuf::uint32 settlefinish_;
  ::google::protobuf::uint32 noticeid_;
  ::google::protobuf::uint32 noticeparam1_;
  ::google::protobuf::uint32 noticeparam2_;
  ::google::protobuf::uint32 noticeparam3_;
  ::google::protobuf::uint32 encourage_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageG2SSettleNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInternalTimeOut : public ::google::protobuf::Message {
 public:
  CMessageInternalTimeOut();
  virtual ~CMessageInternalTimeOut();
  
  CMessageInternalTimeOut(const CMessageInternalTimeOut& from);
  
  inline CMessageInternalTimeOut& operator=(const CMessageInternalTimeOut& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInternalTimeOut& default_instance();
  void Swap(CMessageInternalTimeOut* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInternalTimeOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInternalTimeOut& from);
  void MergeFrom(const CMessageInternalTimeOut& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TimerID = 1;
  inline bool has_timerid() const;
  inline void clear_timerid();
  static const int kTimerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 timerid() const;
  inline void set_timerid(::google::protobuf::uint32 value);
  
  // optional uint32 OwnerID = 2;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwnerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 ownerid() const;
  inline void set_ownerid(::google::protobuf::uint32 value);
  
  // optional uint32 TimerMark = 3;
  inline bool has_timermark() const;
  inline void clear_timermark();
  static const int kTimerMarkFieldNumber = 3;
  inline ::google::protobuf::uint32 timermark() const;
  inline void set_timermark(::google::protobuf::uint32 value);
  
  // optional uint32 MillSeconds = 4;
  inline bool has_millseconds() const;
  inline void clear_millseconds();
  static const int kMillSecondsFieldNumber = 4;
  inline ::google::protobuf::uint32 millseconds() const;
  inline void set_millseconds(::google::protobuf::uint32 value);
  
  // optional uint32 CalledNum = 5;
  inline bool has_callednum() const;
  inline void clear_callednum();
  static const int kCalledNumFieldNumber = 5;
  inline ::google::protobuf::uint32 callednum() const;
  inline void set_callednum(::google::protobuf::uint32 value);
  
  // repeated uint32 OtherInfo = 6;
  inline int otherinfo_size() const;
  inline void clear_otherinfo();
  static const int kOtherInfoFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& otherinfo() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_otherinfo();
  inline ::google::protobuf::uint32 otherinfo(int index) const;
  inline void set_otherinfo(int index, ::google::protobuf::uint32 value);
  inline void add_otherinfo(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 timerid_;
  ::google::protobuf::uint32 ownerid_;
  ::google::protobuf::uint32 timermark_;
  ::google::protobuf::uint32 millseconds_;
  ::google::protobuf::uint32 callednum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > otherinfo_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInternalTimeOut* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCountryInfo : public ::google::protobuf::Message {
 public:
  CMessageCountryInfo();
  virtual ~CMessageCountryInfo();
  
  CMessageCountryInfo(const CMessageCountryInfo& from);
  
  inline CMessageCountryInfo& operator=(const CMessageCountryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCountryInfo& default_instance();
  void Swap(CMessageCountryInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCountryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCountryInfo& from);
  void MergeFrom(const CMessageCountryInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);
  
  // optional bytes CountryList = 2;
  inline bool has_countrylist() const;
  inline void clear_countrylist();
  static const int kCountryListFieldNumber = 2;
  inline const ::std::string& countrylist() const;
  inline void set_countrylist(const ::std::string& value);
  inline void set_countrylist(const char* value);
  inline void set_countrylist(const void* value, size_t size);
  inline ::std::string* mutable_countrylist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 length_;
  ::std::string* countrylist_;
  static const ::std::string _default_countrylist_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCountryInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectGErrorCode : public ::google::protobuf::Message {
 public:
  CMessageRedirectGErrorCode();
  virtual ~CMessageRedirectGErrorCode();
  
  CMessageRedirectGErrorCode(const CMessageRedirectGErrorCode& from);
  
  inline CMessageRedirectGErrorCode& operator=(const CMessageRedirectGErrorCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectGErrorCode& default_instance();
  void Swap(CMessageRedirectGErrorCode* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectGErrorCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectGErrorCode& from);
  void MergeFrom(const CMessageRedirectGErrorCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional int32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
  // optional uint32 LineID = 3;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 3;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectGErrorCode* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRedirectSErrorCode : public ::google::protobuf::Message {
 public:
  CMessageRedirectSErrorCode();
  virtual ~CMessageRedirectSErrorCode();
  
  CMessageRedirectSErrorCode(const CMessageRedirectSErrorCode& from);
  
  inline CMessageRedirectSErrorCode& operator=(const CMessageRedirectSErrorCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRedirectSErrorCode& default_instance();
  void Swap(CMessageRedirectSErrorCode* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRedirectSErrorCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRedirectSErrorCode& from);
  void MergeFrom(const CMessageRedirectSErrorCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional int32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
  // optional uint32 LineID = 3;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 3;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRedirectSErrorCode* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerRedirectEnterMapResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerRedirectEnterMapResponse();
  virtual ~CMessagePlayerRedirectEnterMapResponse();
  
  CMessagePlayerRedirectEnterMapResponse(const CMessagePlayerRedirectEnterMapResponse& from);
  
  inline CMessagePlayerRedirectEnterMapResponse& operator=(const CMessagePlayerRedirectEnterMapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerRedirectEnterMapResponse& default_instance();
  void Swap(CMessagePlayerRedirectEnterMapResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerRedirectEnterMapResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerRedirectEnterMapResponse& from);
  void MergeFrom(const CMessagePlayerRedirectEnterMapResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CommHandle = 1;
  inline bool has_commhandle() const;
  inline void clear_commhandle();
  static const int kCommHandleFieldNumber = 1;
  inline ::google::protobuf::uint32 commhandle() const;
  inline void set_commhandle(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 3;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 3;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 5;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 6;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 6;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional string MapName = 7;
  inline bool has_mapname() const;
  inline void clear_mapname();
  static const int kMapNameFieldNumber = 7;
  inline const ::std::string& mapname() const;
  inline void set_mapname(const ::std::string& value);
  inline void set_mapname(const char* value);
  inline void set_mapname(const char* value, size_t size);
  inline ::std::string* mutable_mapname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 commhandle_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::std::string* mapname_;
  static const ::std::string _default_mapname_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerRedirectEnterMapResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGateInfoNotice : public ::google::protobuf::Message {
 public:
  CMessageGateInfoNotice();
  virtual ~CMessageGateInfoNotice();
  
  CMessageGateInfoNotice(const CMessageGateInfoNotice& from);
  
  inline CMessageGateInfoNotice& operator=(const CMessageGateInfoNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGateInfoNotice& default_instance();
  void Swap(CMessageGateInfoNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGateInfoNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGateInfoNotice& from);
  void MergeFrom(const CMessageGateInfoNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  
  // optional string HostName = 2;
  inline bool has_hostname() const;
  inline void clear_hostname();
  static const int kHostNameFieldNumber = 2;
  inline const ::std::string& hostname() const;
  inline void set_hostname(const ::std::string& value);
  inline void set_hostname(const char* value);
  inline void set_hostname(const char* value, size_t size);
  inline ::std::string* mutable_hostname();
  
  // optional uint32 GateVersion = 3;
  inline bool has_gateversion() const;
  inline void clear_gateversion();
  static const int kGateVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 gateversion() const;
  inline void set_gateversion(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 4;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 4;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional string GateCode = 5;
  inline bool has_gatecode() const;
  inline void clear_gatecode();
  static const int kGateCodeFieldNumber = 5;
  inline const ::std::string& gatecode() const;
  inline void set_gatecode(const ::std::string& value);
  inline void set_gatecode(const char* value);
  inline void set_gatecode(const char* value, size_t size);
  inline ::std::string* mutable_gatecode();
  
  // optional string GatePasswd = 6;
  inline bool has_gatepasswd() const;
  inline void clear_gatepasswd();
  static const int kGatePasswdFieldNumber = 6;
  inline const ::std::string& gatepasswd() const;
  inline void set_gatepasswd(const ::std::string& value);
  inline void set_gatepasswd(const char* value);
  inline void set_gatepasswd(const char* value, size_t size);
  inline ::std::string* mutable_gatepasswd();
  
  // optional string GateMac = 7;
  inline bool has_gatemac() const;
  inline void clear_gatemac();
  static const int kGateMacFieldNumber = 7;
  inline const ::std::string& gatemac() const;
  inline void set_gatemac(const ::std::string& value);
  inline void set_gatemac(const char* value);
  inline void set_gatemac(const char* value, size_t size);
  inline ::std::string* mutable_gatemac();
  
  // optional uint32 GameID = 8;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIDFieldNumber = 8;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* address_;
  static const ::std::string _default_address_;
  ::std::string* hostname_;
  static const ::std::string _default_hostname_;
  ::google::protobuf::uint32 gateversion_;
  ::google::protobuf::uint32 worldid_;
  ::std::string* gatecode_;
  static const ::std::string _default_gatecode_;
  ::std::string* gatepasswd_;
  static const ::std::string _default_gatepasswd_;
  ::std::string* gatemac_;
  static const ::std::string _default_gatemac_;
  ::google::protobuf::uint32 gameid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGateInfoNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGateInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageGateInfoResponse();
  virtual ~CMessageGateInfoResponse();
  
  CMessageGateInfoResponse(const CMessageGateInfoResponse& from);
  
  inline CMessageGateInfoResponse& operator=(const CMessageGateInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGateInfoResponse& default_instance();
  void Swap(CMessageGateInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGateInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGateInfoResponse& from);
  void MergeFrom(const CMessageGateInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ErrorCode = 1;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGateInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerEnterGateNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerEnterGateNotice();
  virtual ~CMessagePlayerEnterGateNotice();
  
  CMessagePlayerEnterGateNotice(const CMessagePlayerEnterGateNotice& from);
  
  inline CMessagePlayerEnterGateNotice& operator=(const CMessagePlayerEnterGateNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerEnterGateNotice& default_instance();
  void Swap(CMessagePlayerEnterGateNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerEnterGateNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerEnterGateNotice& from);
  void MergeFrom(const CMessagePlayerEnterGateNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CommHandle = 1;
  inline bool has_commhandle() const;
  inline void clear_commhandle();
  static const int kCommHandleFieldNumber = 1;
  inline ::google::protobuf::uint32 commhandle() const;
  inline void set_commhandle(::google::protobuf::uint32 value);
  
  // optional uint32 LoginToken = 2;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 2;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 3;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 3;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 AdultFlag = 4;
  inline bool has_adultflag() const;
  inline void clear_adultflag();
  static const int kAdultFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 adultflag() const;
  inline void set_adultflag(::google::protobuf::uint32 value);
  
  // optional uint32 UserFlag = 5;
  inline bool has_userflag() const;
  inline void clear_userflag();
  static const int kUserFlagFieldNumber = 5;
  inline ::google::protobuf::uint32 userflag() const;
  inline void set_userflag(::google::protobuf::uint32 value);
  
  // optional uint32 UserClass = 6;
  inline bool has_userclass() const;
  inline void clear_userclass();
  static const int kUserClassFieldNumber = 6;
  inline ::google::protobuf::uint32 userclass() const;
  inline void set_userclass(::google::protobuf::uint32 value);
  
  // optional uint32 UserPoint = 7;
  inline bool has_userpoint() const;
  inline void clear_userpoint();
  static const int kUserPointFieldNumber = 7;
  inline ::google::protobuf::uint32 userpoint() const;
  inline void set_userpoint(::google::protobuf::uint32 value);
  
  // optional uint32 WorldPlayerLimit = 8;
  inline bool has_worldplayerlimit() const;
  inline void clear_worldplayerlimit();
  static const int kWorldPlayerLimitFieldNumber = 8;
  inline ::google::protobuf::uint32 worldplayerlimit() const;
  inline void set_worldplayerlimit(::google::protobuf::uint32 value);
  
  // optional uint32 UserStatus = 9;
  inline bool has_userstatus() const;
  inline void clear_userstatus();
  static const int kUserStatusFieldNumber = 9;
  inline ::google::protobuf::uint32 userstatus() const;
  inline void set_userstatus(::google::protobuf::uint32 value);
  
  // optional uint32 GameID = 10;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIDFieldNumber = 10;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);
  
  // optional int32 cpuid = 11;
  inline bool has_cpuid() const;
  inline void clear_cpuid();
  static const int kCpuidFieldNumber = 11;
  inline ::google::protobuf::int32 cpuid() const;
  inline void set_cpuid(::google::protobuf::int32 value);
  
  // optional int32 diskid = 12;
  inline bool has_diskid() const;
  inline void clear_diskid();
  static const int kDiskidFieldNumber = 12;
  inline ::google::protobuf::int32 diskid() const;
  inline void set_diskid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 commhandle_;
  ::google::protobuf::uint32 logintoken_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 adultflag_;
  ::google::protobuf::uint32 userflag_;
  ::google::protobuf::uint32 userclass_;
  ::google::protobuf::uint32 userpoint_;
  ::google::protobuf::uint32 worldplayerlimit_;
  ::google::protobuf::uint32 userstatus_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::int32 cpuid_;
  ::google::protobuf::int32 diskid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerEnterGateNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerEnterGateResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerEnterGateResponse();
  virtual ~CMessagePlayerEnterGateResponse();
  
  CMessagePlayerEnterGateResponse(const CMessagePlayerEnterGateResponse& from);
  
  inline CMessagePlayerEnterGateResponse& operator=(const CMessagePlayerEnterGateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerEnterGateResponse& default_instance();
  void Swap(CMessagePlayerEnterGateResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerEnterGateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerEnterGateResponse& from);
  void MergeFrom(const CMessagePlayerEnterGateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CommHandle = 1;
  inline bool has_commhandle() const;
  inline void clear_commhandle();
  static const int kCommHandleFieldNumber = 1;
  inline ::google::protobuf::uint32 commhandle() const;
  inline void set_commhandle(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 LoginToken = 3;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 3;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
  // optional int32 ErrorCode = 4;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 4;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
  // optional int32 WorldID = 5;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 5;
  inline ::google::protobuf::int32 worldid() const;
  inline void set_worldid(::google::protobuf::int32 value);
  
  // optional uint32 OtherClient = 6;
  inline bool has_otherclient() const;
  inline void clear_otherclient();
  static const int kOtherClientFieldNumber = 6;
  inline ::google::protobuf::uint32 otherclient() const;
  inline void set_otherclient(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 commhandle_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 logintoken_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 worldid_;
  ::google::protobuf::uint32 otherclient_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerEnterGateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerLeaveGateNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerLeaveGateNotice();
  virtual ~CMessagePlayerLeaveGateNotice();
  
  CMessagePlayerLeaveGateNotice(const CMessagePlayerLeaveGateNotice& from);
  
  inline CMessagePlayerLeaveGateNotice& operator=(const CMessagePlayerLeaveGateNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerLeaveGateNotice& default_instance();
  void Swap(CMessagePlayerLeaveGateNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerLeaveGateNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerLeaveGateNotice& from);
  void MergeFrom(const CMessagePlayerLeaveGateNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 reason_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerLeaveGateNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageServerInfoNotice : public ::google::protobuf::Message {
 public:
  CMessageServerInfoNotice();
  virtual ~CMessageServerInfoNotice();
  
  CMessageServerInfoNotice(const CMessageServerInfoNotice& from);
  
  inline CMessageServerInfoNotice& operator=(const CMessageServerInfoNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageServerInfoNotice& default_instance();
  void Swap(CMessageServerInfoNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageServerInfoNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageServerInfoNotice& from);
  void MergeFrom(const CMessageServerInfoNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  
  // optional string ServerName = 2;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServerNameFieldNumber = 2;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  
  // optional uint32 ServerVersion = 3;
  inline bool has_serverversion() const;
  inline void clear_serverversion();
  static const int kServerVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 serverversion() const;
  inline void set_serverversion(::google::protobuf::uint32 value);
  
  // optional uint32 TemplateVersion = 4;
  inline bool has_templateversion() const;
  inline void clear_templateversion();
  static const int kTemplateVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 templateversion() const;
  inline void set_templateversion(::google::protobuf::uint32 value);
  
  // optional uint32 TaskVersion = 5;
  inline bool has_taskversion() const;
  inline void clear_taskversion();
  static const int kTaskVersionFieldNumber = 5;
  inline ::google::protobuf::uint32 taskversion() const;
  inline void set_taskversion(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 6;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 6;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional uint32 LaunchMode = 7;
  inline bool has_launchmode() const;
  inline void clear_launchmode();
  static const int kLaunchModeFieldNumber = 7;
  inline ::google::protobuf::uint32 launchmode() const;
  inline void set_launchmode(::google::protobuf::uint32 value);
  
  // optional uint32 PlayerCapacity = 8;
  inline bool has_playercapacity() const;
  inline void clear_playercapacity();
  static const int kPlayerCapacityFieldNumber = 8;
  inline ::google::protobuf::uint32 playercapacity() const;
  inline void set_playercapacity(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* address_;
  static const ::std::string _default_address_;
  ::std::string* servername_;
  static const ::std::string _default_servername_;
  ::google::protobuf::uint32 serverversion_;
  ::google::protobuf::uint32 templateversion_;
  ::google::protobuf::uint32 taskversion_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 launchmode_;
  ::google::protobuf::uint32 playercapacity_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageServerInfoNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageServerInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageServerInfoResponse();
  virtual ~CMessageServerInfoResponse();
  
  CMessageServerInfoResponse(const CMessageServerInfoResponse& from);
  
  inline CMessageServerInfoResponse& operator=(const CMessageServerInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageServerInfoResponse& default_instance();
  void Swap(CMessageServerInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageServerInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageServerInfoResponse& from);
  void MergeFrom(const CMessageServerInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 GameID = 3;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIDFieldNumber = 3;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 gameid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageServerInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerEnterMapNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerEnterMapNotice();
  virtual ~CMessagePlayerEnterMapNotice();
  
  CMessagePlayerEnterMapNotice(const CMessagePlayerEnterMapNotice& from);
  
  inline CMessagePlayerEnterMapNotice& operator=(const CMessagePlayerEnterMapNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerEnterMapNotice& default_instance();
  void Swap(CMessagePlayerEnterMapNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerEnterMapNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerEnterMapNotice& from);
  void MergeFrom(const CMessagePlayerEnterMapNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LoginToken = 1;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 1;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 6;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 6;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 7;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 7;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 AdultFlag = 8;
  inline bool has_adultflag() const;
  inline void clear_adultflag();
  static const int kAdultFlagFieldNumber = 8;
  inline ::google::protobuf::uint32 adultflag() const;
  inline void set_adultflag(::google::protobuf::uint32 value);
  
  // optional int32 ValidSeconds = 9;
  inline bool has_validseconds() const;
  inline void clear_validseconds();
  static const int kValidSecondsFieldNumber = 9;
  inline ::google::protobuf::int32 validseconds() const;
  inline void set_validseconds(::google::protobuf::int32 value);
  
  // optional uint32 FamilyID = 10;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 10;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 11;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 11;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
  // optional uint32 IsFamilyHeader = 12;
  inline bool has_isfamilyheader() const;
  inline void clear_isfamilyheader();
  static const int kIsFamilyHeaderFieldNumber = 12;
  inline ::google::protobuf::uint32 isfamilyheader() const;
  inline void set_isfamilyheader(::google::protobuf::uint32 value);
  
  // optional uint32 IfHasApplies = 13;
  inline bool has_ifhasapplies() const;
  inline void clear_ifhasapplies();
  static const int kIfHasAppliesFieldNumber = 13;
  inline ::google::protobuf::uint32 ifhasapplies() const;
  inline void set_ifhasapplies(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 14;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 14;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 15;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 15;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 IsCorperHeader = 16;
  inline bool has_iscorperheader() const;
  inline void clear_iscorperheader();
  static const int kIsCorperHeaderFieldNumber = 16;
  inline ::google::protobuf::uint32 iscorperheader() const;
  inline void set_iscorperheader(::google::protobuf::uint32 value);
  
  // optional uint32 IfHasCorpsApply = 17;
  inline bool has_ifhascorpsapply() const;
  inline void clear_ifhascorpsapply();
  static const int kIfHasCorpsApplyFieldNumber = 17;
  inline ::google::protobuf::uint32 ifhascorpsapply() const;
  inline void set_ifhascorpsapply(::google::protobuf::uint32 value);
  
  // optional uint32 IfTracedPlayer = 18;
  inline bool has_iftracedplayer() const;
  inline void clear_iftracedplayer();
  static const int kIfTracedPlayerFieldNumber = 18;
  inline ::google::protobuf::uint32 iftracedplayer() const;
  inline void set_iftracedplayer(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 19;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 19;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 FamilyHeaderID = 20;
  inline bool has_familyheaderid() const;
  inline void clear_familyheaderid();
  static const int kFamilyHeaderIDFieldNumber = 20;
  inline ::google::protobuf::uint32 familyheaderid() const;
  inline void set_familyheaderid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsHeaderID = 21;
  inline bool has_corpsheaderid() const;
  inline void clear_corpsheaderid();
  static const int kCorpsHeaderIDFieldNumber = 21;
  inline ::google::protobuf::uint32 corpsheaderid() const;
  inline void set_corpsheaderid(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyPost = 22;
  inline bool has_familypost() const;
  inline void clear_familypost();
  static const int kFamilyPostFieldNumber = 22;
  inline ::google::protobuf::uint32 familypost() const;
  inline void set_familypost(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsPost = 23;
  inline bool has_corpspost() const;
  inline void clear_corpspost();
  static const int kCorpsPostFieldNumber = 23;
  inline ::google::protobuf::uint32 corpspost() const;
  inline void set_corpspost(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyContribute = 24;
  inline bool has_familycontribute() const;
  inline void clear_familycontribute();
  static const int kFamilyContributeFieldNumber = 24;
  inline ::google::protobuf::uint32 familycontribute() const;
  inline void set_familycontribute(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsContribute = 25;
  inline bool has_corpscontribute() const;
  inline void clear_corpscontribute();
  static const int kCorpsContributeFieldNumber = 25;
  inline ::google::protobuf::uint32 corpscontribute() const;
  inline void set_corpscontribute(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyMoney = 26;
  inline bool has_familymoney() const;
  inline void clear_familymoney();
  static const int kFamilyMoneyFieldNumber = 26;
  inline ::google::protobuf::uint32 familymoney() const;
  inline void set_familymoney(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsMoney = 27;
  inline bool has_corpsmoney() const;
  inline void clear_corpsmoney();
  static const int kCorpsMoneyFieldNumber = 27;
  inline ::google::protobuf::uint32 corpsmoney() const;
  inline void set_corpsmoney(::google::protobuf::uint32 value);
  
  // optional uint32 UnionID = 28;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 28;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 29;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 29;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional uint32 HeadCorpsID = 30;
  inline bool has_headcorpsid() const;
  inline void clear_headcorpsid();
  static const int kHeadCorpsIDFieldNumber = 30;
  inline ::google::protobuf::uint32 headcorpsid() const;
  inline void set_headcorpsid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 31;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 31;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialID = 32;
  inline bool has_officialid() const;
  inline void clear_officialid();
  static const int kOfficialIDFieldNumber = 32;
  inline ::google::protobuf::uint32 officialid() const;
  inline void set_officialid(::google::protobuf::uint32 value);
  
  // optional uint32 KingID = 33;
  inline bool has_kingid() const;
  inline void clear_kingid();
  static const int kKingIDFieldNumber = 33;
  inline ::google::protobuf::uint32 kingid() const;
  inline void set_kingid(::google::protobuf::uint32 value);
  
  // optional string Password = 34;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 34;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
  // optional uint32 ProtectTime = 35;
  inline bool has_protecttime() const;
  inline void clear_protecttime();
  static const int kProtectTimeFieldNumber = 35;
  inline ::google::protobuf::uint32 protecttime() const;
  inline void set_protecttime(::google::protobuf::uint32 value);
  
  // optional uint32 PasswordStatus = 36;
  inline bool has_passwordstatus() const;
  inline void clear_passwordstatus();
  static const int kPasswordStatusFieldNumber = 36;
  inline ::google::protobuf::uint32 passwordstatus() const;
  inline void set_passwordstatus(::google::protobuf::uint32 value);
  
  // optional uint32 ProtectTimeLength = 37;
  inline bool has_protecttimelength() const;
  inline void clear_protecttimelength();
  static const int kProtectTimeLengthFieldNumber = 37;
  inline ::google::protobuf::uint32 protecttimelength() const;
  inline void set_protecttimelength(::google::protobuf::uint32 value);
  
  // optional uint32 RoleWorldID = 38;
  inline bool has_roleworldid() const;
  inline void clear_roleworldid();
  static const int kRoleWorldIDFieldNumber = 38;
  inline ::google::protobuf::uint32 roleworldid() const;
  inline void set_roleworldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 logintoken_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 adultflag_;
  ::google::protobuf::int32 validseconds_;
  ::google::protobuf::uint32 familyid_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  ::google::protobuf::uint32 isfamilyheader_;
  ::google::protobuf::uint32 ifhasapplies_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 iscorperheader_;
  ::google::protobuf::uint32 ifhascorpsapply_;
  ::google::protobuf::uint32 iftracedplayer_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 familyheaderid_;
  ::google::protobuf::uint32 corpsheaderid_;
  ::google::protobuf::uint32 familypost_;
  ::google::protobuf::uint32 corpspost_;
  ::google::protobuf::uint32 familycontribute_;
  ::google::protobuf::uint32 corpscontribute_;
  ::google::protobuf::uint32 familymoney_;
  ::google::protobuf::uint32 corpsmoney_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::google::protobuf::uint32 headcorpsid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 officialid_;
  ::google::protobuf::uint32 kingid_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  ::google::protobuf::uint32 protecttime_;
  ::google::protobuf::uint32 passwordstatus_;
  ::google::protobuf::uint32 protecttimelength_;
  ::google::protobuf::uint32 roleworldid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(38 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerEnterMapNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerRedirectMapNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerRedirectMapNotice();
  virtual ~CMessagePlayerRedirectMapNotice();
  
  CMessagePlayerRedirectMapNotice(const CMessagePlayerRedirectMapNotice& from);
  
  inline CMessagePlayerRedirectMapNotice& operator=(const CMessagePlayerRedirectMapNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerRedirectMapNotice& default_instance();
  void Swap(CMessagePlayerRedirectMapNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerRedirectMapNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerRedirectMapNotice& from);
  void MergeFrom(const CMessagePlayerRedirectMapNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CommHandle = 1;
  inline bool has_commhandle() const;
  inline void clear_commhandle();
  static const int kCommHandleFieldNumber = 1;
  inline ::google::protobuf::uint32 commhandle() const;
  inline void set_commhandle(::google::protobuf::uint32 value);
  
  // optional uint32 LoginToken = 2;
  inline bool has_logintoken() const;
  inline void clear_logintoken();
  static const int kLoginTokenFieldNumber = 2;
  inline ::google::protobuf::uint32 logintoken() const;
  inline void set_logintoken(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 5;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 5;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 6;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 6;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 7;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 7;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 8;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 8;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional string CharName = 9;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 9;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 Gender = 10;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 10;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 11;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 11;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Nationality = 12;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 12;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional uint32 Facetype = 13;
  inline bool has_facetype() const;
  inline void clear_facetype();
  static const int kFacetypeFieldNumber = 13;
  inline ::google::protobuf::uint32 facetype() const;
  inline void set_facetype(::google::protobuf::uint32 value);
  
  // optional uint32 Charlevel = 14;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharlevelFieldNumber = 14;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);
  
  // optional uint64 Exp = 15;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 15;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 Lastlogin = 16;
  inline bool has_lastlogin() const;
  inline void clear_lastlogin();
  static const int kLastloginFieldNumber = 16;
  inline ::google::protobuf::uint32 lastlogin() const;
  inline void set_lastlogin(::google::protobuf::uint32 value);
  
  // optional uint32 DataLength = 17;
  inline bool has_datalength() const;
  inline void clear_datalength();
  static const int kDataLengthFieldNumber = 17;
  inline ::google::protobuf::uint32 datalength() const;
  inline void set_datalength(::google::protobuf::uint32 value);
  
  // optional bytes Data = 18;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 18;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  
  // optional uint32 TeamFlag = 19;
  inline bool has_teamflag() const;
  inline void clear_teamflag();
  static const int kTeamFlagFieldNumber = 19;
  inline ::google::protobuf::uint32 teamflag() const;
  inline void set_teamflag(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 20;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 20;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional bytes EncryptKey = 21;
  inline bool has_encryptkey() const;
  inline void clear_encryptkey();
  static const int kEncryptKeyFieldNumber = 21;
  inline const ::std::string& encryptkey() const;
  inline void set_encryptkey(const ::std::string& value);
  inline void set_encryptkey(const char* value);
  inline void set_encryptkey(const void* value, size_t size);
  inline ::std::string* mutable_encryptkey();
  
  // optional uint32 PetTempID = 22;
  inline bool has_pettempid() const;
  inline void clear_pettempid();
  static const int kPetTempIDFieldNumber = 22;
  inline ::google::protobuf::uint32 pettempid() const;
  inline void set_pettempid(::google::protobuf::uint32 value);
  
  // optional uint32 PetOnlineTime = 23;
  inline bool has_petonlinetime() const;
  inline void clear_petonlinetime();
  static const int kPetOnlineTimeFieldNumber = 23;
  inline ::google::protobuf::uint32 petonlinetime() const;
  inline void set_petonlinetime(::google::protobuf::uint32 value);
  
  // optional uint32 PetMode = 24;
  inline bool has_petmode() const;
  inline void clear_petmode();
  static const int kPetModeFieldNumber = 24;
  inline ::google::protobuf::uint32 petmode() const;
  inline void set_petmode(::google::protobuf::uint32 value);
  
  // optional .PBTeamInfo TeamData = 25;
  inline bool has_teamdata() const;
  inline void clear_teamdata();
  static const int kTeamDataFieldNumber = 25;
  inline const ::PBTeamInfo& teamdata() const;
  inline ::PBTeamInfo* mutable_teamdata();
  
  // optional .PBMsg TeamMsg = 26;
  inline bool has_teammsg() const;
  inline void clear_teammsg();
  static const int kTeamMsgFieldNumber = 26;
  inline const ::PBMsg& teammsg() const;
  inline ::PBMsg* mutable_teammsg();
  
  // optional uint32 FamilyID = 27;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 27;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 28;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 28;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
  // optional uint32 IsFamilyHeader = 29;
  inline bool has_isfamilyheader() const;
  inline void clear_isfamilyheader();
  static const int kIsFamilyHeaderFieldNumber = 29;
  inline ::google::protobuf::uint32 isfamilyheader() const;
  inline void set_isfamilyheader(::google::protobuf::uint32 value);
  
  // optional uint32 IfHasApplies = 30;
  inline bool has_ifhasapplies() const;
  inline void clear_ifhasapplies();
  static const int kIfHasAppliesFieldNumber = 30;
  inline ::google::protobuf::uint32 ifhasapplies() const;
  inline void set_ifhasapplies(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 31;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 31;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 32;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 32;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 IsCorperHeader = 33;
  inline bool has_iscorperheader() const;
  inline void clear_iscorperheader();
  static const int kIsCorperHeaderFieldNumber = 33;
  inline ::google::protobuf::uint32 iscorperheader() const;
  inline void set_iscorperheader(::google::protobuf::uint32 value);
  
  // optional uint32 IfHasCorpsApply = 34;
  inline bool has_ifhascorpsapply() const;
  inline void clear_ifhascorpsapply();
  static const int kIfHasCorpsApplyFieldNumber = 34;
  inline ::google::protobuf::uint32 ifhascorpsapply() const;
  inline void set_ifhascorpsapply(::google::protobuf::uint32 value);
  
  // optional uint32 Camp = 35;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 35;
  inline ::google::protobuf::uint32 camp() const;
  inline void set_camp(::google::protobuf::uint32 value);
  
  // optional uint32 IfTracedPlayer = 36;
  inline bool has_iftracedplayer() const;
  inline void clear_iftracedplayer();
  static const int kIfTracedPlayerFieldNumber = 36;
  inline ::google::protobuf::uint32 iftracedplayer() const;
  inline void set_iftracedplayer(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyHeaderID = 37;
  inline bool has_familyheaderid() const;
  inline void clear_familyheaderid();
  static const int kFamilyHeaderIDFieldNumber = 37;
  inline ::google::protobuf::uint32 familyheaderid() const;
  inline void set_familyheaderid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsHeaderID = 38;
  inline bool has_corpsheaderid() const;
  inline void clear_corpsheaderid();
  static const int kCorpsHeaderIDFieldNumber = 38;
  inline ::google::protobuf::uint32 corpsheaderid() const;
  inline void set_corpsheaderid(::google::protobuf::uint32 value);
  
  // optional int32 ValidSeconds = 39;
  inline bool has_validseconds() const;
  inline void clear_validseconds();
  static const int kValidSecondsFieldNumber = 39;
  inline ::google::protobuf::int32 validseconds() const;
  inline void set_validseconds(::google::protobuf::int32 value);
  
  // optional uint32 AdultFlag = 40;
  inline bool has_adultflag() const;
  inline void clear_adultflag();
  static const int kAdultFlagFieldNumber = 40;
  inline ::google::protobuf::uint32 adultflag() const;
  inline void set_adultflag(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyPost = 41;
  inline bool has_familypost() const;
  inline void clear_familypost();
  static const int kFamilyPostFieldNumber = 41;
  inline ::google::protobuf::uint32 familypost() const;
  inline void set_familypost(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsPost = 42;
  inline bool has_corpspost() const;
  inline void clear_corpspost();
  static const int kCorpsPostFieldNumber = 42;
  inline ::google::protobuf::uint32 corpspost() const;
  inline void set_corpspost(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyContribute = 43;
  inline bool has_familycontribute() const;
  inline void clear_familycontribute();
  static const int kFamilyContributeFieldNumber = 43;
  inline ::google::protobuf::uint32 familycontribute() const;
  inline void set_familycontribute(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsContribute = 44;
  inline bool has_corpscontribute() const;
  inline void clear_corpscontribute();
  static const int kCorpsContributeFieldNumber = 44;
  inline ::google::protobuf::uint32 corpscontribute() const;
  inline void set_corpscontribute(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyMoney = 45;
  inline bool has_familymoney() const;
  inline void clear_familymoney();
  static const int kFamilyMoneyFieldNumber = 45;
  inline ::google::protobuf::uint32 familymoney() const;
  inline void set_familymoney(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsMoney = 46;
  inline bool has_corpsmoney() const;
  inline void clear_corpsmoney();
  static const int kCorpsMoneyFieldNumber = 46;
  inline ::google::protobuf::uint32 corpsmoney() const;
  inline void set_corpsmoney(::google::protobuf::uint32 value);
  
  // optional uint32 UnionID = 47;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 47;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 48;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 48;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional uint32 HeadCorpsID = 49;
  inline bool has_headcorpsid() const;
  inline void clear_headcorpsid();
  static const int kHeadCorpsIDFieldNumber = 49;
  inline ::google::protobuf::uint32 headcorpsid() const;
  inline void set_headcorpsid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 50;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 50;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialID = 51;
  inline bool has_officialid() const;
  inline void clear_officialid();
  static const int kOfficialIDFieldNumber = 51;
  inline ::google::protobuf::uint32 officialid() const;
  inline void set_officialid(::google::protobuf::uint32 value);
  
  // optional uint32 KingID = 52;
  inline bool has_kingid() const;
  inline void clear_kingid();
  static const int kKingIDFieldNumber = 52;
  inline ::google::protobuf::uint32 kingid() const;
  inline void set_kingid(::google::protobuf::uint32 value);
  
  // optional string Password = 53;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 53;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
  // optional uint32 ProtectTime = 54;
  inline bool has_protecttime() const;
  inline void clear_protecttime();
  static const int kProtectTimeFieldNumber = 54;
  inline ::google::protobuf::uint32 protecttime() const;
  inline void set_protecttime(::google::protobuf::uint32 value);
  
  // optional uint32 PasswordStatus = 55;
  inline bool has_passwordstatus() const;
  inline void clear_passwordstatus();
  static const int kPasswordStatusFieldNumber = 55;
  inline ::google::protobuf::uint32 passwordstatus() const;
  inline void set_passwordstatus(::google::protobuf::uint32 value);
  
  // optional uint32 ProtectTimeLength = 56;
  inline bool has_protecttimelength() const;
  inline void clear_protecttimelength();
  static const int kProtectTimeLengthFieldNumber = 56;
  inline ::google::protobuf::uint32 protecttimelength() const;
  inline void set_protecttimelength(::google::protobuf::uint32 value);
  
  // optional uint32 RoleWorldID = 57;
  inline bool has_roleworldid() const;
  inline void clear_roleworldid();
  static const int kRoleWorldIDFieldNumber = 57;
  inline ::google::protobuf::uint32 roleworldid() const;
  inline void set_roleworldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 commhandle_;
  ::google::protobuf::uint32 logintoken_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 nationality_;
  ::google::protobuf::uint32 facetype_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 lastlogin_;
  ::google::protobuf::uint32 datalength_;
  ::std::string* data_;
  static const ::std::string _default_data_;
  ::google::protobuf::uint32 teamflag_;
  ::google::protobuf::uint64 key_;
  ::std::string* encryptkey_;
  static const ::std::string _default_encryptkey_;
  ::google::protobuf::uint32 pettempid_;
  ::google::protobuf::uint32 petonlinetime_;
  ::google::protobuf::uint32 petmode_;
  ::PBTeamInfo* teamdata_;
  ::PBMsg* teammsg_;
  ::google::protobuf::uint32 familyid_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  ::google::protobuf::uint32 isfamilyheader_;
  ::google::protobuf::uint32 ifhasapplies_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 iscorperheader_;
  ::google::protobuf::uint32 ifhascorpsapply_;
  ::google::protobuf::uint32 camp_;
  ::google::protobuf::uint32 iftracedplayer_;
  ::google::protobuf::uint32 familyheaderid_;
  ::google::protobuf::uint32 corpsheaderid_;
  ::google::protobuf::int32 validseconds_;
  ::google::protobuf::uint32 adultflag_;
  ::google::protobuf::uint32 familypost_;
  ::google::protobuf::uint32 corpspost_;
  ::google::protobuf::uint32 familycontribute_;
  ::google::protobuf::uint32 corpscontribute_;
  ::google::protobuf::uint32 familymoney_;
  ::google::protobuf::uint32 corpsmoney_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::google::protobuf::uint32 headcorpsid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 officialid_;
  ::google::protobuf::uint32 kingid_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  ::google::protobuf::uint32 protecttime_;
  ::google::protobuf::uint32 passwordstatus_;
  ::google::protobuf::uint32 protecttimelength_;
  ::google::protobuf::uint32 roleworldid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(57 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerRedirectMapNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerEnterMapResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerEnterMapResponse();
  virtual ~CMessagePlayerEnterMapResponse();
  
  CMessagePlayerEnterMapResponse(const CMessagePlayerEnterMapResponse& from);
  
  inline CMessagePlayerEnterMapResponse& operator=(const CMessagePlayerEnterMapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerEnterMapResponse& default_instance();
  void Swap(CMessagePlayerEnterMapResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerEnterMapResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerEnterMapResponse& from);
  void MergeFrom(const CMessagePlayerEnterMapResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 3;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 3;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 5;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 6;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 6;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional int32 ErrorCode = 7;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 7;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerEnterMapResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerLoginCompleteNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerLoginCompleteNotice();
  virtual ~CMessagePlayerLoginCompleteNotice();
  
  CMessagePlayerLoginCompleteNotice(const CMessagePlayerLoginCompleteNotice& from);
  
  inline CMessagePlayerLoginCompleteNotice& operator=(const CMessagePlayerLoginCompleteNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerLoginCompleteNotice& default_instance();
  void Swap(CMessagePlayerLoginCompleteNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerLoginCompleteNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerLoginCompleteNotice& from);
  void MergeFrom(const CMessagePlayerLoginCompleteNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerLoginCompleteNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerLeaveMapNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerLeaveMapNotice();
  virtual ~CMessagePlayerLeaveMapNotice();
  
  CMessagePlayerLeaveMapNotice(const CMessagePlayerLeaveMapNotice& from);
  
  inline CMessagePlayerLeaveMapNotice& operator=(const CMessagePlayerLeaveMapNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerLeaveMapNotice& default_instance();
  void Swap(CMessagePlayerLeaveMapNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerLeaveMapNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerLeaveMapNotice& from);
  void MergeFrom(const CMessagePlayerLeaveMapNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional .EMLeaveReason Reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline EMLeaveReason reason() const;
  inline void set_reason(EMLeaveReason value);
  
  // optional uint32 CharLevel = 4;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);
  
  // optional uint32 CharMetier = 5;
  inline bool has_charmetier() const;
  inline void clear_charmetier();
  static const int kCharMetierFieldNumber = 5;
  inline ::google::protobuf::uint32 charmetier() const;
  inline void set_charmetier(::google::protobuf::uint32 value);
  
  // optional uint32 Money1 = 6;
  inline bool has_money1() const;
  inline void clear_money1();
  static const int kMoney1FieldNumber = 6;
  inline ::google::protobuf::uint32 money1() const;
  inline void set_money1(::google::protobuf::uint32 value);
  
  // optional uint32 Money2 = 7;
  inline bool has_money2() const;
  inline void clear_money2();
  static const int kMoney2FieldNumber = 7;
  inline ::google::protobuf::uint32 money2() const;
  inline void set_money2(::google::protobuf::uint32 value);
  
  // optional uint64 Exp = 8;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 8;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 LogoutFlag = 9;
  inline bool has_logoutflag() const;
  inline void clear_logoutflag();
  static const int kLogoutFlagFieldNumber = 9;
  inline ::google::protobuf::uint32 logoutflag() const;
  inline void set_logoutflag(::google::protobuf::uint32 value);
  
  // optional .EMSaveResult SaveFlag = 10;
  inline bool has_saveflag() const;
  inline void clear_saveflag();
  static const int kSaveFlagFieldNumber = 10;
  inline EMSaveResult saveflag() const;
  inline void set_saveflag(EMSaveResult value);
  
  // optional uint32 GlobalSceneWorldID = 11;
  inline bool has_globalsceneworldid() const;
  inline void clear_globalsceneworldid();
  static const int kGlobalSceneWorldIDFieldNumber = 11;
  inline ::google::protobuf::uint32 globalsceneworldid() const;
  inline void set_globalsceneworldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 accountid_;
  int reason_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint32 charmetier_;
  ::google::protobuf::uint32 money1_;
  ::google::protobuf::uint32 money2_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 logoutflag_;
  int saveflag_;
  ::google::protobuf::uint32 globalsceneworldid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerLeaveMapNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerLeaveMapResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerLeaveMapResponse();
  virtual ~CMessagePlayerLeaveMapResponse();
  
  CMessagePlayerLeaveMapResponse(const CMessagePlayerLeaveMapResponse& from);
  
  inline CMessagePlayerLeaveMapResponse& operator=(const CMessagePlayerLeaveMapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerLeaveMapResponse& default_instance();
  void Swap(CMessagePlayerLeaveMapResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerLeaveMapResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerLeaveMapResponse& from);
  void MergeFrom(const CMessagePlayerLeaveMapResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerLeaveMapResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerReturn2GateNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerReturn2GateNotice();
  virtual ~CMessagePlayerReturn2GateNotice();
  
  CMessagePlayerReturn2GateNotice(const CMessagePlayerReturn2GateNotice& from);
  
  inline CMessagePlayerReturn2GateNotice& operator=(const CMessagePlayerReturn2GateNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerReturn2GateNotice& default_instance();
  void Swap(CMessagePlayerReturn2GateNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerReturn2GateNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerReturn2GateNotice& from);
  void MergeFrom(const CMessagePlayerReturn2GateNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerReturn2GateNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerReturn2GateResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerReturn2GateResponse();
  virtual ~CMessagePlayerReturn2GateResponse();
  
  CMessagePlayerReturn2GateResponse(const CMessagePlayerReturn2GateResponse& from);
  
  inline CMessagePlayerReturn2GateResponse& operator=(const CMessagePlayerReturn2GateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerReturn2GateResponse& default_instance();
  void Swap(CMessagePlayerReturn2GateResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerReturn2GateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerReturn2GateResponse& from);
  void MergeFrom(const CMessagePlayerReturn2GateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerReturn2GateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateMapNotice : public ::google::protobuf::Message {
 public:
  CMessageCreateMapNotice();
  virtual ~CMessageCreateMapNotice();
  
  CMessageCreateMapNotice(const CMessageCreateMapNotice& from);
  
  inline CMessageCreateMapNotice& operator=(const CMessageCreateMapNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateMapNotice& default_instance();
  void Swap(CMessageCreateMapNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateMapNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateMapNotice& from);
  void MergeFrom(const CMessageCreateMapNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 LineID = 1;
  inline int lineid_size() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lineid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lineid();
  inline ::google::protobuf::uint32 lineid(int index) const;
  inline void set_lineid(int index, ::google::protobuf::uint32 value);
  inline void add_lineid(::google::protobuf::uint32 value);
  
  // repeated uint32 MapID = 2;
  inline int mapid_size() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mapid();
  inline ::google::protobuf::uint32 mapid(int index) const;
  inline void set_mapid(int index, ::google::protobuf::uint32 value);
  inline void add_mapid(::google::protobuf::uint32 value);
  
  // repeated string TplName = 3;
  inline int tplname_size() const;
  inline void clear_tplname();
  static const int kTplNameFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tplname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tplname();
  inline const ::std::string& tplname(int index) const;
  inline ::std::string* mutable_tplname(int index);
  inline void set_tplname(int index, const ::std::string& value);
  inline void set_tplname(int index, const char* value);
  inline void set_tplname(int index, const char* value, size_t size);
  inline ::std::string* add_tplname();
  inline void add_tplname(const ::std::string& value);
  inline void add_tplname(const char* value);
  inline void add_tplname(const char* value, size_t size);
  
  // optional uint32 Count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 RtnCode = 5;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 5;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional string Notice = 6;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 6;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lineid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tplname_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 rtncode_;
  ::std::string* notice_;
  static const ::std::string _default_notice_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateMapNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateMapResponse : public ::google::protobuf::Message {
 public:
  CMessageCreateMapResponse();
  virtual ~CMessageCreateMapResponse();
  
  CMessageCreateMapResponse(const CMessageCreateMapResponse& from);
  
  inline CMessageCreateMapResponse& operator=(const CMessageCreateMapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateMapResponse& default_instance();
  void Swap(CMessageCreateMapResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateMapResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateMapResponse& from);
  void MergeFrom(const CMessageCreateMapResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 LineID = 1;
  inline int lineid_size() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lineid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lineid();
  inline ::google::protobuf::uint32 lineid(int index) const;
  inline void set_lineid(int index, ::google::protobuf::uint32 value);
  inline void add_lineid(::google::protobuf::uint32 value);
  
  // repeated uint32 MapID = 2;
  inline int mapid_size() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mapid();
  inline ::google::protobuf::uint32 mapid(int index) const;
  inline void set_mapid(int index, ::google::protobuf::uint32 value);
  inline void add_mapid(::google::protobuf::uint32 value);
  
  // repeated string TplName = 3;
  inline int tplname_size() const;
  inline void clear_tplname();
  static const int kTplNameFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tplname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tplname();
  inline const ::std::string& tplname(int index) const;
  inline ::std::string* mutable_tplname(int index);
  inline void set_tplname(int index, const ::std::string& value);
  inline void set_tplname(int index, const char* value);
  inline void set_tplname(int index, const char* value, size_t size);
  inline ::std::string* add_tplname();
  inline void add_tplname(const ::std::string& value);
  inline void add_tplname(const char* value);
  inline void add_tplname(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lineid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tplname_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateMapResponse* default_instance_;
};
// -------------------------------------------------------------------

class BattleLevel : public ::google::protobuf::Message {
 public:
  BattleLevel();
  virtual ~BattleLevel();
  
  BattleLevel(const BattleLevel& from);
  
  inline BattleLevel& operator=(const BattleLevel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleLevel& default_instance();
  void Swap(BattleLevel* other);
  
  // implements Message ----------------------------------------------
  
  BattleLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleLevel& from);
  void MergeFrom(const BattleLevel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LevelMin = 1;
  inline bool has_levelmin() const;
  inline void clear_levelmin();
  static const int kLevelMinFieldNumber = 1;
  inline ::google::protobuf::uint32 levelmin() const;
  inline void set_levelmin(::google::protobuf::uint32 value);
  
  // optional uint32 LevelMax = 2;
  inline bool has_levelmax() const;
  inline void clear_levelmax();
  static const int kLevelMaxFieldNumber = 2;
  inline ::google::protobuf::uint32 levelmax() const;
  inline void set_levelmax(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 levelmin_;
  ::google::protobuf::uint32 levelmax_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BattleLevel* default_instance_;
};
// -------------------------------------------------------------------

class PBDate : public ::google::protobuf::Message {
 public:
  PBDate();
  virtual ~PBDate();
  
  PBDate(const PBDate& from);
  
  inline PBDate& operator=(const PBDate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDate& default_instance();
  void Swap(PBDate* other);
  
  // implements Message ----------------------------------------------
  
  PBDate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDate& from);
  void MergeFrom(const PBDate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Year = 1;
  inline bool has_year() const;
  inline void clear_year();
  static const int kYearFieldNumber = 1;
  inline ::google::protobuf::uint32 year() const;
  inline void set_year(::google::protobuf::uint32 value);
  
  // optional uint32 Month = 2;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 2;
  inline ::google::protobuf::uint32 month() const;
  inline void set_month(::google::protobuf::uint32 value);
  
  // optional uint32 Day = 3;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 3;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);
  
  // optional uint32 Week = 4;
  inline bool has_week() const;
  inline void clear_week();
  static const int kWeekFieldNumber = 4;
  inline ::google::protobuf::uint32 week() const;
  inline void set_week(::google::protobuf::uint32 value);
  
  // optional uint32 Hr = 5;
  inline bool has_hr() const;
  inline void clear_hr();
  static const int kHrFieldNumber = 5;
  inline ::google::protobuf::uint32 hr() const;
  inline void set_hr(::google::protobuf::uint32 value);
  
  // optional uint32 Minute = 6;
  inline bool has_minute() const;
  inline void clear_minute();
  static const int kMinuteFieldNumber = 6;
  inline ::google::protobuf::uint32 minute() const;
  inline void set_minute(::google::protobuf::uint32 value);
  
  // optional uint32 Sec = 7;
  inline bool has_sec() const;
  inline void clear_sec();
  static const int kSecFieldNumber = 7;
  inline ::google::protobuf::uint32 sec() const;
  inline void set_sec(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 year_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 week_;
  ::google::protobuf::uint32 hr_;
  ::google::protobuf::uint32 minute_;
  ::google::protobuf::uint32 sec_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDate* default_instance_;
};
// -------------------------------------------------------------------

class PBDateSpace : public ::google::protobuf::Message {
 public:
  PBDateSpace();
  virtual ~PBDateSpace();
  
  PBDateSpace(const PBDateSpace& from);
  
  inline PBDateSpace& operator=(const PBDateSpace& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDateSpace& default_instance();
  void Swap(PBDateSpace* other);
  
  // implements Message ----------------------------------------------
  
  PBDateSpace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDateSpace& from);
  void MergeFrom(const PBDateSpace& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBDate Start = 1;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 1;
  inline const ::PBDate& start() const;
  inline ::PBDate* mutable_start();
  
  // optional .PBDate finish = 2;
  inline bool has_finish() const;
  inline void clear_finish();
  static const int kFinishFieldNumber = 2;
  inline const ::PBDate& finish() const;
  inline ::PBDate* mutable_finish();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBDate* start_;
  ::PBDate* finish_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDateSpace* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRegistRepetionInfo : public ::google::protobuf::Message {
 public:
  CMessageRegistRepetionInfo();
  virtual ~CMessageRegistRepetionInfo();
  
  CMessageRegistRepetionInfo(const CMessageRegistRepetionInfo& from);
  
  inline CMessageRegistRepetionInfo& operator=(const CMessageRegistRepetionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRegistRepetionInfo& default_instance();
  void Swap(CMessageRegistRepetionInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRegistRepetionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRegistRepetionInfo& from);
  void MergeFrom(const CMessageRegistRepetionInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LineID = 1;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 1;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // repeated uint32 MapID = 2;
  inline int mapid_size() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mapid();
  inline ::google::protobuf::uint32 mapid(int index) const;
  inline void set_mapid(int index, ::google::protobuf::uint32 value);
  inline void add_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PlayerMax = 3;
  inline bool has_playermax() const;
  inline void clear_playermax();
  static const int kPlayerMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 playermax() const;
  inline void set_playermax(::google::protobuf::uint32 value);
  
  // optional uint32 BackMapID = 4;
  inline bool has_backmapid() const;
  inline void clear_backmapid();
  static const int kBackMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 backmapid() const;
  inline void set_backmapid(::google::protobuf::uint32 value);
  
  // optional uint32 BackPosX = 5;
  inline bool has_backposx() const;
  inline void clear_backposx();
  static const int kBackPosXFieldNumber = 5;
  inline ::google::protobuf::uint32 backposx() const;
  inline void set_backposx(::google::protobuf::uint32 value);
  
  // optional uint32 BackPosY = 6;
  inline bool has_backposy() const;
  inline void clear_backposy();
  static const int kBackPosYFieldNumber = 6;
  inline ::google::protobuf::uint32 backposy() const;
  inline void set_backposy(::google::protobuf::uint32 value);
  
  // optional uint32 CountMax = 7;
  inline bool has_countmax() const;
  inline void clear_countmax();
  static const int kCountMaxFieldNumber = 7;
  inline ::google::protobuf::uint32 countmax() const;
  inline void set_countmax(::google::protobuf::uint32 value);
  
  // optional uint32 RepetionID = 8;
  inline bool has_repetionid() const;
  inline void clear_repetionid();
  static const int kRepetionIDFieldNumber = 8;
  inline ::google::protobuf::uint32 repetionid() const;
  inline void set_repetionid(::google::protobuf::uint32 value);
  
  // repeated .BattleLevel Level = 9;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::BattleLevel >& level() const;
  inline ::google::protobuf::RepeatedPtrField< ::BattleLevel >* mutable_level();
  inline const ::BattleLevel& level(int index) const;
  inline ::BattleLevel* mutable_level(int index);
  inline ::BattleLevel* add_level();
  
  // repeated .PBDateSpace Space = 10;
  inline int space_size() const;
  inline void clear_space();
  static const int kSpaceFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDateSpace >& space() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDateSpace >* mutable_space();
  inline const ::PBDateSpace& space(int index) const;
  inline ::PBDateSpace* mutable_space(int index);
  inline ::PBDateSpace* add_space();
  
  // optional uint32 IsOnTimeOpen = 11;
  inline bool has_isontimeopen() const;
  inline void clear_isontimeopen();
  static const int kIsOnTimeOpenFieldNumber = 11;
  inline ::google::protobuf::uint32 isontimeopen() const;
  inline void set_isontimeopen(::google::protobuf::uint32 value);
  
  // optional uint32 NotLimitTime = 12;
  inline bool has_notlimittime() const;
  inline void clear_notlimittime();
  static const int kNotLimitTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 notlimittime() const;
  inline void set_notlimittime(::google::protobuf::uint32 value);
  
  // optional uint32 Relogin = 13;
  inline bool has_relogin() const;
  inline void clear_relogin();
  static const int kReloginFieldNumber = 13;
  inline ::google::protobuf::uint32 relogin() const;
  inline void set_relogin(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapid_;
  ::google::protobuf::uint32 playermax_;
  ::google::protobuf::uint32 backmapid_;
  ::google::protobuf::uint32 backposx_;
  ::google::protobuf::uint32 backposy_;
  ::google::protobuf::uint32 countmax_;
  ::google::protobuf::uint32 repetionid_;
  ::google::protobuf::RepeatedPtrField< ::BattleLevel > level_;
  ::google::protobuf::RepeatedPtrField< ::PBDateSpace > space_;
  ::google::protobuf::uint32 isontimeopen_;
  ::google::protobuf::uint32 notlimittime_;
  ::google::protobuf::uint32 relogin_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRegistRepetionInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDestroyRepetionMap : public ::google::protobuf::Message {
 public:
  CMessageDestroyRepetionMap();
  virtual ~CMessageDestroyRepetionMap();
  
  CMessageDestroyRepetionMap(const CMessageDestroyRepetionMap& from);
  
  inline CMessageDestroyRepetionMap& operator=(const CMessageDestroyRepetionMap& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDestroyRepetionMap& default_instance();
  void Swap(CMessageDestroyRepetionMap* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDestroyRepetionMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDestroyRepetionMap& from);
  void MergeFrom(const CMessageDestroyRepetionMap& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 Parame = 3;
  inline bool has_parame() const;
  inline void clear_parame();
  static const int kParameFieldNumber = 3;
  inline ::google::protobuf::uint32 parame() const;
  inline void set_parame(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 parame_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDestroyRepetionMap* default_instance_;
};
// -------------------------------------------------------------------

class CMessageG2SRepetionEventCode : public ::google::protobuf::Message {
 public:
  CMessageG2SRepetionEventCode();
  virtual ~CMessageG2SRepetionEventCode();
  
  CMessageG2SRepetionEventCode(const CMessageG2SRepetionEventCode& from);
  
  inline CMessageG2SRepetionEventCode& operator=(const CMessageG2SRepetionEventCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageG2SRepetionEventCode& default_instance();
  void Swap(CMessageG2SRepetionEventCode* other);
  
  // implements Message ----------------------------------------------
  
  CMessageG2SRepetionEventCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageG2SRepetionEventCode& from);
  void MergeFrom(const CMessageG2SRepetionEventCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);
  
  // optional int32 Code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);
  
  // optional int32 RepetionID = 3;
  inline bool has_repetionid() const;
  inline void clear_repetionid();
  static const int kRepetionIDFieldNumber = 3;
  inline ::google::protobuf::int32 repetionid() const;
  inline void set_repetionid(::google::protobuf::int32 value);
  
  // optional int32 Parame = 4;
  inline bool has_parame() const;
  inline void clear_parame();
  static const int kParameFieldNumber = 4;
  inline ::google::protobuf::int32 parame() const;
  inline void set_parame(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 repetionid_;
  ::google::protobuf::int32 parame_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageG2SRepetionEventCode* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerRedirectRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerRedirectRequest();
  virtual ~CMessagePlayerRedirectRequest();
  
  CMessagePlayerRedirectRequest(const CMessagePlayerRedirectRequest& from);
  
  inline CMessagePlayerRedirectRequest& operator=(const CMessagePlayerRedirectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerRedirectRequest& default_instance();
  void Swap(CMessagePlayerRedirectRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerRedirectRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerRedirectRequest& from);
  void MergeFrom(const CMessagePlayerRedirectRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LineID = 1;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 1;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 5;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 5;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 6;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 6;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 7;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 7;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 Gender = 8;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 8;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 9;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 9;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Nationality = 10;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 10;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional uint32 Facetype = 11;
  inline bool has_facetype() const;
  inline void clear_facetype();
  static const int kFacetypeFieldNumber = 11;
  inline ::google::protobuf::uint32 facetype() const;
  inline void set_facetype(::google::protobuf::uint32 value);
  
  // optional uint32 Charlevel = 12;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharlevelFieldNumber = 12;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);
  
  // optional uint64 Exp = 13;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 13;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 Lastlogin = 14;
  inline bool has_lastlogin() const;
  inline void clear_lastlogin();
  static const int kLastloginFieldNumber = 14;
  inline ::google::protobuf::uint32 lastlogin() const;
  inline void set_lastlogin(::google::protobuf::uint32 value);
  
  // optional uint32 DataLength = 16;
  inline bool has_datalength() const;
  inline void clear_datalength();
  static const int kDataLengthFieldNumber = 16;
  inline ::google::protobuf::uint32 datalength() const;
  inline void set_datalength(::google::protobuf::uint32 value);
  
  // optional bytes Data = 17;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 17;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  
  // optional uint32 TeamFlag = 18;
  inline bool has_teamflag() const;
  inline void clear_teamflag();
  static const int kTeamFlagFieldNumber = 18;
  inline ::google::protobuf::uint32 teamflag() const;
  inline void set_teamflag(::google::protobuf::uint32 value);
  
  // optional uint32 TeamLevel = 19;
  inline bool has_teamlevel() const;
  inline void clear_teamlevel();
  static const int kTeamLevelFieldNumber = 19;
  inline ::google::protobuf::uint32 teamlevel() const;
  inline void set_teamlevel(::google::protobuf::uint32 value);
  
  // optional bytes EncryptKey = 20;
  inline bool has_encryptkey() const;
  inline void clear_encryptkey();
  static const int kEncryptKeyFieldNumber = 20;
  inline const ::std::string& encryptkey() const;
  inline void set_encryptkey(const ::std::string& value);
  inline void set_encryptkey(const char* value);
  inline void set_encryptkey(const void* value, size_t size);
  inline ::std::string* mutable_encryptkey();
  
  // optional .PBTeamInfo TeamInfo = 21;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 21;
  inline const ::PBTeamInfo& teaminfo() const;
  inline ::PBTeamInfo* mutable_teaminfo();
  
  // optional uint32 PetTempID = 22;
  inline bool has_pettempid() const;
  inline void clear_pettempid();
  static const int kPetTempIDFieldNumber = 22;
  inline ::google::protobuf::uint32 pettempid() const;
  inline void set_pettempid(::google::protobuf::uint32 value);
  
  // optional uint32 PetOnlineTime = 23;
  inline bool has_petonlinetime() const;
  inline void clear_petonlinetime();
  static const int kPetOnlineTimeFieldNumber = 23;
  inline ::google::protobuf::uint32 petonlinetime() const;
  inline void set_petonlinetime(::google::protobuf::uint32 value);
  
  // optional uint32 PetMode = 24;
  inline bool has_petmode() const;
  inline void clear_petmode();
  static const int kPetModeFieldNumber = 24;
  inline ::google::protobuf::uint32 petmode() const;
  inline void set_petmode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 nationality_;
  ::google::protobuf::uint32 facetype_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 lastlogin_;
  ::google::protobuf::uint32 datalength_;
  ::std::string* data_;
  static const ::std::string _default_data_;
  ::google::protobuf::uint32 teamflag_;
  ::google::protobuf::uint32 teamlevel_;
  ::std::string* encryptkey_;
  static const ::std::string _default_encryptkey_;
  ::PBTeamInfo* teaminfo_;
  ::google::protobuf::uint32 pettempid_;
  ::google::protobuf::uint32 petonlinetime_;
  ::google::protobuf::uint32 petmode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerRedirectRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerRedirectResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerRedirectResponse();
  virtual ~CMessagePlayerRedirectResponse();
  
  CMessagePlayerRedirectResponse(const CMessagePlayerRedirectResponse& from);
  
  inline CMessagePlayerRedirectResponse& operator=(const CMessagePlayerRedirectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerRedirectResponse& default_instance();
  void Swap(CMessagePlayerRedirectResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerRedirectResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerRedirectResponse& from);
  void MergeFrom(const CMessagePlayerRedirectResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional bool Redirect = 2;
  inline bool has_redirect() const;
  inline void clear_redirect();
  static const int kRedirectFieldNumber = 2;
  inline bool redirect() const;
  inline void set_redirect(bool value);
  
  // optional uint32 LineID = 3;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 3;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 5;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 6;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 6;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional string Address = 7;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 7;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  bool redirect_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::std::string* address_;
  static const ::std::string _default_address_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerRedirectResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerEnterConfirmNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerEnterConfirmNotice();
  virtual ~CMessagePlayerEnterConfirmNotice();
  
  CMessagePlayerEnterConfirmNotice(const CMessagePlayerEnterConfirmNotice& from);
  
  inline CMessagePlayerEnterConfirmNotice& operator=(const CMessagePlayerEnterConfirmNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerEnterConfirmNotice& default_instance();
  void Swap(CMessagePlayerEnterConfirmNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerEnterConfirmNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerEnterConfirmNotice& from);
  void MergeFrom(const CMessagePlayerEnterConfirmNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 LineID = 4;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 4;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 6;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 6;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 7;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 7;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 9;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 9;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 Nationality = 10;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 10;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional bytes CSKey = 11;
  inline bool has_cskey() const;
  inline void clear_cskey();
  static const int kCSKeyFieldNumber = 11;
  inline const ::std::string& cskey() const;
  inline void set_cskey(const ::std::string& value);
  inline void set_cskey(const char* value);
  inline void set_cskey(const void* value, size_t size);
  inline ::std::string* mutable_cskey();
  
  // optional uint32 VipFlag = 12;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 12;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 nationality_;
  ::std::string* cskey_;
  static const ::std::string _default_cskey_;
  ::google::protobuf::uint32 vipflag_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerEnterConfirmNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSceneNotOpenNotice : public ::google::protobuf::Message {
 public:
  CMessageSceneNotOpenNotice();
  virtual ~CMessageSceneNotOpenNotice();
  
  CMessageSceneNotOpenNotice(const CMessageSceneNotOpenNotice& from);
  
  inline CMessageSceneNotOpenNotice& operator=(const CMessageSceneNotOpenNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSceneNotOpenNotice& default_instance();
  void Swap(CMessageSceneNotOpenNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSceneNotOpenNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSceneNotOpenNotice& from);
  void MergeFrom(const CMessageSceneNotOpenNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSceneNotOpenNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateVersionNotice : public ::google::protobuf::Message {
 public:
  CMessageUpdateVersionNotice();
  virtual ~CMessageUpdateVersionNotice();
  
  CMessageUpdateVersionNotice(const CMessageUpdateVersionNotice& from);
  
  inline CMessageUpdateVersionNotice& operator=(const CMessageUpdateVersionNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateVersionNotice& default_instance();
  void Swap(CMessageUpdateVersionNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateVersionNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateVersionNotice& from);
  void MergeFrom(const CMessageUpdateVersionNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TemplateVersion = 1;
  inline bool has_templateversion() const;
  inline void clear_templateversion();
  static const int kTemplateVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 templateversion() const;
  inline void set_templateversion(::google::protobuf::uint32 value);
  
  // optional uint32 TaskVersion = 2;
  inline bool has_taskversion() const;
  inline void clear_taskversion();
  static const int kTaskVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 taskversion() const;
  inline void set_taskversion(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 templateversion_;
  ::google::protobuf::uint32 taskversion_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateVersionNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRegistServerRequest : public ::google::protobuf::Message {
 public:
  CMessageRegistServerRequest();
  virtual ~CMessageRegistServerRequest();
  
  CMessageRegistServerRequest(const CMessageRegistServerRequest& from);
  
  inline CMessageRegistServerRequest& operator=(const CMessageRegistServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRegistServerRequest& default_instance();
  void Swap(CMessageRegistServerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRegistServerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRegistServerRequest& from);
  void MergeFrom(const CMessageRegistServerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ServerType = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRegistServerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRegistServerResponse : public ::google::protobuf::Message {
 public:
  CMessageRegistServerResponse();
  virtual ~CMessageRegistServerResponse();
  
  CMessageRegistServerResponse(const CMessageRegistServerResponse& from);
  
  inline CMessageRegistServerResponse& operator=(const CMessageRegistServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRegistServerResponse& default_instance();
  void Swap(CMessageRegistServerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRegistServerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRegistServerResponse& from);
  void MergeFrom(const CMessageRegistServerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ServerType = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRegistServerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageHeartBeatNotice : public ::google::protobuf::Message {
 public:
  CMessageHeartBeatNotice();
  virtual ~CMessageHeartBeatNotice();
  
  CMessageHeartBeatNotice(const CMessageHeartBeatNotice& from);
  
  inline CMessageHeartBeatNotice& operator=(const CMessageHeartBeatNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHeartBeatNotice& default_instance();
  void Swap(CMessageHeartBeatNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageHeartBeatNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageHeartBeatNotice& from);
  void MergeFrom(const CMessageHeartBeatNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ServerType = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageHeartBeatNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerOnLineFriendRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerOnLineFriendRequest();
  virtual ~CMessagePlayerOnLineFriendRequest();
  
  CMessagePlayerOnLineFriendRequest(const CMessagePlayerOnLineFriendRequest& from);
  
  inline CMessagePlayerOnLineFriendRequest& operator=(const CMessagePlayerOnLineFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerOnLineFriendRequest& default_instance();
  void Swap(CMessagePlayerOnLineFriendRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerOnLineFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerOnLineFriendRequest& from);
  void MergeFrom(const CMessagePlayerOnLineFriendRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 CharIDs = 1;
  inline int charids_size() const;
  inline void clear_charids();
  static const int kCharIDsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& charids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_charids();
  inline ::google::protobuf::uint32 charids(int index) const;
  inline void set_charids(int index, ::google::protobuf::uint32 value);
  inline void add_charids(::google::protobuf::uint32 value);
  
  // optional uint32 Requester = 2;
  inline bool has_requester() const;
  inline void clear_requester();
  static const int kRequesterFieldNumber = 2;
  inline ::google::protobuf::uint32 requester() const;
  inline void set_requester(::google::protobuf::uint32 value);
  
  // optional uint32 Flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > charids_;
  ::google::protobuf::uint32 requester_;
  ::google::protobuf::uint32 flag_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerOnLineFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBSinglePlayerInfo : public ::google::protobuf::Message {
 public:
  PBSinglePlayerInfo();
  virtual ~PBSinglePlayerInfo();
  
  PBSinglePlayerInfo(const PBSinglePlayerInfo& from);
  
  inline PBSinglePlayerInfo& operator=(const PBSinglePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSinglePlayerInfo& default_instance();
  void Swap(PBSinglePlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBSinglePlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSinglePlayerInfo& from);
  void MergeFrom(const PBSinglePlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Sex = 4;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 4;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 5;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 5;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Nation = 6;
  inline bool has_nation() const;
  inline void clear_nation();
  static const int kNationFieldNumber = 6;
  inline ::google::protobuf::uint32 nation() const;
  inline void set_nation(::google::protobuf::uint32 value);
  
  // optional uint32 VipFlag = 7;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 7;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
  // optional uint32 noExist = 8;
  inline bool has_noexist() const;
  inline void clear_noexist();
  static const int kNoExistFieldNumber = 8;
  inline ::google::protobuf::uint32 noexist() const;
  inline void set_noexist(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 status_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 nation_;
  ::google::protobuf::uint32 vipflag_;
  ::google::protobuf::uint32 noexist_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSinglePlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerOnLineFriendResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerOnLineFriendResponse();
  virtual ~CMessagePlayerOnLineFriendResponse();
  
  CMessagePlayerOnLineFriendResponse(const CMessagePlayerOnLineFriendResponse& from);
  
  inline CMessagePlayerOnLineFriendResponse& operator=(const CMessagePlayerOnLineFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerOnLineFriendResponse& default_instance();
  void Swap(CMessagePlayerOnLineFriendResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerOnLineFriendResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerOnLineFriendResponse& from);
  void MergeFrom(const CMessagePlayerOnLineFriendResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSinglePlayerInfo Friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSinglePlayerInfo >& friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSinglePlayerInfo >* mutable_friends();
  inline const ::PBSinglePlayerInfo& friends(int index) const;
  inline ::PBSinglePlayerInfo* mutable_friends(int index);
  inline ::PBSinglePlayerInfo* add_friends();
  
  // optional uint32 Requester = 2;
  inline bool has_requester() const;
  inline void clear_requester();
  static const int kRequesterFieldNumber = 2;
  inline ::google::protobuf::uint32 requester() const;
  inline void set_requester(::google::protobuf::uint32 value);
  
  // optional uint32 Flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSinglePlayerInfo > friends_;
  ::google::protobuf::uint32 requester_;
  ::google::protobuf::uint32 flag_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerOnLineFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerChangeStatusNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerChangeStatusNotice();
  virtual ~CMessagePlayerChangeStatusNotice();
  
  CMessagePlayerChangeStatusNotice(const CMessagePlayerChangeStatusNotice& from);
  
  inline CMessagePlayerChangeStatusNotice& operator=(const CMessagePlayerChangeStatusNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerChangeStatusNotice& default_instance();
  void Swap(CMessagePlayerChangeStatusNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerChangeStatusNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerChangeStatusNotice& from);
  void MergeFrom(const CMessagePlayerChangeStatusNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerChangeStatusNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGameHeartBeatNotice : public ::google::protobuf::Message {
 public:
  CMessageGameHeartBeatNotice();
  virtual ~CMessageGameHeartBeatNotice();
  
  CMessageGameHeartBeatNotice(const CMessageGameHeartBeatNotice& from);
  
  inline CMessageGameHeartBeatNotice& operator=(const CMessageGameHeartBeatNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGameHeartBeatNotice& default_instance();
  void Swap(CMessageGameHeartBeatNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGameHeartBeatNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGameHeartBeatNotice& from);
  void MergeFrom(const CMessageGameHeartBeatNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ServerID = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // repeated uint32 CharIDs = 2;
  inline int charids_size() const;
  inline void clear_charids();
  static const int kCharIDsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& charids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_charids();
  inline ::google::protobuf::uint32 charids(int index) const;
  inline void set_charids(int index, ::google::protobuf::uint32 value);
  inline void add_charids(::google::protobuf::uint32 value);
  
  // repeated uint32 ExternalCharIDs = 3;
  inline int externalcharids_size() const;
  inline void clear_externalcharids();
  static const int kExternalCharIDsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& externalcharids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_externalcharids();
  inline ::google::protobuf::uint32 externalcharids(int index) const;
  inline void set_externalcharids(int index, ::google::protobuf::uint32 value);
  inline void add_externalcharids(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > charids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > externalcharids_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGameHeartBeatNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageERatingProtoStream : public ::google::protobuf::Message {
 public:
  CMessageERatingProtoStream();
  virtual ~CMessageERatingProtoStream();
  
  CMessageERatingProtoStream(const CMessageERatingProtoStream& from);
  
  inline CMessageERatingProtoStream& operator=(const CMessageERatingProtoStream& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageERatingProtoStream& default_instance();
  void Swap(CMessageERatingProtoStream* other);
  
  // implements Message ----------------------------------------------
  
  CMessageERatingProtoStream* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageERatingProtoStream& from);
  void MergeFrom(const CMessageERatingProtoStream& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);
  
  // optional bytes buffer = 2;
  inline bool has_buffer() const;
  inline void clear_buffer();
  static const int kBufferFieldNumber = 2;
  inline const ::std::string& buffer() const;
  inline void set_buffer(const ::std::string& value);
  inline void set_buffer(const char* value);
  inline void set_buffer(const void* value, size_t size);
  inline ::std::string* mutable_buffer();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 length_;
  ::std::string* buffer_;
  static const ::std::string _default_buffer_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageERatingProtoStream* default_instance_;
};
// -------------------------------------------------------------------

class CMessageERatingStateNotice : public ::google::protobuf::Message {
 public:
  CMessageERatingStateNotice();
  virtual ~CMessageERatingStateNotice();
  
  CMessageERatingStateNotice(const CMessageERatingStateNotice& from);
  
  inline CMessageERatingStateNotice& operator=(const CMessageERatingStateNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageERatingStateNotice& default_instance();
  void Swap(CMessageERatingStateNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageERatingStateNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageERatingStateNotice& from);
  void MergeFrom(const CMessageERatingStateNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 GatewayID = 1;
  inline bool has_gatewayid() const;
  inline void clear_gatewayid();
  static const int kGatewayIDFieldNumber = 1;
  inline ::google::protobuf::uint32 gatewayid() const;
  inline void set_gatewayid(::google::protobuf::uint32 value);
  
  // optional uint32 binded = 2;
  inline bool has_binded() const;
  inline void clear_binded();
  static const int kBindedFieldNumber = 2;
  inline ::google::protobuf::uint32 binded() const;
  inline void set_binded(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 gatewayid_;
  ::google::protobuf::uint32 binded_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageERatingStateNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateGateTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageCreateGateTeamRequest();
  virtual ~CMessageCreateGateTeamRequest();
  
  CMessageCreateGateTeamRequest(const CMessageCreateGateTeamRequest& from);
  
  inline CMessageCreateGateTeamRequest& operator=(const CMessageCreateGateTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateGateTeamRequest& default_instance();
  void Swap(CMessageCreateGateTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateGateTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateGateTeamRequest& from);
  void MergeFrom(const CMessageCreateGateTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateGateTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateGateTeamResponse : public ::google::protobuf::Message {
 public:
  CMessageCreateGateTeamResponse();
  virtual ~CMessageCreateGateTeamResponse();
  
  CMessageCreateGateTeamResponse(const CMessageCreateGateTeamResponse& from);
  
  inline CMessageCreateGateTeamResponse& operator=(const CMessageCreateGateTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateGateTeamResponse& default_instance();
  void Swap(CMessageCreateGateTeamResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateGateTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateGateTeamResponse& from);
  void MergeFrom(const CMessageCreateGateTeamResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamID = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 2;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 teamid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateGateTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageJoinGateTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageJoinGateTeamRequest();
  virtual ~CMessageJoinGateTeamRequest();
  
  CMessageJoinGateTeamRequest(const CMessageJoinGateTeamRequest& from);
  
  inline CMessageJoinGateTeamRequest& operator=(const CMessageJoinGateTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageJoinGateTeamRequest& default_instance();
  void Swap(CMessageJoinGateTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageJoinGateTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageJoinGateTeamRequest& from);
  void MergeFrom(const CMessageJoinGateTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcNation = 3;
  inline bool has_srcnation() const;
  inline void clear_srcnation();
  static const int kSrcNationFieldNumber = 3;
  inline ::google::protobuf::uint32 srcnation() const;
  inline void set_srcnation(::google::protobuf::uint32 value);
  
  // optional uint32 DesNaiton = 4;
  inline bool has_desnaiton() const;
  inline void clear_desnaiton();
  static const int kDesNaitonFieldNumber = 4;
  inline ::google::protobuf::uint32 desnaiton() const;
  inline void set_desnaiton(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 srcnation_;
  ::google::protobuf::uint32 desnaiton_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageJoinGateTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageJoinGateTeamResponse : public ::google::protobuf::Message {
 public:
  CMessageJoinGateTeamResponse();
  virtual ~CMessageJoinGateTeamResponse();
  
  CMessageJoinGateTeamResponse(const CMessageJoinGateTeamResponse& from);
  
  inline CMessageJoinGateTeamResponse& operator=(const CMessageJoinGateTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageJoinGateTeamResponse& default_instance();
  void Swap(CMessageJoinGateTeamResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageJoinGateTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageJoinGateTeamResponse& from);
  void MergeFrom(const CMessageJoinGateTeamResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 DesCharID = 1;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional .PBTeamItem Item = 2;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::PBTeamItem& item() const;
  inline ::PBTeamItem* mutable_item();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 descharid_;
  ::PBTeamItem* item_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageJoinGateTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRequestJoinReply : public ::google::protobuf::Message {
 public:
  CMessageRequestJoinReply();
  virtual ~CMessageRequestJoinReply();
  
  CMessageRequestJoinReply(const CMessageRequestJoinReply& from);
  
  inline CMessageRequestJoinReply& operator=(const CMessageRequestJoinReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRequestJoinReply& default_instance();
  void Swap(CMessageRequestJoinReply* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRequestJoinReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRequestJoinReply& from);
  void MergeFrom(const CMessageRequestJoinReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 RtnCode = 3;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRequestJoinReply* default_instance_;
};
// -------------------------------------------------------------------

class CMessageJoinGateTeamInvite : public ::google::protobuf::Message {
 public:
  CMessageJoinGateTeamInvite();
  virtual ~CMessageJoinGateTeamInvite();
  
  CMessageJoinGateTeamInvite(const CMessageJoinGateTeamInvite& from);
  
  inline CMessageJoinGateTeamInvite& operator=(const CMessageJoinGateTeamInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageJoinGateTeamInvite& default_instance();
  void Swap(CMessageJoinGateTeamInvite* other);
  
  // implements Message ----------------------------------------------
  
  CMessageJoinGateTeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageJoinGateTeamInvite& from);
  void MergeFrom(const CMessageJoinGateTeamInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcNation = 3;
  inline bool has_srcnation() const;
  inline void clear_srcnation();
  static const int kSrcNationFieldNumber = 3;
  inline ::google::protobuf::uint32 srcnation() const;
  inline void set_srcnation(::google::protobuf::uint32 value);
  
  // optional uint32 DesNaiton = 4;
  inline bool has_desnaiton() const;
  inline void clear_desnaiton();
  static const int kDesNaitonFieldNumber = 4;
  inline ::google::protobuf::uint32 desnaiton() const;
  inline void set_desnaiton(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 srcnation_;
  ::google::protobuf::uint32 desnaiton_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageJoinGateTeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class CMessageJoinTeamInviteResponse : public ::google::protobuf::Message {
 public:
  CMessageJoinTeamInviteResponse();
  virtual ~CMessageJoinTeamInviteResponse();
  
  CMessageJoinTeamInviteResponse(const CMessageJoinTeamInviteResponse& from);
  
  inline CMessageJoinTeamInviteResponse& operator=(const CMessageJoinTeamInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageJoinTeamInviteResponse& default_instance();
  void Swap(CMessageJoinTeamInviteResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageJoinTeamInviteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageJoinTeamInviteResponse& from);
  void MergeFrom(const CMessageJoinTeamInviteResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 DesCharID = 1;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamID = 2;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 2;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 3;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional string SrcName = 4;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 4;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
  // optional string HeadName = 5;
  inline bool has_headname() const;
  inline void clear_headname();
  static const int kHeadNameFieldNumber = 5;
  inline const ::std::string& headname() const;
  inline void set_headname(const ::std::string& value);
  inline void set_headname(const char* value);
  inline void set_headname(const char* value, size_t size);
  inline ::std::string* mutable_headname();
  
  // optional .PBTeamInfo TeamInfo = 6;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 6;
  inline const ::PBTeamInfo& teaminfo() const;
  inline ::PBTeamInfo* mutable_teaminfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint32 srccharid_;
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  ::std::string* headname_;
  static const ::std::string _default_headname_;
  ::PBTeamInfo* teaminfo_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageJoinTeamInviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteJoinReply : public ::google::protobuf::Message {
 public:
  CMessageInviteJoinReply();
  virtual ~CMessageInviteJoinReply();
  
  CMessageInviteJoinReply(const CMessageInviteJoinReply& from);
  
  inline CMessageInviteJoinReply& operator=(const CMessageInviteJoinReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteJoinReply& default_instance();
  void Swap(CMessageInviteJoinReply* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteJoinReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteJoinReply& from);
  void MergeFrom(const CMessageInviteJoinReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamID = 3;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 3;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);
  
  // optional uint32 RtnCode = 4;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 4;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteJoinReply* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInvite2Request : public ::google::protobuf::Message {
 public:
  CMessageInvite2Request();
  virtual ~CMessageInvite2Request();
  
  CMessageInvite2Request(const CMessageInvite2Request& from);
  
  inline CMessageInvite2Request& operator=(const CMessageInvite2Request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInvite2Request& default_instance();
  void Swap(CMessageInvite2Request* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInvite2Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInvite2Request& from);
  void MergeFrom(const CMessageInvite2Request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamItem SrcItem = 1;
  inline bool has_srcitem() const;
  inline void clear_srcitem();
  static const int kSrcItemFieldNumber = 1;
  inline const ::PBTeamItem& srcitem() const;
  inline ::PBTeamItem* mutable_srcitem();
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional string InviterName = 3;
  inline bool has_invitername() const;
  inline void clear_invitername();
  static const int kInviterNameFieldNumber = 3;
  inline const ::std::string& invitername() const;
  inline void set_invitername(const ::std::string& value);
  inline void set_invitername(const char* value);
  inline void set_invitername(const char* value, size_t size);
  inline ::std::string* mutable_invitername();
  
  // optional uint32 InviterCharID = 4;
  inline bool has_invitercharid() const;
  inline void clear_invitercharid();
  static const int kInviterCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 invitercharid() const;
  inline void set_invitercharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBTeamItem* srcitem_;
  ::google::protobuf::uint32 descharid_;
  ::std::string* invitername_;
  static const ::std::string _default_invitername_;
  ::google::protobuf::uint32 invitercharid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInvite2Request* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickoutGateTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageKickoutGateTeamRequest();
  virtual ~CMessageKickoutGateTeamRequest();
  
  CMessageKickoutGateTeamRequest(const CMessageKickoutGateTeamRequest& from);
  
  inline CMessageKickoutGateTeamRequest& operator=(const CMessageKickoutGateTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickoutGateTeamRequest& default_instance();
  void Swap(CMessageKickoutGateTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickoutGateTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickoutGateTeamRequest& from);
  void MergeFrom(const CMessageKickoutGateTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 HeadCharID = 1;
  inline bool has_headcharid() const;
  inline void clear_headcharid();
  static const int kHeadCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 headcharid() const;
  inline void set_headcharid(::google::protobuf::uint32 value);
  
  // optional uint32 MemberCharID = 2;
  inline bool has_membercharid() const;
  inline void clear_membercharid();
  static const int kMemberCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 membercharid() const;
  inline void set_membercharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 headcharid_;
  ::google::protobuf::uint32 membercharid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickoutGateTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeHeaderRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeHeaderRequest();
  virtual ~CMessageChangeHeaderRequest();
  
  CMessageChangeHeaderRequest(const CMessageChangeHeaderRequest& from);
  
  inline CMessageChangeHeaderRequest& operator=(const CMessageChangeHeaderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeHeaderRequest& default_instance();
  void Swap(CMessageChangeHeaderRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeHeaderRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeHeaderRequest& from);
  void MergeFrom(const CMessageChangeHeaderRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 OldHeader = 1;
  inline bool has_oldheader() const;
  inline void clear_oldheader();
  static const int kOldHeaderFieldNumber = 1;
  inline ::google::protobuf::uint32 oldheader() const;
  inline void set_oldheader(::google::protobuf::uint32 value);
  
  // optional uint32 NewHeader = 2;
  inline bool has_newheader() const;
  inline void clear_newheader();
  static const int kNewHeaderFieldNumber = 2;
  inline ::google::protobuf::uint32 newheader() const;
  inline void set_newheader(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oldheader_;
  ::google::protobuf::uint32 newheader_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeHeaderRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeDistributeRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeDistributeRequest();
  virtual ~CMessageChangeDistributeRequest();
  
  CMessageChangeDistributeRequest(const CMessageChangeDistributeRequest& from);
  
  inline CMessageChangeDistributeRequest& operator=(const CMessageChangeDistributeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeDistributeRequest& default_instance();
  void Swap(CMessageChangeDistributeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeDistributeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeDistributeRequest& from);
  void MergeFrom(const CMessageChangeDistributeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Mode = 2;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 2;
  inline ::google::protobuf::uint32 mode() const;
  inline void set_mode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 mode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeDistributeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeDistributeResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeDistributeResponse();
  virtual ~CMessageChangeDistributeResponse();
  
  CMessageChangeDistributeResponse(const CMessageChangeDistributeResponse& from);
  
  inline CMessageChangeDistributeResponse& operator=(const CMessageChangeDistributeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeDistributeResponse& default_instance();
  void Swap(CMessageChangeDistributeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeDistributeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeDistributeResponse& from);
  void MergeFrom(const CMessageChangeDistributeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Mode = 2;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 2;
  inline ::google::protobuf::uint32 mode() const;
  inline void set_mode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 mode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeDistributeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLeaveGateTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageLeaveGateTeamRequest();
  virtual ~CMessageLeaveGateTeamRequest();
  
  CMessageLeaveGateTeamRequest(const CMessageLeaveGateTeamRequest& from);
  
  inline CMessageLeaveGateTeamRequest& operator=(const CMessageLeaveGateTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLeaveGateTeamRequest& default_instance();
  void Swap(CMessageLeaveGateTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLeaveGateTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLeaveGateTeamRequest& from);
  void MergeFrom(const CMessageLeaveGateTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLeaveGateTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEndGateTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageEndGateTeamRequest();
  virtual ~CMessageEndGateTeamRequest();
  
  CMessageEndGateTeamRequest(const CMessageEndGateTeamRequest& from);
  
  inline CMessageEndGateTeamRequest& operator=(const CMessageEndGateTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEndGateTeamRequest& default_instance();
  void Swap(CMessageEndGateTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEndGateTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEndGateTeamRequest& from);
  void MergeFrom(const CMessageEndGateTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEndGateTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNotifySceneToUpdateTeam : public ::google::protobuf::Message {
 public:
  CMessageNotifySceneToUpdateTeam();
  virtual ~CMessageNotifySceneToUpdateTeam();
  
  CMessageNotifySceneToUpdateTeam(const CMessageNotifySceneToUpdateTeam& from);
  
  inline CMessageNotifySceneToUpdateTeam& operator=(const CMessageNotifySceneToUpdateTeam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNotifySceneToUpdateTeam& default_instance();
  void Swap(CMessageNotifySceneToUpdateTeam* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNotifySceneToUpdateTeam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNotifySceneToUpdateTeam& from);
  void MergeFrom(const CMessageNotifySceneToUpdateTeam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 HeadID = 3;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadIDFieldNumber = 3;
  inline ::google::protobuf::uint32 headid() const;
  inline void set_headid(::google::protobuf::uint32 value);
  
  // optional .PBTeamItem Item = 4;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline const ::PBTeamItem& item() const;
  inline ::PBTeamItem* mutable_item();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 code_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 headid_;
  ::PBTeamItem* item_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNotifySceneToUpdateTeam* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNotifySceneToSendTeamList : public ::google::protobuf::Message {
 public:
  CMessageNotifySceneToSendTeamList();
  virtual ~CMessageNotifySceneToSendTeamList();
  
  CMessageNotifySceneToSendTeamList(const CMessageNotifySceneToSendTeamList& from);
  
  inline CMessageNotifySceneToSendTeamList& operator=(const CMessageNotifySceneToSendTeamList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNotifySceneToSendTeamList& default_instance();
  void Swap(CMessageNotifySceneToSendTeamList* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNotifySceneToSendTeamList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNotifySceneToSendTeamList& from);
  void MergeFrom(const CMessageNotifySceneToSendTeamList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 DesCharID = 1;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional .PBTeamInfo TeamInfo = 2;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 2;
  inline const ::PBTeamInfo& teaminfo() const;
  inline ::PBTeamInfo* mutable_teaminfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 descharid_;
  ::PBTeamInfo* teaminfo_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNotifySceneToSendTeamList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNotifyErrToScene : public ::google::protobuf::Message {
 public:
  CMessageNotifyErrToScene();
  virtual ~CMessageNotifyErrToScene();
  
  CMessageNotifyErrToScene(const CMessageNotifyErrToScene& from);
  
  inline CMessageNotifyErrToScene& operator=(const CMessageNotifyErrToScene& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNotifyErrToScene& default_instance();
  void Swap(CMessageNotifyErrToScene* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNotifyErrToScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNotifyErrToScene& from);
  void MergeFrom(const CMessageNotifyErrToScene& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 DesCharID = 1;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 Code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional string Param1 = 3;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 3;
  inline const ::std::string& param1() const;
  inline void set_param1(const ::std::string& value);
  inline void set_param1(const char* value);
  inline void set_param1(const char* value, size_t size);
  inline ::std::string* mutable_param1();
  
  // optional string Param2 = 4;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 4;
  inline const ::std::string& param2() const;
  inline void set_param2(const ::std::string& value);
  inline void set_param2(const char* value);
  inline void set_param2(const char* value, size_t size);
  inline ::std::string* mutable_param2();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 code_;
  ::std::string* param1_;
  static const ::std::string _default_param1_;
  ::std::string* param2_;
  static const ::std::string _default_param2_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNotifyErrToScene* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateTeamPropertyRequest : public ::google::protobuf::Message {
 public:
  CMessageUpdateTeamPropertyRequest();
  virtual ~CMessageUpdateTeamPropertyRequest();
  
  CMessageUpdateTeamPropertyRequest(const CMessageUpdateTeamPropertyRequest& from);
  
  inline CMessageUpdateTeamPropertyRequest& operator=(const CMessageUpdateTeamPropertyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateTeamPropertyRequest& default_instance();
  void Swap(CMessageUpdateTeamPropertyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateTeamPropertyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateTeamPropertyRequest& from);
  void MergeFrom(const CMessageUpdateTeamPropertyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional .PBTeamInfo Info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PBTeamInfo& info() const;
  inline ::PBTeamInfo* mutable_info();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::PBTeamInfo* info_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateTeamPropertyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateTeamPropertyResponse : public ::google::protobuf::Message {
 public:
  CMessageUpdateTeamPropertyResponse();
  virtual ~CMessageUpdateTeamPropertyResponse();
  
  CMessageUpdateTeamPropertyResponse(const CMessageUpdateTeamPropertyResponse& from);
  
  inline CMessageUpdateTeamPropertyResponse& operator=(const CMessageUpdateTeamPropertyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateTeamPropertyResponse& default_instance();
  void Swap(CMessageUpdateTeamPropertyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateTeamPropertyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateTeamPropertyResponse& from);
  void MergeFrom(const CMessageUpdateTeamPropertyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional .PBTeamInfo Info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PBTeamInfo& info() const;
  inline ::PBTeamInfo* mutable_info();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::PBTeamInfo* info_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateTeamPropertyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFollowRequest : public ::google::protobuf::Message {
 public:
  CMessageFollowRequest();
  virtual ~CMessageFollowRequest();
  
  CMessageFollowRequest(const CMessageFollowRequest& from);
  
  inline CMessageFollowRequest& operator=(const CMessageFollowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFollowRequest& default_instance();
  void Swap(CMessageFollowRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFollowRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFollowRequest& from);
  void MergeFrom(const CMessageFollowRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 ActionType = 2;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 actiontype() const;
  inline void set_actiontype(::google::protobuf::uint32 value);
  
  // optional uint32 ResultCode = 3;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 actiontype_;
  ::google::protobuf::uint32 resultcode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFollowRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFollowResponse : public ::google::protobuf::Message {
 public:
  CMessageFollowResponse();
  virtual ~CMessageFollowResponse();
  
  CMessageFollowResponse(const CMessageFollowResponse& from);
  
  inline CMessageFollowResponse& operator=(const CMessageFollowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFollowResponse& default_instance();
  void Swap(CMessageFollowResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFollowResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFollowResponse& from);
  void MergeFrom(const CMessageFollowResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 HeadID = 2;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadIDFieldNumber = 2;
  inline ::google::protobuf::uint32 headid() const;
  inline void set_headid(::google::protobuf::uint32 value);
  
  // optional uint32 ActionType = 3;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 actiontype() const;
  inline void set_actiontype(::google::protobuf::uint32 value);
  
  // optional uint32 ResultCode = 4;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 4;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 headid_;
  ::google::protobuf::uint32 actiontype_;
  ::google::protobuf::uint32 resultcode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFollowResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSendClaimRecruitRequest : public ::google::protobuf::Message {
 public:
  CMessageSendClaimRecruitRequest();
  virtual ~CMessageSendClaimRecruitRequest();
  
  CMessageSendClaimRecruitRequest(const CMessageSendClaimRecruitRequest& from);
  
  inline CMessageSendClaimRecruitRequest& operator=(const CMessageSendClaimRecruitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSendClaimRecruitRequest& default_instance();
  void Swap(CMessageSendClaimRecruitRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSendClaimRecruitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSendClaimRecruitRequest& from);
  void MergeFrom(const CMessageSendClaimRecruitRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional .PBMsg Msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::PBMsg& msg() const;
  inline ::PBMsg* mutable_msg();
  
  // optional uint32 ActionType = 3;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 actiontype() const;
  inline void set_actiontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::PBMsg* msg_;
  ::google::protobuf::uint32 actiontype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSendClaimRecruitRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSendClaimRecruitResponse : public ::google::protobuf::Message {
 public:
  CMessageSendClaimRecruitResponse();
  virtual ~CMessageSendClaimRecruitResponse();
  
  CMessageSendClaimRecruitResponse(const CMessageSendClaimRecruitResponse& from);
  
  inline CMessageSendClaimRecruitResponse& operator=(const CMessageSendClaimRecruitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSendClaimRecruitResponse& default_instance();
  void Swap(CMessageSendClaimRecruitResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSendClaimRecruitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSendClaimRecruitResponse& from);
  void MergeFrom(const CMessageSendClaimRecruitResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional .PBMsg Msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::PBMsg& msg() const;
  inline ::PBMsg* mutable_msg();
  
  // optional uint32 ActionType = 3;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 actiontype() const;
  inline void set_actiontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::PBMsg* msg_;
  ::google::protobuf::uint32 actiontype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSendClaimRecruitResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryClaimRecruitRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryClaimRecruitRequest();
  virtual ~CMessageQueryClaimRecruitRequest();
  
  CMessageQueryClaimRecruitRequest(const CMessageQueryClaimRecruitRequest& from);
  
  inline CMessageQueryClaimRecruitRequest& operator=(const CMessageQueryClaimRecruitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryClaimRecruitRequest& default_instance();
  void Swap(CMessageQueryClaimRecruitRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryClaimRecruitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryClaimRecruitRequest& from);
  void MergeFrom(const CMessageQueryClaimRecruitRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 ActionType = 2;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 actiontype() const;
  inline void set_actiontype(::google::protobuf::uint32 value);
  
  // optional uint32 RootCondition = 3;
  inline bool has_rootcondition() const;
  inline void clear_rootcondition();
  static const int kRootConditionFieldNumber = 3;
  inline ::google::protobuf::uint32 rootcondition() const;
  inline void set_rootcondition(::google::protobuf::uint32 value);
  
  // optional uint32 SubCondition = 4;
  inline bool has_subcondition() const;
  inline void clear_subcondition();
  static const int kSubConditionFieldNumber = 4;
  inline ::google::protobuf::uint32 subcondition() const;
  inline void set_subcondition(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 6;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 6;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 MinLevel = 7;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 8;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 Nationality = 9;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 9;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional uint32 PageIndex = 10;
  inline bool has_pageindex() const;
  inline void clear_pageindex();
  static const int kPageIndexFieldNumber = 10;
  inline ::google::protobuf::uint32 pageindex() const;
  inline void set_pageindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 actiontype_;
  ::google::protobuf::uint32 rootcondition_;
  ::google::protobuf::uint32 subcondition_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 minlevel_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 nationality_;
  ::google::protobuf::uint32 pageindex_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryClaimRecruitRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryClaimRecruitResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryClaimRecruitResponse();
  virtual ~CMessageQueryClaimRecruitResponse();
  
  CMessageQueryClaimRecruitResponse(const CMessageQueryClaimRecruitResponse& from);
  
  inline CMessageQueryClaimRecruitResponse& operator=(const CMessageQueryClaimRecruitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryClaimRecruitResponse& default_instance();
  void Swap(CMessageQueryClaimRecruitResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryClaimRecruitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryClaimRecruitResponse& from);
  void MergeFrom(const CMessageQueryClaimRecruitResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated .PBMsg Msg = 2;
  inline int msg_size() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMsg >& msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMsg >* mutable_msg();
  inline const ::PBMsg& msg(int index) const;
  inline ::PBMsg* mutable_msg(int index);
  inline ::PBMsg* add_msg();
  
  // optional uint32 PageIndex = 3;
  inline bool has_pageindex() const;
  inline void clear_pageindex();
  static const int kPageIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 pageindex() const;
  inline void set_pageindex(::google::protobuf::uint32 value);
  
  // optional uint32 TotalIndex = 4;
  inline bool has_totalindex() const;
  inline void clear_totalindex();
  static const int kTotalIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 totalindex() const;
  inline void set_totalindex(::google::protobuf::uint32 value);
  
  // optional uint32 ActionType = 5;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 actiontype() const;
  inline void set_actiontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedPtrField< ::PBMsg > msg_;
  ::google::protobuf::uint32 pageindex_;
  ::google::protobuf::uint32 totalindex_;
  ::google::protobuf::uint32 actiontype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryClaimRecruitResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDeleteClaimRecruitRequest : public ::google::protobuf::Message {
 public:
  CMessageDeleteClaimRecruitRequest();
  virtual ~CMessageDeleteClaimRecruitRequest();
  
  CMessageDeleteClaimRecruitRequest(const CMessageDeleteClaimRecruitRequest& from);
  
  inline CMessageDeleteClaimRecruitRequest& operator=(const CMessageDeleteClaimRecruitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDeleteClaimRecruitRequest& default_instance();
  void Swap(CMessageDeleteClaimRecruitRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDeleteClaimRecruitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDeleteClaimRecruitRequest& from);
  void MergeFrom(const CMessageDeleteClaimRecruitRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 ActionType = 2;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 actiontype() const;
  inline void set_actiontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 actiontype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDeleteClaimRecruitRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDeleteClaimRecruitResponse : public ::google::protobuf::Message {
 public:
  CMessageDeleteClaimRecruitResponse();
  virtual ~CMessageDeleteClaimRecruitResponse();
  
  CMessageDeleteClaimRecruitResponse(const CMessageDeleteClaimRecruitResponse& from);
  
  inline CMessageDeleteClaimRecruitResponse& operator=(const CMessageDeleteClaimRecruitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDeleteClaimRecruitResponse& default_instance();
  void Swap(CMessageDeleteClaimRecruitResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDeleteClaimRecruitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDeleteClaimRecruitResponse& from);
  void MergeFrom(const CMessageDeleteClaimRecruitResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 ActionType = 2;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 actiontype() const;
  inline void set_actiontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 actiontype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDeleteClaimRecruitResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainGateTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageObtainGateTeamRequest();
  virtual ~CMessageObtainGateTeamRequest();
  
  CMessageObtainGateTeamRequest(const CMessageObtainGateTeamRequest& from);
  
  inline CMessageObtainGateTeamRequest& operator=(const CMessageObtainGateTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainGateTeamRequest& default_instance();
  void Swap(CMessageObtainGateTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainGateTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainGateTeamRequest& from);
  void MergeFrom(const CMessageObtainGateTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainGateTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClearInvReqRecordRequest : public ::google::protobuf::Message {
 public:
  CMessageClearInvReqRecordRequest();
  virtual ~CMessageClearInvReqRecordRequest();
  
  CMessageClearInvReqRecordRequest(const CMessageClearInvReqRecordRequest& from);
  
  inline CMessageClearInvReqRecordRequest& operator=(const CMessageClearInvReqRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClearInvReqRecordRequest& default_instance();
  void Swap(CMessageClearInvReqRecordRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClearInvReqRecordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClearInvReqRecordRequest& from);
  void MergeFrom(const CMessageClearInvReqRecordRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClearInvReqRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBMsg : public ::google::protobuf::Message {
 public:
  PBMsg();
  virtual ~PBMsg();
  
  PBMsg(const PBMsg& from);
  
  inline PBMsg& operator=(const PBMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMsg& default_instance();
  void Swap(PBMsg* other);
  
  // implements Message ----------------------------------------------
  
  PBMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMsg& from);
  void MergeFrom(const PBMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Metier = 4;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 4;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 6;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 MinLevel = 7;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional string Content = 8;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 8;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  
  // optional uint32 Count = 9;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 9;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 RootStyle = 10;
  inline bool has_rootstyle() const;
  inline void clear_rootstyle();
  static const int kRootStyleFieldNumber = 10;
  inline ::google::protobuf::uint32 rootstyle() const;
  inline void set_rootstyle(::google::protobuf::uint32 value);
  
  // optional uint32 SubStyle = 11;
  inline bool has_substyle() const;
  inline void clear_substyle();
  static const int kSubStyleFieldNumber = 11;
  inline ::google::protobuf::uint32 substyle() const;
  inline void set_substyle(::google::protobuf::uint32 value);
  
  // optional uint32 Nationality = 12;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 12;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 charid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 minlevel_;
  ::std::string* content_;
  static const ::std::string _default_content_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 rootstyle_;
  ::google::protobuf::uint32 substyle_;
  ::google::protobuf::uint32 nationality_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMsg* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamItem : public ::google::protobuf::Message {
 public:
  PBTeamItem();
  virtual ~PBTeamItem();
  
  PBTeamItem(const PBTeamItem& from);
  
  inline PBTeamItem& operator=(const PBTeamItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamItem& default_instance();
  void Swap(PBTeamItem* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamItem& from);
  void MergeFrom(const PBTeamItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 AccountID = 3;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 3;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 5;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 5;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 6;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 6;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 8;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 8;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 HP = 9;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHPFieldNumber = 9;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // optional uint32 MP = 10;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMPFieldNumber = 10;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);
  
  // optional uint32 AP = 11;
  inline bool has_ap() const;
  inline void clear_ap();
  static const int kAPFieldNumber = 11;
  inline ::google::protobuf::uint32 ap() const;
  inline void set_ap(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 12;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 12;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 13;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 13;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 14;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 14;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 15;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 15;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 16;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 16;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 Nationality = 17;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 17;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional .PBBuffList BuffList = 18;
  inline bool has_bufflist() const;
  inline void clear_bufflist();
  static const int kBuffListFieldNumber = 18;
  inline const ::PBBuffList& bufflist() const;
  inline ::PBBuffList* mutable_bufflist();
  
  // optional uint32 RepetionMapIndex = 19;
  inline bool has_repetionmapindex() const;
  inline void clear_repetionmapindex();
  static const int kRepetionMapIndexFieldNumber = 19;
  inline ::google::protobuf::uint32 repetionmapindex() const;
  inline void set_repetionmapindex(::google::protobuf::uint32 value);
  
  // optional uint32 Order = 20;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 20;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 ap_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 nationality_;
  ::PBBuffList* bufflist_;
  ::google::protobuf::uint32 repetionmapindex_;
  ::google::protobuf::uint32 order_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTeamItem* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamInfo : public ::google::protobuf::Message {
 public:
  PBTeamInfo();
  virtual ~PBTeamInfo();
  
  PBTeamInfo(const PBTeamInfo& from);
  
  inline PBTeamInfo& operator=(const PBTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamInfo& default_instance();
  void Swap(PBTeamInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamInfo& from);
  void MergeFrom(const PBTeamInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 HeaderCharID = 1;
  inline bool has_headercharid() const;
  inline void clear_headercharid();
  static const int kHeaderCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 headercharid() const;
  inline void set_headercharid(::google::protobuf::uint32 value);
  
  // optional uint32 DistributeMode = 2;
  inline bool has_distributemode() const;
  inline void clear_distributemode();
  static const int kDistributeModeFieldNumber = 2;
  inline ::google::protobuf::uint32 distributemode() const;
  inline void set_distributemode(::google::protobuf::uint32 value);
  
  // optional string HeadName = 3;
  inline bool has_headname() const;
  inline void clear_headname();
  static const int kHeadNameFieldNumber = 3;
  inline const ::std::string& headname() const;
  inline void set_headname(const ::std::string& value);
  inline void set_headname(const char* value);
  inline void set_headname(const char* value, size_t size);
  inline ::std::string* mutable_headname();
  
  // optional uint32 Count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 TeamID = 5;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIDFieldNumber = 5;
  inline ::google::protobuf::uint32 teamid() const;
  inline void set_teamid(::google::protobuf::uint32 value);
  
  // repeated .PBTeamItem Members = 6;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamItem >& members() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamItem >* mutable_members();
  inline const ::PBTeamItem& members(int index) const;
  inline ::PBTeamItem* mutable_members(int index);
  inline ::PBTeamItem* add_members();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 headercharid_;
  ::google::protobuf::uint32 distributemode_;
  ::std::string* headname_;
  static const ::std::string _default_headname_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamItem > members_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGateShutDownNotice : public ::google::protobuf::Message {
 public:
  CMessageGateShutDownNotice();
  virtual ~CMessageGateShutDownNotice();
  
  CMessageGateShutDownNotice(const CMessageGateShutDownNotice& from);
  
  inline CMessageGateShutDownNotice& operator=(const CMessageGateShutDownNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGateShutDownNotice& default_instance();
  void Swap(CMessageGateShutDownNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGateShutDownNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGateShutDownNotice& from);
  void MergeFrom(const CMessageGateShutDownNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGateShutDownNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickOffPlayerRequest : public ::google::protobuf::Message {
 public:
  CMessageKickOffPlayerRequest();
  virtual ~CMessageKickOffPlayerRequest();
  
  CMessageKickOffPlayerRequest(const CMessageKickOffPlayerRequest& from);
  
  inline CMessageKickOffPlayerRequest& operator=(const CMessageKickOffPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickOffPlayerRequest& default_instance();
  void Swap(CMessageKickOffPlayerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickOffPlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickOffPlayerRequest& from);
  void MergeFrom(const CMessageKickOffPlayerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional int32 Reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);
  
  // optional uint32 AnotherIP = 4;
  inline bool has_anotherip() const;
  inline void clear_anotherip();
  static const int kAnotherIPFieldNumber = 4;
  inline ::google::protobuf::uint32 anotherip() const;
  inline void set_anotherip(::google::protobuf::uint32 value);
  
  // optional uint32 RoleWorldID = 5;
  inline bool has_roleworldid() const;
  inline void clear_roleworldid();
  static const int kRoleWorldIDFieldNumber = 5;
  inline ::google::protobuf::uint32 roleworldid() const;
  inline void set_roleworldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::int32 reason_;
  ::google::protobuf::uint32 anotherip_;
  ::google::protobuf::uint32 roleworldid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickOffPlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickOffPlayerResponse : public ::google::protobuf::Message {
 public:
  CMessageKickOffPlayerResponse();
  virtual ~CMessageKickOffPlayerResponse();
  
  CMessageKickOffPlayerResponse(const CMessageKickOffPlayerResponse& from);
  
  inline CMessageKickOffPlayerResponse& operator=(const CMessageKickOffPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickOffPlayerResponse& default_instance();
  void Swap(CMessageKickOffPlayerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickOffPlayerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickOffPlayerResponse& from);
  void MergeFrom(const CMessageKickOffPlayerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional int32 Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional uint32 RoleWorldID = 4;
  inline bool has_roleworldid() const;
  inline void clear_roleworldid();
  static const int kRoleWorldIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleworldid() const;
  inline void set_roleworldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 roleworldid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickOffPlayerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetPlayerMailiInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageGetPlayerMailiInfoRequest();
  virtual ~CMessageGetPlayerMailiInfoRequest();
  
  CMessageGetPlayerMailiInfoRequest(const CMessageGetPlayerMailiInfoRequest& from);
  
  inline CMessageGetPlayerMailiInfoRequest& operator=(const CMessageGetPlayerMailiInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetPlayerMailiInfoRequest& default_instance();
  void Swap(CMessageGetPlayerMailiInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetPlayerMailiInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetPlayerMailiInfoRequest& from);
  void MergeFrom(const CMessageGetPlayerMailiInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::int32 charid() const;
  inline void set_charid(::google::protobuf::int32 value);
  
  // optional string RoleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional int32 QueryWay = 4;
  inline bool has_queryway() const;
  inline void clear_queryway();
  static const int kQueryWayFieldNumber = 4;
  inline ::google::protobuf::int32 queryway() const;
  inline void set_queryway(::google::protobuf::int32 value);
  
  // optional uint32 QueryType = 5;
  inline bool has_querytype() const;
  inline void clear_querytype();
  static const int kQueryTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 querytype() const;
  inline void set_querytype(::google::protobuf::uint32 value);
  
  // repeated uint32 QueryData = 6;
  inline int querydata_size() const;
  inline void clear_querydata();
  static const int kQueryDataFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& querydata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_querydata();
  inline ::google::protobuf::uint32 querydata(int index) const;
  inline void set_querydata(int index, ::google::protobuf::uint32 value);
  inline void add_querydata(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 charid_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::int32 queryway_;
  ::google::protobuf::uint32 querytype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > querydata_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetPlayerMailiInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetPlayerMailInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageGetPlayerMailInfoResponse();
  virtual ~CMessageGetPlayerMailInfoResponse();
  
  CMessageGetPlayerMailInfoResponse(const CMessageGetPlayerMailInfoResponse& from);
  
  inline CMessageGetPlayerMailInfoResponse& operator=(const CMessageGetPlayerMailInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetPlayerMailInfoResponse& default_instance();
  void Swap(CMessageGetPlayerMailInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetPlayerMailInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetPlayerMailInfoResponse& from);
  void MergeFrom(const CMessageGetPlayerMailInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::int32 charid() const;
  inline void set_charid(::google::protobuf::int32 value);
  
  // optional int32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional string RoleName = 4;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 4;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional int32 RoleOfCountry = 5;
  inline bool has_roleofcountry() const;
  inline void clear_roleofcountry();
  static const int kRoleOfCountryFieldNumber = 5;
  inline ::google::protobuf::int32 roleofcountry() const;
  inline void set_roleofcountry(::google::protobuf::int32 value);
  
  // optional int32 RoleInCountry = 6;
  inline bool has_roleincountry() const;
  inline void clear_roleincountry();
  static const int kRoleInCountryFieldNumber = 6;
  inline ::google::protobuf::int32 roleincountry() const;
  inline void set_roleincountry(::google::protobuf::int32 value);
  
  // optional int32 RoleOnline = 7;
  inline bool has_roleonline() const;
  inline void clear_roleonline();
  static const int kRoleOnlineFieldNumber = 7;
  inline ::google::protobuf::int32 roleonline() const;
  inline void set_roleonline(::google::protobuf::int32 value);
  
  // optional int32 RoleMailCount = 8;
  inline bool has_rolemailcount() const;
  inline void clear_rolemailcount();
  static const int kRoleMailCountFieldNumber = 8;
  inline ::google::protobuf::int32 rolemailcount() const;
  inline void set_rolemailcount(::google::protobuf::int32 value);
  
  // optional uint32 QueryType = 9;
  inline bool has_querytype() const;
  inline void clear_querytype();
  static const int kQueryTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 querytype() const;
  inline void set_querytype(::google::protobuf::uint32 value);
  
  // repeated uint32 QueryData = 10;
  inline int querydata_size() const;
  inline void clear_querydata();
  static const int kQueryDataFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& querydata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_querydata();
  inline ::google::protobuf::uint32 querydata(int index) const;
  inline void set_querydata(int index, ::google::protobuf::uint32 value);
  inline void add_querydata(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 charid_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::uint32 roleid_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::int32 roleofcountry_;
  ::google::protobuf::int32 roleincountry_;
  ::google::protobuf::int32 roleonline_;
  ::google::protobuf::int32 rolemailcount_;
  ::google::protobuf::uint32 querytype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > querydata_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetPlayerMailInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeMailCountNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeMailCountNotify();
  virtual ~CMessageChangeMailCountNotify();
  
  CMessageChangeMailCountNotify(const CMessageChangeMailCountNotify& from);
  
  inline CMessageChangeMailCountNotify& operator=(const CMessageChangeMailCountNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeMailCountNotify& default_instance();
  void Swap(CMessageChangeMailCountNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeMailCountNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeMailCountNotify& from);
  void MergeFrom(const CMessageChangeMailCountNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::int32 charid() const;
  inline void set_charid(::google::protobuf::int32 value);
  
  // optional string CharName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional int32 QueryWay = 3;
  inline bool has_queryway() const;
  inline void clear_queryway();
  static const int kQueryWayFieldNumber = 3;
  inline ::google::protobuf::int32 queryway() const;
  inline void set_queryway(::google::protobuf::int32 value);
  
  // optional int32 NumChanged = 4;
  inline bool has_numchanged() const;
  inline void clear_numchanged();
  static const int kNumChangedFieldNumber = 4;
  inline ::google::protobuf::int32 numchanged() const;
  inline void set_numchanged(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::int32 queryway_;
  ::google::protobuf::int32 numchanged_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeMailCountNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserIbExchangeNotice : public ::google::protobuf::Message {
 public:
  CMessageUserIbExchangeNotice();
  virtual ~CMessageUserIbExchangeNotice();
  
  CMessageUserIbExchangeNotice(const CMessageUserIbExchangeNotice& from);
  
  inline CMessageUserIbExchangeNotice& operator=(const CMessageUserIbExchangeNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserIbExchangeNotice& default_instance();
  void Swap(CMessageUserIbExchangeNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserIbExchangeNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserIbExchangeNotice& from);
  void MergeFrom(const CMessageUserIbExchangeNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 PurchaseID = 1;
  inline bool has_purchaseid() const;
  inline void clear_purchaseid();
  static const int kPurchaseIDFieldNumber = 1;
  inline ::google::protobuf::uint64 purchaseid() const;
  inline void set_purchaseid(::google::protobuf::uint64 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 GenderID = 4;
  inline bool has_genderid() const;
  inline void clear_genderid();
  static const int kGenderIDFieldNumber = 4;
  inline ::google::protobuf::uint32 genderid() const;
  inline void set_genderid(::google::protobuf::uint32 value);
  
  // optional uint32 MetierID = 5;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 5;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 RatingID = 7;
  inline bool has_ratingid() const;
  inline void clear_ratingid();
  static const int kRatingIDFieldNumber = 7;
  inline ::google::protobuf::uint32 ratingid() const;
  inline void set_ratingid(::google::protobuf::uint32 value);
  
  // optional string IBCode = 8;
  inline bool has_ibcode() const;
  inline void clear_ibcode();
  static const int kIBCodeFieldNumber = 8;
  inline const ::std::string& ibcode() const;
  inline void set_ibcode(const ::std::string& value);
  inline void set_ibcode(const char* value);
  inline void set_ibcode(const char* value, size_t size);
  inline ::std::string* mutable_ibcode();
  
  // optional uint32 PackageFlag = 9;
  inline bool has_packageflag() const;
  inline void clear_packageflag();
  static const int kPackageFlagFieldNumber = 9;
  inline ::google::protobuf::uint32 packageflag() const;
  inline void set_packageflag(::google::protobuf::uint32 value);
  
  // optional uint32 Count = 10;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 10;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional int32 PayTime = 11;
  inline bool has_paytime() const;
  inline void clear_paytime();
  static const int kPayTimeFieldNumber = 11;
  inline ::google::protobuf::int32 paytime() const;
  inline void set_paytime(::google::protobuf::int32 value);
  
  // optional uint32 UserIP = 12;
  inline bool has_userip() const;
  inline void clear_userip();
  static const int kUserIPFieldNumber = 12;
  inline ::google::protobuf::uint32 userip() const;
  inline void set_userip(::google::protobuf::uint32 value);
  
  // optional uint32 SubjectID = 13;
  inline bool has_subjectid() const;
  inline void clear_subjectid();
  static const int kSubjectIDFieldNumber = 13;
  inline ::google::protobuf::uint32 subjectid() const;
  inline void set_subjectid(::google::protobuf::uint32 value);
  
  // optional uint32 AuditFlag = 14;
  inline bool has_auditflag() const;
  inline void clear_auditflag();
  static const int kAuditFlagFieldNumber = 14;
  inline ::google::protobuf::uint32 auditflag() const;
  inline void set_auditflag(::google::protobuf::uint32 value);
  
  // optional int32 Price = 15;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 15;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);
  
  // optional int32 DiscountPrice = 16;
  inline bool has_discountprice() const;
  inline void clear_discountprice();
  static const int kDiscountPriceFieldNumber = 16;
  inline ::google::protobuf::int32 discountprice() const;
  inline void set_discountprice(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 purchaseid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 genderid_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 ratingid_;
  ::std::string* ibcode_;
  static const ::std::string _default_ibcode_;
  ::google::protobuf::uint32 packageflag_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::int32 paytime_;
  ::google::protobuf::uint32 userip_;
  ::google::protobuf::uint32 subjectid_;
  ::google::protobuf::uint32 auditflag_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 discountprice_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserIbExchangeNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserUseIbItemNotice : public ::google::protobuf::Message {
 public:
  CMessageUserUseIbItemNotice();
  virtual ~CMessageUserUseIbItemNotice();
  
  CMessageUserUseIbItemNotice(const CMessageUserUseIbItemNotice& from);
  
  inline CMessageUserUseIbItemNotice& operator=(const CMessageUserUseIbItemNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserUseIbItemNotice& default_instance();
  void Swap(CMessageUserUseIbItemNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserUseIbItemNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserUseIbItemNotice& from);
  void MergeFrom(const CMessageUserUseIbItemNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint64 PurchaseID = 3;
  inline bool has_purchaseid() const;
  inline void clear_purchaseid();
  static const int kPurchaseIDFieldNumber = 3;
  inline ::google::protobuf::uint64 purchaseid() const;
  inline void set_purchaseid(::google::protobuf::uint64 value);
  
  // optional uint32 GenderID = 4;
  inline bool has_genderid() const;
  inline void clear_genderid();
  static const int kGenderIDFieldNumber = 4;
  inline ::google::protobuf::uint32 genderid() const;
  inline void set_genderid(::google::protobuf::uint32 value);
  
  // optional uint32 MetierID = 5;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 5;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint64 purchaseid_;
  ::google::protobuf::uint32 genderid_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserUseIbItemNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAddFriendRequest : public ::google::protobuf::Message {
 public:
  CMessageAddFriendRequest();
  virtual ~CMessageAddFriendRequest();
  
  CMessageAddFriendRequest(const CMessageAddFriendRequest& from);
  
  inline CMessageAddFriendRequest& operator=(const CMessageAddFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddFriendRequest& default_instance();
  void Swap(CMessageAddFriendRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAddFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAddFriendRequest& from);
  void MergeFrom(const CMessageAddFriendRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed32 SrcID = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);
  
  // optional fixed32 DesID = 2;
  inline bool has_desid() const;
  inline void clear_desid();
  static const int kDesIDFieldNumber = 2;
  inline ::google::protobuf::uint32 desid() const;
  inline void set_desid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcLevel = 3;
  inline bool has_srclevel() const;
  inline void clear_srclevel();
  static const int kSrcLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 srclevel() const;
  inline void set_srclevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srcid_;
  ::google::protobuf::uint32 desid_;
  ::google::protobuf::uint32 srclevel_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAddFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAddFriendResponse : public ::google::protobuf::Message {
 public:
  CMessageAddFriendResponse();
  virtual ~CMessageAddFriendResponse();
  
  CMessageAddFriendResponse(const CMessageAddFriendResponse& from);
  
  inline CMessageAddFriendResponse& operator=(const CMessageAddFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddFriendResponse& default_instance();
  void Swap(CMessageAddFriendResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAddFriendResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAddFriendResponse& from);
  void MergeFrom(const CMessageAddFriendResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SendBack = 1;
  inline bool has_sendback() const;
  inline void clear_sendback();
  static const int kSendBackFieldNumber = 1;
  inline ::google::protobuf::uint32 sendback() const;
  inline void set_sendback(::google::protobuf::uint32 value);
  
  // optional uint32 RetCode = 2;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 3;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcMetier = 4;
  inline bool has_srcmetier() const;
  inline void clear_srcmetier();
  static const int kSrcMetierFieldNumber = 4;
  inline ::google::protobuf::uint32 srcmetier() const;
  inline void set_srcmetier(::google::protobuf::uint32 value);
  
  // optional uint32 SrcLevel = 5;
  inline bool has_srclevel() const;
  inline void clear_srclevel();
  static const int kSrcLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 srclevel() const;
  inline void set_srclevel(::google::protobuf::uint32 value);
  
  // optional uint32 SrcSex = 6;
  inline bool has_srcsex() const;
  inline void clear_srcsex();
  static const int kSrcSexFieldNumber = 6;
  inline ::google::protobuf::uint32 srcsex() const;
  inline void set_srcsex(::google::protobuf::uint32 value);
  
  // optional uint32 SrcHead = 7;
  inline bool has_srchead() const;
  inline void clear_srchead();
  static const int kSrcHeadFieldNumber = 7;
  inline ::google::protobuf::uint32 srchead() const;
  inline void set_srchead(::google::protobuf::uint32 value);
  
  // optional string SrcName = 8;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 8;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
  // optional uint32 DesCharID = 9;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 9;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional string DesName = 10;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 10;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sendback_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 srcmetier_;
  ::google::protobuf::uint32 srclevel_;
  ::google::protobuf::uint32 srcsex_;
  ::google::protobuf::uint32 srchead_;
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  ::google::protobuf::uint32 descharid_;
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAddFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCharIDRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCharIDRequest();
  virtual ~CMessageGetCharIDRequest();
  
  CMessageGetCharIDRequest(const CMessageGetCharIDRequest& from);
  
  inline CMessageGetCharIDRequest& operator=(const CMessageGetCharIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCharIDRequest& default_instance();
  void Swap(CMessageGetCharIDRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCharIDRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCharIDRequest& from);
  void MergeFrom(const CMessageGetCharIDRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TypeID = 1;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIDFieldNumber = 1;
  inline ::google::protobuf::uint32 typeid_() const;
  inline void set_typeid_(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional fixed32 SrcEntityID = 3;
  inline bool has_srcentityid() const;
  inline void clear_srcentityid();
  static const int kSrcEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srcentityid() const;
  inline void set_srcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 typeid__;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 srcentityid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCharIDRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCharIDResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCharIDResponse();
  virtual ~CMessageGetCharIDResponse();
  
  CMessageGetCharIDResponse(const CMessageGetCharIDResponse& from);
  
  inline CMessageGetCharIDResponse& operator=(const CMessageGetCharIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCharIDResponse& default_instance();
  void Swap(CMessageGetCharIDResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCharIDResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCharIDResponse& from);
  void MergeFrom(const CMessageGetCharIDResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TypeID = 1;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIDFieldNumber = 1;
  inline ::google::protobuf::uint32 typeid_() const;
  inline void set_typeid_(::google::protobuf::uint32 value);
  
  // optional fixed32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional fixed32 SrcEntityID = 3;
  inline bool has_srcentityid() const;
  inline void clear_srcentityid();
  static const int kSrcEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srcentityid() const;
  inline void set_srcentityid(::google::protobuf::uint32 value);
  
  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Head = 5;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 5;
  inline ::google::protobuf::uint32 head() const;
  inline void set_head(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 typeid__;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 srcentityid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 head_;
  ::google::protobuf::uint32 sex_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCharIDResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleChangeCampNotice : public ::google::protobuf::Message {
 public:
  CMessageRoleChangeCampNotice();
  virtual ~CMessageRoleChangeCampNotice();
  
  CMessageRoleChangeCampNotice(const CMessageRoleChangeCampNotice& from);
  
  inline CMessageRoleChangeCampNotice& operator=(const CMessageRoleChangeCampNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleChangeCampNotice& default_instance();
  void Swap(CMessageRoleChangeCampNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRoleChangeCampNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleChangeCampNotice& from);
  void MergeFrom(const CMessageRoleChangeCampNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);
  
  // optional int32 Camp = 2;
  inline bool has_camp() const;
  inline void clear_camp();
  static const int kCampFieldNumber = 2;
  inline ::google::protobuf::int32 camp() const;
  inline void set_camp(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 camp_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRoleChangeCampNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoginSvrStartUpNotice : public ::google::protobuf::Message {
 public:
  CMessageLoginSvrStartUpNotice();
  virtual ~CMessageLoginSvrStartUpNotice();
  
  CMessageLoginSvrStartUpNotice(const CMessageLoginSvrStartUpNotice& from);
  
  inline CMessageLoginSvrStartUpNotice& operator=(const CMessageLoginSvrStartUpNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginSvrStartUpNotice& default_instance();
  void Swap(CMessageLoginSvrStartUpNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoginSvrStartUpNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginSvrStartUpNotice& from);
  void MergeFrom(const CMessageLoginSvrStartUpNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoginSvrStartUpNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGate2LoginHeartBeatNotice : public ::google::protobuf::Message {
 public:
  CMessageGate2LoginHeartBeatNotice();
  virtual ~CMessageGate2LoginHeartBeatNotice();
  
  CMessageGate2LoginHeartBeatNotice(const CMessageGate2LoginHeartBeatNotice& from);
  
  inline CMessageGate2LoginHeartBeatNotice& operator=(const CMessageGate2LoginHeartBeatNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGate2LoginHeartBeatNotice& default_instance();
  void Swap(CMessageGate2LoginHeartBeatNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGate2LoginHeartBeatNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGate2LoginHeartBeatNotice& from);
  void MergeFrom(const CMessageGate2LoginHeartBeatNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PlayerAtGate = 1;
  inline bool has_playeratgate() const;
  inline void clear_playeratgate();
  static const int kPlayerAtGateFieldNumber = 1;
  inline ::google::protobuf::uint32 playeratgate() const;
  inline void set_playeratgate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playeratgate_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGate2LoginHeartBeatNotice* default_instance_;
};
// -------------------------------------------------------------------

class PBPersonalRankInfo : public ::google::protobuf::Message {
 public:
  PBPersonalRankInfo();
  virtual ~PBPersonalRankInfo();
  
  PBPersonalRankInfo(const PBPersonalRankInfo& from);
  
  inline PBPersonalRankInfo& operator=(const PBPersonalRankInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPersonalRankInfo& default_instance();
  void Swap(PBPersonalRankInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPersonalRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPersonalRankInfo& from);
  void MergeFrom(const PBPersonalRankInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 BoundedMoney = 5;
  inline bool has_boundedmoney() const;
  inline void clear_boundedmoney();
  static const int kBoundedMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 boundedmoney() const;
  inline void set_boundedmoney(::google::protobuf::uint32 value);
  
  // optional uint32 KillEnemyNumIn = 6;
  inline bool has_killenemynumin() const;
  inline void clear_killenemynumin();
  static const int kKillEnemyNumInFieldNumber = 6;
  inline ::google::protobuf::uint32 killenemynumin() const;
  inline void set_killenemynumin(::google::protobuf::uint32 value);
  
  // optional uint32 KillEnemyNumOut = 7;
  inline bool has_killenemynumout() const;
  inline void clear_killenemynumout();
  static const int kKillEnemyNumOutFieldNumber = 7;
  inline ::google::protobuf::uint32 killenemynumout() const;
  inline void set_killenemynumout(::google::protobuf::uint32 value);
  
  // optional uint32 Honor = 8;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 8;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);
  
  // optional uint32 Comprehensive = 9;
  inline bool has_comprehensive() const;
  inline void clear_comprehensive();
  static const int kComprehensiveFieldNumber = 9;
  inline ::google::protobuf::uint32 comprehensive() const;
  inline void set_comprehensive(::google::protobuf::uint32 value);
  
  // optional uint32 DieNum = 10;
  inline bool has_dienum() const;
  inline void clear_dienum();
  static const int kDieNumFieldNumber = 10;
  inline ::google::protobuf::uint32 dienum() const;
  inline void set_dienum(::google::protobuf::uint32 value);
  
  // optional uint32 CompletedTasks = 11;
  inline bool has_completedtasks() const;
  inline void clear_completedtasks();
  static const int kCompletedTasksFieldNumber = 11;
  inline ::google::protobuf::uint32 completedtasks() const;
  inline void set_completedtasks(::google::protobuf::uint32 value);
  
  // optional uint32 Country = 12;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 12;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 13;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 13;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Title = 14;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 14;
  inline ::google::protobuf::uint32 title() const;
  inline void set_title(::google::protobuf::uint32 value);
  
  // optional uint32 OnLineTime = 15;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnLineTimeFieldNumber = 15;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);
  
  // optional uint32 PantaoMark = 16;
  inline bool has_pantaomark() const;
  inline void clear_pantaomark();
  static const int kPantaoMarkFieldNumber = 16;
  inline ::google::protobuf::uint32 pantaomark() const;
  inline void set_pantaomark(::google::protobuf::uint32 value);
  
  // optional uint32 LonggongMark = 17;
  inline bool has_longgongmark() const;
  inline void clear_longgongmark();
  static const int kLonggongMarkFieldNumber = 17;
  inline ::google::protobuf::uint32 longgongmark() const;
  inline void set_longgongmark(::google::protobuf::uint32 value);
  
  // optional uint64 Exp = 18;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 18;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 OriginReliveTimes = 19;
  inline bool has_originrelivetimes() const;
  inline void clear_originrelivetimes();
  static const int kOriginReliveTimesFieldNumber = 19;
  inline ::google::protobuf::uint32 originrelivetimes() const;
  inline void set_originrelivetimes(::google::protobuf::uint32 value);
  
  // optional uint32 KillSameNationNum = 20;
  inline bool has_killsamenationnum() const;
  inline void clear_killsamenationnum();
  static const int kKillSameNationNumFieldNumber = 20;
  inline ::google::protobuf::uint32 killsamenationnum() const;
  inline void set_killsamenationnum(::google::protobuf::uint32 value);
  
  // optional uint32 KillOgreNum = 21;
  inline bool has_killogrenum() const;
  inline void clear_killogrenum();
  static const int kKillOgreNumFieldNumber = 21;
  inline ::google::protobuf::uint32 killogrenum() const;
  inline void set_killogrenum(::google::protobuf::uint32 value);
  
  // optional uint32 UpFailNum = 22;
  inline bool has_upfailnum() const;
  inline void clear_upfailnum();
  static const int kUpFailNumFieldNumber = 22;
  inline ::google::protobuf::uint32 upfailnum() const;
  inline void set_upfailnum(::google::protobuf::uint32 value);
  
  // optional uint32 TodayKillEnemyNumIn = 23;
  inline bool has_todaykillenemynumin() const;
  inline void clear_todaykillenemynumin();
  static const int kTodayKillEnemyNumInFieldNumber = 23;
  inline ::google::protobuf::uint32 todaykillenemynumin() const;
  inline void set_todaykillenemynumin(::google::protobuf::uint32 value);
  
  // optional uint32 TodayKillEnemyNumOut = 24;
  inline bool has_todaykillenemynumout() const;
  inline void clear_todaykillenemynumout();
  static const int kTodayKillEnemyNumOutFieldNumber = 24;
  inline ::google::protobuf::uint32 todaykillenemynumout() const;
  inline void set_todaykillenemynumout(::google::protobuf::uint32 value);
  
  // optional uint32 TodayHonor = 25;
  inline bool has_todayhonor() const;
  inline void clear_todayhonor();
  static const int kTodayHonorFieldNumber = 25;
  inline ::google::protobuf::uint32 todayhonor() const;
  inline void set_todayhonor(::google::protobuf::uint32 value);
  
  // optional uint32 Dayanta = 26;
  inline bool has_dayanta() const;
  inline void clear_dayanta();
  static const int kDayantaFieldNumber = 26;
  inline ::google::protobuf::uint32 dayanta() const;
  inline void set_dayanta(::google::protobuf::uint32 value);
  
  // optional uint32 Lianhuadong = 27;
  inline bool has_lianhuadong() const;
  inline void clear_lianhuadong();
  static const int kLianhuadongFieldNumber = 27;
  inline ::google::protobuf::uint32 lianhuadong() const;
  inline void set_lianhuadong(::google::protobuf::uint32 value);
  
  // optional uint32 Huangfengdong = 28;
  inline bool has_huangfengdong() const;
  inline void clear_huangfengdong();
  static const int kHuangfengdongFieldNumber = 28;
  inline ::google::protobuf::uint32 huangfengdong() const;
  inline void set_huangfengdong(::google::protobuf::uint32 value);
  
  // optional uint32 AchivePoint = 29;
  inline bool has_achivepoint() const;
  inline void clear_achivepoint();
  static const int kAchivePointFieldNumber = 29;
  inline ::google::protobuf::uint32 achivepoint() const;
  inline void set_achivepoint(::google::protobuf::uint32 value);
  
  // optional uint32 CharmValue = 30;
  inline bool has_charmvalue() const;
  inline void clear_charmvalue();
  static const int kCharmValueFieldNumber = 30;
  inline ::google::protobuf::uint32 charmvalue() const;
  inline void set_charmvalue(::google::protobuf::uint32 value);
  
  // optional uint32 FlyDungMark = 31;
  inline bool has_flydungmark() const;
  inline void clear_flydungmark();
  static const int kFlyDungMarkFieldNumber = 31;
  inline ::google::protobuf::uint32 flydungmark() const;
  inline void set_flydungmark(::google::protobuf::uint32 value);
  
  // optional uint32 Zhangong = 32;
  inline bool has_zhangong() const;
  inline void clear_zhangong();
  static const int kZhangongFieldNumber = 32;
  inline ::google::protobuf::uint32 zhangong() const;
  inline void set_zhangong(::google::protobuf::uint32 value);
  
  // optional uint32 Zhiguo = 33;
  inline bool has_zhiguo() const;
  inline void clear_zhiguo();
  static const int kZhiguoFieldNumber = 33;
  inline ::google::protobuf::uint32 zhiguo() const;
  inline void set_zhiguo(::google::protobuf::uint32 value);
  
  // optional uint32 Tongshuai = 34;
  inline bool has_tongshuai() const;
  inline void clear_tongshuai();
  static const int kTongshuaiFieldNumber = 34;
  inline ::google::protobuf::uint32 tongshuai() const;
  inline void set_tongshuai(::google::protobuf::uint32 value);
  
  // optional uint32 Wisall = 35;
  inline bool has_wisall() const;
  inline void clear_wisall();
  static const int kWisallFieldNumber = 35;
  inline ::google::protobuf::uint32 wisall() const;
  inline void set_wisall(::google::protobuf::uint32 value);
  
  // optional uint32 YunXiao = 36;
  inline bool has_yunxiao() const;
  inline void clear_yunxiao();
  static const int kYunXiaoFieldNumber = 36;
  inline ::google::protobuf::uint32 yunxiao() const;
  inline void set_yunxiao(::google::protobuf::uint32 value);
  
  // optional uint32 WeekIncCharm = 37;
  inline bool has_weekinccharm() const;
  inline void clear_weekinccharm();
  static const int kWeekIncCharmFieldNumber = 37;
  inline ::google::protobuf::uint32 weekinccharm() const;
  inline void set_weekinccharm(::google::protobuf::uint32 value);
  
  // optional uint32 Shide = 38;
  inline bool has_shide() const;
  inline void clear_shide();
  static const int kShideFieldNumber = 38;
  inline ::google::protobuf::uint32 shide() const;
  inline void set_shide(::google::protobuf::uint32 value);
  
  // optional uint32 XianYuanMark = 39;
  inline bool has_xianyuanmark() const;
  inline void clear_xianyuanmark();
  static const int kXianYuanMarkFieldNumber = 39;
  inline ::google::protobuf::uint32 xianyuanmark() const;
  inline void set_xianyuanmark(::google::protobuf::uint32 value);
  
  // optional uint32 Chushitu = 40;
  inline bool has_chushitu() const;
  inline void clear_chushitu();
  static const int kChushituFieldNumber = 40;
  inline ::google::protobuf::uint32 chushitu() const;
  inline void set_chushitu(::google::protobuf::uint32 value);
  
  // optional uint32 YunxiaoLevel = 41;
  inline bool has_yunxiaolevel() const;
  inline void clear_yunxiaolevel();
  static const int kYunxiaoLevelFieldNumber = 41;
  inline ::google::protobuf::uint32 yunxiaolevel() const;
  inline void set_yunxiaolevel(::google::protobuf::uint32 value);
  
  // optional uint32 WudidongMark = 42;
  inline bool has_wudidongmark() const;
  inline void clear_wudidongmark();
  static const int kWudidongMarkFieldNumber = 42;
  inline ::google::protobuf::uint32 wudidongmark() const;
  inline void set_wudidongmark(::google::protobuf::uint32 value);
  
  // optional uint32 DaLuanDou = 43;
  inline bool has_daluandou() const;
  inline void clear_daluandou();
  static const int kDaLuanDouFieldNumber = 43;
  inline ::google::protobuf::uint32 daluandou() const;
  inline void set_daluandou(::google::protobuf::uint32 value);
  
  // optional uint32 DaLuanDouTotal = 44;
  inline bool has_daluandoutotal() const;
  inline void clear_daluandoutotal();
  static const int kDaLuanDouTotalFieldNumber = 44;
  inline ::google::protobuf::uint32 daluandoutotal() const;
  inline void set_daluandoutotal(::google::protobuf::uint32 value);
  
  // optional uint32 GlobalWar = 45;
  inline bool has_globalwar() const;
  inline void clear_globalwar();
  static const int kGlobalWarFieldNumber = 45;
  inline ::google::protobuf::uint32 globalwar() const;
  inline void set_globalwar(::google::protobuf::uint32 value);
  
  // optional uint32 SpiritScore = 46;
  inline bool has_spiritscore() const;
  inline void clear_spiritscore();
  static const int kSpiritScoreFieldNumber = 46;
  inline ::google::protobuf::uint32 spiritscore() const;
  inline void set_spiritscore(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 boundedmoney_;
  ::google::protobuf::uint32 killenemynumin_;
  ::google::protobuf::uint32 killenemynumout_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 comprehensive_;
  ::google::protobuf::uint32 dienum_;
  ::google::protobuf::uint32 completedtasks_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 onlinetime_;
  ::google::protobuf::uint32 pantaomark_;
  ::google::protobuf::uint32 longgongmark_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 originrelivetimes_;
  ::google::protobuf::uint32 killsamenationnum_;
  ::google::protobuf::uint32 killogrenum_;
  ::google::protobuf::uint32 upfailnum_;
  ::google::protobuf::uint32 todaykillenemynumin_;
  ::google::protobuf::uint32 todaykillenemynumout_;
  ::google::protobuf::uint32 todayhonor_;
  ::google::protobuf::uint32 dayanta_;
  ::google::protobuf::uint32 lianhuadong_;
  ::google::protobuf::uint32 huangfengdong_;
  ::google::protobuf::uint32 achivepoint_;
  ::google::protobuf::uint32 charmvalue_;
  ::google::protobuf::uint32 flydungmark_;
  ::google::protobuf::uint32 zhangong_;
  ::google::protobuf::uint32 zhiguo_;
  ::google::protobuf::uint32 tongshuai_;
  ::google::protobuf::uint32 wisall_;
  ::google::protobuf::uint32 yunxiao_;
  ::google::protobuf::uint32 weekinccharm_;
  ::google::protobuf::uint32 shide_;
  ::google::protobuf::uint32 xianyuanmark_;
  ::google::protobuf::uint32 chushitu_;
  ::google::protobuf::uint32 yunxiaolevel_;
  ::google::protobuf::uint32 wudidongmark_;
  ::google::protobuf::uint32 daluandou_;
  ::google::protobuf::uint32 daluandoutotal_;
  ::google::protobuf::uint32 globalwar_;
  ::google::protobuf::uint32 spiritscore_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(46 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPersonalRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePersonalRankInfoNotify : public ::google::protobuf::Message {
 public:
  CMessagePersonalRankInfoNotify();
  virtual ~CMessagePersonalRankInfoNotify();
  
  CMessagePersonalRankInfoNotify(const CMessagePersonalRankInfoNotify& from);
  
  inline CMessagePersonalRankInfoNotify& operator=(const CMessagePersonalRankInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePersonalRankInfoNotify& default_instance();
  void Swap(CMessagePersonalRankInfoNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePersonalRankInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePersonalRankInfoNotify& from);
  void MergeFrom(const CMessagePersonalRankInfoNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPersonalRankInfo PersonalRanks = 1;
  inline int personalranks_size() const;
  inline void clear_personalranks();
  static const int kPersonalRanksFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPersonalRankInfo >& personalranks() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPersonalRankInfo >* mutable_personalranks();
  inline const ::PBPersonalRankInfo& personalranks(int index) const;
  inline ::PBPersonalRankInfo* mutable_personalranks(int index);
  inline ::PBPersonalRankInfo* add_personalranks();
  
  // optional uint32 Flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);
  
  // optional uint32 RType = 3;
  inline bool has_rtype() const;
  inline void clear_rtype();
  static const int kRTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 rtype() const;
  inline void set_rtype(::google::protobuf::uint32 value);
  
  // optional uint32 IsOver = 4;
  inline bool has_isover() const;
  inline void clear_isover();
  static const int kIsOverFieldNumber = 4;
  inline ::google::protobuf::uint32 isover() const;
  inline void set_isover(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPersonalRankInfo > personalranks_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 rtype_;
  ::google::protobuf::uint32 isover_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePersonalRankInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class PBRankTopTen : public ::google::protobuf::Message {
 public:
  PBRankTopTen();
  virtual ~PBRankTopTen();
  
  PBRankTopTen(const PBRankTopTen& from);
  
  inline PBRankTopTen& operator=(const PBRankTopTen& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRankTopTen& default_instance();
  void Swap(PBRankTopTen* other);
  
  // implements Message ----------------------------------------------
  
  PBRankTopTen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRankTopTen& from);
  void MergeFrom(const PBRankTopTen& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);
  
  // repeated uint32 CharList = 2;
  inline int charlist_size() const;
  inline void clear_charlist();
  static const int kCharListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& charlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_charlist();
  inline ::google::protobuf::uint32 charlist(int index) const;
  inline void set_charlist(int index, ::google::protobuf::uint32 value);
  inline void add_charlist(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ranktype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > charlist_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRankTopTen* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRankRemove : public ::google::protobuf::Message {
 public:
  CMessageRankRemove();
  virtual ~CMessageRankRemove();
  
  CMessageRankRemove(const CMessageRankRemove& from);
  
  inline CMessageRankRemove& operator=(const CMessageRankRemove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRankRemove& default_instance();
  void Swap(CMessageRankRemove* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRankRemove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRankRemove& from);
  void MergeFrom(const CMessageRankRemove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string CharName = 1;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 1;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 RankType = 2;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);
  
  // optional uint32 Refresh = 3;
  inline bool has_refresh() const;
  inline void clear_refresh();
  static const int kRefreshFieldNumber = 3;
  inline ::google::protobuf::uint32 refresh() const;
  inline void set_refresh(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 ranktype_;
  ::google::protobuf::uint32 refresh_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRankRemove* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePersonalRankInfoRequest : public ::google::protobuf::Message {
 public:
  CMessagePersonalRankInfoRequest();
  virtual ~CMessagePersonalRankInfoRequest();
  
  CMessagePersonalRankInfoRequest(const CMessagePersonalRankInfoRequest& from);
  
  inline CMessagePersonalRankInfoRequest& operator=(const CMessagePersonalRankInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePersonalRankInfoRequest& default_instance();
  void Swap(CMessagePersonalRankInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePersonalRankInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePersonalRankInfoRequest& from);
  void MergeFrom(const CMessagePersonalRankInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBRankTopTen TopTenList = 1;
  inline int toptenlist_size() const;
  inline void clear_toptenlist();
  static const int kTopTenListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRankTopTen >& toptenlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRankTopTen >* mutable_toptenlist();
  inline const ::PBRankTopTen& toptenlist(int index) const;
  inline ::PBRankTopTen* mutable_toptenlist(int index);
  inline ::PBRankTopTen* add_toptenlist();
  
  // optional uint32 RType = 2;
  inline bool has_rtype() const;
  inline void clear_rtype();
  static const int kRTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtype() const;
  inline void set_rtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBRankTopTen > toptenlist_;
  ::google::protobuf::uint32 rtype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePersonalRankInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNewRankTopTenNotify : public ::google::protobuf::Message {
 public:
  CMessageNewRankTopTenNotify();
  virtual ~CMessageNewRankTopTenNotify();
  
  CMessageNewRankTopTenNotify(const CMessageNewRankTopTenNotify& from);
  
  inline CMessageNewRankTopTenNotify& operator=(const CMessageNewRankTopTenNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNewRankTopTenNotify& default_instance();
  void Swap(CMessageNewRankTopTenNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNewRankTopTenNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNewRankTopTenNotify& from);
  void MergeFrom(const CMessageNewRankTopTenNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBRankTopTen TopTenList = 1;
  inline int toptenlist_size() const;
  inline void clear_toptenlist();
  static const int kTopTenListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRankTopTen >& toptenlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRankTopTen >* mutable_toptenlist();
  inline const ::PBRankTopTen& toptenlist(int index) const;
  inline ::PBRankTopTen* mutable_toptenlist(int index);
  inline ::PBRankTopTen* add_toptenlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBRankTopTen > toptenlist_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNewRankTopTenNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleGameInfoReportToGateNotify : public ::google::protobuf::Message {
 public:
  CMessageRoleGameInfoReportToGateNotify();
  virtual ~CMessageRoleGameInfoReportToGateNotify();
  
  CMessageRoleGameInfoReportToGateNotify(const CMessageRoleGameInfoReportToGateNotify& from);
  
  inline CMessageRoleGameInfoReportToGateNotify& operator=(const CMessageRoleGameInfoReportToGateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleGameInfoReportToGateNotify& default_instance();
  void Swap(CMessageRoleGameInfoReportToGateNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRoleGameInfoReportToGateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleGameInfoReportToGateNotify& from);
  void MergeFrom(const CMessageRoleGameInfoReportToGateNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 4;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 4;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 5;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 5;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Country = 6;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 6;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);
  
  // repeated uint32 MasterID = 7;
  inline int masterid_size() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& masterid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_masterid();
  inline ::google::protobuf::uint32 masterid(int index) const;
  inline void set_masterid(int index, ::google::protobuf::uint32 value);
  inline void add_masterid(::google::protobuf::uint32 value);
  
  // optional uint32 PKValue = 8;
  inline bool has_pkvalue() const;
  inline void clear_pkvalue();
  static const int kPKValueFieldNumber = 8;
  inline ::google::protobuf::uint32 pkvalue() const;
  inline void set_pkvalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > masterid_;
  ::google::protobuf::uint32 pkvalue_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRoleGameInfoReportToGateNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleTeamWait : public ::google::protobuf::Message {
 public:
  CMessageBattleTeamWait();
  virtual ~CMessageBattleTeamWait();
  
  CMessageBattleTeamWait(const CMessageBattleTeamWait& from);
  
  inline CMessageBattleTeamWait& operator=(const CMessageBattleTeamWait& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleTeamWait& default_instance();
  void Swap(CMessageBattleTeamWait* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleTeamWait* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleTeamWait& from);
  void MergeFrom(const CMessageBattleTeamWait& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 3;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleTeamWait* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleWaitLeaveRequest : public ::google::protobuf::Message {
 public:
  CMessageBattleWaitLeaveRequest();
  virtual ~CMessageBattleWaitLeaveRequest();
  
  CMessageBattleWaitLeaveRequest(const CMessageBattleWaitLeaveRequest& from);
  
  inline CMessageBattleWaitLeaveRequest& operator=(const CMessageBattleWaitLeaveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleWaitLeaveRequest& default_instance();
  void Swap(CMessageBattleWaitLeaveRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleWaitLeaveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleWaitLeaveRequest& from);
  void MergeFrom(const CMessageBattleWaitLeaveRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleWaitLeaveRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleJoinNotice : public ::google::protobuf::Message {
 public:
  CMessageBattleJoinNotice();
  virtual ~CMessageBattleJoinNotice();
  
  CMessageBattleJoinNotice(const CMessageBattleJoinNotice& from);
  
  inline CMessageBattleJoinNotice& operator=(const CMessageBattleJoinNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleJoinNotice& default_instance();
  void Swap(CMessageBattleJoinNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleJoinNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleJoinNotice& from);
  void MergeFrom(const CMessageBattleJoinNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 BattleTime = 5;
  inline bool has_battletime() const;
  inline void clear_battletime();
  static const int kBattleTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 battletime() const;
  inline void set_battletime(::google::protobuf::uint32 value);
  
  // optional uint32 Key = 6;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 6;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // optional uint32 IntoLastRepetion = 7;
  inline bool has_intolastrepetion() const;
  inline void clear_intolastrepetion();
  static const int kIntoLastRepetionFieldNumber = 7;
  inline ::google::protobuf::uint32 intolastrepetion() const;
  inline void set_intolastrepetion(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 battletime_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 intolastrepetion_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleJoinNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattlePlayerJoin : public ::google::protobuf::Message {
 public:
  CMessageBattlePlayerJoin();
  virtual ~CMessageBattlePlayerJoin();
  
  CMessageBattlePlayerJoin(const CMessageBattlePlayerJoin& from);
  
  inline CMessageBattlePlayerJoin& operator=(const CMessageBattlePlayerJoin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattlePlayerJoin& default_instance();
  void Swap(CMessageBattlePlayerJoin* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattlePlayerJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattlePlayerJoin& from);
  void MergeFrom(const CMessageBattlePlayerJoin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 CampID = 4;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 4;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattlePlayerJoin* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleWaitNotice : public ::google::protobuf::Message {
 public:
  CMessageBattleWaitNotice();
  virtual ~CMessageBattleWaitNotice();
  
  CMessageBattleWaitNotice(const CMessageBattleWaitNotice& from);
  
  inline CMessageBattleWaitNotice& operator=(const CMessageBattleWaitNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleWaitNotice& default_instance();
  void Swap(CMessageBattleWaitNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleWaitNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleWaitNotice& from);
  void MergeFrom(const CMessageBattleWaitNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleWaitNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageServerValidateRequest : public ::google::protobuf::Message {
 public:
  CMessageServerValidateRequest();
  virtual ~CMessageServerValidateRequest();
  
  CMessageServerValidateRequest(const CMessageServerValidateRequest& from);
  
  inline CMessageServerValidateRequest& operator=(const CMessageServerValidateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageServerValidateRequest& default_instance();
  void Swap(CMessageServerValidateRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageServerValidateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageServerValidateRequest& from);
  void MergeFrom(const CMessageServerValidateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string MacAddr = 1;
  inline bool has_macaddr() const;
  inline void clear_macaddr();
  static const int kMacAddrFieldNumber = 1;
  inline const ::std::string& macaddr() const;
  inline void set_macaddr(const ::std::string& value);
  inline void set_macaddr(const char* value);
  inline void set_macaddr(const char* value, size_t size);
  inline ::std::string* mutable_macaddr();
  
  // optional string IPAddr = 2;
  inline bool has_ipaddr() const;
  inline void clear_ipaddr();
  static const int kIPAddrFieldNumber = 2;
  inline const ::std::string& ipaddr() const;
  inline void set_ipaddr(const ::std::string& value);
  inline void set_ipaddr(const char* value);
  inline void set_ipaddr(const char* value, size_t size);
  inline ::std::string* mutable_ipaddr();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* macaddr_;
  static const ::std::string _default_macaddr_;
  ::std::string* ipaddr_;
  static const ::std::string _default_ipaddr_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageServerValidateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleWaitLeaveResponse : public ::google::protobuf::Message {
 public:
  CMessageBattleWaitLeaveResponse();
  virtual ~CMessageBattleWaitLeaveResponse();
  
  CMessageBattleWaitLeaveResponse(const CMessageBattleWaitLeaveResponse& from);
  
  inline CMessageBattleWaitLeaveResponse& operator=(const CMessageBattleWaitLeaveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleWaitLeaveResponse& default_instance();
  void Swap(CMessageBattleWaitLeaveResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleWaitLeaveResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleWaitLeaveResponse& from);
  void MergeFrom(const CMessageBattleWaitLeaveResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleWaitLeaveResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageServerValidateResponse : public ::google::protobuf::Message {
 public:
  CMessageServerValidateResponse();
  virtual ~CMessageServerValidateResponse();
  
  CMessageServerValidateResponse(const CMessageServerValidateResponse& from);
  
  inline CMessageServerValidateResponse& operator=(const CMessageServerValidateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageServerValidateResponse& default_instance();
  void Swap(CMessageServerValidateResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageServerValidateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageServerValidateResponse& from);
  void MergeFrom(const CMessageServerValidateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CheckResult = 1;
  inline bool has_checkresult() const;
  inline void clear_checkresult();
  static const int kCheckResultFieldNumber = 1;
  inline ::google::protobuf::uint32 checkresult() const;
  inline void set_checkresult(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 checkresult_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageServerValidateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CTracedPlayerInfo : public ::google::protobuf::Message {
 public:
  CTracedPlayerInfo();
  virtual ~CTracedPlayerInfo();
  
  CTracedPlayerInfo(const CTracedPlayerInfo& from);
  
  inline CTracedPlayerInfo& operator=(const CTracedPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CTracedPlayerInfo& default_instance();
  void Swap(CTracedPlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CTracedPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTracedPlayerInfo& from);
  void MergeFrom(const CTracedPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // repeated uint32 RoleID = 2;
  inline int roleid_size() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& roleid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_roleid();
  inline ::google::protobuf::uint32 roleid(int index) const;
  inline void set_roleid(int index, ::google::protobuf::uint32 value);
  inline void add_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > roleid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CTracedPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNotifyTracedPlayer : public ::google::protobuf::Message {
 public:
  CMessageNotifyTracedPlayer();
  virtual ~CMessageNotifyTracedPlayer();
  
  CMessageNotifyTracedPlayer(const CMessageNotifyTracedPlayer& from);
  
  inline CMessageNotifyTracedPlayer& operator=(const CMessageNotifyTracedPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNotifyTracedPlayer& default_instance();
  void Swap(CMessageNotifyTracedPlayer* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNotifyTracedPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNotifyTracedPlayer& from);
  void MergeFrom(const CMessageNotifyTracedPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CTracedPlayerInfo PlayerList = 1;
  inline int playerlist_size() const;
  inline void clear_playerlist();
  static const int kPlayerListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::CTracedPlayerInfo >& playerlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CTracedPlayerInfo >* mutable_playerlist();
  inline const ::CTracedPlayerInfo& playerlist(int index) const;
  inline ::CTracedPlayerInfo* mutable_playerlist(int index);
  inline ::CTracedPlayerInfo* add_playerlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CTracedPlayerInfo > playerlist_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNotifyTracedPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleCreateRequest : public ::google::protobuf::Message {
 public:
  CMessageBattleCreateRequest();
  virtual ~CMessageBattleCreateRequest();
  
  CMessageBattleCreateRequest(const CMessageBattleCreateRequest& from);
  
  inline CMessageBattleCreateRequest& operator=(const CMessageBattleCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleCreateRequest& default_instance();
  void Swap(CMessageBattleCreateRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleCreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleCreateRequest& from);
  void MergeFrom(const CMessageBattleCreateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleCreateResponse : public ::google::protobuf::Message {
 public:
  CMessageBattleCreateResponse();
  virtual ~CMessageBattleCreateResponse();
  
  CMessageBattleCreateResponse(const CMessageBattleCreateResponse& from);
  
  inline CMessageBattleCreateResponse& operator=(const CMessageBattleCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleCreateResponse& default_instance();
  void Swap(CMessageBattleCreateResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleCreateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleCreateResponse& from);
  void MergeFrom(const CMessageBattleCreateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleCreateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyIDNameNotify : public ::google::protobuf::Message {
 public:
  CMessageFamilyIDNameNotify();
  virtual ~CMessageFamilyIDNameNotify();
  
  CMessageFamilyIDNameNotify(const CMessageFamilyIDNameNotify& from);
  
  inline CMessageFamilyIDNameNotify& operator=(const CMessageFamilyIDNameNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyIDNameNotify& default_instance();
  void Swap(CMessageFamilyIDNameNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyIDNameNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyIDNameNotify& from);
  void MergeFrom(const CMessageFamilyIDNameNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 FamilyID = 1;
  inline int familyid_size() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& familyid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_familyid();
  inline ::google::protobuf::uint32 familyid(int index) const;
  inline void set_familyid(int index, ::google::protobuf::uint32 value);
  inline void add_familyid(::google::protobuf::uint32 value);
  
  // repeated string FamilyName = 2;
  inline int familyname_size() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& familyname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_familyname();
  inline const ::std::string& familyname(int index) const;
  inline ::std::string* mutable_familyname(int index);
  inline void set_familyname(int index, const ::std::string& value);
  inline void set_familyname(int index, const char* value);
  inline void set_familyname(int index, const char* value, size_t size);
  inline ::std::string* add_familyname();
  inline void add_familyname(const ::std::string& value);
  inline void add_familyname(const char* value);
  inline void add_familyname(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > familyid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> familyname_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyIDNameNotify* default_instance_;
};
// -------------------------------------------------------------------

class PBCorpsNpc : public ::google::protobuf::Message {
 public:
  PBCorpsNpc();
  virtual ~PBCorpsNpc();
  
  PBCorpsNpc(const PBCorpsNpc& from);
  
  inline PBCorpsNpc& operator=(const PBCorpsNpc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorpsNpc& default_instance();
  void Swap(PBCorpsNpc* other);
  
  // implements Message ----------------------------------------------
  
  PBCorpsNpc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCorpsNpc& from);
  void MergeFrom(const PBCorpsNpc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCorpsNpc* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNpcListNotify : public ::google::protobuf::Message {
 public:
  CMessageNpcListNotify();
  virtual ~CMessageNpcListNotify();
  
  CMessageNpcListNotify(const CMessageNpcListNotify& from);
  
  inline CMessageNpcListNotify& operator=(const CMessageNpcListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNpcListNotify& default_instance();
  void Swap(CMessageNpcListNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNpcListNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNpcListNotify& from);
  void MergeFrom(const CMessageNpcListNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 NpcID = 1;
  inline int npcid_size() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& npcid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_npcid();
  inline ::google::protobuf::uint32 npcid(int index) const;
  inline void set_npcid(int index, ::google::protobuf::uint32 value);
  inline void add_npcid(::google::protobuf::uint32 value);
  
  // repeated uint32 FamilyID = 2;
  inline int familyid_size() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& familyid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_familyid();
  inline ::google::protobuf::uint32 familyid(int index) const;
  inline void set_familyid(int index, ::google::protobuf::uint32 value);
  inline void add_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // repeated .PBCorpsNpc CorpsNpc = 4;
  inline int corpsnpc_size() const;
  inline void clear_corpsnpc();
  static const int kCorpsNpcFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsNpc >& corpsnpc() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsNpc >* mutable_corpsnpc();
  inline const ::PBCorpsNpc& corpsnpc(int index) const;
  inline ::PBCorpsNpc* mutable_corpsnpc(int index);
  inline ::PBCorpsNpc* add_corpsnpc();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > npcid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > familyid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::PBCorpsNpc > corpsnpc_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNpcListNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBidTimeOutNotify : public ::google::protobuf::Message {
 public:
  CMessageBidTimeOutNotify();
  virtual ~CMessageBidTimeOutNotify();
  
  CMessageBidTimeOutNotify(const CMessageBidTimeOutNotify& from);
  
  inline CMessageBidTimeOutNotify& operator=(const CMessageBidTimeOutNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBidTimeOutNotify& default_instance();
  void Swap(CMessageBidTimeOutNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBidTimeOutNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBidTimeOutNotify& from);
  void MergeFrom(const CMessageBidTimeOutNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 First = 2;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 2;
  inline ::google::protobuf::uint32 first() const;
  inline void set_first(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 first_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBidTimeOutNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleStartRequest : public ::google::protobuf::Message {
 public:
  CMessageBattleStartRequest();
  virtual ~CMessageBattleStartRequest();
  
  CMessageBattleStartRequest(const CMessageBattleStartRequest& from);
  
  inline CMessageBattleStartRequest& operator=(const CMessageBattleStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleStartRequest& default_instance();
  void Swap(CMessageBattleStartRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleStartRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleStartRequest& from);
  void MergeFrom(const CMessageBattleStartRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleStartRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleStartResponse : public ::google::protobuf::Message {
 public:
  CMessageBattleStartResponse();
  virtual ~CMessageBattleStartResponse();
  
  CMessageBattleStartResponse(const CMessageBattleStartResponse& from);
  
  inline CMessageBattleStartResponse& operator=(const CMessageBattleStartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleStartResponse& default_instance();
  void Swap(CMessageBattleStartResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleStartResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleStartResponse& from);
  void MergeFrom(const CMessageBattleStartResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // repeated uint32 CharID = 2;
  inline int charid_size() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& charid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_charid();
  inline ::google::protobuf::uint32 charid(int index) const;
  inline void set_charid(int index, ::google::protobuf::uint32 value);
  inline void add_charid(::google::protobuf::uint32 value);
  
  // repeated string CharName = 3;
  inline int charname_size() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& charname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_charname();
  inline const ::std::string& charname(int index) const;
  inline ::std::string* mutable_charname(int index);
  inline void set_charname(int index, const ::std::string& value);
  inline void set_charname(int index, const char* value);
  inline void set_charname(int index, const char* value, size_t size);
  inline ::std::string* add_charname();
  inline void add_charname(const ::std::string& value);
  inline void add_charname(const char* value);
  inline void add_charname(const char* value, size_t size);
  
  // repeated uint32 Money = 4;
  inline int money_size() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& money() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_money();
  inline ::google::protobuf::uint32 money(int index) const;
  inline void set_money(int index, ::google::protobuf::uint32 value);
  inline void add_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > charid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> charname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > money_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleStartResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleEndNotify : public ::google::protobuf::Message {
 public:
  CMessageBattleEndNotify();
  virtual ~CMessageBattleEndNotify();
  
  CMessageBattleEndNotify(const CMessageBattleEndNotify& from);
  
  inline CMessageBattleEndNotify& operator=(const CMessageBattleEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleEndNotify& default_instance();
  void Swap(CMessageBattleEndNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleEndNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleEndNotify& from);
  void MergeFrom(const CMessageBattleEndNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 WinSide = 2;
  inline bool has_winside() const;
  inline void clear_winside();
  static const int kWinSideFieldNumber = 2;
  inline ::google::protobuf::uint32 winside() const;
  inline void set_winside(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 winside_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleEndNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBidRestartNotify : public ::google::protobuf::Message {
 public:
  CMessageBidRestartNotify();
  virtual ~CMessageBidRestartNotify();
  
  CMessageBidRestartNotify(const CMessageBidRestartNotify& from);
  
  inline CMessageBidRestartNotify& operator=(const CMessageBidRestartNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBidRestartNotify& default_instance();
  void Swap(CMessageBidRestartNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBidRestartNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBidRestartNotify& from);
  void MergeFrom(const CMessageBidRestartNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBidRestartNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainTopTenRequest : public ::google::protobuf::Message {
 public:
  CMessageObtainTopTenRequest();
  virtual ~CMessageObtainTopTenRequest();
  
  CMessageObtainTopTenRequest(const CMessageObtainTopTenRequest& from);
  
  inline CMessageObtainTopTenRequest& operator=(const CMessageObtainTopTenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainTopTenRequest& default_instance();
  void Swap(CMessageObtainTopTenRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainTopTenRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainTopTenRequest& from);
  void MergeFrom(const CMessageObtainTopTenRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainTopTenRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBRankTitle : public ::google::protobuf::Message {
 public:
  PBRankTitle();
  virtual ~PBRankTitle();
  
  PBRankTitle(const PBRankTitle& from);
  
  inline PBRankTitle& operator=(const PBRankTitle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRankTitle& default_instance();
  void Swap(PBRankTitle* other);
  
  // implements Message ----------------------------------------------
  
  PBRankTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRankTitle& from);
  void MergeFrom(const PBRankTitle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional uint32 RankType = 2;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 ranktype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRankTitle* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainTopTenResponse : public ::google::protobuf::Message {
 public:
  CMessageObtainTopTenResponse();
  virtual ~CMessageObtainTopTenResponse();
  
  CMessageObtainTopTenResponse(const CMessageObtainTopTenResponse& from);
  
  inline CMessageObtainTopTenResponse& operator=(const CMessageObtainTopTenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainTopTenResponse& default_instance();
  void Swap(CMessageObtainTopTenResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainTopTenResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainTopTenResponse& from);
  void MergeFrom(const CMessageObtainTopTenResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated .PBRankTitle RankTitle = 2;
  inline int ranktitle_size() const;
  inline void clear_ranktitle();
  static const int kRankTitleFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRankTitle >& ranktitle() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRankTitle >* mutable_ranktitle();
  inline const ::PBRankTitle& ranktitle(int index) const;
  inline ::PBRankTitle* mutable_ranktitle(int index);
  inline ::PBRankTitle* add_ranktitle();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedPtrField< ::PBRankTitle > ranktitle_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainTopTenResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBidTimerStopRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsBidTimerStopRequest();
  virtual ~CMessageCorpsBidTimerStopRequest();
  
  CMessageCorpsBidTimerStopRequest(const CMessageCorpsBidTimerStopRequest& from);
  
  inline CMessageCorpsBidTimerStopRequest& operator=(const CMessageCorpsBidTimerStopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBidTimerStopRequest& default_instance();
  void Swap(CMessageCorpsBidTimerStopRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBidTimerStopRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBidTimerStopRequest& from);
  void MergeFrom(const CMessageCorpsBidTimerStopRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleId = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 battleid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBidTimerStopRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsJoinBattleNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsJoinBattleNotice();
  virtual ~CMessageCorpsJoinBattleNotice();
  
  CMessageCorpsJoinBattleNotice(const CMessageCorpsJoinBattleNotice& from);
  
  inline CMessageCorpsJoinBattleNotice& operator=(const CMessageCorpsJoinBattleNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsJoinBattleNotice& default_instance();
  void Swap(CMessageCorpsJoinBattleNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsJoinBattleNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsJoinBattleNotice& from);
  void MergeFrom(const CMessageCorpsJoinBattleNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsJoinBattleNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNotifyBattleResult2Gate : public ::google::protobuf::Message {
 public:
  CMessageNotifyBattleResult2Gate();
  virtual ~CMessageNotifyBattleResult2Gate();
  
  CMessageNotifyBattleResult2Gate(const CMessageNotifyBattleResult2Gate& from);
  
  inline CMessageNotifyBattleResult2Gate& operator=(const CMessageNotifyBattleResult2Gate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNotifyBattleResult2Gate& default_instance();
  void Swap(CMessageNotifyBattleResult2Gate* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNotifyBattleResult2Gate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNotifyBattleResult2Gate& from);
  void MergeFrom(const CMessageNotifyBattleResult2Gate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 WinCamp = 2;
  inline bool has_wincamp() const;
  inline void clear_wincamp();
  static const int kWinCampFieldNumber = 2;
  inline ::google::protobuf::uint32 wincamp() const;
  inline void set_wincamp(::google::protobuf::uint32 value);
  
  // optional uint64 BattleKey = 3;
  inline bool has_battlekey() const;
  inline void clear_battlekey();
  static const int kBattleKeyFieldNumber = 3;
  inline ::google::protobuf::uint64 battlekey() const;
  inline void set_battlekey(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 wincamp_;
  ::google::protobuf::uint64 battlekey_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNotifyBattleResult2Gate* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBattleFlagRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsBattleFlagRequest();
  virtual ~CMessageCorpsBattleFlagRequest();
  
  CMessageCorpsBattleFlagRequest(const CMessageCorpsBattleFlagRequest& from);
  
  inline CMessageCorpsBattleFlagRequest& operator=(const CMessageCorpsBattleFlagRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBattleFlagRequest& default_instance();
  void Swap(CMessageCorpsBattleFlagRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBattleFlagRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBattleFlagRequest& from);
  void MergeFrom(const CMessageCorpsBattleFlagRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 CampID = 3;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 3;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 4;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 IsAll = 5;
  inline bool has_isall() const;
  inline void clear_isall();
  static const int kIsAllFieldNumber = 5;
  inline ::google::protobuf::uint32 isall() const;
  inline void set_isall(::google::protobuf::uint32 value);
  
  // optional uint64 BattleKey = 6;
  inline bool has_battlekey() const;
  inline void clear_battlekey();
  static const int kBattleKeyFieldNumber = 6;
  inline ::google::protobuf::uint64 battlekey() const;
  inline void set_battlekey(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 isall_;
  ::google::protobuf::uint64 battlekey_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBattleFlagRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBattleFlagResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsBattleFlagResponse();
  virtual ~CMessageCorpsBattleFlagResponse();
  
  CMessageCorpsBattleFlagResponse(const CMessageCorpsBattleFlagResponse& from);
  
  inline CMessageCorpsBattleFlagResponse& operator=(const CMessageCorpsBattleFlagResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBattleFlagResponse& default_instance();
  void Swap(CMessageCorpsBattleFlagResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBattleFlagResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBattleFlagResponse& from);
  void MergeFrom(const CMessageCorpsBattleFlagResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 2;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 2;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 BattleID = 3;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 CampID = 4;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 4;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 IsAll = 5;
  inline bool has_isall() const;
  inline void clear_isall();
  static const int kIsAllFieldNumber = 5;
  inline ::google::protobuf::uint32 isall() const;
  inline void set_isall(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 isall_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBattleFlagResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateRepetionNotify : public ::google::protobuf::Message {
 public:
  CMessageCreateRepetionNotify();
  virtual ~CMessageCreateRepetionNotify();
  
  CMessageCreateRepetionNotify(const CMessageCreateRepetionNotify& from);
  
  inline CMessageCreateRepetionNotify& operator=(const CMessageCreateRepetionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateRepetionNotify& default_instance();
  void Swap(CMessageCreateRepetionNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateRepetionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateRepetionNotify& from);
  void MergeFrom(const CMessageCreateRepetionNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 Parame1 = 3;
  inline bool has_parame1() const;
  inline void clear_parame1();
  static const int kParame1FieldNumber = 3;
  inline ::google::protobuf::uint32 parame1() const;
  inline void set_parame1(::google::protobuf::uint32 value);
  
  // optional uint32 Parame2 = 4;
  inline bool has_parame2() const;
  inline void clear_parame2();
  static const int kParame2FieldNumber = 4;
  inline ::google::protobuf::uint32 parame2() const;
  inline void set_parame2(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 5;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 5;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 Creator = 6;
  inline bool has_creator() const;
  inline void clear_creator();
  static const int kCreatorFieldNumber = 6;
  inline ::google::protobuf::uint32 creator() const;
  inline void set_creator(::google::protobuf::uint32 value);
  
  // optional uint32 RemoveItem = 7;
  inline bool has_removeitem() const;
  inline void clear_removeitem();
  static const int kRemoveItemFieldNumber = 7;
  inline ::google::protobuf::uint32 removeitem() const;
  inline void set_removeitem(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 parame1_;
  ::google::protobuf::uint32 parame2_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 creator_;
  ::google::protobuf::uint32 removeitem_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateRepetionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateRepetionErr : public ::google::protobuf::Message {
 public:
  CMessageCreateRepetionErr();
  virtual ~CMessageCreateRepetionErr();
  
  CMessageCreateRepetionErr(const CMessageCreateRepetionErr& from);
  
  inline CMessageCreateRepetionErr& operator=(const CMessageCreateRepetionErr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateRepetionErr& default_instance();
  void Swap(CMessageCreateRepetionErr* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateRepetionErr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateRepetionErr& from);
  void MergeFrom(const CMessageCreateRepetionErr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 ErrCode = 3;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateRepetionErr* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTeamIntoRepetion : public ::google::protobuf::Message {
 public:
  CMessageTeamIntoRepetion();
  virtual ~CMessageTeamIntoRepetion();
  
  CMessageTeamIntoRepetion(const CMessageTeamIntoRepetion& from);
  
  inline CMessageTeamIntoRepetion& operator=(const CMessageTeamIntoRepetion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTeamIntoRepetion& default_instance();
  void Swap(CMessageTeamIntoRepetion* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTeamIntoRepetion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTeamIntoRepetion& from);
  void MergeFrom(const CMessageTeamIntoRepetion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 Parame1 = 5;
  inline bool has_parame1() const;
  inline void clear_parame1();
  static const int kParame1FieldNumber = 5;
  inline ::google::protobuf::uint32 parame1() const;
  inline void set_parame1(::google::protobuf::uint32 value);
  
  // optional uint32 Parame2 = 6;
  inline bool has_parame2() const;
  inline void clear_parame2();
  static const int kParame2FieldNumber = 6;
  inline ::google::protobuf::uint32 parame2() const;
  inline void set_parame2(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 RemoveItem = 8;
  inline bool has_removeitem() const;
  inline void clear_removeitem();
  static const int kRemoveItemFieldNumber = 8;
  inline ::google::protobuf::uint32 removeitem() const;
  inline void set_removeitem(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 parame1_;
  ::google::protobuf::uint32 parame2_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 removeitem_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTeamIntoRepetion* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSingleIntoRepetion : public ::google::protobuf::Message {
 public:
  CMessageSingleIntoRepetion();
  virtual ~CMessageSingleIntoRepetion();
  
  CMessageSingleIntoRepetion(const CMessageSingleIntoRepetion& from);
  
  inline CMessageSingleIntoRepetion& operator=(const CMessageSingleIntoRepetion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSingleIntoRepetion& default_instance();
  void Swap(CMessageSingleIntoRepetion* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSingleIntoRepetion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSingleIntoRepetion& from);
  void MergeFrom(const CMessageSingleIntoRepetion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 Parame1 = 5;
  inline bool has_parame1() const;
  inline void clear_parame1();
  static const int kParame1FieldNumber = 5;
  inline ::google::protobuf::uint32 parame1() const;
  inline void set_parame1(::google::protobuf::uint32 value);
  
  // optional uint32 Parame2 = 6;
  inline bool has_parame2() const;
  inline void clear_parame2();
  static const int kParame2FieldNumber = 6;
  inline ::google::protobuf::uint32 parame2() const;
  inline void set_parame2(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 RemoveItem = 8;
  inline bool has_removeitem() const;
  inline void clear_removeitem();
  static const int kRemoveItemFieldNumber = 8;
  inline ::google::protobuf::uint32 removeitem() const;
  inline void set_removeitem(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 parame1_;
  ::google::protobuf::uint32 parame2_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 removeitem_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSingleIntoRepetion* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsStartBattleRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsStartBattleRequest();
  virtual ~CMessageCorpsStartBattleRequest();
  
  CMessageCorpsStartBattleRequest(const CMessageCorpsStartBattleRequest& from);
  
  inline CMessageCorpsStartBattleRequest& operator=(const CMessageCorpsStartBattleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsStartBattleRequest& default_instance();
  void Swap(CMessageCorpsStartBattleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsStartBattleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsStartBattleRequest& from);
  void MergeFrom(const CMessageCorpsStartBattleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 battleid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsStartBattleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageIntoRepetionNotify : public ::google::protobuf::Message {
 public:
  CMessageIntoRepetionNotify();
  virtual ~CMessageIntoRepetionNotify();
  
  CMessageIntoRepetionNotify(const CMessageIntoRepetionNotify& from);
  
  inline CMessageIntoRepetionNotify& operator=(const CMessageIntoRepetionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageIntoRepetionNotify& default_instance();
  void Swap(CMessageIntoRepetionNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageIntoRepetionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageIntoRepetionNotify& from);
  void MergeFrom(const CMessageIntoRepetionNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LineID = 1;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 1;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint64 Key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 6;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 6;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 RepetionIndex = 7;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 7;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 repetionindex_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageIntoRepetionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeFamilyContributeNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeFamilyContributeNotify();
  virtual ~CMessageChangeFamilyContributeNotify();
  
  CMessageChangeFamilyContributeNotify(const CMessageChangeFamilyContributeNotify& from);
  
  inline CMessageChangeFamilyContributeNotify& operator=(const CMessageChangeFamilyContributeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeFamilyContributeNotify& default_instance();
  void Swap(CMessageChangeFamilyContributeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeFamilyContributeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeFamilyContributeNotify& from);
  void MergeFrom(const CMessageChangeFamilyContributeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Contribute = 2;
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 2;
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 3;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::uint32 changetype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeFamilyContributeNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeFamilyGloryNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeFamilyGloryNotify();
  virtual ~CMessageChangeFamilyGloryNotify();
  
  CMessageChangeFamilyGloryNotify(const CMessageChangeFamilyGloryNotify& from);
  
  inline CMessageChangeFamilyGloryNotify& operator=(const CMessageChangeFamilyGloryNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeFamilyGloryNotify& default_instance();
  void Swap(CMessageChangeFamilyGloryNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeFamilyGloryNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeFamilyGloryNotify& from);
  void MergeFrom(const CMessageChangeFamilyGloryNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FamilyID = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 1;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 Glory = 2;
  inline bool has_glory() const;
  inline void clear_glory();
  static const int kGloryFieldNumber = 2;
  inline ::google::protobuf::uint32 glory() const;
  inline void set_glory(::google::protobuf::uint32 value);
  
  // optional uint32 IfReduced = 3;
  inline bool has_ifreduced() const;
  inline void clear_ifreduced();
  static const int kIfReducedFieldNumber = 3;
  inline ::google::protobuf::uint32 ifreduced() const;
  inline void set_ifreduced(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 5;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 5;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 6;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 6;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 glory_;
  ::google::protobuf::uint32 ifreduced_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeFamilyGloryNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeFamilyMoneyNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeFamilyMoneyNotify();
  virtual ~CMessageChangeFamilyMoneyNotify();
  
  CMessageChangeFamilyMoneyNotify(const CMessageChangeFamilyMoneyNotify& from);
  
  inline CMessageChangeFamilyMoneyNotify& operator=(const CMessageChangeFamilyMoneyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeFamilyMoneyNotify& default_instance();
  void Swap(CMessageChangeFamilyMoneyNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeFamilyMoneyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeFamilyMoneyNotify& from);
  void MergeFrom(const CMessageChangeFamilyMoneyNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 IfPayout = 2;
  inline bool has_ifpayout() const;
  inline void clear_ifpayout();
  static const int kIfPayoutFieldNumber = 2;
  inline ::google::protobuf::uint32 ifpayout() const;
  inline void set_ifpayout(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 3;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 3;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 5;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 5;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 6;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 6;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 ifpayout_;
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeFamilyMoneyNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSynIbStoreRequest : public ::google::protobuf::Message {
 public:
  CMessageSynIbStoreRequest();
  virtual ~CMessageSynIbStoreRequest();
  
  CMessageSynIbStoreRequest(const CMessageSynIbStoreRequest& from);
  
  inline CMessageSynIbStoreRequest& operator=(const CMessageSynIbStoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSynIbStoreRequest& default_instance();
  void Swap(CMessageSynIbStoreRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSynIbStoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSynIbStoreRequest& from);
  void MergeFrom(const CMessageSynIbStoreRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSynIbStoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSynIbStoreResponse : public ::google::protobuf::Message {
 public:
  CMessageSynIbStoreResponse();
  virtual ~CMessageSynIbStoreResponse();
  
  CMessageSynIbStoreResponse(const CMessageSynIbStoreResponse& from);
  
  inline CMessageSynIbStoreResponse& operator=(const CMessageSynIbStoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSynIbStoreResponse& default_instance();
  void Swap(CMessageSynIbStoreResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSynIbStoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSynIbStoreResponse& from);
  void MergeFrom(const CMessageSynIbStoreResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBIbItemOnSale Goods = 1;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale >& goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale >* mutable_goods();
  inline const ::PBIbItemOnSale& goods(int index) const;
  inline ::PBIbItemOnSale* mutable_goods(int index);
  inline ::PBIbItemOnSale* add_goods();
  
  // repeated .PBIbStore IbStore = 2;
  inline int ibstore_size() const;
  inline void clear_ibstore();
  static const int kIbStoreFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbStore >& ibstore() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbStore >* mutable_ibstore();
  inline const ::PBIbStore& ibstore(int index) const;
  inline ::PBIbStore* mutable_ibstore(int index);
  inline ::PBIbStore* add_ibstore();
  
  // optional int32 Version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);
  
  // repeated .PBIbSubTab FocusTab = 4;
  inline int focustab_size() const;
  inline void clear_focustab();
  static const int kFocusTabFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >& focustab() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >* mutable_focustab();
  inline const ::PBIbSubTab& focustab(int index) const;
  inline ::PBIbSubTab* mutable_focustab(int index);
  inline ::PBIbSubTab* add_focustab();
  
  // optional string Bulletin = 5;
  inline bool has_bulletin() const;
  inline void clear_bulletin();
  static const int kBulletinFieldNumber = 5;
  inline const ::std::string& bulletin() const;
  inline void set_bulletin(const ::std::string& value);
  inline void set_bulletin(const char* value);
  inline void set_bulletin(const char* value, size_t size);
  inline ::std::string* mutable_bulletin();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale > goods_;
  ::google::protobuf::RepeatedPtrField< ::PBIbStore > ibstore_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::RepeatedPtrField< ::PBIbSubTab > focustab_;
  ::std::string* bulletin_;
  static const ::std::string _default_bulletin_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSynIbStoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSynFuncStoreRequest : public ::google::protobuf::Message {
 public:
  CMessageSynFuncStoreRequest();
  virtual ~CMessageSynFuncStoreRequest();
  
  CMessageSynFuncStoreRequest(const CMessageSynFuncStoreRequest& from);
  
  inline CMessageSynFuncStoreRequest& operator=(const CMessageSynFuncStoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSynFuncStoreRequest& default_instance();
  void Swap(CMessageSynFuncStoreRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSynFuncStoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSynFuncStoreRequest& from);
  void MergeFrom(const CMessageSynFuncStoreRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSynFuncStoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSynFuncStoreResponse : public ::google::protobuf::Message {
 public:
  CMessageSynFuncStoreResponse();
  virtual ~CMessageSynFuncStoreResponse();
  
  CMessageSynFuncStoreResponse(const CMessageSynFuncStoreResponse& from);
  
  inline CMessageSynFuncStoreResponse& operator=(const CMessageSynFuncStoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSynFuncStoreResponse& default_instance();
  void Swap(CMessageSynFuncStoreResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSynFuncStoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSynFuncStoreResponse& from);
  void MergeFrom(const CMessageSynFuncStoreResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);
  
  // repeated .PBFuncStore FuncStore = 2;
  inline int funcstore_size() const;
  inline void clear_funcstore();
  static const int kFuncStoreFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBFuncStore >& funcstore() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFuncStore >* mutable_funcstore();
  inline const ::PBFuncStore& funcstore(int index) const;
  inline ::PBFuncStore* mutable_funcstore(int index);
  inline ::PBFuncStore* add_funcstore();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 version_;
  ::google::protobuf::RepeatedPtrField< ::PBFuncStore > funcstore_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSynFuncStoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsContributeNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsContributeNotify();
  virtual ~CMessageChangeCorpsContributeNotify();
  
  CMessageChangeCorpsContributeNotify(const CMessageChangeCorpsContributeNotify& from);
  
  inline CMessageChangeCorpsContributeNotify& operator=(const CMessageChangeCorpsContributeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsContributeNotify& default_instance();
  void Swap(CMessageChangeCorpsContributeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsContributeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsContributeNotify& from);
  void MergeFrom(const CMessageChangeCorpsContributeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Contribute = 2;
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 2;
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 3;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::uint32 changetype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsContributeNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsGloryNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsGloryNotify();
  virtual ~CMessageChangeCorpsGloryNotify();
  
  CMessageChangeCorpsGloryNotify(const CMessageChangeCorpsGloryNotify& from);
  
  inline CMessageChangeCorpsGloryNotify& operator=(const CMessageChangeCorpsGloryNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsGloryNotify& default_instance();
  void Swap(CMessageChangeCorpsGloryNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsGloryNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsGloryNotify& from);
  void MergeFrom(const CMessageChangeCorpsGloryNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CorpsID = 1;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 Glory = 2;
  inline bool has_glory() const;
  inline void clear_glory();
  static const int kGloryFieldNumber = 2;
  inline ::google::protobuf::uint32 glory() const;
  inline void set_glory(::google::protobuf::uint32 value);
  
  // optional uint32 IfReduced = 3;
  inline bool has_ifreduced() const;
  inline void clear_ifreduced();
  static const int kIfReducedFieldNumber = 3;
  inline ::google::protobuf::uint32 ifreduced() const;
  inline void set_ifreduced(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 5;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 5;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 6;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 6;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 glory_;
  ::google::protobuf::uint32 ifreduced_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsGloryNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsMoneyNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsMoneyNotify();
  virtual ~CMessageChangeCorpsMoneyNotify();
  
  CMessageChangeCorpsMoneyNotify(const CMessageChangeCorpsMoneyNotify& from);
  
  inline CMessageChangeCorpsMoneyNotify& operator=(const CMessageChangeCorpsMoneyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsMoneyNotify& default_instance();
  void Swap(CMessageChangeCorpsMoneyNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsMoneyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsMoneyNotify& from);
  void MergeFrom(const CMessageChangeCorpsMoneyNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CorpsID = 1;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 IfPayout = 3;
  inline bool has_ifpayout() const;
  inline void clear_ifpayout();
  static const int kIfPayoutFieldNumber = 3;
  inline ::google::protobuf::uint32 ifpayout() const;
  inline void set_ifpayout(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 5;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 5;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 6;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 6;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 ifpayout_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsMoneyNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsBossTimes : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsBossTimes();
  virtual ~CMessageChangeCorpsBossTimes();
  
  CMessageChangeCorpsBossTimes(const CMessageChangeCorpsBossTimes& from);
  
  inline CMessageChangeCorpsBossTimes& operator=(const CMessageChangeCorpsBossTimes& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsBossTimes& default_instance();
  void Swap(CMessageChangeCorpsBossTimes* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsBossTimes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsBossTimes& from);
  void MergeFrom(const CMessageChangeCorpsBossTimes& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CorpsID = 1;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 Times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 BossID = 4;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIDFieldNumber = 4;
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);
  
  // optional string RoleName = 5;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 5;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional uint32 Reason = 6;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 6;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 bossid_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::uint32 reason_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsBossTimes* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsBossRefineValue : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsBossRefineValue();
  virtual ~CMessageChangeCorpsBossRefineValue();
  
  CMessageChangeCorpsBossRefineValue(const CMessageChangeCorpsBossRefineValue& from);
  
  inline CMessageChangeCorpsBossRefineValue& operator=(const CMessageChangeCorpsBossRefineValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsBossRefineValue& default_instance();
  void Swap(CMessageChangeCorpsBossRefineValue* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsBossRefineValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsBossRefineValue& from);
  void MergeFrom(const CMessageChangeCorpsBossRefineValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CorpsID = 1;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 RefineValue = 2;
  inline bool has_refinevalue() const;
  inline void clear_refinevalue();
  static const int kRefineValueFieldNumber = 2;
  inline ::google::protobuf::uint32 refinevalue() const;
  inline void set_refinevalue(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional string RoleName = 5;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 5;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 refinevalue_;
  ::google::protobuf::uint32 reason_;
  ::google::protobuf::uint32 roleid_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsBossRefineValue* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsCollectActive : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsCollectActive();
  virtual ~CMessageChangeCorpsCollectActive();
  
  CMessageChangeCorpsCollectActive(const CMessageChangeCorpsCollectActive& from);
  
  inline CMessageChangeCorpsCollectActive& operator=(const CMessageChangeCorpsCollectActive& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsCollectActive& default_instance();
  void Swap(CMessageChangeCorpsCollectActive* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsCollectActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsCollectActive& from);
  void MergeFrom(const CMessageChangeCorpsCollectActive& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 ActiveValue = 2;
  inline bool has_activevalue() const;
  inline void clear_activevalue();
  static const int kActiveValueFieldNumber = 2;
  inline ::google::protobuf::uint32 activevalue() const;
  inline void set_activevalue(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 3;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 activevalue_;
  ::google::protobuf::uint32 changetype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsCollectActive* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyApExpChangedNotify : public ::google::protobuf::Message {
 public:
  CMessageFamilyApExpChangedNotify();
  virtual ~CMessageFamilyApExpChangedNotify();
  
  CMessageFamilyApExpChangedNotify(const CMessageFamilyApExpChangedNotify& from);
  
  inline CMessageFamilyApExpChangedNotify& operator=(const CMessageFamilyApExpChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyApExpChangedNotify& default_instance();
  void Swap(CMessageFamilyApExpChangedNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyApExpChangedNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyApExpChangedNotify& from);
  void MergeFrom(const CMessageFamilyApExpChangedNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 FamiyID = 2;
  inline bool has_famiyid() const;
  inline void clear_famiyid();
  static const int kFamiyIDFieldNumber = 2;
  inline ::google::protobuf::uint32 famiyid() const;
  inline void set_famiyid(::google::protobuf::uint32 value);
  
  // optional uint32 AP = 3;
  inline bool has_ap() const;
  inline void clear_ap();
  static const int kAPFieldNumber = 3;
  inline ::google::protobuf::uint32 ap() const;
  inline void set_ap(::google::protobuf::uint32 value);
  
  // optional uint32 Exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 famiyid_;
  ::google::protobuf::uint32 ap_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyApExpChangedNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsApExpChangedNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsApExpChangedNotify();
  virtual ~CMessageCorpsApExpChangedNotify();
  
  CMessageCorpsApExpChangedNotify(const CMessageCorpsApExpChangedNotify& from);
  
  inline CMessageCorpsApExpChangedNotify& operator=(const CMessageCorpsApExpChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsApExpChangedNotify& default_instance();
  void Swap(CMessageCorpsApExpChangedNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsApExpChangedNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsApExpChangedNotify& from);
  void MergeFrom(const CMessageCorpsApExpChangedNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 AP = 3;
  inline bool has_ap() const;
  inline void clear_ap();
  static const int kAPFieldNumber = 3;
  inline ::google::protobuf::uint32 ap() const;
  inline void set_ap(::google::protobuf::uint32 value);
  
  // optional uint32 Exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 ap_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsApExpChangedNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeJudgeScoreReuqest : public ::google::protobuf::Message {
 public:
  CMessageChangeJudgeScoreReuqest();
  virtual ~CMessageChangeJudgeScoreReuqest();
  
  CMessageChangeJudgeScoreReuqest(const CMessageChangeJudgeScoreReuqest& from);
  
  inline CMessageChangeJudgeScoreReuqest& operator=(const CMessageChangeJudgeScoreReuqest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeJudgeScoreReuqest& default_instance();
  void Swap(CMessageChangeJudgeScoreReuqest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeJudgeScoreReuqest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeJudgeScoreReuqest& from);
  void MergeFrom(const CMessageChangeJudgeScoreReuqest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Total = 2;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 2;
  inline ::google::protobuf::uint32 total() const;
  inline void set_total(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 total_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeJudgeScoreReuqest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeWizardRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeWizardRequest();
  virtual ~CMessageChangeWizardRequest();
  
  CMessageChangeWizardRequest(const CMessageChangeWizardRequest& from);
  
  inline CMessageChangeWizardRequest& operator=(const CMessageChangeWizardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeWizardRequest& default_instance();
  void Swap(CMessageChangeWizardRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeWizardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeWizardRequest& from);
  void MergeFrom(const CMessageChangeWizardRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 3;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 3;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 4;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
  // repeated uint32 WizardValue = 5;
  inline int wizardvalue_size() const;
  inline void clear_wizardvalue();
  static const int kWizardValueFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wizardvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wizardvalue();
  inline ::google::protobuf::uint32 wizardvalue(int index) const;
  inline void set_wizardvalue(int index, ::google::protobuf::uint32 value);
  inline void add_wizardvalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 changetype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wizardvalue_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeWizardRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeWizardResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeWizardResponse();
  virtual ~CMessageChangeWizardResponse();
  
  CMessageChangeWizardResponse(const CMessageChangeWizardResponse& from);
  
  inline CMessageChangeWizardResponse& operator=(const CMessageChangeWizardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeWizardResponse& default_instance();
  void Swap(CMessageChangeWizardResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeWizardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeWizardResponse& from);
  void MergeFrom(const CMessageChangeWizardResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeWizardResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeConstructRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeConstructRequest();
  virtual ~CMessageChangeConstructRequest();
  
  CMessageChangeConstructRequest(const CMessageChangeConstructRequest& from);
  
  inline CMessageChangeConstructRequest& operator=(const CMessageChangeConstructRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeConstructRequest& default_instance();
  void Swap(CMessageChangeConstructRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeConstructRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeConstructRequest& from);
  void MergeFrom(const CMessageChangeConstructRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 3;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 3;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 4;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
  // repeated uint32 ConstructType = 5;
  inline int constructtype_size() const;
  inline void clear_constructtype();
  static const int kConstructTypeFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& constructtype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_constructtype();
  inline ::google::protobuf::uint32 constructtype(int index) const;
  inline void set_constructtype(int index, ::google::protobuf::uint32 value);
  inline void add_constructtype(::google::protobuf::uint32 value);
  
  // repeated uint32 ConstructValue = 6;
  inline int constructvalue_size() const;
  inline void clear_constructvalue();
  static const int kConstructValueFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& constructvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_constructvalue();
  inline ::google::protobuf::uint32 constructvalue(int index) const;
  inline void set_constructvalue(int index, ::google::protobuf::uint32 value);
  inline void add_constructvalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 changetype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > constructtype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > constructvalue_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeConstructRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeConstructResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeConstructResponse();
  virtual ~CMessageChangeConstructResponse();
  
  CMessageChangeConstructResponse(const CMessageChangeConstructResponse& from);
  
  inline CMessageChangeConstructResponse& operator=(const CMessageChangeConstructResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeConstructResponse& default_instance();
  void Swap(CMessageChangeConstructResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeConstructResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeConstructResponse& from);
  void MergeFrom(const CMessageChangeConstructResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeConstructResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangePowerRequest : public ::google::protobuf::Message {
 public:
  CMessageChangePowerRequest();
  virtual ~CMessageChangePowerRequest();
  
  CMessageChangePowerRequest(const CMessageChangePowerRequest& from);
  
  inline CMessageChangePowerRequest& operator=(const CMessageChangePowerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangePowerRequest& default_instance();
  void Swap(CMessageChangePowerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangePowerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangePowerRequest& from);
  void MergeFrom(const CMessageChangePowerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 3;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 3;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 4;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
  // optional uint32 PowerValue = 5;
  inline bool has_powervalue() const;
  inline void clear_powervalue();
  static const int kPowerValueFieldNumber = 5;
  inline ::google::protobuf::uint32 powervalue() const;
  inline void set_powervalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 changetype_;
  ::google::protobuf::uint32 powervalue_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangePowerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangePowerResponse : public ::google::protobuf::Message {
 public:
  CMessageChangePowerResponse();
  virtual ~CMessageChangePowerResponse();
  
  CMessageChangePowerResponse(const CMessageChangePowerResponse& from);
  
  inline CMessageChangePowerResponse& operator=(const CMessageChangePowerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangePowerResponse& default_instance();
  void Swap(CMessageChangePowerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangePowerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangePowerResponse& from);
  void MergeFrom(const CMessageChangePowerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangePowerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUseFunctionNotify : public ::google::protobuf::Message {
 public:
  CMessageUseFunctionNotify();
  virtual ~CMessageUseFunctionNotify();
  
  CMessageUseFunctionNotify(const CMessageUseFunctionNotify& from);
  
  inline CMessageUseFunctionNotify& operator=(const CMessageUseFunctionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUseFunctionNotify& default_instance();
  void Swap(CMessageUseFunctionNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUseFunctionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUseFunctionNotify& from);
  void MergeFrom(const CMessageUseFunctionNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 FunctionType = 2;
  inline bool has_functiontype() const;
  inline void clear_functiontype();
  static const int kFunctionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 functiontype() const;
  inline void set_functiontype(::google::protobuf::uint32 value);
  
  // optional uint32 FunctionOrder = 3;
  inline bool has_functionorder() const;
  inline void clear_functionorder();
  static const int kFunctionOrderFieldNumber = 3;
  inline ::google::protobuf::uint32 functionorder() const;
  inline void set_functionorder(::google::protobuf::uint32 value);
  
  // optional uint32 TargetID = 4;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIDFieldNumber = 4;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 5;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 5;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 6;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 6;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional string SrcName = 7;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 7;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
  // optional .TeleportData Teleport = 8;
  inline bool has_teleport() const;
  inline void clear_teleport();
  static const int kTeleportFieldNumber = 8;
  inline const ::TeleportData& teleport() const;
  inline ::TeleportData* mutable_teleport();
  
  // optional uint32 CorpsID = 9;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 9;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 10;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 10;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 TokenID = 11;
  inline bool has_tokenid() const;
  inline void clear_tokenid();
  static const int kTokenIDFieldNumber = 11;
  inline ::google::protobuf::uint32 tokenid() const;
  inline void set_tokenid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 functiontype_;
  ::google::protobuf::uint32 functionorder_;
  ::google::protobuf::uint32 targetid_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 countryid_;
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  ::TeleportData* teleport_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 tokenid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUseFunctionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSetOfficialNotify : public ::google::protobuf::Message {
 public:
  CMessageSetOfficialNotify();
  virtual ~CMessageSetOfficialNotify();
  
  CMessageSetOfficialNotify(const CMessageSetOfficialNotify& from);
  
  inline CMessageSetOfficialNotify& operator=(const CMessageSetOfficialNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSetOfficialNotify& default_instance();
  void Swap(CMessageSetOfficialNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSetOfficialNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSetOfficialNotify& from);
  void MergeFrom(const CMessageSetOfficialNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialLevel = 2;
  inline bool has_officiallevel() const;
  inline void clear_officiallevel();
  static const int kOfficialLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 officiallevel() const;
  inline void set_officiallevel(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialOrder = 3;
  inline bool has_officialorder() const;
  inline void clear_officialorder();
  static const int kOfficialOrderFieldNumber = 3;
  inline ::google::protobuf::uint32 officialorder() const;
  inline void set_officialorder(::google::protobuf::uint32 value);
  
  // optional uint32 TargetID = 4;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIDFieldNumber = 4;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 officiallevel_;
  ::google::protobuf::uint32 officialorder_;
  ::google::protobuf::uint32 targetid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSetOfficialNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeFriendNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeFriendNotify();
  virtual ~CMessageChangeFriendNotify();
  
  CMessageChangeFriendNotify(const CMessageChangeFriendNotify& from);
  
  inline CMessageChangeFriendNotify& operator=(const CMessageChangeFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeFriendNotify& default_instance();
  void Swap(CMessageChangeFriendNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeFriendNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeFriendNotify& from);
  void MergeFrom(const CMessageChangeFriendNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 2;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
  // optional uint32 SrcWorld = 3;
  inline bool has_srcworld() const;
  inline void clear_srcworld();
  static const int kSrcWorldFieldNumber = 3;
  inline ::google::protobuf::uint32 srcworld() const;
  inline void set_srcworld(::google::protobuf::uint32 value);
  
  // optional uint32 DesWorld = 4;
  inline bool has_desworld() const;
  inline void clear_desworld();
  static const int kDesWorldFieldNumber = 4;
  inline ::google::protobuf::uint32 desworld() const;
  inline void set_desworld(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeValue = 5;
  inline bool has_changevalue() const;
  inline void clear_changevalue();
  static const int kChangeValueFieldNumber = 5;
  inline ::google::protobuf::uint32 changevalue() const;
  inline void set_changevalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 changetype_;
  ::google::protobuf::uint32 srcworld_;
  ::google::protobuf::uint32 desworld_;
  ::google::protobuf::uint32 changevalue_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeFriendNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKillPersonRequest : public ::google::protobuf::Message {
 public:
  CMessageKillPersonRequest();
  virtual ~CMessageKillPersonRequest();
  
  CMessageKillPersonRequest(const CMessageKillPersonRequest& from);
  
  inline CMessageKillPersonRequest& operator=(const CMessageKillPersonRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKillPersonRequest& default_instance();
  void Swap(CMessageKillPersonRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKillPersonRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKillPersonRequest& from);
  void MergeFrom(const CMessageKillPersonRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 Honor = 3;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 3;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 honor_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKillPersonRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKillPersonResponse : public ::google::protobuf::Message {
 public:
  CMessageKillPersonResponse();
  virtual ~CMessageKillPersonResponse();
  
  CMessageKillPersonResponse(const CMessageKillPersonResponse& from);
  
  inline CMessageKillPersonResponse& operator=(const CMessageKillPersonResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKillPersonResponse& default_instance();
  void Swap(CMessageKillPersonResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKillPersonResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKillPersonResponse& from);
  void MergeFrom(const CMessageKillPersonResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 PKValue = 3;
  inline bool has_pkvalue() const;
  inline void clear_pkvalue();
  static const int kPKValueFieldNumber = 3;
  inline ::google::protobuf::uint32 pkvalue() const;
  inline void set_pkvalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 pkvalue_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKillPersonResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSyncNationNotify : public ::google::protobuf::Message {
 public:
  CMessageSyncNationNotify();
  virtual ~CMessageSyncNationNotify();
  
  CMessageSyncNationNotify(const CMessageSyncNationNotify& from);
  
  inline CMessageSyncNationNotify& operator=(const CMessageSyncNationNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSyncNationNotify& default_instance();
  void Swap(CMessageSyncNationNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSyncNationNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSyncNationNotify& from);
  void MergeFrom(const CMessageSyncNationNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 NationStatus = 1;
  inline int nationstatus_size() const;
  inline void clear_nationstatus();
  static const int kNationStatusFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& nationstatus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_nationstatus();
  inline ::google::protobuf::uint32 nationstatus(int index) const;
  inline void set_nationstatus(int index, ::google::protobuf::uint32 value);
  inline void add_nationstatus(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > nationstatus_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSyncNationNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBuyFamilyItemRequest : public ::google::protobuf::Message {
 public:
  CMessageBuyFamilyItemRequest();
  virtual ~CMessageBuyFamilyItemRequest();
  
  CMessageBuyFamilyItemRequest(const CMessageBuyFamilyItemRequest& from);
  
  inline CMessageBuyFamilyItemRequest& operator=(const CMessageBuyFamilyItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBuyFamilyItemRequest& default_instance();
  void Swap(CMessageBuyFamilyItemRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBuyFamilyItemRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBuyFamilyItemRequest& from);
  void MergeFrom(const CMessageBuyFamilyItemRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 3;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 3;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 4;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 4;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 TotalCost = 6;
  inline bool has_totalcost() const;
  inline void clear_totalcost();
  static const int kTotalCostFieldNumber = 6;
  inline ::google::protobuf::uint32 totalcost() const;
  inline void set_totalcost(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTmpID = 7;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 7;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 totalcost_;
  ::google::protobuf::uint32 npctmpid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBuyFamilyItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBuyFamilyItemResponse : public ::google::protobuf::Message {
 public:
  CMessageBuyFamilyItemResponse();
  virtual ~CMessageBuyFamilyItemResponse();
  
  CMessageBuyFamilyItemResponse(const CMessageBuyFamilyItemResponse& from);
  
  inline CMessageBuyFamilyItemResponse& operator=(const CMessageBuyFamilyItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBuyFamilyItemResponse& default_instance();
  void Swap(CMessageBuyFamilyItemResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBuyFamilyItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBuyFamilyItemResponse& from);
  void MergeFrom(const CMessageBuyFamilyItemResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 4;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 4;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBuyFamilyItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBuyCorpsItemRequest : public ::google::protobuf::Message {
 public:
  CMessageBuyCorpsItemRequest();
  virtual ~CMessageBuyCorpsItemRequest();
  
  CMessageBuyCorpsItemRequest(const CMessageBuyCorpsItemRequest& from);
  
  inline CMessageBuyCorpsItemRequest& operator=(const CMessageBuyCorpsItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBuyCorpsItemRequest& default_instance();
  void Swap(CMessageBuyCorpsItemRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBuyCorpsItemRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBuyCorpsItemRequest& from);
  void MergeFrom(const CMessageBuyCorpsItemRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 3;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 4;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 4;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 TotalCost = 6;
  inline bool has_totalcost() const;
  inline void clear_totalcost();
  static const int kTotalCostFieldNumber = 6;
  inline ::google::protobuf::uint32 totalcost() const;
  inline void set_totalcost(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTmpID = 7;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 7;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
  // optional uint32 CityMapID = 8;
  inline bool has_citymapid() const;
  inline void clear_citymapid();
  static const int kCityMapIDFieldNumber = 8;
  inline ::google::protobuf::uint32 citymapid() const;
  inline void set_citymapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 totalcost_;
  ::google::protobuf::uint32 npctmpid_;
  ::google::protobuf::uint32 citymapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBuyCorpsItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBuyCorpsItemResponse : public ::google::protobuf::Message {
 public:
  CMessageBuyCorpsItemResponse();
  virtual ~CMessageBuyCorpsItemResponse();
  
  CMessageBuyCorpsItemResponse(const CMessageBuyCorpsItemResponse& from);
  
  inline CMessageBuyCorpsItemResponse& operator=(const CMessageBuyCorpsItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBuyCorpsItemResponse& default_instance();
  void Swap(CMessageBuyCorpsItemResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBuyCorpsItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBuyCorpsItemResponse& from);
  void MergeFrom(const CMessageBuyCorpsItemResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 4;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 4;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBuyCorpsItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClearFamilyRepetionInfoNotify : public ::google::protobuf::Message {
 public:
  CMessageClearFamilyRepetionInfoNotify();
  virtual ~CMessageClearFamilyRepetionInfoNotify();
  
  CMessageClearFamilyRepetionInfoNotify(const CMessageClearFamilyRepetionInfoNotify& from);
  
  inline CMessageClearFamilyRepetionInfoNotify& operator=(const CMessageClearFamilyRepetionInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClearFamilyRepetionInfoNotify& default_instance();
  void Swap(CMessageClearFamilyRepetionInfoNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClearFamilyRepetionInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClearFamilyRepetionInfoNotify& from);
  void MergeFrom(const CMessageClearFamilyRepetionInfoNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FamilyID = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 1;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 RepetionScore = 2;
  inline bool has_repetionscore() const;
  inline void clear_repetionscore();
  static const int kRepetionScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 repetionscore() const;
  inline void set_repetionscore(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 repetionscore_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClearFamilyRepetionInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageJudgeModifySuccessNotice : public ::google::protobuf::Message {
 public:
  CMessageJudgeModifySuccessNotice();
  virtual ~CMessageJudgeModifySuccessNotice();
  
  CMessageJudgeModifySuccessNotice(const CMessageJudgeModifySuccessNotice& from);
  
  inline CMessageJudgeModifySuccessNotice& operator=(const CMessageJudgeModifySuccessNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageJudgeModifySuccessNotice& default_instance();
  void Swap(CMessageJudgeModifySuccessNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageJudgeModifySuccessNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageJudgeModifySuccessNotice& from);
  void MergeFrom(const CMessageJudgeModifySuccessNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageJudgeModifySuccessNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessage4EQueryYuanBaoRequest : public ::google::protobuf::Message {
 public:
  CMessage4EQueryYuanBaoRequest();
  virtual ~CMessage4EQueryYuanBaoRequest();
  
  CMessage4EQueryYuanBaoRequest(const CMessage4EQueryYuanBaoRequest& from);
  
  inline CMessage4EQueryYuanBaoRequest& operator=(const CMessage4EQueryYuanBaoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessage4EQueryYuanBaoRequest& default_instance();
  void Swap(CMessage4EQueryYuanBaoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessage4EQueryYuanBaoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessage4EQueryYuanBaoRequest& from);
  void MergeFrom(const CMessage4EQueryYuanBaoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessage4EQueryYuanBaoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessage4EQueryYuanBaoResponse : public ::google::protobuf::Message {
 public:
  CMessage4EQueryYuanBaoResponse();
  virtual ~CMessage4EQueryYuanBaoResponse();
  
  CMessage4EQueryYuanBaoResponse(const CMessage4EQueryYuanBaoResponse& from);
  
  inline CMessage4EQueryYuanBaoResponse& operator=(const CMessage4EQueryYuanBaoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessage4EQueryYuanBaoResponse& default_instance();
  void Swap(CMessage4EQueryYuanBaoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessage4EQueryYuanBaoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessage4EQueryYuanBaoResponse& from);
  void MergeFrom(const CMessage4EQueryYuanBaoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ResultCode = 1;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  inline ::google::protobuf::int32 resultcode() const;
  inline void set_resultcode(::google::protobuf::int32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // repeated .PBIbMoney Remain = 3;
  inline int remain_size() const;
  inline void clear_remain();
  static const int kRemainFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbMoney >& remain() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbMoney >* mutable_remain();
  inline const ::PBIbMoney& remain(int index) const;
  inline ::PBIbMoney* mutable_remain(int index);
  inline ::PBIbMoney* add_remain();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 resultcode_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::RepeatedPtrField< ::PBIbMoney > remain_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessage4EQueryYuanBaoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessage4EDrawYuanBaoRequest : public ::google::protobuf::Message {
 public:
  CMessage4EDrawYuanBaoRequest();
  virtual ~CMessage4EDrawYuanBaoRequest();
  
  CMessage4EDrawYuanBaoRequest(const CMessage4EDrawYuanBaoRequest& from);
  
  inline CMessage4EDrawYuanBaoRequest& operator=(const CMessage4EDrawYuanBaoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessage4EDrawYuanBaoRequest& default_instance();
  void Swap(CMessage4EDrawYuanBaoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessage4EDrawYuanBaoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessage4EDrawYuanBaoRequest& from);
  void MergeFrom(const CMessage4EDrawYuanBaoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional .PBIbMoney Draw = 2;
  inline bool has_draw() const;
  inline void clear_draw();
  static const int kDrawFieldNumber = 2;
  inline const ::PBIbMoney& draw() const;
  inline ::PBIbMoney* mutable_draw();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::PBIbMoney* draw_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessage4EDrawYuanBaoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessage4EDrawYuanBaoResponse : public ::google::protobuf::Message {
 public:
  CMessage4EDrawYuanBaoResponse();
  virtual ~CMessage4EDrawYuanBaoResponse();
  
  CMessage4EDrawYuanBaoResponse(const CMessage4EDrawYuanBaoResponse& from);
  
  inline CMessage4EDrawYuanBaoResponse& operator=(const CMessage4EDrawYuanBaoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessage4EDrawYuanBaoResponse& default_instance();
  void Swap(CMessage4EDrawYuanBaoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessage4EDrawYuanBaoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessage4EDrawYuanBaoResponse& from);
  void MergeFrom(const CMessage4EDrawYuanBaoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional int32 ResultCode = 2;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::int32 resultcode() const;
  inline void set_resultcode(::google::protobuf::int32 value);
  
  // optional int32 Amount = 3;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 3;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);
  
  // optional int32 LeftAmount = 4;
  inline bool has_leftamount() const;
  inline void clear_leftamount();
  static const int kLeftAmountFieldNumber = 4;
  inline ::google::protobuf::int32 leftamount() const;
  inline void set_leftamount(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::int32 resultcode_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 leftamount_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessage4EDrawYuanBaoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyExchangeRequest : public ::google::protobuf::Message {
 public:
  CMessageFamilyExchangeRequest();
  virtual ~CMessageFamilyExchangeRequest();
  
  CMessageFamilyExchangeRequest(const CMessageFamilyExchangeRequest& from);
  
  inline CMessageFamilyExchangeRequest& operator=(const CMessageFamilyExchangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyExchangeRequest& default_instance();
  void Swap(CMessageFamilyExchangeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyExchangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyExchangeRequest& from);
  void MergeFrom(const CMessageFamilyExchangeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTmpID = 2;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeID = 3;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 3;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 4;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 4;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 npctmpid_;
  ::google::protobuf::uint32 composeid_;
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 itemnum_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyExchangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyExchangeResponse : public ::google::protobuf::Message {
 public:
  CMessageFamilyExchangeResponse();
  virtual ~CMessageFamilyExchangeResponse();
  
  CMessageFamilyExchangeResponse(const CMessageFamilyExchangeResponse& from);
  
  inline CMessageFamilyExchangeResponse& operator=(const CMessageFamilyExchangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyExchangeResponse& default_instance();
  void Swap(CMessageFamilyExchangeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyExchangeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyExchangeResponse& from);
  void MergeFrom(const CMessageFamilyExchangeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTmpID = 3;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeID = 4;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 4;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 npctmpid_;
  ::google::protobuf::uint32 composeid_;
  ::google::protobuf::uint32 itemnum_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyExchangeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsExchangeRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsExchangeRequest();
  virtual ~CMessageCorpsExchangeRequest();
  
  CMessageCorpsExchangeRequest(const CMessageCorpsExchangeRequest& from);
  
  inline CMessageCorpsExchangeRequest& operator=(const CMessageCorpsExchangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsExchangeRequest& default_instance();
  void Swap(CMessageCorpsExchangeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsExchangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsExchangeRequest& from);
  void MergeFrom(const CMessageCorpsExchangeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTmpID = 2;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeID = 3;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 3;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 4;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 npctmpid_;
  ::google::protobuf::uint32 composeid_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 itemnum_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsExchangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsExchangeResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsExchangeResponse();
  virtual ~CMessageCorpsExchangeResponse();
  
  CMessageCorpsExchangeResponse(const CMessageCorpsExchangeResponse& from);
  
  inline CMessageCorpsExchangeResponse& operator=(const CMessageCorpsExchangeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsExchangeResponse& default_instance();
  void Swap(CMessageCorpsExchangeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsExchangeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsExchangeResponse& from);
  void MergeFrom(const CMessageCorpsExchangeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTmpID = 3;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeID = 4;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 4;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 npctmpid_;
  ::google::protobuf::uint32 composeid_;
  ::google::protobuf::uint32 itemnum_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsExchangeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAddFamilyExchangeItemNotify : public ::google::protobuf::Message {
 public:
  CMessageAddFamilyExchangeItemNotify();
  virtual ~CMessageAddFamilyExchangeItemNotify();
  
  CMessageAddFamilyExchangeItemNotify(const CMessageAddFamilyExchangeItemNotify& from);
  
  inline CMessageAddFamilyExchangeItemNotify& operator=(const CMessageAddFamilyExchangeItemNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddFamilyExchangeItemNotify& default_instance();
  void Swap(CMessageAddFamilyExchangeItemNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAddFamilyExchangeItemNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAddFamilyExchangeItemNotify& from);
  void MergeFrom(const CMessageAddFamilyExchangeItemNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 2;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 LeagueBagTmpID = 3;
  inline bool has_leaguebagtmpid() const;
  inline void clear_leaguebagtmpid();
  static const int kLeagueBagTmpIDFieldNumber = 3;
  inline ::google::protobuf::uint32 leaguebagtmpid() const;
  inline void set_leaguebagtmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 leaguebagtmpid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAddFamilyExchangeItemNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAddCorpsExchangeItemNotify : public ::google::protobuf::Message {
 public:
  CMessageAddCorpsExchangeItemNotify();
  virtual ~CMessageAddCorpsExchangeItemNotify();
  
  CMessageAddCorpsExchangeItemNotify(const CMessageAddCorpsExchangeItemNotify& from);
  
  inline CMessageAddCorpsExchangeItemNotify& operator=(const CMessageAddCorpsExchangeItemNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddCorpsExchangeItemNotify& default_instance();
  void Swap(CMessageAddCorpsExchangeItemNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAddCorpsExchangeItemNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAddCorpsExchangeItemNotify& from);
  void MergeFrom(const CMessageAddCorpsExchangeItemNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 LeagueBagTmpID = 3;
  inline bool has_leaguebagtmpid() const;
  inline void clear_leaguebagtmpid();
  static const int kLeagueBagTmpIDFieldNumber = 3;
  inline ::google::protobuf::uint32 leaguebagtmpid() const;
  inline void set_leaguebagtmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 leaguebagtmpid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAddCorpsExchangeItemNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGateEntityGMMove : public ::google::protobuf::Message {
 public:
  CMessageGateEntityGMMove();
  virtual ~CMessageGateEntityGMMove();
  
  CMessageGateEntityGMMove(const CMessageGateEntityGMMove& from);
  
  inline CMessageGateEntityGMMove& operator=(const CMessageGateEntityGMMove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGateEntityGMMove& default_instance();
  void Swap(CMessageGateEntityGMMove* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGateEntityGMMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGateEntityGMMove& from);
  void MergeFrom(const CMessageGateEntityGMMove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string RoleName = 1;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 1;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional int32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);
  
  // optional int32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);
  
  // optional int32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);
  
  // optional int32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::int32 posy() const;
  inline void set_posy(::google::protobuf::int32 value);
  
  // optional int64 Key = 6;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 6;
  inline ::google::protobuf::int64 key() const;
  inline void set_key(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::int32 lineid_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posy_;
  ::google::protobuf::int64 key_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGateEntityGMMove* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSceneEntityGMMove : public ::google::protobuf::Message {
 public:
  CMessageSceneEntityGMMove();
  virtual ~CMessageSceneEntityGMMove();
  
  CMessageSceneEntityGMMove(const CMessageSceneEntityGMMove& from);
  
  inline CMessageSceneEntityGMMove& operator=(const CMessageSceneEntityGMMove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSceneEntityGMMove& default_instance();
  void Swap(CMessageSceneEntityGMMove* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSceneEntityGMMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSceneEntityGMMove& from);
  void MergeFrom(const CMessageSceneEntityGMMove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);
  
  // optional int32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);
  
  // optional int32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);
  
  // optional int32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);
  
  // optional int32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::int32 posy() const;
  inline void set_posy(::google::protobuf::int32 value);
  
  // optional int64 Key = 6;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 6;
  inline ::google::protobuf::int64 key() const;
  inline void set_key(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 lineid_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posy_;
  ::google::protobuf::int64 key_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSceneEntityGMMove* default_instance_;
};
// -------------------------------------------------------------------

class SingleActivityObj : public ::google::protobuf::Message {
 public:
  SingleActivityObj();
  virtual ~SingleActivityObj();
  
  SingleActivityObj(const SingleActivityObj& from);
  
  inline SingleActivityObj& operator=(const SingleActivityObj& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleActivityObj& default_instance();
  void Swap(SingleActivityObj* other);
  
  // implements Message ----------------------------------------------
  
  SingleActivityObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleActivityObj& from);
  void MergeFrom(const SingleActivityObj& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ActivityID = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);
  
  // optional uint32 TimeType = 2;
  inline bool has_timetype() const;
  inline void clear_timetype();
  static const int kTimeTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 timetype() const;
  inline void set_timetype(::google::protobuf::uint32 value);
  
  // optional uint32 TimeInfo = 3;
  inline bool has_timeinfo() const;
  inline void clear_timeinfo();
  static const int kTimeInfoFieldNumber = 3;
  inline ::google::protobuf::uint32 timeinfo() const;
  inline void set_timeinfo(::google::protobuf::uint32 value);
  
  // optional uint32 LmtLevel = 4;
  inline bool has_lmtlevel() const;
  inline void clear_lmtlevel();
  static const int kLmtLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 lmtlevel() const;
  inline void set_lmtlevel(::google::protobuf::uint32 value);
  
  // optional uint32 MaxTimes = 5;
  inline bool has_maxtimes() const;
  inline void clear_maxtimes();
  static const int kMaxTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 maxtimes() const;
  inline void set_maxtimes(::google::protobuf::uint32 value);
  
  // optional uint32 State = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 activityid_;
  ::google::protobuf::uint32 timetype_;
  ::google::protobuf::uint32 timeinfo_;
  ::google::protobuf::uint32 lmtlevel_;
  ::google::protobuf::uint32 maxtimes_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleActivityObj* default_instance_;
};
// -------------------------------------------------------------------

class DropInfo : public ::google::protobuf::Message {
 public:
  DropInfo();
  virtual ~DropInfo();
  
  DropInfo(const DropInfo& from);
  
  inline DropInfo& operator=(const DropInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DropInfo& default_instance();
  void Swap(DropInfo* other);
  
  // implements Message ----------------------------------------------
  
  DropInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropInfo& from);
  void MergeFrom(const DropInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 OgreID = 1;
  inline bool has_ogreid() const;
  inline void clear_ogreid();
  static const int kOgreIDFieldNumber = 1;
  inline ::google::protobuf::uint32 ogreid() const;
  inline void set_ogreid(::google::protobuf::uint32 value);
  
  // optional uint32 DropID = 2;
  inline bool has_dropid() const;
  inline void clear_dropid();
  static const int kDropIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dropid() const;
  inline void set_dropid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ogreid_;
  ::google::protobuf::uint32 dropid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DropInfo* default_instance_;
};
// -------------------------------------------------------------------

class MapDrop : public ::google::protobuf::Message {
 public:
  MapDrop();
  virtual ~MapDrop();
  
  MapDrop(const MapDrop& from);
  
  inline MapDrop& operator=(const MapDrop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapDrop& default_instance();
  void Swap(MapDrop* other);
  
  // implements Message ----------------------------------------------
  
  MapDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapDrop& from);
  void MergeFrom(const MapDrop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 DropID = 1;
  inline bool has_dropid() const;
  inline void clear_dropid();
  static const int kDropIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dropid() const;
  inline void set_dropid(::google::protobuf::uint32 value);
  
  // optional uint32 DropType = 2;
  inline bool has_droptype() const;
  inline void clear_droptype();
  static const int kDropTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 droptype() const;
  inline void set_droptype(::google::protobuf::uint32 value);
  
  // repeated uint32 MapIDs = 3;
  inline int mapids_size() const;
  inline void clear_mapids();
  static const int kMapIDsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mapids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mapids();
  inline ::google::protobuf::uint32 mapids(int index) const;
  inline void set_mapids(int index, ::google::protobuf::uint32 value);
  inline void add_mapids(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 dropid_;
  ::google::protobuf::uint32 droptype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapids_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MapDrop* default_instance_;
};
// -------------------------------------------------------------------

class SingleActivityInfo : public ::google::protobuf::Message {
 public:
  SingleActivityInfo();
  virtual ~SingleActivityInfo();
  
  SingleActivityInfo(const SingleActivityInfo& from);
  
  inline SingleActivityInfo& operator=(const SingleActivityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleActivityInfo& default_instance();
  void Swap(SingleActivityInfo* other);
  
  // implements Message ----------------------------------------------
  
  SingleActivityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleActivityInfo& from);
  void MergeFrom(const SingleActivityInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ActivityID = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);
  
  // repeated .DropInfo dropinfo = 2;
  inline int dropinfo_size() const;
  inline void clear_dropinfo();
  static const int kDropinfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::DropInfo >& dropinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::DropInfo >* mutable_dropinfo();
  inline const ::DropInfo& dropinfo(int index) const;
  inline ::DropInfo* mutable_dropinfo(int index);
  inline ::DropInfo* add_dropinfo();
  
  // repeated uint32 ogreindex = 3;
  inline int ogreindex_size() const;
  inline void clear_ogreindex();
  static const int kOgreindexFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& ogreindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_ogreindex();
  inline ::google::protobuf::uint32 ogreindex(int index) const;
  inline void set_ogreindex(int index, ::google::protobuf::uint32 value);
  inline void add_ogreindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 activityid_;
  ::google::protobuf::RepeatedPtrField< ::DropInfo > dropinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ogreindex_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleActivityInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTodayActivitysNotify : public ::google::protobuf::Message {
 public:
  CMessageTodayActivitysNotify();
  virtual ~CMessageTodayActivitysNotify();
  
  CMessageTodayActivitysNotify(const CMessageTodayActivitysNotify& from);
  
  inline CMessageTodayActivitysNotify& operator=(const CMessageTodayActivitysNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTodayActivitysNotify& default_instance();
  void Swap(CMessageTodayActivitysNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTodayActivitysNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTodayActivitysNotify& from);
  void MergeFrom(const CMessageTodayActivitysNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleActivityObj ActivityList = 1;
  inline int activitylist_size() const;
  inline void clear_activitylist();
  static const int kActivityListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleActivityObj >& activitylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleActivityObj >* mutable_activitylist();
  inline const ::SingleActivityObj& activitylist(int index) const;
  inline ::SingleActivityObj* mutable_activitylist(int index);
  inline ::SingleActivityObj* add_activitylist();
  
  // repeated .SingleActivityInfo ActivityInfo = 2;
  inline int activityinfo_size() const;
  inline void clear_activityinfo();
  static const int kActivityInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleActivityInfo >& activityinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleActivityInfo >* mutable_activityinfo();
  inline const ::SingleActivityInfo& activityinfo(int index) const;
  inline ::SingleActivityInfo* mutable_activityinfo(int index);
  inline ::SingleActivityInfo* add_activityinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleActivityObj > activitylist_;
  ::google::protobuf::RepeatedPtrField< ::SingleActivityInfo > activityinfo_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTodayActivitysNotify* default_instance_;
};
// -------------------------------------------------------------------

class SingleActivity : public ::google::protobuf::Message {
 public:
  SingleActivity();
  virtual ~SingleActivity();
  
  SingleActivity(const SingleActivity& from);
  
  inline SingleActivity& operator=(const SingleActivity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleActivity& default_instance();
  void Swap(SingleActivity* other);
  
  // implements Message ----------------------------------------------
  
  SingleActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleActivity& from);
  void MergeFrom(const SingleActivity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ActivityID = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);
  
  // optional uint32 ActivityState = 2;
  inline bool has_activitystate() const;
  inline void clear_activitystate();
  static const int kActivityStateFieldNumber = 2;
  inline ::google::protobuf::uint32 activitystate() const;
  inline void set_activitystate(::google::protobuf::uint32 value);
  
  // repeated .MapDrop MapDrops = 3;
  inline int mapdrops_size() const;
  inline void clear_mapdrops();
  static const int kMapDropsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::MapDrop >& mapdrops() const;
  inline ::google::protobuf::RepeatedPtrField< ::MapDrop >* mutable_mapdrops();
  inline const ::MapDrop& mapdrops(int index) const;
  inline ::MapDrop* mutable_mapdrops(int index);
  inline ::MapDrop* add_mapdrops();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 activityid_;
  ::google::protobuf::uint32 activitystate_;
  ::google::protobuf::RepeatedPtrField< ::MapDrop > mapdrops_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleActivity* default_instance_;
};
// -------------------------------------------------------------------

class CMessageActivityChangeNotify : public ::google::protobuf::Message {
 public:
  CMessageActivityChangeNotify();
  virtual ~CMessageActivityChangeNotify();
  
  CMessageActivityChangeNotify(const CMessageActivityChangeNotify& from);
  
  inline CMessageActivityChangeNotify& operator=(const CMessageActivityChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageActivityChangeNotify& default_instance();
  void Swap(CMessageActivityChangeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageActivityChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageActivityChangeNotify& from);
  void MergeFrom(const CMessageActivityChangeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleActivity ActivityList = 1;
  inline int activitylist_size() const;
  inline void clear_activitylist();
  static const int kActivityListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleActivity >& activitylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleActivity >* mutable_activitylist();
  inline const ::SingleActivity& activitylist(int index) const;
  inline ::SingleActivity* mutable_activitylist(int index);
  inline ::SingleActivity* add_activitylist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleActivity > activitylist_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageActivityChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangePasswordStatusNotify : public ::google::protobuf::Message {
 public:
  CMessageChangePasswordStatusNotify();
  virtual ~CMessageChangePasswordStatusNotify();
  
  CMessageChangePasswordStatusNotify(const CMessageChangePasswordStatusNotify& from);
  
  inline CMessageChangePasswordStatusNotify& operator=(const CMessageChangePasswordStatusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangePasswordStatusNotify& default_instance();
  void Swap(CMessageChangePasswordStatusNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangePasswordStatusNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangePasswordStatusNotify& from);
  void MergeFrom(const CMessageChangePasswordStatusNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 PwdStatus = 2;
  inline bool has_pwdstatus() const;
  inline void clear_pwdstatus();
  static const int kPwdStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 pwdstatus() const;
  inline void set_pwdstatus(::google::protobuf::uint32 value);
  
  // optional string Password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 pwdstatus_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangePasswordStatusNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateNationTitleNotice : public ::google::protobuf::Message {
 public:
  CMessageUpdateNationTitleNotice();
  virtual ~CMessageUpdateNationTitleNotice();
  
  CMessageUpdateNationTitleNotice(const CMessageUpdateNationTitleNotice& from);
  
  inline CMessageUpdateNationTitleNotice& operator=(const CMessageUpdateNationTitleNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateNationTitleNotice& default_instance();
  void Swap(CMessageUpdateNationTitleNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateNationTitleNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateNationTitleNotice& from);
  void MergeFrom(const CMessageUpdateNationTitleNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);
  
  // optional uint32 TitleID = 2;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 titleid() const;
  inline void set_titleid(::google::protobuf::uint32 value);
  
  // optional uint32 IsAdd = 3;
  inline bool has_isadd() const;
  inline void clear_isadd();
  static const int kIsAddFieldNumber = 3;
  inline ::google::protobuf::uint32 isadd() const;
  inline void set_isadd(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::uint32 titleid_;
  ::google::protobuf::uint32 isadd_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateNationTitleNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetNationTitleListRequest : public ::google::protobuf::Message {
 public:
  CMessageGetNationTitleListRequest();
  virtual ~CMessageGetNationTitleListRequest();
  
  CMessageGetNationTitleListRequest(const CMessageGetNationTitleListRequest& from);
  
  inline CMessageGetNationTitleListRequest& operator=(const CMessageGetNationTitleListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetNationTitleListRequest& default_instance();
  void Swap(CMessageGetNationTitleListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetNationTitleListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetNationTitleListRequest& from);
  void MergeFrom(const CMessageGetNationTitleListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 roleid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetNationTitleListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetNationTitleListResponse : public ::google::protobuf::Message {
 public:
  CMessageGetNationTitleListResponse();
  virtual ~CMessageGetNationTitleListResponse();
  
  CMessageGetNationTitleListResponse(const CMessageGetNationTitleListResponse& from);
  
  inline CMessageGetNationTitleListResponse& operator=(const CMessageGetNationTitleListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetNationTitleListResponse& default_instance();
  void Swap(CMessageGetNationTitleListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetNationTitleListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetNationTitleListResponse& from);
  void MergeFrom(const CMessageGetNationTitleListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);
  
  // repeated uint32 TitleList = 2;
  inline int titlelist_size() const;
  inline void clear_titlelist();
  static const int kTitleListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& titlelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_titlelist();
  inline ::google::protobuf::uint32 titlelist(int index) const;
  inline void set_titlelist(int index, ::google::protobuf::uint32 value);
  inline void add_titlelist(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > titlelist_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetNationTitleListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSGProVipFlagNotice : public ::google::protobuf::Message {
 public:
  CMessageSGProVipFlagNotice();
  virtual ~CMessageSGProVipFlagNotice();
  
  CMessageSGProVipFlagNotice(const CMessageSGProVipFlagNotice& from);
  
  inline CMessageSGProVipFlagNotice& operator=(const CMessageSGProVipFlagNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSGProVipFlagNotice& default_instance();
  void Swap(CMessageSGProVipFlagNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSGProVipFlagNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSGProVipFlagNotice& from);
  void MergeFrom(const CMessageSGProVipFlagNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);
  
  // optional uint32 VipFlag = 2;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::uint32 vipflag_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSGProVipFlagNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageResetRolePasswordNotify : public ::google::protobuf::Message {
 public:
  CMessageResetRolePasswordNotify();
  virtual ~CMessageResetRolePasswordNotify();
  
  CMessageResetRolePasswordNotify(const CMessageResetRolePasswordNotify& from);
  
  inline CMessageResetRolePasswordNotify& operator=(const CMessageResetRolePasswordNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageResetRolePasswordNotify& default_instance();
  void Swap(CMessageResetRolePasswordNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageResetRolePasswordNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageResetRolePasswordNotify& from);
  void MergeFrom(const CMessageResetRolePasswordNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageResetRolePasswordNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessgeSafeShutdownNotify : public ::google::protobuf::Message {
 public:
  CMessgeSafeShutdownNotify();
  virtual ~CMessgeSafeShutdownNotify();
  
  CMessgeSafeShutdownNotify(const CMessgeSafeShutdownNotify& from);
  
  inline CMessgeSafeShutdownNotify& operator=(const CMessgeSafeShutdownNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessgeSafeShutdownNotify& default_instance();
  void Swap(CMessgeSafeShutdownNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessgeSafeShutdownNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessgeSafeShutdownNotify& from);
  void MergeFrom(const CMessgeSafeShutdownNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ServerType = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessgeSafeShutdownNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessgeSafeShutdownAck : public ::google::protobuf::Message {
 public:
  CMessgeSafeShutdownAck();
  virtual ~CMessgeSafeShutdownAck();
  
  CMessgeSafeShutdownAck(const CMessgeSafeShutdownAck& from);
  
  inline CMessgeSafeShutdownAck& operator=(const CMessgeSafeShutdownAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessgeSafeShutdownAck& default_instance();
  void Swap(CMessgeSafeShutdownAck* other);
  
  // implements Message ----------------------------------------------
  
  CMessgeSafeShutdownAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessgeSafeShutdownAck& from);
  void MergeFrom(const CMessgeSafeShutdownAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ServerType = 1;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessgeSafeShutdownAck* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRollCorpsMoneyRequest : public ::google::protobuf::Message {
 public:
  CMessageRollCorpsMoneyRequest();
  virtual ~CMessageRollCorpsMoneyRequest();
  
  CMessageRollCorpsMoneyRequest(const CMessageRollCorpsMoneyRequest& from);
  
  inline CMessageRollCorpsMoneyRequest& operator=(const CMessageRollCorpsMoneyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRollCorpsMoneyRequest& default_instance();
  void Swap(CMessageRollCorpsMoneyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRollCorpsMoneyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRollCorpsMoneyRequest& from);
  void MergeFrom(const CMessageRollCorpsMoneyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 IsAll = 1;
  inline bool has_isall() const;
  inline void clear_isall();
  static const int kIsAllFieldNumber = 1;
  inline ::google::protobuf::uint32 isall() const;
  inline void set_isall(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 isall_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRollCorpsMoneyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBattleMapNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsBattleMapNotice();
  virtual ~CMessageCorpsBattleMapNotice();
  
  CMessageCorpsBattleMapNotice(const CMessageCorpsBattleMapNotice& from);
  
  inline CMessageCorpsBattleMapNotice& operator=(const CMessageCorpsBattleMapNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBattleMapNotice& default_instance();
  void Swap(CMessageCorpsBattleMapNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBattleMapNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBattleMapNotice& from);
  void MergeFrom(const CMessageCorpsBattleMapNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 BattleKey = 1;
  inline bool has_battlekey() const;
  inline void clear_battlekey();
  static const int kBattleKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 battlekey() const;
  inline void set_battlekey(::google::protobuf::uint64 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 battlekey_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBattleMapNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTrySummonRequest : public ::google::protobuf::Message {
 public:
  CMessageTrySummonRequest();
  virtual ~CMessageTrySummonRequest();
  
  CMessageTrySummonRequest(const CMessageTrySummonRequest& from);
  
  inline CMessageTrySummonRequest& operator=(const CMessageTrySummonRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTrySummonRequest& default_instance();
  void Swap(CMessageTrySummonRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTrySummonRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTrySummonRequest& from);
  void MergeFrom(const CMessageTrySummonRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 ItemIndex = 3;
  inline bool has_itemindex() const;
  inline void clear_itemindex();
  static const int kItemIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 itemindex() const;
  inline void set_itemindex(::google::protobuf::uint32 value);
  
  // optional uint32 SummonType = 4;
  inline bool has_summontype() const;
  inline void clear_summontype();
  static const int kSummonTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 summontype() const;
  inline void set_summontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 itemindex_;
  ::google::protobuf::uint32 summontype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTrySummonRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTrySummonResponse : public ::google::protobuf::Message {
 public:
  CMessageTrySummonResponse();
  virtual ~CMessageTrySummonResponse();
  
  CMessageTrySummonResponse(const CMessageTrySummonResponse& from);
  
  inline CMessageTrySummonResponse& operator=(const CMessageTrySummonResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTrySummonResponse& default_instance();
  void Swap(CMessageTrySummonResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTrySummonResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTrySummonResponse& from);
  void MergeFrom(const CMessageTrySummonResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 ItemIndex = 4;
  inline bool has_itemindex() const;
  inline void clear_itemindex();
  static const int kItemIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 itemindex() const;
  inline void set_itemindex(::google::protobuf::uint32 value);
  
  // optional uint32 SummonType = 5;
  inline bool has_summontype() const;
  inline void clear_summontype();
  static const int kSummonTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 summontype() const;
  inline void set_summontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 itemindex_;
  ::google::protobuf::uint32 summontype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTrySummonResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRealSummonRequest : public ::google::protobuf::Message {
 public:
  CMessageRealSummonRequest();
  virtual ~CMessageRealSummonRequest();
  
  CMessageRealSummonRequest(const CMessageRealSummonRequest& from);
  
  inline CMessageRealSummonRequest& operator=(const CMessageRealSummonRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRealSummonRequest& default_instance();
  void Swap(CMessageRealSummonRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRealSummonRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRealSummonRequest& from);
  void MergeFrom(const CMessageRealSummonRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 SummonType = 3;
  inline bool has_summontype() const;
  inline void clear_summontype();
  static const int kSummonTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 summontype() const;
  inline void set_summontype(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 4;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 4;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 6;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 6;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 7;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 7;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 summontype_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRealSummonRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRealSummonNotify : public ::google::protobuf::Message {
 public:
  CMessageRealSummonNotify();
  virtual ~CMessageRealSummonNotify();
  
  CMessageRealSummonNotify(const CMessageRealSummonNotify& from);
  
  inline CMessageRealSummonNotify& operator=(const CMessageRealSummonNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRealSummonNotify& default_instance();
  void Swap(CMessageRealSummonNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRealSummonNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRealSummonNotify& from);
  void MergeFrom(const CMessageRealSummonNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SrcCharName = 1;
  inline bool has_srccharname() const;
  inline void clear_srccharname();
  static const int kSrcCharNameFieldNumber = 1;
  inline const ::std::string& srccharname() const;
  inline void set_srccharname(const ::std::string& value);
  inline void set_srccharname(const char* value);
  inline void set_srccharname(const char* value, size_t size);
  inline ::std::string* mutable_srccharname();
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 TokenID = 6;
  inline bool has_tokenid() const;
  inline void clear_tokenid();
  static const int kTokenIDFieldNumber = 6;
  inline ::google::protobuf::uint32 tokenid() const;
  inline void set_tokenid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 7;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 7;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 8;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 8;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 9;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 9;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 10;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 10;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* srccharname_;
  static const ::std::string _default_srccharname_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 tokenid_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 srccharid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRealSummonNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLockGoodsRequest : public ::google::protobuf::Message {
 public:
  CMessageLockGoodsRequest();
  virtual ~CMessageLockGoodsRequest();
  
  CMessageLockGoodsRequest(const CMessageLockGoodsRequest& from);
  
  inline CMessageLockGoodsRequest& operator=(const CMessageLockGoodsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLockGoodsRequest& default_instance();
  void Swap(CMessageLockGoodsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLockGoodsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLockGoodsRequest& from);
  void MergeFrom(const CMessageLockGoodsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 GoodsID = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);
  
  // optional int32 LockCount = 2;
  inline bool has_lockcount() const;
  inline void clear_lockcount();
  static const int kLockCountFieldNumber = 2;
  inline ::google::protobuf::int32 lockcount() const;
  inline void set_lockcount(::google::protobuf::int32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional int32 TransObjID = 4;
  inline bool has_transobjid() const;
  inline void clear_transobjid();
  static const int kTransObjIDFieldNumber = 4;
  inline ::google::protobuf::int32 transobjid() const;
  inline void set_transobjid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::int32 lockcount_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::int32 transobjid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLockGoodsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLockGoodsResponse : public ::google::protobuf::Message {
 public:
  CMessageLockGoodsResponse();
  virtual ~CMessageLockGoodsResponse();
  
  CMessageLockGoodsResponse(const CMessageLockGoodsResponse& from);
  
  inline CMessageLockGoodsResponse& operator=(const CMessageLockGoodsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLockGoodsResponse& default_instance();
  void Swap(CMessageLockGoodsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLockGoodsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLockGoodsResponse& from);
  void MergeFrom(const CMessageLockGoodsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional uint32 GoodsID = 2;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional int32 LockCount = 4;
  inline bool has_lockcount() const;
  inline void clear_lockcount();
  static const int kLockCountFieldNumber = 4;
  inline ::google::protobuf::int32 lockcount() const;
  inline void set_lockcount(::google::protobuf::int32 value);
  
  // optional int32 Remain = 5;
  inline bool has_remain() const;
  inline void clear_remain();
  static const int kRemainFieldNumber = 5;
  inline ::google::protobuf::int32 remain() const;
  inline void set_remain(::google::protobuf::int32 value);
  
  // optional int32 TransObjID = 6;
  inline bool has_transobjid() const;
  inline void clear_transobjid();
  static const int kTransObjIDFieldNumber = 6;
  inline ::google::protobuf::int32 transobjid() const;
  inline void set_transobjid(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::int32 lockcount_;
  ::google::protobuf::int32 remain_;
  ::google::protobuf::int32 transobjid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLockGoodsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2GRoleMove : public ::google::protobuf::Message {
 public:
  CMessageS2GRoleMove();
  virtual ~CMessageS2GRoleMove();
  
  CMessageS2GRoleMove(const CMessageS2GRoleMove& from);
  
  inline CMessageS2GRoleMove& operator=(const CMessageS2GRoleMove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2GRoleMove& default_instance();
  void Swap(CMessageS2GRoleMove* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2GRoleMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2GRoleMove& from);
  void MergeFrom(const CMessageS2GRoleMove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SrcRole = 1;
  inline bool has_srcrole() const;
  inline void clear_srcrole();
  static const int kSrcRoleFieldNumber = 1;
  inline const ::std::string& srcrole() const;
  inline void set_srcrole(const ::std::string& value);
  inline void set_srcrole(const char* value);
  inline void set_srcrole(const char* value, size_t size);
  inline ::std::string* mutable_srcrole();
  
  // optional string DesRole = 2;
  inline bool has_desrole() const;
  inline void clear_desrole();
  static const int kDesRoleFieldNumber = 2;
  inline const ::std::string& desrole() const;
  inline void set_desrole(const ::std::string& value);
  inline void set_desrole(const char* value);
  inline void set_desrole(const char* value, size_t size);
  inline ::std::string* mutable_desrole();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* srcrole_;
  static const ::std::string _default_srcrole_;
  ::std::string* desrole_;
  static const ::std::string _default_desrole_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2GRoleMove* default_instance_;
};
// -------------------------------------------------------------------

class CMessageG2SRoleMove : public ::google::protobuf::Message {
 public:
  CMessageG2SRoleMove();
  virtual ~CMessageG2SRoleMove();
  
  CMessageG2SRoleMove(const CMessageG2SRoleMove& from);
  
  inline CMessageG2SRoleMove& operator=(const CMessageG2SRoleMove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageG2SRoleMove& default_instance();
  void Swap(CMessageG2SRoleMove* other);
  
  // implements Message ----------------------------------------------
  
  CMessageG2SRoleMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageG2SRoleMove& from);
  void MergeFrom(const CMessageG2SRoleMove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SrcRole = 1;
  inline bool has_srcrole() const;
  inline void clear_srcrole();
  static const int kSrcRoleFieldNumber = 1;
  inline const ::std::string& srcrole() const;
  inline void set_srcrole(const ::std::string& value);
  inline void set_srcrole(const char* value);
  inline void set_srcrole(const char* value, size_t size);
  inline ::std::string* mutable_srcrole();
  
  // optional string DesRole = 2;
  inline bool has_desrole() const;
  inline void clear_desrole();
  static const int kDesRoleFieldNumber = 2;
  inline const ::std::string& desrole() const;
  inline void set_desrole(const ::std::string& value);
  inline void set_desrole(const char* value);
  inline void set_desrole(const char* value, size_t size);
  inline ::std::string* mutable_desrole();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* srcrole_;
  static const ::std::string _default_srcrole_;
  ::std::string* desrole_;
  static const ::std::string _default_desrole_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageG2SRoleMove* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarChangeNotify : public ::google::protobuf::Message {
 public:
  CMessageWarChangeNotify();
  virtual ~CMessageWarChangeNotify();
  
  CMessageWarChangeNotify(const CMessageWarChangeNotify& from);
  
  inline CMessageWarChangeNotify& operator=(const CMessageWarChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarChangeNotify& default_instance();
  void Swap(CMessageWarChangeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarChangeNotify& from);
  void MergeFrom(const CMessageWarChangeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 SeedType = 2;
  inline bool has_seedtype() const;
  inline void clear_seedtype();
  static const int kSeedTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 seedtype() const;
  inline void set_seedtype(::google::protobuf::uint32 value);
  
  // optional uint32 SeedValue = 3;
  inline bool has_seedvalue() const;
  inline void clear_seedvalue();
  static const int kSeedValueFieldNumber = 3;
  inline ::google::protobuf::uint32 seedvalue() const;
  inline void set_seedvalue(::google::protobuf::uint32 value);
  
  // optional uint32 SourceType = 4;
  inline bool has_sourcetype() const;
  inline void clear_sourcetype();
  static const int kSourceTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 sourcetype() const;
  inline void set_sourcetype(::google::protobuf::uint32 value);
  
  // optional uint32 SourceValue = 5;
  inline bool has_sourcevalue() const;
  inline void clear_sourcevalue();
  static const int kSourceValueFieldNumber = 5;
  inline ::google::protobuf::uint32 sourcevalue() const;
  inline void set_sourcevalue(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 6;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 6;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 seedtype_;
  ::google::protobuf::uint32 seedvalue_;
  ::google::protobuf::uint32 sourcetype_;
  ::google::protobuf::uint32 sourcevalue_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReliveChangeNotify : public ::google::protobuf::Message {
 public:
  CMessageReliveChangeNotify();
  virtual ~CMessageReliveChangeNotify();
  
  CMessageReliveChangeNotify(const CMessageReliveChangeNotify& from);
  
  inline CMessageReliveChangeNotify& operator=(const CMessageReliveChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReliveChangeNotify& default_instance();
  void Swap(CMessageReliveChangeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReliveChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReliveChangeNotify& from);
  void MergeFrom(const CMessageReliveChangeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 WorldID = 1;
  inline int worldid_size() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& worldid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_worldid();
  inline ::google::protobuf::uint32 worldid(int index) const;
  inline void set_worldid(int index, ::google::protobuf::uint32 value);
  inline void add_worldid(::google::protobuf::uint32 value);
  
  // repeated uint32 CampID = 2;
  inline int campid_size() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& campid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_campid();
  inline ::google::protobuf::uint32 campid(int index) const;
  inline void set_campid(int index, ::google::protobuf::uint32 value);
  inline void add_campid(::google::protobuf::uint32 value);
  
  // optional uint32 WarStatus = 3;
  inline bool has_warstatus() const;
  inline void clear_warstatus();
  static const int kWarStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 warstatus() const;
  inline void set_warstatus(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > worldid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > campid_;
  ::google::protobuf::uint32 warstatus_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReliveChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class WarHonorData : public ::google::protobuf::Message {
 public:
  WarHonorData();
  virtual ~WarHonorData();
  
  WarHonorData(const WarHonorData& from);
  
  inline WarHonorData& operator=(const WarHonorData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WarHonorData& default_instance();
  void Swap(WarHonorData* other);
  
  // implements Message ----------------------------------------------
  
  WarHonorData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarHonorData& from);
  void MergeFrom(const WarHonorData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WarHonor = 2;
  inline bool has_warhonor() const;
  inline void clear_warhonor();
  static const int kWarHonorFieldNumber = 2;
  inline ::google::protobuf::uint32 warhonor() const;
  inline void set_warhonor(::google::protobuf::uint32 value);
  
  // optional uint32 WarKill = 3;
  inline bool has_warkill() const;
  inline void clear_warkill();
  static const int kWarKillFieldNumber = 3;
  inline ::google::protobuf::uint32 warkill() const;
  inline void set_warkill(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 warhonor_;
  ::google::protobuf::uint32 warkill_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static WarHonorData* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainWarHonorNotify : public ::google::protobuf::Message {
 public:
  CMessageObtainWarHonorNotify();
  virtual ~CMessageObtainWarHonorNotify();
  
  CMessageObtainWarHonorNotify(const CMessageObtainWarHonorNotify& from);
  
  inline CMessageObtainWarHonorNotify& operator=(const CMessageObtainWarHonorNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainWarHonorNotify& default_instance();
  void Swap(CMessageObtainWarHonorNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainWarHonorNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainWarHonorNotify& from);
  void MergeFrom(const CMessageObtainWarHonorNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .WarHonorData WarHonor = 1;
  inline int warhonor_size() const;
  inline void clear_warhonor();
  static const int kWarHonorFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::WarHonorData >& warhonor() const;
  inline ::google::protobuf::RepeatedPtrField< ::WarHonorData >* mutable_warhonor();
  inline const ::WarHonorData& warhonor(int index) const;
  inline ::WarHonorData* mutable_warhonor(int index);
  inline ::WarHonorData* add_warhonor();
  
  // optional uint32 IsKill = 2;
  inline bool has_iskill() const;
  inline void clear_iskill();
  static const int kIsKillFieldNumber = 2;
  inline ::google::protobuf::uint32 iskill() const;
  inline void set_iskill(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::WarHonorData > warhonor_;
  ::google::protobuf::uint32 iskill_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainWarHonorNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseG2SLoadList : public ::google::protobuf::Message {
 public:
  CMessageBourseG2SLoadList();
  virtual ~CMessageBourseG2SLoadList();
  
  CMessageBourseG2SLoadList(const CMessageBourseG2SLoadList& from);
  
  inline CMessageBourseG2SLoadList& operator=(const CMessageBourseG2SLoadList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseG2SLoadList& default_instance();
  void Swap(CMessageBourseG2SLoadList* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseG2SLoadList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseG2SLoadList& from);
  void MergeFrom(const CMessageBourseG2SLoadList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ListID = 1;
  inline bool has_listid() const;
  inline void clear_listid();
  static const int kListIDFieldNumber = 1;
  inline ::google::protobuf::uint32 listid() const;
  inline void set_listid(::google::protobuf::uint32 value);
  
  // optional .PBBourseDetailList BuyList = 2;
  inline bool has_buylist() const;
  inline void clear_buylist();
  static const int kBuyListFieldNumber = 2;
  inline const ::PBBourseDetailList& buylist() const;
  inline ::PBBourseDetailList* mutable_buylist();
  
  // optional .PBBourseDetailList SellList = 3;
  inline bool has_selllist() const;
  inline void clear_selllist();
  static const int kSellListFieldNumber = 3;
  inline const ::PBBourseDetailList& selllist() const;
  inline ::PBBourseDetailList* mutable_selllist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 listid_;
  ::PBBourseDetailList* buylist_;
  ::PBBourseDetailList* selllist_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseG2SLoadList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseS2GLoadList : public ::google::protobuf::Message {
 public:
  CMessageBourseS2GLoadList();
  virtual ~CMessageBourseS2GLoadList();
  
  CMessageBourseS2GLoadList(const CMessageBourseS2GLoadList& from);
  
  inline CMessageBourseS2GLoadList& operator=(const CMessageBourseS2GLoadList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseS2GLoadList& default_instance();
  void Swap(CMessageBourseS2GLoadList* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseS2GLoadList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseS2GLoadList& from);
  void MergeFrom(const CMessageBourseS2GLoadList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseS2GLoadList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSyncWarStatusNotify : public ::google::protobuf::Message {
 public:
  CMessageSyncWarStatusNotify();
  virtual ~CMessageSyncWarStatusNotify();
  
  CMessageSyncWarStatusNotify(const CMessageSyncWarStatusNotify& from);
  
  inline CMessageSyncWarStatusNotify& operator=(const CMessageSyncWarStatusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSyncWarStatusNotify& default_instance();
  void Swap(CMessageSyncWarStatusNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSyncWarStatusNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSyncWarStatusNotify& from);
  void MergeFrom(const CMessageSyncWarStatusNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WarStatus = 1;
  inline bool has_warstatus() const;
  inline void clear_warstatus();
  static const int kWarStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 warstatus() const;
  inline void set_warstatus(::google::protobuf::uint32 value);
  
  // optional uint32 WarSerial = 2;
  inline bool has_warserial() const;
  inline void clear_warserial();
  static const int kWarSerialFieldNumber = 2;
  inline ::google::protobuf::uint32 warserial() const;
  inline void set_warserial(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 warstatus_;
  ::google::protobuf::uint32 warserial_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSyncWarStatusNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarControlNotify : public ::google::protobuf::Message {
 public:
  CMessageWarControlNotify();
  virtual ~CMessageWarControlNotify();
  
  CMessageWarControlNotify(const CMessageWarControlNotify& from);
  
  inline CMessageWarControlNotify& operator=(const CMessageWarControlNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarControlNotify& default_instance();
  void Swap(CMessageWarControlNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarControlNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarControlNotify& from);
  void MergeFrom(const CMessageWarControlNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ControlState = 1;
  inline bool has_controlstate() const;
  inline void clear_controlstate();
  static const int kControlStateFieldNumber = 1;
  inline ::google::protobuf::uint32 controlstate() const;
  inline void set_controlstate(::google::protobuf::uint32 value);
  
  // optional int32 GMHour = 2;
  inline bool has_gmhour() const;
  inline void clear_gmhour();
  static const int kGMHourFieldNumber = 2;
  inline ::google::protobuf::int32 gmhour() const;
  inline void set_gmhour(::google::protobuf::int32 value);
  
  // optional int32 GMMin = 3;
  inline bool has_gmmin() const;
  inline void clear_gmmin();
  static const int kGMMinFieldNumber = 3;
  inline ::google::protobuf::int32 gmmin() const;
  inline void set_gmmin(::google::protobuf::int32 value);
  
  // optional int32 GMDay = 4;
  inline bool has_gmday() const;
  inline void clear_gmday();
  static const int kGMDayFieldNumber = 4;
  inline ::google::protobuf::int32 gmday() const;
  inline void set_gmday(::google::protobuf::int32 value);
  
  // optional uint32 WarSerial = 5;
  inline bool has_warserial() const;
  inline void clear_warserial();
  static const int kWarSerialFieldNumber = 5;
  inline ::google::protobuf::uint32 warserial() const;
  inline void set_warserial(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 controlstate_;
  ::google::protobuf::int32 gmhour_;
  ::google::protobuf::int32 gmmin_;
  ::google::protobuf::int32 gmday_;
  ::google::protobuf::uint32 warserial_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarControlNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseTradeNotice : public ::google::protobuf::Message {
 public:
  CMessageBourseTradeNotice();
  virtual ~CMessageBourseTradeNotice();
  
  CMessageBourseTradeNotice(const CMessageBourseTradeNotice& from);
  
  inline CMessageBourseTradeNotice& operator=(const CMessageBourseTradeNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseTradeNotice& default_instance();
  void Swap(CMessageBourseTradeNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseTradeNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseTradeNotice& from);
  void MergeFrom(const CMessageBourseTradeNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseDetail BuyDetail = 1;
  inline bool has_buydetail() const;
  inline void clear_buydetail();
  static const int kBuyDetailFieldNumber = 1;
  inline const ::PBBourseDetail& buydetail() const;
  inline ::PBBourseDetail* mutable_buydetail();
  
  // optional .PBBourseDetail SellDetail = 2;
  inline bool has_selldetail() const;
  inline void clear_selldetail();
  static const int kSellDetailFieldNumber = 2;
  inline const ::PBBourseDetail& selldetail() const;
  inline ::PBBourseDetail* mutable_selldetail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseDetail* buydetail_;
  ::PBBourseDetail* selldetail_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseTradeNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReSavePlayerRequest : public ::google::protobuf::Message {
 public:
  CMessageReSavePlayerRequest();
  virtual ~CMessageReSavePlayerRequest();
  
  CMessageReSavePlayerRequest(const CMessageReSavePlayerRequest& from);
  
  inline CMessageReSavePlayerRequest& operator=(const CMessageReSavePlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReSavePlayerRequest& default_instance();
  void Swap(CMessageReSavePlayerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReSavePlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReSavePlayerRequest& from);
  void MergeFrom(const CMessageReSavePlayerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReSavePlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReSavePlayerResponse : public ::google::protobuf::Message {
 public:
  CMessageReSavePlayerResponse();
  virtual ~CMessageReSavePlayerResponse();
  
  CMessageReSavePlayerResponse(const CMessageReSavePlayerResponse& from);
  
  inline CMessageReSavePlayerResponse& operator=(const CMessageReSavePlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReSavePlayerResponse& default_instance();
  void Swap(CMessageReSavePlayerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReSavePlayerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReSavePlayerResponse& from);
  void MergeFrom(const CMessageReSavePlayerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 3;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 3;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 5;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 5;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 6;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 6;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 7;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 7;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReSavePlayerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBoursePlayerTradeBuyNotice : public ::google::protobuf::Message {
 public:
  CMessageBoursePlayerTradeBuyNotice();
  virtual ~CMessageBoursePlayerTradeBuyNotice();
  
  CMessageBoursePlayerTradeBuyNotice(const CMessageBoursePlayerTradeBuyNotice& from);
  
  inline CMessageBoursePlayerTradeBuyNotice& operator=(const CMessageBoursePlayerTradeBuyNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBoursePlayerTradeBuyNotice& default_instance();
  void Swap(CMessageBoursePlayerTradeBuyNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBoursePlayerTradeBuyNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBoursePlayerTradeBuyNotice& from);
  void MergeFrom(const CMessageBoursePlayerTradeBuyNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseDetail Detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::PBBourseDetail& detail() const;
  inline ::PBBourseDetail* mutable_detail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseDetail* detail_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBoursePlayerTradeBuyNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBoursePlayerTradeSellNotice : public ::google::protobuf::Message {
 public:
  CMessageBoursePlayerTradeSellNotice();
  virtual ~CMessageBoursePlayerTradeSellNotice();
  
  CMessageBoursePlayerTradeSellNotice(const CMessageBoursePlayerTradeSellNotice& from);
  
  inline CMessageBoursePlayerTradeSellNotice& operator=(const CMessageBoursePlayerTradeSellNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBoursePlayerTradeSellNotice& default_instance();
  void Swap(CMessageBoursePlayerTradeSellNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBoursePlayerTradeSellNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBoursePlayerTradeSellNotice& from);
  void MergeFrom(const CMessageBoursePlayerTradeSellNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseDetail Detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::PBBourseDetail& detail() const;
  inline ::PBBourseDetail* mutable_detail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseDetail* detail_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBoursePlayerTradeSellNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarStoneOverNotify : public ::google::protobuf::Message {
 public:
  CMessageWarStoneOverNotify();
  virtual ~CMessageWarStoneOverNotify();
  
  CMessageWarStoneOverNotify(const CMessageWarStoneOverNotify& from);
  
  inline CMessageWarStoneOverNotify& operator=(const CMessageWarStoneOverNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarStoneOverNotify& default_instance();
  void Swap(CMessageWarStoneOverNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarStoneOverNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarStoneOverNotify& from);
  void MergeFrom(const CMessageWarStoneOverNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarStoneOverNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateWarStoneNotify : public ::google::protobuf::Message {
 public:
  CMessageCreateWarStoneNotify();
  virtual ~CMessageCreateWarStoneNotify();
  
  CMessageCreateWarStoneNotify(const CMessageCreateWarStoneNotify& from);
  
  inline CMessageCreateWarStoneNotify& operator=(const CMessageCreateWarStoneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateWarStoneNotify& default_instance();
  void Swap(CMessageCreateWarStoneNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateWarStoneNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateWarStoneNotify& from);
  void MergeFrom(const CMessageCreateWarStoneNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 StoneLevel = 1;
  inline bool has_stonelevel() const;
  inline void clear_stonelevel();
  static const int kStoneLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 stonelevel() const;
  inline void set_stonelevel(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 stonelevel_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateWarStoneNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAddTaxNotify : public ::google::protobuf::Message {
 public:
  CMessageAddTaxNotify();
  virtual ~CMessageAddTaxNotify();
  
  CMessageAddTaxNotify(const CMessageAddTaxNotify& from);
  
  inline CMessageAddTaxNotify& operator=(const CMessageAddTaxNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddTaxNotify& default_instance();
  void Swap(CMessageAddTaxNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAddTaxNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAddTaxNotify& from);
  void MergeFrom(const CMessageAddTaxNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAddTaxNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSendSysMailToPlayer : public ::google::protobuf::Message {
 public:
  CMessageSendSysMailToPlayer();
  virtual ~CMessageSendSysMailToPlayer();
  
  CMessageSendSysMailToPlayer(const CMessageSendSysMailToPlayer& from);
  
  inline CMessageSendSysMailToPlayer& operator=(const CMessageSendSysMailToPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSendSysMailToPlayer& default_instance();
  void Swap(CMessageSendSysMailToPlayer* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSendSysMailToPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSendSysMailToPlayer& from);
  void MergeFrom(const CMessageSendSysMailToPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string role_name = 1;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 1;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  
  // optional uint32 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional string sender_name = 3;
  inline bool has_sender_name() const;
  inline void clear_sender_name();
  static const int kSenderNameFieldNumber = 3;
  inline const ::std::string& sender_name() const;
  inline void set_sender_name(const ::std::string& value);
  inline void set_sender_name(const char* value);
  inline void set_sender_name(const char* value, size_t size);
  inline ::std::string* mutable_sender_name();
  
  // optional string title = 4;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 4;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  
  // optional string body = 5;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 5;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const char* value, size_t size);
  inline ::std::string* mutable_body();
  
  // optional uint32 receive_countryid = 6;
  inline bool has_receive_countryid() const;
  inline void clear_receive_countryid();
  static const int kReceiveCountryidFieldNumber = 6;
  inline ::google::protobuf::uint32 receive_countryid() const;
  inline void set_receive_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 gateway_id = 7;
  inline bool has_gateway_id() const;
  inline void clear_gateway_id();
  static const int kGatewayIdFieldNumber = 7;
  inline ::google::protobuf::uint32 gateway_id() const;
  inline void set_gateway_id(::google::protobuf::uint32 value);
  
  // optional uint32 game_id = 8;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 8;
  inline ::google::protobuf::uint32 game_id() const;
  inline void set_game_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 9;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 9;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 type = 10;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 session_id = 11;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 11;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemID = 13;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemid();
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemNum = 14;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemnum();
  inline ::google::protobuf::uint32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::uint32 value);
  inline void add_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 MailSendType = 15;
  inline bool has_mailsendtype() const;
  inline void clear_mailsendtype();
  static const int kMailSendTypeFieldNumber = 15;
  inline ::google::protobuf::uint32 mailsendtype() const;
  inline void set_mailsendtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* role_name_;
  static const ::std::string _default_role_name_;
  ::google::protobuf::uint32 role_id_;
  ::std::string* sender_name_;
  static const ::std::string _default_sender_name_;
  ::std::string* title_;
  static const ::std::string _default_title_;
  ::std::string* body_;
  static const ::std::string _default_body_;
  ::google::protobuf::uint32 receive_countryid_;
  ::google::protobuf::uint32 gateway_id_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemnum_;
  ::google::protobuf::uint32 mailsendtype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSendSysMailToPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampAddHonerScore : public ::google::protobuf::Message {
 public:
  CMessageCampAddHonerScore();
  virtual ~CMessageCampAddHonerScore();
  
  CMessageCampAddHonerScore(const CMessageCampAddHonerScore& from);
  
  inline CMessageCampAddHonerScore& operator=(const CMessageCampAddHonerScore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampAddHonerScore& default_instance();
  void Swap(CMessageCampAddHonerScore* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampAddHonerScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampAddHonerScore& from);
  void MergeFrom(const CMessageCampAddHonerScore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional uint32 honer_value = 2;
  inline bool has_honer_value() const;
  inline void clear_honer_value();
  static const int kHonerValueFieldNumber = 2;
  inline ::google::protobuf::uint32 honer_value() const;
  inline void set_honer_value(::google::protobuf::uint32 value);
  
  // optional uint32 camp_id = 3;
  inline bool has_camp_id() const;
  inline void clear_camp_id();
  static const int kCampIdFieldNumber = 3;
  inline ::google::protobuf::uint32 camp_id() const;
  inline void set_camp_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 honer_value_;
  ::google::protobuf::uint32 camp_id_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampAddHonerScore* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleTeamFixWait : public ::google::protobuf::Message {
 public:
  CMessageBattleTeamFixWait();
  virtual ~CMessageBattleTeamFixWait();
  
  CMessageBattleTeamFixWait(const CMessageBattleTeamFixWait& from);
  
  inline CMessageBattleTeamFixWait& operator=(const CMessageBattleTeamFixWait& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleTeamFixWait& default_instance();
  void Swap(CMessageBattleTeamFixWait* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleTeamFixWait* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleTeamFixWait& from);
  void MergeFrom(const CMessageBattleTeamFixWait& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 3;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleTeamFixWait* default_instance_;
};
// -------------------------------------------------------------------

class CMessageActivityEventNotify : public ::google::protobuf::Message {
 public:
  CMessageActivityEventNotify();
  virtual ~CMessageActivityEventNotify();
  
  CMessageActivityEventNotify(const CMessageActivityEventNotify& from);
  
  inline CMessageActivityEventNotify& operator=(const CMessageActivityEventNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageActivityEventNotify& default_instance();
  void Swap(CMessageActivityEventNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageActivityEventNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageActivityEventNotify& from);
  void MergeFrom(const CMessageActivityEventNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ActivityID = 1;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);
  
  // optional uint32 EventID = 2;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventIDFieldNumber = 2;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);
  
  // repeated uint32 IntParams = 3;
  inline int intparams_size() const;
  inline void clear_intparams();
  static const int kIntParamsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& intparams() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_intparams();
  inline ::google::protobuf::uint32 intparams(int index) const;
  inline void set_intparams(int index, ::google::protobuf::uint32 value);
  inline void add_intparams(::google::protobuf::uint32 value);
  
  // repeated string StrParams = 4;
  inline int strparams_size() const;
  inline void clear_strparams();
  static const int kStrParamsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strparams() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strparams();
  inline const ::std::string& strparams(int index) const;
  inline ::std::string* mutable_strparams(int index);
  inline void set_strparams(int index, const ::std::string& value);
  inline void set_strparams(int index, const char* value);
  inline void set_strparams(int index, const char* value, size_t size);
  inline ::std::string* add_strparams();
  inline void add_strparams(const ::std::string& value);
  inline void add_strparams(const char* value);
  inline void add_strparams(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 activityid_;
  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > intparams_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strparams_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageActivityEventNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAddMasterPointRequest : public ::google::protobuf::Message {
 public:
  CMessageAddMasterPointRequest();
  virtual ~CMessageAddMasterPointRequest();
  
  CMessageAddMasterPointRequest(const CMessageAddMasterPointRequest& from);
  
  inline CMessageAddMasterPointRequest& operator=(const CMessageAddMasterPointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddMasterPointRequest& default_instance();
  void Swap(CMessageAddMasterPointRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAddMasterPointRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAddMasterPointRequest& from);
  void MergeFrom(const CMessageAddMasterPointRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MasterID = 1;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 1;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
  // optional uint32 Point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 masterid_;
  ::google::protobuf::uint32 point_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAddMasterPointRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAddMasterPointNotify : public ::google::protobuf::Message {
 public:
  CMessageAddMasterPointNotify();
  virtual ~CMessageAddMasterPointNotify();
  
  CMessageAddMasterPointNotify(const CMessageAddMasterPointNotify& from);
  
  inline CMessageAddMasterPointNotify& operator=(const CMessageAddMasterPointNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddMasterPointNotify& default_instance();
  void Swap(CMessageAddMasterPointNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAddMasterPointNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAddMasterPointNotify& from);
  void MergeFrom(const CMessageAddMasterPointNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 point_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAddMasterPointNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleSingleFixWait : public ::google::protobuf::Message {
 public:
  CMessageBattleSingleFixWait();
  virtual ~CMessageBattleSingleFixWait();
  
  CMessageBattleSingleFixWait(const CMessageBattleSingleFixWait& from);
  
  inline CMessageBattleSingleFixWait& operator=(const CMessageBattleSingleFixWait& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleSingleFixWait& default_instance();
  void Swap(CMessageBattleSingleFixWait* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleSingleFixWait* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleSingleFixWait& from);
  void MergeFrom(const CMessageBattleSingleFixWait& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 3;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleSingleFixWait* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSpecialEventNotify : public ::google::protobuf::Message {
 public:
  CMessageSpecialEventNotify();
  virtual ~CMessageSpecialEventNotify();
  
  CMessageSpecialEventNotify(const CMessageSpecialEventNotify& from);
  
  inline CMessageSpecialEventNotify& operator=(const CMessageSpecialEventNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSpecialEventNotify& default_instance();
  void Swap(CMessageSpecialEventNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSpecialEventNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSpecialEventNotify& from);
  void MergeFrom(const CMessageSpecialEventNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcWorldID = 1;
  inline bool has_srcworldid() const;
  inline void clear_srcworldid();
  static const int kSrcWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srcworldid() const;
  inline void set_srcworldid(::google::protobuf::uint32 value);
  
  // optional uint32 DesWorldID = 2;
  inline bool has_desworldid() const;
  inline void clear_desworldid();
  static const int kDesWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 desworldid() const;
  inline void set_desworldid(::google::protobuf::uint32 value);
  
  // optional uint32 EventType = 3;
  inline bool has_eventtype() const;
  inline void clear_eventtype();
  static const int kEventTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 eventtype() const;
  inline void set_eventtype(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srcworldid_;
  ::google::protobuf::uint32 desworldid_;
  ::google::protobuf::uint32 eventtype_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSpecialEventNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAcquireMasterNotify : public ::google::protobuf::Message {
 public:
  CMessageAcquireMasterNotify();
  virtual ~CMessageAcquireMasterNotify();
  
  CMessageAcquireMasterNotify(const CMessageAcquireMasterNotify& from);
  
  inline CMessageAcquireMasterNotify& operator=(const CMessageAcquireMasterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAcquireMasterNotify& default_instance();
  void Swap(CMessageAcquireMasterNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAcquireMasterNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAcquireMasterNotify& from);
  void MergeFrom(const CMessageAcquireMasterNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SlaveID = 1;
  inline bool has_slaveid() const;
  inline void clear_slaveid();
  static const int kSlaveIDFieldNumber = 1;
  inline ::google::protobuf::uint32 slaveid() const;
  inline void set_slaveid(::google::protobuf::uint32 value);
  
  // optional uint32 MasterID = 2;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 2;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 slaveid_;
  ::google::protobuf::uint32 masterid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAcquireMasterNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleWinnerNotify : public ::google::protobuf::Message {
 public:
  CMessageBattleWinnerNotify();
  virtual ~CMessageBattleWinnerNotify();
  
  CMessageBattleWinnerNotify(const CMessageBattleWinnerNotify& from);
  
  inline CMessageBattleWinnerNotify& operator=(const CMessageBattleWinnerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleWinnerNotify& default_instance();
  void Swap(CMessageBattleWinnerNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleWinnerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleWinnerNotify& from);
  void MergeFrom(const CMessageBattleWinnerNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 HasWinner = 1;
  inline bool has_haswinner() const;
  inline void clear_haswinner();
  static const int kHasWinnerFieldNumber = 1;
  inline ::google::protobuf::uint32 haswinner() const;
  inline void set_haswinner(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 haswinner_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleWinnerNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeFamilyStabilityNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeFamilyStabilityNotify();
  virtual ~CMessageChangeFamilyStabilityNotify();
  
  CMessageChangeFamilyStabilityNotify(const CMessageChangeFamilyStabilityNotify& from);
  
  inline CMessageChangeFamilyStabilityNotify& operator=(const CMessageChangeFamilyStabilityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeFamilyStabilityNotify& default_instance();
  void Swap(CMessageChangeFamilyStabilityNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeFamilyStabilityNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeFamilyStabilityNotify& from);
  void MergeFrom(const CMessageChangeFamilyStabilityNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FamilyID = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 1;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 5;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 5;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional uint32 OnLineTime = 6;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnLineTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);
  
  // optional uint32 RoleLevel = 7;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRoleLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 9;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 9;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::uint32 onlinetime_;
  ::google::protobuf::uint32 rolelevel_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeFamilyStabilityNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2GJoinOnTimeOpenBattleRequest : public ::google::protobuf::Message {
 public:
  CMessageS2GJoinOnTimeOpenBattleRequest();
  virtual ~CMessageS2GJoinOnTimeOpenBattleRequest();
  
  CMessageS2GJoinOnTimeOpenBattleRequest(const CMessageS2GJoinOnTimeOpenBattleRequest& from);
  
  inline CMessageS2GJoinOnTimeOpenBattleRequest& operator=(const CMessageS2GJoinOnTimeOpenBattleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2GJoinOnTimeOpenBattleRequest& default_instance();
  void Swap(CMessageS2GJoinOnTimeOpenBattleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2GJoinOnTimeOpenBattleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2GJoinOnTimeOpenBattleRequest& from);
  void MergeFrom(const CMessageS2GJoinOnTimeOpenBattleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2GJoinOnTimeOpenBattleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSyncGTAndLWNotify : public ::google::protobuf::Message {
 public:
  CMessageSyncGTAndLWNotify();
  virtual ~CMessageSyncGTAndLWNotify();
  
  CMessageSyncGTAndLWNotify(const CMessageSyncGTAndLWNotify& from);
  
  inline CMessageSyncGTAndLWNotify& operator=(const CMessageSyncGTAndLWNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSyncGTAndLWNotify& default_instance();
  void Swap(CMessageSyncGTAndLWNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSyncGTAndLWNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSyncGTAndLWNotify& from);
  void MergeFrom(const CMessageSyncGTAndLWNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .GTAndLWInfo GTInfo = 1;
  inline int gtinfo_size() const;
  inline void clear_gtinfo();
  static const int kGTInfoFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >& gtinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >* mutable_gtinfo();
  inline const ::GTAndLWInfo& gtinfo(int index) const;
  inline ::GTAndLWInfo* mutable_gtinfo(int index);
  inline ::GTAndLWInfo* add_gtinfo();
  
  // repeated .GTAndLWInfo LWInfo = 2;
  inline int lwinfo_size() const;
  inline void clear_lwinfo();
  static const int kLWInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >& lwinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >* mutable_lwinfo();
  inline const ::GTAndLWInfo& lwinfo(int index) const;
  inline ::GTAndLWInfo* mutable_lwinfo(int index);
  inline ::GTAndLWInfo* add_lwinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo > gtinfo_;
  ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo > lwinfo_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSyncGTAndLWNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2GBattleClose : public ::google::protobuf::Message {
 public:
  CMessageS2GBattleClose();
  virtual ~CMessageS2GBattleClose();
  
  CMessageS2GBattleClose(const CMessageS2GBattleClose& from);
  
  inline CMessageS2GBattleClose& operator=(const CMessageS2GBattleClose& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2GBattleClose& default_instance();
  void Swap(CMessageS2GBattleClose* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2GBattleClose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2GBattleClose& from);
  void MergeFrom(const CMessageS2GBattleClose& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2GBattleClose* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2GIntoCorpsBossRepetion : public ::google::protobuf::Message {
 public:
  CMessageS2GIntoCorpsBossRepetion();
  virtual ~CMessageS2GIntoCorpsBossRepetion();
  
  CMessageS2GIntoCorpsBossRepetion(const CMessageS2GIntoCorpsBossRepetion& from);
  
  inline CMessageS2GIntoCorpsBossRepetion& operator=(const CMessageS2GIntoCorpsBossRepetion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2GIntoCorpsBossRepetion& default_instance();
  void Swap(CMessageS2GIntoCorpsBossRepetion* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2GIntoCorpsBossRepetion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2GIntoCorpsBossRepetion& from);
  void MergeFrom(const CMessageS2GIntoCorpsBossRepetion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 4;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 PostX = 5;
  inline bool has_postx() const;
  inline void clear_postx();
  static const int kPostXFieldNumber = 5;
  inline ::google::protobuf::uint32 postx() const;
  inline void set_postx(::google::protobuf::uint32 value);
  
  // optional uint32 PostY = 6;
  inline bool has_posty() const;
  inline void clear_posty();
  static const int kPostYFieldNumber = 6;
  inline ::google::protobuf::uint32 posty() const;
  inline void set_posty(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 postx_;
  ::google::protobuf::uint32 posty_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2GIntoCorpsBossRepetion* default_instance_;
};
// -------------------------------------------------------------------

class CMessgeS2GEndCorpsBossRepetion : public ::google::protobuf::Message {
 public:
  CMessgeS2GEndCorpsBossRepetion();
  virtual ~CMessgeS2GEndCorpsBossRepetion();
  
  CMessgeS2GEndCorpsBossRepetion(const CMessgeS2GEndCorpsBossRepetion& from);
  
  inline CMessgeS2GEndCorpsBossRepetion& operator=(const CMessgeS2GEndCorpsBossRepetion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessgeS2GEndCorpsBossRepetion& default_instance();
  void Swap(CMessgeS2GEndCorpsBossRepetion* other);
  
  // implements Message ----------------------------------------------
  
  CMessgeS2GEndCorpsBossRepetion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessgeS2GEndCorpsBossRepetion& from);
  void MergeFrom(const CMessgeS2GEndCorpsBossRepetion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 3;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 corpsid_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessgeS2GEndCorpsBossRepetion* default_instance_;
};
// -------------------------------------------------------------------

class PBGroupTasks : public ::google::protobuf::Message {
 public:
  PBGroupTasks();
  virtual ~PBGroupTasks();
  
  PBGroupTasks(const PBGroupTasks& from);
  
  inline PBGroupTasks& operator=(const PBGroupTasks& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGroupTasks& default_instance();
  void Swap(PBGroupTasks* other);
  
  // implements Message ----------------------------------------------
  
  PBGroupTasks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGroupTasks& from);
  void MergeFrom(const PBGroupTasks& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskState = 2;
  inline bool has_taskstate() const;
  inline void clear_taskstate();
  static const int kTaskStateFieldNumber = 2;
  inline ::google::protobuf::uint32 taskstate() const;
  inline void set_taskstate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskstate_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBGroupTasks* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGateCheckGroupPublishRequest : public ::google::protobuf::Message {
 public:
  CMessageGateCheckGroupPublishRequest();
  virtual ~CMessageGateCheckGroupPublishRequest();
  
  CMessageGateCheckGroupPublishRequest(const CMessageGateCheckGroupPublishRequest& from);
  
  inline CMessageGateCheckGroupPublishRequest& operator=(const CMessageGateCheckGroupPublishRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGateCheckGroupPublishRequest& default_instance();
  void Swap(CMessageGateCheckGroupPublishRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGateCheckGroupPublishRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGateCheckGroupPublishRequest& from);
  void MergeFrom(const CMessageGateCheckGroupPublishRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 PublishType = 2;
  inline bool has_publishtype() const;
  inline void clear_publishtype();
  static const int kPublishTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 publishtype() const;
  inline void set_publishtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 publishtype_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGateCheckGroupPublishRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGatePublishGroupRequest : public ::google::protobuf::Message {
 public:
  CMessageGatePublishGroupRequest();
  virtual ~CMessageGatePublishGroupRequest();
  
  CMessageGatePublishGroupRequest(const CMessageGatePublishGroupRequest& from);
  
  inline CMessageGatePublishGroupRequest& operator=(const CMessageGatePublishGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGatePublishGroupRequest& default_instance();
  void Swap(CMessageGatePublishGroupRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGatePublishGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGatePublishGroupRequest& from);
  void MergeFrom(const CMessageGatePublishGroupRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 PublishType = 3;
  inline bool has_publishtype() const;
  inline void clear_publishtype();
  static const int kPublishTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 publishtype() const;
  inline void set_publishtype(::google::protobuf::uint32 value);
  
  // optional uint32 TaskState = 4;
  inline bool has_taskstate() const;
  inline void clear_taskstate();
  static const int kTaskStateFieldNumber = 4;
  inline ::google::protobuf::uint32 taskstate() const;
  inline void set_taskstate(::google::protobuf::uint32 value);
  
  // optional uint32 PayGroupMoney = 5;
  inline bool has_paygroupmoney() const;
  inline void clear_paygroupmoney();
  static const int kPayGroupMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 paygroupmoney() const;
  inline void set_paygroupmoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 publishtype_;
  ::google::protobuf::uint32 taskstate_;
  ::google::protobuf::uint32 paygroupmoney_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGatePublishGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBGroupInfo : public ::google::protobuf::Message {
 public:
  PBGroupInfo();
  virtual ~PBGroupInfo();
  
  PBGroupInfo(const PBGroupInfo& from);
  
  inline PBGroupInfo& operator=(const PBGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGroupInfo& default_instance();
  void Swap(PBGroupInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBGroupInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGroupInfo& from);
  void MergeFrom(const PBGroupInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 GroupID = 1;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);
  
  // optional uint32 GroupLevel = 2;
  inline bool has_grouplevel() const;
  inline void clear_grouplevel();
  static const int kGroupLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 grouplevel() const;
  inline void set_grouplevel(::google::protobuf::uint32 value);
  
  // optional uint32 GroupMoney = 3;
  inline bool has_groupmoney() const;
  inline void clear_groupmoney();
  static const int kGroupMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 groupmoney() const;
  inline void set_groupmoney(::google::protobuf::uint32 value);
  
  // optional uint32 PlayerPosition = 4;
  inline bool has_playerposition() const;
  inline void clear_playerposition();
  static const int kPlayerPositionFieldNumber = 4;
  inline ::google::protobuf::uint32 playerposition() const;
  inline void set_playerposition(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 grouplevel_;
  ::google::protobuf::uint32 groupmoney_;
  ::google::protobuf::uint32 playerposition_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGateCheckGroupPublishResponse : public ::google::protobuf::Message {
 public:
  CMessageGateCheckGroupPublishResponse();
  virtual ~CMessageGateCheckGroupPublishResponse();
  
  CMessageGateCheckGroupPublishResponse(const CMessageGateCheckGroupPublishResponse& from);
  
  inline CMessageGateCheckGroupPublishResponse& operator=(const CMessageGateCheckGroupPublishResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGateCheckGroupPublishResponse& default_instance();
  void Swap(CMessageGateCheckGroupPublishResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGateCheckGroupPublishResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGateCheckGroupPublishResponse& from);
  void MergeFrom(const CMessageGateCheckGroupPublishResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 PublishType = 2;
  inline bool has_publishtype() const;
  inline void clear_publishtype();
  static const int kPublishTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 publishtype() const;
  inline void set_publishtype(::google::protobuf::uint32 value);
  
  // repeated .PBGroupTasks Tasks = 3;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBGroupTasks >& tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBGroupTasks >* mutable_tasks();
  inline const ::PBGroupTasks& tasks(int index) const;
  inline ::PBGroupTasks* mutable_tasks(int index);
  inline ::PBGroupTasks* add_tasks();
  
  // optional .PBGroupInfo GroupInfo = 4;
  inline bool has_groupinfo() const;
  inline void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 4;
  inline const ::PBGroupInfo& groupinfo() const;
  inline ::PBGroupInfo* mutable_groupinfo();
  
  // optional uint32 Result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 publishtype_;
  ::google::protobuf::RepeatedPtrField< ::PBGroupTasks > tasks_;
  ::PBGroupInfo* groupinfo_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGateCheckGroupPublishResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGatePublishGroupResponse : public ::google::protobuf::Message {
 public:
  CMessageGatePublishGroupResponse();
  virtual ~CMessageGatePublishGroupResponse();
  
  CMessageGatePublishGroupResponse(const CMessageGatePublishGroupResponse& from);
  
  inline CMessageGatePublishGroupResponse& operator=(const CMessageGatePublishGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGatePublishGroupResponse& default_instance();
  void Swap(CMessageGatePublishGroupResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGatePublishGroupResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGatePublishGroupResponse& from);
  void MergeFrom(const CMessageGatePublishGroupResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 PublishType = 3;
  inline bool has_publishtype() const;
  inline void clear_publishtype();
  static const int kPublishTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 publishtype() const;
  inline void set_publishtype(::google::protobuf::uint32 value);
  
  // optional uint32 TaskState = 4;
  inline bool has_taskstate() const;
  inline void clear_taskstate();
  static const int kTaskStateFieldNumber = 4;
  inline ::google::protobuf::uint32 taskstate() const;
  inline void set_taskstate(::google::protobuf::uint32 value);
  
  // optional uint32 TaskAcion = 5;
  inline bool has_taskacion() const;
  inline void clear_taskacion();
  static const int kTaskAcionFieldNumber = 5;
  inline ::google::protobuf::uint32 taskacion() const;
  inline void set_taskacion(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 6;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 publishtype_;
  ::google::protobuf::uint32 taskstate_;
  ::google::protobuf::uint32 taskacion_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_servermessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_servermessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGatePublishGroupResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageYQSActivtyStartNotice

// optional uint32 id = 1;
inline bool CMessageYQSActivtyStartNotice::has_id() const {
  return _has_bit(0);
}
inline void CMessageYQSActivtyStartNotice::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageYQSActivtyStartNotice::id() const {
  return id_;
}
inline void CMessageYQSActivtyStartNotice::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint32 campid = 2;
inline bool CMessageYQSActivtyStartNotice::has_campid() const {
  return _has_bit(1);
}
inline void CMessageYQSActivtyStartNotice::clear_campid() {
  campid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageYQSActivtyStartNotice::campid() const {
  return campid_;
}
inline void CMessageYQSActivtyStartNotice::set_campid(::google::protobuf::uint32 value) {
  _set_bit(1);
  campid_ = value;
}

// optional uint32 camprankid = 3;
inline bool CMessageYQSActivtyStartNotice::has_camprankid() const {
  return _has_bit(2);
}
inline void CMessageYQSActivtyStartNotice::clear_camprankid() {
  camprankid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageYQSActivtyStartNotice::camprankid() const {
  return camprankid_;
}
inline void CMessageYQSActivtyStartNotice::set_camprankid(::google::protobuf::uint32 value) {
  _set_bit(2);
  camprankid_ = value;
}

// optional uint32 growing = 4;
inline bool CMessageYQSActivtyStartNotice::has_growing() const {
  return _has_bit(3);
}
inline void CMessageYQSActivtyStartNotice::clear_growing() {
  growing_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageYQSActivtyStartNotice::growing() const {
  return growing_;
}
inline void CMessageYQSActivtyStartNotice::set_growing(::google::protobuf::uint32 value) {
  _set_bit(3);
  growing_ = value;
}

// optional uint32 level = 5;
inline bool CMessageYQSActivtyStartNotice::has_level() const {
  return _has_bit(4);
}
inline void CMessageYQSActivtyStartNotice::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageYQSActivtyStartNotice::level() const {
  return level_;
}
inline void CMessageYQSActivtyStartNotice::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint32 handindawnum = 6;
inline bool CMessageYQSActivtyStartNotice::has_handindawnum() const {
  return _has_bit(5);
}
inline void CMessageYQSActivtyStartNotice::clear_handindawnum() {
  handindawnum_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageYQSActivtyStartNotice::handindawnum() const {
  return handindawnum_;
}
inline void CMessageYQSActivtyStartNotice::set_handindawnum(::google::protobuf::uint32 value) {
  _set_bit(5);
  handindawnum_ = value;
}

// optional uint32 settlephase = 7;
inline bool CMessageYQSActivtyStartNotice::has_settlephase() const {
  return _has_bit(6);
}
inline void CMessageYQSActivtyStartNotice::clear_settlephase() {
  settlephase_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageYQSActivtyStartNotice::settlephase() const {
  return settlephase_;
}
inline void CMessageYQSActivtyStartNotice::set_settlephase(::google::protobuf::uint32 value) {
  _set_bit(6);
  settlephase_ = value;
}

// -------------------------------------------------------------------

// CMessageS2GGetCampRankForYQSRequest

// optional uint32 playerId = 1;
inline bool CMessageS2GGetCampRankForYQSRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageS2GGetCampRankForYQSRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2GGetCampRankForYQSRequest::playerid() const {
  return playerid_;
}
inline void CMessageS2GGetCampRankForYQSRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 param1 = 2;
inline bool CMessageS2GGetCampRankForYQSRequest::has_param1() const {
  return _has_bit(1);
}
inline void CMessageS2GGetCampRankForYQSRequest::clear_param1() {
  param1_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2GGetCampRankForYQSRequest::param1() const {
  return param1_;
}
inline void CMessageS2GGetCampRankForYQSRequest::set_param1(::google::protobuf::uint32 value) {
  _set_bit(1);
  param1_ = value;
}

// -------------------------------------------------------------------

// CampRankForYQSForSever

// optional uint32 rank = 1;
inline bool CampRankForYQSForSever::has_rank() const {
  return _has_bit(0);
}
inline void CampRankForYQSForSever::clear_rank() {
  rank_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CampRankForYQSForSever::rank() const {
  return rank_;
}
inline void CampRankForYQSForSever::set_rank(::google::protobuf::uint32 value) {
  _set_bit(0);
  rank_ = value;
}

// optional uint32 campid = 2;
inline bool CampRankForYQSForSever::has_campid() const {
  return _has_bit(1);
}
inline void CampRankForYQSForSever::clear_campid() {
  campid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CampRankForYQSForSever::campid() const {
  return campid_;
}
inline void CampRankForYQSForSever::set_campid(::google::protobuf::uint32 value) {
  _set_bit(1);
  campid_ = value;
}

// optional uint32 growinggrade = 3;
inline bool CampRankForYQSForSever::has_growinggrade() const {
  return _has_bit(2);
}
inline void CampRankForYQSForSever::clear_growinggrade() {
  growinggrade_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CampRankForYQSForSever::growinggrade() const {
  return growinggrade_;
}
inline void CampRankForYQSForSever::set_growinggrade(::google::protobuf::uint32 value) {
  _set_bit(2);
  growinggrade_ = value;
}

// optional uint32 growingphase = 4;
inline bool CampRankForYQSForSever::has_growingphase() const {
  return _has_bit(3);
}
inline void CampRankForYQSForSever::clear_growingphase() {
  growingphase_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CampRankForYQSForSever::growingphase() const {
  return growingphase_;
}
inline void CampRankForYQSForSever::set_growingphase(::google::protobuf::uint32 value) {
  _set_bit(3);
  growingphase_ = value;
}

// -------------------------------------------------------------------

// CMessageG2SGetCampRankForYQSResponse

// optional uint32 result = 1;
inline bool CMessageG2SGetCampRankForYQSResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageG2SGetCampRankForYQSResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageG2SGetCampRankForYQSResponse::result() const {
  return result_;
}
inline void CMessageG2SGetCampRankForYQSResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 playerId = 2;
inline bool CMessageG2SGetCampRankForYQSResponse::has_playerid() const {
  return _has_bit(1);
}
inline void CMessageG2SGetCampRankForYQSResponse::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageG2SGetCampRankForYQSResponse::playerid() const {
  return playerid_;
}
inline void CMessageG2SGetCampRankForYQSResponse::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  playerid_ = value;
}

// optional uint32 param1 = 3;
inline bool CMessageG2SGetCampRankForYQSResponse::has_param1() const {
  return _has_bit(2);
}
inline void CMessageG2SGetCampRankForYQSResponse::clear_param1() {
  param1_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageG2SGetCampRankForYQSResponse::param1() const {
  return param1_;
}
inline void CMessageG2SGetCampRankForYQSResponse::set_param1(::google::protobuf::uint32 value) {
  _set_bit(2);
  param1_ = value;
}

// repeated .CampRankForYQSForSever camprankinfo = 4;
inline int CMessageG2SGetCampRankForYQSResponse::camprankinfo_size() const {
  return camprankinfo_.size();
}
inline void CMessageG2SGetCampRankForYQSResponse::clear_camprankinfo() {
  camprankinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CampRankForYQSForSever >&
CMessageG2SGetCampRankForYQSResponse::camprankinfo() const {
  return camprankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::CampRankForYQSForSever >*
CMessageG2SGetCampRankForYQSResponse::mutable_camprankinfo() {
  return &camprankinfo_;
}
inline const ::CampRankForYQSForSever& CMessageG2SGetCampRankForYQSResponse::camprankinfo(int index) const {
  return camprankinfo_.Get(index);
}
inline ::CampRankForYQSForSever* CMessageG2SGetCampRankForYQSResponse::mutable_camprankinfo(int index) {
  return camprankinfo_.Mutable(index);
}
inline ::CampRankForYQSForSever* CMessageG2SGetCampRankForYQSResponse::add_camprankinfo() {
  return camprankinfo_.Add();
}

// -------------------------------------------------------------------

// CMessageS2GUpdateYQSGrowingRequest

// optional uint32 playerid = 1;
inline bool CMessageS2GUpdateYQSGrowingRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageS2GUpdateYQSGrowingRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2GUpdateYQSGrowingRequest::playerid() const {
  return playerid_;
}
inline void CMessageS2GUpdateYQSGrowingRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 campid = 2;
inline bool CMessageS2GUpdateYQSGrowingRequest::has_campid() const {
  return _has_bit(1);
}
inline void CMessageS2GUpdateYQSGrowingRequest::clear_campid() {
  campid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2GUpdateYQSGrowingRequest::campid() const {
  return campid_;
}
inline void CMessageS2GUpdateYQSGrowingRequest::set_campid(::google::protobuf::uint32 value) {
  _set_bit(1);
  campid_ = value;
}

// optional uint32 growingchangevalue = 3;
inline bool CMessageS2GUpdateYQSGrowingRequest::has_growingchangevalue() const {
  return _has_bit(2);
}
inline void CMessageS2GUpdateYQSGrowingRequest::clear_growingchangevalue() {
  growingchangevalue_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageS2GUpdateYQSGrowingRequest::growingchangevalue() const {
  return growingchangevalue_;
}
inline void CMessageS2GUpdateYQSGrowingRequest::set_growingchangevalue(::google::protobuf::uint32 value) {
  _set_bit(2);
  growingchangevalue_ = value;
}

// -------------------------------------------------------------------

// CMessageG2SUpdateYQSGrowingResponse

// optional uint32 result = 1;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::result() const {
  return result_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 playerid = 2;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_playerid() const {
  return _has_bit(1);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::playerid() const {
  return playerid_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  playerid_ = value;
}

// optional uint32 id = 3;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_id() const {
  return _has_bit(2);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_id() {
  id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::id() const {
  return id_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  id_ = value;
}

// optional uint32 campid = 4;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_campid() const {
  return _has_bit(3);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_campid() {
  campid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::campid() const {
  return campid_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_campid(::google::protobuf::uint32 value) {
  _set_bit(3);
  campid_ = value;
}

// optional uint32 camprankid = 5;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_camprankid() const {
  return _has_bit(4);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_camprankid() {
  camprankid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::camprankid() const {
  return camprankid_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_camprankid(::google::protobuf::uint32 value) {
  _set_bit(4);
  camprankid_ = value;
}

// optional uint32 growing = 6;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_growing() const {
  return _has_bit(5);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_growing() {
  growing_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::growing() const {
  return growing_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_growing(::google::protobuf::uint32 value) {
  _set_bit(5);
  growing_ = value;
}

// optional uint32 level = 7;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_level() const {
  return _has_bit(6);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_level() {
  level_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::level() const {
  return level_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_level(::google::protobuf::uint32 value) {
  _set_bit(6);
  level_ = value;
}

// optional uint32 handindawnum = 8;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_handindawnum() const {
  return _has_bit(7);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_handindawnum() {
  handindawnum_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::handindawnum() const {
  return handindawnum_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_handindawnum(::google::protobuf::uint32 value) {
  _set_bit(7);
  handindawnum_ = value;
}

// optional uint32 settlephase = 9;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_settlephase() const {
  return _has_bit(8);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_settlephase() {
  settlephase_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::settlephase() const {
  return settlephase_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_settlephase(::google::protobuf::uint32 value) {
  _set_bit(8);
  settlephase_ = value;
}

// optional uint32 deltagrowing = 10;
inline bool CMessageG2SUpdateYQSGrowingResponse::has_deltagrowing() const {
  return _has_bit(9);
}
inline void CMessageG2SUpdateYQSGrowingResponse::clear_deltagrowing() {
  deltagrowing_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageG2SUpdateYQSGrowingResponse::deltagrowing() const {
  return deltagrowing_;
}
inline void CMessageG2SUpdateYQSGrowingResponse::set_deltagrowing(::google::protobuf::uint32 value) {
  _set_bit(9);
  deltagrowing_ = value;
}

// -------------------------------------------------------------------

// CMessageG2SSettleNotice

// optional uint32 id = 1;
inline bool CMessageG2SSettleNotice::has_id() const {
  return _has_bit(0);
}
inline void CMessageG2SSettleNotice::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::id() const {
  return id_;
}
inline void CMessageG2SSettleNotice::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint32 campid = 2;
inline bool CMessageG2SSettleNotice::has_campid() const {
  return _has_bit(1);
}
inline void CMessageG2SSettleNotice::clear_campid() {
  campid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::campid() const {
  return campid_;
}
inline void CMessageG2SSettleNotice::set_campid(::google::protobuf::uint32 value) {
  _set_bit(1);
  campid_ = value;
}

// optional uint32 camprankid = 3;
inline bool CMessageG2SSettleNotice::has_camprankid() const {
  return _has_bit(2);
}
inline void CMessageG2SSettleNotice::clear_camprankid() {
  camprankid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::camprankid() const {
  return camprankid_;
}
inline void CMessageG2SSettleNotice::set_camprankid(::google::protobuf::uint32 value) {
  _set_bit(2);
  camprankid_ = value;
}

// optional uint32 growing = 4;
inline bool CMessageG2SSettleNotice::has_growing() const {
  return _has_bit(3);
}
inline void CMessageG2SSettleNotice::clear_growing() {
  growing_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::growing() const {
  return growing_;
}
inline void CMessageG2SSettleNotice::set_growing(::google::protobuf::uint32 value) {
  _set_bit(3);
  growing_ = value;
}

// optional uint32 level = 5;
inline bool CMessageG2SSettleNotice::has_level() const {
  return _has_bit(4);
}
inline void CMessageG2SSettleNotice::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::level() const {
  return level_;
}
inline void CMessageG2SSettleNotice::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint32 handindawnum = 6;
inline bool CMessageG2SSettleNotice::has_handindawnum() const {
  return _has_bit(5);
}
inline void CMessageG2SSettleNotice::clear_handindawnum() {
  handindawnum_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::handindawnum() const {
  return handindawnum_;
}
inline void CMessageG2SSettleNotice::set_handindawnum(::google::protobuf::uint32 value) {
  _set_bit(5);
  handindawnum_ = value;
}

// optional uint32 settlephase = 7;
inline bool CMessageG2SSettleNotice::has_settlephase() const {
  return _has_bit(6);
}
inline void CMessageG2SSettleNotice::clear_settlephase() {
  settlephase_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::settlephase() const {
  return settlephase_;
}
inline void CMessageG2SSettleNotice::set_settlephase(::google::protobuf::uint32 value) {
  _set_bit(6);
  settlephase_ = value;
}

// optional uint32 settlefinish = 8;
inline bool CMessageG2SSettleNotice::has_settlefinish() const {
  return _has_bit(7);
}
inline void CMessageG2SSettleNotice::clear_settlefinish() {
  settlefinish_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::settlefinish() const {
  return settlefinish_;
}
inline void CMessageG2SSettleNotice::set_settlefinish(::google::protobuf::uint32 value) {
  _set_bit(7);
  settlefinish_ = value;
}

// optional uint32 noticeid = 9;
inline bool CMessageG2SSettleNotice::has_noticeid() const {
  return _has_bit(8);
}
inline void CMessageG2SSettleNotice::clear_noticeid() {
  noticeid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::noticeid() const {
  return noticeid_;
}
inline void CMessageG2SSettleNotice::set_noticeid(::google::protobuf::uint32 value) {
  _set_bit(8);
  noticeid_ = value;
}

// optional uint32 noticeparam1 = 10;
inline bool CMessageG2SSettleNotice::has_noticeparam1() const {
  return _has_bit(9);
}
inline void CMessageG2SSettleNotice::clear_noticeparam1() {
  noticeparam1_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::noticeparam1() const {
  return noticeparam1_;
}
inline void CMessageG2SSettleNotice::set_noticeparam1(::google::protobuf::uint32 value) {
  _set_bit(9);
  noticeparam1_ = value;
}

// optional uint32 noticeparam2 = 11;
inline bool CMessageG2SSettleNotice::has_noticeparam2() const {
  return _has_bit(10);
}
inline void CMessageG2SSettleNotice::clear_noticeparam2() {
  noticeparam2_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::noticeparam2() const {
  return noticeparam2_;
}
inline void CMessageG2SSettleNotice::set_noticeparam2(::google::protobuf::uint32 value) {
  _set_bit(10);
  noticeparam2_ = value;
}

// optional uint32 noticeparam3 = 12;
inline bool CMessageG2SSettleNotice::has_noticeparam3() const {
  return _has_bit(11);
}
inline void CMessageG2SSettleNotice::clear_noticeparam3() {
  noticeparam3_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::noticeparam3() const {
  return noticeparam3_;
}
inline void CMessageG2SSettleNotice::set_noticeparam3(::google::protobuf::uint32 value) {
  _set_bit(11);
  noticeparam3_ = value;
}

// optional uint32 encourage = 13;
inline bool CMessageG2SSettleNotice::has_encourage() const {
  return _has_bit(12);
}
inline void CMessageG2SSettleNotice::clear_encourage() {
  encourage_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessageG2SSettleNotice::encourage() const {
  return encourage_;
}
inline void CMessageG2SSettleNotice::set_encourage(::google::protobuf::uint32 value) {
  _set_bit(12);
  encourage_ = value;
}

// -------------------------------------------------------------------

// CMessageInternalTimeOut

// optional uint32 TimerID = 1;
inline bool CMessageInternalTimeOut::has_timerid() const {
  return _has_bit(0);
}
inline void CMessageInternalTimeOut::clear_timerid() {
  timerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageInternalTimeOut::timerid() const {
  return timerid_;
}
inline void CMessageInternalTimeOut::set_timerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  timerid_ = value;
}

// optional uint32 OwnerID = 2;
inline bool CMessageInternalTimeOut::has_ownerid() const {
  return _has_bit(1);
}
inline void CMessageInternalTimeOut::clear_ownerid() {
  ownerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInternalTimeOut::ownerid() const {
  return ownerid_;
}
inline void CMessageInternalTimeOut::set_ownerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  ownerid_ = value;
}

// optional uint32 TimerMark = 3;
inline bool CMessageInternalTimeOut::has_timermark() const {
  return _has_bit(2);
}
inline void CMessageInternalTimeOut::clear_timermark() {
  timermark_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageInternalTimeOut::timermark() const {
  return timermark_;
}
inline void CMessageInternalTimeOut::set_timermark(::google::protobuf::uint32 value) {
  _set_bit(2);
  timermark_ = value;
}

// optional uint32 MillSeconds = 4;
inline bool CMessageInternalTimeOut::has_millseconds() const {
  return _has_bit(3);
}
inline void CMessageInternalTimeOut::clear_millseconds() {
  millseconds_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageInternalTimeOut::millseconds() const {
  return millseconds_;
}
inline void CMessageInternalTimeOut::set_millseconds(::google::protobuf::uint32 value) {
  _set_bit(3);
  millseconds_ = value;
}

// optional uint32 CalledNum = 5;
inline bool CMessageInternalTimeOut::has_callednum() const {
  return _has_bit(4);
}
inline void CMessageInternalTimeOut::clear_callednum() {
  callednum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageInternalTimeOut::callednum() const {
  return callednum_;
}
inline void CMessageInternalTimeOut::set_callednum(::google::protobuf::uint32 value) {
  _set_bit(4);
  callednum_ = value;
}

// repeated uint32 OtherInfo = 6;
inline int CMessageInternalTimeOut::otherinfo_size() const {
  return otherinfo_.size();
}
inline void CMessageInternalTimeOut::clear_otherinfo() {
  otherinfo_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageInternalTimeOut::otherinfo() const {
  return otherinfo_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageInternalTimeOut::mutable_otherinfo() {
  return &otherinfo_;
}
inline ::google::protobuf::uint32 CMessageInternalTimeOut::otherinfo(int index) const {
  return otherinfo_.Get(index);
}
inline void CMessageInternalTimeOut::set_otherinfo(int index, ::google::protobuf::uint32 value) {
  otherinfo_.Set(index, value);
}
inline void CMessageInternalTimeOut::add_otherinfo(::google::protobuf::uint32 value) {
  otherinfo_.Add(value);
}

// -------------------------------------------------------------------

// CMessageCountryInfo

// optional uint32 Length = 1;
inline bool CMessageCountryInfo::has_length() const {
  return _has_bit(0);
}
inline void CMessageCountryInfo::clear_length() {
  length_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCountryInfo::length() const {
  return length_;
}
inline void CMessageCountryInfo::set_length(::google::protobuf::uint32 value) {
  _set_bit(0);
  length_ = value;
}

// optional bytes CountryList = 2;
inline bool CMessageCountryInfo::has_countrylist() const {
  return _has_bit(1);
}
inline void CMessageCountryInfo::clear_countrylist() {
  if (countrylist_ != &_default_countrylist_) {
    countrylist_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCountryInfo::countrylist() const {
  return *countrylist_;
}
inline void CMessageCountryInfo::set_countrylist(const ::std::string& value) {
  _set_bit(1);
  if (countrylist_ == &_default_countrylist_) {
    countrylist_ = new ::std::string;
  }
  countrylist_->assign(value);
}
inline void CMessageCountryInfo::set_countrylist(const char* value) {
  _set_bit(1);
  if (countrylist_ == &_default_countrylist_) {
    countrylist_ = new ::std::string;
  }
  countrylist_->assign(value);
}
inline void CMessageCountryInfo::set_countrylist(const void* value, size_t size) {
  _set_bit(1);
  if (countrylist_ == &_default_countrylist_) {
    countrylist_ = new ::std::string;
  }
  countrylist_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCountryInfo::mutable_countrylist() {
  _set_bit(1);
  if (countrylist_ == &_default_countrylist_) {
    countrylist_ = new ::std::string;
  }
  return countrylist_;
}

// -------------------------------------------------------------------

// CMessageRedirectGErrorCode

// optional uint32 CharID = 1;
inline bool CMessageRedirectGErrorCode::has_charid() const {
  return _has_bit(0);
}
inline void CMessageRedirectGErrorCode::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRedirectGErrorCode::charid() const {
  return charid_;
}
inline void CMessageRedirectGErrorCode::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional int32 ErrorCode = 2;
inline bool CMessageRedirectGErrorCode::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageRedirectGErrorCode::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageRedirectGErrorCode::errorcode() const {
  return errorcode_;
}
inline void CMessageRedirectGErrorCode::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// optional uint32 LineID = 3;
inline bool CMessageRedirectGErrorCode::has_lineid() const {
  return _has_bit(2);
}
inline void CMessageRedirectGErrorCode::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRedirectGErrorCode::lineid() const {
  return lineid_;
}
inline void CMessageRedirectGErrorCode::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(2);
  lineid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessageRedirectGErrorCode::has_mapid() const {
  return _has_bit(3);
}
inline void CMessageRedirectGErrorCode::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRedirectGErrorCode::mapid() const {
  return mapid_;
}
inline void CMessageRedirectGErrorCode::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageRedirectSErrorCode

// optional uint32 CharID = 1;
inline bool CMessageRedirectSErrorCode::has_charid() const {
  return _has_bit(0);
}
inline void CMessageRedirectSErrorCode::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRedirectSErrorCode::charid() const {
  return charid_;
}
inline void CMessageRedirectSErrorCode::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional int32 ErrorCode = 2;
inline bool CMessageRedirectSErrorCode::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageRedirectSErrorCode::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageRedirectSErrorCode::errorcode() const {
  return errorcode_;
}
inline void CMessageRedirectSErrorCode::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// optional uint32 LineID = 3;
inline bool CMessageRedirectSErrorCode::has_lineid() const {
  return _has_bit(2);
}
inline void CMessageRedirectSErrorCode::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRedirectSErrorCode::lineid() const {
  return lineid_;
}
inline void CMessageRedirectSErrorCode::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(2);
  lineid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessageRedirectSErrorCode::has_mapid() const {
  return _has_bit(3);
}
inline void CMessageRedirectSErrorCode::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRedirectSErrorCode::mapid() const {
  return mapid_;
}
inline void CMessageRedirectSErrorCode::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerRedirectEnterMapResponse

// optional uint32 CommHandle = 1;
inline bool CMessagePlayerRedirectEnterMapResponse::has_commhandle() const {
  return _has_bit(0);
}
inline void CMessagePlayerRedirectEnterMapResponse::clear_commhandle() {
  commhandle_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectEnterMapResponse::commhandle() const {
  return commhandle_;
}
inline void CMessagePlayerRedirectEnterMapResponse::set_commhandle(::google::protobuf::uint32 value) {
  _set_bit(0);
  commhandle_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessagePlayerRedirectEnterMapResponse::has_charid() const {
  return _has_bit(1);
}
inline void CMessagePlayerRedirectEnterMapResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectEnterMapResponse::charid() const {
  return charid_;
}
inline void CMessagePlayerRedirectEnterMapResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 LineID = 3;
inline bool CMessagePlayerRedirectEnterMapResponse::has_lineid() const {
  return _has_bit(2);
}
inline void CMessagePlayerRedirectEnterMapResponse::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectEnterMapResponse::lineid() const {
  return lineid_;
}
inline void CMessagePlayerRedirectEnterMapResponse::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(2);
  lineid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessagePlayerRedirectEnterMapResponse::has_mapid() const {
  return _has_bit(3);
}
inline void CMessagePlayerRedirectEnterMapResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectEnterMapResponse::mapid() const {
  return mapid_;
}
inline void CMessagePlayerRedirectEnterMapResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// optional uint32 PosX = 5;
inline bool CMessagePlayerRedirectEnterMapResponse::has_posx() const {
  return _has_bit(4);
}
inline void CMessagePlayerRedirectEnterMapResponse::clear_posx() {
  posx_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectEnterMapResponse::posx() const {
  return posx_;
}
inline void CMessagePlayerRedirectEnterMapResponse::set_posx(::google::protobuf::uint32 value) {
  _set_bit(4);
  posx_ = value;
}

// optional uint32 PosY = 6;
inline bool CMessagePlayerRedirectEnterMapResponse::has_posy() const {
  return _has_bit(5);
}
inline void CMessagePlayerRedirectEnterMapResponse::clear_posy() {
  posy_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectEnterMapResponse::posy() const {
  return posy_;
}
inline void CMessagePlayerRedirectEnterMapResponse::set_posy(::google::protobuf::uint32 value) {
  _set_bit(5);
  posy_ = value;
}

// optional string MapName = 7;
inline bool CMessagePlayerRedirectEnterMapResponse::has_mapname() const {
  return _has_bit(6);
}
inline void CMessagePlayerRedirectEnterMapResponse::clear_mapname() {
  if (mapname_ != &_default_mapname_) {
    mapname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessagePlayerRedirectEnterMapResponse::mapname() const {
  return *mapname_;
}
inline void CMessagePlayerRedirectEnterMapResponse::set_mapname(const ::std::string& value) {
  _set_bit(6);
  if (mapname_ == &_default_mapname_) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
}
inline void CMessagePlayerRedirectEnterMapResponse::set_mapname(const char* value) {
  _set_bit(6);
  if (mapname_ == &_default_mapname_) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(value);
}
inline void CMessagePlayerRedirectEnterMapResponse::set_mapname(const char* value, size_t size) {
  _set_bit(6);
  if (mapname_ == &_default_mapname_) {
    mapname_ = new ::std::string;
  }
  mapname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectEnterMapResponse::mutable_mapname() {
  _set_bit(6);
  if (mapname_ == &_default_mapname_) {
    mapname_ = new ::std::string;
  }
  return mapname_;
}

// -------------------------------------------------------------------

// CMessageGateInfoNotice

// optional string Address = 1;
inline bool CMessageGateInfoNotice::has_address() const {
  return _has_bit(0);
}
inline void CMessageGateInfoNotice::clear_address() {
  if (address_ != &_default_address_) {
    address_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageGateInfoNotice::address() const {
  return *address_;
}
inline void CMessageGateInfoNotice::set_address(const ::std::string& value) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageGateInfoNotice::set_address(const char* value) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageGateInfoNotice::set_address(const char* value, size_t size) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGateInfoNotice::mutable_address() {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  return address_;
}

// optional string HostName = 2;
inline bool CMessageGateInfoNotice::has_hostname() const {
  return _has_bit(1);
}
inline void CMessageGateInfoNotice::clear_hostname() {
  if (hostname_ != &_default_hostname_) {
    hostname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageGateInfoNotice::hostname() const {
  return *hostname_;
}
inline void CMessageGateInfoNotice::set_hostname(const ::std::string& value) {
  _set_bit(1);
  if (hostname_ == &_default_hostname_) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(value);
}
inline void CMessageGateInfoNotice::set_hostname(const char* value) {
  _set_bit(1);
  if (hostname_ == &_default_hostname_) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(value);
}
inline void CMessageGateInfoNotice::set_hostname(const char* value, size_t size) {
  _set_bit(1);
  if (hostname_ == &_default_hostname_) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGateInfoNotice::mutable_hostname() {
  _set_bit(1);
  if (hostname_ == &_default_hostname_) {
    hostname_ = new ::std::string;
  }
  return hostname_;
}

// optional uint32 GateVersion = 3;
inline bool CMessageGateInfoNotice::has_gateversion() const {
  return _has_bit(2);
}
inline void CMessageGateInfoNotice::clear_gateversion() {
  gateversion_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGateInfoNotice::gateversion() const {
  return gateversion_;
}
inline void CMessageGateInfoNotice::set_gateversion(::google::protobuf::uint32 value) {
  _set_bit(2);
  gateversion_ = value;
}

// optional uint32 WorldID = 4;
inline bool CMessageGateInfoNotice::has_worldid() const {
  return _has_bit(3);
}
inline void CMessageGateInfoNotice::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGateInfoNotice::worldid() const {
  return worldid_;
}
inline void CMessageGateInfoNotice::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(3);
  worldid_ = value;
}

// optional string GateCode = 5;
inline bool CMessageGateInfoNotice::has_gatecode() const {
  return _has_bit(4);
}
inline void CMessageGateInfoNotice::clear_gatecode() {
  if (gatecode_ != &_default_gatecode_) {
    gatecode_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageGateInfoNotice::gatecode() const {
  return *gatecode_;
}
inline void CMessageGateInfoNotice::set_gatecode(const ::std::string& value) {
  _set_bit(4);
  if (gatecode_ == &_default_gatecode_) {
    gatecode_ = new ::std::string;
  }
  gatecode_->assign(value);
}
inline void CMessageGateInfoNotice::set_gatecode(const char* value) {
  _set_bit(4);
  if (gatecode_ == &_default_gatecode_) {
    gatecode_ = new ::std::string;
  }
  gatecode_->assign(value);
}
inline void CMessageGateInfoNotice::set_gatecode(const char* value, size_t size) {
  _set_bit(4);
  if (gatecode_ == &_default_gatecode_) {
    gatecode_ = new ::std::string;
  }
  gatecode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGateInfoNotice::mutable_gatecode() {
  _set_bit(4);
  if (gatecode_ == &_default_gatecode_) {
    gatecode_ = new ::std::string;
  }
  return gatecode_;
}

// optional string GatePasswd = 6;
inline bool CMessageGateInfoNotice::has_gatepasswd() const {
  return _has_bit(5);
}
inline void CMessageGateInfoNotice::clear_gatepasswd() {
  if (gatepasswd_ != &_default_gatepasswd_) {
    gatepasswd_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageGateInfoNotice::gatepasswd() const {
  return *gatepasswd_;
}
inline void CMessageGateInfoNotice::set_gatepasswd(const ::std::string& value) {
  _set_bit(5);
  if (gatepasswd_ == &_default_gatepasswd_) {
    gatepasswd_ = new ::std::string;
  }
  gatepasswd_->assign(value);
}
inline void CMessageGateInfoNotice::set_gatepasswd(const char* value) {
  _set_bit(5);
  if (gatepasswd_ == &_default_gatepasswd_) {
    gatepasswd_ = new ::std::string;
  }
  gatepasswd_->assign(value);
}
inline void CMessageGateInfoNotice::set_gatepasswd(const char* value, size_t size) {
  _set_bit(5);
  if (gatepasswd_ == &_default_gatepasswd_) {
    gatepasswd_ = new ::std::string;
  }
  gatepasswd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGateInfoNotice::mutable_gatepasswd() {
  _set_bit(5);
  if (gatepasswd_ == &_default_gatepasswd_) {
    gatepasswd_ = new ::std::string;
  }
  return gatepasswd_;
}

// optional string GateMac = 7;
inline bool CMessageGateInfoNotice::has_gatemac() const {
  return _has_bit(6);
}
inline void CMessageGateInfoNotice::clear_gatemac() {
  if (gatemac_ != &_default_gatemac_) {
    gatemac_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageGateInfoNotice::gatemac() const {
  return *gatemac_;
}
inline void CMessageGateInfoNotice::set_gatemac(const ::std::string& value) {
  _set_bit(6);
  if (gatemac_ == &_default_gatemac_) {
    gatemac_ = new ::std::string;
  }
  gatemac_->assign(value);
}
inline void CMessageGateInfoNotice::set_gatemac(const char* value) {
  _set_bit(6);
  if (gatemac_ == &_default_gatemac_) {
    gatemac_ = new ::std::string;
  }
  gatemac_->assign(value);
}
inline void CMessageGateInfoNotice::set_gatemac(const char* value, size_t size) {
  _set_bit(6);
  if (gatemac_ == &_default_gatemac_) {
    gatemac_ = new ::std::string;
  }
  gatemac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGateInfoNotice::mutable_gatemac() {
  _set_bit(6);
  if (gatemac_ == &_default_gatemac_) {
    gatemac_ = new ::std::string;
  }
  return gatemac_;
}

// optional uint32 GameID = 8;
inline bool CMessageGateInfoNotice::has_gameid() const {
  return _has_bit(7);
}
inline void CMessageGateInfoNotice::clear_gameid() {
  gameid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageGateInfoNotice::gameid() const {
  return gameid_;
}
inline void CMessageGateInfoNotice::set_gameid(::google::protobuf::uint32 value) {
  _set_bit(7);
  gameid_ = value;
}

// -------------------------------------------------------------------

// CMessageGateInfoResponse

// optional int32 ErrorCode = 1;
inline bool CMessageGateInfoResponse::has_errorcode() const {
  return _has_bit(0);
}
inline void CMessageGateInfoResponse::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageGateInfoResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageGateInfoResponse::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(0);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerEnterGateNotice

// optional uint32 CommHandle = 1;
inline bool CMessagePlayerEnterGateNotice::has_commhandle() const {
  return _has_bit(0);
}
inline void CMessagePlayerEnterGateNotice::clear_commhandle() {
  commhandle_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::commhandle() const {
  return commhandle_;
}
inline void CMessagePlayerEnterGateNotice::set_commhandle(::google::protobuf::uint32 value) {
  _set_bit(0);
  commhandle_ = value;
}

// optional uint32 LoginToken = 2;
inline bool CMessagePlayerEnterGateNotice::has_logintoken() const {
  return _has_bit(1);
}
inline void CMessagePlayerEnterGateNotice::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::logintoken() const {
  return logintoken_;
}
inline void CMessagePlayerEnterGateNotice::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(1);
  logintoken_ = value;
}

// optional uint32 AccountID = 3;
inline bool CMessagePlayerEnterGateNotice::has_accountid() const {
  return _has_bit(2);
}
inline void CMessagePlayerEnterGateNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::accountid() const {
  return accountid_;
}
inline void CMessagePlayerEnterGateNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(2);
  accountid_ = value;
}

// optional uint32 AdultFlag = 4;
inline bool CMessagePlayerEnterGateNotice::has_adultflag() const {
  return _has_bit(3);
}
inline void CMessagePlayerEnterGateNotice::clear_adultflag() {
  adultflag_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::adultflag() const {
  return adultflag_;
}
inline void CMessagePlayerEnterGateNotice::set_adultflag(::google::protobuf::uint32 value) {
  _set_bit(3);
  adultflag_ = value;
}

// optional uint32 UserFlag = 5;
inline bool CMessagePlayerEnterGateNotice::has_userflag() const {
  return _has_bit(4);
}
inline void CMessagePlayerEnterGateNotice::clear_userflag() {
  userflag_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::userflag() const {
  return userflag_;
}
inline void CMessagePlayerEnterGateNotice::set_userflag(::google::protobuf::uint32 value) {
  _set_bit(4);
  userflag_ = value;
}

// optional uint32 UserClass = 6;
inline bool CMessagePlayerEnterGateNotice::has_userclass() const {
  return _has_bit(5);
}
inline void CMessagePlayerEnterGateNotice::clear_userclass() {
  userclass_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::userclass() const {
  return userclass_;
}
inline void CMessagePlayerEnterGateNotice::set_userclass(::google::protobuf::uint32 value) {
  _set_bit(5);
  userclass_ = value;
}

// optional uint32 UserPoint = 7;
inline bool CMessagePlayerEnterGateNotice::has_userpoint() const {
  return _has_bit(6);
}
inline void CMessagePlayerEnterGateNotice::clear_userpoint() {
  userpoint_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::userpoint() const {
  return userpoint_;
}
inline void CMessagePlayerEnterGateNotice::set_userpoint(::google::protobuf::uint32 value) {
  _set_bit(6);
  userpoint_ = value;
}

// optional uint32 WorldPlayerLimit = 8;
inline bool CMessagePlayerEnterGateNotice::has_worldplayerlimit() const {
  return _has_bit(7);
}
inline void CMessagePlayerEnterGateNotice::clear_worldplayerlimit() {
  worldplayerlimit_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::worldplayerlimit() const {
  return worldplayerlimit_;
}
inline void CMessagePlayerEnterGateNotice::set_worldplayerlimit(::google::protobuf::uint32 value) {
  _set_bit(7);
  worldplayerlimit_ = value;
}

// optional uint32 UserStatus = 9;
inline bool CMessagePlayerEnterGateNotice::has_userstatus() const {
  return _has_bit(8);
}
inline void CMessagePlayerEnterGateNotice::clear_userstatus() {
  userstatus_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::userstatus() const {
  return userstatus_;
}
inline void CMessagePlayerEnterGateNotice::set_userstatus(::google::protobuf::uint32 value) {
  _set_bit(8);
  userstatus_ = value;
}

// optional uint32 GameID = 10;
inline bool CMessagePlayerEnterGateNotice::has_gameid() const {
  return _has_bit(9);
}
inline void CMessagePlayerEnterGateNotice::clear_gameid() {
  gameid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateNotice::gameid() const {
  return gameid_;
}
inline void CMessagePlayerEnterGateNotice::set_gameid(::google::protobuf::uint32 value) {
  _set_bit(9);
  gameid_ = value;
}

// optional int32 cpuid = 11;
inline bool CMessagePlayerEnterGateNotice::has_cpuid() const {
  return _has_bit(10);
}
inline void CMessagePlayerEnterGateNotice::clear_cpuid() {
  cpuid_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 CMessagePlayerEnterGateNotice::cpuid() const {
  return cpuid_;
}
inline void CMessagePlayerEnterGateNotice::set_cpuid(::google::protobuf::int32 value) {
  _set_bit(10);
  cpuid_ = value;
}

// optional int32 diskid = 12;
inline bool CMessagePlayerEnterGateNotice::has_diskid() const {
  return _has_bit(11);
}
inline void CMessagePlayerEnterGateNotice::clear_diskid() {
  diskid_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 CMessagePlayerEnterGateNotice::diskid() const {
  return diskid_;
}
inline void CMessagePlayerEnterGateNotice::set_diskid(::google::protobuf::int32 value) {
  _set_bit(11);
  diskid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerEnterGateResponse

// optional uint32 CommHandle = 1;
inline bool CMessagePlayerEnterGateResponse::has_commhandle() const {
  return _has_bit(0);
}
inline void CMessagePlayerEnterGateResponse::clear_commhandle() {
  commhandle_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateResponse::commhandle() const {
  return commhandle_;
}
inline void CMessagePlayerEnterGateResponse::set_commhandle(::google::protobuf::uint32 value) {
  _set_bit(0);
  commhandle_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessagePlayerEnterGateResponse::has_accountid() const {
  return _has_bit(1);
}
inline void CMessagePlayerEnterGateResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateResponse::accountid() const {
  return accountid_;
}
inline void CMessagePlayerEnterGateResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 LoginToken = 3;
inline bool CMessagePlayerEnterGateResponse::has_logintoken() const {
  return _has_bit(2);
}
inline void CMessagePlayerEnterGateResponse::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateResponse::logintoken() const {
  return logintoken_;
}
inline void CMessagePlayerEnterGateResponse::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(2);
  logintoken_ = value;
}

// optional int32 ErrorCode = 4;
inline bool CMessagePlayerEnterGateResponse::has_errorcode() const {
  return _has_bit(3);
}
inline void CMessagePlayerEnterGateResponse::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessagePlayerEnterGateResponse::errorcode() const {
  return errorcode_;
}
inline void CMessagePlayerEnterGateResponse::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(3);
  errorcode_ = value;
}

// optional int32 WorldID = 5;
inline bool CMessagePlayerEnterGateResponse::has_worldid() const {
  return _has_bit(4);
}
inline void CMessagePlayerEnterGateResponse::clear_worldid() {
  worldid_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessagePlayerEnterGateResponse::worldid() const {
  return worldid_;
}
inline void CMessagePlayerEnterGateResponse::set_worldid(::google::protobuf::int32 value) {
  _set_bit(4);
  worldid_ = value;
}

// optional uint32 OtherClient = 6;
inline bool CMessagePlayerEnterGateResponse::has_otherclient() const {
  return _has_bit(5);
}
inline void CMessagePlayerEnterGateResponse::clear_otherclient() {
  otherclient_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterGateResponse::otherclient() const {
  return otherclient_;
}
inline void CMessagePlayerEnterGateResponse::set_otherclient(::google::protobuf::uint32 value) {
  _set_bit(5);
  otherclient_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerLeaveGateNotice

// optional uint32 AccountID = 1;
inline bool CMessagePlayerLeaveGateNotice::has_accountid() const {
  return _has_bit(0);
}
inline void CMessagePlayerLeaveGateNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveGateNotice::accountid() const {
  return accountid_;
}
inline void CMessagePlayerLeaveGateNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 Reason = 2;
inline bool CMessagePlayerLeaveGateNotice::has_reason() const {
  return _has_bit(1);
}
inline void CMessagePlayerLeaveGateNotice::clear_reason() {
  reason_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveGateNotice::reason() const {
  return reason_;
}
inline void CMessagePlayerLeaveGateNotice::set_reason(::google::protobuf::uint32 value) {
  _set_bit(1);
  reason_ = value;
}

// -------------------------------------------------------------------

// CMessageServerInfoNotice

// optional string Address = 1;
inline bool CMessageServerInfoNotice::has_address() const {
  return _has_bit(0);
}
inline void CMessageServerInfoNotice::clear_address() {
  if (address_ != &_default_address_) {
    address_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageServerInfoNotice::address() const {
  return *address_;
}
inline void CMessageServerInfoNotice::set_address(const ::std::string& value) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageServerInfoNotice::set_address(const char* value) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessageServerInfoNotice::set_address(const char* value, size_t size) {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageServerInfoNotice::mutable_address() {
  _set_bit(0);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  return address_;
}

// optional string ServerName = 2;
inline bool CMessageServerInfoNotice::has_servername() const {
  return _has_bit(1);
}
inline void CMessageServerInfoNotice::clear_servername() {
  if (servername_ != &_default_servername_) {
    servername_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageServerInfoNotice::servername() const {
  return *servername_;
}
inline void CMessageServerInfoNotice::set_servername(const ::std::string& value) {
  _set_bit(1);
  if (servername_ == &_default_servername_) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
}
inline void CMessageServerInfoNotice::set_servername(const char* value) {
  _set_bit(1);
  if (servername_ == &_default_servername_) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
}
inline void CMessageServerInfoNotice::set_servername(const char* value, size_t size) {
  _set_bit(1);
  if (servername_ == &_default_servername_) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageServerInfoNotice::mutable_servername() {
  _set_bit(1);
  if (servername_ == &_default_servername_) {
    servername_ = new ::std::string;
  }
  return servername_;
}

// optional uint32 ServerVersion = 3;
inline bool CMessageServerInfoNotice::has_serverversion() const {
  return _has_bit(2);
}
inline void CMessageServerInfoNotice::clear_serverversion() {
  serverversion_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageServerInfoNotice::serverversion() const {
  return serverversion_;
}
inline void CMessageServerInfoNotice::set_serverversion(::google::protobuf::uint32 value) {
  _set_bit(2);
  serverversion_ = value;
}

// optional uint32 TemplateVersion = 4;
inline bool CMessageServerInfoNotice::has_templateversion() const {
  return _has_bit(3);
}
inline void CMessageServerInfoNotice::clear_templateversion() {
  templateversion_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageServerInfoNotice::templateversion() const {
  return templateversion_;
}
inline void CMessageServerInfoNotice::set_templateversion(::google::protobuf::uint32 value) {
  _set_bit(3);
  templateversion_ = value;
}

// optional uint32 TaskVersion = 5;
inline bool CMessageServerInfoNotice::has_taskversion() const {
  return _has_bit(4);
}
inline void CMessageServerInfoNotice::clear_taskversion() {
  taskversion_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageServerInfoNotice::taskversion() const {
  return taskversion_;
}
inline void CMessageServerInfoNotice::set_taskversion(::google::protobuf::uint32 value) {
  _set_bit(4);
  taskversion_ = value;
}

// optional uint32 ServerID = 6;
inline bool CMessageServerInfoNotice::has_serverid() const {
  return _has_bit(5);
}
inline void CMessageServerInfoNotice::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageServerInfoNotice::serverid() const {
  return serverid_;
}
inline void CMessageServerInfoNotice::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(5);
  serverid_ = value;
}

// optional uint32 LaunchMode = 7;
inline bool CMessageServerInfoNotice::has_launchmode() const {
  return _has_bit(6);
}
inline void CMessageServerInfoNotice::clear_launchmode() {
  launchmode_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageServerInfoNotice::launchmode() const {
  return launchmode_;
}
inline void CMessageServerInfoNotice::set_launchmode(::google::protobuf::uint32 value) {
  _set_bit(6);
  launchmode_ = value;
}

// optional uint32 PlayerCapacity = 8;
inline bool CMessageServerInfoNotice::has_playercapacity() const {
  return _has_bit(7);
}
inline void CMessageServerInfoNotice::clear_playercapacity() {
  playercapacity_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageServerInfoNotice::playercapacity() const {
  return playercapacity_;
}
inline void CMessageServerInfoNotice::set_playercapacity(::google::protobuf::uint32 value) {
  _set_bit(7);
  playercapacity_ = value;
}

// -------------------------------------------------------------------

// CMessageServerInfoResponse

// optional uint32 WorldID = 1;
inline bool CMessageServerInfoResponse::has_worldid() const {
  return _has_bit(0);
}
inline void CMessageServerInfoResponse::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageServerInfoResponse::worldid() const {
  return worldid_;
}
inline void CMessageServerInfoResponse::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 LineID = 2;
inline bool CMessageServerInfoResponse::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageServerInfoResponse::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageServerInfoResponse::lineid() const {
  return lineid_;
}
inline void CMessageServerInfoResponse::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 GameID = 3;
inline bool CMessageServerInfoResponse::has_gameid() const {
  return _has_bit(2);
}
inline void CMessageServerInfoResponse::clear_gameid() {
  gameid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageServerInfoResponse::gameid() const {
  return gameid_;
}
inline void CMessageServerInfoResponse::set_gameid(::google::protobuf::uint32 value) {
  _set_bit(2);
  gameid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerEnterMapNotice

// optional uint32 LoginToken = 1;
inline bool CMessagePlayerEnterMapNotice::has_logintoken() const {
  return _has_bit(0);
}
inline void CMessagePlayerEnterMapNotice::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::logintoken() const {
  return logintoken_;
}
inline void CMessagePlayerEnterMapNotice::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(0);
  logintoken_ = value;
}

// optional uint32 LineID = 2;
inline bool CMessagePlayerEnterMapNotice::has_lineid() const {
  return _has_bit(1);
}
inline void CMessagePlayerEnterMapNotice::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::lineid() const {
  return lineid_;
}
inline void CMessagePlayerEnterMapNotice::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessagePlayerEnterMapNotice::has_mapid() const {
  return _has_bit(2);
}
inline void CMessagePlayerEnterMapNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::mapid() const {
  return mapid_;
}
inline void CMessagePlayerEnterMapNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 PosX = 4;
inline bool CMessagePlayerEnterMapNotice::has_posx() const {
  return _has_bit(3);
}
inline void CMessagePlayerEnterMapNotice::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::posx() const {
  return posx_;
}
inline void CMessagePlayerEnterMapNotice::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool CMessagePlayerEnterMapNotice::has_posy() const {
  return _has_bit(4);
}
inline void CMessagePlayerEnterMapNotice::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::posy() const {
  return posy_;
}
inline void CMessagePlayerEnterMapNotice::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional uint32 CharID = 6;
inline bool CMessagePlayerEnterMapNotice::has_charid() const {
  return _has_bit(5);
}
inline void CMessagePlayerEnterMapNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::charid() const {
  return charid_;
}
inline void CMessagePlayerEnterMapNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(5);
  charid_ = value;
}

// optional uint32 AccountID = 7;
inline bool CMessagePlayerEnterMapNotice::has_accountid() const {
  return _has_bit(6);
}
inline void CMessagePlayerEnterMapNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::accountid() const {
  return accountid_;
}
inline void CMessagePlayerEnterMapNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(6);
  accountid_ = value;
}

// optional uint32 AdultFlag = 8;
inline bool CMessagePlayerEnterMapNotice::has_adultflag() const {
  return _has_bit(7);
}
inline void CMessagePlayerEnterMapNotice::clear_adultflag() {
  adultflag_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::adultflag() const {
  return adultflag_;
}
inline void CMessagePlayerEnterMapNotice::set_adultflag(::google::protobuf::uint32 value) {
  _set_bit(7);
  adultflag_ = value;
}

// optional int32 ValidSeconds = 9;
inline bool CMessagePlayerEnterMapNotice::has_validseconds() const {
  return _has_bit(8);
}
inline void CMessagePlayerEnterMapNotice::clear_validseconds() {
  validseconds_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 CMessagePlayerEnterMapNotice::validseconds() const {
  return validseconds_;
}
inline void CMessagePlayerEnterMapNotice::set_validseconds(::google::protobuf::int32 value) {
  _set_bit(8);
  validseconds_ = value;
}

// optional uint32 FamilyID = 10;
inline bool CMessagePlayerEnterMapNotice::has_familyid() const {
  return _has_bit(9);
}
inline void CMessagePlayerEnterMapNotice::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::familyid() const {
  return familyid_;
}
inline void CMessagePlayerEnterMapNotice::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(9);
  familyid_ = value;
}

// optional string FamilyName = 11;
inline bool CMessagePlayerEnterMapNotice::has_familyname() const {
  return _has_bit(10);
}
inline void CMessagePlayerEnterMapNotice::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& CMessagePlayerEnterMapNotice::familyname() const {
  return *familyname_;
}
inline void CMessagePlayerEnterMapNotice::set_familyname(const ::std::string& value) {
  _set_bit(10);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessagePlayerEnterMapNotice::set_familyname(const char* value) {
  _set_bit(10);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessagePlayerEnterMapNotice::set_familyname(const char* value, size_t size) {
  _set_bit(10);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerEnterMapNotice::mutable_familyname() {
  _set_bit(10);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// optional uint32 IsFamilyHeader = 12;
inline bool CMessagePlayerEnterMapNotice::has_isfamilyheader() const {
  return _has_bit(11);
}
inline void CMessagePlayerEnterMapNotice::clear_isfamilyheader() {
  isfamilyheader_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::isfamilyheader() const {
  return isfamilyheader_;
}
inline void CMessagePlayerEnterMapNotice::set_isfamilyheader(::google::protobuf::uint32 value) {
  _set_bit(11);
  isfamilyheader_ = value;
}

// optional uint32 IfHasApplies = 13;
inline bool CMessagePlayerEnterMapNotice::has_ifhasapplies() const {
  return _has_bit(12);
}
inline void CMessagePlayerEnterMapNotice::clear_ifhasapplies() {
  ifhasapplies_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::ifhasapplies() const {
  return ifhasapplies_;
}
inline void CMessagePlayerEnterMapNotice::set_ifhasapplies(::google::protobuf::uint32 value) {
  _set_bit(12);
  ifhasapplies_ = value;
}

// optional uint32 CorpsID = 14;
inline bool CMessagePlayerEnterMapNotice::has_corpsid() const {
  return _has_bit(13);
}
inline void CMessagePlayerEnterMapNotice::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::corpsid() const {
  return corpsid_;
}
inline void CMessagePlayerEnterMapNotice::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(13);
  corpsid_ = value;
}

// optional string CorpsName = 15;
inline bool CMessagePlayerEnterMapNotice::has_corpsname() const {
  return _has_bit(14);
}
inline void CMessagePlayerEnterMapNotice::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(14);
}
inline const ::std::string& CMessagePlayerEnterMapNotice::corpsname() const {
  return *corpsname_;
}
inline void CMessagePlayerEnterMapNotice::set_corpsname(const ::std::string& value) {
  _set_bit(14);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessagePlayerEnterMapNotice::set_corpsname(const char* value) {
  _set_bit(14);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessagePlayerEnterMapNotice::set_corpsname(const char* value, size_t size) {
  _set_bit(14);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerEnterMapNotice::mutable_corpsname() {
  _set_bit(14);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 IsCorperHeader = 16;
inline bool CMessagePlayerEnterMapNotice::has_iscorperheader() const {
  return _has_bit(15);
}
inline void CMessagePlayerEnterMapNotice::clear_iscorperheader() {
  iscorperheader_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::iscorperheader() const {
  return iscorperheader_;
}
inline void CMessagePlayerEnterMapNotice::set_iscorperheader(::google::protobuf::uint32 value) {
  _set_bit(15);
  iscorperheader_ = value;
}

// optional uint32 IfHasCorpsApply = 17;
inline bool CMessagePlayerEnterMapNotice::has_ifhascorpsapply() const {
  return _has_bit(16);
}
inline void CMessagePlayerEnterMapNotice::clear_ifhascorpsapply() {
  ifhascorpsapply_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::ifhascorpsapply() const {
  return ifhascorpsapply_;
}
inline void CMessagePlayerEnterMapNotice::set_ifhascorpsapply(::google::protobuf::uint32 value) {
  _set_bit(16);
  ifhascorpsapply_ = value;
}

// optional uint32 IfTracedPlayer = 18;
inline bool CMessagePlayerEnterMapNotice::has_iftracedplayer() const {
  return _has_bit(17);
}
inline void CMessagePlayerEnterMapNotice::clear_iftracedplayer() {
  iftracedplayer_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::iftracedplayer() const {
  return iftracedplayer_;
}
inline void CMessagePlayerEnterMapNotice::set_iftracedplayer(::google::protobuf::uint32 value) {
  _set_bit(17);
  iftracedplayer_ = value;
}

// optional uint64 Key = 19;
inline bool CMessagePlayerEnterMapNotice::has_key() const {
  return _has_bit(18);
}
inline void CMessagePlayerEnterMapNotice::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(18);
}
inline ::google::protobuf::uint64 CMessagePlayerEnterMapNotice::key() const {
  return key_;
}
inline void CMessagePlayerEnterMapNotice::set_key(::google::protobuf::uint64 value) {
  _set_bit(18);
  key_ = value;
}

// optional uint32 FamilyHeaderID = 20;
inline bool CMessagePlayerEnterMapNotice::has_familyheaderid() const {
  return _has_bit(19);
}
inline void CMessagePlayerEnterMapNotice::clear_familyheaderid() {
  familyheaderid_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::familyheaderid() const {
  return familyheaderid_;
}
inline void CMessagePlayerEnterMapNotice::set_familyheaderid(::google::protobuf::uint32 value) {
  _set_bit(19);
  familyheaderid_ = value;
}

// optional uint32 CorpsHeaderID = 21;
inline bool CMessagePlayerEnterMapNotice::has_corpsheaderid() const {
  return _has_bit(20);
}
inline void CMessagePlayerEnterMapNotice::clear_corpsheaderid() {
  corpsheaderid_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::corpsheaderid() const {
  return corpsheaderid_;
}
inline void CMessagePlayerEnterMapNotice::set_corpsheaderid(::google::protobuf::uint32 value) {
  _set_bit(20);
  corpsheaderid_ = value;
}

// optional uint32 FamilyPost = 22;
inline bool CMessagePlayerEnterMapNotice::has_familypost() const {
  return _has_bit(21);
}
inline void CMessagePlayerEnterMapNotice::clear_familypost() {
  familypost_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::familypost() const {
  return familypost_;
}
inline void CMessagePlayerEnterMapNotice::set_familypost(::google::protobuf::uint32 value) {
  _set_bit(21);
  familypost_ = value;
}

// optional uint32 CorpsPost = 23;
inline bool CMessagePlayerEnterMapNotice::has_corpspost() const {
  return _has_bit(22);
}
inline void CMessagePlayerEnterMapNotice::clear_corpspost() {
  corpspost_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::corpspost() const {
  return corpspost_;
}
inline void CMessagePlayerEnterMapNotice::set_corpspost(::google::protobuf::uint32 value) {
  _set_bit(22);
  corpspost_ = value;
}

// optional uint32 FamilyContribute = 24;
inline bool CMessagePlayerEnterMapNotice::has_familycontribute() const {
  return _has_bit(23);
}
inline void CMessagePlayerEnterMapNotice::clear_familycontribute() {
  familycontribute_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::familycontribute() const {
  return familycontribute_;
}
inline void CMessagePlayerEnterMapNotice::set_familycontribute(::google::protobuf::uint32 value) {
  _set_bit(23);
  familycontribute_ = value;
}

// optional uint32 CorpsContribute = 25;
inline bool CMessagePlayerEnterMapNotice::has_corpscontribute() const {
  return _has_bit(24);
}
inline void CMessagePlayerEnterMapNotice::clear_corpscontribute() {
  corpscontribute_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::corpscontribute() const {
  return corpscontribute_;
}
inline void CMessagePlayerEnterMapNotice::set_corpscontribute(::google::protobuf::uint32 value) {
  _set_bit(24);
  corpscontribute_ = value;
}

// optional uint32 FamilyMoney = 26;
inline bool CMessagePlayerEnterMapNotice::has_familymoney() const {
  return _has_bit(25);
}
inline void CMessagePlayerEnterMapNotice::clear_familymoney() {
  familymoney_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::familymoney() const {
  return familymoney_;
}
inline void CMessagePlayerEnterMapNotice::set_familymoney(::google::protobuf::uint32 value) {
  _set_bit(25);
  familymoney_ = value;
}

// optional uint32 CorpsMoney = 27;
inline bool CMessagePlayerEnterMapNotice::has_corpsmoney() const {
  return _has_bit(26);
}
inline void CMessagePlayerEnterMapNotice::clear_corpsmoney() {
  corpsmoney_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::corpsmoney() const {
  return corpsmoney_;
}
inline void CMessagePlayerEnterMapNotice::set_corpsmoney(::google::protobuf::uint32 value) {
  _set_bit(26);
  corpsmoney_ = value;
}

// optional uint32 UnionID = 28;
inline bool CMessagePlayerEnterMapNotice::has_unionid() const {
  return _has_bit(27);
}
inline void CMessagePlayerEnterMapNotice::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::unionid() const {
  return unionid_;
}
inline void CMessagePlayerEnterMapNotice::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(27);
  unionid_ = value;
}

// optional string UnionName = 29;
inline bool CMessagePlayerEnterMapNotice::has_unionname() const {
  return _has_bit(28);
}
inline void CMessagePlayerEnterMapNotice::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(28);
}
inline const ::std::string& CMessagePlayerEnterMapNotice::unionname() const {
  return *unionname_;
}
inline void CMessagePlayerEnterMapNotice::set_unionname(const ::std::string& value) {
  _set_bit(28);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessagePlayerEnterMapNotice::set_unionname(const char* value) {
  _set_bit(28);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessagePlayerEnterMapNotice::set_unionname(const char* value, size_t size) {
  _set_bit(28);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerEnterMapNotice::mutable_unionname() {
  _set_bit(28);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional uint32 HeadCorpsID = 30;
inline bool CMessagePlayerEnterMapNotice::has_headcorpsid() const {
  return _has_bit(29);
}
inline void CMessagePlayerEnterMapNotice::clear_headcorpsid() {
  headcorpsid_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::headcorpsid() const {
  return headcorpsid_;
}
inline void CMessagePlayerEnterMapNotice::set_headcorpsid(::google::protobuf::uint32 value) {
  _set_bit(29);
  headcorpsid_ = value;
}

// optional uint32 CountryID = 31;
inline bool CMessagePlayerEnterMapNotice::has_countryid() const {
  return _has_bit(30);
}
inline void CMessagePlayerEnterMapNotice::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::countryid() const {
  return countryid_;
}
inline void CMessagePlayerEnterMapNotice::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(30);
  countryid_ = value;
}

// optional uint32 OfficialID = 32;
inline bool CMessagePlayerEnterMapNotice::has_officialid() const {
  return _has_bit(31);
}
inline void CMessagePlayerEnterMapNotice::clear_officialid() {
  officialid_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::officialid() const {
  return officialid_;
}
inline void CMessagePlayerEnterMapNotice::set_officialid(::google::protobuf::uint32 value) {
  _set_bit(31);
  officialid_ = value;
}

// optional uint32 KingID = 33;
inline bool CMessagePlayerEnterMapNotice::has_kingid() const {
  return _has_bit(32);
}
inline void CMessagePlayerEnterMapNotice::clear_kingid() {
  kingid_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::kingid() const {
  return kingid_;
}
inline void CMessagePlayerEnterMapNotice::set_kingid(::google::protobuf::uint32 value) {
  _set_bit(32);
  kingid_ = value;
}

// optional string Password = 34;
inline bool CMessagePlayerEnterMapNotice::has_password() const {
  return _has_bit(33);
}
inline void CMessagePlayerEnterMapNotice::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(33);
}
inline const ::std::string& CMessagePlayerEnterMapNotice::password() const {
  return *password_;
}
inline void CMessagePlayerEnterMapNotice::set_password(const ::std::string& value) {
  _set_bit(33);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessagePlayerEnterMapNotice::set_password(const char* value) {
  _set_bit(33);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessagePlayerEnterMapNotice::set_password(const char* value, size_t size) {
  _set_bit(33);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerEnterMapNotice::mutable_password() {
  _set_bit(33);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// optional uint32 ProtectTime = 35;
inline bool CMessagePlayerEnterMapNotice::has_protecttime() const {
  return _has_bit(34);
}
inline void CMessagePlayerEnterMapNotice::clear_protecttime() {
  protecttime_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::protecttime() const {
  return protecttime_;
}
inline void CMessagePlayerEnterMapNotice::set_protecttime(::google::protobuf::uint32 value) {
  _set_bit(34);
  protecttime_ = value;
}

// optional uint32 PasswordStatus = 36;
inline bool CMessagePlayerEnterMapNotice::has_passwordstatus() const {
  return _has_bit(35);
}
inline void CMessagePlayerEnterMapNotice::clear_passwordstatus() {
  passwordstatus_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::passwordstatus() const {
  return passwordstatus_;
}
inline void CMessagePlayerEnterMapNotice::set_passwordstatus(::google::protobuf::uint32 value) {
  _set_bit(35);
  passwordstatus_ = value;
}

// optional uint32 ProtectTimeLength = 37;
inline bool CMessagePlayerEnterMapNotice::has_protecttimelength() const {
  return _has_bit(36);
}
inline void CMessagePlayerEnterMapNotice::clear_protecttimelength() {
  protecttimelength_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::protecttimelength() const {
  return protecttimelength_;
}
inline void CMessagePlayerEnterMapNotice::set_protecttimelength(::google::protobuf::uint32 value) {
  _set_bit(36);
  protecttimelength_ = value;
}

// optional uint32 RoleWorldID = 38;
inline bool CMessagePlayerEnterMapNotice::has_roleworldid() const {
  return _has_bit(37);
}
inline void CMessagePlayerEnterMapNotice::clear_roleworldid() {
  roleworldid_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapNotice::roleworldid() const {
  return roleworldid_;
}
inline void CMessagePlayerEnterMapNotice::set_roleworldid(::google::protobuf::uint32 value) {
  _set_bit(37);
  roleworldid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerRedirectMapNotice

// optional uint32 CommHandle = 1;
inline bool CMessagePlayerRedirectMapNotice::has_commhandle() const {
  return _has_bit(0);
}
inline void CMessagePlayerRedirectMapNotice::clear_commhandle() {
  commhandle_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::commhandle() const {
  return commhandle_;
}
inline void CMessagePlayerRedirectMapNotice::set_commhandle(::google::protobuf::uint32 value) {
  _set_bit(0);
  commhandle_ = value;
}

// optional uint32 LoginToken = 2;
inline bool CMessagePlayerRedirectMapNotice::has_logintoken() const {
  return _has_bit(1);
}
inline void CMessagePlayerRedirectMapNotice::clear_logintoken() {
  logintoken_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::logintoken() const {
  return logintoken_;
}
inline void CMessagePlayerRedirectMapNotice::set_logintoken(::google::protobuf::uint32 value) {
  _set_bit(1);
  logintoken_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessagePlayerRedirectMapNotice::has_charid() const {
  return _has_bit(2);
}
inline void CMessagePlayerRedirectMapNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::charid() const {
  return charid_;
}
inline void CMessagePlayerRedirectMapNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 AccountID = 4;
inline bool CMessagePlayerRedirectMapNotice::has_accountid() const {
  return _has_bit(3);
}
inline void CMessagePlayerRedirectMapNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::accountid() const {
  return accountid_;
}
inline void CMessagePlayerRedirectMapNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(3);
  accountid_ = value;
}

// optional uint32 LineID = 5;
inline bool CMessagePlayerRedirectMapNotice::has_lineid() const {
  return _has_bit(4);
}
inline void CMessagePlayerRedirectMapNotice::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::lineid() const {
  return lineid_;
}
inline void CMessagePlayerRedirectMapNotice::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(4);
  lineid_ = value;
}

// optional uint32 MapID = 6;
inline bool CMessagePlayerRedirectMapNotice::has_mapid() const {
  return _has_bit(5);
}
inline void CMessagePlayerRedirectMapNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::mapid() const {
  return mapid_;
}
inline void CMessagePlayerRedirectMapNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(5);
  mapid_ = value;
}

// optional uint32 PosX = 7;
inline bool CMessagePlayerRedirectMapNotice::has_posx() const {
  return _has_bit(6);
}
inline void CMessagePlayerRedirectMapNotice::clear_posx() {
  posx_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::posx() const {
  return posx_;
}
inline void CMessagePlayerRedirectMapNotice::set_posx(::google::protobuf::uint32 value) {
  _set_bit(6);
  posx_ = value;
}

// optional uint32 PosY = 8;
inline bool CMessagePlayerRedirectMapNotice::has_posy() const {
  return _has_bit(7);
}
inline void CMessagePlayerRedirectMapNotice::clear_posy() {
  posy_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::posy() const {
  return posy_;
}
inline void CMessagePlayerRedirectMapNotice::set_posy(::google::protobuf::uint32 value) {
  _set_bit(7);
  posy_ = value;
}

// optional string CharName = 9;
inline bool CMessagePlayerRedirectMapNotice::has_charname() const {
  return _has_bit(8);
}
inline void CMessagePlayerRedirectMapNotice::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& CMessagePlayerRedirectMapNotice::charname() const {
  return *charname_;
}
inline void CMessagePlayerRedirectMapNotice::set_charname(const ::std::string& value) {
  _set_bit(8);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_charname(const char* value) {
  _set_bit(8);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_charname(const char* value, size_t size) {
  _set_bit(8);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectMapNotice::mutable_charname() {
  _set_bit(8);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 Gender = 10;
inline bool CMessagePlayerRedirectMapNotice::has_gender() const {
  return _has_bit(9);
}
inline void CMessagePlayerRedirectMapNotice::clear_gender() {
  gender_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::gender() const {
  return gender_;
}
inline void CMessagePlayerRedirectMapNotice::set_gender(::google::protobuf::uint32 value) {
  _set_bit(9);
  gender_ = value;
}

// optional uint32 Metier = 11;
inline bool CMessagePlayerRedirectMapNotice::has_metier() const {
  return _has_bit(10);
}
inline void CMessagePlayerRedirectMapNotice::clear_metier() {
  metier_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::metier() const {
  return metier_;
}
inline void CMessagePlayerRedirectMapNotice::set_metier(::google::protobuf::uint32 value) {
  _set_bit(10);
  metier_ = value;
}

// optional uint32 Nationality = 12;
inline bool CMessagePlayerRedirectMapNotice::has_nationality() const {
  return _has_bit(11);
}
inline void CMessagePlayerRedirectMapNotice::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::nationality() const {
  return nationality_;
}
inline void CMessagePlayerRedirectMapNotice::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(11);
  nationality_ = value;
}

// optional uint32 Facetype = 13;
inline bool CMessagePlayerRedirectMapNotice::has_facetype() const {
  return _has_bit(12);
}
inline void CMessagePlayerRedirectMapNotice::clear_facetype() {
  facetype_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::facetype() const {
  return facetype_;
}
inline void CMessagePlayerRedirectMapNotice::set_facetype(::google::protobuf::uint32 value) {
  _set_bit(12);
  facetype_ = value;
}

// optional uint32 Charlevel = 14;
inline bool CMessagePlayerRedirectMapNotice::has_charlevel() const {
  return _has_bit(13);
}
inline void CMessagePlayerRedirectMapNotice::clear_charlevel() {
  charlevel_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::charlevel() const {
  return charlevel_;
}
inline void CMessagePlayerRedirectMapNotice::set_charlevel(::google::protobuf::uint32 value) {
  _set_bit(13);
  charlevel_ = value;
}

// optional uint64 Exp = 15;
inline bool CMessagePlayerRedirectMapNotice::has_exp() const {
  return _has_bit(14);
}
inline void CMessagePlayerRedirectMapNotice::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(14);
}
inline ::google::protobuf::uint64 CMessagePlayerRedirectMapNotice::exp() const {
  return exp_;
}
inline void CMessagePlayerRedirectMapNotice::set_exp(::google::protobuf::uint64 value) {
  _set_bit(14);
  exp_ = value;
}

// optional uint32 Lastlogin = 16;
inline bool CMessagePlayerRedirectMapNotice::has_lastlogin() const {
  return _has_bit(15);
}
inline void CMessagePlayerRedirectMapNotice::clear_lastlogin() {
  lastlogin_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::lastlogin() const {
  return lastlogin_;
}
inline void CMessagePlayerRedirectMapNotice::set_lastlogin(::google::protobuf::uint32 value) {
  _set_bit(15);
  lastlogin_ = value;
}

// optional uint32 DataLength = 17;
inline bool CMessagePlayerRedirectMapNotice::has_datalength() const {
  return _has_bit(16);
}
inline void CMessagePlayerRedirectMapNotice::clear_datalength() {
  datalength_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::datalength() const {
  return datalength_;
}
inline void CMessagePlayerRedirectMapNotice::set_datalength(::google::protobuf::uint32 value) {
  _set_bit(16);
  datalength_ = value;
}

// optional bytes Data = 18;
inline bool CMessagePlayerRedirectMapNotice::has_data() const {
  return _has_bit(17);
}
inline void CMessagePlayerRedirectMapNotice::clear_data() {
  if (data_ != &_default_data_) {
    data_->clear();
  }
  _clear_bit(17);
}
inline const ::std::string& CMessagePlayerRedirectMapNotice::data() const {
  return *data_;
}
inline void CMessagePlayerRedirectMapNotice::set_data(const ::std::string& value) {
  _set_bit(17);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_data(const char* value) {
  _set_bit(17);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_data(const void* value, size_t size) {
  _set_bit(17);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectMapNotice::mutable_data() {
  _set_bit(17);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  return data_;
}

// optional uint32 TeamFlag = 19;
inline bool CMessagePlayerRedirectMapNotice::has_teamflag() const {
  return _has_bit(18);
}
inline void CMessagePlayerRedirectMapNotice::clear_teamflag() {
  teamflag_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::teamflag() const {
  return teamflag_;
}
inline void CMessagePlayerRedirectMapNotice::set_teamflag(::google::protobuf::uint32 value) {
  _set_bit(18);
  teamflag_ = value;
}

// optional uint64 Key = 20;
inline bool CMessagePlayerRedirectMapNotice::has_key() const {
  return _has_bit(19);
}
inline void CMessagePlayerRedirectMapNotice::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(19);
}
inline ::google::protobuf::uint64 CMessagePlayerRedirectMapNotice::key() const {
  return key_;
}
inline void CMessagePlayerRedirectMapNotice::set_key(::google::protobuf::uint64 value) {
  _set_bit(19);
  key_ = value;
}

// optional bytes EncryptKey = 21;
inline bool CMessagePlayerRedirectMapNotice::has_encryptkey() const {
  return _has_bit(20);
}
inline void CMessagePlayerRedirectMapNotice::clear_encryptkey() {
  if (encryptkey_ != &_default_encryptkey_) {
    encryptkey_->clear();
  }
  _clear_bit(20);
}
inline const ::std::string& CMessagePlayerRedirectMapNotice::encryptkey() const {
  return *encryptkey_;
}
inline void CMessagePlayerRedirectMapNotice::set_encryptkey(const ::std::string& value) {
  _set_bit(20);
  if (encryptkey_ == &_default_encryptkey_) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_encryptkey(const char* value) {
  _set_bit(20);
  if (encryptkey_ == &_default_encryptkey_) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_encryptkey(const void* value, size_t size) {
  _set_bit(20);
  if (encryptkey_ == &_default_encryptkey_) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectMapNotice::mutable_encryptkey() {
  _set_bit(20);
  if (encryptkey_ == &_default_encryptkey_) {
    encryptkey_ = new ::std::string;
  }
  return encryptkey_;
}

// optional uint32 PetTempID = 22;
inline bool CMessagePlayerRedirectMapNotice::has_pettempid() const {
  return _has_bit(21);
}
inline void CMessagePlayerRedirectMapNotice::clear_pettempid() {
  pettempid_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::pettempid() const {
  return pettempid_;
}
inline void CMessagePlayerRedirectMapNotice::set_pettempid(::google::protobuf::uint32 value) {
  _set_bit(21);
  pettempid_ = value;
}

// optional uint32 PetOnlineTime = 23;
inline bool CMessagePlayerRedirectMapNotice::has_petonlinetime() const {
  return _has_bit(22);
}
inline void CMessagePlayerRedirectMapNotice::clear_petonlinetime() {
  petonlinetime_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::petonlinetime() const {
  return petonlinetime_;
}
inline void CMessagePlayerRedirectMapNotice::set_petonlinetime(::google::protobuf::uint32 value) {
  _set_bit(22);
  petonlinetime_ = value;
}

// optional uint32 PetMode = 24;
inline bool CMessagePlayerRedirectMapNotice::has_petmode() const {
  return _has_bit(23);
}
inline void CMessagePlayerRedirectMapNotice::clear_petmode() {
  petmode_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::petmode() const {
  return petmode_;
}
inline void CMessagePlayerRedirectMapNotice::set_petmode(::google::protobuf::uint32 value) {
  _set_bit(23);
  petmode_ = value;
}

// optional .PBTeamInfo TeamData = 25;
inline bool CMessagePlayerRedirectMapNotice::has_teamdata() const {
  return _has_bit(24);
}
inline void CMessagePlayerRedirectMapNotice::clear_teamdata() {
  if (teamdata_ != NULL) teamdata_->::PBTeamInfo::Clear();
  _clear_bit(24);
}
inline const ::PBTeamInfo& CMessagePlayerRedirectMapNotice::teamdata() const {
  return teamdata_ != NULL ? *teamdata_ : *default_instance_->teamdata_;
}
inline ::PBTeamInfo* CMessagePlayerRedirectMapNotice::mutable_teamdata() {
  _set_bit(24);
  if (teamdata_ == NULL) teamdata_ = new ::PBTeamInfo;
  return teamdata_;
}

// optional .PBMsg TeamMsg = 26;
inline bool CMessagePlayerRedirectMapNotice::has_teammsg() const {
  return _has_bit(25);
}
inline void CMessagePlayerRedirectMapNotice::clear_teammsg() {
  if (teammsg_ != NULL) teammsg_->::PBMsg::Clear();
  _clear_bit(25);
}
inline const ::PBMsg& CMessagePlayerRedirectMapNotice::teammsg() const {
  return teammsg_ != NULL ? *teammsg_ : *default_instance_->teammsg_;
}
inline ::PBMsg* CMessagePlayerRedirectMapNotice::mutable_teammsg() {
  _set_bit(25);
  if (teammsg_ == NULL) teammsg_ = new ::PBMsg;
  return teammsg_;
}

// optional uint32 FamilyID = 27;
inline bool CMessagePlayerRedirectMapNotice::has_familyid() const {
  return _has_bit(26);
}
inline void CMessagePlayerRedirectMapNotice::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::familyid() const {
  return familyid_;
}
inline void CMessagePlayerRedirectMapNotice::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(26);
  familyid_ = value;
}

// optional string FamilyName = 28;
inline bool CMessagePlayerRedirectMapNotice::has_familyname() const {
  return _has_bit(27);
}
inline void CMessagePlayerRedirectMapNotice::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(27);
}
inline const ::std::string& CMessagePlayerRedirectMapNotice::familyname() const {
  return *familyname_;
}
inline void CMessagePlayerRedirectMapNotice::set_familyname(const ::std::string& value) {
  _set_bit(27);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_familyname(const char* value) {
  _set_bit(27);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_familyname(const char* value, size_t size) {
  _set_bit(27);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectMapNotice::mutable_familyname() {
  _set_bit(27);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// optional uint32 IsFamilyHeader = 29;
inline bool CMessagePlayerRedirectMapNotice::has_isfamilyheader() const {
  return _has_bit(28);
}
inline void CMessagePlayerRedirectMapNotice::clear_isfamilyheader() {
  isfamilyheader_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::isfamilyheader() const {
  return isfamilyheader_;
}
inline void CMessagePlayerRedirectMapNotice::set_isfamilyheader(::google::protobuf::uint32 value) {
  _set_bit(28);
  isfamilyheader_ = value;
}

// optional uint32 IfHasApplies = 30;
inline bool CMessagePlayerRedirectMapNotice::has_ifhasapplies() const {
  return _has_bit(29);
}
inline void CMessagePlayerRedirectMapNotice::clear_ifhasapplies() {
  ifhasapplies_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::ifhasapplies() const {
  return ifhasapplies_;
}
inline void CMessagePlayerRedirectMapNotice::set_ifhasapplies(::google::protobuf::uint32 value) {
  _set_bit(29);
  ifhasapplies_ = value;
}

// optional uint32 CorpsID = 31;
inline bool CMessagePlayerRedirectMapNotice::has_corpsid() const {
  return _has_bit(30);
}
inline void CMessagePlayerRedirectMapNotice::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::corpsid() const {
  return corpsid_;
}
inline void CMessagePlayerRedirectMapNotice::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(30);
  corpsid_ = value;
}

// optional string CorpsName = 32;
inline bool CMessagePlayerRedirectMapNotice::has_corpsname() const {
  return _has_bit(31);
}
inline void CMessagePlayerRedirectMapNotice::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(31);
}
inline const ::std::string& CMessagePlayerRedirectMapNotice::corpsname() const {
  return *corpsname_;
}
inline void CMessagePlayerRedirectMapNotice::set_corpsname(const ::std::string& value) {
  _set_bit(31);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_corpsname(const char* value) {
  _set_bit(31);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_corpsname(const char* value, size_t size) {
  _set_bit(31);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectMapNotice::mutable_corpsname() {
  _set_bit(31);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 IsCorperHeader = 33;
inline bool CMessagePlayerRedirectMapNotice::has_iscorperheader() const {
  return _has_bit(32);
}
inline void CMessagePlayerRedirectMapNotice::clear_iscorperheader() {
  iscorperheader_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::iscorperheader() const {
  return iscorperheader_;
}
inline void CMessagePlayerRedirectMapNotice::set_iscorperheader(::google::protobuf::uint32 value) {
  _set_bit(32);
  iscorperheader_ = value;
}

// optional uint32 IfHasCorpsApply = 34;
inline bool CMessagePlayerRedirectMapNotice::has_ifhascorpsapply() const {
  return _has_bit(33);
}
inline void CMessagePlayerRedirectMapNotice::clear_ifhascorpsapply() {
  ifhascorpsapply_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::ifhascorpsapply() const {
  return ifhascorpsapply_;
}
inline void CMessagePlayerRedirectMapNotice::set_ifhascorpsapply(::google::protobuf::uint32 value) {
  _set_bit(33);
  ifhascorpsapply_ = value;
}

// optional uint32 Camp = 35;
inline bool CMessagePlayerRedirectMapNotice::has_camp() const {
  return _has_bit(34);
}
inline void CMessagePlayerRedirectMapNotice::clear_camp() {
  camp_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::camp() const {
  return camp_;
}
inline void CMessagePlayerRedirectMapNotice::set_camp(::google::protobuf::uint32 value) {
  _set_bit(34);
  camp_ = value;
}

// optional uint32 IfTracedPlayer = 36;
inline bool CMessagePlayerRedirectMapNotice::has_iftracedplayer() const {
  return _has_bit(35);
}
inline void CMessagePlayerRedirectMapNotice::clear_iftracedplayer() {
  iftracedplayer_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::iftracedplayer() const {
  return iftracedplayer_;
}
inline void CMessagePlayerRedirectMapNotice::set_iftracedplayer(::google::protobuf::uint32 value) {
  _set_bit(35);
  iftracedplayer_ = value;
}

// optional uint32 FamilyHeaderID = 37;
inline bool CMessagePlayerRedirectMapNotice::has_familyheaderid() const {
  return _has_bit(36);
}
inline void CMessagePlayerRedirectMapNotice::clear_familyheaderid() {
  familyheaderid_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::familyheaderid() const {
  return familyheaderid_;
}
inline void CMessagePlayerRedirectMapNotice::set_familyheaderid(::google::protobuf::uint32 value) {
  _set_bit(36);
  familyheaderid_ = value;
}

// optional uint32 CorpsHeaderID = 38;
inline bool CMessagePlayerRedirectMapNotice::has_corpsheaderid() const {
  return _has_bit(37);
}
inline void CMessagePlayerRedirectMapNotice::clear_corpsheaderid() {
  corpsheaderid_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::corpsheaderid() const {
  return corpsheaderid_;
}
inline void CMessagePlayerRedirectMapNotice::set_corpsheaderid(::google::protobuf::uint32 value) {
  _set_bit(37);
  corpsheaderid_ = value;
}

// optional int32 ValidSeconds = 39;
inline bool CMessagePlayerRedirectMapNotice::has_validseconds() const {
  return _has_bit(38);
}
inline void CMessagePlayerRedirectMapNotice::clear_validseconds() {
  validseconds_ = 0;
  _clear_bit(38);
}
inline ::google::protobuf::int32 CMessagePlayerRedirectMapNotice::validseconds() const {
  return validseconds_;
}
inline void CMessagePlayerRedirectMapNotice::set_validseconds(::google::protobuf::int32 value) {
  _set_bit(38);
  validseconds_ = value;
}

// optional uint32 AdultFlag = 40;
inline bool CMessagePlayerRedirectMapNotice::has_adultflag() const {
  return _has_bit(39);
}
inline void CMessagePlayerRedirectMapNotice::clear_adultflag() {
  adultflag_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::adultflag() const {
  return adultflag_;
}
inline void CMessagePlayerRedirectMapNotice::set_adultflag(::google::protobuf::uint32 value) {
  _set_bit(39);
  adultflag_ = value;
}

// optional uint32 FamilyPost = 41;
inline bool CMessagePlayerRedirectMapNotice::has_familypost() const {
  return _has_bit(40);
}
inline void CMessagePlayerRedirectMapNotice::clear_familypost() {
  familypost_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::familypost() const {
  return familypost_;
}
inline void CMessagePlayerRedirectMapNotice::set_familypost(::google::protobuf::uint32 value) {
  _set_bit(40);
  familypost_ = value;
}

// optional uint32 CorpsPost = 42;
inline bool CMessagePlayerRedirectMapNotice::has_corpspost() const {
  return _has_bit(41);
}
inline void CMessagePlayerRedirectMapNotice::clear_corpspost() {
  corpspost_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::corpspost() const {
  return corpspost_;
}
inline void CMessagePlayerRedirectMapNotice::set_corpspost(::google::protobuf::uint32 value) {
  _set_bit(41);
  corpspost_ = value;
}

// optional uint32 FamilyContribute = 43;
inline bool CMessagePlayerRedirectMapNotice::has_familycontribute() const {
  return _has_bit(42);
}
inline void CMessagePlayerRedirectMapNotice::clear_familycontribute() {
  familycontribute_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::familycontribute() const {
  return familycontribute_;
}
inline void CMessagePlayerRedirectMapNotice::set_familycontribute(::google::protobuf::uint32 value) {
  _set_bit(42);
  familycontribute_ = value;
}

// optional uint32 CorpsContribute = 44;
inline bool CMessagePlayerRedirectMapNotice::has_corpscontribute() const {
  return _has_bit(43);
}
inline void CMessagePlayerRedirectMapNotice::clear_corpscontribute() {
  corpscontribute_ = 0u;
  _clear_bit(43);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::corpscontribute() const {
  return corpscontribute_;
}
inline void CMessagePlayerRedirectMapNotice::set_corpscontribute(::google::protobuf::uint32 value) {
  _set_bit(43);
  corpscontribute_ = value;
}

// optional uint32 FamilyMoney = 45;
inline bool CMessagePlayerRedirectMapNotice::has_familymoney() const {
  return _has_bit(44);
}
inline void CMessagePlayerRedirectMapNotice::clear_familymoney() {
  familymoney_ = 0u;
  _clear_bit(44);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::familymoney() const {
  return familymoney_;
}
inline void CMessagePlayerRedirectMapNotice::set_familymoney(::google::protobuf::uint32 value) {
  _set_bit(44);
  familymoney_ = value;
}

// optional uint32 CorpsMoney = 46;
inline bool CMessagePlayerRedirectMapNotice::has_corpsmoney() const {
  return _has_bit(45);
}
inline void CMessagePlayerRedirectMapNotice::clear_corpsmoney() {
  corpsmoney_ = 0u;
  _clear_bit(45);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::corpsmoney() const {
  return corpsmoney_;
}
inline void CMessagePlayerRedirectMapNotice::set_corpsmoney(::google::protobuf::uint32 value) {
  _set_bit(45);
  corpsmoney_ = value;
}

// optional uint32 UnionID = 47;
inline bool CMessagePlayerRedirectMapNotice::has_unionid() const {
  return _has_bit(46);
}
inline void CMessagePlayerRedirectMapNotice::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(46);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::unionid() const {
  return unionid_;
}
inline void CMessagePlayerRedirectMapNotice::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(46);
  unionid_ = value;
}

// optional string UnionName = 48;
inline bool CMessagePlayerRedirectMapNotice::has_unionname() const {
  return _has_bit(47);
}
inline void CMessagePlayerRedirectMapNotice::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(47);
}
inline const ::std::string& CMessagePlayerRedirectMapNotice::unionname() const {
  return *unionname_;
}
inline void CMessagePlayerRedirectMapNotice::set_unionname(const ::std::string& value) {
  _set_bit(47);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_unionname(const char* value) {
  _set_bit(47);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_unionname(const char* value, size_t size) {
  _set_bit(47);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectMapNotice::mutable_unionname() {
  _set_bit(47);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional uint32 HeadCorpsID = 49;
inline bool CMessagePlayerRedirectMapNotice::has_headcorpsid() const {
  return _has_bit(48);
}
inline void CMessagePlayerRedirectMapNotice::clear_headcorpsid() {
  headcorpsid_ = 0u;
  _clear_bit(48);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::headcorpsid() const {
  return headcorpsid_;
}
inline void CMessagePlayerRedirectMapNotice::set_headcorpsid(::google::protobuf::uint32 value) {
  _set_bit(48);
  headcorpsid_ = value;
}

// optional uint32 CountryID = 50;
inline bool CMessagePlayerRedirectMapNotice::has_countryid() const {
  return _has_bit(49);
}
inline void CMessagePlayerRedirectMapNotice::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(49);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::countryid() const {
  return countryid_;
}
inline void CMessagePlayerRedirectMapNotice::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(49);
  countryid_ = value;
}

// optional uint32 OfficialID = 51;
inline bool CMessagePlayerRedirectMapNotice::has_officialid() const {
  return _has_bit(50);
}
inline void CMessagePlayerRedirectMapNotice::clear_officialid() {
  officialid_ = 0u;
  _clear_bit(50);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::officialid() const {
  return officialid_;
}
inline void CMessagePlayerRedirectMapNotice::set_officialid(::google::protobuf::uint32 value) {
  _set_bit(50);
  officialid_ = value;
}

// optional uint32 KingID = 52;
inline bool CMessagePlayerRedirectMapNotice::has_kingid() const {
  return _has_bit(51);
}
inline void CMessagePlayerRedirectMapNotice::clear_kingid() {
  kingid_ = 0u;
  _clear_bit(51);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::kingid() const {
  return kingid_;
}
inline void CMessagePlayerRedirectMapNotice::set_kingid(::google::protobuf::uint32 value) {
  _set_bit(51);
  kingid_ = value;
}

// optional string Password = 53;
inline bool CMessagePlayerRedirectMapNotice::has_password() const {
  return _has_bit(52);
}
inline void CMessagePlayerRedirectMapNotice::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(52);
}
inline const ::std::string& CMessagePlayerRedirectMapNotice::password() const {
  return *password_;
}
inline void CMessagePlayerRedirectMapNotice::set_password(const ::std::string& value) {
  _set_bit(52);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_password(const char* value) {
  _set_bit(52);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessagePlayerRedirectMapNotice::set_password(const char* value, size_t size) {
  _set_bit(52);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectMapNotice::mutable_password() {
  _set_bit(52);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// optional uint32 ProtectTime = 54;
inline bool CMessagePlayerRedirectMapNotice::has_protecttime() const {
  return _has_bit(53);
}
inline void CMessagePlayerRedirectMapNotice::clear_protecttime() {
  protecttime_ = 0u;
  _clear_bit(53);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::protecttime() const {
  return protecttime_;
}
inline void CMessagePlayerRedirectMapNotice::set_protecttime(::google::protobuf::uint32 value) {
  _set_bit(53);
  protecttime_ = value;
}

// optional uint32 PasswordStatus = 55;
inline bool CMessagePlayerRedirectMapNotice::has_passwordstatus() const {
  return _has_bit(54);
}
inline void CMessagePlayerRedirectMapNotice::clear_passwordstatus() {
  passwordstatus_ = 0u;
  _clear_bit(54);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::passwordstatus() const {
  return passwordstatus_;
}
inline void CMessagePlayerRedirectMapNotice::set_passwordstatus(::google::protobuf::uint32 value) {
  _set_bit(54);
  passwordstatus_ = value;
}

// optional uint32 ProtectTimeLength = 56;
inline bool CMessagePlayerRedirectMapNotice::has_protecttimelength() const {
  return _has_bit(55);
}
inline void CMessagePlayerRedirectMapNotice::clear_protecttimelength() {
  protecttimelength_ = 0u;
  _clear_bit(55);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::protecttimelength() const {
  return protecttimelength_;
}
inline void CMessagePlayerRedirectMapNotice::set_protecttimelength(::google::protobuf::uint32 value) {
  _set_bit(55);
  protecttimelength_ = value;
}

// optional uint32 RoleWorldID = 57;
inline bool CMessagePlayerRedirectMapNotice::has_roleworldid() const {
  return _has_bit(56);
}
inline void CMessagePlayerRedirectMapNotice::clear_roleworldid() {
  roleworldid_ = 0u;
  _clear_bit(56);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectMapNotice::roleworldid() const {
  return roleworldid_;
}
inline void CMessagePlayerRedirectMapNotice::set_roleworldid(::google::protobuf::uint32 value) {
  _set_bit(56);
  roleworldid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerEnterMapResponse

// optional uint32 AccountID = 1;
inline bool CMessagePlayerEnterMapResponse::has_accountid() const {
  return _has_bit(0);
}
inline void CMessagePlayerEnterMapResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapResponse::accountid() const {
  return accountid_;
}
inline void CMessagePlayerEnterMapResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessagePlayerEnterMapResponse::has_charid() const {
  return _has_bit(1);
}
inline void CMessagePlayerEnterMapResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapResponse::charid() const {
  return charid_;
}
inline void CMessagePlayerEnterMapResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 LineID = 3;
inline bool CMessagePlayerEnterMapResponse::has_lineid() const {
  return _has_bit(2);
}
inline void CMessagePlayerEnterMapResponse::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapResponse::lineid() const {
  return lineid_;
}
inline void CMessagePlayerEnterMapResponse::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(2);
  lineid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessagePlayerEnterMapResponse::has_mapid() const {
  return _has_bit(3);
}
inline void CMessagePlayerEnterMapResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapResponse::mapid() const {
  return mapid_;
}
inline void CMessagePlayerEnterMapResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// optional uint32 PosX = 5;
inline bool CMessagePlayerEnterMapResponse::has_posx() const {
  return _has_bit(4);
}
inline void CMessagePlayerEnterMapResponse::clear_posx() {
  posx_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapResponse::posx() const {
  return posx_;
}
inline void CMessagePlayerEnterMapResponse::set_posx(::google::protobuf::uint32 value) {
  _set_bit(4);
  posx_ = value;
}

// optional uint32 PosY = 6;
inline bool CMessagePlayerEnterMapResponse::has_posy() const {
  return _has_bit(5);
}
inline void CMessagePlayerEnterMapResponse::clear_posy() {
  posy_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterMapResponse::posy() const {
  return posy_;
}
inline void CMessagePlayerEnterMapResponse::set_posy(::google::protobuf::uint32 value) {
  _set_bit(5);
  posy_ = value;
}

// optional int32 ErrorCode = 7;
inline bool CMessagePlayerEnterMapResponse::has_errorcode() const {
  return _has_bit(6);
}
inline void CMessagePlayerEnterMapResponse::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 CMessagePlayerEnterMapResponse::errorcode() const {
  return errorcode_;
}
inline void CMessagePlayerEnterMapResponse::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(6);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerLoginCompleteNotice

// optional uint32 AccountID = 1;
inline bool CMessagePlayerLoginCompleteNotice::has_accountid() const {
  return _has_bit(0);
}
inline void CMessagePlayerLoginCompleteNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerLoginCompleteNotice::accountid() const {
  return accountid_;
}
inline void CMessagePlayerLoginCompleteNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerLeaveMapNotice

// optional uint32 CharID = 1;
inline bool CMessagePlayerLeaveMapNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessagePlayerLeaveMapNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapNotice::charid() const {
  return charid_;
}
inline void CMessagePlayerLeaveMapNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessagePlayerLeaveMapNotice::has_accountid() const {
  return _has_bit(1);
}
inline void CMessagePlayerLeaveMapNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapNotice::accountid() const {
  return accountid_;
}
inline void CMessagePlayerLeaveMapNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional .EMLeaveReason Reason = 3;
inline bool CMessagePlayerLeaveMapNotice::has_reason() const {
  return _has_bit(2);
}
inline void CMessagePlayerLeaveMapNotice::clear_reason() {
  reason_ = 1;
  _clear_bit(2);
}
inline EMLeaveReason CMessagePlayerLeaveMapNotice::reason() const {
  return static_cast< EMLeaveReason >(reason_);
}
inline void CMessagePlayerLeaveMapNotice::set_reason(EMLeaveReason value) {
  GOOGLE_DCHECK(EMLeaveReason_IsValid(value));
  _set_bit(2);
  reason_ = value;
}

// optional uint32 CharLevel = 4;
inline bool CMessagePlayerLeaveMapNotice::has_charlevel() const {
  return _has_bit(3);
}
inline void CMessagePlayerLeaveMapNotice::clear_charlevel() {
  charlevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapNotice::charlevel() const {
  return charlevel_;
}
inline void CMessagePlayerLeaveMapNotice::set_charlevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  charlevel_ = value;
}

// optional uint32 CharMetier = 5;
inline bool CMessagePlayerLeaveMapNotice::has_charmetier() const {
  return _has_bit(4);
}
inline void CMessagePlayerLeaveMapNotice::clear_charmetier() {
  charmetier_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapNotice::charmetier() const {
  return charmetier_;
}
inline void CMessagePlayerLeaveMapNotice::set_charmetier(::google::protobuf::uint32 value) {
  _set_bit(4);
  charmetier_ = value;
}

// optional uint32 Money1 = 6;
inline bool CMessagePlayerLeaveMapNotice::has_money1() const {
  return _has_bit(5);
}
inline void CMessagePlayerLeaveMapNotice::clear_money1() {
  money1_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapNotice::money1() const {
  return money1_;
}
inline void CMessagePlayerLeaveMapNotice::set_money1(::google::protobuf::uint32 value) {
  _set_bit(5);
  money1_ = value;
}

// optional uint32 Money2 = 7;
inline bool CMessagePlayerLeaveMapNotice::has_money2() const {
  return _has_bit(6);
}
inline void CMessagePlayerLeaveMapNotice::clear_money2() {
  money2_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapNotice::money2() const {
  return money2_;
}
inline void CMessagePlayerLeaveMapNotice::set_money2(::google::protobuf::uint32 value) {
  _set_bit(6);
  money2_ = value;
}

// optional uint64 Exp = 8;
inline bool CMessagePlayerLeaveMapNotice::has_exp() const {
  return _has_bit(7);
}
inline void CMessagePlayerLeaveMapNotice::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::uint64 CMessagePlayerLeaveMapNotice::exp() const {
  return exp_;
}
inline void CMessagePlayerLeaveMapNotice::set_exp(::google::protobuf::uint64 value) {
  _set_bit(7);
  exp_ = value;
}

// optional uint32 LogoutFlag = 9;
inline bool CMessagePlayerLeaveMapNotice::has_logoutflag() const {
  return _has_bit(8);
}
inline void CMessagePlayerLeaveMapNotice::clear_logoutflag() {
  logoutflag_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapNotice::logoutflag() const {
  return logoutflag_;
}
inline void CMessagePlayerLeaveMapNotice::set_logoutflag(::google::protobuf::uint32 value) {
  _set_bit(8);
  logoutflag_ = value;
}

// optional .EMSaveResult SaveFlag = 10;
inline bool CMessagePlayerLeaveMapNotice::has_saveflag() const {
  return _has_bit(9);
}
inline void CMessagePlayerLeaveMapNotice::clear_saveflag() {
  saveflag_ = 0;
  _clear_bit(9);
}
inline EMSaveResult CMessagePlayerLeaveMapNotice::saveflag() const {
  return static_cast< EMSaveResult >(saveflag_);
}
inline void CMessagePlayerLeaveMapNotice::set_saveflag(EMSaveResult value) {
  GOOGLE_DCHECK(EMSaveResult_IsValid(value));
  _set_bit(9);
  saveflag_ = value;
}

// optional uint32 GlobalSceneWorldID = 11;
inline bool CMessagePlayerLeaveMapNotice::has_globalsceneworldid() const {
  return _has_bit(10);
}
inline void CMessagePlayerLeaveMapNotice::clear_globalsceneworldid() {
  globalsceneworldid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapNotice::globalsceneworldid() const {
  return globalsceneworldid_;
}
inline void CMessagePlayerLeaveMapNotice::set_globalsceneworldid(::google::protobuf::uint32 value) {
  _set_bit(10);
  globalsceneworldid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerLeaveMapResponse

// optional uint32 CharID = 1;
inline bool CMessagePlayerLeaveMapResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessagePlayerLeaveMapResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveMapResponse::charid() const {
  return charid_;
}
inline void CMessagePlayerLeaveMapResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerReturn2GateNotice

// optional uint32 AccountID = 1;
inline bool CMessagePlayerReturn2GateNotice::has_accountid() const {
  return _has_bit(0);
}
inline void CMessagePlayerReturn2GateNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerReturn2GateNotice::accountid() const {
  return accountid_;
}
inline void CMessagePlayerReturn2GateNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessagePlayerReturn2GateNotice::has_charid() const {
  return _has_bit(1);
}
inline void CMessagePlayerReturn2GateNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerReturn2GateNotice::charid() const {
  return charid_;
}
inline void CMessagePlayerReturn2GateNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerReturn2GateResponse

// optional uint32 CharID = 1;
inline bool CMessagePlayerReturn2GateResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessagePlayerReturn2GateResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerReturn2GateResponse::charid() const {
  return charid_;
}
inline void CMessagePlayerReturn2GateResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateMapNotice

// repeated uint32 LineID = 1;
inline int CMessageCreateMapNotice::lineid_size() const {
  return lineid_.size();
}
inline void CMessageCreateMapNotice::clear_lineid() {
  lineid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCreateMapNotice::lineid() const {
  return lineid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCreateMapNotice::mutable_lineid() {
  return &lineid_;
}
inline ::google::protobuf::uint32 CMessageCreateMapNotice::lineid(int index) const {
  return lineid_.Get(index);
}
inline void CMessageCreateMapNotice::set_lineid(int index, ::google::protobuf::uint32 value) {
  lineid_.Set(index, value);
}
inline void CMessageCreateMapNotice::add_lineid(::google::protobuf::uint32 value) {
  lineid_.Add(value);
}

// repeated uint32 MapID = 2;
inline int CMessageCreateMapNotice::mapid_size() const {
  return mapid_.size();
}
inline void CMessageCreateMapNotice::clear_mapid() {
  mapid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCreateMapNotice::mapid() const {
  return mapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCreateMapNotice::mutable_mapid() {
  return &mapid_;
}
inline ::google::protobuf::uint32 CMessageCreateMapNotice::mapid(int index) const {
  return mapid_.Get(index);
}
inline void CMessageCreateMapNotice::set_mapid(int index, ::google::protobuf::uint32 value) {
  mapid_.Set(index, value);
}
inline void CMessageCreateMapNotice::add_mapid(::google::protobuf::uint32 value) {
  mapid_.Add(value);
}

// repeated string TplName = 3;
inline int CMessageCreateMapNotice::tplname_size() const {
  return tplname_.size();
}
inline void CMessageCreateMapNotice::clear_tplname() {
  tplname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageCreateMapNotice::tplname() const {
  return tplname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageCreateMapNotice::mutable_tplname() {
  return &tplname_;
}
inline const ::std::string& CMessageCreateMapNotice::tplname(int index) const {
  return tplname_.Get(index);
}
inline ::std::string* CMessageCreateMapNotice::mutable_tplname(int index) {
  return tplname_.Mutable(index);
}
inline void CMessageCreateMapNotice::set_tplname(int index, const ::std::string& value) {
  tplname_.Mutable(index)->assign(value);
}
inline void CMessageCreateMapNotice::set_tplname(int index, const char* value) {
  tplname_.Mutable(index)->assign(value);
}
inline void CMessageCreateMapNotice::set_tplname(int index, const char* value, size_t size) {
  tplname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateMapNotice::add_tplname() {
  return tplname_.Add();
}
inline void CMessageCreateMapNotice::add_tplname(const ::std::string& value) {
  tplname_.Add()->assign(value);
}
inline void CMessageCreateMapNotice::add_tplname(const char* value) {
  tplname_.Add()->assign(value);
}
inline void CMessageCreateMapNotice::add_tplname(const char* value, size_t size) {
  tplname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional uint32 Count = 4;
inline bool CMessageCreateMapNotice::has_count() const {
  return _has_bit(3);
}
inline void CMessageCreateMapNotice::clear_count() {
  count_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCreateMapNotice::count() const {
  return count_;
}
inline void CMessageCreateMapNotice::set_count(::google::protobuf::uint32 value) {
  _set_bit(3);
  count_ = value;
}

// optional uint32 RtnCode = 5;
inline bool CMessageCreateMapNotice::has_rtncode() const {
  return _has_bit(4);
}
inline void CMessageCreateMapNotice::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCreateMapNotice::rtncode() const {
  return rtncode_;
}
inline void CMessageCreateMapNotice::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(4);
  rtncode_ = value;
}

// optional string Notice = 6;
inline bool CMessageCreateMapNotice::has_notice() const {
  return _has_bit(5);
}
inline void CMessageCreateMapNotice::clear_notice() {
  if (notice_ != &_default_notice_) {
    notice_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageCreateMapNotice::notice() const {
  return *notice_;
}
inline void CMessageCreateMapNotice::set_notice(const ::std::string& value) {
  _set_bit(5);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CMessageCreateMapNotice::set_notice(const char* value) {
  _set_bit(5);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CMessageCreateMapNotice::set_notice(const char* value, size_t size) {
  _set_bit(5);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateMapNotice::mutable_notice() {
  _set_bit(5);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  return notice_;
}

// -------------------------------------------------------------------

// CMessageCreateMapResponse

// repeated uint32 LineID = 1;
inline int CMessageCreateMapResponse::lineid_size() const {
  return lineid_.size();
}
inline void CMessageCreateMapResponse::clear_lineid() {
  lineid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCreateMapResponse::lineid() const {
  return lineid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCreateMapResponse::mutable_lineid() {
  return &lineid_;
}
inline ::google::protobuf::uint32 CMessageCreateMapResponse::lineid(int index) const {
  return lineid_.Get(index);
}
inline void CMessageCreateMapResponse::set_lineid(int index, ::google::protobuf::uint32 value) {
  lineid_.Set(index, value);
}
inline void CMessageCreateMapResponse::add_lineid(::google::protobuf::uint32 value) {
  lineid_.Add(value);
}

// repeated uint32 MapID = 2;
inline int CMessageCreateMapResponse::mapid_size() const {
  return mapid_.size();
}
inline void CMessageCreateMapResponse::clear_mapid() {
  mapid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCreateMapResponse::mapid() const {
  return mapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCreateMapResponse::mutable_mapid() {
  return &mapid_;
}
inline ::google::protobuf::uint32 CMessageCreateMapResponse::mapid(int index) const {
  return mapid_.Get(index);
}
inline void CMessageCreateMapResponse::set_mapid(int index, ::google::protobuf::uint32 value) {
  mapid_.Set(index, value);
}
inline void CMessageCreateMapResponse::add_mapid(::google::protobuf::uint32 value) {
  mapid_.Add(value);
}

// repeated string TplName = 3;
inline int CMessageCreateMapResponse::tplname_size() const {
  return tplname_.size();
}
inline void CMessageCreateMapResponse::clear_tplname() {
  tplname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageCreateMapResponse::tplname() const {
  return tplname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageCreateMapResponse::mutable_tplname() {
  return &tplname_;
}
inline const ::std::string& CMessageCreateMapResponse::tplname(int index) const {
  return tplname_.Get(index);
}
inline ::std::string* CMessageCreateMapResponse::mutable_tplname(int index) {
  return tplname_.Mutable(index);
}
inline void CMessageCreateMapResponse::set_tplname(int index, const ::std::string& value) {
  tplname_.Mutable(index)->assign(value);
}
inline void CMessageCreateMapResponse::set_tplname(int index, const char* value) {
  tplname_.Mutable(index)->assign(value);
}
inline void CMessageCreateMapResponse::set_tplname(int index, const char* value, size_t size) {
  tplname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateMapResponse::add_tplname() {
  return tplname_.Add();
}
inline void CMessageCreateMapResponse::add_tplname(const ::std::string& value) {
  tplname_.Add()->assign(value);
}
inline void CMessageCreateMapResponse::add_tplname(const char* value) {
  tplname_.Add()->assign(value);
}
inline void CMessageCreateMapResponse::add_tplname(const char* value, size_t size) {
  tplname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// BattleLevel

// optional uint32 LevelMin = 1;
inline bool BattleLevel::has_levelmin() const {
  return _has_bit(0);
}
inline void BattleLevel::clear_levelmin() {
  levelmin_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 BattleLevel::levelmin() const {
  return levelmin_;
}
inline void BattleLevel::set_levelmin(::google::protobuf::uint32 value) {
  _set_bit(0);
  levelmin_ = value;
}

// optional uint32 LevelMax = 2;
inline bool BattleLevel::has_levelmax() const {
  return _has_bit(1);
}
inline void BattleLevel::clear_levelmax() {
  levelmax_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 BattleLevel::levelmax() const {
  return levelmax_;
}
inline void BattleLevel::set_levelmax(::google::protobuf::uint32 value) {
  _set_bit(1);
  levelmax_ = value;
}

// -------------------------------------------------------------------

// PBDate

// optional uint32 Year = 1;
inline bool PBDate::has_year() const {
  return _has_bit(0);
}
inline void PBDate::clear_year() {
  year_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDate::year() const {
  return year_;
}
inline void PBDate::set_year(::google::protobuf::uint32 value) {
  _set_bit(0);
  year_ = value;
}

// optional uint32 Month = 2;
inline bool PBDate::has_month() const {
  return _has_bit(1);
}
inline void PBDate::clear_month() {
  month_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBDate::month() const {
  return month_;
}
inline void PBDate::set_month(::google::protobuf::uint32 value) {
  _set_bit(1);
  month_ = value;
}

// optional uint32 Day = 3;
inline bool PBDate::has_day() const {
  return _has_bit(2);
}
inline void PBDate::clear_day() {
  day_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBDate::day() const {
  return day_;
}
inline void PBDate::set_day(::google::protobuf::uint32 value) {
  _set_bit(2);
  day_ = value;
}

// optional uint32 Week = 4;
inline bool PBDate::has_week() const {
  return _has_bit(3);
}
inline void PBDate::clear_week() {
  week_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBDate::week() const {
  return week_;
}
inline void PBDate::set_week(::google::protobuf::uint32 value) {
  _set_bit(3);
  week_ = value;
}

// optional uint32 Hr = 5;
inline bool PBDate::has_hr() const {
  return _has_bit(4);
}
inline void PBDate::clear_hr() {
  hr_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBDate::hr() const {
  return hr_;
}
inline void PBDate::set_hr(::google::protobuf::uint32 value) {
  _set_bit(4);
  hr_ = value;
}

// optional uint32 Minute = 6;
inline bool PBDate::has_minute() const {
  return _has_bit(5);
}
inline void PBDate::clear_minute() {
  minute_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBDate::minute() const {
  return minute_;
}
inline void PBDate::set_minute(::google::protobuf::uint32 value) {
  _set_bit(5);
  minute_ = value;
}

// optional uint32 Sec = 7;
inline bool PBDate::has_sec() const {
  return _has_bit(6);
}
inline void PBDate::clear_sec() {
  sec_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBDate::sec() const {
  return sec_;
}
inline void PBDate::set_sec(::google::protobuf::uint32 value) {
  _set_bit(6);
  sec_ = value;
}

// -------------------------------------------------------------------

// PBDateSpace

// optional .PBDate Start = 1;
inline bool PBDateSpace::has_start() const {
  return _has_bit(0);
}
inline void PBDateSpace::clear_start() {
  if (start_ != NULL) start_->::PBDate::Clear();
  _clear_bit(0);
}
inline const ::PBDate& PBDateSpace::start() const {
  return start_ != NULL ? *start_ : *default_instance_->start_;
}
inline ::PBDate* PBDateSpace::mutable_start() {
  _set_bit(0);
  if (start_ == NULL) start_ = new ::PBDate;
  return start_;
}

// optional .PBDate finish = 2;
inline bool PBDateSpace::has_finish() const {
  return _has_bit(1);
}
inline void PBDateSpace::clear_finish() {
  if (finish_ != NULL) finish_->::PBDate::Clear();
  _clear_bit(1);
}
inline const ::PBDate& PBDateSpace::finish() const {
  return finish_ != NULL ? *finish_ : *default_instance_->finish_;
}
inline ::PBDate* PBDateSpace::mutable_finish() {
  _set_bit(1);
  if (finish_ == NULL) finish_ = new ::PBDate;
  return finish_;
}

// -------------------------------------------------------------------

// CMessageRegistRepetionInfo

// optional uint32 LineID = 1;
inline bool CMessageRegistRepetionInfo::has_lineid() const {
  return _has_bit(0);
}
inline void CMessageRegistRepetionInfo::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::lineid() const {
  return lineid_;
}
inline void CMessageRegistRepetionInfo::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(0);
  lineid_ = value;
}

// repeated uint32 MapID = 2;
inline int CMessageRegistRepetionInfo::mapid_size() const {
  return mapid_.size();
}
inline void CMessageRegistRepetionInfo::clear_mapid() {
  mapid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageRegistRepetionInfo::mapid() const {
  return mapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageRegistRepetionInfo::mutable_mapid() {
  return &mapid_;
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::mapid(int index) const {
  return mapid_.Get(index);
}
inline void CMessageRegistRepetionInfo::set_mapid(int index, ::google::protobuf::uint32 value) {
  mapid_.Set(index, value);
}
inline void CMessageRegistRepetionInfo::add_mapid(::google::protobuf::uint32 value) {
  mapid_.Add(value);
}

// optional uint32 PlayerMax = 3;
inline bool CMessageRegistRepetionInfo::has_playermax() const {
  return _has_bit(2);
}
inline void CMessageRegistRepetionInfo::clear_playermax() {
  playermax_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::playermax() const {
  return playermax_;
}
inline void CMessageRegistRepetionInfo::set_playermax(::google::protobuf::uint32 value) {
  _set_bit(2);
  playermax_ = value;
}

// optional uint32 BackMapID = 4;
inline bool CMessageRegistRepetionInfo::has_backmapid() const {
  return _has_bit(3);
}
inline void CMessageRegistRepetionInfo::clear_backmapid() {
  backmapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::backmapid() const {
  return backmapid_;
}
inline void CMessageRegistRepetionInfo::set_backmapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  backmapid_ = value;
}

// optional uint32 BackPosX = 5;
inline bool CMessageRegistRepetionInfo::has_backposx() const {
  return _has_bit(4);
}
inline void CMessageRegistRepetionInfo::clear_backposx() {
  backposx_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::backposx() const {
  return backposx_;
}
inline void CMessageRegistRepetionInfo::set_backposx(::google::protobuf::uint32 value) {
  _set_bit(4);
  backposx_ = value;
}

// optional uint32 BackPosY = 6;
inline bool CMessageRegistRepetionInfo::has_backposy() const {
  return _has_bit(5);
}
inline void CMessageRegistRepetionInfo::clear_backposy() {
  backposy_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::backposy() const {
  return backposy_;
}
inline void CMessageRegistRepetionInfo::set_backposy(::google::protobuf::uint32 value) {
  _set_bit(5);
  backposy_ = value;
}

// optional uint32 CountMax = 7;
inline bool CMessageRegistRepetionInfo::has_countmax() const {
  return _has_bit(6);
}
inline void CMessageRegistRepetionInfo::clear_countmax() {
  countmax_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::countmax() const {
  return countmax_;
}
inline void CMessageRegistRepetionInfo::set_countmax(::google::protobuf::uint32 value) {
  _set_bit(6);
  countmax_ = value;
}

// optional uint32 RepetionID = 8;
inline bool CMessageRegistRepetionInfo::has_repetionid() const {
  return _has_bit(7);
}
inline void CMessageRegistRepetionInfo::clear_repetionid() {
  repetionid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::repetionid() const {
  return repetionid_;
}
inline void CMessageRegistRepetionInfo::set_repetionid(::google::protobuf::uint32 value) {
  _set_bit(7);
  repetionid_ = value;
}

// repeated .BattleLevel Level = 9;
inline int CMessageRegistRepetionInfo::level_size() const {
  return level_.size();
}
inline void CMessageRegistRepetionInfo::clear_level() {
  level_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::BattleLevel >&
CMessageRegistRepetionInfo::level() const {
  return level_;
}
inline ::google::protobuf::RepeatedPtrField< ::BattleLevel >*
CMessageRegistRepetionInfo::mutable_level() {
  return &level_;
}
inline const ::BattleLevel& CMessageRegistRepetionInfo::level(int index) const {
  return level_.Get(index);
}
inline ::BattleLevel* CMessageRegistRepetionInfo::mutable_level(int index) {
  return level_.Mutable(index);
}
inline ::BattleLevel* CMessageRegistRepetionInfo::add_level() {
  return level_.Add();
}

// repeated .PBDateSpace Space = 10;
inline int CMessageRegistRepetionInfo::space_size() const {
  return space_.size();
}
inline void CMessageRegistRepetionInfo::clear_space() {
  space_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDateSpace >&
CMessageRegistRepetionInfo::space() const {
  return space_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDateSpace >*
CMessageRegistRepetionInfo::mutable_space() {
  return &space_;
}
inline const ::PBDateSpace& CMessageRegistRepetionInfo::space(int index) const {
  return space_.Get(index);
}
inline ::PBDateSpace* CMessageRegistRepetionInfo::mutable_space(int index) {
  return space_.Mutable(index);
}
inline ::PBDateSpace* CMessageRegistRepetionInfo::add_space() {
  return space_.Add();
}

// optional uint32 IsOnTimeOpen = 11;
inline bool CMessageRegistRepetionInfo::has_isontimeopen() const {
  return _has_bit(10);
}
inline void CMessageRegistRepetionInfo::clear_isontimeopen() {
  isontimeopen_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::isontimeopen() const {
  return isontimeopen_;
}
inline void CMessageRegistRepetionInfo::set_isontimeopen(::google::protobuf::uint32 value) {
  _set_bit(10);
  isontimeopen_ = value;
}

// optional uint32 NotLimitTime = 12;
inline bool CMessageRegistRepetionInfo::has_notlimittime() const {
  return _has_bit(11);
}
inline void CMessageRegistRepetionInfo::clear_notlimittime() {
  notlimittime_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::notlimittime() const {
  return notlimittime_;
}
inline void CMessageRegistRepetionInfo::set_notlimittime(::google::protobuf::uint32 value) {
  _set_bit(11);
  notlimittime_ = value;
}

// optional uint32 Relogin = 13;
inline bool CMessageRegistRepetionInfo::has_relogin() const {
  return _has_bit(12);
}
inline void CMessageRegistRepetionInfo::clear_relogin() {
  relogin_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessageRegistRepetionInfo::relogin() const {
  return relogin_;
}
inline void CMessageRegistRepetionInfo::set_relogin(::google::protobuf::uint32 value) {
  _set_bit(12);
  relogin_ = value;
}

// -------------------------------------------------------------------

// CMessageDestroyRepetionMap

// optional uint32 RepetionIndex = 1;
inline bool CMessageDestroyRepetionMap::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessageDestroyRepetionMap::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageDestroyRepetionMap::repetionindex() const {
  return repetionindex_;
}
inline void CMessageDestroyRepetionMap::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// optional uint64 Key = 2;
inline bool CMessageDestroyRepetionMap::has_key() const {
  return _has_bit(1);
}
inline void CMessageDestroyRepetionMap::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMessageDestroyRepetionMap::key() const {
  return key_;
}
inline void CMessageDestroyRepetionMap::set_key(::google::protobuf::uint64 value) {
  _set_bit(1);
  key_ = value;
}

// optional uint32 Parame = 3;
inline bool CMessageDestroyRepetionMap::has_parame() const {
  return _has_bit(2);
}
inline void CMessageDestroyRepetionMap::clear_parame() {
  parame_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageDestroyRepetionMap::parame() const {
  return parame_;
}
inline void CMessageDestroyRepetionMap::set_parame(::google::protobuf::uint32 value) {
  _set_bit(2);
  parame_ = value;
}

// -------------------------------------------------------------------

// CMessageG2SRepetionEventCode

// optional int32 RoleID = 1;
inline bool CMessageG2SRepetionEventCode::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageG2SRepetionEventCode::clear_roleid() {
  roleid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageG2SRepetionEventCode::roleid() const {
  return roleid_;
}
inline void CMessageG2SRepetionEventCode::set_roleid(::google::protobuf::int32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional int32 Code = 2;
inline bool CMessageG2SRepetionEventCode::has_code() const {
  return _has_bit(1);
}
inline void CMessageG2SRepetionEventCode::clear_code() {
  code_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageG2SRepetionEventCode::code() const {
  return code_;
}
inline void CMessageG2SRepetionEventCode::set_code(::google::protobuf::int32 value) {
  _set_bit(1);
  code_ = value;
}

// optional int32 RepetionID = 3;
inline bool CMessageG2SRepetionEventCode::has_repetionid() const {
  return _has_bit(2);
}
inline void CMessageG2SRepetionEventCode::clear_repetionid() {
  repetionid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageG2SRepetionEventCode::repetionid() const {
  return repetionid_;
}
inline void CMessageG2SRepetionEventCode::set_repetionid(::google::protobuf::int32 value) {
  _set_bit(2);
  repetionid_ = value;
}

// optional int32 Parame = 4;
inline bool CMessageG2SRepetionEventCode::has_parame() const {
  return _has_bit(3);
}
inline void CMessageG2SRepetionEventCode::clear_parame() {
  parame_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageG2SRepetionEventCode::parame() const {
  return parame_;
}
inline void CMessageG2SRepetionEventCode::set_parame(::google::protobuf::int32 value) {
  _set_bit(3);
  parame_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerRedirectRequest

// optional uint32 LineID = 1;
inline bool CMessagePlayerRedirectRequest::has_lineid() const {
  return _has_bit(0);
}
inline void CMessagePlayerRedirectRequest::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::lineid() const {
  return lineid_;
}
inline void CMessagePlayerRedirectRequest::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(0);
  lineid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessagePlayerRedirectRequest::has_mapid() const {
  return _has_bit(1);
}
inline void CMessagePlayerRedirectRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::mapid() const {
  return mapid_;
}
inline void CMessagePlayerRedirectRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 PosX = 3;
inline bool CMessagePlayerRedirectRequest::has_posx() const {
  return _has_bit(2);
}
inline void CMessagePlayerRedirectRequest::clear_posx() {
  posx_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::posx() const {
  return posx_;
}
inline void CMessagePlayerRedirectRequest::set_posx(::google::protobuf::uint32 value) {
  _set_bit(2);
  posx_ = value;
}

// optional uint32 PosY = 4;
inline bool CMessagePlayerRedirectRequest::has_posy() const {
  return _has_bit(3);
}
inline void CMessagePlayerRedirectRequest::clear_posy() {
  posy_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::posy() const {
  return posy_;
}
inline void CMessagePlayerRedirectRequest::set_posy(::google::protobuf::uint32 value) {
  _set_bit(3);
  posy_ = value;
}

// optional uint32 AccountID = 5;
inline bool CMessagePlayerRedirectRequest::has_accountid() const {
  return _has_bit(4);
}
inline void CMessagePlayerRedirectRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::accountid() const {
  return accountid_;
}
inline void CMessagePlayerRedirectRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(4);
  accountid_ = value;
}

// optional uint32 CharID = 6;
inline bool CMessagePlayerRedirectRequest::has_charid() const {
  return _has_bit(5);
}
inline void CMessagePlayerRedirectRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::charid() const {
  return charid_;
}
inline void CMessagePlayerRedirectRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(5);
  charid_ = value;
}

// optional string CharName = 7;
inline bool CMessagePlayerRedirectRequest::has_charname() const {
  return _has_bit(6);
}
inline void CMessagePlayerRedirectRequest::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessagePlayerRedirectRequest::charname() const {
  return *charname_;
}
inline void CMessagePlayerRedirectRequest::set_charname(const ::std::string& value) {
  _set_bit(6);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessagePlayerRedirectRequest::set_charname(const char* value) {
  _set_bit(6);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessagePlayerRedirectRequest::set_charname(const char* value, size_t size) {
  _set_bit(6);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectRequest::mutable_charname() {
  _set_bit(6);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 Gender = 8;
inline bool CMessagePlayerRedirectRequest::has_gender() const {
  return _has_bit(7);
}
inline void CMessagePlayerRedirectRequest::clear_gender() {
  gender_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::gender() const {
  return gender_;
}
inline void CMessagePlayerRedirectRequest::set_gender(::google::protobuf::uint32 value) {
  _set_bit(7);
  gender_ = value;
}

// optional uint32 Metier = 9;
inline bool CMessagePlayerRedirectRequest::has_metier() const {
  return _has_bit(8);
}
inline void CMessagePlayerRedirectRequest::clear_metier() {
  metier_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::metier() const {
  return metier_;
}
inline void CMessagePlayerRedirectRequest::set_metier(::google::protobuf::uint32 value) {
  _set_bit(8);
  metier_ = value;
}

// optional uint32 Nationality = 10;
inline bool CMessagePlayerRedirectRequest::has_nationality() const {
  return _has_bit(9);
}
inline void CMessagePlayerRedirectRequest::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::nationality() const {
  return nationality_;
}
inline void CMessagePlayerRedirectRequest::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(9);
  nationality_ = value;
}

// optional uint32 Facetype = 11;
inline bool CMessagePlayerRedirectRequest::has_facetype() const {
  return _has_bit(10);
}
inline void CMessagePlayerRedirectRequest::clear_facetype() {
  facetype_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::facetype() const {
  return facetype_;
}
inline void CMessagePlayerRedirectRequest::set_facetype(::google::protobuf::uint32 value) {
  _set_bit(10);
  facetype_ = value;
}

// optional uint32 Charlevel = 12;
inline bool CMessagePlayerRedirectRequest::has_charlevel() const {
  return _has_bit(11);
}
inline void CMessagePlayerRedirectRequest::clear_charlevel() {
  charlevel_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::charlevel() const {
  return charlevel_;
}
inline void CMessagePlayerRedirectRequest::set_charlevel(::google::protobuf::uint32 value) {
  _set_bit(11);
  charlevel_ = value;
}

// optional uint64 Exp = 13;
inline bool CMessagePlayerRedirectRequest::has_exp() const {
  return _has_bit(12);
}
inline void CMessagePlayerRedirectRequest::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(12);
}
inline ::google::protobuf::uint64 CMessagePlayerRedirectRequest::exp() const {
  return exp_;
}
inline void CMessagePlayerRedirectRequest::set_exp(::google::protobuf::uint64 value) {
  _set_bit(12);
  exp_ = value;
}

// optional uint32 Lastlogin = 14;
inline bool CMessagePlayerRedirectRequest::has_lastlogin() const {
  return _has_bit(13);
}
inline void CMessagePlayerRedirectRequest::clear_lastlogin() {
  lastlogin_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::lastlogin() const {
  return lastlogin_;
}
inline void CMessagePlayerRedirectRequest::set_lastlogin(::google::protobuf::uint32 value) {
  _set_bit(13);
  lastlogin_ = value;
}

// optional uint32 DataLength = 16;
inline bool CMessagePlayerRedirectRequest::has_datalength() const {
  return _has_bit(14);
}
inline void CMessagePlayerRedirectRequest::clear_datalength() {
  datalength_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::datalength() const {
  return datalength_;
}
inline void CMessagePlayerRedirectRequest::set_datalength(::google::protobuf::uint32 value) {
  _set_bit(14);
  datalength_ = value;
}

// optional bytes Data = 17;
inline bool CMessagePlayerRedirectRequest::has_data() const {
  return _has_bit(15);
}
inline void CMessagePlayerRedirectRequest::clear_data() {
  if (data_ != &_default_data_) {
    data_->clear();
  }
  _clear_bit(15);
}
inline const ::std::string& CMessagePlayerRedirectRequest::data() const {
  return *data_;
}
inline void CMessagePlayerRedirectRequest::set_data(const ::std::string& value) {
  _set_bit(15);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CMessagePlayerRedirectRequest::set_data(const char* value) {
  _set_bit(15);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CMessagePlayerRedirectRequest::set_data(const void* value, size_t size) {
  _set_bit(15);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectRequest::mutable_data() {
  _set_bit(15);
  if (data_ == &_default_data_) {
    data_ = new ::std::string;
  }
  return data_;
}

// optional uint32 TeamFlag = 18;
inline bool CMessagePlayerRedirectRequest::has_teamflag() const {
  return _has_bit(16);
}
inline void CMessagePlayerRedirectRequest::clear_teamflag() {
  teamflag_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::teamflag() const {
  return teamflag_;
}
inline void CMessagePlayerRedirectRequest::set_teamflag(::google::protobuf::uint32 value) {
  _set_bit(16);
  teamflag_ = value;
}

// optional uint32 TeamLevel = 19;
inline bool CMessagePlayerRedirectRequest::has_teamlevel() const {
  return _has_bit(17);
}
inline void CMessagePlayerRedirectRequest::clear_teamlevel() {
  teamlevel_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::teamlevel() const {
  return teamlevel_;
}
inline void CMessagePlayerRedirectRequest::set_teamlevel(::google::protobuf::uint32 value) {
  _set_bit(17);
  teamlevel_ = value;
}

// optional bytes EncryptKey = 20;
inline bool CMessagePlayerRedirectRequest::has_encryptkey() const {
  return _has_bit(18);
}
inline void CMessagePlayerRedirectRequest::clear_encryptkey() {
  if (encryptkey_ != &_default_encryptkey_) {
    encryptkey_->clear();
  }
  _clear_bit(18);
}
inline const ::std::string& CMessagePlayerRedirectRequest::encryptkey() const {
  return *encryptkey_;
}
inline void CMessagePlayerRedirectRequest::set_encryptkey(const ::std::string& value) {
  _set_bit(18);
  if (encryptkey_ == &_default_encryptkey_) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
}
inline void CMessagePlayerRedirectRequest::set_encryptkey(const char* value) {
  _set_bit(18);
  if (encryptkey_ == &_default_encryptkey_) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
}
inline void CMessagePlayerRedirectRequest::set_encryptkey(const void* value, size_t size) {
  _set_bit(18);
  if (encryptkey_ == &_default_encryptkey_) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectRequest::mutable_encryptkey() {
  _set_bit(18);
  if (encryptkey_ == &_default_encryptkey_) {
    encryptkey_ = new ::std::string;
  }
  return encryptkey_;
}

// optional .PBTeamInfo TeamInfo = 21;
inline bool CMessagePlayerRedirectRequest::has_teaminfo() const {
  return _has_bit(19);
}
inline void CMessagePlayerRedirectRequest::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::PBTeamInfo::Clear();
  _clear_bit(19);
}
inline const ::PBTeamInfo& CMessagePlayerRedirectRequest::teaminfo() const {
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::PBTeamInfo* CMessagePlayerRedirectRequest::mutable_teaminfo() {
  _set_bit(19);
  if (teaminfo_ == NULL) teaminfo_ = new ::PBTeamInfo;
  return teaminfo_;
}

// optional uint32 PetTempID = 22;
inline bool CMessagePlayerRedirectRequest::has_pettempid() const {
  return _has_bit(20);
}
inline void CMessagePlayerRedirectRequest::clear_pettempid() {
  pettempid_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::pettempid() const {
  return pettempid_;
}
inline void CMessagePlayerRedirectRequest::set_pettempid(::google::protobuf::uint32 value) {
  _set_bit(20);
  pettempid_ = value;
}

// optional uint32 PetOnlineTime = 23;
inline bool CMessagePlayerRedirectRequest::has_petonlinetime() const {
  return _has_bit(21);
}
inline void CMessagePlayerRedirectRequest::clear_petonlinetime() {
  petonlinetime_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::petonlinetime() const {
  return petonlinetime_;
}
inline void CMessagePlayerRedirectRequest::set_petonlinetime(::google::protobuf::uint32 value) {
  _set_bit(21);
  petonlinetime_ = value;
}

// optional uint32 PetMode = 24;
inline bool CMessagePlayerRedirectRequest::has_petmode() const {
  return _has_bit(22);
}
inline void CMessagePlayerRedirectRequest::clear_petmode() {
  petmode_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectRequest::petmode() const {
  return petmode_;
}
inline void CMessagePlayerRedirectRequest::set_petmode(::google::protobuf::uint32 value) {
  _set_bit(22);
  petmode_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerRedirectResponse

// optional uint32 CharID = 1;
inline bool CMessagePlayerRedirectResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessagePlayerRedirectResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectResponse::charid() const {
  return charid_;
}
inline void CMessagePlayerRedirectResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional bool Redirect = 2;
inline bool CMessagePlayerRedirectResponse::has_redirect() const {
  return _has_bit(1);
}
inline void CMessagePlayerRedirectResponse::clear_redirect() {
  redirect_ = false;
  _clear_bit(1);
}
inline bool CMessagePlayerRedirectResponse::redirect() const {
  return redirect_;
}
inline void CMessagePlayerRedirectResponse::set_redirect(bool value) {
  _set_bit(1);
  redirect_ = value;
}

// optional uint32 LineID = 3;
inline bool CMessagePlayerRedirectResponse::has_lineid() const {
  return _has_bit(2);
}
inline void CMessagePlayerRedirectResponse::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectResponse::lineid() const {
  return lineid_;
}
inline void CMessagePlayerRedirectResponse::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(2);
  lineid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessagePlayerRedirectResponse::has_mapid() const {
  return _has_bit(3);
}
inline void CMessagePlayerRedirectResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectResponse::mapid() const {
  return mapid_;
}
inline void CMessagePlayerRedirectResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// optional uint32 PosX = 5;
inline bool CMessagePlayerRedirectResponse::has_posx() const {
  return _has_bit(4);
}
inline void CMessagePlayerRedirectResponse::clear_posx() {
  posx_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectResponse::posx() const {
  return posx_;
}
inline void CMessagePlayerRedirectResponse::set_posx(::google::protobuf::uint32 value) {
  _set_bit(4);
  posx_ = value;
}

// optional uint32 PosY = 6;
inline bool CMessagePlayerRedirectResponse::has_posy() const {
  return _has_bit(5);
}
inline void CMessagePlayerRedirectResponse::clear_posy() {
  posy_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerRedirectResponse::posy() const {
  return posy_;
}
inline void CMessagePlayerRedirectResponse::set_posy(::google::protobuf::uint32 value) {
  _set_bit(5);
  posy_ = value;
}

// optional string Address = 7;
inline bool CMessagePlayerRedirectResponse::has_address() const {
  return _has_bit(6);
}
inline void CMessagePlayerRedirectResponse::clear_address() {
  if (address_ != &_default_address_) {
    address_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessagePlayerRedirectResponse::address() const {
  return *address_;
}
inline void CMessagePlayerRedirectResponse::set_address(const ::std::string& value) {
  _set_bit(6);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessagePlayerRedirectResponse::set_address(const char* value) {
  _set_bit(6);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void CMessagePlayerRedirectResponse::set_address(const char* value, size_t size) {
  _set_bit(6);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerRedirectResponse::mutable_address() {
  _set_bit(6);
  if (address_ == &_default_address_) {
    address_ = new ::std::string;
  }
  return address_;
}

// -------------------------------------------------------------------

// CMessagePlayerEnterConfirmNotice

// optional uint32 AccountID = 1;
inline bool CMessagePlayerEnterConfirmNotice::has_accountid() const {
  return _has_bit(0);
}
inline void CMessagePlayerEnterConfirmNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::accountid() const {
  return accountid_;
}
inline void CMessagePlayerEnterConfirmNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessagePlayerEnterConfirmNotice::has_charid() const {
  return _has_bit(1);
}
inline void CMessagePlayerEnterConfirmNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::charid() const {
  return charid_;
}
inline void CMessagePlayerEnterConfirmNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional string CharName = 3;
inline bool CMessagePlayerEnterConfirmNotice::has_charname() const {
  return _has_bit(2);
}
inline void CMessagePlayerEnterConfirmNotice::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessagePlayerEnterConfirmNotice::charname() const {
  return *charname_;
}
inline void CMessagePlayerEnterConfirmNotice::set_charname(const ::std::string& value) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessagePlayerEnterConfirmNotice::set_charname(const char* value) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessagePlayerEnterConfirmNotice::set_charname(const char* value, size_t size) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerEnterConfirmNotice::mutable_charname() {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 LineID = 4;
inline bool CMessagePlayerEnterConfirmNotice::has_lineid() const {
  return _has_bit(3);
}
inline void CMessagePlayerEnterConfirmNotice::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::lineid() const {
  return lineid_;
}
inline void CMessagePlayerEnterConfirmNotice::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(3);
  lineid_ = value;
}

// optional uint32 MapID = 5;
inline bool CMessagePlayerEnterConfirmNotice::has_mapid() const {
  return _has_bit(4);
}
inline void CMessagePlayerEnterConfirmNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::mapid() const {
  return mapid_;
}
inline void CMessagePlayerEnterConfirmNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(4);
  mapid_ = value;
}

// optional uint32 Face = 6;
inline bool CMessagePlayerEnterConfirmNotice::has_face() const {
  return _has_bit(5);
}
inline void CMessagePlayerEnterConfirmNotice::clear_face() {
  face_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::face() const {
  return face_;
}
inline void CMessagePlayerEnterConfirmNotice::set_face(::google::protobuf::uint32 value) {
  _set_bit(5);
  face_ = value;
}

// optional uint32 Metier = 7;
inline bool CMessagePlayerEnterConfirmNotice::has_metier() const {
  return _has_bit(6);
}
inline void CMessagePlayerEnterConfirmNotice::clear_metier() {
  metier_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::metier() const {
  return metier_;
}
inline void CMessagePlayerEnterConfirmNotice::set_metier(::google::protobuf::uint32 value) {
  _set_bit(6);
  metier_ = value;
}

// optional uint32 Level = 8;
inline bool CMessagePlayerEnterConfirmNotice::has_level() const {
  return _has_bit(7);
}
inline void CMessagePlayerEnterConfirmNotice::clear_level() {
  level_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::level() const {
  return level_;
}
inline void CMessagePlayerEnterConfirmNotice::set_level(::google::protobuf::uint32 value) {
  _set_bit(7);
  level_ = value;
}

// optional uint32 Sex = 9;
inline bool CMessagePlayerEnterConfirmNotice::has_sex() const {
  return _has_bit(8);
}
inline void CMessagePlayerEnterConfirmNotice::clear_sex() {
  sex_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::sex() const {
  return sex_;
}
inline void CMessagePlayerEnterConfirmNotice::set_sex(::google::protobuf::uint32 value) {
  _set_bit(8);
  sex_ = value;
}

// optional uint32 Nationality = 10;
inline bool CMessagePlayerEnterConfirmNotice::has_nationality() const {
  return _has_bit(9);
}
inline void CMessagePlayerEnterConfirmNotice::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::nationality() const {
  return nationality_;
}
inline void CMessagePlayerEnterConfirmNotice::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(9);
  nationality_ = value;
}

// optional bytes CSKey = 11;
inline bool CMessagePlayerEnterConfirmNotice::has_cskey() const {
  return _has_bit(10);
}
inline void CMessagePlayerEnterConfirmNotice::clear_cskey() {
  if (cskey_ != &_default_cskey_) {
    cskey_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& CMessagePlayerEnterConfirmNotice::cskey() const {
  return *cskey_;
}
inline void CMessagePlayerEnterConfirmNotice::set_cskey(const ::std::string& value) {
  _set_bit(10);
  if (cskey_ == &_default_cskey_) {
    cskey_ = new ::std::string;
  }
  cskey_->assign(value);
}
inline void CMessagePlayerEnterConfirmNotice::set_cskey(const char* value) {
  _set_bit(10);
  if (cskey_ == &_default_cskey_) {
    cskey_ = new ::std::string;
  }
  cskey_->assign(value);
}
inline void CMessagePlayerEnterConfirmNotice::set_cskey(const void* value, size_t size) {
  _set_bit(10);
  if (cskey_ == &_default_cskey_) {
    cskey_ = new ::std::string;
  }
  cskey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerEnterConfirmNotice::mutable_cskey() {
  _set_bit(10);
  if (cskey_ == &_default_cskey_) {
    cskey_ = new ::std::string;
  }
  return cskey_;
}

// optional uint32 VipFlag = 12;
inline bool CMessagePlayerEnterConfirmNotice::has_vipflag() const {
  return _has_bit(11);
}
inline void CMessagePlayerEnterConfirmNotice::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessagePlayerEnterConfirmNotice::vipflag() const {
  return vipflag_;
}
inline void CMessagePlayerEnterConfirmNotice::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(11);
  vipflag_ = value;
}

// -------------------------------------------------------------------

// CMessageSceneNotOpenNotice

// optional uint32 CharID = 1;
inline bool CMessageSceneNotOpenNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageSceneNotOpenNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSceneNotOpenNotice::charid() const {
  return charid_;
}
inline void CMessageSceneNotOpenNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdateVersionNotice

// optional uint32 TemplateVersion = 1;
inline bool CMessageUpdateVersionNotice::has_templateversion() const {
  return _has_bit(0);
}
inline void CMessageUpdateVersionNotice::clear_templateversion() {
  templateversion_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdateVersionNotice::templateversion() const {
  return templateversion_;
}
inline void CMessageUpdateVersionNotice::set_templateversion(::google::protobuf::uint32 value) {
  _set_bit(0);
  templateversion_ = value;
}

// optional uint32 TaskVersion = 2;
inline bool CMessageUpdateVersionNotice::has_taskversion() const {
  return _has_bit(1);
}
inline void CMessageUpdateVersionNotice::clear_taskversion() {
  taskversion_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdateVersionNotice::taskversion() const {
  return taskversion_;
}
inline void CMessageUpdateVersionNotice::set_taskversion(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskversion_ = value;
}

// -------------------------------------------------------------------

// CMessageRegistServerRequest

// optional uint32 ServerType = 1;
inline bool CMessageRegistServerRequest::has_servertype() const {
  return _has_bit(0);
}
inline void CMessageRegistServerRequest::clear_servertype() {
  servertype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRegistServerRequest::servertype() const {
  return servertype_;
}
inline void CMessageRegistServerRequest::set_servertype(::google::protobuf::uint32 value) {
  _set_bit(0);
  servertype_ = value;
}

// optional uint32 ServerID = 2;
inline bool CMessageRegistServerRequest::has_serverid() const {
  return _has_bit(1);
}
inline void CMessageRegistServerRequest::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRegistServerRequest::serverid() const {
  return serverid_;
}
inline void CMessageRegistServerRequest::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(1);
  serverid_ = value;
}

// -------------------------------------------------------------------

// CMessageRegistServerResponse

// optional uint32 ServerType = 1;
inline bool CMessageRegistServerResponse::has_servertype() const {
  return _has_bit(0);
}
inline void CMessageRegistServerResponse::clear_servertype() {
  servertype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRegistServerResponse::servertype() const {
  return servertype_;
}
inline void CMessageRegistServerResponse::set_servertype(::google::protobuf::uint32 value) {
  _set_bit(0);
  servertype_ = value;
}

// optional uint32 ServerID = 2;
inline bool CMessageRegistServerResponse::has_serverid() const {
  return _has_bit(1);
}
inline void CMessageRegistServerResponse::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRegistServerResponse::serverid() const {
  return serverid_;
}
inline void CMessageRegistServerResponse::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(1);
  serverid_ = value;
}

// -------------------------------------------------------------------

// CMessageHeartBeatNotice

// optional uint32 ServerType = 1;
inline bool CMessageHeartBeatNotice::has_servertype() const {
  return _has_bit(0);
}
inline void CMessageHeartBeatNotice::clear_servertype() {
  servertype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageHeartBeatNotice::servertype() const {
  return servertype_;
}
inline void CMessageHeartBeatNotice::set_servertype(::google::protobuf::uint32 value) {
  _set_bit(0);
  servertype_ = value;
}

// optional uint32 ServerID = 2;
inline bool CMessageHeartBeatNotice::has_serverid() const {
  return _has_bit(1);
}
inline void CMessageHeartBeatNotice::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageHeartBeatNotice::serverid() const {
  return serverid_;
}
inline void CMessageHeartBeatNotice::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(1);
  serverid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerOnLineFriendRequest

// repeated uint32 CharIDs = 1;
inline int CMessagePlayerOnLineFriendRequest::charids_size() const {
  return charids_.size();
}
inline void CMessagePlayerOnLineFriendRequest::clear_charids() {
  charids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessagePlayerOnLineFriendRequest::charids() const {
  return charids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessagePlayerOnLineFriendRequest::mutable_charids() {
  return &charids_;
}
inline ::google::protobuf::uint32 CMessagePlayerOnLineFriendRequest::charids(int index) const {
  return charids_.Get(index);
}
inline void CMessagePlayerOnLineFriendRequest::set_charids(int index, ::google::protobuf::uint32 value) {
  charids_.Set(index, value);
}
inline void CMessagePlayerOnLineFriendRequest::add_charids(::google::protobuf::uint32 value) {
  charids_.Add(value);
}

// optional uint32 Requester = 2;
inline bool CMessagePlayerOnLineFriendRequest::has_requester() const {
  return _has_bit(1);
}
inline void CMessagePlayerOnLineFriendRequest::clear_requester() {
  requester_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerOnLineFriendRequest::requester() const {
  return requester_;
}
inline void CMessagePlayerOnLineFriendRequest::set_requester(::google::protobuf::uint32 value) {
  _set_bit(1);
  requester_ = value;
}

// optional uint32 Flag = 3;
inline bool CMessagePlayerOnLineFriendRequest::has_flag() const {
  return _has_bit(2);
}
inline void CMessagePlayerOnLineFriendRequest::clear_flag() {
  flag_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerOnLineFriendRequest::flag() const {
  return flag_;
}
inline void CMessagePlayerOnLineFriendRequest::set_flag(::google::protobuf::uint32 value) {
  _set_bit(2);
  flag_ = value;
}

// -------------------------------------------------------------------

// PBSinglePlayerInfo

// optional uint32 CharID = 1;
inline bool PBSinglePlayerInfo::has_charid() const {
  return _has_bit(0);
}
inline void PBSinglePlayerInfo::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSinglePlayerInfo::charid() const {
  return charid_;
}
inline void PBSinglePlayerInfo::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Status = 2;
inline bool PBSinglePlayerInfo::has_status() const {
  return _has_bit(1);
}
inline void PBSinglePlayerInfo::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSinglePlayerInfo::status() const {
  return status_;
}
inline void PBSinglePlayerInfo::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// optional string Name = 3;
inline bool PBSinglePlayerInfo::has_name() const {
  return _has_bit(2);
}
inline void PBSinglePlayerInfo::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBSinglePlayerInfo::name() const {
  return *name_;
}
inline void PBSinglePlayerInfo::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSinglePlayerInfo::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSinglePlayerInfo::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSinglePlayerInfo::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Sex = 4;
inline bool PBSinglePlayerInfo::has_sex() const {
  return _has_bit(3);
}
inline void PBSinglePlayerInfo::clear_sex() {
  sex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSinglePlayerInfo::sex() const {
  return sex_;
}
inline void PBSinglePlayerInfo::set_sex(::google::protobuf::uint32 value) {
  _set_bit(3);
  sex_ = value;
}

// optional uint32 Face = 5;
inline bool PBSinglePlayerInfo::has_face() const {
  return _has_bit(4);
}
inline void PBSinglePlayerInfo::clear_face() {
  face_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBSinglePlayerInfo::face() const {
  return face_;
}
inline void PBSinglePlayerInfo::set_face(::google::protobuf::uint32 value) {
  _set_bit(4);
  face_ = value;
}

// optional uint32 Nation = 6;
inline bool PBSinglePlayerInfo::has_nation() const {
  return _has_bit(5);
}
inline void PBSinglePlayerInfo::clear_nation() {
  nation_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBSinglePlayerInfo::nation() const {
  return nation_;
}
inline void PBSinglePlayerInfo::set_nation(::google::protobuf::uint32 value) {
  _set_bit(5);
  nation_ = value;
}

// optional uint32 VipFlag = 7;
inline bool PBSinglePlayerInfo::has_vipflag() const {
  return _has_bit(6);
}
inline void PBSinglePlayerInfo::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBSinglePlayerInfo::vipflag() const {
  return vipflag_;
}
inline void PBSinglePlayerInfo::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(6);
  vipflag_ = value;
}

// optional uint32 noExist = 8;
inline bool PBSinglePlayerInfo::has_noexist() const {
  return _has_bit(7);
}
inline void PBSinglePlayerInfo::clear_noexist() {
  noexist_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBSinglePlayerInfo::noexist() const {
  return noexist_;
}
inline void PBSinglePlayerInfo::set_noexist(::google::protobuf::uint32 value) {
  _set_bit(7);
  noexist_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerOnLineFriendResponse

// repeated .PBSinglePlayerInfo Friends = 1;
inline int CMessagePlayerOnLineFriendResponse::friends_size() const {
  return friends_.size();
}
inline void CMessagePlayerOnLineFriendResponse::clear_friends() {
  friends_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSinglePlayerInfo >&
CMessagePlayerOnLineFriendResponse::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSinglePlayerInfo >*
CMessagePlayerOnLineFriendResponse::mutable_friends() {
  return &friends_;
}
inline const ::PBSinglePlayerInfo& CMessagePlayerOnLineFriendResponse::friends(int index) const {
  return friends_.Get(index);
}
inline ::PBSinglePlayerInfo* CMessagePlayerOnLineFriendResponse::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::PBSinglePlayerInfo* CMessagePlayerOnLineFriendResponse::add_friends() {
  return friends_.Add();
}

// optional uint32 Requester = 2;
inline bool CMessagePlayerOnLineFriendResponse::has_requester() const {
  return _has_bit(1);
}
inline void CMessagePlayerOnLineFriendResponse::clear_requester() {
  requester_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerOnLineFriendResponse::requester() const {
  return requester_;
}
inline void CMessagePlayerOnLineFriendResponse::set_requester(::google::protobuf::uint32 value) {
  _set_bit(1);
  requester_ = value;
}

// optional uint32 Flag = 3;
inline bool CMessagePlayerOnLineFriendResponse::has_flag() const {
  return _has_bit(2);
}
inline void CMessagePlayerOnLineFriendResponse::clear_flag() {
  flag_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerOnLineFriendResponse::flag() const {
  return flag_;
}
inline void CMessagePlayerOnLineFriendResponse::set_flag(::google::protobuf::uint32 value) {
  _set_bit(2);
  flag_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerChangeStatusNotice

// optional uint32 CharID = 1;
inline bool CMessagePlayerChangeStatusNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessagePlayerChangeStatusNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerChangeStatusNotice::charid() const {
  return charid_;
}
inline void CMessagePlayerChangeStatusNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Status = 2;
inline bool CMessagePlayerChangeStatusNotice::has_status() const {
  return _has_bit(1);
}
inline void CMessagePlayerChangeStatusNotice::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerChangeStatusNotice::status() const {
  return status_;
}
inline void CMessagePlayerChangeStatusNotice::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// -------------------------------------------------------------------

// CMessageGameHeartBeatNotice

// optional uint32 ServerID = 1;
inline bool CMessageGameHeartBeatNotice::has_serverid() const {
  return _has_bit(0);
}
inline void CMessageGameHeartBeatNotice::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGameHeartBeatNotice::serverid() const {
  return serverid_;
}
inline void CMessageGameHeartBeatNotice::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(0);
  serverid_ = value;
}

// repeated uint32 CharIDs = 2;
inline int CMessageGameHeartBeatNotice::charids_size() const {
  return charids_.size();
}
inline void CMessageGameHeartBeatNotice::clear_charids() {
  charids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGameHeartBeatNotice::charids() const {
  return charids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGameHeartBeatNotice::mutable_charids() {
  return &charids_;
}
inline ::google::protobuf::uint32 CMessageGameHeartBeatNotice::charids(int index) const {
  return charids_.Get(index);
}
inline void CMessageGameHeartBeatNotice::set_charids(int index, ::google::protobuf::uint32 value) {
  charids_.Set(index, value);
}
inline void CMessageGameHeartBeatNotice::add_charids(::google::protobuf::uint32 value) {
  charids_.Add(value);
}

// repeated uint32 ExternalCharIDs = 3;
inline int CMessageGameHeartBeatNotice::externalcharids_size() const {
  return externalcharids_.size();
}
inline void CMessageGameHeartBeatNotice::clear_externalcharids() {
  externalcharids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGameHeartBeatNotice::externalcharids() const {
  return externalcharids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGameHeartBeatNotice::mutable_externalcharids() {
  return &externalcharids_;
}
inline ::google::protobuf::uint32 CMessageGameHeartBeatNotice::externalcharids(int index) const {
  return externalcharids_.Get(index);
}
inline void CMessageGameHeartBeatNotice::set_externalcharids(int index, ::google::protobuf::uint32 value) {
  externalcharids_.Set(index, value);
}
inline void CMessageGameHeartBeatNotice::add_externalcharids(::google::protobuf::uint32 value) {
  externalcharids_.Add(value);
}

// -------------------------------------------------------------------

// CMessageERatingProtoStream

// optional uint32 Length = 1;
inline bool CMessageERatingProtoStream::has_length() const {
  return _has_bit(0);
}
inline void CMessageERatingProtoStream::clear_length() {
  length_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageERatingProtoStream::length() const {
  return length_;
}
inline void CMessageERatingProtoStream::set_length(::google::protobuf::uint32 value) {
  _set_bit(0);
  length_ = value;
}

// optional bytes buffer = 2;
inline bool CMessageERatingProtoStream::has_buffer() const {
  return _has_bit(1);
}
inline void CMessageERatingProtoStream::clear_buffer() {
  if (buffer_ != &_default_buffer_) {
    buffer_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageERatingProtoStream::buffer() const {
  return *buffer_;
}
inline void CMessageERatingProtoStream::set_buffer(const ::std::string& value) {
  _set_bit(1);
  if (buffer_ == &_default_buffer_) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void CMessageERatingProtoStream::set_buffer(const char* value) {
  _set_bit(1);
  if (buffer_ == &_default_buffer_) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void CMessageERatingProtoStream::set_buffer(const void* value, size_t size) {
  _set_bit(1);
  if (buffer_ == &_default_buffer_) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageERatingProtoStream::mutable_buffer() {
  _set_bit(1);
  if (buffer_ == &_default_buffer_) {
    buffer_ = new ::std::string;
  }
  return buffer_;
}

// -------------------------------------------------------------------

// CMessageERatingStateNotice

// optional uint32 GatewayID = 1;
inline bool CMessageERatingStateNotice::has_gatewayid() const {
  return _has_bit(0);
}
inline void CMessageERatingStateNotice::clear_gatewayid() {
  gatewayid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageERatingStateNotice::gatewayid() const {
  return gatewayid_;
}
inline void CMessageERatingStateNotice::set_gatewayid(::google::protobuf::uint32 value) {
  _set_bit(0);
  gatewayid_ = value;
}

// optional uint32 binded = 2;
inline bool CMessageERatingStateNotice::has_binded() const {
  return _has_bit(1);
}
inline void CMessageERatingStateNotice::clear_binded() {
  binded_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageERatingStateNotice::binded() const {
  return binded_;
}
inline void CMessageERatingStateNotice::set_binded(::google::protobuf::uint32 value) {
  _set_bit(1);
  binded_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateGateTeamRequest

// optional uint32 CharID = 1;
inline bool CMessageCreateGateTeamRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCreateGateTeamRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateGateTeamRequest::charid() const {
  return charid_;
}
inline void CMessageCreateGateTeamRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateGateTeamResponse

// optional uint32 CharID = 1;
inline bool CMessageCreateGateTeamResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCreateGateTeamResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateGateTeamResponse::charid() const {
  return charid_;
}
inline void CMessageCreateGateTeamResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 TeamID = 2;
inline bool CMessageCreateGateTeamResponse::has_teamid() const {
  return _has_bit(1);
}
inline void CMessageCreateGateTeamResponse::clear_teamid() {
  teamid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCreateGateTeamResponse::teamid() const {
  return teamid_;
}
inline void CMessageCreateGateTeamResponse::set_teamid(::google::protobuf::uint32 value) {
  _set_bit(1);
  teamid_ = value;
}

// -------------------------------------------------------------------

// CMessageJoinGateTeamRequest

// optional uint32 SrcCharID = 1;
inline bool CMessageJoinGateTeamRequest::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessageJoinGateTeamRequest::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamRequest::srccharid() const {
  return srccharid_;
}
inline void CMessageJoinGateTeamRequest::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// optional uint32 DesCharID = 2;
inline bool CMessageJoinGateTeamRequest::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageJoinGateTeamRequest::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamRequest::descharid() const {
  return descharid_;
}
inline void CMessageJoinGateTeamRequest::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional uint32 SrcNation = 3;
inline bool CMessageJoinGateTeamRequest::has_srcnation() const {
  return _has_bit(2);
}
inline void CMessageJoinGateTeamRequest::clear_srcnation() {
  srcnation_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamRequest::srcnation() const {
  return srcnation_;
}
inline void CMessageJoinGateTeamRequest::set_srcnation(::google::protobuf::uint32 value) {
  _set_bit(2);
  srcnation_ = value;
}

// optional uint32 DesNaiton = 4;
inline bool CMessageJoinGateTeamRequest::has_desnaiton() const {
  return _has_bit(3);
}
inline void CMessageJoinGateTeamRequest::clear_desnaiton() {
  desnaiton_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamRequest::desnaiton() const {
  return desnaiton_;
}
inline void CMessageJoinGateTeamRequest::set_desnaiton(::google::protobuf::uint32 value) {
  _set_bit(3);
  desnaiton_ = value;
}

// -------------------------------------------------------------------

// CMessageJoinGateTeamResponse

// optional uint32 DesCharID = 1;
inline bool CMessageJoinGateTeamResponse::has_descharid() const {
  return _has_bit(0);
}
inline void CMessageJoinGateTeamResponse::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamResponse::descharid() const {
  return descharid_;
}
inline void CMessageJoinGateTeamResponse::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  descharid_ = value;
}

// optional .PBTeamItem Item = 2;
inline bool CMessageJoinGateTeamResponse::has_item() const {
  return _has_bit(1);
}
inline void CMessageJoinGateTeamResponse::clear_item() {
  if (item_ != NULL) item_->::PBTeamItem::Clear();
  _clear_bit(1);
}
inline const ::PBTeamItem& CMessageJoinGateTeamResponse::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBTeamItem* CMessageJoinGateTeamResponse::mutable_item() {
  _set_bit(1);
  if (item_ == NULL) item_ = new ::PBTeamItem;
  return item_;
}

// -------------------------------------------------------------------

// CMessageRequestJoinReply

// optional uint32 SrcCharID = 1;
inline bool CMessageRequestJoinReply::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessageRequestJoinReply::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRequestJoinReply::srccharid() const {
  return srccharid_;
}
inline void CMessageRequestJoinReply::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// optional uint32 DesCharID = 2;
inline bool CMessageRequestJoinReply::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageRequestJoinReply::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRequestJoinReply::descharid() const {
  return descharid_;
}
inline void CMessageRequestJoinReply::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional uint32 RtnCode = 3;
inline bool CMessageRequestJoinReply::has_rtncode() const {
  return _has_bit(2);
}
inline void CMessageRequestJoinReply::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRequestJoinReply::rtncode() const {
  return rtncode_;
}
inline void CMessageRequestJoinReply::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(2);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageJoinGateTeamInvite

// optional uint32 SrcCharID = 1;
inline bool CMessageJoinGateTeamInvite::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessageJoinGateTeamInvite::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamInvite::srccharid() const {
  return srccharid_;
}
inline void CMessageJoinGateTeamInvite::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// optional uint32 DesCharID = 2;
inline bool CMessageJoinGateTeamInvite::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageJoinGateTeamInvite::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamInvite::descharid() const {
  return descharid_;
}
inline void CMessageJoinGateTeamInvite::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional uint32 SrcNation = 3;
inline bool CMessageJoinGateTeamInvite::has_srcnation() const {
  return _has_bit(2);
}
inline void CMessageJoinGateTeamInvite::clear_srcnation() {
  srcnation_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamInvite::srcnation() const {
  return srcnation_;
}
inline void CMessageJoinGateTeamInvite::set_srcnation(::google::protobuf::uint32 value) {
  _set_bit(2);
  srcnation_ = value;
}

// optional uint32 DesNaiton = 4;
inline bool CMessageJoinGateTeamInvite::has_desnaiton() const {
  return _has_bit(3);
}
inline void CMessageJoinGateTeamInvite::clear_desnaiton() {
  desnaiton_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageJoinGateTeamInvite::desnaiton() const {
  return desnaiton_;
}
inline void CMessageJoinGateTeamInvite::set_desnaiton(::google::protobuf::uint32 value) {
  _set_bit(3);
  desnaiton_ = value;
}

// -------------------------------------------------------------------

// CMessageJoinTeamInviteResponse

// optional uint32 DesCharID = 1;
inline bool CMessageJoinTeamInviteResponse::has_descharid() const {
  return _has_bit(0);
}
inline void CMessageJoinTeamInviteResponse::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageJoinTeamInviteResponse::descharid() const {
  return descharid_;
}
inline void CMessageJoinTeamInviteResponse::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  descharid_ = value;
}

// optional uint32 TeamID = 2;
inline bool CMessageJoinTeamInviteResponse::has_teamid() const {
  return _has_bit(1);
}
inline void CMessageJoinTeamInviteResponse::clear_teamid() {
  teamid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageJoinTeamInviteResponse::teamid() const {
  return teamid_;
}
inline void CMessageJoinTeamInviteResponse::set_teamid(::google::protobuf::uint32 value) {
  _set_bit(1);
  teamid_ = value;
}

// optional uint32 SrcCharID = 3;
inline bool CMessageJoinTeamInviteResponse::has_srccharid() const {
  return _has_bit(2);
}
inline void CMessageJoinTeamInviteResponse::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageJoinTeamInviteResponse::srccharid() const {
  return srccharid_;
}
inline void CMessageJoinTeamInviteResponse::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srccharid_ = value;
}

// optional string SrcName = 4;
inline bool CMessageJoinTeamInviteResponse::has_srcname() const {
  return _has_bit(3);
}
inline void CMessageJoinTeamInviteResponse::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageJoinTeamInviteResponse::srcname() const {
  return *srcname_;
}
inline void CMessageJoinTeamInviteResponse::set_srcname(const ::std::string& value) {
  _set_bit(3);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageJoinTeamInviteResponse::set_srcname(const char* value) {
  _set_bit(3);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageJoinTeamInviteResponse::set_srcname(const char* value, size_t size) {
  _set_bit(3);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageJoinTeamInviteResponse::mutable_srcname() {
  _set_bit(3);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// optional string HeadName = 5;
inline bool CMessageJoinTeamInviteResponse::has_headname() const {
  return _has_bit(4);
}
inline void CMessageJoinTeamInviteResponse::clear_headname() {
  if (headname_ != &_default_headname_) {
    headname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageJoinTeamInviteResponse::headname() const {
  return *headname_;
}
inline void CMessageJoinTeamInviteResponse::set_headname(const ::std::string& value) {
  _set_bit(4);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(value);
}
inline void CMessageJoinTeamInviteResponse::set_headname(const char* value) {
  _set_bit(4);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(value);
}
inline void CMessageJoinTeamInviteResponse::set_headname(const char* value, size_t size) {
  _set_bit(4);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageJoinTeamInviteResponse::mutable_headname() {
  _set_bit(4);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  return headname_;
}

// optional .PBTeamInfo TeamInfo = 6;
inline bool CMessageJoinTeamInviteResponse::has_teaminfo() const {
  return _has_bit(5);
}
inline void CMessageJoinTeamInviteResponse::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::PBTeamInfo::Clear();
  _clear_bit(5);
}
inline const ::PBTeamInfo& CMessageJoinTeamInviteResponse::teaminfo() const {
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::PBTeamInfo* CMessageJoinTeamInviteResponse::mutable_teaminfo() {
  _set_bit(5);
  if (teaminfo_ == NULL) teaminfo_ = new ::PBTeamInfo;
  return teaminfo_;
}

// -------------------------------------------------------------------

// CMessageInviteJoinReply

// optional uint32 SrcCharID = 1;
inline bool CMessageInviteJoinReply::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessageInviteJoinReply::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageInviteJoinReply::srccharid() const {
  return srccharid_;
}
inline void CMessageInviteJoinReply::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// optional uint32 DesCharID = 2;
inline bool CMessageInviteJoinReply::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageInviteJoinReply::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteJoinReply::descharid() const {
  return descharid_;
}
inline void CMessageInviteJoinReply::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional uint32 TeamID = 3;
inline bool CMessageInviteJoinReply::has_teamid() const {
  return _has_bit(2);
}
inline void CMessageInviteJoinReply::clear_teamid() {
  teamid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageInviteJoinReply::teamid() const {
  return teamid_;
}
inline void CMessageInviteJoinReply::set_teamid(::google::protobuf::uint32 value) {
  _set_bit(2);
  teamid_ = value;
}

// optional uint32 RtnCode = 4;
inline bool CMessageInviteJoinReply::has_rtncode() const {
  return _has_bit(3);
}
inline void CMessageInviteJoinReply::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageInviteJoinReply::rtncode() const {
  return rtncode_;
}
inline void CMessageInviteJoinReply::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(3);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageInvite2Request

// optional .PBTeamItem SrcItem = 1;
inline bool CMessageInvite2Request::has_srcitem() const {
  return _has_bit(0);
}
inline void CMessageInvite2Request::clear_srcitem() {
  if (srcitem_ != NULL) srcitem_->::PBTeamItem::Clear();
  _clear_bit(0);
}
inline const ::PBTeamItem& CMessageInvite2Request::srcitem() const {
  return srcitem_ != NULL ? *srcitem_ : *default_instance_->srcitem_;
}
inline ::PBTeamItem* CMessageInvite2Request::mutable_srcitem() {
  _set_bit(0);
  if (srcitem_ == NULL) srcitem_ = new ::PBTeamItem;
  return srcitem_;
}

// optional uint32 DesCharID = 2;
inline bool CMessageInvite2Request::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageInvite2Request::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInvite2Request::descharid() const {
  return descharid_;
}
inline void CMessageInvite2Request::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional string InviterName = 3;
inline bool CMessageInvite2Request::has_invitername() const {
  return _has_bit(2);
}
inline void CMessageInvite2Request::clear_invitername() {
  if (invitername_ != &_default_invitername_) {
    invitername_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageInvite2Request::invitername() const {
  return *invitername_;
}
inline void CMessageInvite2Request::set_invitername(const ::std::string& value) {
  _set_bit(2);
  if (invitername_ == &_default_invitername_) {
    invitername_ = new ::std::string;
  }
  invitername_->assign(value);
}
inline void CMessageInvite2Request::set_invitername(const char* value) {
  _set_bit(2);
  if (invitername_ == &_default_invitername_) {
    invitername_ = new ::std::string;
  }
  invitername_->assign(value);
}
inline void CMessageInvite2Request::set_invitername(const char* value, size_t size) {
  _set_bit(2);
  if (invitername_ == &_default_invitername_) {
    invitername_ = new ::std::string;
  }
  invitername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageInvite2Request::mutable_invitername() {
  _set_bit(2);
  if (invitername_ == &_default_invitername_) {
    invitername_ = new ::std::string;
  }
  return invitername_;
}

// optional uint32 InviterCharID = 4;
inline bool CMessageInvite2Request::has_invitercharid() const {
  return _has_bit(3);
}
inline void CMessageInvite2Request::clear_invitercharid() {
  invitercharid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageInvite2Request::invitercharid() const {
  return invitercharid_;
}
inline void CMessageInvite2Request::set_invitercharid(::google::protobuf::uint32 value) {
  _set_bit(3);
  invitercharid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickoutGateTeamRequest

// optional uint32 HeadCharID = 1;
inline bool CMessageKickoutGateTeamRequest::has_headcharid() const {
  return _has_bit(0);
}
inline void CMessageKickoutGateTeamRequest::clear_headcharid() {
  headcharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickoutGateTeamRequest::headcharid() const {
  return headcharid_;
}
inline void CMessageKickoutGateTeamRequest::set_headcharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  headcharid_ = value;
}

// optional uint32 MemberCharID = 2;
inline bool CMessageKickoutGateTeamRequest::has_membercharid() const {
  return _has_bit(1);
}
inline void CMessageKickoutGateTeamRequest::clear_membercharid() {
  membercharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickoutGateTeamRequest::membercharid() const {
  return membercharid_;
}
inline void CMessageKickoutGateTeamRequest::set_membercharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  membercharid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeHeaderRequest

// optional uint32 OldHeader = 1;
inline bool CMessageChangeHeaderRequest::has_oldheader() const {
  return _has_bit(0);
}
inline void CMessageChangeHeaderRequest::clear_oldheader() {
  oldheader_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeHeaderRequest::oldheader() const {
  return oldheader_;
}
inline void CMessageChangeHeaderRequest::set_oldheader(::google::protobuf::uint32 value) {
  _set_bit(0);
  oldheader_ = value;
}

// optional uint32 NewHeader = 2;
inline bool CMessageChangeHeaderRequest::has_newheader() const {
  return _has_bit(1);
}
inline void CMessageChangeHeaderRequest::clear_newheader() {
  newheader_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeHeaderRequest::newheader() const {
  return newheader_;
}
inline void CMessageChangeHeaderRequest::set_newheader(::google::protobuf::uint32 value) {
  _set_bit(1);
  newheader_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeDistributeRequest

// optional uint32 CharID = 1;
inline bool CMessageChangeDistributeRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangeDistributeRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeDistributeRequest::charid() const {
  return charid_;
}
inline void CMessageChangeDistributeRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Mode = 2;
inline bool CMessageChangeDistributeRequest::has_mode() const {
  return _has_bit(1);
}
inline void CMessageChangeDistributeRequest::clear_mode() {
  mode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeDistributeRequest::mode() const {
  return mode_;
}
inline void CMessageChangeDistributeRequest::set_mode(::google::protobuf::uint32 value) {
  _set_bit(1);
  mode_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeDistributeResponse

// optional uint32 CharID = 1;
inline bool CMessageChangeDistributeResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangeDistributeResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeDistributeResponse::charid() const {
  return charid_;
}
inline void CMessageChangeDistributeResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Mode = 2;
inline bool CMessageChangeDistributeResponse::has_mode() const {
  return _has_bit(1);
}
inline void CMessageChangeDistributeResponse::clear_mode() {
  mode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeDistributeResponse::mode() const {
  return mode_;
}
inline void CMessageChangeDistributeResponse::set_mode(::google::protobuf::uint32 value) {
  _set_bit(1);
  mode_ = value;
}

// -------------------------------------------------------------------

// CMessageLeaveGateTeamRequest

// optional uint32 CharID = 1;
inline bool CMessageLeaveGateTeamRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageLeaveGateTeamRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLeaveGateTeamRequest::charid() const {
  return charid_;
}
inline void CMessageLeaveGateTeamRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageEndGateTeamRequest

// optional uint32 CharID = 1;
inline bool CMessageEndGateTeamRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageEndGateTeamRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEndGateTeamRequest::charid() const {
  return charid_;
}
inline void CMessageEndGateTeamRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageNotifySceneToUpdateTeam

// optional uint32 Code = 1;
inline bool CMessageNotifySceneToUpdateTeam::has_code() const {
  return _has_bit(0);
}
inline void CMessageNotifySceneToUpdateTeam::clear_code() {
  code_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageNotifySceneToUpdateTeam::code() const {
  return code_;
}
inline void CMessageNotifySceneToUpdateTeam::set_code(::google::protobuf::uint32 value) {
  _set_bit(0);
  code_ = value;
}

// optional uint32 DesCharID = 2;
inline bool CMessageNotifySceneToUpdateTeam::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageNotifySceneToUpdateTeam::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageNotifySceneToUpdateTeam::descharid() const {
  return descharid_;
}
inline void CMessageNotifySceneToUpdateTeam::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional uint32 HeadID = 3;
inline bool CMessageNotifySceneToUpdateTeam::has_headid() const {
  return _has_bit(2);
}
inline void CMessageNotifySceneToUpdateTeam::clear_headid() {
  headid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageNotifySceneToUpdateTeam::headid() const {
  return headid_;
}
inline void CMessageNotifySceneToUpdateTeam::set_headid(::google::protobuf::uint32 value) {
  _set_bit(2);
  headid_ = value;
}

// optional .PBTeamItem Item = 4;
inline bool CMessageNotifySceneToUpdateTeam::has_item() const {
  return _has_bit(3);
}
inline void CMessageNotifySceneToUpdateTeam::clear_item() {
  if (item_ != NULL) item_->::PBTeamItem::Clear();
  _clear_bit(3);
}
inline const ::PBTeamItem& CMessageNotifySceneToUpdateTeam::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBTeamItem* CMessageNotifySceneToUpdateTeam::mutable_item() {
  _set_bit(3);
  if (item_ == NULL) item_ = new ::PBTeamItem;
  return item_;
}

// -------------------------------------------------------------------

// CMessageNotifySceneToSendTeamList

// optional uint32 DesCharID = 1;
inline bool CMessageNotifySceneToSendTeamList::has_descharid() const {
  return _has_bit(0);
}
inline void CMessageNotifySceneToSendTeamList::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageNotifySceneToSendTeamList::descharid() const {
  return descharid_;
}
inline void CMessageNotifySceneToSendTeamList::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  descharid_ = value;
}

// optional .PBTeamInfo TeamInfo = 2;
inline bool CMessageNotifySceneToSendTeamList::has_teaminfo() const {
  return _has_bit(1);
}
inline void CMessageNotifySceneToSendTeamList::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::PBTeamInfo::Clear();
  _clear_bit(1);
}
inline const ::PBTeamInfo& CMessageNotifySceneToSendTeamList::teaminfo() const {
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
}
inline ::PBTeamInfo* CMessageNotifySceneToSendTeamList::mutable_teaminfo() {
  _set_bit(1);
  if (teaminfo_ == NULL) teaminfo_ = new ::PBTeamInfo;
  return teaminfo_;
}

// -------------------------------------------------------------------

// CMessageNotifyErrToScene

// optional uint32 DesCharID = 1;
inline bool CMessageNotifyErrToScene::has_descharid() const {
  return _has_bit(0);
}
inline void CMessageNotifyErrToScene::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageNotifyErrToScene::descharid() const {
  return descharid_;
}
inline void CMessageNotifyErrToScene::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  descharid_ = value;
}

// optional uint32 Code = 2;
inline bool CMessageNotifyErrToScene::has_code() const {
  return _has_bit(1);
}
inline void CMessageNotifyErrToScene::clear_code() {
  code_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageNotifyErrToScene::code() const {
  return code_;
}
inline void CMessageNotifyErrToScene::set_code(::google::protobuf::uint32 value) {
  _set_bit(1);
  code_ = value;
}

// optional string Param1 = 3;
inline bool CMessageNotifyErrToScene::has_param1() const {
  return _has_bit(2);
}
inline void CMessageNotifyErrToScene::clear_param1() {
  if (param1_ != &_default_param1_) {
    param1_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageNotifyErrToScene::param1() const {
  return *param1_;
}
inline void CMessageNotifyErrToScene::set_param1(const ::std::string& value) {
  _set_bit(2);
  if (param1_ == &_default_param1_) {
    param1_ = new ::std::string;
  }
  param1_->assign(value);
}
inline void CMessageNotifyErrToScene::set_param1(const char* value) {
  _set_bit(2);
  if (param1_ == &_default_param1_) {
    param1_ = new ::std::string;
  }
  param1_->assign(value);
}
inline void CMessageNotifyErrToScene::set_param1(const char* value, size_t size) {
  _set_bit(2);
  if (param1_ == &_default_param1_) {
    param1_ = new ::std::string;
  }
  param1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageNotifyErrToScene::mutable_param1() {
  _set_bit(2);
  if (param1_ == &_default_param1_) {
    param1_ = new ::std::string;
  }
  return param1_;
}

// optional string Param2 = 4;
inline bool CMessageNotifyErrToScene::has_param2() const {
  return _has_bit(3);
}
inline void CMessageNotifyErrToScene::clear_param2() {
  if (param2_ != &_default_param2_) {
    param2_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageNotifyErrToScene::param2() const {
  return *param2_;
}
inline void CMessageNotifyErrToScene::set_param2(const ::std::string& value) {
  _set_bit(3);
  if (param2_ == &_default_param2_) {
    param2_ = new ::std::string;
  }
  param2_->assign(value);
}
inline void CMessageNotifyErrToScene::set_param2(const char* value) {
  _set_bit(3);
  if (param2_ == &_default_param2_) {
    param2_ = new ::std::string;
  }
  param2_->assign(value);
}
inline void CMessageNotifyErrToScene::set_param2(const char* value, size_t size) {
  _set_bit(3);
  if (param2_ == &_default_param2_) {
    param2_ = new ::std::string;
  }
  param2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageNotifyErrToScene::mutable_param2() {
  _set_bit(3);
  if (param2_ == &_default_param2_) {
    param2_ = new ::std::string;
  }
  return param2_;
}

// -------------------------------------------------------------------

// CMessageUpdateTeamPropertyRequest

// optional uint32 CharID = 1;
inline bool CMessageUpdateTeamPropertyRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUpdateTeamPropertyRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdateTeamPropertyRequest::charid() const {
  return charid_;
}
inline void CMessageUpdateTeamPropertyRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional .PBTeamInfo Info = 2;
inline bool CMessageUpdateTeamPropertyRequest::has_info() const {
  return _has_bit(1);
}
inline void CMessageUpdateTeamPropertyRequest::clear_info() {
  if (info_ != NULL) info_->::PBTeamInfo::Clear();
  _clear_bit(1);
}
inline const ::PBTeamInfo& CMessageUpdateTeamPropertyRequest::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::PBTeamInfo* CMessageUpdateTeamPropertyRequest::mutable_info() {
  _set_bit(1);
  if (info_ == NULL) info_ = new ::PBTeamInfo;
  return info_;
}

// -------------------------------------------------------------------

// CMessageUpdateTeamPropertyResponse

// optional uint32 CharID = 1;
inline bool CMessageUpdateTeamPropertyResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUpdateTeamPropertyResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdateTeamPropertyResponse::charid() const {
  return charid_;
}
inline void CMessageUpdateTeamPropertyResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional .PBTeamInfo Info = 2;
inline bool CMessageUpdateTeamPropertyResponse::has_info() const {
  return _has_bit(1);
}
inline void CMessageUpdateTeamPropertyResponse::clear_info() {
  if (info_ != NULL) info_->::PBTeamInfo::Clear();
  _clear_bit(1);
}
inline const ::PBTeamInfo& CMessageUpdateTeamPropertyResponse::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::PBTeamInfo* CMessageUpdateTeamPropertyResponse::mutable_info() {
  _set_bit(1);
  if (info_ == NULL) info_ = new ::PBTeamInfo;
  return info_;
}

// -------------------------------------------------------------------

// CMessageFollowRequest

// optional uint32 CharID = 1;
inline bool CMessageFollowRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFollowRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFollowRequest::charid() const {
  return charid_;
}
inline void CMessageFollowRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 ActionType = 2;
inline bool CMessageFollowRequest::has_actiontype() const {
  return _has_bit(1);
}
inline void CMessageFollowRequest::clear_actiontype() {
  actiontype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFollowRequest::actiontype() const {
  return actiontype_;
}
inline void CMessageFollowRequest::set_actiontype(::google::protobuf::uint32 value) {
  _set_bit(1);
  actiontype_ = value;
}

// optional uint32 ResultCode = 3;
inline bool CMessageFollowRequest::has_resultcode() const {
  return _has_bit(2);
}
inline void CMessageFollowRequest::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFollowRequest::resultcode() const {
  return resultcode_;
}
inline void CMessageFollowRequest::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(2);
  resultcode_ = value;
}

// -------------------------------------------------------------------

// CMessageFollowResponse

// optional uint32 CharID = 1;
inline bool CMessageFollowResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFollowResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFollowResponse::charid() const {
  return charid_;
}
inline void CMessageFollowResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 HeadID = 2;
inline bool CMessageFollowResponse::has_headid() const {
  return _has_bit(1);
}
inline void CMessageFollowResponse::clear_headid() {
  headid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFollowResponse::headid() const {
  return headid_;
}
inline void CMessageFollowResponse::set_headid(::google::protobuf::uint32 value) {
  _set_bit(1);
  headid_ = value;
}

// optional uint32 ActionType = 3;
inline bool CMessageFollowResponse::has_actiontype() const {
  return _has_bit(2);
}
inline void CMessageFollowResponse::clear_actiontype() {
  actiontype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFollowResponse::actiontype() const {
  return actiontype_;
}
inline void CMessageFollowResponse::set_actiontype(::google::protobuf::uint32 value) {
  _set_bit(2);
  actiontype_ = value;
}

// optional uint32 ResultCode = 4;
inline bool CMessageFollowResponse::has_resultcode() const {
  return _has_bit(3);
}
inline void CMessageFollowResponse::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageFollowResponse::resultcode() const {
  return resultcode_;
}
inline void CMessageFollowResponse::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(3);
  resultcode_ = value;
}

// -------------------------------------------------------------------

// CMessageSendClaimRecruitRequest

// optional uint32 CharID = 1;
inline bool CMessageSendClaimRecruitRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageSendClaimRecruitRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSendClaimRecruitRequest::charid() const {
  return charid_;
}
inline void CMessageSendClaimRecruitRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional .PBMsg Msg = 2;
inline bool CMessageSendClaimRecruitRequest::has_msg() const {
  return _has_bit(1);
}
inline void CMessageSendClaimRecruitRequest::clear_msg() {
  if (msg_ != NULL) msg_->::PBMsg::Clear();
  _clear_bit(1);
}
inline const ::PBMsg& CMessageSendClaimRecruitRequest::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::PBMsg* CMessageSendClaimRecruitRequest::mutable_msg() {
  _set_bit(1);
  if (msg_ == NULL) msg_ = new ::PBMsg;
  return msg_;
}

// optional uint32 ActionType = 3;
inline bool CMessageSendClaimRecruitRequest::has_actiontype() const {
  return _has_bit(2);
}
inline void CMessageSendClaimRecruitRequest::clear_actiontype() {
  actiontype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSendClaimRecruitRequest::actiontype() const {
  return actiontype_;
}
inline void CMessageSendClaimRecruitRequest::set_actiontype(::google::protobuf::uint32 value) {
  _set_bit(2);
  actiontype_ = value;
}

// -------------------------------------------------------------------

// CMessageSendClaimRecruitResponse

// optional uint32 CharID = 1;
inline bool CMessageSendClaimRecruitResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageSendClaimRecruitResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSendClaimRecruitResponse::charid() const {
  return charid_;
}
inline void CMessageSendClaimRecruitResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional .PBMsg Msg = 2;
inline bool CMessageSendClaimRecruitResponse::has_msg() const {
  return _has_bit(1);
}
inline void CMessageSendClaimRecruitResponse::clear_msg() {
  if (msg_ != NULL) msg_->::PBMsg::Clear();
  _clear_bit(1);
}
inline const ::PBMsg& CMessageSendClaimRecruitResponse::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::PBMsg* CMessageSendClaimRecruitResponse::mutable_msg() {
  _set_bit(1);
  if (msg_ == NULL) msg_ = new ::PBMsg;
  return msg_;
}

// optional uint32 ActionType = 3;
inline bool CMessageSendClaimRecruitResponse::has_actiontype() const {
  return _has_bit(2);
}
inline void CMessageSendClaimRecruitResponse::clear_actiontype() {
  actiontype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSendClaimRecruitResponse::actiontype() const {
  return actiontype_;
}
inline void CMessageSendClaimRecruitResponse::set_actiontype(::google::protobuf::uint32 value) {
  _set_bit(2);
  actiontype_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryClaimRecruitRequest

// optional uint32 CharID = 1;
inline bool CMessageQueryClaimRecruitRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryClaimRecruitRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::charid() const {
  return charid_;
}
inline void CMessageQueryClaimRecruitRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 ActionType = 2;
inline bool CMessageQueryClaimRecruitRequest::has_actiontype() const {
  return _has_bit(1);
}
inline void CMessageQueryClaimRecruitRequest::clear_actiontype() {
  actiontype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::actiontype() const {
  return actiontype_;
}
inline void CMessageQueryClaimRecruitRequest::set_actiontype(::google::protobuf::uint32 value) {
  _set_bit(1);
  actiontype_ = value;
}

// optional uint32 RootCondition = 3;
inline bool CMessageQueryClaimRecruitRequest::has_rootcondition() const {
  return _has_bit(2);
}
inline void CMessageQueryClaimRecruitRequest::clear_rootcondition() {
  rootcondition_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::rootcondition() const {
  return rootcondition_;
}
inline void CMessageQueryClaimRecruitRequest::set_rootcondition(::google::protobuf::uint32 value) {
  _set_bit(2);
  rootcondition_ = value;
}

// optional uint32 SubCondition = 4;
inline bool CMessageQueryClaimRecruitRequest::has_subcondition() const {
  return _has_bit(3);
}
inline void CMessageQueryClaimRecruitRequest::clear_subcondition() {
  subcondition_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::subcondition() const {
  return subcondition_;
}
inline void CMessageQueryClaimRecruitRequest::set_subcondition(::google::protobuf::uint32 value) {
  _set_bit(3);
  subcondition_ = value;
}

// optional uint32 Level = 5;
inline bool CMessageQueryClaimRecruitRequest::has_level() const {
  return _has_bit(4);
}
inline void CMessageQueryClaimRecruitRequest::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::level() const {
  return level_;
}
inline void CMessageQueryClaimRecruitRequest::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint32 Metier = 6;
inline bool CMessageQueryClaimRecruitRequest::has_metier() const {
  return _has_bit(5);
}
inline void CMessageQueryClaimRecruitRequest::clear_metier() {
  metier_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::metier() const {
  return metier_;
}
inline void CMessageQueryClaimRecruitRequest::set_metier(::google::protobuf::uint32 value) {
  _set_bit(5);
  metier_ = value;
}

// optional uint32 MinLevel = 7;
inline bool CMessageQueryClaimRecruitRequest::has_minlevel() const {
  return _has_bit(6);
}
inline void CMessageQueryClaimRecruitRequest::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::minlevel() const {
  return minlevel_;
}
inline void CMessageQueryClaimRecruitRequest::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(6);
  minlevel_ = value;
}

// optional uint32 MaxLevel = 8;
inline bool CMessageQueryClaimRecruitRequest::has_maxlevel() const {
  return _has_bit(7);
}
inline void CMessageQueryClaimRecruitRequest::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::maxlevel() const {
  return maxlevel_;
}
inline void CMessageQueryClaimRecruitRequest::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(7);
  maxlevel_ = value;
}

// optional uint32 Nationality = 9;
inline bool CMessageQueryClaimRecruitRequest::has_nationality() const {
  return _has_bit(8);
}
inline void CMessageQueryClaimRecruitRequest::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::nationality() const {
  return nationality_;
}
inline void CMessageQueryClaimRecruitRequest::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(8);
  nationality_ = value;
}

// optional uint32 PageIndex = 10;
inline bool CMessageQueryClaimRecruitRequest::has_pageindex() const {
  return _has_bit(9);
}
inline void CMessageQueryClaimRecruitRequest::clear_pageindex() {
  pageindex_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitRequest::pageindex() const {
  return pageindex_;
}
inline void CMessageQueryClaimRecruitRequest::set_pageindex(::google::protobuf::uint32 value) {
  _set_bit(9);
  pageindex_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryClaimRecruitResponse

// optional uint32 CharID = 1;
inline bool CMessageQueryClaimRecruitResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryClaimRecruitResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitResponse::charid() const {
  return charid_;
}
inline void CMessageQueryClaimRecruitResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// repeated .PBMsg Msg = 2;
inline int CMessageQueryClaimRecruitResponse::msg_size() const {
  return msg_.size();
}
inline void CMessageQueryClaimRecruitResponse::clear_msg() {
  msg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMsg >&
CMessageQueryClaimRecruitResponse::msg() const {
  return msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMsg >*
CMessageQueryClaimRecruitResponse::mutable_msg() {
  return &msg_;
}
inline const ::PBMsg& CMessageQueryClaimRecruitResponse::msg(int index) const {
  return msg_.Get(index);
}
inline ::PBMsg* CMessageQueryClaimRecruitResponse::mutable_msg(int index) {
  return msg_.Mutable(index);
}
inline ::PBMsg* CMessageQueryClaimRecruitResponse::add_msg() {
  return msg_.Add();
}

// optional uint32 PageIndex = 3;
inline bool CMessageQueryClaimRecruitResponse::has_pageindex() const {
  return _has_bit(2);
}
inline void CMessageQueryClaimRecruitResponse::clear_pageindex() {
  pageindex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitResponse::pageindex() const {
  return pageindex_;
}
inline void CMessageQueryClaimRecruitResponse::set_pageindex(::google::protobuf::uint32 value) {
  _set_bit(2);
  pageindex_ = value;
}

// optional uint32 TotalIndex = 4;
inline bool CMessageQueryClaimRecruitResponse::has_totalindex() const {
  return _has_bit(3);
}
inline void CMessageQueryClaimRecruitResponse::clear_totalindex() {
  totalindex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitResponse::totalindex() const {
  return totalindex_;
}
inline void CMessageQueryClaimRecruitResponse::set_totalindex(::google::protobuf::uint32 value) {
  _set_bit(3);
  totalindex_ = value;
}

// optional uint32 ActionType = 5;
inline bool CMessageQueryClaimRecruitResponse::has_actiontype() const {
  return _has_bit(4);
}
inline void CMessageQueryClaimRecruitResponse::clear_actiontype() {
  actiontype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageQueryClaimRecruitResponse::actiontype() const {
  return actiontype_;
}
inline void CMessageQueryClaimRecruitResponse::set_actiontype(::google::protobuf::uint32 value) {
  _set_bit(4);
  actiontype_ = value;
}

// -------------------------------------------------------------------

// CMessageDeleteClaimRecruitRequest

// optional uint32 CharID = 1;
inline bool CMessageDeleteClaimRecruitRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageDeleteClaimRecruitRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageDeleteClaimRecruitRequest::charid() const {
  return charid_;
}
inline void CMessageDeleteClaimRecruitRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 ActionType = 2;
inline bool CMessageDeleteClaimRecruitRequest::has_actiontype() const {
  return _has_bit(1);
}
inline void CMessageDeleteClaimRecruitRequest::clear_actiontype() {
  actiontype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDeleteClaimRecruitRequest::actiontype() const {
  return actiontype_;
}
inline void CMessageDeleteClaimRecruitRequest::set_actiontype(::google::protobuf::uint32 value) {
  _set_bit(1);
  actiontype_ = value;
}

// -------------------------------------------------------------------

// CMessageDeleteClaimRecruitResponse

// optional uint32 CharID = 1;
inline bool CMessageDeleteClaimRecruitResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageDeleteClaimRecruitResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageDeleteClaimRecruitResponse::charid() const {
  return charid_;
}
inline void CMessageDeleteClaimRecruitResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 ActionType = 2;
inline bool CMessageDeleteClaimRecruitResponse::has_actiontype() const {
  return _has_bit(1);
}
inline void CMessageDeleteClaimRecruitResponse::clear_actiontype() {
  actiontype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDeleteClaimRecruitResponse::actiontype() const {
  return actiontype_;
}
inline void CMessageDeleteClaimRecruitResponse::set_actiontype(::google::protobuf::uint32 value) {
  _set_bit(1);
  actiontype_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainGateTeamRequest

// optional uint32 CharID = 1;
inline bool CMessageObtainGateTeamRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageObtainGateTeamRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageObtainGateTeamRequest::charid() const {
  return charid_;
}
inline void CMessageObtainGateTeamRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageClearInvReqRecordRequest

// optional uint32 Type = 1;
inline bool CMessageClearInvReqRecordRequest::has_type() const {
  return _has_bit(0);
}
inline void CMessageClearInvReqRecordRequest::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageClearInvReqRecordRequest::type() const {
  return type_;
}
inline void CMessageClearInvReqRecordRequest::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageClearInvReqRecordRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageClearInvReqRecordRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageClearInvReqRecordRequest::charid() const {
  return charid_;
}
inline void CMessageClearInvReqRecordRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// PBMsg

// optional uint32 Type = 1;
inline bool PBMsg::has_type() const {
  return _has_bit(0);
}
inline void PBMsg::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMsg::type() const {
  return type_;
}
inline void PBMsg::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional uint32 CharID = 2;
inline bool PBMsg::has_charid() const {
  return _has_bit(1);
}
inline void PBMsg::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMsg::charid() const {
  return charid_;
}
inline void PBMsg::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional string Name = 3;
inline bool PBMsg::has_name() const {
  return _has_bit(2);
}
inline void PBMsg::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBMsg::name() const {
  return *name_;
}
inline void PBMsg::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBMsg::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBMsg::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMsg::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Metier = 4;
inline bool PBMsg::has_metier() const {
  return _has_bit(3);
}
inline void PBMsg::clear_metier() {
  metier_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMsg::metier() const {
  return metier_;
}
inline void PBMsg::set_metier(::google::protobuf::uint32 value) {
  _set_bit(3);
  metier_ = value;
}

// optional uint32 Level = 5;
inline bool PBMsg::has_level() const {
  return _has_bit(4);
}
inline void PBMsg::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBMsg::level() const {
  return level_;
}
inline void PBMsg::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint32 MaxLevel = 6;
inline bool PBMsg::has_maxlevel() const {
  return _has_bit(5);
}
inline void PBMsg::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBMsg::maxlevel() const {
  return maxlevel_;
}
inline void PBMsg::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  maxlevel_ = value;
}

// optional uint32 MinLevel = 7;
inline bool PBMsg::has_minlevel() const {
  return _has_bit(6);
}
inline void PBMsg::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBMsg::minlevel() const {
  return minlevel_;
}
inline void PBMsg::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(6);
  minlevel_ = value;
}

// optional string Content = 8;
inline bool PBMsg::has_content() const {
  return _has_bit(7);
}
inline void PBMsg::clear_content() {
  if (content_ != &_default_content_) {
    content_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& PBMsg::content() const {
  return *content_;
}
inline void PBMsg::set_content(const ::std::string& value) {
  _set_bit(7);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void PBMsg::set_content(const char* value) {
  _set_bit(7);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void PBMsg::set_content(const char* value, size_t size) {
  _set_bit(7);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMsg::mutable_content() {
  _set_bit(7);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  return content_;
}

// optional uint32 Count = 9;
inline bool PBMsg::has_count() const {
  return _has_bit(8);
}
inline void PBMsg::clear_count() {
  count_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMsg::count() const {
  return count_;
}
inline void PBMsg::set_count(::google::protobuf::uint32 value) {
  _set_bit(8);
  count_ = value;
}

// optional uint32 RootStyle = 10;
inline bool PBMsg::has_rootstyle() const {
  return _has_bit(9);
}
inline void PBMsg::clear_rootstyle() {
  rootstyle_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBMsg::rootstyle() const {
  return rootstyle_;
}
inline void PBMsg::set_rootstyle(::google::protobuf::uint32 value) {
  _set_bit(9);
  rootstyle_ = value;
}

// optional uint32 SubStyle = 11;
inline bool PBMsg::has_substyle() const {
  return _has_bit(10);
}
inline void PBMsg::clear_substyle() {
  substyle_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBMsg::substyle() const {
  return substyle_;
}
inline void PBMsg::set_substyle(::google::protobuf::uint32 value) {
  _set_bit(10);
  substyle_ = value;
}

// optional uint32 Nationality = 12;
inline bool PBMsg::has_nationality() const {
  return _has_bit(11);
}
inline void PBMsg::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBMsg::nationality() const {
  return nationality_;
}
inline void PBMsg::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(11);
  nationality_ = value;
}

// -------------------------------------------------------------------

// PBTeamItem

// optional uint32 CharID = 1;
inline bool PBTeamItem::has_charid() const {
  return _has_bit(0);
}
inline void PBTeamItem::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTeamItem::charid() const {
  return charid_;
}
inline void PBTeamItem::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string Name = 2;
inline bool PBTeamItem::has_name() const {
  return _has_bit(1);
}
inline void PBTeamItem::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBTeamItem::name() const {
  return *name_;
}
inline void PBTeamItem::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBTeamItem::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBTeamItem::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamItem::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 AccountID = 3;
inline bool PBTeamItem::has_accountid() const {
  return _has_bit(2);
}
inline void PBTeamItem::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTeamItem::accountid() const {
  return accountid_;
}
inline void PBTeamItem::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(2);
  accountid_ = value;
}

// optional uint32 Type = 4;
inline bool PBTeamItem::has_type() const {
  return _has_bit(3);
}
inline void PBTeamItem::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTeamItem::type() const {
  return type_;
}
inline void PBTeamItem::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// optional uint32 Face = 5;
inline bool PBTeamItem::has_face() const {
  return _has_bit(4);
}
inline void PBTeamItem::clear_face() {
  face_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTeamItem::face() const {
  return face_;
}
inline void PBTeamItem::set_face(::google::protobuf::uint32 value) {
  _set_bit(4);
  face_ = value;
}

// optional uint32 Metier = 6;
inline bool PBTeamItem::has_metier() const {
  return _has_bit(5);
}
inline void PBTeamItem::clear_metier() {
  metier_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBTeamItem::metier() const {
  return metier_;
}
inline void PBTeamItem::set_metier(::google::protobuf::uint32 value) {
  _set_bit(5);
  metier_ = value;
}

// optional uint32 Level = 7;
inline bool PBTeamItem::has_level() const {
  return _has_bit(6);
}
inline void PBTeamItem::clear_level() {
  level_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBTeamItem::level() const {
  return level_;
}
inline void PBTeamItem::set_level(::google::protobuf::uint32 value) {
  _set_bit(6);
  level_ = value;
}

// optional uint32 Sex = 8;
inline bool PBTeamItem::has_sex() const {
  return _has_bit(7);
}
inline void PBTeamItem::clear_sex() {
  sex_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBTeamItem::sex() const {
  return sex_;
}
inline void PBTeamItem::set_sex(::google::protobuf::uint32 value) {
  _set_bit(7);
  sex_ = value;
}

// optional uint32 HP = 9;
inline bool PBTeamItem::has_hp() const {
  return _has_bit(8);
}
inline void PBTeamItem::clear_hp() {
  hp_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBTeamItem::hp() const {
  return hp_;
}
inline void PBTeamItem::set_hp(::google::protobuf::uint32 value) {
  _set_bit(8);
  hp_ = value;
}

// optional uint32 MP = 10;
inline bool PBTeamItem::has_mp() const {
  return _has_bit(9);
}
inline void PBTeamItem::clear_mp() {
  mp_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBTeamItem::mp() const {
  return mp_;
}
inline void PBTeamItem::set_mp(::google::protobuf::uint32 value) {
  _set_bit(9);
  mp_ = value;
}

// optional uint32 AP = 11;
inline bool PBTeamItem::has_ap() const {
  return _has_bit(10);
}
inline void PBTeamItem::clear_ap() {
  ap_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBTeamItem::ap() const {
  return ap_;
}
inline void PBTeamItem::set_ap(::google::protobuf::uint32 value) {
  _set_bit(10);
  ap_ = value;
}

// optional uint32 PosX = 12;
inline bool PBTeamItem::has_posx() const {
  return _has_bit(11);
}
inline void PBTeamItem::clear_posx() {
  posx_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBTeamItem::posx() const {
  return posx_;
}
inline void PBTeamItem::set_posx(::google::protobuf::uint32 value) {
  _set_bit(11);
  posx_ = value;
}

// optional uint32 PosY = 13;
inline bool PBTeamItem::has_posy() const {
  return _has_bit(12);
}
inline void PBTeamItem::clear_posy() {
  posy_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBTeamItem::posy() const {
  return posy_;
}
inline void PBTeamItem::set_posy(::google::protobuf::uint32 value) {
  _set_bit(12);
  posy_ = value;
}

// optional uint32 LineID = 14;
inline bool PBTeamItem::has_lineid() const {
  return _has_bit(13);
}
inline void PBTeamItem::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBTeamItem::lineid() const {
  return lineid_;
}
inline void PBTeamItem::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(13);
  lineid_ = value;
}

// optional uint32 MapID = 15;
inline bool PBTeamItem::has_mapid() const {
  return _has_bit(14);
}
inline void PBTeamItem::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBTeamItem::mapid() const {
  return mapid_;
}
inline void PBTeamItem::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(14);
  mapid_ = value;
}

// optional uint32 Status = 16;
inline bool PBTeamItem::has_status() const {
  return _has_bit(15);
}
inline void PBTeamItem::clear_status() {
  status_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBTeamItem::status() const {
  return status_;
}
inline void PBTeamItem::set_status(::google::protobuf::uint32 value) {
  _set_bit(15);
  status_ = value;
}

// optional uint32 Nationality = 17;
inline bool PBTeamItem::has_nationality() const {
  return _has_bit(16);
}
inline void PBTeamItem::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBTeamItem::nationality() const {
  return nationality_;
}
inline void PBTeamItem::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(16);
  nationality_ = value;
}

// optional .PBBuffList BuffList = 18;
inline bool PBTeamItem::has_bufflist() const {
  return _has_bit(17);
}
inline void PBTeamItem::clear_bufflist() {
  if (bufflist_ != NULL) bufflist_->::PBBuffList::Clear();
  _clear_bit(17);
}
inline const ::PBBuffList& PBTeamItem::bufflist() const {
  return bufflist_ != NULL ? *bufflist_ : *default_instance_->bufflist_;
}
inline ::PBBuffList* PBTeamItem::mutable_bufflist() {
  _set_bit(17);
  if (bufflist_ == NULL) bufflist_ = new ::PBBuffList;
  return bufflist_;
}

// optional uint32 RepetionMapIndex = 19;
inline bool PBTeamItem::has_repetionmapindex() const {
  return _has_bit(18);
}
inline void PBTeamItem::clear_repetionmapindex() {
  repetionmapindex_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBTeamItem::repetionmapindex() const {
  return repetionmapindex_;
}
inline void PBTeamItem::set_repetionmapindex(::google::protobuf::uint32 value) {
  _set_bit(18);
  repetionmapindex_ = value;
}

// optional uint32 Order = 20;
inline bool PBTeamItem::has_order() const {
  return _has_bit(19);
}
inline void PBTeamItem::clear_order() {
  order_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBTeamItem::order() const {
  return order_;
}
inline void PBTeamItem::set_order(::google::protobuf::uint32 value) {
  _set_bit(19);
  order_ = value;
}

// -------------------------------------------------------------------

// PBTeamInfo

// optional uint32 HeaderCharID = 1;
inline bool PBTeamInfo::has_headercharid() const {
  return _has_bit(0);
}
inline void PBTeamInfo::clear_headercharid() {
  headercharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTeamInfo::headercharid() const {
  return headercharid_;
}
inline void PBTeamInfo::set_headercharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  headercharid_ = value;
}

// optional uint32 DistributeMode = 2;
inline bool PBTeamInfo::has_distributemode() const {
  return _has_bit(1);
}
inline void PBTeamInfo::clear_distributemode() {
  distributemode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTeamInfo::distributemode() const {
  return distributemode_;
}
inline void PBTeamInfo::set_distributemode(::google::protobuf::uint32 value) {
  _set_bit(1);
  distributemode_ = value;
}

// optional string HeadName = 3;
inline bool PBTeamInfo::has_headname() const {
  return _has_bit(2);
}
inline void PBTeamInfo::clear_headname() {
  if (headname_ != &_default_headname_) {
    headname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBTeamInfo::headname() const {
  return *headname_;
}
inline void PBTeamInfo::set_headname(const ::std::string& value) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(value);
}
inline void PBTeamInfo::set_headname(const char* value) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(value);
}
inline void PBTeamInfo::set_headname(const char* value, size_t size) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamInfo::mutable_headname() {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  return headname_;
}

// optional uint32 Count = 4;
inline bool PBTeamInfo::has_count() const {
  return _has_bit(3);
}
inline void PBTeamInfo::clear_count() {
  count_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTeamInfo::count() const {
  return count_;
}
inline void PBTeamInfo::set_count(::google::protobuf::uint32 value) {
  _set_bit(3);
  count_ = value;
}

// optional uint32 TeamID = 5;
inline bool PBTeamInfo::has_teamid() const {
  return _has_bit(4);
}
inline void PBTeamInfo::clear_teamid() {
  teamid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTeamInfo::teamid() const {
  return teamid_;
}
inline void PBTeamInfo::set_teamid(::google::protobuf::uint32 value) {
  _set_bit(4);
  teamid_ = value;
}

// repeated .PBTeamItem Members = 6;
inline int PBTeamInfo::members_size() const {
  return members_.size();
}
inline void PBTeamInfo::clear_members() {
  members_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamItem >&
PBTeamInfo::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamItem >*
PBTeamInfo::mutable_members() {
  return &members_;
}
inline const ::PBTeamItem& PBTeamInfo::members(int index) const {
  return members_.Get(index);
}
inline ::PBTeamItem* PBTeamInfo::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::PBTeamItem* PBTeamInfo::add_members() {
  return members_.Add();
}

// -------------------------------------------------------------------

// CMessageGateShutDownNotice

// optional uint32 WorldID = 1;
inline bool CMessageGateShutDownNotice::has_worldid() const {
  return _has_bit(0);
}
inline void CMessageGateShutDownNotice::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGateShutDownNotice::worldid() const {
  return worldid_;
}
inline void CMessageGateShutDownNotice::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickOffPlayerRequest

// optional uint32 AccountID = 1;
inline bool CMessageKickOffPlayerRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageKickOffPlayerRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickOffPlayerRequest::accountid() const {
  return accountid_;
}
inline void CMessageKickOffPlayerRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageKickOffPlayerRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageKickOffPlayerRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickOffPlayerRequest::charid() const {
  return charid_;
}
inline void CMessageKickOffPlayerRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional int32 Reason = 3;
inline bool CMessageKickOffPlayerRequest::has_reason() const {
  return _has_bit(2);
}
inline void CMessageKickOffPlayerRequest::clear_reason() {
  reason_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageKickOffPlayerRequest::reason() const {
  return reason_;
}
inline void CMessageKickOffPlayerRequest::set_reason(::google::protobuf::int32 value) {
  _set_bit(2);
  reason_ = value;
}

// optional uint32 AnotherIP = 4;
inline bool CMessageKickOffPlayerRequest::has_anotherip() const {
  return _has_bit(3);
}
inline void CMessageKickOffPlayerRequest::clear_anotherip() {
  anotherip_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageKickOffPlayerRequest::anotherip() const {
  return anotherip_;
}
inline void CMessageKickOffPlayerRequest::set_anotherip(::google::protobuf::uint32 value) {
  _set_bit(3);
  anotherip_ = value;
}

// optional uint32 RoleWorldID = 5;
inline bool CMessageKickOffPlayerRequest::has_roleworldid() const {
  return _has_bit(4);
}
inline void CMessageKickOffPlayerRequest::clear_roleworldid() {
  roleworldid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageKickOffPlayerRequest::roleworldid() const {
  return roleworldid_;
}
inline void CMessageKickOffPlayerRequest::set_roleworldid(::google::protobuf::uint32 value) {
  _set_bit(4);
  roleworldid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickOffPlayerResponse

// optional uint32 AccountID = 1;
inline bool CMessageKickOffPlayerResponse::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageKickOffPlayerResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickOffPlayerResponse::accountid() const {
  return accountid_;
}
inline void CMessageKickOffPlayerResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageKickOffPlayerResponse::has_charid() const {
  return _has_bit(1);
}
inline void CMessageKickOffPlayerResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickOffPlayerResponse::charid() const {
  return charid_;
}
inline void CMessageKickOffPlayerResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional int32 Result = 3;
inline bool CMessageKickOffPlayerResponse::has_result() const {
  return _has_bit(2);
}
inline void CMessageKickOffPlayerResponse::clear_result() {
  result_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageKickOffPlayerResponse::result() const {
  return result_;
}
inline void CMessageKickOffPlayerResponse::set_result(::google::protobuf::int32 value) {
  _set_bit(2);
  result_ = value;
}

// optional uint32 RoleWorldID = 4;
inline bool CMessageKickOffPlayerResponse::has_roleworldid() const {
  return _has_bit(3);
}
inline void CMessageKickOffPlayerResponse::clear_roleworldid() {
  roleworldid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageKickOffPlayerResponse::roleworldid() const {
  return roleworldid_;
}
inline void CMessageKickOffPlayerResponse::set_roleworldid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleworldid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetPlayerMailiInfoRequest

// optional int32 CharID = 1;
inline bool CMessageGetPlayerMailiInfoRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGetPlayerMailiInfoRequest::clear_charid() {
  charid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageGetPlayerMailiInfoRequest::charid() const {
  return charid_;
}
inline void CMessageGetPlayerMailiInfoRequest::set_charid(::google::protobuf::int32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string RoleName = 2;
inline bool CMessageGetPlayerMailiInfoRequest::has_rolename() const {
  return _has_bit(1);
}
inline void CMessageGetPlayerMailiInfoRequest::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageGetPlayerMailiInfoRequest::rolename() const {
  return *rolename_;
}
inline void CMessageGetPlayerMailiInfoRequest::set_rolename(const ::std::string& value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageGetPlayerMailiInfoRequest::set_rolename(const char* value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageGetPlayerMailiInfoRequest::set_rolename(const char* value, size_t size) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGetPlayerMailiInfoRequest::mutable_rolename() {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional uint32 RoleID = 3;
inline bool CMessageGetPlayerMailiInfoRequest::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageGetPlayerMailiInfoRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetPlayerMailiInfoRequest::roleid() const {
  return roleid_;
}
inline void CMessageGetPlayerMailiInfoRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional int32 QueryWay = 4;
inline bool CMessageGetPlayerMailiInfoRequest::has_queryway() const {
  return _has_bit(3);
}
inline void CMessageGetPlayerMailiInfoRequest::clear_queryway() {
  queryway_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageGetPlayerMailiInfoRequest::queryway() const {
  return queryway_;
}
inline void CMessageGetPlayerMailiInfoRequest::set_queryway(::google::protobuf::int32 value) {
  _set_bit(3);
  queryway_ = value;
}

// optional uint32 QueryType = 5;
inline bool CMessageGetPlayerMailiInfoRequest::has_querytype() const {
  return _has_bit(4);
}
inline void CMessageGetPlayerMailiInfoRequest::clear_querytype() {
  querytype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGetPlayerMailiInfoRequest::querytype() const {
  return querytype_;
}
inline void CMessageGetPlayerMailiInfoRequest::set_querytype(::google::protobuf::uint32 value) {
  _set_bit(4);
  querytype_ = value;
}

// repeated uint32 QueryData = 6;
inline int CMessageGetPlayerMailiInfoRequest::querydata_size() const {
  return querydata_.size();
}
inline void CMessageGetPlayerMailiInfoRequest::clear_querydata() {
  querydata_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGetPlayerMailiInfoRequest::querydata() const {
  return querydata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGetPlayerMailiInfoRequest::mutable_querydata() {
  return &querydata_;
}
inline ::google::protobuf::uint32 CMessageGetPlayerMailiInfoRequest::querydata(int index) const {
  return querydata_.Get(index);
}
inline void CMessageGetPlayerMailiInfoRequest::set_querydata(int index, ::google::protobuf::uint32 value) {
  querydata_.Set(index, value);
}
inline void CMessageGetPlayerMailiInfoRequest::add_querydata(::google::protobuf::uint32 value) {
  querydata_.Add(value);
}

// -------------------------------------------------------------------

// CMessageGetPlayerMailInfoResponse

// optional int32 CharID = 1;
inline bool CMessageGetPlayerMailInfoResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGetPlayerMailInfoResponse::clear_charid() {
  charid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageGetPlayerMailInfoResponse::charid() const {
  return charid_;
}
inline void CMessageGetPlayerMailInfoResponse::set_charid(::google::protobuf::int32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional int32 ErrorCode = 2;
inline bool CMessageGetPlayerMailInfoResponse::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageGetPlayerMailInfoResponse::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageGetPlayerMailInfoResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageGetPlayerMailInfoResponse::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageGetPlayerMailInfoResponse::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageGetPlayerMailInfoResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetPlayerMailInfoResponse::roleid() const {
  return roleid_;
}
inline void CMessageGetPlayerMailInfoResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional string RoleName = 4;
inline bool CMessageGetPlayerMailInfoResponse::has_rolename() const {
  return _has_bit(3);
}
inline void CMessageGetPlayerMailInfoResponse::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageGetPlayerMailInfoResponse::rolename() const {
  return *rolename_;
}
inline void CMessageGetPlayerMailInfoResponse::set_rolename(const ::std::string& value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageGetPlayerMailInfoResponse::set_rolename(const char* value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageGetPlayerMailInfoResponse::set_rolename(const char* value, size_t size) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGetPlayerMailInfoResponse::mutable_rolename() {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional int32 RoleOfCountry = 5;
inline bool CMessageGetPlayerMailInfoResponse::has_roleofcountry() const {
  return _has_bit(4);
}
inline void CMessageGetPlayerMailInfoResponse::clear_roleofcountry() {
  roleofcountry_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessageGetPlayerMailInfoResponse::roleofcountry() const {
  return roleofcountry_;
}
inline void CMessageGetPlayerMailInfoResponse::set_roleofcountry(::google::protobuf::int32 value) {
  _set_bit(4);
  roleofcountry_ = value;
}

// optional int32 RoleInCountry = 6;
inline bool CMessageGetPlayerMailInfoResponse::has_roleincountry() const {
  return _has_bit(5);
}
inline void CMessageGetPlayerMailInfoResponse::clear_roleincountry() {
  roleincountry_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CMessageGetPlayerMailInfoResponse::roleincountry() const {
  return roleincountry_;
}
inline void CMessageGetPlayerMailInfoResponse::set_roleincountry(::google::protobuf::int32 value) {
  _set_bit(5);
  roleincountry_ = value;
}

// optional int32 RoleOnline = 7;
inline bool CMessageGetPlayerMailInfoResponse::has_roleonline() const {
  return _has_bit(6);
}
inline void CMessageGetPlayerMailInfoResponse::clear_roleonline() {
  roleonline_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 CMessageGetPlayerMailInfoResponse::roleonline() const {
  return roleonline_;
}
inline void CMessageGetPlayerMailInfoResponse::set_roleonline(::google::protobuf::int32 value) {
  _set_bit(6);
  roleonline_ = value;
}

// optional int32 RoleMailCount = 8;
inline bool CMessageGetPlayerMailInfoResponse::has_rolemailcount() const {
  return _has_bit(7);
}
inline void CMessageGetPlayerMailInfoResponse::clear_rolemailcount() {
  rolemailcount_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 CMessageGetPlayerMailInfoResponse::rolemailcount() const {
  return rolemailcount_;
}
inline void CMessageGetPlayerMailInfoResponse::set_rolemailcount(::google::protobuf::int32 value) {
  _set_bit(7);
  rolemailcount_ = value;
}

// optional uint32 QueryType = 9;
inline bool CMessageGetPlayerMailInfoResponse::has_querytype() const {
  return _has_bit(8);
}
inline void CMessageGetPlayerMailInfoResponse::clear_querytype() {
  querytype_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageGetPlayerMailInfoResponse::querytype() const {
  return querytype_;
}
inline void CMessageGetPlayerMailInfoResponse::set_querytype(::google::protobuf::uint32 value) {
  _set_bit(8);
  querytype_ = value;
}

// repeated uint32 QueryData = 10;
inline int CMessageGetPlayerMailInfoResponse::querydata_size() const {
  return querydata_.size();
}
inline void CMessageGetPlayerMailInfoResponse::clear_querydata() {
  querydata_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGetPlayerMailInfoResponse::querydata() const {
  return querydata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGetPlayerMailInfoResponse::mutable_querydata() {
  return &querydata_;
}
inline ::google::protobuf::uint32 CMessageGetPlayerMailInfoResponse::querydata(int index) const {
  return querydata_.Get(index);
}
inline void CMessageGetPlayerMailInfoResponse::set_querydata(int index, ::google::protobuf::uint32 value) {
  querydata_.Set(index, value);
}
inline void CMessageGetPlayerMailInfoResponse::add_querydata(::google::protobuf::uint32 value) {
  querydata_.Add(value);
}

// -------------------------------------------------------------------

// CMessageChangeMailCountNotify

// optional int32 CharID = 1;
inline bool CMessageChangeMailCountNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangeMailCountNotify::clear_charid() {
  charid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageChangeMailCountNotify::charid() const {
  return charid_;
}
inline void CMessageChangeMailCountNotify::set_charid(::google::protobuf::int32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CharName = 2;
inline bool CMessageChangeMailCountNotify::has_charname() const {
  return _has_bit(1);
}
inline void CMessageChangeMailCountNotify::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageChangeMailCountNotify::charname() const {
  return *charname_;
}
inline void CMessageChangeMailCountNotify::set_charname(const ::std::string& value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageChangeMailCountNotify::set_charname(const char* value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageChangeMailCountNotify::set_charname(const char* value, size_t size) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeMailCountNotify::mutable_charname() {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional int32 QueryWay = 3;
inline bool CMessageChangeMailCountNotify::has_queryway() const {
  return _has_bit(2);
}
inline void CMessageChangeMailCountNotify::clear_queryway() {
  queryway_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageChangeMailCountNotify::queryway() const {
  return queryway_;
}
inline void CMessageChangeMailCountNotify::set_queryway(::google::protobuf::int32 value) {
  _set_bit(2);
  queryway_ = value;
}

// optional int32 NumChanged = 4;
inline bool CMessageChangeMailCountNotify::has_numchanged() const {
  return _has_bit(3);
}
inline void CMessageChangeMailCountNotify::clear_numchanged() {
  numchanged_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageChangeMailCountNotify::numchanged() const {
  return numchanged_;
}
inline void CMessageChangeMailCountNotify::set_numchanged(::google::protobuf::int32 value) {
  _set_bit(3);
  numchanged_ = value;
}

// -------------------------------------------------------------------

// CMessageUserIbExchangeNotice

// optional uint64 PurchaseID = 1;
inline bool CMessageUserIbExchangeNotice::has_purchaseid() const {
  return _has_bit(0);
}
inline void CMessageUserIbExchangeNotice::clear_purchaseid() {
  purchaseid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMessageUserIbExchangeNotice::purchaseid() const {
  return purchaseid_;
}
inline void CMessageUserIbExchangeNotice::set_purchaseid(::google::protobuf::uint64 value) {
  _set_bit(0);
  purchaseid_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageUserIbExchangeNotice::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageUserIbExchangeNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::accountid() const {
  return accountid_;
}
inline void CMessageUserIbExchangeNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageUserIbExchangeNotice::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageUserIbExchangeNotice::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::roleid() const {
  return roleid_;
}
inline void CMessageUserIbExchangeNotice::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional uint32 GenderID = 4;
inline bool CMessageUserIbExchangeNotice::has_genderid() const {
  return _has_bit(3);
}
inline void CMessageUserIbExchangeNotice::clear_genderid() {
  genderid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::genderid() const {
  return genderid_;
}
inline void CMessageUserIbExchangeNotice::set_genderid(::google::protobuf::uint32 value) {
  _set_bit(3);
  genderid_ = value;
}

// optional uint32 MetierID = 5;
inline bool CMessageUserIbExchangeNotice::has_metierid() const {
  return _has_bit(4);
}
inline void CMessageUserIbExchangeNotice::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::metierid() const {
  return metierid_;
}
inline void CMessageUserIbExchangeNotice::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(4);
  metierid_ = value;
}

// optional uint32 Level = 6;
inline bool CMessageUserIbExchangeNotice::has_level() const {
  return _has_bit(5);
}
inline void CMessageUserIbExchangeNotice::clear_level() {
  level_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::level() const {
  return level_;
}
inline void CMessageUserIbExchangeNotice::set_level(::google::protobuf::uint32 value) {
  _set_bit(5);
  level_ = value;
}

// optional uint32 RatingID = 7;
inline bool CMessageUserIbExchangeNotice::has_ratingid() const {
  return _has_bit(6);
}
inline void CMessageUserIbExchangeNotice::clear_ratingid() {
  ratingid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::ratingid() const {
  return ratingid_;
}
inline void CMessageUserIbExchangeNotice::set_ratingid(::google::protobuf::uint32 value) {
  _set_bit(6);
  ratingid_ = value;
}

// optional string IBCode = 8;
inline bool CMessageUserIbExchangeNotice::has_ibcode() const {
  return _has_bit(7);
}
inline void CMessageUserIbExchangeNotice::clear_ibcode() {
  if (ibcode_ != &_default_ibcode_) {
    ibcode_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CMessageUserIbExchangeNotice::ibcode() const {
  return *ibcode_;
}
inline void CMessageUserIbExchangeNotice::set_ibcode(const ::std::string& value) {
  _set_bit(7);
  if (ibcode_ == &_default_ibcode_) {
    ibcode_ = new ::std::string;
  }
  ibcode_->assign(value);
}
inline void CMessageUserIbExchangeNotice::set_ibcode(const char* value) {
  _set_bit(7);
  if (ibcode_ == &_default_ibcode_) {
    ibcode_ = new ::std::string;
  }
  ibcode_->assign(value);
}
inline void CMessageUserIbExchangeNotice::set_ibcode(const char* value, size_t size) {
  _set_bit(7);
  if (ibcode_ == &_default_ibcode_) {
    ibcode_ = new ::std::string;
  }
  ibcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUserIbExchangeNotice::mutable_ibcode() {
  _set_bit(7);
  if (ibcode_ == &_default_ibcode_) {
    ibcode_ = new ::std::string;
  }
  return ibcode_;
}

// optional uint32 PackageFlag = 9;
inline bool CMessageUserIbExchangeNotice::has_packageflag() const {
  return _has_bit(8);
}
inline void CMessageUserIbExchangeNotice::clear_packageflag() {
  packageflag_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::packageflag() const {
  return packageflag_;
}
inline void CMessageUserIbExchangeNotice::set_packageflag(::google::protobuf::uint32 value) {
  _set_bit(8);
  packageflag_ = value;
}

// optional uint32 Count = 10;
inline bool CMessageUserIbExchangeNotice::has_count() const {
  return _has_bit(9);
}
inline void CMessageUserIbExchangeNotice::clear_count() {
  count_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::count() const {
  return count_;
}
inline void CMessageUserIbExchangeNotice::set_count(::google::protobuf::uint32 value) {
  _set_bit(9);
  count_ = value;
}

// optional int32 PayTime = 11;
inline bool CMessageUserIbExchangeNotice::has_paytime() const {
  return _has_bit(10);
}
inline void CMessageUserIbExchangeNotice::clear_paytime() {
  paytime_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 CMessageUserIbExchangeNotice::paytime() const {
  return paytime_;
}
inline void CMessageUserIbExchangeNotice::set_paytime(::google::protobuf::int32 value) {
  _set_bit(10);
  paytime_ = value;
}

// optional uint32 UserIP = 12;
inline bool CMessageUserIbExchangeNotice::has_userip() const {
  return _has_bit(11);
}
inline void CMessageUserIbExchangeNotice::clear_userip() {
  userip_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::userip() const {
  return userip_;
}
inline void CMessageUserIbExchangeNotice::set_userip(::google::protobuf::uint32 value) {
  _set_bit(11);
  userip_ = value;
}

// optional uint32 SubjectID = 13;
inline bool CMessageUserIbExchangeNotice::has_subjectid() const {
  return _has_bit(12);
}
inline void CMessageUserIbExchangeNotice::clear_subjectid() {
  subjectid_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::subjectid() const {
  return subjectid_;
}
inline void CMessageUserIbExchangeNotice::set_subjectid(::google::protobuf::uint32 value) {
  _set_bit(12);
  subjectid_ = value;
}

// optional uint32 AuditFlag = 14;
inline bool CMessageUserIbExchangeNotice::has_auditflag() const {
  return _has_bit(13);
}
inline void CMessageUserIbExchangeNotice::clear_auditflag() {
  auditflag_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMessageUserIbExchangeNotice::auditflag() const {
  return auditflag_;
}
inline void CMessageUserIbExchangeNotice::set_auditflag(::google::protobuf::uint32 value) {
  _set_bit(13);
  auditflag_ = value;
}

// optional int32 Price = 15;
inline bool CMessageUserIbExchangeNotice::has_price() const {
  return _has_bit(14);
}
inline void CMessageUserIbExchangeNotice::clear_price() {
  price_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 CMessageUserIbExchangeNotice::price() const {
  return price_;
}
inline void CMessageUserIbExchangeNotice::set_price(::google::protobuf::int32 value) {
  _set_bit(14);
  price_ = value;
}

// optional int32 DiscountPrice = 16;
inline bool CMessageUserIbExchangeNotice::has_discountprice() const {
  return _has_bit(15);
}
inline void CMessageUserIbExchangeNotice::clear_discountprice() {
  discountprice_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 CMessageUserIbExchangeNotice::discountprice() const {
  return discountprice_;
}
inline void CMessageUserIbExchangeNotice::set_discountprice(::google::protobuf::int32 value) {
  _set_bit(15);
  discountprice_ = value;
}

// -------------------------------------------------------------------

// CMessageUserUseIbItemNotice

// optional uint32 AccountID = 1;
inline bool CMessageUserUseIbItemNotice::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageUserUseIbItemNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUserUseIbItemNotice::accountid() const {
  return accountid_;
}
inline void CMessageUserUseIbItemNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageUserUseIbItemNotice::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageUserUseIbItemNotice::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUserUseIbItemNotice::roleid() const {
  return roleid_;
}
inline void CMessageUserUseIbItemNotice::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint64 PurchaseID = 3;
inline bool CMessageUserUseIbItemNotice::has_purchaseid() const {
  return _has_bit(2);
}
inline void CMessageUserUseIbItemNotice::clear_purchaseid() {
  purchaseid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageUserUseIbItemNotice::purchaseid() const {
  return purchaseid_;
}
inline void CMessageUserUseIbItemNotice::set_purchaseid(::google::protobuf::uint64 value) {
  _set_bit(2);
  purchaseid_ = value;
}

// optional uint32 GenderID = 4;
inline bool CMessageUserUseIbItemNotice::has_genderid() const {
  return _has_bit(3);
}
inline void CMessageUserUseIbItemNotice::clear_genderid() {
  genderid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUserUseIbItemNotice::genderid() const {
  return genderid_;
}
inline void CMessageUserUseIbItemNotice::set_genderid(::google::protobuf::uint32 value) {
  _set_bit(3);
  genderid_ = value;
}

// optional uint32 MetierID = 5;
inline bool CMessageUserUseIbItemNotice::has_metierid() const {
  return _has_bit(4);
}
inline void CMessageUserUseIbItemNotice::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUserUseIbItemNotice::metierid() const {
  return metierid_;
}
inline void CMessageUserUseIbItemNotice::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(4);
  metierid_ = value;
}

// optional uint32 Level = 6;
inline bool CMessageUserUseIbItemNotice::has_level() const {
  return _has_bit(5);
}
inline void CMessageUserUseIbItemNotice::clear_level() {
  level_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUserUseIbItemNotice::level() const {
  return level_;
}
inline void CMessageUserUseIbItemNotice::set_level(::google::protobuf::uint32 value) {
  _set_bit(5);
  level_ = value;
}

// -------------------------------------------------------------------

// CMessageAddFriendRequest

// optional fixed32 SrcID = 1;
inline bool CMessageAddFriendRequest::has_srcid() const {
  return _has_bit(0);
}
inline void CMessageAddFriendRequest::clear_srcid() {
  srcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAddFriendRequest::srcid() const {
  return srcid_;
}
inline void CMessageAddFriendRequest::set_srcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srcid_ = value;
}

// optional fixed32 DesID = 2;
inline bool CMessageAddFriendRequest::has_desid() const {
  return _has_bit(1);
}
inline void CMessageAddFriendRequest::clear_desid() {
  desid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAddFriendRequest::desid() const {
  return desid_;
}
inline void CMessageAddFriendRequest::set_desid(::google::protobuf::uint32 value) {
  _set_bit(1);
  desid_ = value;
}

// optional uint32 SrcLevel = 3;
inline bool CMessageAddFriendRequest::has_srclevel() const {
  return _has_bit(2);
}
inline void CMessageAddFriendRequest::clear_srclevel() {
  srclevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAddFriendRequest::srclevel() const {
  return srclevel_;
}
inline void CMessageAddFriendRequest::set_srclevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  srclevel_ = value;
}

// -------------------------------------------------------------------

// CMessageAddFriendResponse

// optional uint32 SendBack = 1;
inline bool CMessageAddFriendResponse::has_sendback() const {
  return _has_bit(0);
}
inline void CMessageAddFriendResponse::clear_sendback() {
  sendback_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAddFriendResponse::sendback() const {
  return sendback_;
}
inline void CMessageAddFriendResponse::set_sendback(::google::protobuf::uint32 value) {
  _set_bit(0);
  sendback_ = value;
}

// optional uint32 RetCode = 2;
inline bool CMessageAddFriendResponse::has_retcode() const {
  return _has_bit(1);
}
inline void CMessageAddFriendResponse::clear_retcode() {
  retcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAddFriendResponse::retcode() const {
  return retcode_;
}
inline void CMessageAddFriendResponse::set_retcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  retcode_ = value;
}

// optional uint32 SrcCharID = 3;
inline bool CMessageAddFriendResponse::has_srccharid() const {
  return _has_bit(2);
}
inline void CMessageAddFriendResponse::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAddFriendResponse::srccharid() const {
  return srccharid_;
}
inline void CMessageAddFriendResponse::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srccharid_ = value;
}

// optional uint32 SrcMetier = 4;
inline bool CMessageAddFriendResponse::has_srcmetier() const {
  return _has_bit(3);
}
inline void CMessageAddFriendResponse::clear_srcmetier() {
  srcmetier_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageAddFriendResponse::srcmetier() const {
  return srcmetier_;
}
inline void CMessageAddFriendResponse::set_srcmetier(::google::protobuf::uint32 value) {
  _set_bit(3);
  srcmetier_ = value;
}

// optional uint32 SrcLevel = 5;
inline bool CMessageAddFriendResponse::has_srclevel() const {
  return _has_bit(4);
}
inline void CMessageAddFriendResponse::clear_srclevel() {
  srclevel_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageAddFriendResponse::srclevel() const {
  return srclevel_;
}
inline void CMessageAddFriendResponse::set_srclevel(::google::protobuf::uint32 value) {
  _set_bit(4);
  srclevel_ = value;
}

// optional uint32 SrcSex = 6;
inline bool CMessageAddFriendResponse::has_srcsex() const {
  return _has_bit(5);
}
inline void CMessageAddFriendResponse::clear_srcsex() {
  srcsex_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageAddFriendResponse::srcsex() const {
  return srcsex_;
}
inline void CMessageAddFriendResponse::set_srcsex(::google::protobuf::uint32 value) {
  _set_bit(5);
  srcsex_ = value;
}

// optional uint32 SrcHead = 7;
inline bool CMessageAddFriendResponse::has_srchead() const {
  return _has_bit(6);
}
inline void CMessageAddFriendResponse::clear_srchead() {
  srchead_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageAddFriendResponse::srchead() const {
  return srchead_;
}
inline void CMessageAddFriendResponse::set_srchead(::google::protobuf::uint32 value) {
  _set_bit(6);
  srchead_ = value;
}

// optional string SrcName = 8;
inline bool CMessageAddFriendResponse::has_srcname() const {
  return _has_bit(7);
}
inline void CMessageAddFriendResponse::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CMessageAddFriendResponse::srcname() const {
  return *srcname_;
}
inline void CMessageAddFriendResponse::set_srcname(const ::std::string& value) {
  _set_bit(7);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageAddFriendResponse::set_srcname(const char* value) {
  _set_bit(7);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageAddFriendResponse::set_srcname(const char* value, size_t size) {
  _set_bit(7);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageAddFriendResponse::mutable_srcname() {
  _set_bit(7);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// optional uint32 DesCharID = 9;
inline bool CMessageAddFriendResponse::has_descharid() const {
  return _has_bit(8);
}
inline void CMessageAddFriendResponse::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageAddFriendResponse::descharid() const {
  return descharid_;
}
inline void CMessageAddFriendResponse::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(8);
  descharid_ = value;
}

// optional string DesName = 10;
inline bool CMessageAddFriendResponse::has_desname() const {
  return _has_bit(9);
}
inline void CMessageAddFriendResponse::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& CMessageAddFriendResponse::desname() const {
  return *desname_;
}
inline void CMessageAddFriendResponse::set_desname(const ::std::string& value) {
  _set_bit(9);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageAddFriendResponse::set_desname(const char* value) {
  _set_bit(9);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageAddFriendResponse::set_desname(const char* value, size_t size) {
  _set_bit(9);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageAddFriendResponse::mutable_desname() {
  _set_bit(9);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// -------------------------------------------------------------------

// CMessageGetCharIDRequest

// optional uint32 TypeID = 1;
inline bool CMessageGetCharIDRequest::has_typeid_() const {
  return _has_bit(0);
}
inline void CMessageGetCharIDRequest::clear_typeid_() {
  typeid__ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetCharIDRequest::typeid_() const {
  return typeid__;
}
inline void CMessageGetCharIDRequest::set_typeid_(::google::protobuf::uint32 value) {
  _set_bit(0);
  typeid__ = value;
}

// optional string Name = 2;
inline bool CMessageGetCharIDRequest::has_name() const {
  return _has_bit(1);
}
inline void CMessageGetCharIDRequest::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageGetCharIDRequest::name() const {
  return *name_;
}
inline void CMessageGetCharIDRequest::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageGetCharIDRequest::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageGetCharIDRequest::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGetCharIDRequest::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional fixed32 SrcEntityID = 3;
inline bool CMessageGetCharIDRequest::has_srcentityid() const {
  return _has_bit(2);
}
inline void CMessageGetCharIDRequest::clear_srcentityid() {
  srcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetCharIDRequest::srcentityid() const {
  return srcentityid_;
}
inline void CMessageGetCharIDRequest::set_srcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCharIDResponse

// optional uint32 TypeID = 1;
inline bool CMessageGetCharIDResponse::has_typeid_() const {
  return _has_bit(0);
}
inline void CMessageGetCharIDResponse::clear_typeid_() {
  typeid__ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetCharIDResponse::typeid_() const {
  return typeid__;
}
inline void CMessageGetCharIDResponse::set_typeid_(::google::protobuf::uint32 value) {
  _set_bit(0);
  typeid__ = value;
}

// optional fixed32 CharID = 2;
inline bool CMessageGetCharIDResponse::has_charid() const {
  return _has_bit(1);
}
inline void CMessageGetCharIDResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCharIDResponse::charid() const {
  return charid_;
}
inline void CMessageGetCharIDResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional fixed32 SrcEntityID = 3;
inline bool CMessageGetCharIDResponse::has_srcentityid() const {
  return _has_bit(2);
}
inline void CMessageGetCharIDResponse::clear_srcentityid() {
  srcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetCharIDResponse::srcentityid() const {
  return srcentityid_;
}
inline void CMessageGetCharIDResponse::set_srcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srcentityid_ = value;
}

// optional string Name = 4;
inline bool CMessageGetCharIDResponse::has_name() const {
  return _has_bit(3);
}
inline void CMessageGetCharIDResponse::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageGetCharIDResponse::name() const {
  return *name_;
}
inline void CMessageGetCharIDResponse::set_name(const ::std::string& value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageGetCharIDResponse::set_name(const char* value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageGetCharIDResponse::set_name(const char* value, size_t size) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGetCharIDResponse::mutable_name() {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Head = 5;
inline bool CMessageGetCharIDResponse::has_head() const {
  return _has_bit(4);
}
inline void CMessageGetCharIDResponse::clear_head() {
  head_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGetCharIDResponse::head() const {
  return head_;
}
inline void CMessageGetCharIDResponse::set_head(::google::protobuf::uint32 value) {
  _set_bit(4);
  head_ = value;
}

// optional uint32 Sex = 6;
inline bool CMessageGetCharIDResponse::has_sex() const {
  return _has_bit(5);
}
inline void CMessageGetCharIDResponse::clear_sex() {
  sex_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageGetCharIDResponse::sex() const {
  return sex_;
}
inline void CMessageGetCharIDResponse::set_sex(::google::protobuf::uint32 value) {
  _set_bit(5);
  sex_ = value;
}

// -------------------------------------------------------------------

// CMessageRoleChangeCampNotice

// optional int32 RoleID = 1;
inline bool CMessageRoleChangeCampNotice::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageRoleChangeCampNotice::clear_roleid() {
  roleid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageRoleChangeCampNotice::roleid() const {
  return roleid_;
}
inline void CMessageRoleChangeCampNotice::set_roleid(::google::protobuf::int32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional int32 Camp = 2;
inline bool CMessageRoleChangeCampNotice::has_camp() const {
  return _has_bit(1);
}
inline void CMessageRoleChangeCampNotice::clear_camp() {
  camp_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageRoleChangeCampNotice::camp() const {
  return camp_;
}
inline void CMessageRoleChangeCampNotice::set_camp(::google::protobuf::int32 value) {
  _set_bit(1);
  camp_ = value;
}

// -------------------------------------------------------------------

// CMessageLoginSvrStartUpNotice

// optional int32 Status = 1;
inline bool CMessageLoginSvrStartUpNotice::has_status() const {
  return _has_bit(0);
}
inline void CMessageLoginSvrStartUpNotice::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageLoginSvrStartUpNotice::status() const {
  return status_;
}
inline void CMessageLoginSvrStartUpNotice::set_status(::google::protobuf::int32 value) {
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// CMessageGate2LoginHeartBeatNotice

// optional uint32 PlayerAtGate = 1;
inline bool CMessageGate2LoginHeartBeatNotice::has_playeratgate() const {
  return _has_bit(0);
}
inline void CMessageGate2LoginHeartBeatNotice::clear_playeratgate() {
  playeratgate_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGate2LoginHeartBeatNotice::playeratgate() const {
  return playeratgate_;
}
inline void CMessageGate2LoginHeartBeatNotice::set_playeratgate(::google::protobuf::uint32 value) {
  _set_bit(0);
  playeratgate_ = value;
}

// -------------------------------------------------------------------

// PBPersonalRankInfo

// optional uint32 CharID = 1;
inline bool PBPersonalRankInfo::has_charid() const {
  return _has_bit(0);
}
inline void PBPersonalRankInfo::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::charid() const {
  return charid_;
}
inline void PBPersonalRankInfo::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CharName = 2;
inline bool PBPersonalRankInfo::has_charname() const {
  return _has_bit(1);
}
inline void PBPersonalRankInfo::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBPersonalRankInfo::charname() const {
  return *charname_;
}
inline void PBPersonalRankInfo::set_charname(const ::std::string& value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PBPersonalRankInfo::set_charname(const char* value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PBPersonalRankInfo::set_charname(const char* value, size_t size) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPersonalRankInfo::mutable_charname() {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 Level = 3;
inline bool PBPersonalRankInfo::has_level() const {
  return _has_bit(2);
}
inline void PBPersonalRankInfo::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::level() const {
  return level_;
}
inline void PBPersonalRankInfo::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// optional uint32 Money = 4;
inline bool PBPersonalRankInfo::has_money() const {
  return _has_bit(3);
}
inline void PBPersonalRankInfo::clear_money() {
  money_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::money() const {
  return money_;
}
inline void PBPersonalRankInfo::set_money(::google::protobuf::uint32 value) {
  _set_bit(3);
  money_ = value;
}

// optional uint32 BoundedMoney = 5;
inline bool PBPersonalRankInfo::has_boundedmoney() const {
  return _has_bit(4);
}
inline void PBPersonalRankInfo::clear_boundedmoney() {
  boundedmoney_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::boundedmoney() const {
  return boundedmoney_;
}
inline void PBPersonalRankInfo::set_boundedmoney(::google::protobuf::uint32 value) {
  _set_bit(4);
  boundedmoney_ = value;
}

// optional uint32 KillEnemyNumIn = 6;
inline bool PBPersonalRankInfo::has_killenemynumin() const {
  return _has_bit(5);
}
inline void PBPersonalRankInfo::clear_killenemynumin() {
  killenemynumin_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::killenemynumin() const {
  return killenemynumin_;
}
inline void PBPersonalRankInfo::set_killenemynumin(::google::protobuf::uint32 value) {
  _set_bit(5);
  killenemynumin_ = value;
}

// optional uint32 KillEnemyNumOut = 7;
inline bool PBPersonalRankInfo::has_killenemynumout() const {
  return _has_bit(6);
}
inline void PBPersonalRankInfo::clear_killenemynumout() {
  killenemynumout_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::killenemynumout() const {
  return killenemynumout_;
}
inline void PBPersonalRankInfo::set_killenemynumout(::google::protobuf::uint32 value) {
  _set_bit(6);
  killenemynumout_ = value;
}

// optional uint32 Honor = 8;
inline bool PBPersonalRankInfo::has_honor() const {
  return _has_bit(7);
}
inline void PBPersonalRankInfo::clear_honor() {
  honor_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::honor() const {
  return honor_;
}
inline void PBPersonalRankInfo::set_honor(::google::protobuf::uint32 value) {
  _set_bit(7);
  honor_ = value;
}

// optional uint32 Comprehensive = 9;
inline bool PBPersonalRankInfo::has_comprehensive() const {
  return _has_bit(8);
}
inline void PBPersonalRankInfo::clear_comprehensive() {
  comprehensive_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::comprehensive() const {
  return comprehensive_;
}
inline void PBPersonalRankInfo::set_comprehensive(::google::protobuf::uint32 value) {
  _set_bit(8);
  comprehensive_ = value;
}

// optional uint32 DieNum = 10;
inline bool PBPersonalRankInfo::has_dienum() const {
  return _has_bit(9);
}
inline void PBPersonalRankInfo::clear_dienum() {
  dienum_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::dienum() const {
  return dienum_;
}
inline void PBPersonalRankInfo::set_dienum(::google::protobuf::uint32 value) {
  _set_bit(9);
  dienum_ = value;
}

// optional uint32 CompletedTasks = 11;
inline bool PBPersonalRankInfo::has_completedtasks() const {
  return _has_bit(10);
}
inline void PBPersonalRankInfo::clear_completedtasks() {
  completedtasks_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::completedtasks() const {
  return completedtasks_;
}
inline void PBPersonalRankInfo::set_completedtasks(::google::protobuf::uint32 value) {
  _set_bit(10);
  completedtasks_ = value;
}

// optional uint32 Country = 12;
inline bool PBPersonalRankInfo::has_country() const {
  return _has_bit(11);
}
inline void PBPersonalRankInfo::clear_country() {
  country_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::country() const {
  return country_;
}
inline void PBPersonalRankInfo::set_country(::google::protobuf::uint32 value) {
  _set_bit(11);
  country_ = value;
}

// optional uint32 Metier = 13;
inline bool PBPersonalRankInfo::has_metier() const {
  return _has_bit(12);
}
inline void PBPersonalRankInfo::clear_metier() {
  metier_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::metier() const {
  return metier_;
}
inline void PBPersonalRankInfo::set_metier(::google::protobuf::uint32 value) {
  _set_bit(12);
  metier_ = value;
}

// optional uint32 Title = 14;
inline bool PBPersonalRankInfo::has_title() const {
  return _has_bit(13);
}
inline void PBPersonalRankInfo::clear_title() {
  title_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::title() const {
  return title_;
}
inline void PBPersonalRankInfo::set_title(::google::protobuf::uint32 value) {
  _set_bit(13);
  title_ = value;
}

// optional uint32 OnLineTime = 15;
inline bool PBPersonalRankInfo::has_onlinetime() const {
  return _has_bit(14);
}
inline void PBPersonalRankInfo::clear_onlinetime() {
  onlinetime_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::onlinetime() const {
  return onlinetime_;
}
inline void PBPersonalRankInfo::set_onlinetime(::google::protobuf::uint32 value) {
  _set_bit(14);
  onlinetime_ = value;
}

// optional uint32 PantaoMark = 16;
inline bool PBPersonalRankInfo::has_pantaomark() const {
  return _has_bit(15);
}
inline void PBPersonalRankInfo::clear_pantaomark() {
  pantaomark_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::pantaomark() const {
  return pantaomark_;
}
inline void PBPersonalRankInfo::set_pantaomark(::google::protobuf::uint32 value) {
  _set_bit(15);
  pantaomark_ = value;
}

// optional uint32 LonggongMark = 17;
inline bool PBPersonalRankInfo::has_longgongmark() const {
  return _has_bit(16);
}
inline void PBPersonalRankInfo::clear_longgongmark() {
  longgongmark_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::longgongmark() const {
  return longgongmark_;
}
inline void PBPersonalRankInfo::set_longgongmark(::google::protobuf::uint32 value) {
  _set_bit(16);
  longgongmark_ = value;
}

// optional uint64 Exp = 18;
inline bool PBPersonalRankInfo::has_exp() const {
  return _has_bit(17);
}
inline void PBPersonalRankInfo::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(17);
}
inline ::google::protobuf::uint64 PBPersonalRankInfo::exp() const {
  return exp_;
}
inline void PBPersonalRankInfo::set_exp(::google::protobuf::uint64 value) {
  _set_bit(17);
  exp_ = value;
}

// optional uint32 OriginReliveTimes = 19;
inline bool PBPersonalRankInfo::has_originrelivetimes() const {
  return _has_bit(18);
}
inline void PBPersonalRankInfo::clear_originrelivetimes() {
  originrelivetimes_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::originrelivetimes() const {
  return originrelivetimes_;
}
inline void PBPersonalRankInfo::set_originrelivetimes(::google::protobuf::uint32 value) {
  _set_bit(18);
  originrelivetimes_ = value;
}

// optional uint32 KillSameNationNum = 20;
inline bool PBPersonalRankInfo::has_killsamenationnum() const {
  return _has_bit(19);
}
inline void PBPersonalRankInfo::clear_killsamenationnum() {
  killsamenationnum_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::killsamenationnum() const {
  return killsamenationnum_;
}
inline void PBPersonalRankInfo::set_killsamenationnum(::google::protobuf::uint32 value) {
  _set_bit(19);
  killsamenationnum_ = value;
}

// optional uint32 KillOgreNum = 21;
inline bool PBPersonalRankInfo::has_killogrenum() const {
  return _has_bit(20);
}
inline void PBPersonalRankInfo::clear_killogrenum() {
  killogrenum_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::killogrenum() const {
  return killogrenum_;
}
inline void PBPersonalRankInfo::set_killogrenum(::google::protobuf::uint32 value) {
  _set_bit(20);
  killogrenum_ = value;
}

// optional uint32 UpFailNum = 22;
inline bool PBPersonalRankInfo::has_upfailnum() const {
  return _has_bit(21);
}
inline void PBPersonalRankInfo::clear_upfailnum() {
  upfailnum_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::upfailnum() const {
  return upfailnum_;
}
inline void PBPersonalRankInfo::set_upfailnum(::google::protobuf::uint32 value) {
  _set_bit(21);
  upfailnum_ = value;
}

// optional uint32 TodayKillEnemyNumIn = 23;
inline bool PBPersonalRankInfo::has_todaykillenemynumin() const {
  return _has_bit(22);
}
inline void PBPersonalRankInfo::clear_todaykillenemynumin() {
  todaykillenemynumin_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::todaykillenemynumin() const {
  return todaykillenemynumin_;
}
inline void PBPersonalRankInfo::set_todaykillenemynumin(::google::protobuf::uint32 value) {
  _set_bit(22);
  todaykillenemynumin_ = value;
}

// optional uint32 TodayKillEnemyNumOut = 24;
inline bool PBPersonalRankInfo::has_todaykillenemynumout() const {
  return _has_bit(23);
}
inline void PBPersonalRankInfo::clear_todaykillenemynumout() {
  todaykillenemynumout_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::todaykillenemynumout() const {
  return todaykillenemynumout_;
}
inline void PBPersonalRankInfo::set_todaykillenemynumout(::google::protobuf::uint32 value) {
  _set_bit(23);
  todaykillenemynumout_ = value;
}

// optional uint32 TodayHonor = 25;
inline bool PBPersonalRankInfo::has_todayhonor() const {
  return _has_bit(24);
}
inline void PBPersonalRankInfo::clear_todayhonor() {
  todayhonor_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::todayhonor() const {
  return todayhonor_;
}
inline void PBPersonalRankInfo::set_todayhonor(::google::protobuf::uint32 value) {
  _set_bit(24);
  todayhonor_ = value;
}

// optional uint32 Dayanta = 26;
inline bool PBPersonalRankInfo::has_dayanta() const {
  return _has_bit(25);
}
inline void PBPersonalRankInfo::clear_dayanta() {
  dayanta_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::dayanta() const {
  return dayanta_;
}
inline void PBPersonalRankInfo::set_dayanta(::google::protobuf::uint32 value) {
  _set_bit(25);
  dayanta_ = value;
}

// optional uint32 Lianhuadong = 27;
inline bool PBPersonalRankInfo::has_lianhuadong() const {
  return _has_bit(26);
}
inline void PBPersonalRankInfo::clear_lianhuadong() {
  lianhuadong_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::lianhuadong() const {
  return lianhuadong_;
}
inline void PBPersonalRankInfo::set_lianhuadong(::google::protobuf::uint32 value) {
  _set_bit(26);
  lianhuadong_ = value;
}

// optional uint32 Huangfengdong = 28;
inline bool PBPersonalRankInfo::has_huangfengdong() const {
  return _has_bit(27);
}
inline void PBPersonalRankInfo::clear_huangfengdong() {
  huangfengdong_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::huangfengdong() const {
  return huangfengdong_;
}
inline void PBPersonalRankInfo::set_huangfengdong(::google::protobuf::uint32 value) {
  _set_bit(27);
  huangfengdong_ = value;
}

// optional uint32 AchivePoint = 29;
inline bool PBPersonalRankInfo::has_achivepoint() const {
  return _has_bit(28);
}
inline void PBPersonalRankInfo::clear_achivepoint() {
  achivepoint_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::achivepoint() const {
  return achivepoint_;
}
inline void PBPersonalRankInfo::set_achivepoint(::google::protobuf::uint32 value) {
  _set_bit(28);
  achivepoint_ = value;
}

// optional uint32 CharmValue = 30;
inline bool PBPersonalRankInfo::has_charmvalue() const {
  return _has_bit(29);
}
inline void PBPersonalRankInfo::clear_charmvalue() {
  charmvalue_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::charmvalue() const {
  return charmvalue_;
}
inline void PBPersonalRankInfo::set_charmvalue(::google::protobuf::uint32 value) {
  _set_bit(29);
  charmvalue_ = value;
}

// optional uint32 FlyDungMark = 31;
inline bool PBPersonalRankInfo::has_flydungmark() const {
  return _has_bit(30);
}
inline void PBPersonalRankInfo::clear_flydungmark() {
  flydungmark_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::flydungmark() const {
  return flydungmark_;
}
inline void PBPersonalRankInfo::set_flydungmark(::google::protobuf::uint32 value) {
  _set_bit(30);
  flydungmark_ = value;
}

// optional uint32 Zhangong = 32;
inline bool PBPersonalRankInfo::has_zhangong() const {
  return _has_bit(31);
}
inline void PBPersonalRankInfo::clear_zhangong() {
  zhangong_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::zhangong() const {
  return zhangong_;
}
inline void PBPersonalRankInfo::set_zhangong(::google::protobuf::uint32 value) {
  _set_bit(31);
  zhangong_ = value;
}

// optional uint32 Zhiguo = 33;
inline bool PBPersonalRankInfo::has_zhiguo() const {
  return _has_bit(32);
}
inline void PBPersonalRankInfo::clear_zhiguo() {
  zhiguo_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::zhiguo() const {
  return zhiguo_;
}
inline void PBPersonalRankInfo::set_zhiguo(::google::protobuf::uint32 value) {
  _set_bit(32);
  zhiguo_ = value;
}

// optional uint32 Tongshuai = 34;
inline bool PBPersonalRankInfo::has_tongshuai() const {
  return _has_bit(33);
}
inline void PBPersonalRankInfo::clear_tongshuai() {
  tongshuai_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::tongshuai() const {
  return tongshuai_;
}
inline void PBPersonalRankInfo::set_tongshuai(::google::protobuf::uint32 value) {
  _set_bit(33);
  tongshuai_ = value;
}

// optional uint32 Wisall = 35;
inline bool PBPersonalRankInfo::has_wisall() const {
  return _has_bit(34);
}
inline void PBPersonalRankInfo::clear_wisall() {
  wisall_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::wisall() const {
  return wisall_;
}
inline void PBPersonalRankInfo::set_wisall(::google::protobuf::uint32 value) {
  _set_bit(34);
  wisall_ = value;
}

// optional uint32 YunXiao = 36;
inline bool PBPersonalRankInfo::has_yunxiao() const {
  return _has_bit(35);
}
inline void PBPersonalRankInfo::clear_yunxiao() {
  yunxiao_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::yunxiao() const {
  return yunxiao_;
}
inline void PBPersonalRankInfo::set_yunxiao(::google::protobuf::uint32 value) {
  _set_bit(35);
  yunxiao_ = value;
}

// optional uint32 WeekIncCharm = 37;
inline bool PBPersonalRankInfo::has_weekinccharm() const {
  return _has_bit(36);
}
inline void PBPersonalRankInfo::clear_weekinccharm() {
  weekinccharm_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::weekinccharm() const {
  return weekinccharm_;
}
inline void PBPersonalRankInfo::set_weekinccharm(::google::protobuf::uint32 value) {
  _set_bit(36);
  weekinccharm_ = value;
}

// optional uint32 Shide = 38;
inline bool PBPersonalRankInfo::has_shide() const {
  return _has_bit(37);
}
inline void PBPersonalRankInfo::clear_shide() {
  shide_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::shide() const {
  return shide_;
}
inline void PBPersonalRankInfo::set_shide(::google::protobuf::uint32 value) {
  _set_bit(37);
  shide_ = value;
}

// optional uint32 XianYuanMark = 39;
inline bool PBPersonalRankInfo::has_xianyuanmark() const {
  return _has_bit(38);
}
inline void PBPersonalRankInfo::clear_xianyuanmark() {
  xianyuanmark_ = 0u;
  _clear_bit(38);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::xianyuanmark() const {
  return xianyuanmark_;
}
inline void PBPersonalRankInfo::set_xianyuanmark(::google::protobuf::uint32 value) {
  _set_bit(38);
  xianyuanmark_ = value;
}

// optional uint32 Chushitu = 40;
inline bool PBPersonalRankInfo::has_chushitu() const {
  return _has_bit(39);
}
inline void PBPersonalRankInfo::clear_chushitu() {
  chushitu_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::chushitu() const {
  return chushitu_;
}
inline void PBPersonalRankInfo::set_chushitu(::google::protobuf::uint32 value) {
  _set_bit(39);
  chushitu_ = value;
}

// optional uint32 YunxiaoLevel = 41;
inline bool PBPersonalRankInfo::has_yunxiaolevel() const {
  return _has_bit(40);
}
inline void PBPersonalRankInfo::clear_yunxiaolevel() {
  yunxiaolevel_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::yunxiaolevel() const {
  return yunxiaolevel_;
}
inline void PBPersonalRankInfo::set_yunxiaolevel(::google::protobuf::uint32 value) {
  _set_bit(40);
  yunxiaolevel_ = value;
}

// optional uint32 WudidongMark = 42;
inline bool PBPersonalRankInfo::has_wudidongmark() const {
  return _has_bit(41);
}
inline void PBPersonalRankInfo::clear_wudidongmark() {
  wudidongmark_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::wudidongmark() const {
  return wudidongmark_;
}
inline void PBPersonalRankInfo::set_wudidongmark(::google::protobuf::uint32 value) {
  _set_bit(41);
  wudidongmark_ = value;
}

// optional uint32 DaLuanDou = 43;
inline bool PBPersonalRankInfo::has_daluandou() const {
  return _has_bit(42);
}
inline void PBPersonalRankInfo::clear_daluandou() {
  daluandou_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::daluandou() const {
  return daluandou_;
}
inline void PBPersonalRankInfo::set_daluandou(::google::protobuf::uint32 value) {
  _set_bit(42);
  daluandou_ = value;
}

// optional uint32 DaLuanDouTotal = 44;
inline bool PBPersonalRankInfo::has_daluandoutotal() const {
  return _has_bit(43);
}
inline void PBPersonalRankInfo::clear_daluandoutotal() {
  daluandoutotal_ = 0u;
  _clear_bit(43);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::daluandoutotal() const {
  return daluandoutotal_;
}
inline void PBPersonalRankInfo::set_daluandoutotal(::google::protobuf::uint32 value) {
  _set_bit(43);
  daluandoutotal_ = value;
}

// optional uint32 GlobalWar = 45;
inline bool PBPersonalRankInfo::has_globalwar() const {
  return _has_bit(44);
}
inline void PBPersonalRankInfo::clear_globalwar() {
  globalwar_ = 0u;
  _clear_bit(44);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::globalwar() const {
  return globalwar_;
}
inline void PBPersonalRankInfo::set_globalwar(::google::protobuf::uint32 value) {
  _set_bit(44);
  globalwar_ = value;
}

// optional uint32 SpiritScore = 46;
inline bool PBPersonalRankInfo::has_spiritscore() const {
  return _has_bit(45);
}
inline void PBPersonalRankInfo::clear_spiritscore() {
  spiritscore_ = 0u;
  _clear_bit(45);
}
inline ::google::protobuf::uint32 PBPersonalRankInfo::spiritscore() const {
  return spiritscore_;
}
inline void PBPersonalRankInfo::set_spiritscore(::google::protobuf::uint32 value) {
  _set_bit(45);
  spiritscore_ = value;
}

// -------------------------------------------------------------------

// CMessagePersonalRankInfoNotify

// repeated .PBPersonalRankInfo PersonalRanks = 1;
inline int CMessagePersonalRankInfoNotify::personalranks_size() const {
  return personalranks_.size();
}
inline void CMessagePersonalRankInfoNotify::clear_personalranks() {
  personalranks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPersonalRankInfo >&
CMessagePersonalRankInfoNotify::personalranks() const {
  return personalranks_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPersonalRankInfo >*
CMessagePersonalRankInfoNotify::mutable_personalranks() {
  return &personalranks_;
}
inline const ::PBPersonalRankInfo& CMessagePersonalRankInfoNotify::personalranks(int index) const {
  return personalranks_.Get(index);
}
inline ::PBPersonalRankInfo* CMessagePersonalRankInfoNotify::mutable_personalranks(int index) {
  return personalranks_.Mutable(index);
}
inline ::PBPersonalRankInfo* CMessagePersonalRankInfoNotify::add_personalranks() {
  return personalranks_.Add();
}

// optional uint32 Flag = 2;
inline bool CMessagePersonalRankInfoNotify::has_flag() const {
  return _has_bit(1);
}
inline void CMessagePersonalRankInfoNotify::clear_flag() {
  flag_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePersonalRankInfoNotify::flag() const {
  return flag_;
}
inline void CMessagePersonalRankInfoNotify::set_flag(::google::protobuf::uint32 value) {
  _set_bit(1);
  flag_ = value;
}

// optional uint32 RType = 3;
inline bool CMessagePersonalRankInfoNotify::has_rtype() const {
  return _has_bit(2);
}
inline void CMessagePersonalRankInfoNotify::clear_rtype() {
  rtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePersonalRankInfoNotify::rtype() const {
  return rtype_;
}
inline void CMessagePersonalRankInfoNotify::set_rtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  rtype_ = value;
}

// optional uint32 IsOver = 4;
inline bool CMessagePersonalRankInfoNotify::has_isover() const {
  return _has_bit(3);
}
inline void CMessagePersonalRankInfoNotify::clear_isover() {
  isover_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePersonalRankInfoNotify::isover() const {
  return isover_;
}
inline void CMessagePersonalRankInfoNotify::set_isover(::google::protobuf::uint32 value) {
  _set_bit(3);
  isover_ = value;
}

// -------------------------------------------------------------------

// PBRankTopTen

// optional uint32 RankType = 1;
inline bool PBRankTopTen::has_ranktype() const {
  return _has_bit(0);
}
inline void PBRankTopTen::clear_ranktype() {
  ranktype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRankTopTen::ranktype() const {
  return ranktype_;
}
inline void PBRankTopTen::set_ranktype(::google::protobuf::uint32 value) {
  _set_bit(0);
  ranktype_ = value;
}

// repeated uint32 CharList = 2;
inline int PBRankTopTen::charlist_size() const {
  return charlist_.size();
}
inline void PBRankTopTen::clear_charlist() {
  charlist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBRankTopTen::charlist() const {
  return charlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBRankTopTen::mutable_charlist() {
  return &charlist_;
}
inline ::google::protobuf::uint32 PBRankTopTen::charlist(int index) const {
  return charlist_.Get(index);
}
inline void PBRankTopTen::set_charlist(int index, ::google::protobuf::uint32 value) {
  charlist_.Set(index, value);
}
inline void PBRankTopTen::add_charlist(::google::protobuf::uint32 value) {
  charlist_.Add(value);
}

// -------------------------------------------------------------------

// CMessageRankRemove

// optional string CharName = 1;
inline bool CMessageRankRemove::has_charname() const {
  return _has_bit(0);
}
inline void CMessageRankRemove::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageRankRemove::charname() const {
  return *charname_;
}
inline void CMessageRankRemove::set_charname(const ::std::string& value) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageRankRemove::set_charname(const char* value) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageRankRemove::set_charname(const char* value, size_t size) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRankRemove::mutable_charname() {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 RankType = 2;
inline bool CMessageRankRemove::has_ranktype() const {
  return _has_bit(1);
}
inline void CMessageRankRemove::clear_ranktype() {
  ranktype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRankRemove::ranktype() const {
  return ranktype_;
}
inline void CMessageRankRemove::set_ranktype(::google::protobuf::uint32 value) {
  _set_bit(1);
  ranktype_ = value;
}

// optional uint32 Refresh = 3;
inline bool CMessageRankRemove::has_refresh() const {
  return _has_bit(2);
}
inline void CMessageRankRemove::clear_refresh() {
  refresh_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRankRemove::refresh() const {
  return refresh_;
}
inline void CMessageRankRemove::set_refresh(::google::protobuf::uint32 value) {
  _set_bit(2);
  refresh_ = value;
}

// -------------------------------------------------------------------

// CMessagePersonalRankInfoRequest

// repeated .PBRankTopTen TopTenList = 1;
inline int CMessagePersonalRankInfoRequest::toptenlist_size() const {
  return toptenlist_.size();
}
inline void CMessagePersonalRankInfoRequest::clear_toptenlist() {
  toptenlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRankTopTen >&
CMessagePersonalRankInfoRequest::toptenlist() const {
  return toptenlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRankTopTen >*
CMessagePersonalRankInfoRequest::mutable_toptenlist() {
  return &toptenlist_;
}
inline const ::PBRankTopTen& CMessagePersonalRankInfoRequest::toptenlist(int index) const {
  return toptenlist_.Get(index);
}
inline ::PBRankTopTen* CMessagePersonalRankInfoRequest::mutable_toptenlist(int index) {
  return toptenlist_.Mutable(index);
}
inline ::PBRankTopTen* CMessagePersonalRankInfoRequest::add_toptenlist() {
  return toptenlist_.Add();
}

// optional uint32 RType = 2;
inline bool CMessagePersonalRankInfoRequest::has_rtype() const {
  return _has_bit(1);
}
inline void CMessagePersonalRankInfoRequest::clear_rtype() {
  rtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePersonalRankInfoRequest::rtype() const {
  return rtype_;
}
inline void CMessagePersonalRankInfoRequest::set_rtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtype_ = value;
}

// -------------------------------------------------------------------

// CMessageNewRankTopTenNotify

// repeated .PBRankTopTen TopTenList = 1;
inline int CMessageNewRankTopTenNotify::toptenlist_size() const {
  return toptenlist_.size();
}
inline void CMessageNewRankTopTenNotify::clear_toptenlist() {
  toptenlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRankTopTen >&
CMessageNewRankTopTenNotify::toptenlist() const {
  return toptenlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRankTopTen >*
CMessageNewRankTopTenNotify::mutable_toptenlist() {
  return &toptenlist_;
}
inline const ::PBRankTopTen& CMessageNewRankTopTenNotify::toptenlist(int index) const {
  return toptenlist_.Get(index);
}
inline ::PBRankTopTen* CMessageNewRankTopTenNotify::mutable_toptenlist(int index) {
  return toptenlist_.Mutable(index);
}
inline ::PBRankTopTen* CMessageNewRankTopTenNotify::add_toptenlist() {
  return toptenlist_.Add();
}

// -------------------------------------------------------------------

// CMessageRoleGameInfoReportToGateNotify

// optional uint32 CharID = 1;
inline bool CMessageRoleGameInfoReportToGateNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageRoleGameInfoReportToGateNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRoleGameInfoReportToGateNotify::charid() const {
  return charid_;
}
inline void CMessageRoleGameInfoReportToGateNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Level = 2;
inline bool CMessageRoleGameInfoReportToGateNotify::has_level() const {
  return _has_bit(1);
}
inline void CMessageRoleGameInfoReportToGateNotify::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRoleGameInfoReportToGateNotify::level() const {
  return level_;
}
inline void CMessageRoleGameInfoReportToGateNotify::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageRoleGameInfoReportToGateNotify::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageRoleGameInfoReportToGateNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRoleGameInfoReportToGateNotify::mapid() const {
  return mapid_;
}
inline void CMessageRoleGameInfoReportToGateNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 LineID = 4;
inline bool CMessageRoleGameInfoReportToGateNotify::has_lineid() const {
  return _has_bit(3);
}
inline void CMessageRoleGameInfoReportToGateNotify::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRoleGameInfoReportToGateNotify::lineid() const {
  return lineid_;
}
inline void CMessageRoleGameInfoReportToGateNotify::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(3);
  lineid_ = value;
}

// optional uint32 Metier = 5;
inline bool CMessageRoleGameInfoReportToGateNotify::has_metier() const {
  return _has_bit(4);
}
inline void CMessageRoleGameInfoReportToGateNotify::clear_metier() {
  metier_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageRoleGameInfoReportToGateNotify::metier() const {
  return metier_;
}
inline void CMessageRoleGameInfoReportToGateNotify::set_metier(::google::protobuf::uint32 value) {
  _set_bit(4);
  metier_ = value;
}

// optional uint32 Country = 6;
inline bool CMessageRoleGameInfoReportToGateNotify::has_country() const {
  return _has_bit(5);
}
inline void CMessageRoleGameInfoReportToGateNotify::clear_country() {
  country_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageRoleGameInfoReportToGateNotify::country() const {
  return country_;
}
inline void CMessageRoleGameInfoReportToGateNotify::set_country(::google::protobuf::uint32 value) {
  _set_bit(5);
  country_ = value;
}

// repeated uint32 MasterID = 7;
inline int CMessageRoleGameInfoReportToGateNotify::masterid_size() const {
  return masterid_.size();
}
inline void CMessageRoleGameInfoReportToGateNotify::clear_masterid() {
  masterid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageRoleGameInfoReportToGateNotify::masterid() const {
  return masterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageRoleGameInfoReportToGateNotify::mutable_masterid() {
  return &masterid_;
}
inline ::google::protobuf::uint32 CMessageRoleGameInfoReportToGateNotify::masterid(int index) const {
  return masterid_.Get(index);
}
inline void CMessageRoleGameInfoReportToGateNotify::set_masterid(int index, ::google::protobuf::uint32 value) {
  masterid_.Set(index, value);
}
inline void CMessageRoleGameInfoReportToGateNotify::add_masterid(::google::protobuf::uint32 value) {
  masterid_.Add(value);
}

// optional uint32 PKValue = 8;
inline bool CMessageRoleGameInfoReportToGateNotify::has_pkvalue() const {
  return _has_bit(7);
}
inline void CMessageRoleGameInfoReportToGateNotify::clear_pkvalue() {
  pkvalue_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageRoleGameInfoReportToGateNotify::pkvalue() const {
  return pkvalue_;
}
inline void CMessageRoleGameInfoReportToGateNotify::set_pkvalue(::google::protobuf::uint32 value) {
  _set_bit(7);
  pkvalue_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleTeamWait

// optional uint32 CharID = 1;
inline bool CMessageBattleTeamWait::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBattleTeamWait::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleTeamWait::charid() const {
  return charid_;
}
inline void CMessageBattleTeamWait::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Level = 2;
inline bool CMessageBattleTeamWait::has_level() const {
  return _has_bit(1);
}
inline void CMessageBattleTeamWait::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleTeamWait::level() const {
  return level_;
}
inline void CMessageBattleTeamWait::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 BattleID = 3;
inline bool CMessageBattleTeamWait::has_battleid() const {
  return _has_bit(2);
}
inline void CMessageBattleTeamWait::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleTeamWait::battleid() const {
  return battleid_;
}
inline void CMessageBattleTeamWait::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  battleid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessageBattleTeamWait::has_mapid() const {
  return _has_bit(3);
}
inline void CMessageBattleTeamWait::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBattleTeamWait::mapid() const {
  return mapid_;
}
inline void CMessageBattleTeamWait::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleWaitLeaveRequest

// optional uint32 CharID = 1;
inline bool CMessageBattleWaitLeaveRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBattleWaitLeaveRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleWaitLeaveRequest::charid() const {
  return charid_;
}
inline void CMessageBattleWaitLeaveRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageBattleWaitLeaveRequest::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageBattleWaitLeaveRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleWaitLeaveRequest::battleid() const {
  return battleid_;
}
inline void CMessageBattleWaitLeaveRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleWaitLeaveRequest::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleWaitLeaveRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleWaitLeaveRequest::mapid() const {
  return mapid_;
}
inline void CMessageBattleWaitLeaveRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleJoinNotice

// optional uint32 CharID = 1;
inline bool CMessageBattleJoinNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBattleJoinNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleJoinNotice::charid() const {
  return charid_;
}
inline void CMessageBattleJoinNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageBattleJoinNotice::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageBattleJoinNotice::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleJoinNotice::battleid() const {
  return battleid_;
}
inline void CMessageBattleJoinNotice::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleJoinNotice::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleJoinNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleJoinNotice::mapid() const {
  return mapid_;
}
inline void CMessageBattleJoinNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 Type = 4;
inline bool CMessageBattleJoinNotice::has_type() const {
  return _has_bit(3);
}
inline void CMessageBattleJoinNotice::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBattleJoinNotice::type() const {
  return type_;
}
inline void CMessageBattleJoinNotice::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// optional uint32 BattleTime = 5;
inline bool CMessageBattleJoinNotice::has_battletime() const {
  return _has_bit(4);
}
inline void CMessageBattleJoinNotice::clear_battletime() {
  battletime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBattleJoinNotice::battletime() const {
  return battletime_;
}
inline void CMessageBattleJoinNotice::set_battletime(::google::protobuf::uint32 value) {
  _set_bit(4);
  battletime_ = value;
}

// optional uint32 Key = 6;
inline bool CMessageBattleJoinNotice::has_key() const {
  return _has_bit(5);
}
inline void CMessageBattleJoinNotice::clear_key() {
  key_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageBattleJoinNotice::key() const {
  return key_;
}
inline void CMessageBattleJoinNotice::set_key(::google::protobuf::uint32 value) {
  _set_bit(5);
  key_ = value;
}

// optional uint32 IntoLastRepetion = 7;
inline bool CMessageBattleJoinNotice::has_intolastrepetion() const {
  return _has_bit(6);
}
inline void CMessageBattleJoinNotice::clear_intolastrepetion() {
  intolastrepetion_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageBattleJoinNotice::intolastrepetion() const {
  return intolastrepetion_;
}
inline void CMessageBattleJoinNotice::set_intolastrepetion(::google::protobuf::uint32 value) {
  _set_bit(6);
  intolastrepetion_ = value;
}

// -------------------------------------------------------------------

// CMessageBattlePlayerJoin

// optional uint32 CharID = 1;
inline bool CMessageBattlePlayerJoin::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBattlePlayerJoin::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattlePlayerJoin::charid() const {
  return charid_;
}
inline void CMessageBattlePlayerJoin::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageBattlePlayerJoin::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageBattlePlayerJoin::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattlePlayerJoin::battleid() const {
  return battleid_;
}
inline void CMessageBattlePlayerJoin::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// optional uint64 Key = 3;
inline bool CMessageBattlePlayerJoin::has_key() const {
  return _has_bit(2);
}
inline void CMessageBattlePlayerJoin::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageBattlePlayerJoin::key() const {
  return key_;
}
inline void CMessageBattlePlayerJoin::set_key(::google::protobuf::uint64 value) {
  _set_bit(2);
  key_ = value;
}

// optional uint32 CampID = 4;
inline bool CMessageBattlePlayerJoin::has_campid() const {
  return _has_bit(3);
}
inline void CMessageBattlePlayerJoin::clear_campid() {
  campid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBattlePlayerJoin::campid() const {
  return campid_;
}
inline void CMessageBattlePlayerJoin::set_campid(::google::protobuf::uint32 value) {
  _set_bit(3);
  campid_ = value;
}

// optional uint32 MapID = 5;
inline bool CMessageBattlePlayerJoin::has_mapid() const {
  return _has_bit(4);
}
inline void CMessageBattlePlayerJoin::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBattlePlayerJoin::mapid() const {
  return mapid_;
}
inline void CMessageBattlePlayerJoin::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(4);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleWaitNotice

// optional uint32 CharID = 1;
inline bool CMessageBattleWaitNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBattleWaitNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleWaitNotice::charid() const {
  return charid_;
}
inline void CMessageBattleWaitNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageBattleWaitNotice::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageBattleWaitNotice::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleWaitNotice::battleid() const {
  return battleid_;
}
inline void CMessageBattleWaitNotice::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleWaitNotice::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleWaitNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleWaitNotice::mapid() const {
  return mapid_;
}
inline void CMessageBattleWaitNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageServerValidateRequest

// optional string MacAddr = 1;
inline bool CMessageServerValidateRequest::has_macaddr() const {
  return _has_bit(0);
}
inline void CMessageServerValidateRequest::clear_macaddr() {
  if (macaddr_ != &_default_macaddr_) {
    macaddr_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageServerValidateRequest::macaddr() const {
  return *macaddr_;
}
inline void CMessageServerValidateRequest::set_macaddr(const ::std::string& value) {
  _set_bit(0);
  if (macaddr_ == &_default_macaddr_) {
    macaddr_ = new ::std::string;
  }
  macaddr_->assign(value);
}
inline void CMessageServerValidateRequest::set_macaddr(const char* value) {
  _set_bit(0);
  if (macaddr_ == &_default_macaddr_) {
    macaddr_ = new ::std::string;
  }
  macaddr_->assign(value);
}
inline void CMessageServerValidateRequest::set_macaddr(const char* value, size_t size) {
  _set_bit(0);
  if (macaddr_ == &_default_macaddr_) {
    macaddr_ = new ::std::string;
  }
  macaddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageServerValidateRequest::mutable_macaddr() {
  _set_bit(0);
  if (macaddr_ == &_default_macaddr_) {
    macaddr_ = new ::std::string;
  }
  return macaddr_;
}

// optional string IPAddr = 2;
inline bool CMessageServerValidateRequest::has_ipaddr() const {
  return _has_bit(1);
}
inline void CMessageServerValidateRequest::clear_ipaddr() {
  if (ipaddr_ != &_default_ipaddr_) {
    ipaddr_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageServerValidateRequest::ipaddr() const {
  return *ipaddr_;
}
inline void CMessageServerValidateRequest::set_ipaddr(const ::std::string& value) {
  _set_bit(1);
  if (ipaddr_ == &_default_ipaddr_) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(value);
}
inline void CMessageServerValidateRequest::set_ipaddr(const char* value) {
  _set_bit(1);
  if (ipaddr_ == &_default_ipaddr_) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(value);
}
inline void CMessageServerValidateRequest::set_ipaddr(const char* value, size_t size) {
  _set_bit(1);
  if (ipaddr_ == &_default_ipaddr_) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageServerValidateRequest::mutable_ipaddr() {
  _set_bit(1);
  if (ipaddr_ == &_default_ipaddr_) {
    ipaddr_ = new ::std::string;
  }
  return ipaddr_;
}

// -------------------------------------------------------------------

// CMessageBattleWaitLeaveResponse

// optional uint32 CharID = 1;
inline bool CMessageBattleWaitLeaveResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBattleWaitLeaveResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleWaitLeaveResponse::charid() const {
  return charid_;
}
inline void CMessageBattleWaitLeaveResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageBattleWaitLeaveResponse::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageBattleWaitLeaveResponse::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleWaitLeaveResponse::battleid() const {
  return battleid_;
}
inline void CMessageBattleWaitLeaveResponse::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleWaitLeaveResponse::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleWaitLeaveResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleWaitLeaveResponse::mapid() const {
  return mapid_;
}
inline void CMessageBattleWaitLeaveResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageServerValidateResponse

// optional uint32 CheckResult = 1;
inline bool CMessageServerValidateResponse::has_checkresult() const {
  return _has_bit(0);
}
inline void CMessageServerValidateResponse::clear_checkresult() {
  checkresult_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageServerValidateResponse::checkresult() const {
  return checkresult_;
}
inline void CMessageServerValidateResponse::set_checkresult(::google::protobuf::uint32 value) {
  _set_bit(0);
  checkresult_ = value;
}

// -------------------------------------------------------------------

// CTracedPlayerInfo

// optional uint32 AccountID = 1;
inline bool CTracedPlayerInfo::has_accountid() const {
  return _has_bit(0);
}
inline void CTracedPlayerInfo::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CTracedPlayerInfo::accountid() const {
  return accountid_;
}
inline void CTracedPlayerInfo::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// repeated uint32 RoleID = 2;
inline int CTracedPlayerInfo::roleid_size() const {
  return roleid_.size();
}
inline void CTracedPlayerInfo::clear_roleid() {
  roleid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CTracedPlayerInfo::roleid() const {
  return roleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CTracedPlayerInfo::mutable_roleid() {
  return &roleid_;
}
inline ::google::protobuf::uint32 CTracedPlayerInfo::roleid(int index) const {
  return roleid_.Get(index);
}
inline void CTracedPlayerInfo::set_roleid(int index, ::google::protobuf::uint32 value) {
  roleid_.Set(index, value);
}
inline void CTracedPlayerInfo::add_roleid(::google::protobuf::uint32 value) {
  roleid_.Add(value);
}

// -------------------------------------------------------------------

// CMessageNotifyTracedPlayer

// repeated .CTracedPlayerInfo PlayerList = 1;
inline int CMessageNotifyTracedPlayer::playerlist_size() const {
  return playerlist_.size();
}
inline void CMessageNotifyTracedPlayer::clear_playerlist() {
  playerlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CTracedPlayerInfo >&
CMessageNotifyTracedPlayer::playerlist() const {
  return playerlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CTracedPlayerInfo >*
CMessageNotifyTracedPlayer::mutable_playerlist() {
  return &playerlist_;
}
inline const ::CTracedPlayerInfo& CMessageNotifyTracedPlayer::playerlist(int index) const {
  return playerlist_.Get(index);
}
inline ::CTracedPlayerInfo* CMessageNotifyTracedPlayer::mutable_playerlist(int index) {
  return playerlist_.Mutable(index);
}
inline ::CTracedPlayerInfo* CMessageNotifyTracedPlayer::add_playerlist() {
  return playerlist_.Add();
}

// -------------------------------------------------------------------

// CMessageBattleCreateRequest

// optional uint32 BattleID = 1;
inline bool CMessageBattleCreateRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageBattleCreateRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleCreateRequest::battleid() const {
  return battleid_;
}
inline void CMessageBattleCreateRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 Level = 2;
inline bool CMessageBattleCreateRequest::has_level() const {
  return _has_bit(1);
}
inline void CMessageBattleCreateRequest::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleCreateRequest::level() const {
  return level_;
}
inline void CMessageBattleCreateRequest::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleCreateRequest::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleCreateRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleCreateRequest::mapid() const {
  return mapid_;
}
inline void CMessageBattleCreateRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleCreateResponse

// optional uint32 BattleID = 1;
inline bool CMessageBattleCreateResponse::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageBattleCreateResponse::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleCreateResponse::battleid() const {
  return battleid_;
}
inline void CMessageBattleCreateResponse::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint64 Key = 2;
inline bool CMessageBattleCreateResponse::has_key() const {
  return _has_bit(1);
}
inline void CMessageBattleCreateResponse::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMessageBattleCreateResponse::key() const {
  return key_;
}
inline void CMessageBattleCreateResponse::set_key(::google::protobuf::uint64 value) {
  _set_bit(1);
  key_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleCreateResponse::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleCreateResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleCreateResponse::mapid() const {
  return mapid_;
}
inline void CMessageBattleCreateResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageFamilyIDNameNotify

// repeated uint32 FamilyID = 1;
inline int CMessageFamilyIDNameNotify::familyid_size() const {
  return familyid_.size();
}
inline void CMessageFamilyIDNameNotify::clear_familyid() {
  familyid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageFamilyIDNameNotify::familyid() const {
  return familyid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageFamilyIDNameNotify::mutable_familyid() {
  return &familyid_;
}
inline ::google::protobuf::uint32 CMessageFamilyIDNameNotify::familyid(int index) const {
  return familyid_.Get(index);
}
inline void CMessageFamilyIDNameNotify::set_familyid(int index, ::google::protobuf::uint32 value) {
  familyid_.Set(index, value);
}
inline void CMessageFamilyIDNameNotify::add_familyid(::google::protobuf::uint32 value) {
  familyid_.Add(value);
}

// repeated string FamilyName = 2;
inline int CMessageFamilyIDNameNotify::familyname_size() const {
  return familyname_.size();
}
inline void CMessageFamilyIDNameNotify::clear_familyname() {
  familyname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageFamilyIDNameNotify::familyname() const {
  return familyname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageFamilyIDNameNotify::mutable_familyname() {
  return &familyname_;
}
inline const ::std::string& CMessageFamilyIDNameNotify::familyname(int index) const {
  return familyname_.Get(index);
}
inline ::std::string* CMessageFamilyIDNameNotify::mutable_familyname(int index) {
  return familyname_.Mutable(index);
}
inline void CMessageFamilyIDNameNotify::set_familyname(int index, const ::std::string& value) {
  familyname_.Mutable(index)->assign(value);
}
inline void CMessageFamilyIDNameNotify::set_familyname(int index, const char* value) {
  familyname_.Mutable(index)->assign(value);
}
inline void CMessageFamilyIDNameNotify::set_familyname(int index, const char* value, size_t size) {
  familyname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFamilyIDNameNotify::add_familyname() {
  return familyname_.Add();
}
inline void CMessageFamilyIDNameNotify::add_familyname(const ::std::string& value) {
  familyname_.Add()->assign(value);
}
inline void CMessageFamilyIDNameNotify::add_familyname(const char* value) {
  familyname_.Add()->assign(value);
}
inline void CMessageFamilyIDNameNotify::add_familyname(const char* value, size_t size) {
  familyname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// PBCorpsNpc

// optional uint32 NpcID = 1;
inline bool PBCorpsNpc::has_npcid() const {
  return _has_bit(0);
}
inline void PBCorpsNpc::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCorpsNpc::npcid() const {
  return npcid_;
}
inline void PBCorpsNpc::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// optional uint32 CorpsID = 2;
inline bool PBCorpsNpc::has_corpsid() const {
  return _has_bit(1);
}
inline void PBCorpsNpc::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBCorpsNpc::corpsid() const {
  return corpsid_;
}
inline void PBCorpsNpc::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional string CorpsName = 3;
inline bool PBCorpsNpc::has_corpsname() const {
  return _has_bit(2);
}
inline void PBCorpsNpc::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBCorpsNpc::corpsname() const {
  return *corpsname_;
}
inline void PBCorpsNpc::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBCorpsNpc::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBCorpsNpc::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCorpsNpc::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 Type = 4;
inline bool PBCorpsNpc::has_type() const {
  return _has_bit(3);
}
inline void PBCorpsNpc::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBCorpsNpc::type() const {
  return type_;
}
inline void PBCorpsNpc::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// CMessageNpcListNotify

// repeated uint32 NpcID = 1;
inline int CMessageNpcListNotify::npcid_size() const {
  return npcid_.size();
}
inline void CMessageNpcListNotify::clear_npcid() {
  npcid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageNpcListNotify::npcid() const {
  return npcid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageNpcListNotify::mutable_npcid() {
  return &npcid_;
}
inline ::google::protobuf::uint32 CMessageNpcListNotify::npcid(int index) const {
  return npcid_.Get(index);
}
inline void CMessageNpcListNotify::set_npcid(int index, ::google::protobuf::uint32 value) {
  npcid_.Set(index, value);
}
inline void CMessageNpcListNotify::add_npcid(::google::protobuf::uint32 value) {
  npcid_.Add(value);
}

// repeated uint32 FamilyID = 2;
inline int CMessageNpcListNotify::familyid_size() const {
  return familyid_.size();
}
inline void CMessageNpcListNotify::clear_familyid() {
  familyid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageNpcListNotify::familyid() const {
  return familyid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageNpcListNotify::mutable_familyid() {
  return &familyid_;
}
inline ::google::protobuf::uint32 CMessageNpcListNotify::familyid(int index) const {
  return familyid_.Get(index);
}
inline void CMessageNpcListNotify::set_familyid(int index, ::google::protobuf::uint32 value) {
  familyid_.Set(index, value);
}
inline void CMessageNpcListNotify::add_familyid(::google::protobuf::uint32 value) {
  familyid_.Add(value);
}

// optional uint32 Type = 3;
inline bool CMessageNpcListNotify::has_type() const {
  return _has_bit(2);
}
inline void CMessageNpcListNotify::clear_type() {
  type_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageNpcListNotify::type() const {
  return type_;
}
inline void CMessageNpcListNotify::set_type(::google::protobuf::uint32 value) {
  _set_bit(2);
  type_ = value;
}

// repeated .PBCorpsNpc CorpsNpc = 4;
inline int CMessageNpcListNotify::corpsnpc_size() const {
  return corpsnpc_.size();
}
inline void CMessageNpcListNotify::clear_corpsnpc() {
  corpsnpc_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsNpc >&
CMessageNpcListNotify::corpsnpc() const {
  return corpsnpc_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsNpc >*
CMessageNpcListNotify::mutable_corpsnpc() {
  return &corpsnpc_;
}
inline const ::PBCorpsNpc& CMessageNpcListNotify::corpsnpc(int index) const {
  return corpsnpc_.Get(index);
}
inline ::PBCorpsNpc* CMessageNpcListNotify::mutable_corpsnpc(int index) {
  return corpsnpc_.Mutable(index);
}
inline ::PBCorpsNpc* CMessageNpcListNotify::add_corpsnpc() {
  return corpsnpc_.Add();
}

// -------------------------------------------------------------------

// CMessageBidTimeOutNotify

// optional uint32 NpcID = 1;
inline bool CMessageBidTimeOutNotify::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageBidTimeOutNotify::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBidTimeOutNotify::npcid() const {
  return npcid_;
}
inline void CMessageBidTimeOutNotify::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// optional uint32 First = 2;
inline bool CMessageBidTimeOutNotify::has_first() const {
  return _has_bit(1);
}
inline void CMessageBidTimeOutNotify::clear_first() {
  first_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBidTimeOutNotify::first() const {
  return first_;
}
inline void CMessageBidTimeOutNotify::set_first(::google::protobuf::uint32 value) {
  _set_bit(1);
  first_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleStartRequest

// optional uint32 NpcID = 1;
inline bool CMessageBattleStartRequest::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageBattleStartRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleStartRequest::npcid() const {
  return npcid_;
}
inline void CMessageBattleStartRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleStartResponse

// optional uint32 NpcID = 1;
inline bool CMessageBattleStartResponse::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageBattleStartResponse::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleStartResponse::npcid() const {
  return npcid_;
}
inline void CMessageBattleStartResponse::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// repeated uint32 CharID = 2;
inline int CMessageBattleStartResponse::charid_size() const {
  return charid_.size();
}
inline void CMessageBattleStartResponse::clear_charid() {
  charid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageBattleStartResponse::charid() const {
  return charid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageBattleStartResponse::mutable_charid() {
  return &charid_;
}
inline ::google::protobuf::uint32 CMessageBattleStartResponse::charid(int index) const {
  return charid_.Get(index);
}
inline void CMessageBattleStartResponse::set_charid(int index, ::google::protobuf::uint32 value) {
  charid_.Set(index, value);
}
inline void CMessageBattleStartResponse::add_charid(::google::protobuf::uint32 value) {
  charid_.Add(value);
}

// repeated string CharName = 3;
inline int CMessageBattleStartResponse::charname_size() const {
  return charname_.size();
}
inline void CMessageBattleStartResponse::clear_charname() {
  charname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageBattleStartResponse::charname() const {
  return charname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageBattleStartResponse::mutable_charname() {
  return &charname_;
}
inline const ::std::string& CMessageBattleStartResponse::charname(int index) const {
  return charname_.Get(index);
}
inline ::std::string* CMessageBattleStartResponse::mutable_charname(int index) {
  return charname_.Mutable(index);
}
inline void CMessageBattleStartResponse::set_charname(int index, const ::std::string& value) {
  charname_.Mutable(index)->assign(value);
}
inline void CMessageBattleStartResponse::set_charname(int index, const char* value) {
  charname_.Mutable(index)->assign(value);
}
inline void CMessageBattleStartResponse::set_charname(int index, const char* value, size_t size) {
  charname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageBattleStartResponse::add_charname() {
  return charname_.Add();
}
inline void CMessageBattleStartResponse::add_charname(const ::std::string& value) {
  charname_.Add()->assign(value);
}
inline void CMessageBattleStartResponse::add_charname(const char* value) {
  charname_.Add()->assign(value);
}
inline void CMessageBattleStartResponse::add_charname(const char* value, size_t size) {
  charname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 Money = 4;
inline int CMessageBattleStartResponse::money_size() const {
  return money_.size();
}
inline void CMessageBattleStartResponse::clear_money() {
  money_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageBattleStartResponse::money() const {
  return money_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageBattleStartResponse::mutable_money() {
  return &money_;
}
inline ::google::protobuf::uint32 CMessageBattleStartResponse::money(int index) const {
  return money_.Get(index);
}
inline void CMessageBattleStartResponse::set_money(int index, ::google::protobuf::uint32 value) {
  money_.Set(index, value);
}
inline void CMessageBattleStartResponse::add_money(::google::protobuf::uint32 value) {
  money_.Add(value);
}

// -------------------------------------------------------------------

// CMessageBattleEndNotify

// optional uint64 Key = 1;
inline bool CMessageBattleEndNotify::has_key() const {
  return _has_bit(0);
}
inline void CMessageBattleEndNotify::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMessageBattleEndNotify::key() const {
  return key_;
}
inline void CMessageBattleEndNotify::set_key(::google::protobuf::uint64 value) {
  _set_bit(0);
  key_ = value;
}

// optional uint32 WinSide = 2;
inline bool CMessageBattleEndNotify::has_winside() const {
  return _has_bit(1);
}
inline void CMessageBattleEndNotify::clear_winside() {
  winside_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleEndNotify::winside() const {
  return winside_;
}
inline void CMessageBattleEndNotify::set_winside(::google::protobuf::uint32 value) {
  _set_bit(1);
  winside_ = value;
}

// -------------------------------------------------------------------

// CMessageBidRestartNotify

// optional uint32 NpcID = 1;
inline bool CMessageBidRestartNotify::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageBidRestartNotify::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBidRestartNotify::npcid() const {
  return npcid_;
}
inline void CMessageBidRestartNotify::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainTopTenRequest

// optional uint32 CharID = 1;
inline bool CMessageObtainTopTenRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageObtainTopTenRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageObtainTopTenRequest::charid() const {
  return charid_;
}
inline void CMessageObtainTopTenRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// PBRankTitle

// optional uint32 Index = 1;
inline bool PBRankTitle::has_index() const {
  return _has_bit(0);
}
inline void PBRankTitle::clear_index() {
  index_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRankTitle::index() const {
  return index_;
}
inline void PBRankTitle::set_index(::google::protobuf::uint32 value) {
  _set_bit(0);
  index_ = value;
}

// optional uint32 RankType = 2;
inline bool PBRankTitle::has_ranktype() const {
  return _has_bit(1);
}
inline void PBRankTitle::clear_ranktype() {
  ranktype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBRankTitle::ranktype() const {
  return ranktype_;
}
inline void PBRankTitle::set_ranktype(::google::protobuf::uint32 value) {
  _set_bit(1);
  ranktype_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainTopTenResponse

// optional uint32 CharID = 1;
inline bool CMessageObtainTopTenResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageObtainTopTenResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageObtainTopTenResponse::charid() const {
  return charid_;
}
inline void CMessageObtainTopTenResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// repeated .PBRankTitle RankTitle = 2;
inline int CMessageObtainTopTenResponse::ranktitle_size() const {
  return ranktitle_.size();
}
inline void CMessageObtainTopTenResponse::clear_ranktitle() {
  ranktitle_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRankTitle >&
CMessageObtainTopTenResponse::ranktitle() const {
  return ranktitle_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRankTitle >*
CMessageObtainTopTenResponse::mutable_ranktitle() {
  return &ranktitle_;
}
inline const ::PBRankTitle& CMessageObtainTopTenResponse::ranktitle(int index) const {
  return ranktitle_.Get(index);
}
inline ::PBRankTitle* CMessageObtainTopTenResponse::mutable_ranktitle(int index) {
  return ranktitle_.Mutable(index);
}
inline ::PBRankTitle* CMessageObtainTopTenResponse::add_ranktitle() {
  return ranktitle_.Add();
}

// -------------------------------------------------------------------

// CMessageCorpsBidTimerStopRequest

// optional uint32 NpcID = 1;
inline bool CMessageCorpsBidTimerStopRequest::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageCorpsBidTimerStopRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsBidTimerStopRequest::npcid() const {
  return npcid_;
}
inline void CMessageCorpsBidTimerStopRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// optional uint32 BattleId = 2;
inline bool CMessageCorpsBidTimerStopRequest::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsBidTimerStopRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBidTimerStopRequest::battleid() const {
  return battleid_;
}
inline void CMessageCorpsBidTimerStopRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsJoinBattleNotice

// optional uint32 CharID = 1;
inline bool CMessageCorpsJoinBattleNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCorpsJoinBattleNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsJoinBattleNotice::charid() const {
  return charid_;
}
inline void CMessageCorpsJoinBattleNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsJoinBattleNotice::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsJoinBattleNotice::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsJoinBattleNotice::npcid() const {
  return npcid_;
}
inline void CMessageCorpsJoinBattleNotice::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageNotifyBattleResult2Gate

// optional uint32 BattleID = 1;
inline bool CMessageNotifyBattleResult2Gate::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageNotifyBattleResult2Gate::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageNotifyBattleResult2Gate::battleid() const {
  return battleid_;
}
inline void CMessageNotifyBattleResult2Gate::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 WinCamp = 2;
inline bool CMessageNotifyBattleResult2Gate::has_wincamp() const {
  return _has_bit(1);
}
inline void CMessageNotifyBattleResult2Gate::clear_wincamp() {
  wincamp_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageNotifyBattleResult2Gate::wincamp() const {
  return wincamp_;
}
inline void CMessageNotifyBattleResult2Gate::set_wincamp(::google::protobuf::uint32 value) {
  _set_bit(1);
  wincamp_ = value;
}

// optional uint64 BattleKey = 3;
inline bool CMessageNotifyBattleResult2Gate::has_battlekey() const {
  return _has_bit(2);
}
inline void CMessageNotifyBattleResult2Gate::clear_battlekey() {
  battlekey_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageNotifyBattleResult2Gate::battlekey() const {
  return battlekey_;
}
inline void CMessageNotifyBattleResult2Gate::set_battlekey(::google::protobuf::uint64 value) {
  _set_bit(2);
  battlekey_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBattleFlagRequest

// optional uint32 CharID = 1;
inline bool CMessageCorpsBattleFlagRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCorpsBattleFlagRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagRequest::charid() const {
  return charid_;
}
inline void CMessageCorpsBattleFlagRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 CorpsID = 2;
inline bool CMessageCorpsBattleFlagRequest::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageCorpsBattleFlagRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageCorpsBattleFlagRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional uint32 CampID = 3;
inline bool CMessageCorpsBattleFlagRequest::has_campid() const {
  return _has_bit(2);
}
inline void CMessageCorpsBattleFlagRequest::clear_campid() {
  campid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagRequest::campid() const {
  return campid_;
}
inline void CMessageCorpsBattleFlagRequest::set_campid(::google::protobuf::uint32 value) {
  _set_bit(2);
  campid_ = value;
}

// optional uint32 BattleID = 4;
inline bool CMessageCorpsBattleFlagRequest::has_battleid() const {
  return _has_bit(3);
}
inline void CMessageCorpsBattleFlagRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagRequest::battleid() const {
  return battleid_;
}
inline void CMessageCorpsBattleFlagRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  battleid_ = value;
}

// optional uint32 IsAll = 5;
inline bool CMessageCorpsBattleFlagRequest::has_isall() const {
  return _has_bit(4);
}
inline void CMessageCorpsBattleFlagRequest::clear_isall() {
  isall_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagRequest::isall() const {
  return isall_;
}
inline void CMessageCorpsBattleFlagRequest::set_isall(::google::protobuf::uint32 value) {
  _set_bit(4);
  isall_ = value;
}

// optional uint64 BattleKey = 6;
inline bool CMessageCorpsBattleFlagRequest::has_battlekey() const {
  return _has_bit(5);
}
inline void CMessageCorpsBattleFlagRequest::clear_battlekey() {
  battlekey_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 CMessageCorpsBattleFlagRequest::battlekey() const {
  return battlekey_;
}
inline void CMessageCorpsBattleFlagRequest::set_battlekey(::google::protobuf::uint64 value) {
  _set_bit(5);
  battlekey_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBattleFlagResponse

// optional uint32 CharID = 1;
inline bool CMessageCorpsBattleFlagResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCorpsBattleFlagResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagResponse::charid() const {
  return charid_;
}
inline void CMessageCorpsBattleFlagResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CorpsName = 2;
inline bool CMessageCorpsBattleFlagResponse::has_corpsname() const {
  return _has_bit(1);
}
inline void CMessageCorpsBattleFlagResponse::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCorpsBattleFlagResponse::corpsname() const {
  return *corpsname_;
}
inline void CMessageCorpsBattleFlagResponse::set_corpsname(const ::std::string& value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCorpsBattleFlagResponse::set_corpsname(const char* value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCorpsBattleFlagResponse::set_corpsname(const char* value, size_t size) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsBattleFlagResponse::mutable_corpsname() {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 BattleID = 3;
inline bool CMessageCorpsBattleFlagResponse::has_battleid() const {
  return _has_bit(2);
}
inline void CMessageCorpsBattleFlagResponse::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagResponse::battleid() const {
  return battleid_;
}
inline void CMessageCorpsBattleFlagResponse::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  battleid_ = value;
}

// optional uint32 CampID = 4;
inline bool CMessageCorpsBattleFlagResponse::has_campid() const {
  return _has_bit(3);
}
inline void CMessageCorpsBattleFlagResponse::clear_campid() {
  campid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagResponse::campid() const {
  return campid_;
}
inline void CMessageCorpsBattleFlagResponse::set_campid(::google::protobuf::uint32 value) {
  _set_bit(3);
  campid_ = value;
}

// optional uint32 IsAll = 5;
inline bool CMessageCorpsBattleFlagResponse::has_isall() const {
  return _has_bit(4);
}
inline void CMessageCorpsBattleFlagResponse::clear_isall() {
  isall_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleFlagResponse::isall() const {
  return isall_;
}
inline void CMessageCorpsBattleFlagResponse::set_isall(::google::protobuf::uint32 value) {
  _set_bit(4);
  isall_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateRepetionNotify

// optional uint32 RepetionIndex = 1;
inline bool CMessageCreateRepetionNotify::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessageCreateRepetionNotify::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionNotify::repetionindex() const {
  return repetionindex_;
}
inline void CMessageCreateRepetionNotify::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// optional uint64 Key = 2;
inline bool CMessageCreateRepetionNotify::has_key() const {
  return _has_bit(1);
}
inline void CMessageCreateRepetionNotify::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMessageCreateRepetionNotify::key() const {
  return key_;
}
inline void CMessageCreateRepetionNotify::set_key(::google::protobuf::uint64 value) {
  _set_bit(1);
  key_ = value;
}

// optional uint32 Parame1 = 3;
inline bool CMessageCreateRepetionNotify::has_parame1() const {
  return _has_bit(2);
}
inline void CMessageCreateRepetionNotify::clear_parame1() {
  parame1_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionNotify::parame1() const {
  return parame1_;
}
inline void CMessageCreateRepetionNotify::set_parame1(::google::protobuf::uint32 value) {
  _set_bit(2);
  parame1_ = value;
}

// optional uint32 Parame2 = 4;
inline bool CMessageCreateRepetionNotify::has_parame2() const {
  return _has_bit(3);
}
inline void CMessageCreateRepetionNotify::clear_parame2() {
  parame2_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionNotify::parame2() const {
  return parame2_;
}
inline void CMessageCreateRepetionNotify::set_parame2(::google::protobuf::uint32 value) {
  _set_bit(3);
  parame2_ = value;
}

// optional uint32 LineID = 5;
inline bool CMessageCreateRepetionNotify::has_lineid() const {
  return _has_bit(4);
}
inline void CMessageCreateRepetionNotify::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionNotify::lineid() const {
  return lineid_;
}
inline void CMessageCreateRepetionNotify::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(4);
  lineid_ = value;
}

// optional uint32 Creator = 6;
inline bool CMessageCreateRepetionNotify::has_creator() const {
  return _has_bit(5);
}
inline void CMessageCreateRepetionNotify::clear_creator() {
  creator_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionNotify::creator() const {
  return creator_;
}
inline void CMessageCreateRepetionNotify::set_creator(::google::protobuf::uint32 value) {
  _set_bit(5);
  creator_ = value;
}

// optional uint32 RemoveItem = 7;
inline bool CMessageCreateRepetionNotify::has_removeitem() const {
  return _has_bit(6);
}
inline void CMessageCreateRepetionNotify::clear_removeitem() {
  removeitem_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionNotify::removeitem() const {
  return removeitem_;
}
inline void CMessageCreateRepetionNotify::set_removeitem(::google::protobuf::uint32 value) {
  _set_bit(6);
  removeitem_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateRepetionErr

// optional uint32 RepetionIndex = 1;
inline bool CMessageCreateRepetionErr::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessageCreateRepetionErr::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionErr::repetionindex() const {
  return repetionindex_;
}
inline void CMessageCreateRepetionErr::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// optional uint64 Key = 2;
inline bool CMessageCreateRepetionErr::has_key() const {
  return _has_bit(1);
}
inline void CMessageCreateRepetionErr::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 CMessageCreateRepetionErr::key() const {
  return key_;
}
inline void CMessageCreateRepetionErr::set_key(::google::protobuf::uint64 value) {
  _set_bit(1);
  key_ = value;
}

// optional uint32 ErrCode = 3;
inline bool CMessageCreateRepetionErr::has_errcode() const {
  return _has_bit(2);
}
inline void CMessageCreateRepetionErr::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCreateRepetionErr::errcode() const {
  return errcode_;
}
inline void CMessageCreateRepetionErr::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(2);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageTeamIntoRepetion

// optional uint32 MapID = 1;
inline bool CMessageTeamIntoRepetion::has_mapid() const {
  return _has_bit(0);
}
inline void CMessageTeamIntoRepetion::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTeamIntoRepetion::mapid() const {
  return mapid_;
}
inline void CMessageTeamIntoRepetion::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageTeamIntoRepetion::has_charid() const {
  return _has_bit(1);
}
inline void CMessageTeamIntoRepetion::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTeamIntoRepetion::charid() const {
  return charid_;
}
inline void CMessageTeamIntoRepetion::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 PosX = 3;
inline bool CMessageTeamIntoRepetion::has_posx() const {
  return _has_bit(2);
}
inline void CMessageTeamIntoRepetion::clear_posx() {
  posx_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTeamIntoRepetion::posx() const {
  return posx_;
}
inline void CMessageTeamIntoRepetion::set_posx(::google::protobuf::uint32 value) {
  _set_bit(2);
  posx_ = value;
}

// optional uint32 PosY = 4;
inline bool CMessageTeamIntoRepetion::has_posy() const {
  return _has_bit(3);
}
inline void CMessageTeamIntoRepetion::clear_posy() {
  posy_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTeamIntoRepetion::posy() const {
  return posy_;
}
inline void CMessageTeamIntoRepetion::set_posy(::google::protobuf::uint32 value) {
  _set_bit(3);
  posy_ = value;
}

// optional uint32 Parame1 = 5;
inline bool CMessageTeamIntoRepetion::has_parame1() const {
  return _has_bit(4);
}
inline void CMessageTeamIntoRepetion::clear_parame1() {
  parame1_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTeamIntoRepetion::parame1() const {
  return parame1_;
}
inline void CMessageTeamIntoRepetion::set_parame1(::google::protobuf::uint32 value) {
  _set_bit(4);
  parame1_ = value;
}

// optional uint32 Parame2 = 6;
inline bool CMessageTeamIntoRepetion::has_parame2() const {
  return _has_bit(5);
}
inline void CMessageTeamIntoRepetion::clear_parame2() {
  parame2_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageTeamIntoRepetion::parame2() const {
  return parame2_;
}
inline void CMessageTeamIntoRepetion::set_parame2(::google::protobuf::uint32 value) {
  _set_bit(5);
  parame2_ = value;
}

// optional uint32 Level = 7;
inline bool CMessageTeamIntoRepetion::has_level() const {
  return _has_bit(6);
}
inline void CMessageTeamIntoRepetion::clear_level() {
  level_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageTeamIntoRepetion::level() const {
  return level_;
}
inline void CMessageTeamIntoRepetion::set_level(::google::protobuf::uint32 value) {
  _set_bit(6);
  level_ = value;
}

// optional uint32 RemoveItem = 8;
inline bool CMessageTeamIntoRepetion::has_removeitem() const {
  return _has_bit(7);
}
inline void CMessageTeamIntoRepetion::clear_removeitem() {
  removeitem_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageTeamIntoRepetion::removeitem() const {
  return removeitem_;
}
inline void CMessageTeamIntoRepetion::set_removeitem(::google::protobuf::uint32 value) {
  _set_bit(7);
  removeitem_ = value;
}

// -------------------------------------------------------------------

// CMessageSingleIntoRepetion

// optional uint32 MapID = 1;
inline bool CMessageSingleIntoRepetion::has_mapid() const {
  return _has_bit(0);
}
inline void CMessageSingleIntoRepetion::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSingleIntoRepetion::mapid() const {
  return mapid_;
}
inline void CMessageSingleIntoRepetion::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageSingleIntoRepetion::has_charid() const {
  return _has_bit(1);
}
inline void CMessageSingleIntoRepetion::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSingleIntoRepetion::charid() const {
  return charid_;
}
inline void CMessageSingleIntoRepetion::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 PosX = 3;
inline bool CMessageSingleIntoRepetion::has_posx() const {
  return _has_bit(2);
}
inline void CMessageSingleIntoRepetion::clear_posx() {
  posx_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSingleIntoRepetion::posx() const {
  return posx_;
}
inline void CMessageSingleIntoRepetion::set_posx(::google::protobuf::uint32 value) {
  _set_bit(2);
  posx_ = value;
}

// optional uint32 PosY = 4;
inline bool CMessageSingleIntoRepetion::has_posy() const {
  return _has_bit(3);
}
inline void CMessageSingleIntoRepetion::clear_posy() {
  posy_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSingleIntoRepetion::posy() const {
  return posy_;
}
inline void CMessageSingleIntoRepetion::set_posy(::google::protobuf::uint32 value) {
  _set_bit(3);
  posy_ = value;
}

// optional uint32 Parame1 = 5;
inline bool CMessageSingleIntoRepetion::has_parame1() const {
  return _has_bit(4);
}
inline void CMessageSingleIntoRepetion::clear_parame1() {
  parame1_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageSingleIntoRepetion::parame1() const {
  return parame1_;
}
inline void CMessageSingleIntoRepetion::set_parame1(::google::protobuf::uint32 value) {
  _set_bit(4);
  parame1_ = value;
}

// optional uint32 Parame2 = 6;
inline bool CMessageSingleIntoRepetion::has_parame2() const {
  return _has_bit(5);
}
inline void CMessageSingleIntoRepetion::clear_parame2() {
  parame2_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageSingleIntoRepetion::parame2() const {
  return parame2_;
}
inline void CMessageSingleIntoRepetion::set_parame2(::google::protobuf::uint32 value) {
  _set_bit(5);
  parame2_ = value;
}

// optional uint32 Level = 7;
inline bool CMessageSingleIntoRepetion::has_level() const {
  return _has_bit(6);
}
inline void CMessageSingleIntoRepetion::clear_level() {
  level_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageSingleIntoRepetion::level() const {
  return level_;
}
inline void CMessageSingleIntoRepetion::set_level(::google::protobuf::uint32 value) {
  _set_bit(6);
  level_ = value;
}

// optional uint32 RemoveItem = 8;
inline bool CMessageSingleIntoRepetion::has_removeitem() const {
  return _has_bit(7);
}
inline void CMessageSingleIntoRepetion::clear_removeitem() {
  removeitem_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageSingleIntoRepetion::removeitem() const {
  return removeitem_;
}
inline void CMessageSingleIntoRepetion::set_removeitem(::google::protobuf::uint32 value) {
  _set_bit(7);
  removeitem_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsStartBattleRequest

// optional uint32 NpcID = 1;
inline bool CMessageCorpsStartBattleRequest::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageCorpsStartBattleRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsStartBattleRequest::npcid() const {
  return npcid_;
}
inline void CMessageCorpsStartBattleRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageCorpsStartBattleRequest::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsStartBattleRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsStartBattleRequest::battleid() const {
  return battleid_;
}
inline void CMessageCorpsStartBattleRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// -------------------------------------------------------------------

// CMessageIntoRepetionNotify

// optional uint32 LineID = 1;
inline bool CMessageIntoRepetionNotify::has_lineid() const {
  return _has_bit(0);
}
inline void CMessageIntoRepetionNotify::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageIntoRepetionNotify::lineid() const {
  return lineid_;
}
inline void CMessageIntoRepetionNotify::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(0);
  lineid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageIntoRepetionNotify::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageIntoRepetionNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageIntoRepetionNotify::mapid() const {
  return mapid_;
}
inline void CMessageIntoRepetionNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint64 Key = 3;
inline bool CMessageIntoRepetionNotify::has_key() const {
  return _has_bit(2);
}
inline void CMessageIntoRepetionNotify::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 CMessageIntoRepetionNotify::key() const {
  return key_;
}
inline void CMessageIntoRepetionNotify::set_key(::google::protobuf::uint64 value) {
  _set_bit(2);
  key_ = value;
}

// optional uint32 PosX = 4;
inline bool CMessageIntoRepetionNotify::has_posx() const {
  return _has_bit(3);
}
inline void CMessageIntoRepetionNotify::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageIntoRepetionNotify::posx() const {
  return posx_;
}
inline void CMessageIntoRepetionNotify::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool CMessageIntoRepetionNotify::has_posy() const {
  return _has_bit(4);
}
inline void CMessageIntoRepetionNotify::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageIntoRepetionNotify::posy() const {
  return posy_;
}
inline void CMessageIntoRepetionNotify::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional uint32 CharID = 6;
inline bool CMessageIntoRepetionNotify::has_charid() const {
  return _has_bit(5);
}
inline void CMessageIntoRepetionNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageIntoRepetionNotify::charid() const {
  return charid_;
}
inline void CMessageIntoRepetionNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(5);
  charid_ = value;
}

// optional uint32 RepetionIndex = 7;
inline bool CMessageIntoRepetionNotify::has_repetionindex() const {
  return _has_bit(6);
}
inline void CMessageIntoRepetionNotify::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageIntoRepetionNotify::repetionindex() const {
  return repetionindex_;
}
inline void CMessageIntoRepetionNotify::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(6);
  repetionindex_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeFamilyContributeNotify

// optional uint32 RoleID = 1;
inline bool CMessageChangeFamilyContributeNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageChangeFamilyContributeNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyContributeNotify::roleid() const {
  return roleid_;
}
inline void CMessageChangeFamilyContributeNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 Contribute = 2;
inline bool CMessageChangeFamilyContributeNotify::has_contribute() const {
  return _has_bit(1);
}
inline void CMessageChangeFamilyContributeNotify::clear_contribute() {
  contribute_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyContributeNotify::contribute() const {
  return contribute_;
}
inline void CMessageChangeFamilyContributeNotify::set_contribute(::google::protobuf::uint32 value) {
  _set_bit(1);
  contribute_ = value;
}

// optional uint32 ChangeType = 3;
inline bool CMessageChangeFamilyContributeNotify::has_changetype() const {
  return _has_bit(2);
}
inline void CMessageChangeFamilyContributeNotify::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyContributeNotify::changetype() const {
  return changetype_;
}
inline void CMessageChangeFamilyContributeNotify::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  changetype_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeFamilyGloryNotify

// optional uint32 FamilyID = 1;
inline bool CMessageChangeFamilyGloryNotify::has_familyid() const {
  return _has_bit(0);
}
inline void CMessageChangeFamilyGloryNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyGloryNotify::familyid() const {
  return familyid_;
}
inline void CMessageChangeFamilyGloryNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(0);
  familyid_ = value;
}

// optional uint32 Glory = 2;
inline bool CMessageChangeFamilyGloryNotify::has_glory() const {
  return _has_bit(1);
}
inline void CMessageChangeFamilyGloryNotify::clear_glory() {
  glory_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyGloryNotify::glory() const {
  return glory_;
}
inline void CMessageChangeFamilyGloryNotify::set_glory(::google::protobuf::uint32 value) {
  _set_bit(1);
  glory_ = value;
}

// optional uint32 IfReduced = 3;
inline bool CMessageChangeFamilyGloryNotify::has_ifreduced() const {
  return _has_bit(2);
}
inline void CMessageChangeFamilyGloryNotify::clear_ifreduced() {
  ifreduced_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyGloryNotify::ifreduced() const {
  return ifreduced_;
}
inline void CMessageChangeFamilyGloryNotify::set_ifreduced(::google::protobuf::uint32 value) {
  _set_bit(2);
  ifreduced_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageChangeFamilyGloryNotify::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageChangeFamilyGloryNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyGloryNotify::roleid() const {
  return roleid_;
}
inline void CMessageChangeFamilyGloryNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// optional uint32 Reason = 5;
inline bool CMessageChangeFamilyGloryNotify::has_reason() const {
  return _has_bit(4);
}
inline void CMessageChangeFamilyGloryNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyGloryNotify::reason() const {
  return reason_;
}
inline void CMessageChangeFamilyGloryNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(4);
  reason_ = value;
}

// optional string RoleName = 6;
inline bool CMessageChangeFamilyGloryNotify::has_rolename() const {
  return _has_bit(5);
}
inline void CMessageChangeFamilyGloryNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageChangeFamilyGloryNotify::rolename() const {
  return *rolename_;
}
inline void CMessageChangeFamilyGloryNotify::set_rolename(const ::std::string& value) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeFamilyGloryNotify::set_rolename(const char* value) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeFamilyGloryNotify::set_rolename(const char* value, size_t size) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeFamilyGloryNotify::mutable_rolename() {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// -------------------------------------------------------------------

// CMessageChangeFamilyMoneyNotify

// optional uint32 Money = 1;
inline bool CMessageChangeFamilyMoneyNotify::has_money() const {
  return _has_bit(0);
}
inline void CMessageChangeFamilyMoneyNotify::clear_money() {
  money_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyMoneyNotify::money() const {
  return money_;
}
inline void CMessageChangeFamilyMoneyNotify::set_money(::google::protobuf::uint32 value) {
  _set_bit(0);
  money_ = value;
}

// optional uint32 IfPayout = 2;
inline bool CMessageChangeFamilyMoneyNotify::has_ifpayout() const {
  return _has_bit(1);
}
inline void CMessageChangeFamilyMoneyNotify::clear_ifpayout() {
  ifpayout_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyMoneyNotify::ifpayout() const {
  return ifpayout_;
}
inline void CMessageChangeFamilyMoneyNotify::set_ifpayout(::google::protobuf::uint32 value) {
  _set_bit(1);
  ifpayout_ = value;
}

// optional uint32 FamilyID = 3;
inline bool CMessageChangeFamilyMoneyNotify::has_familyid() const {
  return _has_bit(2);
}
inline void CMessageChangeFamilyMoneyNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyMoneyNotify::familyid() const {
  return familyid_;
}
inline void CMessageChangeFamilyMoneyNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(2);
  familyid_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageChangeFamilyMoneyNotify::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageChangeFamilyMoneyNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyMoneyNotify::roleid() const {
  return roleid_;
}
inline void CMessageChangeFamilyMoneyNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// optional uint32 Reason = 5;
inline bool CMessageChangeFamilyMoneyNotify::has_reason() const {
  return _has_bit(4);
}
inline void CMessageChangeFamilyMoneyNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyMoneyNotify::reason() const {
  return reason_;
}
inline void CMessageChangeFamilyMoneyNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(4);
  reason_ = value;
}

// optional string RoleName = 6;
inline bool CMessageChangeFamilyMoneyNotify::has_rolename() const {
  return _has_bit(5);
}
inline void CMessageChangeFamilyMoneyNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageChangeFamilyMoneyNotify::rolename() const {
  return *rolename_;
}
inline void CMessageChangeFamilyMoneyNotify::set_rolename(const ::std::string& value) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeFamilyMoneyNotify::set_rolename(const char* value) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeFamilyMoneyNotify::set_rolename(const char* value, size_t size) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeFamilyMoneyNotify::mutable_rolename() {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// -------------------------------------------------------------------

// CMessageSynIbStoreRequest

// -------------------------------------------------------------------

// CMessageSynIbStoreResponse

// repeated .PBIbItemOnSale Goods = 1;
inline int CMessageSynIbStoreResponse::goods_size() const {
  return goods_.size();
}
inline void CMessageSynIbStoreResponse::clear_goods() {
  goods_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale >&
CMessageSynIbStoreResponse::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale >*
CMessageSynIbStoreResponse::mutable_goods() {
  return &goods_;
}
inline const ::PBIbItemOnSale& CMessageSynIbStoreResponse::goods(int index) const {
  return goods_.Get(index);
}
inline ::PBIbItemOnSale* CMessageSynIbStoreResponse::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::PBIbItemOnSale* CMessageSynIbStoreResponse::add_goods() {
  return goods_.Add();
}

// repeated .PBIbStore IbStore = 2;
inline int CMessageSynIbStoreResponse::ibstore_size() const {
  return ibstore_.size();
}
inline void CMessageSynIbStoreResponse::clear_ibstore() {
  ibstore_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbStore >&
CMessageSynIbStoreResponse::ibstore() const {
  return ibstore_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbStore >*
CMessageSynIbStoreResponse::mutable_ibstore() {
  return &ibstore_;
}
inline const ::PBIbStore& CMessageSynIbStoreResponse::ibstore(int index) const {
  return ibstore_.Get(index);
}
inline ::PBIbStore* CMessageSynIbStoreResponse::mutable_ibstore(int index) {
  return ibstore_.Mutable(index);
}
inline ::PBIbStore* CMessageSynIbStoreResponse::add_ibstore() {
  return ibstore_.Add();
}

// optional int32 Version = 3;
inline bool CMessageSynIbStoreResponse::has_version() const {
  return _has_bit(2);
}
inline void CMessageSynIbStoreResponse::clear_version() {
  version_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageSynIbStoreResponse::version() const {
  return version_;
}
inline void CMessageSynIbStoreResponse::set_version(::google::protobuf::int32 value) {
  _set_bit(2);
  version_ = value;
}

// repeated .PBIbSubTab FocusTab = 4;
inline int CMessageSynIbStoreResponse::focustab_size() const {
  return focustab_.size();
}
inline void CMessageSynIbStoreResponse::clear_focustab() {
  focustab_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >&
CMessageSynIbStoreResponse::focustab() const {
  return focustab_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >*
CMessageSynIbStoreResponse::mutable_focustab() {
  return &focustab_;
}
inline const ::PBIbSubTab& CMessageSynIbStoreResponse::focustab(int index) const {
  return focustab_.Get(index);
}
inline ::PBIbSubTab* CMessageSynIbStoreResponse::mutable_focustab(int index) {
  return focustab_.Mutable(index);
}
inline ::PBIbSubTab* CMessageSynIbStoreResponse::add_focustab() {
  return focustab_.Add();
}

// optional string Bulletin = 5;
inline bool CMessageSynIbStoreResponse::has_bulletin() const {
  return _has_bit(4);
}
inline void CMessageSynIbStoreResponse::clear_bulletin() {
  if (bulletin_ != &_default_bulletin_) {
    bulletin_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageSynIbStoreResponse::bulletin() const {
  return *bulletin_;
}
inline void CMessageSynIbStoreResponse::set_bulletin(const ::std::string& value) {
  _set_bit(4);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageSynIbStoreResponse::set_bulletin(const char* value) {
  _set_bit(4);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageSynIbStoreResponse::set_bulletin(const char* value, size_t size) {
  _set_bit(4);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSynIbStoreResponse::mutable_bulletin() {
  _set_bit(4);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  return bulletin_;
}

// -------------------------------------------------------------------

// CMessageSynFuncStoreRequest

// -------------------------------------------------------------------

// CMessageSynFuncStoreResponse

// optional int32 Version = 1;
inline bool CMessageSynFuncStoreResponse::has_version() const {
  return _has_bit(0);
}
inline void CMessageSynFuncStoreResponse::clear_version() {
  version_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageSynFuncStoreResponse::version() const {
  return version_;
}
inline void CMessageSynFuncStoreResponse::set_version(::google::protobuf::int32 value) {
  _set_bit(0);
  version_ = value;
}

// repeated .PBFuncStore FuncStore = 2;
inline int CMessageSynFuncStoreResponse::funcstore_size() const {
  return funcstore_.size();
}
inline void CMessageSynFuncStoreResponse::clear_funcstore() {
  funcstore_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFuncStore >&
CMessageSynFuncStoreResponse::funcstore() const {
  return funcstore_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFuncStore >*
CMessageSynFuncStoreResponse::mutable_funcstore() {
  return &funcstore_;
}
inline const ::PBFuncStore& CMessageSynFuncStoreResponse::funcstore(int index) const {
  return funcstore_.Get(index);
}
inline ::PBFuncStore* CMessageSynFuncStoreResponse::mutable_funcstore(int index) {
  return funcstore_.Mutable(index);
}
inline ::PBFuncStore* CMessageSynFuncStoreResponse::add_funcstore() {
  return funcstore_.Add();
}

// -------------------------------------------------------------------

// CMessageChangeCorpsContributeNotify

// optional uint32 RoleID = 1;
inline bool CMessageChangeCorpsContributeNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsContributeNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsContributeNotify::roleid() const {
  return roleid_;
}
inline void CMessageChangeCorpsContributeNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 Contribute = 2;
inline bool CMessageChangeCorpsContributeNotify::has_contribute() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsContributeNotify::clear_contribute() {
  contribute_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsContributeNotify::contribute() const {
  return contribute_;
}
inline void CMessageChangeCorpsContributeNotify::set_contribute(::google::protobuf::uint32 value) {
  _set_bit(1);
  contribute_ = value;
}

// optional uint32 ChangeType = 3;
inline bool CMessageChangeCorpsContributeNotify::has_changetype() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsContributeNotify::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsContributeNotify::changetype() const {
  return changetype_;
}
inline void CMessageChangeCorpsContributeNotify::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  changetype_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsGloryNotify

// optional uint32 CorpsID = 1;
inline bool CMessageChangeCorpsGloryNotify::has_corpsid() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsGloryNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsGloryNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageChangeCorpsGloryNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  corpsid_ = value;
}

// optional uint32 Glory = 2;
inline bool CMessageChangeCorpsGloryNotify::has_glory() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsGloryNotify::clear_glory() {
  glory_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsGloryNotify::glory() const {
  return glory_;
}
inline void CMessageChangeCorpsGloryNotify::set_glory(::google::protobuf::uint32 value) {
  _set_bit(1);
  glory_ = value;
}

// optional uint32 IfReduced = 3;
inline bool CMessageChangeCorpsGloryNotify::has_ifreduced() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsGloryNotify::clear_ifreduced() {
  ifreduced_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsGloryNotify::ifreduced() const {
  return ifreduced_;
}
inline void CMessageChangeCorpsGloryNotify::set_ifreduced(::google::protobuf::uint32 value) {
  _set_bit(2);
  ifreduced_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageChangeCorpsGloryNotify::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageChangeCorpsGloryNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsGloryNotify::roleid() const {
  return roleid_;
}
inline void CMessageChangeCorpsGloryNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// optional uint32 Reason = 5;
inline bool CMessageChangeCorpsGloryNotify::has_reason() const {
  return _has_bit(4);
}
inline void CMessageChangeCorpsGloryNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsGloryNotify::reason() const {
  return reason_;
}
inline void CMessageChangeCorpsGloryNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(4);
  reason_ = value;
}

// optional string RoleName = 6;
inline bool CMessageChangeCorpsGloryNotify::has_rolename() const {
  return _has_bit(5);
}
inline void CMessageChangeCorpsGloryNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageChangeCorpsGloryNotify::rolename() const {
  return *rolename_;
}
inline void CMessageChangeCorpsGloryNotify::set_rolename(const ::std::string& value) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeCorpsGloryNotify::set_rolename(const char* value) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeCorpsGloryNotify::set_rolename(const char* value, size_t size) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsGloryNotify::mutable_rolename() {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsMoneyNotify

// optional uint32 CorpsID = 1;
inline bool CMessageChangeCorpsMoneyNotify::has_corpsid() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsMoneyNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsMoneyNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageChangeCorpsMoneyNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  corpsid_ = value;
}

// optional uint32 Money = 2;
inline bool CMessageChangeCorpsMoneyNotify::has_money() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsMoneyNotify::clear_money() {
  money_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsMoneyNotify::money() const {
  return money_;
}
inline void CMessageChangeCorpsMoneyNotify::set_money(::google::protobuf::uint32 value) {
  _set_bit(1);
  money_ = value;
}

// optional uint32 IfPayout = 3;
inline bool CMessageChangeCorpsMoneyNotify::has_ifpayout() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsMoneyNotify::clear_ifpayout() {
  ifpayout_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsMoneyNotify::ifpayout() const {
  return ifpayout_;
}
inline void CMessageChangeCorpsMoneyNotify::set_ifpayout(::google::protobuf::uint32 value) {
  _set_bit(2);
  ifpayout_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageChangeCorpsMoneyNotify::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageChangeCorpsMoneyNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsMoneyNotify::roleid() const {
  return roleid_;
}
inline void CMessageChangeCorpsMoneyNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// optional uint32 Reason = 5;
inline bool CMessageChangeCorpsMoneyNotify::has_reason() const {
  return _has_bit(4);
}
inline void CMessageChangeCorpsMoneyNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsMoneyNotify::reason() const {
  return reason_;
}
inline void CMessageChangeCorpsMoneyNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(4);
  reason_ = value;
}

// optional string RoleName = 6;
inline bool CMessageChangeCorpsMoneyNotify::has_rolename() const {
  return _has_bit(5);
}
inline void CMessageChangeCorpsMoneyNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageChangeCorpsMoneyNotify::rolename() const {
  return *rolename_;
}
inline void CMessageChangeCorpsMoneyNotify::set_rolename(const ::std::string& value) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeCorpsMoneyNotify::set_rolename(const char* value) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeCorpsMoneyNotify::set_rolename(const char* value, size_t size) {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsMoneyNotify::mutable_rolename() {
  _set_bit(5);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsBossTimes

// optional uint32 CorpsID = 1;
inline bool CMessageChangeCorpsBossTimes::has_corpsid() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsBossTimes::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossTimes::corpsid() const {
  return corpsid_;
}
inline void CMessageChangeCorpsBossTimes::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  corpsid_ = value;
}

// optional uint32 Times = 2;
inline bool CMessageChangeCorpsBossTimes::has_times() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsBossTimes::clear_times() {
  times_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossTimes::times() const {
  return times_;
}
inline void CMessageChangeCorpsBossTimes::set_times(::google::protobuf::uint32 value) {
  _set_bit(1);
  times_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageChangeCorpsBossTimes::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsBossTimes::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossTimes::roleid() const {
  return roleid_;
}
inline void CMessageChangeCorpsBossTimes::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional uint32 BossID = 4;
inline bool CMessageChangeCorpsBossTimes::has_bossid() const {
  return _has_bit(3);
}
inline void CMessageChangeCorpsBossTimes::clear_bossid() {
  bossid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossTimes::bossid() const {
  return bossid_;
}
inline void CMessageChangeCorpsBossTimes::set_bossid(::google::protobuf::uint32 value) {
  _set_bit(3);
  bossid_ = value;
}

// optional string RoleName = 5;
inline bool CMessageChangeCorpsBossTimes::has_rolename() const {
  return _has_bit(4);
}
inline void CMessageChangeCorpsBossTimes::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageChangeCorpsBossTimes::rolename() const {
  return *rolename_;
}
inline void CMessageChangeCorpsBossTimes::set_rolename(const ::std::string& value) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeCorpsBossTimes::set_rolename(const char* value) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeCorpsBossTimes::set_rolename(const char* value, size_t size) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsBossTimes::mutable_rolename() {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional uint32 Reason = 6;
inline bool CMessageChangeCorpsBossTimes::has_reason() const {
  return _has_bit(5);
}
inline void CMessageChangeCorpsBossTimes::clear_reason() {
  reason_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossTimes::reason() const {
  return reason_;
}
inline void CMessageChangeCorpsBossTimes::set_reason(::google::protobuf::uint32 value) {
  _set_bit(5);
  reason_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsBossRefineValue

// optional uint32 CorpsID = 1;
inline bool CMessageChangeCorpsBossRefineValue::has_corpsid() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsBossRefineValue::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossRefineValue::corpsid() const {
  return corpsid_;
}
inline void CMessageChangeCorpsBossRefineValue::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  corpsid_ = value;
}

// optional uint32 RefineValue = 2;
inline bool CMessageChangeCorpsBossRefineValue::has_refinevalue() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsBossRefineValue::clear_refinevalue() {
  refinevalue_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossRefineValue::refinevalue() const {
  return refinevalue_;
}
inline void CMessageChangeCorpsBossRefineValue::set_refinevalue(::google::protobuf::uint32 value) {
  _set_bit(1);
  refinevalue_ = value;
}

// optional uint32 Reason = 3;
inline bool CMessageChangeCorpsBossRefineValue::has_reason() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsBossRefineValue::clear_reason() {
  reason_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossRefineValue::reason() const {
  return reason_;
}
inline void CMessageChangeCorpsBossRefineValue::set_reason(::google::protobuf::uint32 value) {
  _set_bit(2);
  reason_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageChangeCorpsBossRefineValue::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageChangeCorpsBossRefineValue::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBossRefineValue::roleid() const {
  return roleid_;
}
inline void CMessageChangeCorpsBossRefineValue::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// optional string RoleName = 5;
inline bool CMessageChangeCorpsBossRefineValue::has_rolename() const {
  return _has_bit(4);
}
inline void CMessageChangeCorpsBossRefineValue::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageChangeCorpsBossRefineValue::rolename() const {
  return *rolename_;
}
inline void CMessageChangeCorpsBossRefineValue::set_rolename(const ::std::string& value) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeCorpsBossRefineValue::set_rolename(const char* value) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeCorpsBossRefineValue::set_rolename(const char* value, size_t size) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsBossRefineValue::mutable_rolename() {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsCollectActive

// optional uint32 RoleID = 1;
inline bool CMessageChangeCorpsCollectActive::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsCollectActive::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsCollectActive::roleid() const {
  return roleid_;
}
inline void CMessageChangeCorpsCollectActive::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 ActiveValue = 2;
inline bool CMessageChangeCorpsCollectActive::has_activevalue() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsCollectActive::clear_activevalue() {
  activevalue_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsCollectActive::activevalue() const {
  return activevalue_;
}
inline void CMessageChangeCorpsCollectActive::set_activevalue(::google::protobuf::uint32 value) {
  _set_bit(1);
  activevalue_ = value;
}

// optional uint32 ChangeType = 3;
inline bool CMessageChangeCorpsCollectActive::has_changetype() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsCollectActive::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsCollectActive::changetype() const {
  return changetype_;
}
inline void CMessageChangeCorpsCollectActive::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  changetype_ = value;
}

// -------------------------------------------------------------------

// CMessageFamilyApExpChangedNotify

// optional uint32 RoleID = 1;
inline bool CMessageFamilyApExpChangedNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageFamilyApExpChangedNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFamilyApExpChangedNotify::roleid() const {
  return roleid_;
}
inline void CMessageFamilyApExpChangedNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 FamiyID = 2;
inline bool CMessageFamilyApExpChangedNotify::has_famiyid() const {
  return _has_bit(1);
}
inline void CMessageFamilyApExpChangedNotify::clear_famiyid() {
  famiyid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFamilyApExpChangedNotify::famiyid() const {
  return famiyid_;
}
inline void CMessageFamilyApExpChangedNotify::set_famiyid(::google::protobuf::uint32 value) {
  _set_bit(1);
  famiyid_ = value;
}

// optional uint32 AP = 3;
inline bool CMessageFamilyApExpChangedNotify::has_ap() const {
  return _has_bit(2);
}
inline void CMessageFamilyApExpChangedNotify::clear_ap() {
  ap_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFamilyApExpChangedNotify::ap() const {
  return ap_;
}
inline void CMessageFamilyApExpChangedNotify::set_ap(::google::protobuf::uint32 value) {
  _set_bit(2);
  ap_ = value;
}

// optional uint32 Exp = 4;
inline bool CMessageFamilyApExpChangedNotify::has_exp() const {
  return _has_bit(3);
}
inline void CMessageFamilyApExpChangedNotify::clear_exp() {
  exp_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageFamilyApExpChangedNotify::exp() const {
  return exp_;
}
inline void CMessageFamilyApExpChangedNotify::set_exp(::google::protobuf::uint32 value) {
  _set_bit(3);
  exp_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsApExpChangedNotify

// optional uint32 RoleID = 1;
inline bool CMessageCorpsApExpChangedNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageCorpsApExpChangedNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsApExpChangedNotify::roleid() const {
  return roleid_;
}
inline void CMessageCorpsApExpChangedNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 CorpsID = 2;
inline bool CMessageCorpsApExpChangedNotify::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageCorpsApExpChangedNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsApExpChangedNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageCorpsApExpChangedNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional uint32 AP = 3;
inline bool CMessageCorpsApExpChangedNotify::has_ap() const {
  return _has_bit(2);
}
inline void CMessageCorpsApExpChangedNotify::clear_ap() {
  ap_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsApExpChangedNotify::ap() const {
  return ap_;
}
inline void CMessageCorpsApExpChangedNotify::set_ap(::google::protobuf::uint32 value) {
  _set_bit(2);
  ap_ = value;
}

// optional uint32 Exp = 4;
inline bool CMessageCorpsApExpChangedNotify::has_exp() const {
  return _has_bit(3);
}
inline void CMessageCorpsApExpChangedNotify::clear_exp() {
  exp_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsApExpChangedNotify::exp() const {
  return exp_;
}
inline void CMessageCorpsApExpChangedNotify::set_exp(::google::protobuf::uint32 value) {
  _set_bit(3);
  exp_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeJudgeScoreReuqest

// optional uint32 RoleID = 1;
inline bool CMessageChangeJudgeScoreReuqest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageChangeJudgeScoreReuqest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeJudgeScoreReuqest::roleid() const {
  return roleid_;
}
inline void CMessageChangeJudgeScoreReuqest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 Total = 2;
inline bool CMessageChangeJudgeScoreReuqest::has_total() const {
  return _has_bit(1);
}
inline void CMessageChangeJudgeScoreReuqest::clear_total() {
  total_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeJudgeScoreReuqest::total() const {
  return total_;
}
inline void CMessageChangeJudgeScoreReuqest::set_total(::google::protobuf::uint32 value) {
  _set_bit(1);
  total_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeWizardRequest

// optional uint32 CharID = 1;
inline bool CMessageChangeWizardRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangeWizardRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeWizardRequest::charid() const {
  return charid_;
}
inline void CMessageChangeWizardRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 LineID = 2;
inline bool CMessageChangeWizardRequest::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageChangeWizardRequest::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeWizardRequest::lineid() const {
  return lineid_;
}
inline void CMessageChangeWizardRequest::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 CountryID = 3;
inline bool CMessageChangeWizardRequest::has_countryid() const {
  return _has_bit(2);
}
inline void CMessageChangeWizardRequest::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeWizardRequest::countryid() const {
  return countryid_;
}
inline void CMessageChangeWizardRequest::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(2);
  countryid_ = value;
}

// optional uint32 ChangeType = 4;
inline bool CMessageChangeWizardRequest::has_changetype() const {
  return _has_bit(3);
}
inline void CMessageChangeWizardRequest::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeWizardRequest::changetype() const {
  return changetype_;
}
inline void CMessageChangeWizardRequest::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(3);
  changetype_ = value;
}

// repeated uint32 WizardValue = 5;
inline int CMessageChangeWizardRequest::wizardvalue_size() const {
  return wizardvalue_.size();
}
inline void CMessageChangeWizardRequest::clear_wizardvalue() {
  wizardvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageChangeWizardRequest::wizardvalue() const {
  return wizardvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageChangeWizardRequest::mutable_wizardvalue() {
  return &wizardvalue_;
}
inline ::google::protobuf::uint32 CMessageChangeWizardRequest::wizardvalue(int index) const {
  return wizardvalue_.Get(index);
}
inline void CMessageChangeWizardRequest::set_wizardvalue(int index, ::google::protobuf::uint32 value) {
  wizardvalue_.Set(index, value);
}
inline void CMessageChangeWizardRequest::add_wizardvalue(::google::protobuf::uint32 value) {
  wizardvalue_.Add(value);
}

// -------------------------------------------------------------------

// CMessageChangeWizardResponse

// optional uint32 CharID = 1;
inline bool CMessageChangeWizardResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangeWizardResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeWizardResponse::charid() const {
  return charid_;
}
inline void CMessageChangeWizardResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageChangeWizardResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageChangeWizardResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeWizardResponse::result() const {
  return result_;
}
inline void CMessageChangeWizardResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeConstructRequest

// optional uint32 CharID = 1;
inline bool CMessageChangeConstructRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangeConstructRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeConstructRequest::charid() const {
  return charid_;
}
inline void CMessageChangeConstructRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 LineID = 2;
inline bool CMessageChangeConstructRequest::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageChangeConstructRequest::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeConstructRequest::lineid() const {
  return lineid_;
}
inline void CMessageChangeConstructRequest::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 CountryID = 3;
inline bool CMessageChangeConstructRequest::has_countryid() const {
  return _has_bit(2);
}
inline void CMessageChangeConstructRequest::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeConstructRequest::countryid() const {
  return countryid_;
}
inline void CMessageChangeConstructRequest::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(2);
  countryid_ = value;
}

// optional uint32 ChangeType = 4;
inline bool CMessageChangeConstructRequest::has_changetype() const {
  return _has_bit(3);
}
inline void CMessageChangeConstructRequest::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeConstructRequest::changetype() const {
  return changetype_;
}
inline void CMessageChangeConstructRequest::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(3);
  changetype_ = value;
}

// repeated uint32 ConstructType = 5;
inline int CMessageChangeConstructRequest::constructtype_size() const {
  return constructtype_.size();
}
inline void CMessageChangeConstructRequest::clear_constructtype() {
  constructtype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageChangeConstructRequest::constructtype() const {
  return constructtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageChangeConstructRequest::mutable_constructtype() {
  return &constructtype_;
}
inline ::google::protobuf::uint32 CMessageChangeConstructRequest::constructtype(int index) const {
  return constructtype_.Get(index);
}
inline void CMessageChangeConstructRequest::set_constructtype(int index, ::google::protobuf::uint32 value) {
  constructtype_.Set(index, value);
}
inline void CMessageChangeConstructRequest::add_constructtype(::google::protobuf::uint32 value) {
  constructtype_.Add(value);
}

// repeated uint32 ConstructValue = 6;
inline int CMessageChangeConstructRequest::constructvalue_size() const {
  return constructvalue_.size();
}
inline void CMessageChangeConstructRequest::clear_constructvalue() {
  constructvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageChangeConstructRequest::constructvalue() const {
  return constructvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageChangeConstructRequest::mutable_constructvalue() {
  return &constructvalue_;
}
inline ::google::protobuf::uint32 CMessageChangeConstructRequest::constructvalue(int index) const {
  return constructvalue_.Get(index);
}
inline void CMessageChangeConstructRequest::set_constructvalue(int index, ::google::protobuf::uint32 value) {
  constructvalue_.Set(index, value);
}
inline void CMessageChangeConstructRequest::add_constructvalue(::google::protobuf::uint32 value) {
  constructvalue_.Add(value);
}

// -------------------------------------------------------------------

// CMessageChangeConstructResponse

// optional uint32 CharID = 1;
inline bool CMessageChangeConstructResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangeConstructResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeConstructResponse::charid() const {
  return charid_;
}
inline void CMessageChangeConstructResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageChangeConstructResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageChangeConstructResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeConstructResponse::result() const {
  return result_;
}
inline void CMessageChangeConstructResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// -------------------------------------------------------------------

// CMessageChangePowerRequest

// optional uint32 CharID = 1;
inline bool CMessageChangePowerRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangePowerRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangePowerRequest::charid() const {
  return charid_;
}
inline void CMessageChangePowerRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 LineID = 2;
inline bool CMessageChangePowerRequest::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageChangePowerRequest::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangePowerRequest::lineid() const {
  return lineid_;
}
inline void CMessageChangePowerRequest::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 CountryID = 3;
inline bool CMessageChangePowerRequest::has_countryid() const {
  return _has_bit(2);
}
inline void CMessageChangePowerRequest::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangePowerRequest::countryid() const {
  return countryid_;
}
inline void CMessageChangePowerRequest::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(2);
  countryid_ = value;
}

// optional uint32 ChangeType = 4;
inline bool CMessageChangePowerRequest::has_changetype() const {
  return _has_bit(3);
}
inline void CMessageChangePowerRequest::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangePowerRequest::changetype() const {
  return changetype_;
}
inline void CMessageChangePowerRequest::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(3);
  changetype_ = value;
}

// optional uint32 PowerValue = 5;
inline bool CMessageChangePowerRequest::has_powervalue() const {
  return _has_bit(4);
}
inline void CMessageChangePowerRequest::clear_powervalue() {
  powervalue_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangePowerRequest::powervalue() const {
  return powervalue_;
}
inline void CMessageChangePowerRequest::set_powervalue(::google::protobuf::uint32 value) {
  _set_bit(4);
  powervalue_ = value;
}

// -------------------------------------------------------------------

// CMessageChangePowerResponse

// optional uint32 CharID = 1;
inline bool CMessageChangePowerResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangePowerResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangePowerResponse::charid() const {
  return charid_;
}
inline void CMessageChangePowerResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageChangePowerResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageChangePowerResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangePowerResponse::result() const {
  return result_;
}
inline void CMessageChangePowerResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// -------------------------------------------------------------------

// CMessageUseFunctionNotify

// optional uint32 CharID = 1;
inline bool CMessageUseFunctionNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUseFunctionNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::charid() const {
  return charid_;
}
inline void CMessageUseFunctionNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 FunctionType = 2;
inline bool CMessageUseFunctionNotify::has_functiontype() const {
  return _has_bit(1);
}
inline void CMessageUseFunctionNotify::clear_functiontype() {
  functiontype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::functiontype() const {
  return functiontype_;
}
inline void CMessageUseFunctionNotify::set_functiontype(::google::protobuf::uint32 value) {
  _set_bit(1);
  functiontype_ = value;
}

// optional uint32 FunctionOrder = 3;
inline bool CMessageUseFunctionNotify::has_functionorder() const {
  return _has_bit(2);
}
inline void CMessageUseFunctionNotify::clear_functionorder() {
  functionorder_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::functionorder() const {
  return functionorder_;
}
inline void CMessageUseFunctionNotify::set_functionorder(::google::protobuf::uint32 value) {
  _set_bit(2);
  functionorder_ = value;
}

// optional uint32 TargetID = 4;
inline bool CMessageUseFunctionNotify::has_targetid() const {
  return _has_bit(3);
}
inline void CMessageUseFunctionNotify::clear_targetid() {
  targetid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::targetid() const {
  return targetid_;
}
inline void CMessageUseFunctionNotify::set_targetid(::google::protobuf::uint32 value) {
  _set_bit(3);
  targetid_ = value;
}

// optional uint32 WorldID = 5;
inline bool CMessageUseFunctionNotify::has_worldid() const {
  return _has_bit(4);
}
inline void CMessageUseFunctionNotify::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::worldid() const {
  return worldid_;
}
inline void CMessageUseFunctionNotify::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(4);
  worldid_ = value;
}

// optional uint32 CountryID = 6;
inline bool CMessageUseFunctionNotify::has_countryid() const {
  return _has_bit(5);
}
inline void CMessageUseFunctionNotify::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::countryid() const {
  return countryid_;
}
inline void CMessageUseFunctionNotify::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(5);
  countryid_ = value;
}

// optional string SrcName = 7;
inline bool CMessageUseFunctionNotify::has_srcname() const {
  return _has_bit(6);
}
inline void CMessageUseFunctionNotify::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageUseFunctionNotify::srcname() const {
  return *srcname_;
}
inline void CMessageUseFunctionNotify::set_srcname(const ::std::string& value) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageUseFunctionNotify::set_srcname(const char* value) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageUseFunctionNotify::set_srcname(const char* value, size_t size) {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUseFunctionNotify::mutable_srcname() {
  _set_bit(6);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// optional .TeleportData Teleport = 8;
inline bool CMessageUseFunctionNotify::has_teleport() const {
  return _has_bit(7);
}
inline void CMessageUseFunctionNotify::clear_teleport() {
  if (teleport_ != NULL) teleport_->::TeleportData::Clear();
  _clear_bit(7);
}
inline const ::TeleportData& CMessageUseFunctionNotify::teleport() const {
  return teleport_ != NULL ? *teleport_ : *default_instance_->teleport_;
}
inline ::TeleportData* CMessageUseFunctionNotify::mutable_teleport() {
  _set_bit(7);
  if (teleport_ == NULL) teleport_ = new ::TeleportData;
  return teleport_;
}

// optional uint32 CorpsID = 9;
inline bool CMessageUseFunctionNotify::has_corpsid() const {
  return _has_bit(8);
}
inline void CMessageUseFunctionNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageUseFunctionNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(8);
  corpsid_ = value;
}

// optional uint32 FamilyID = 10;
inline bool CMessageUseFunctionNotify::has_familyid() const {
  return _has_bit(9);
}
inline void CMessageUseFunctionNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::familyid() const {
  return familyid_;
}
inline void CMessageUseFunctionNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(9);
  familyid_ = value;
}

// optional uint32 TokenID = 11;
inline bool CMessageUseFunctionNotify::has_tokenid() const {
  return _has_bit(10);
}
inline void CMessageUseFunctionNotify::clear_tokenid() {
  tokenid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageUseFunctionNotify::tokenid() const {
  return tokenid_;
}
inline void CMessageUseFunctionNotify::set_tokenid(::google::protobuf::uint32 value) {
  _set_bit(10);
  tokenid_ = value;
}

// -------------------------------------------------------------------

// CMessageSetOfficialNotify

// optional uint32 CharID = 1;
inline bool CMessageSetOfficialNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageSetOfficialNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSetOfficialNotify::charid() const {
  return charid_;
}
inline void CMessageSetOfficialNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 OfficialLevel = 2;
inline bool CMessageSetOfficialNotify::has_officiallevel() const {
  return _has_bit(1);
}
inline void CMessageSetOfficialNotify::clear_officiallevel() {
  officiallevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSetOfficialNotify::officiallevel() const {
  return officiallevel_;
}
inline void CMessageSetOfficialNotify::set_officiallevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  officiallevel_ = value;
}

// optional uint32 OfficialOrder = 3;
inline bool CMessageSetOfficialNotify::has_officialorder() const {
  return _has_bit(2);
}
inline void CMessageSetOfficialNotify::clear_officialorder() {
  officialorder_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSetOfficialNotify::officialorder() const {
  return officialorder_;
}
inline void CMessageSetOfficialNotify::set_officialorder(::google::protobuf::uint32 value) {
  _set_bit(2);
  officialorder_ = value;
}

// optional uint32 TargetID = 4;
inline bool CMessageSetOfficialNotify::has_targetid() const {
  return _has_bit(3);
}
inline void CMessageSetOfficialNotify::clear_targetid() {
  targetid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSetOfficialNotify::targetid() const {
  return targetid_;
}
inline void CMessageSetOfficialNotify::set_targetid(::google::protobuf::uint32 value) {
  _set_bit(3);
  targetid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeFriendNotify

// optional uint32 CharID = 1;
inline bool CMessageChangeFriendNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageChangeFriendNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotify::charid() const {
  return charid_;
}
inline void CMessageChangeFriendNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 ChangeType = 2;
inline bool CMessageChangeFriendNotify::has_changetype() const {
  return _has_bit(1);
}
inline void CMessageChangeFriendNotify::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotify::changetype() const {
  return changetype_;
}
inline void CMessageChangeFriendNotify::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(1);
  changetype_ = value;
}

// optional uint32 SrcWorld = 3;
inline bool CMessageChangeFriendNotify::has_srcworld() const {
  return _has_bit(2);
}
inline void CMessageChangeFriendNotify::clear_srcworld() {
  srcworld_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotify::srcworld() const {
  return srcworld_;
}
inline void CMessageChangeFriendNotify::set_srcworld(::google::protobuf::uint32 value) {
  _set_bit(2);
  srcworld_ = value;
}

// optional uint32 DesWorld = 4;
inline bool CMessageChangeFriendNotify::has_desworld() const {
  return _has_bit(3);
}
inline void CMessageChangeFriendNotify::clear_desworld() {
  desworld_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotify::desworld() const {
  return desworld_;
}
inline void CMessageChangeFriendNotify::set_desworld(::google::protobuf::uint32 value) {
  _set_bit(3);
  desworld_ = value;
}

// optional uint32 ChangeValue = 5;
inline bool CMessageChangeFriendNotify::has_changevalue() const {
  return _has_bit(4);
}
inline void CMessageChangeFriendNotify::clear_changevalue() {
  changevalue_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotify::changevalue() const {
  return changevalue_;
}
inline void CMessageChangeFriendNotify::set_changevalue(::google::protobuf::uint32 value) {
  _set_bit(4);
  changevalue_ = value;
}

// -------------------------------------------------------------------

// CMessageKillPersonRequest

// optional uint32 SrcCharID = 1;
inline bool CMessageKillPersonRequest::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessageKillPersonRequest::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKillPersonRequest::srccharid() const {
  return srccharid_;
}
inline void CMessageKillPersonRequest::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// optional uint32 DesCharID = 2;
inline bool CMessageKillPersonRequest::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageKillPersonRequest::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKillPersonRequest::descharid() const {
  return descharid_;
}
inline void CMessageKillPersonRequest::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional uint32 Honor = 3;
inline bool CMessageKillPersonRequest::has_honor() const {
  return _has_bit(2);
}
inline void CMessageKillPersonRequest::clear_honor() {
  honor_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageKillPersonRequest::honor() const {
  return honor_;
}
inline void CMessageKillPersonRequest::set_honor(::google::protobuf::uint32 value) {
  _set_bit(2);
  honor_ = value;
}

// -------------------------------------------------------------------

// CMessageKillPersonResponse

// optional uint32 SrcCharID = 1;
inline bool CMessageKillPersonResponse::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessageKillPersonResponse::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKillPersonResponse::srccharid() const {
  return srccharid_;
}
inline void CMessageKillPersonResponse::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// optional uint32 DesCharID = 2;
inline bool CMessageKillPersonResponse::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageKillPersonResponse::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKillPersonResponse::descharid() const {
  return descharid_;
}
inline void CMessageKillPersonResponse::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// optional uint32 PKValue = 3;
inline bool CMessageKillPersonResponse::has_pkvalue() const {
  return _has_bit(2);
}
inline void CMessageKillPersonResponse::clear_pkvalue() {
  pkvalue_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageKillPersonResponse::pkvalue() const {
  return pkvalue_;
}
inline void CMessageKillPersonResponse::set_pkvalue(::google::protobuf::uint32 value) {
  _set_bit(2);
  pkvalue_ = value;
}

// -------------------------------------------------------------------

// CMessageSyncNationNotify

// repeated uint32 NationStatus = 1;
inline int CMessageSyncNationNotify::nationstatus_size() const {
  return nationstatus_.size();
}
inline void CMessageSyncNationNotify::clear_nationstatus() {
  nationstatus_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageSyncNationNotify::nationstatus() const {
  return nationstatus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageSyncNationNotify::mutable_nationstatus() {
  return &nationstatus_;
}
inline ::google::protobuf::uint32 CMessageSyncNationNotify::nationstatus(int index) const {
  return nationstatus_.Get(index);
}
inline void CMessageSyncNationNotify::set_nationstatus(int index, ::google::protobuf::uint32 value) {
  nationstatus_.Set(index, value);
}
inline void CMessageSyncNationNotify::add_nationstatus(::google::protobuf::uint32 value) {
  nationstatus_.Add(value);
}

// -------------------------------------------------------------------

// CMessageBuyFamilyItemRequest

// optional uint32 RoleID = 1;
inline bool CMessageBuyFamilyItemRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageBuyFamilyItemRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemRequest::roleid() const {
  return roleid_;
}
inline void CMessageBuyFamilyItemRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 EntityID = 2;
inline bool CMessageBuyFamilyItemRequest::has_entityid() const {
  return _has_bit(1);
}
inline void CMessageBuyFamilyItemRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemRequest::entityid() const {
  return entityid_;
}
inline void CMessageBuyFamilyItemRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  entityid_ = value;
}

// optional uint32 FamilyID = 3;
inline bool CMessageBuyFamilyItemRequest::has_familyid() const {
  return _has_bit(2);
}
inline void CMessageBuyFamilyItemRequest::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemRequest::familyid() const {
  return familyid_;
}
inline void CMessageBuyFamilyItemRequest::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(2);
  familyid_ = value;
}

// optional uint32 ItemID = 4;
inline bool CMessageBuyFamilyItemRequest::has_itemid() const {
  return _has_bit(3);
}
inline void CMessageBuyFamilyItemRequest::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemRequest::itemid() const {
  return itemid_;
}
inline void CMessageBuyFamilyItemRequest::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(3);
  itemid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool CMessageBuyFamilyItemRequest::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageBuyFamilyItemRequest::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemRequest::itemnum() const {
  return itemnum_;
}
inline void CMessageBuyFamilyItemRequest::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// optional uint32 TotalCost = 6;
inline bool CMessageBuyFamilyItemRequest::has_totalcost() const {
  return _has_bit(5);
}
inline void CMessageBuyFamilyItemRequest::clear_totalcost() {
  totalcost_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemRequest::totalcost() const {
  return totalcost_;
}
inline void CMessageBuyFamilyItemRequest::set_totalcost(::google::protobuf::uint32 value) {
  _set_bit(5);
  totalcost_ = value;
}

// optional uint32 NpcTmpID = 7;
inline bool CMessageBuyFamilyItemRequest::has_npctmpid() const {
  return _has_bit(6);
}
inline void CMessageBuyFamilyItemRequest::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemRequest::npctmpid() const {
  return npctmpid_;
}
inline void CMessageBuyFamilyItemRequest::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(6);
  npctmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageBuyFamilyItemResponse

// optional uint32 Errcode = 1;
inline bool CMessageBuyFamilyItemResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageBuyFamilyItemResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemResponse::errcode() const {
  return errcode_;
}
inline void CMessageBuyFamilyItemResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageBuyFamilyItemResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageBuyFamilyItemResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemResponse::roleid() const {
  return roleid_;
}
inline void CMessageBuyFamilyItemResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 EntityID = 3;
inline bool CMessageBuyFamilyItemResponse::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageBuyFamilyItemResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemResponse::entityid() const {
  return entityid_;
}
inline void CMessageBuyFamilyItemResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// optional uint32 ItemID = 4;
inline bool CMessageBuyFamilyItemResponse::has_itemid() const {
  return _has_bit(3);
}
inline void CMessageBuyFamilyItemResponse::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemResponse::itemid() const {
  return itemid_;
}
inline void CMessageBuyFamilyItemResponse::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(3);
  itemid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool CMessageBuyFamilyItemResponse::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageBuyFamilyItemResponse::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBuyFamilyItemResponse::itemnum() const {
  return itemnum_;
}
inline void CMessageBuyFamilyItemResponse::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// -------------------------------------------------------------------

// CMessageBuyCorpsItemRequest

// optional uint32 RoleID = 1;
inline bool CMessageBuyCorpsItemRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageBuyCorpsItemRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemRequest::roleid() const {
  return roleid_;
}
inline void CMessageBuyCorpsItemRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 EntityID = 2;
inline bool CMessageBuyCorpsItemRequest::has_entityid() const {
  return _has_bit(1);
}
inline void CMessageBuyCorpsItemRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemRequest::entityid() const {
  return entityid_;
}
inline void CMessageBuyCorpsItemRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  entityid_ = value;
}

// optional uint32 CorpsID = 3;
inline bool CMessageBuyCorpsItemRequest::has_corpsid() const {
  return _has_bit(2);
}
inline void CMessageBuyCorpsItemRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageBuyCorpsItemRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  corpsid_ = value;
}

// optional uint32 ItemID = 4;
inline bool CMessageBuyCorpsItemRequest::has_itemid() const {
  return _has_bit(3);
}
inline void CMessageBuyCorpsItemRequest::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemRequest::itemid() const {
  return itemid_;
}
inline void CMessageBuyCorpsItemRequest::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(3);
  itemid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool CMessageBuyCorpsItemRequest::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageBuyCorpsItemRequest::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemRequest::itemnum() const {
  return itemnum_;
}
inline void CMessageBuyCorpsItemRequest::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// optional uint32 TotalCost = 6;
inline bool CMessageBuyCorpsItemRequest::has_totalcost() const {
  return _has_bit(5);
}
inline void CMessageBuyCorpsItemRequest::clear_totalcost() {
  totalcost_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemRequest::totalcost() const {
  return totalcost_;
}
inline void CMessageBuyCorpsItemRequest::set_totalcost(::google::protobuf::uint32 value) {
  _set_bit(5);
  totalcost_ = value;
}

// optional uint32 NpcTmpID = 7;
inline bool CMessageBuyCorpsItemRequest::has_npctmpid() const {
  return _has_bit(6);
}
inline void CMessageBuyCorpsItemRequest::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemRequest::npctmpid() const {
  return npctmpid_;
}
inline void CMessageBuyCorpsItemRequest::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(6);
  npctmpid_ = value;
}

// optional uint32 CityMapID = 8;
inline bool CMessageBuyCorpsItemRequest::has_citymapid() const {
  return _has_bit(7);
}
inline void CMessageBuyCorpsItemRequest::clear_citymapid() {
  citymapid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemRequest::citymapid() const {
  return citymapid_;
}
inline void CMessageBuyCorpsItemRequest::set_citymapid(::google::protobuf::uint32 value) {
  _set_bit(7);
  citymapid_ = value;
}

// -------------------------------------------------------------------

// CMessageBuyCorpsItemResponse

// optional uint32 Errcode = 1;
inline bool CMessageBuyCorpsItemResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageBuyCorpsItemResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemResponse::errcode() const {
  return errcode_;
}
inline void CMessageBuyCorpsItemResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageBuyCorpsItemResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageBuyCorpsItemResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemResponse::roleid() const {
  return roleid_;
}
inline void CMessageBuyCorpsItemResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 EntityID = 3;
inline bool CMessageBuyCorpsItemResponse::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageBuyCorpsItemResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemResponse::entityid() const {
  return entityid_;
}
inline void CMessageBuyCorpsItemResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// optional uint32 ItemID = 4;
inline bool CMessageBuyCorpsItemResponse::has_itemid() const {
  return _has_bit(3);
}
inline void CMessageBuyCorpsItemResponse::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemResponse::itemid() const {
  return itemid_;
}
inline void CMessageBuyCorpsItemResponse::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(3);
  itemid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool CMessageBuyCorpsItemResponse::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageBuyCorpsItemResponse::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBuyCorpsItemResponse::itemnum() const {
  return itemnum_;
}
inline void CMessageBuyCorpsItemResponse::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// -------------------------------------------------------------------

// CMessageClearFamilyRepetionInfoNotify

// optional uint32 FamilyID = 1;
inline bool CMessageClearFamilyRepetionInfoNotify::has_familyid() const {
  return _has_bit(0);
}
inline void CMessageClearFamilyRepetionInfoNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageClearFamilyRepetionInfoNotify::familyid() const {
  return familyid_;
}
inline void CMessageClearFamilyRepetionInfoNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(0);
  familyid_ = value;
}

// optional uint32 RepetionScore = 2;
inline bool CMessageClearFamilyRepetionInfoNotify::has_repetionscore() const {
  return _has_bit(1);
}
inline void CMessageClearFamilyRepetionInfoNotify::clear_repetionscore() {
  repetionscore_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageClearFamilyRepetionInfoNotify::repetionscore() const {
  return repetionscore_;
}
inline void CMessageClearFamilyRepetionInfoNotify::set_repetionscore(::google::protobuf::uint32 value) {
  _set_bit(1);
  repetionscore_ = value;
}

// -------------------------------------------------------------------

// CMessageJudgeModifySuccessNotice

// optional uint32 CharID = 1;
inline bool CMessageJudgeModifySuccessNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageJudgeModifySuccessNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageJudgeModifySuccessNotice::charid() const {
  return charid_;
}
inline void CMessageJudgeModifySuccessNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessage4EQueryYuanBaoRequest

// optional uint32 RoleID = 1;
inline bool CMessage4EQueryYuanBaoRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessage4EQueryYuanBaoRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessage4EQueryYuanBaoRequest::roleid() const {
  return roleid_;
}
inline void CMessage4EQueryYuanBaoRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessage4EQueryYuanBaoResponse

// optional int32 ResultCode = 1;
inline bool CMessage4EQueryYuanBaoResponse::has_resultcode() const {
  return _has_bit(0);
}
inline void CMessage4EQueryYuanBaoResponse::clear_resultcode() {
  resultcode_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessage4EQueryYuanBaoResponse::resultcode() const {
  return resultcode_;
}
inline void CMessage4EQueryYuanBaoResponse::set_resultcode(::google::protobuf::int32 value) {
  _set_bit(0);
  resultcode_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessage4EQueryYuanBaoResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessage4EQueryYuanBaoResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessage4EQueryYuanBaoResponse::roleid() const {
  return roleid_;
}
inline void CMessage4EQueryYuanBaoResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// repeated .PBIbMoney Remain = 3;
inline int CMessage4EQueryYuanBaoResponse::remain_size() const {
  return remain_.size();
}
inline void CMessage4EQueryYuanBaoResponse::clear_remain() {
  remain_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbMoney >&
CMessage4EQueryYuanBaoResponse::remain() const {
  return remain_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbMoney >*
CMessage4EQueryYuanBaoResponse::mutable_remain() {
  return &remain_;
}
inline const ::PBIbMoney& CMessage4EQueryYuanBaoResponse::remain(int index) const {
  return remain_.Get(index);
}
inline ::PBIbMoney* CMessage4EQueryYuanBaoResponse::mutable_remain(int index) {
  return remain_.Mutable(index);
}
inline ::PBIbMoney* CMessage4EQueryYuanBaoResponse::add_remain() {
  return remain_.Add();
}

// -------------------------------------------------------------------

// CMessage4EDrawYuanBaoRequest

// optional uint32 RoleID = 1;
inline bool CMessage4EDrawYuanBaoRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessage4EDrawYuanBaoRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessage4EDrawYuanBaoRequest::roleid() const {
  return roleid_;
}
inline void CMessage4EDrawYuanBaoRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional .PBIbMoney Draw = 2;
inline bool CMessage4EDrawYuanBaoRequest::has_draw() const {
  return _has_bit(1);
}
inline void CMessage4EDrawYuanBaoRequest::clear_draw() {
  if (draw_ != NULL) draw_->::PBIbMoney::Clear();
  _clear_bit(1);
}
inline const ::PBIbMoney& CMessage4EDrawYuanBaoRequest::draw() const {
  return draw_ != NULL ? *draw_ : *default_instance_->draw_;
}
inline ::PBIbMoney* CMessage4EDrawYuanBaoRequest::mutable_draw() {
  _set_bit(1);
  if (draw_ == NULL) draw_ = new ::PBIbMoney;
  return draw_;
}

// -------------------------------------------------------------------

// CMessage4EDrawYuanBaoResponse

// optional uint32 RoleID = 1;
inline bool CMessage4EDrawYuanBaoResponse::has_roleid() const {
  return _has_bit(0);
}
inline void CMessage4EDrawYuanBaoResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessage4EDrawYuanBaoResponse::roleid() const {
  return roleid_;
}
inline void CMessage4EDrawYuanBaoResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional int32 ResultCode = 2;
inline bool CMessage4EDrawYuanBaoResponse::has_resultcode() const {
  return _has_bit(1);
}
inline void CMessage4EDrawYuanBaoResponse::clear_resultcode() {
  resultcode_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessage4EDrawYuanBaoResponse::resultcode() const {
  return resultcode_;
}
inline void CMessage4EDrawYuanBaoResponse::set_resultcode(::google::protobuf::int32 value) {
  _set_bit(1);
  resultcode_ = value;
}

// optional int32 Amount = 3;
inline bool CMessage4EDrawYuanBaoResponse::has_amount() const {
  return _has_bit(2);
}
inline void CMessage4EDrawYuanBaoResponse::clear_amount() {
  amount_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessage4EDrawYuanBaoResponse::amount() const {
  return amount_;
}
inline void CMessage4EDrawYuanBaoResponse::set_amount(::google::protobuf::int32 value) {
  _set_bit(2);
  amount_ = value;
}

// optional int32 LeftAmount = 4;
inline bool CMessage4EDrawYuanBaoResponse::has_leftamount() const {
  return _has_bit(3);
}
inline void CMessage4EDrawYuanBaoResponse::clear_leftamount() {
  leftamount_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessage4EDrawYuanBaoResponse::leftamount() const {
  return leftamount_;
}
inline void CMessage4EDrawYuanBaoResponse::set_leftamount(::google::protobuf::int32 value) {
  _set_bit(3);
  leftamount_ = value;
}

// -------------------------------------------------------------------

// CMessageFamilyExchangeRequest

// optional uint32 RoleID = 1;
inline bool CMessageFamilyExchangeRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageFamilyExchangeRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeRequest::roleid() const {
  return roleid_;
}
inline void CMessageFamilyExchangeRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 NpcTmpID = 2;
inline bool CMessageFamilyExchangeRequest::has_npctmpid() const {
  return _has_bit(1);
}
inline void CMessageFamilyExchangeRequest::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeRequest::npctmpid() const {
  return npctmpid_;
}
inline void CMessageFamilyExchangeRequest::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npctmpid_ = value;
}

// optional uint32 ComposeID = 3;
inline bool CMessageFamilyExchangeRequest::has_composeid() const {
  return _has_bit(2);
}
inline void CMessageFamilyExchangeRequest::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeRequest::composeid() const {
  return composeid_;
}
inline void CMessageFamilyExchangeRequest::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(2);
  composeid_ = value;
}

// optional uint32 FamilyID = 4;
inline bool CMessageFamilyExchangeRequest::has_familyid() const {
  return _has_bit(3);
}
inline void CMessageFamilyExchangeRequest::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeRequest::familyid() const {
  return familyid_;
}
inline void CMessageFamilyExchangeRequest::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(3);
  familyid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool CMessageFamilyExchangeRequest::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageFamilyExchangeRequest::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeRequest::itemnum() const {
  return itemnum_;
}
inline void CMessageFamilyExchangeRequest::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// -------------------------------------------------------------------

// CMessageFamilyExchangeResponse

// optional uint32 Errcode = 1;
inline bool CMessageFamilyExchangeResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageFamilyExchangeResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeResponse::errcode() const {
  return errcode_;
}
inline void CMessageFamilyExchangeResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageFamilyExchangeResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageFamilyExchangeResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeResponse::roleid() const {
  return roleid_;
}
inline void CMessageFamilyExchangeResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 NpcTmpID = 3;
inline bool CMessageFamilyExchangeResponse::has_npctmpid() const {
  return _has_bit(2);
}
inline void CMessageFamilyExchangeResponse::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeResponse::npctmpid() const {
  return npctmpid_;
}
inline void CMessageFamilyExchangeResponse::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npctmpid_ = value;
}

// optional uint32 ComposeID = 4;
inline bool CMessageFamilyExchangeResponse::has_composeid() const {
  return _has_bit(3);
}
inline void CMessageFamilyExchangeResponse::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeResponse::composeid() const {
  return composeid_;
}
inline void CMessageFamilyExchangeResponse::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(3);
  composeid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool CMessageFamilyExchangeResponse::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageFamilyExchangeResponse::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageFamilyExchangeResponse::itemnum() const {
  return itemnum_;
}
inline void CMessageFamilyExchangeResponse::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsExchangeRequest

// optional uint32 RoleID = 1;
inline bool CMessageCorpsExchangeRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageCorpsExchangeRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeRequest::roleid() const {
  return roleid_;
}
inline void CMessageCorpsExchangeRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 NpcTmpID = 2;
inline bool CMessageCorpsExchangeRequest::has_npctmpid() const {
  return _has_bit(1);
}
inline void CMessageCorpsExchangeRequest::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeRequest::npctmpid() const {
  return npctmpid_;
}
inline void CMessageCorpsExchangeRequest::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npctmpid_ = value;
}

// optional uint32 ComposeID = 3;
inline bool CMessageCorpsExchangeRequest::has_composeid() const {
  return _has_bit(2);
}
inline void CMessageCorpsExchangeRequest::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeRequest::composeid() const {
  return composeid_;
}
inline void CMessageCorpsExchangeRequest::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(2);
  composeid_ = value;
}

// optional uint32 CorpsID = 4;
inline bool CMessageCorpsExchangeRequest::has_corpsid() const {
  return _has_bit(3);
}
inline void CMessageCorpsExchangeRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageCorpsExchangeRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  corpsid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool CMessageCorpsExchangeRequest::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageCorpsExchangeRequest::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeRequest::itemnum() const {
  return itemnum_;
}
inline void CMessageCorpsExchangeRequest::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsExchangeResponse

// optional uint32 Errcode = 1;
inline bool CMessageCorpsExchangeResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageCorpsExchangeResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeResponse::errcode() const {
  return errcode_;
}
inline void CMessageCorpsExchangeResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageCorpsExchangeResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsExchangeResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeResponse::roleid() const {
  return roleid_;
}
inline void CMessageCorpsExchangeResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 NpcTmpID = 3;
inline bool CMessageCorpsExchangeResponse::has_npctmpid() const {
  return _has_bit(2);
}
inline void CMessageCorpsExchangeResponse::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeResponse::npctmpid() const {
  return npctmpid_;
}
inline void CMessageCorpsExchangeResponse::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npctmpid_ = value;
}

// optional uint32 ComposeID = 4;
inline bool CMessageCorpsExchangeResponse::has_composeid() const {
  return _has_bit(3);
}
inline void CMessageCorpsExchangeResponse::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeResponse::composeid() const {
  return composeid_;
}
inline void CMessageCorpsExchangeResponse::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(3);
  composeid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool CMessageCorpsExchangeResponse::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageCorpsExchangeResponse::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsExchangeResponse::itemnum() const {
  return itemnum_;
}
inline void CMessageCorpsExchangeResponse::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// -------------------------------------------------------------------

// CMessageAddFamilyExchangeItemNotify

// optional uint32 RoleID = 1;
inline bool CMessageAddFamilyExchangeItemNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageAddFamilyExchangeItemNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAddFamilyExchangeItemNotify::roleid() const {
  return roleid_;
}
inline void CMessageAddFamilyExchangeItemNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 FamilyID = 2;
inline bool CMessageAddFamilyExchangeItemNotify::has_familyid() const {
  return _has_bit(1);
}
inline void CMessageAddFamilyExchangeItemNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAddFamilyExchangeItemNotify::familyid() const {
  return familyid_;
}
inline void CMessageAddFamilyExchangeItemNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(1);
  familyid_ = value;
}

// optional uint32 LeagueBagTmpID = 3;
inline bool CMessageAddFamilyExchangeItemNotify::has_leaguebagtmpid() const {
  return _has_bit(2);
}
inline void CMessageAddFamilyExchangeItemNotify::clear_leaguebagtmpid() {
  leaguebagtmpid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAddFamilyExchangeItemNotify::leaguebagtmpid() const {
  return leaguebagtmpid_;
}
inline void CMessageAddFamilyExchangeItemNotify::set_leaguebagtmpid(::google::protobuf::uint32 value) {
  _set_bit(2);
  leaguebagtmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageAddCorpsExchangeItemNotify

// optional uint32 RoleID = 1;
inline bool CMessageAddCorpsExchangeItemNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageAddCorpsExchangeItemNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAddCorpsExchangeItemNotify::roleid() const {
  return roleid_;
}
inline void CMessageAddCorpsExchangeItemNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 CorpsID = 2;
inline bool CMessageAddCorpsExchangeItemNotify::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageAddCorpsExchangeItemNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAddCorpsExchangeItemNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageAddCorpsExchangeItemNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional uint32 LeagueBagTmpID = 3;
inline bool CMessageAddCorpsExchangeItemNotify::has_leaguebagtmpid() const {
  return _has_bit(2);
}
inline void CMessageAddCorpsExchangeItemNotify::clear_leaguebagtmpid() {
  leaguebagtmpid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAddCorpsExchangeItemNotify::leaguebagtmpid() const {
  return leaguebagtmpid_;
}
inline void CMessageAddCorpsExchangeItemNotify::set_leaguebagtmpid(::google::protobuf::uint32 value) {
  _set_bit(2);
  leaguebagtmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageGateEntityGMMove

// optional string RoleName = 1;
inline bool CMessageGateEntityGMMove::has_rolename() const {
  return _has_bit(0);
}
inline void CMessageGateEntityGMMove::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageGateEntityGMMove::rolename() const {
  return *rolename_;
}
inline void CMessageGateEntityGMMove::set_rolename(const ::std::string& value) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageGateEntityGMMove::set_rolename(const char* value) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageGateEntityGMMove::set_rolename(const char* value, size_t size) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGateEntityGMMove::mutable_rolename() {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional int32 LineID = 2;
inline bool CMessageGateEntityGMMove::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageGateEntityGMMove::clear_lineid() {
  lineid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageGateEntityGMMove::lineid() const {
  return lineid_;
}
inline void CMessageGateEntityGMMove::set_lineid(::google::protobuf::int32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional int32 MapID = 3;
inline bool CMessageGateEntityGMMove::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageGateEntityGMMove::clear_mapid() {
  mapid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageGateEntityGMMove::mapid() const {
  return mapid_;
}
inline void CMessageGateEntityGMMove::set_mapid(::google::protobuf::int32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional int32 PosX = 4;
inline bool CMessageGateEntityGMMove::has_posx() const {
  return _has_bit(3);
}
inline void CMessageGateEntityGMMove::clear_posx() {
  posx_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageGateEntityGMMove::posx() const {
  return posx_;
}
inline void CMessageGateEntityGMMove::set_posx(::google::protobuf::int32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional int32 PosY = 5;
inline bool CMessageGateEntityGMMove::has_posy() const {
  return _has_bit(4);
}
inline void CMessageGateEntityGMMove::clear_posy() {
  posy_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessageGateEntityGMMove::posy() const {
  return posy_;
}
inline void CMessageGateEntityGMMove::set_posy(::google::protobuf::int32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional int64 Key = 6;
inline bool CMessageGateEntityGMMove::has_key() const {
  return _has_bit(5);
}
inline void CMessageGateEntityGMMove::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::int64 CMessageGateEntityGMMove::key() const {
  return key_;
}
inline void CMessageGateEntityGMMove::set_key(::google::protobuf::int64 value) {
  _set_bit(5);
  key_ = value;
}

// -------------------------------------------------------------------

// CMessageSceneEntityGMMove

// optional int32 RoleID = 1;
inline bool CMessageSceneEntityGMMove::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageSceneEntityGMMove::clear_roleid() {
  roleid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageSceneEntityGMMove::roleid() const {
  return roleid_;
}
inline void CMessageSceneEntityGMMove::set_roleid(::google::protobuf::int32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional int32 LineID = 2;
inline bool CMessageSceneEntityGMMove::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageSceneEntityGMMove::clear_lineid() {
  lineid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageSceneEntityGMMove::lineid() const {
  return lineid_;
}
inline void CMessageSceneEntityGMMove::set_lineid(::google::protobuf::int32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional int32 MapID = 3;
inline bool CMessageSceneEntityGMMove::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageSceneEntityGMMove::clear_mapid() {
  mapid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageSceneEntityGMMove::mapid() const {
  return mapid_;
}
inline void CMessageSceneEntityGMMove::set_mapid(::google::protobuf::int32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional int32 PosX = 4;
inline bool CMessageSceneEntityGMMove::has_posx() const {
  return _has_bit(3);
}
inline void CMessageSceneEntityGMMove::clear_posx() {
  posx_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageSceneEntityGMMove::posx() const {
  return posx_;
}
inline void CMessageSceneEntityGMMove::set_posx(::google::protobuf::int32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional int32 PosY = 5;
inline bool CMessageSceneEntityGMMove::has_posy() const {
  return _has_bit(4);
}
inline void CMessageSceneEntityGMMove::clear_posy() {
  posy_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessageSceneEntityGMMove::posy() const {
  return posy_;
}
inline void CMessageSceneEntityGMMove::set_posy(::google::protobuf::int32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional int64 Key = 6;
inline bool CMessageSceneEntityGMMove::has_key() const {
  return _has_bit(5);
}
inline void CMessageSceneEntityGMMove::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::int64 CMessageSceneEntityGMMove::key() const {
  return key_;
}
inline void CMessageSceneEntityGMMove::set_key(::google::protobuf::int64 value) {
  _set_bit(5);
  key_ = value;
}

// -------------------------------------------------------------------

// SingleActivityObj

// optional uint32 ActivityID = 1;
inline bool SingleActivityObj::has_activityid() const {
  return _has_bit(0);
}
inline void SingleActivityObj::clear_activityid() {
  activityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SingleActivityObj::activityid() const {
  return activityid_;
}
inline void SingleActivityObj::set_activityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  activityid_ = value;
}

// optional uint32 TimeType = 2;
inline bool SingleActivityObj::has_timetype() const {
  return _has_bit(1);
}
inline void SingleActivityObj::clear_timetype() {
  timetype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SingleActivityObj::timetype() const {
  return timetype_;
}
inline void SingleActivityObj::set_timetype(::google::protobuf::uint32 value) {
  _set_bit(1);
  timetype_ = value;
}

// optional uint32 TimeInfo = 3;
inline bool SingleActivityObj::has_timeinfo() const {
  return _has_bit(2);
}
inline void SingleActivityObj::clear_timeinfo() {
  timeinfo_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 SingleActivityObj::timeinfo() const {
  return timeinfo_;
}
inline void SingleActivityObj::set_timeinfo(::google::protobuf::uint32 value) {
  _set_bit(2);
  timeinfo_ = value;
}

// optional uint32 LmtLevel = 4;
inline bool SingleActivityObj::has_lmtlevel() const {
  return _has_bit(3);
}
inline void SingleActivityObj::clear_lmtlevel() {
  lmtlevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 SingleActivityObj::lmtlevel() const {
  return lmtlevel_;
}
inline void SingleActivityObj::set_lmtlevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  lmtlevel_ = value;
}

// optional uint32 MaxTimes = 5;
inline bool SingleActivityObj::has_maxtimes() const {
  return _has_bit(4);
}
inline void SingleActivityObj::clear_maxtimes() {
  maxtimes_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 SingleActivityObj::maxtimes() const {
  return maxtimes_;
}
inline void SingleActivityObj::set_maxtimes(::google::protobuf::uint32 value) {
  _set_bit(4);
  maxtimes_ = value;
}

// optional uint32 State = 6;
inline bool SingleActivityObj::has_state() const {
  return _has_bit(5);
}
inline void SingleActivityObj::clear_state() {
  state_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 SingleActivityObj::state() const {
  return state_;
}
inline void SingleActivityObj::set_state(::google::protobuf::uint32 value) {
  _set_bit(5);
  state_ = value;
}

// -------------------------------------------------------------------

// DropInfo

// optional uint32 OgreID = 1;
inline bool DropInfo::has_ogreid() const {
  return _has_bit(0);
}
inline void DropInfo::clear_ogreid() {
  ogreid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 DropInfo::ogreid() const {
  return ogreid_;
}
inline void DropInfo::set_ogreid(::google::protobuf::uint32 value) {
  _set_bit(0);
  ogreid_ = value;
}

// optional uint32 DropID = 2;
inline bool DropInfo::has_dropid() const {
  return _has_bit(1);
}
inline void DropInfo::clear_dropid() {
  dropid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 DropInfo::dropid() const {
  return dropid_;
}
inline void DropInfo::set_dropid(::google::protobuf::uint32 value) {
  _set_bit(1);
  dropid_ = value;
}

// -------------------------------------------------------------------

// MapDrop

// optional uint32 DropID = 1;
inline bool MapDrop::has_dropid() const {
  return _has_bit(0);
}
inline void MapDrop::clear_dropid() {
  dropid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MapDrop::dropid() const {
  return dropid_;
}
inline void MapDrop::set_dropid(::google::protobuf::uint32 value) {
  _set_bit(0);
  dropid_ = value;
}

// optional uint32 DropType = 2;
inline bool MapDrop::has_droptype() const {
  return _has_bit(1);
}
inline void MapDrop::clear_droptype() {
  droptype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MapDrop::droptype() const {
  return droptype_;
}
inline void MapDrop::set_droptype(::google::protobuf::uint32 value) {
  _set_bit(1);
  droptype_ = value;
}

// repeated uint32 MapIDs = 3;
inline int MapDrop::mapids_size() const {
  return mapids_.size();
}
inline void MapDrop::clear_mapids() {
  mapids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MapDrop::mapids() const {
  return mapids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MapDrop::mutable_mapids() {
  return &mapids_;
}
inline ::google::protobuf::uint32 MapDrop::mapids(int index) const {
  return mapids_.Get(index);
}
inline void MapDrop::set_mapids(int index, ::google::protobuf::uint32 value) {
  mapids_.Set(index, value);
}
inline void MapDrop::add_mapids(::google::protobuf::uint32 value) {
  mapids_.Add(value);
}

// -------------------------------------------------------------------

// SingleActivityInfo

// optional uint32 ActivityID = 1;
inline bool SingleActivityInfo::has_activityid() const {
  return _has_bit(0);
}
inline void SingleActivityInfo::clear_activityid() {
  activityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SingleActivityInfo::activityid() const {
  return activityid_;
}
inline void SingleActivityInfo::set_activityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  activityid_ = value;
}

// repeated .DropInfo dropinfo = 2;
inline int SingleActivityInfo::dropinfo_size() const {
  return dropinfo_.size();
}
inline void SingleActivityInfo::clear_dropinfo() {
  dropinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::DropInfo >&
SingleActivityInfo::dropinfo() const {
  return dropinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::DropInfo >*
SingleActivityInfo::mutable_dropinfo() {
  return &dropinfo_;
}
inline const ::DropInfo& SingleActivityInfo::dropinfo(int index) const {
  return dropinfo_.Get(index);
}
inline ::DropInfo* SingleActivityInfo::mutable_dropinfo(int index) {
  return dropinfo_.Mutable(index);
}
inline ::DropInfo* SingleActivityInfo::add_dropinfo() {
  return dropinfo_.Add();
}

// repeated uint32 ogreindex = 3;
inline int SingleActivityInfo::ogreindex_size() const {
  return ogreindex_.size();
}
inline void SingleActivityInfo::clear_ogreindex() {
  ogreindex_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SingleActivityInfo::ogreindex() const {
  return ogreindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SingleActivityInfo::mutable_ogreindex() {
  return &ogreindex_;
}
inline ::google::protobuf::uint32 SingleActivityInfo::ogreindex(int index) const {
  return ogreindex_.Get(index);
}
inline void SingleActivityInfo::set_ogreindex(int index, ::google::protobuf::uint32 value) {
  ogreindex_.Set(index, value);
}
inline void SingleActivityInfo::add_ogreindex(::google::protobuf::uint32 value) {
  ogreindex_.Add(value);
}

// -------------------------------------------------------------------

// CMessageTodayActivitysNotify

// repeated .SingleActivityObj ActivityList = 1;
inline int CMessageTodayActivitysNotify::activitylist_size() const {
  return activitylist_.size();
}
inline void CMessageTodayActivitysNotify::clear_activitylist() {
  activitylist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleActivityObj >&
CMessageTodayActivitysNotify::activitylist() const {
  return activitylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleActivityObj >*
CMessageTodayActivitysNotify::mutable_activitylist() {
  return &activitylist_;
}
inline const ::SingleActivityObj& CMessageTodayActivitysNotify::activitylist(int index) const {
  return activitylist_.Get(index);
}
inline ::SingleActivityObj* CMessageTodayActivitysNotify::mutable_activitylist(int index) {
  return activitylist_.Mutable(index);
}
inline ::SingleActivityObj* CMessageTodayActivitysNotify::add_activitylist() {
  return activitylist_.Add();
}

// repeated .SingleActivityInfo ActivityInfo = 2;
inline int CMessageTodayActivitysNotify::activityinfo_size() const {
  return activityinfo_.size();
}
inline void CMessageTodayActivitysNotify::clear_activityinfo() {
  activityinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleActivityInfo >&
CMessageTodayActivitysNotify::activityinfo() const {
  return activityinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleActivityInfo >*
CMessageTodayActivitysNotify::mutable_activityinfo() {
  return &activityinfo_;
}
inline const ::SingleActivityInfo& CMessageTodayActivitysNotify::activityinfo(int index) const {
  return activityinfo_.Get(index);
}
inline ::SingleActivityInfo* CMessageTodayActivitysNotify::mutable_activityinfo(int index) {
  return activityinfo_.Mutable(index);
}
inline ::SingleActivityInfo* CMessageTodayActivitysNotify::add_activityinfo() {
  return activityinfo_.Add();
}

// -------------------------------------------------------------------

// SingleActivity

// optional uint32 ActivityID = 1;
inline bool SingleActivity::has_activityid() const {
  return _has_bit(0);
}
inline void SingleActivity::clear_activityid() {
  activityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SingleActivity::activityid() const {
  return activityid_;
}
inline void SingleActivity::set_activityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  activityid_ = value;
}

// optional uint32 ActivityState = 2;
inline bool SingleActivity::has_activitystate() const {
  return _has_bit(1);
}
inline void SingleActivity::clear_activitystate() {
  activitystate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SingleActivity::activitystate() const {
  return activitystate_;
}
inline void SingleActivity::set_activitystate(::google::protobuf::uint32 value) {
  _set_bit(1);
  activitystate_ = value;
}

// repeated .MapDrop MapDrops = 3;
inline int SingleActivity::mapdrops_size() const {
  return mapdrops_.size();
}
inline void SingleActivity::clear_mapdrops() {
  mapdrops_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::MapDrop >&
SingleActivity::mapdrops() const {
  return mapdrops_;
}
inline ::google::protobuf::RepeatedPtrField< ::MapDrop >*
SingleActivity::mutable_mapdrops() {
  return &mapdrops_;
}
inline const ::MapDrop& SingleActivity::mapdrops(int index) const {
  return mapdrops_.Get(index);
}
inline ::MapDrop* SingleActivity::mutable_mapdrops(int index) {
  return mapdrops_.Mutable(index);
}
inline ::MapDrop* SingleActivity::add_mapdrops() {
  return mapdrops_.Add();
}

// -------------------------------------------------------------------

// CMessageActivityChangeNotify

// repeated .SingleActivity ActivityList = 1;
inline int CMessageActivityChangeNotify::activitylist_size() const {
  return activitylist_.size();
}
inline void CMessageActivityChangeNotify::clear_activitylist() {
  activitylist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleActivity >&
CMessageActivityChangeNotify::activitylist() const {
  return activitylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleActivity >*
CMessageActivityChangeNotify::mutable_activitylist() {
  return &activitylist_;
}
inline const ::SingleActivity& CMessageActivityChangeNotify::activitylist(int index) const {
  return activitylist_.Get(index);
}
inline ::SingleActivity* CMessageActivityChangeNotify::mutable_activitylist(int index) {
  return activitylist_.Mutable(index);
}
inline ::SingleActivity* CMessageActivityChangeNotify::add_activitylist() {
  return activitylist_.Add();
}

// -------------------------------------------------------------------

// CMessageChangePasswordStatusNotify

// optional uint32 RoleID = 1;
inline bool CMessageChangePasswordStatusNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageChangePasswordStatusNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangePasswordStatusNotify::roleid() const {
  return roleid_;
}
inline void CMessageChangePasswordStatusNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 PwdStatus = 2;
inline bool CMessageChangePasswordStatusNotify::has_pwdstatus() const {
  return _has_bit(1);
}
inline void CMessageChangePasswordStatusNotify::clear_pwdstatus() {
  pwdstatus_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangePasswordStatusNotify::pwdstatus() const {
  return pwdstatus_;
}
inline void CMessageChangePasswordStatusNotify::set_pwdstatus(::google::protobuf::uint32 value) {
  _set_bit(1);
  pwdstatus_ = value;
}

// optional string Password = 3;
inline bool CMessageChangePasswordStatusNotify::has_password() const {
  return _has_bit(2);
}
inline void CMessageChangePasswordStatusNotify::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageChangePasswordStatusNotify::password() const {
  return *password_;
}
inline void CMessageChangePasswordStatusNotify::set_password(const ::std::string& value) {
  _set_bit(2);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageChangePasswordStatusNotify::set_password(const char* value) {
  _set_bit(2);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CMessageChangePasswordStatusNotify::set_password(const char* value, size_t size) {
  _set_bit(2);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangePasswordStatusNotify::mutable_password() {
  _set_bit(2);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// -------------------------------------------------------------------

// CMessageUpdateNationTitleNotice

// optional int32 RoleID = 1;
inline bool CMessageUpdateNationTitleNotice::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageUpdateNationTitleNotice::clear_roleid() {
  roleid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageUpdateNationTitleNotice::roleid() const {
  return roleid_;
}
inline void CMessageUpdateNationTitleNotice::set_roleid(::google::protobuf::int32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 TitleID = 2;
inline bool CMessageUpdateNationTitleNotice::has_titleid() const {
  return _has_bit(1);
}
inline void CMessageUpdateNationTitleNotice::clear_titleid() {
  titleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdateNationTitleNotice::titleid() const {
  return titleid_;
}
inline void CMessageUpdateNationTitleNotice::set_titleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  titleid_ = value;
}

// optional uint32 IsAdd = 3;
inline bool CMessageUpdateNationTitleNotice::has_isadd() const {
  return _has_bit(2);
}
inline void CMessageUpdateNationTitleNotice::clear_isadd() {
  isadd_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUpdateNationTitleNotice::isadd() const {
  return isadd_;
}
inline void CMessageUpdateNationTitleNotice::set_isadd(::google::protobuf::uint32 value) {
  _set_bit(2);
  isadd_ = value;
}

// -------------------------------------------------------------------

// CMessageGetNationTitleListRequest

// optional int32 RoleID = 1;
inline bool CMessageGetNationTitleListRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageGetNationTitleListRequest::clear_roleid() {
  roleid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageGetNationTitleListRequest::roleid() const {
  return roleid_;
}
inline void CMessageGetNationTitleListRequest::set_roleid(::google::protobuf::int32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetNationTitleListResponse

// optional int32 RoleID = 1;
inline bool CMessageGetNationTitleListResponse::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageGetNationTitleListResponse::clear_roleid() {
  roleid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageGetNationTitleListResponse::roleid() const {
  return roleid_;
}
inline void CMessageGetNationTitleListResponse::set_roleid(::google::protobuf::int32 value) {
  _set_bit(0);
  roleid_ = value;
}

// repeated uint32 TitleList = 2;
inline int CMessageGetNationTitleListResponse::titlelist_size() const {
  return titlelist_.size();
}
inline void CMessageGetNationTitleListResponse::clear_titlelist() {
  titlelist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGetNationTitleListResponse::titlelist() const {
  return titlelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGetNationTitleListResponse::mutable_titlelist() {
  return &titlelist_;
}
inline ::google::protobuf::uint32 CMessageGetNationTitleListResponse::titlelist(int index) const {
  return titlelist_.Get(index);
}
inline void CMessageGetNationTitleListResponse::set_titlelist(int index, ::google::protobuf::uint32 value) {
  titlelist_.Set(index, value);
}
inline void CMessageGetNationTitleListResponse::add_titlelist(::google::protobuf::uint32 value) {
  titlelist_.Add(value);
}

// -------------------------------------------------------------------

// CMessageSGProVipFlagNotice

// optional int32 RoleID = 1;
inline bool CMessageSGProVipFlagNotice::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageSGProVipFlagNotice::clear_roleid() {
  roleid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageSGProVipFlagNotice::roleid() const {
  return roleid_;
}
inline void CMessageSGProVipFlagNotice::set_roleid(::google::protobuf::int32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 VipFlag = 2;
inline bool CMessageSGProVipFlagNotice::has_vipflag() const {
  return _has_bit(1);
}
inline void CMessageSGProVipFlagNotice::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSGProVipFlagNotice::vipflag() const {
  return vipflag_;
}
inline void CMessageSGProVipFlagNotice::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(1);
  vipflag_ = value;
}

// -------------------------------------------------------------------

// CMessageResetRolePasswordNotify

// optional uint32 RoleID = 1;
inline bool CMessageResetRolePasswordNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageResetRolePasswordNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageResetRolePasswordNotify::roleid() const {
  return roleid_;
}
inline void CMessageResetRolePasswordNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessgeSafeShutdownNotify

// optional uint32 ServerType = 1;
inline bool CMessgeSafeShutdownNotify::has_servertype() const {
  return _has_bit(0);
}
inline void CMessgeSafeShutdownNotify::clear_servertype() {
  servertype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessgeSafeShutdownNotify::servertype() const {
  return servertype_;
}
inline void CMessgeSafeShutdownNotify::set_servertype(::google::protobuf::uint32 value) {
  _set_bit(0);
  servertype_ = value;
}

// optional uint32 ServerID = 2;
inline bool CMessgeSafeShutdownNotify::has_serverid() const {
  return _has_bit(1);
}
inline void CMessgeSafeShutdownNotify::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessgeSafeShutdownNotify::serverid() const {
  return serverid_;
}
inline void CMessgeSafeShutdownNotify::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(1);
  serverid_ = value;
}

// optional uint32 OpType = 3;
inline bool CMessgeSafeShutdownNotify::has_optype() const {
  return _has_bit(2);
}
inline void CMessgeSafeShutdownNotify::clear_optype() {
  optype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessgeSafeShutdownNotify::optype() const {
  return optype_;
}
inline void CMessgeSafeShutdownNotify::set_optype(::google::protobuf::uint32 value) {
  _set_bit(2);
  optype_ = value;
}

// -------------------------------------------------------------------

// CMessgeSafeShutdownAck

// optional uint32 ServerType = 1;
inline bool CMessgeSafeShutdownAck::has_servertype() const {
  return _has_bit(0);
}
inline void CMessgeSafeShutdownAck::clear_servertype() {
  servertype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessgeSafeShutdownAck::servertype() const {
  return servertype_;
}
inline void CMessgeSafeShutdownAck::set_servertype(::google::protobuf::uint32 value) {
  _set_bit(0);
  servertype_ = value;
}

// optional uint32 ServerID = 2;
inline bool CMessgeSafeShutdownAck::has_serverid() const {
  return _has_bit(1);
}
inline void CMessgeSafeShutdownAck::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessgeSafeShutdownAck::serverid() const {
  return serverid_;
}
inline void CMessgeSafeShutdownAck::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(1);
  serverid_ = value;
}

// optional uint32 OpType = 3;
inline bool CMessgeSafeShutdownAck::has_optype() const {
  return _has_bit(2);
}
inline void CMessgeSafeShutdownAck::clear_optype() {
  optype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessgeSafeShutdownAck::optype() const {
  return optype_;
}
inline void CMessgeSafeShutdownAck::set_optype(::google::protobuf::uint32 value) {
  _set_bit(2);
  optype_ = value;
}

// -------------------------------------------------------------------

// CMessageRollCorpsMoneyRequest

// optional uint32 IsAll = 1;
inline bool CMessageRollCorpsMoneyRequest::has_isall() const {
  return _has_bit(0);
}
inline void CMessageRollCorpsMoneyRequest::clear_isall() {
  isall_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRollCorpsMoneyRequest::isall() const {
  return isall_;
}
inline void CMessageRollCorpsMoneyRequest::set_isall(::google::protobuf::uint32 value) {
  _set_bit(0);
  isall_ = value;
}

// optional uint32 CorpsID = 2;
inline bool CMessageRollCorpsMoneyRequest::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageRollCorpsMoneyRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRollCorpsMoneyRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageRollCorpsMoneyRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional uint32 NpcID = 3;
inline bool CMessageRollCorpsMoneyRequest::has_npcid() const {
  return _has_bit(2);
}
inline void CMessageRollCorpsMoneyRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRollCorpsMoneyRequest::npcid() const {
  return npcid_;
}
inline void CMessageRollCorpsMoneyRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBattleMapNotice

// optional uint64 BattleKey = 1;
inline bool CMessageCorpsBattleMapNotice::has_battlekey() const {
  return _has_bit(0);
}
inline void CMessageCorpsBattleMapNotice::clear_battlekey() {
  battlekey_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 CMessageCorpsBattleMapNotice::battlekey() const {
  return battlekey_;
}
inline void CMessageCorpsBattleMapNotice::set_battlekey(::google::protobuf::uint64 value) {
  _set_bit(0);
  battlekey_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageCorpsBattleMapNotice::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsBattleMapNotice::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleMapNotice::roleid() const {
  return roleid_;
}
inline void CMessageCorpsBattleMapNotice::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageTrySummonRequest

// optional uint32 CharID = 1;
inline bool CMessageTrySummonRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTrySummonRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTrySummonRequest::charid() const {
  return charid_;
}
inline void CMessageTrySummonRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CharName = 2;
inline bool CMessageTrySummonRequest::has_charname() const {
  return _has_bit(1);
}
inline void CMessageTrySummonRequest::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTrySummonRequest::charname() const {
  return *charname_;
}
inline void CMessageTrySummonRequest::set_charname(const ::std::string& value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageTrySummonRequest::set_charname(const char* value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageTrySummonRequest::set_charname(const char* value, size_t size) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTrySummonRequest::mutable_charname() {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 ItemIndex = 3;
inline bool CMessageTrySummonRequest::has_itemindex() const {
  return _has_bit(2);
}
inline void CMessageTrySummonRequest::clear_itemindex() {
  itemindex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTrySummonRequest::itemindex() const {
  return itemindex_;
}
inline void CMessageTrySummonRequest::set_itemindex(::google::protobuf::uint32 value) {
  _set_bit(2);
  itemindex_ = value;
}

// optional uint32 SummonType = 4;
inline bool CMessageTrySummonRequest::has_summontype() const {
  return _has_bit(3);
}
inline void CMessageTrySummonRequest::clear_summontype() {
  summontype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTrySummonRequest::summontype() const {
  return summontype_;
}
inline void CMessageTrySummonRequest::set_summontype(::google::protobuf::uint32 value) {
  _set_bit(3);
  summontype_ = value;
}

// -------------------------------------------------------------------

// CMessageTrySummonResponse

// optional uint32 CharID = 1;
inline bool CMessageTrySummonResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageTrySummonResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTrySummonResponse::charid() const {
  return charid_;
}
inline void CMessageTrySummonResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CharName = 2;
inline bool CMessageTrySummonResponse::has_charname() const {
  return _has_bit(1);
}
inline void CMessageTrySummonResponse::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageTrySummonResponse::charname() const {
  return *charname_;
}
inline void CMessageTrySummonResponse::set_charname(const ::std::string& value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageTrySummonResponse::set_charname(const char* value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageTrySummonResponse::set_charname(const char* value, size_t size) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTrySummonResponse::mutable_charname() {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 Result = 3;
inline bool CMessageTrySummonResponse::has_result() const {
  return _has_bit(2);
}
inline void CMessageTrySummonResponse::clear_result() {
  result_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTrySummonResponse::result() const {
  return result_;
}
inline void CMessageTrySummonResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(2);
  result_ = value;
}

// optional uint32 ItemIndex = 4;
inline bool CMessageTrySummonResponse::has_itemindex() const {
  return _has_bit(3);
}
inline void CMessageTrySummonResponse::clear_itemindex() {
  itemindex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTrySummonResponse::itemindex() const {
  return itemindex_;
}
inline void CMessageTrySummonResponse::set_itemindex(::google::protobuf::uint32 value) {
  _set_bit(3);
  itemindex_ = value;
}

// optional uint32 SummonType = 5;
inline bool CMessageTrySummonResponse::has_summontype() const {
  return _has_bit(4);
}
inline void CMessageTrySummonResponse::clear_summontype() {
  summontype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageTrySummonResponse::summontype() const {
  return summontype_;
}
inline void CMessageTrySummonResponse::set_summontype(::google::protobuf::uint32 value) {
  _set_bit(4);
  summontype_ = value;
}

// -------------------------------------------------------------------

// CMessageRealSummonRequest

// optional uint32 CharID = 1;
inline bool CMessageRealSummonRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageRealSummonRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRealSummonRequest::charid() const {
  return charid_;
}
inline void CMessageRealSummonRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CharName = 2;
inline bool CMessageRealSummonRequest::has_charname() const {
  return _has_bit(1);
}
inline void CMessageRealSummonRequest::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageRealSummonRequest::charname() const {
  return *charname_;
}
inline void CMessageRealSummonRequest::set_charname(const ::std::string& value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageRealSummonRequest::set_charname(const char* value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageRealSummonRequest::set_charname(const char* value, size_t size) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRealSummonRequest::mutable_charname() {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 SummonType = 3;
inline bool CMessageRealSummonRequest::has_summontype() const {
  return _has_bit(2);
}
inline void CMessageRealSummonRequest::clear_summontype() {
  summontype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRealSummonRequest::summontype() const {
  return summontype_;
}
inline void CMessageRealSummonRequest::set_summontype(::google::protobuf::uint32 value) {
  _set_bit(2);
  summontype_ = value;
}

// optional uint32 LineID = 4;
inline bool CMessageRealSummonRequest::has_lineid() const {
  return _has_bit(3);
}
inline void CMessageRealSummonRequest::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRealSummonRequest::lineid() const {
  return lineid_;
}
inline void CMessageRealSummonRequest::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(3);
  lineid_ = value;
}

// optional uint32 MapID = 5;
inline bool CMessageRealSummonRequest::has_mapid() const {
  return _has_bit(4);
}
inline void CMessageRealSummonRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageRealSummonRequest::mapid() const {
  return mapid_;
}
inline void CMessageRealSummonRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(4);
  mapid_ = value;
}

// optional uint32 PosX = 6;
inline bool CMessageRealSummonRequest::has_posx() const {
  return _has_bit(5);
}
inline void CMessageRealSummonRequest::clear_posx() {
  posx_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageRealSummonRequest::posx() const {
  return posx_;
}
inline void CMessageRealSummonRequest::set_posx(::google::protobuf::uint32 value) {
  _set_bit(5);
  posx_ = value;
}

// optional uint32 PosY = 7;
inline bool CMessageRealSummonRequest::has_posy() const {
  return _has_bit(6);
}
inline void CMessageRealSummonRequest::clear_posy() {
  posy_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageRealSummonRequest::posy() const {
  return posy_;
}
inline void CMessageRealSummonRequest::set_posy(::google::protobuf::uint32 value) {
  _set_bit(6);
  posy_ = value;
}

// -------------------------------------------------------------------

// CMessageRealSummonNotify

// optional string SrcCharName = 1;
inline bool CMessageRealSummonNotify::has_srccharname() const {
  return _has_bit(0);
}
inline void CMessageRealSummonNotify::clear_srccharname() {
  if (srccharname_ != &_default_srccharname_) {
    srccharname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageRealSummonNotify::srccharname() const {
  return *srccharname_;
}
inline void CMessageRealSummonNotify::set_srccharname(const ::std::string& value) {
  _set_bit(0);
  if (srccharname_ == &_default_srccharname_) {
    srccharname_ = new ::std::string;
  }
  srccharname_->assign(value);
}
inline void CMessageRealSummonNotify::set_srccharname(const char* value) {
  _set_bit(0);
  if (srccharname_ == &_default_srccharname_) {
    srccharname_ = new ::std::string;
  }
  srccharname_->assign(value);
}
inline void CMessageRealSummonNotify::set_srccharname(const char* value, size_t size) {
  _set_bit(0);
  if (srccharname_ == &_default_srccharname_) {
    srccharname_ = new ::std::string;
  }
  srccharname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRealSummonNotify::mutable_srccharname() {
  _set_bit(0);
  if (srccharname_ == &_default_srccharname_) {
    srccharname_ = new ::std::string;
  }
  return srccharname_;
}

// optional uint32 LineID = 2;
inline bool CMessageRealSummonNotify::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageRealSummonNotify::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::lineid() const {
  return lineid_;
}
inline void CMessageRealSummonNotify::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageRealSummonNotify::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageRealSummonNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::mapid() const {
  return mapid_;
}
inline void CMessageRealSummonNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 PosX = 4;
inline bool CMessageRealSummonNotify::has_posx() const {
  return _has_bit(3);
}
inline void CMessageRealSummonNotify::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::posx() const {
  return posx_;
}
inline void CMessageRealSummonNotify::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool CMessageRealSummonNotify::has_posy() const {
  return _has_bit(4);
}
inline void CMessageRealSummonNotify::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::posy() const {
  return posy_;
}
inline void CMessageRealSummonNotify::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional uint32 TokenID = 6;
inline bool CMessageRealSummonNotify::has_tokenid() const {
  return _has_bit(5);
}
inline void CMessageRealSummonNotify::clear_tokenid() {
  tokenid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::tokenid() const {
  return tokenid_;
}
inline void CMessageRealSummonNotify::set_tokenid(::google::protobuf::uint32 value) {
  _set_bit(5);
  tokenid_ = value;
}

// optional uint32 DesCharID = 7;
inline bool CMessageRealSummonNotify::has_descharid() const {
  return _has_bit(6);
}
inline void CMessageRealSummonNotify::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::descharid() const {
  return descharid_;
}
inline void CMessageRealSummonNotify::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(6);
  descharid_ = value;
}

// optional uint32 FamilyID = 8;
inline bool CMessageRealSummonNotify::has_familyid() const {
  return _has_bit(7);
}
inline void CMessageRealSummonNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::familyid() const {
  return familyid_;
}
inline void CMessageRealSummonNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(7);
  familyid_ = value;
}

// optional uint32 CorpsID = 9;
inline bool CMessageRealSummonNotify::has_corpsid() const {
  return _has_bit(8);
}
inline void CMessageRealSummonNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageRealSummonNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(8);
  corpsid_ = value;
}

// optional uint32 SrcCharID = 10;
inline bool CMessageRealSummonNotify::has_srccharid() const {
  return _has_bit(9);
}
inline void CMessageRealSummonNotify::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageRealSummonNotify::srccharid() const {
  return srccharid_;
}
inline void CMessageRealSummonNotify::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(9);
  srccharid_ = value;
}

// -------------------------------------------------------------------

// CMessageLockGoodsRequest

// optional uint32 GoodsID = 1;
inline bool CMessageLockGoodsRequest::has_goodsid() const {
  return _has_bit(0);
}
inline void CMessageLockGoodsRequest::clear_goodsid() {
  goodsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLockGoodsRequest::goodsid() const {
  return goodsid_;
}
inline void CMessageLockGoodsRequest::set_goodsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  goodsid_ = value;
}

// optional int32 LockCount = 2;
inline bool CMessageLockGoodsRequest::has_lockcount() const {
  return _has_bit(1);
}
inline void CMessageLockGoodsRequest::clear_lockcount() {
  lockcount_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageLockGoodsRequest::lockcount() const {
  return lockcount_;
}
inline void CMessageLockGoodsRequest::set_lockcount(::google::protobuf::int32 value) {
  _set_bit(1);
  lockcount_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageLockGoodsRequest::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageLockGoodsRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLockGoodsRequest::roleid() const {
  return roleid_;
}
inline void CMessageLockGoodsRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional int32 TransObjID = 4;
inline bool CMessageLockGoodsRequest::has_transobjid() const {
  return _has_bit(3);
}
inline void CMessageLockGoodsRequest::clear_transobjid() {
  transobjid_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageLockGoodsRequest::transobjid() const {
  return transobjid_;
}
inline void CMessageLockGoodsRequest::set_transobjid(::google::protobuf::int32 value) {
  _set_bit(3);
  transobjid_ = value;
}

// -------------------------------------------------------------------

// CMessageLockGoodsResponse

// optional int32 Result = 1;
inline bool CMessageLockGoodsResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageLockGoodsResponse::clear_result() {
  result_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageLockGoodsResponse::result() const {
  return result_;
}
inline void CMessageLockGoodsResponse::set_result(::google::protobuf::int32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 GoodsID = 2;
inline bool CMessageLockGoodsResponse::has_goodsid() const {
  return _has_bit(1);
}
inline void CMessageLockGoodsResponse::clear_goodsid() {
  goodsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLockGoodsResponse::goodsid() const {
  return goodsid_;
}
inline void CMessageLockGoodsResponse::set_goodsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  goodsid_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageLockGoodsResponse::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageLockGoodsResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLockGoodsResponse::roleid() const {
  return roleid_;
}
inline void CMessageLockGoodsResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional int32 LockCount = 4;
inline bool CMessageLockGoodsResponse::has_lockcount() const {
  return _has_bit(3);
}
inline void CMessageLockGoodsResponse::clear_lockcount() {
  lockcount_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageLockGoodsResponse::lockcount() const {
  return lockcount_;
}
inline void CMessageLockGoodsResponse::set_lockcount(::google::protobuf::int32 value) {
  _set_bit(3);
  lockcount_ = value;
}

// optional int32 Remain = 5;
inline bool CMessageLockGoodsResponse::has_remain() const {
  return _has_bit(4);
}
inline void CMessageLockGoodsResponse::clear_remain() {
  remain_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessageLockGoodsResponse::remain() const {
  return remain_;
}
inline void CMessageLockGoodsResponse::set_remain(::google::protobuf::int32 value) {
  _set_bit(4);
  remain_ = value;
}

// optional int32 TransObjID = 6;
inline bool CMessageLockGoodsResponse::has_transobjid() const {
  return _has_bit(5);
}
inline void CMessageLockGoodsResponse::clear_transobjid() {
  transobjid_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CMessageLockGoodsResponse::transobjid() const {
  return transobjid_;
}
inline void CMessageLockGoodsResponse::set_transobjid(::google::protobuf::int32 value) {
  _set_bit(5);
  transobjid_ = value;
}

// -------------------------------------------------------------------

// CMessageS2GRoleMove

// optional string SrcRole = 1;
inline bool CMessageS2GRoleMove::has_srcrole() const {
  return _has_bit(0);
}
inline void CMessageS2GRoleMove::clear_srcrole() {
  if (srcrole_ != &_default_srcrole_) {
    srcrole_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageS2GRoleMove::srcrole() const {
  return *srcrole_;
}
inline void CMessageS2GRoleMove::set_srcrole(const ::std::string& value) {
  _set_bit(0);
  if (srcrole_ == &_default_srcrole_) {
    srcrole_ = new ::std::string;
  }
  srcrole_->assign(value);
}
inline void CMessageS2GRoleMove::set_srcrole(const char* value) {
  _set_bit(0);
  if (srcrole_ == &_default_srcrole_) {
    srcrole_ = new ::std::string;
  }
  srcrole_->assign(value);
}
inline void CMessageS2GRoleMove::set_srcrole(const char* value, size_t size) {
  _set_bit(0);
  if (srcrole_ == &_default_srcrole_) {
    srcrole_ = new ::std::string;
  }
  srcrole_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageS2GRoleMove::mutable_srcrole() {
  _set_bit(0);
  if (srcrole_ == &_default_srcrole_) {
    srcrole_ = new ::std::string;
  }
  return srcrole_;
}

// optional string DesRole = 2;
inline bool CMessageS2GRoleMove::has_desrole() const {
  return _has_bit(1);
}
inline void CMessageS2GRoleMove::clear_desrole() {
  if (desrole_ != &_default_desrole_) {
    desrole_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageS2GRoleMove::desrole() const {
  return *desrole_;
}
inline void CMessageS2GRoleMove::set_desrole(const ::std::string& value) {
  _set_bit(1);
  if (desrole_ == &_default_desrole_) {
    desrole_ = new ::std::string;
  }
  desrole_->assign(value);
}
inline void CMessageS2GRoleMove::set_desrole(const char* value) {
  _set_bit(1);
  if (desrole_ == &_default_desrole_) {
    desrole_ = new ::std::string;
  }
  desrole_->assign(value);
}
inline void CMessageS2GRoleMove::set_desrole(const char* value, size_t size) {
  _set_bit(1);
  if (desrole_ == &_default_desrole_) {
    desrole_ = new ::std::string;
  }
  desrole_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageS2GRoleMove::mutable_desrole() {
  _set_bit(1);
  if (desrole_ == &_default_desrole_) {
    desrole_ = new ::std::string;
  }
  return desrole_;
}

// -------------------------------------------------------------------

// CMessageG2SRoleMove

// optional string SrcRole = 1;
inline bool CMessageG2SRoleMove::has_srcrole() const {
  return _has_bit(0);
}
inline void CMessageG2SRoleMove::clear_srcrole() {
  if (srcrole_ != &_default_srcrole_) {
    srcrole_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageG2SRoleMove::srcrole() const {
  return *srcrole_;
}
inline void CMessageG2SRoleMove::set_srcrole(const ::std::string& value) {
  _set_bit(0);
  if (srcrole_ == &_default_srcrole_) {
    srcrole_ = new ::std::string;
  }
  srcrole_->assign(value);
}
inline void CMessageG2SRoleMove::set_srcrole(const char* value) {
  _set_bit(0);
  if (srcrole_ == &_default_srcrole_) {
    srcrole_ = new ::std::string;
  }
  srcrole_->assign(value);
}
inline void CMessageG2SRoleMove::set_srcrole(const char* value, size_t size) {
  _set_bit(0);
  if (srcrole_ == &_default_srcrole_) {
    srcrole_ = new ::std::string;
  }
  srcrole_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageG2SRoleMove::mutable_srcrole() {
  _set_bit(0);
  if (srcrole_ == &_default_srcrole_) {
    srcrole_ = new ::std::string;
  }
  return srcrole_;
}

// optional string DesRole = 2;
inline bool CMessageG2SRoleMove::has_desrole() const {
  return _has_bit(1);
}
inline void CMessageG2SRoleMove::clear_desrole() {
  if (desrole_ != &_default_desrole_) {
    desrole_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageG2SRoleMove::desrole() const {
  return *desrole_;
}
inline void CMessageG2SRoleMove::set_desrole(const ::std::string& value) {
  _set_bit(1);
  if (desrole_ == &_default_desrole_) {
    desrole_ = new ::std::string;
  }
  desrole_->assign(value);
}
inline void CMessageG2SRoleMove::set_desrole(const char* value) {
  _set_bit(1);
  if (desrole_ == &_default_desrole_) {
    desrole_ = new ::std::string;
  }
  desrole_->assign(value);
}
inline void CMessageG2SRoleMove::set_desrole(const char* value, size_t size) {
  _set_bit(1);
  if (desrole_ == &_default_desrole_) {
    desrole_ = new ::std::string;
  }
  desrole_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageG2SRoleMove::mutable_desrole() {
  _set_bit(1);
  if (desrole_ == &_default_desrole_) {
    desrole_ = new ::std::string;
  }
  return desrole_;
}

// -------------------------------------------------------------------

// CMessageWarChangeNotify

// optional uint32 WorldID = 1;
inline bool CMessageWarChangeNotify::has_worldid() const {
  return _has_bit(0);
}
inline void CMessageWarChangeNotify::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWarChangeNotify::worldid() const {
  return worldid_;
}
inline void CMessageWarChangeNotify::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 SeedType = 2;
inline bool CMessageWarChangeNotify::has_seedtype() const {
  return _has_bit(1);
}
inline void CMessageWarChangeNotify::clear_seedtype() {
  seedtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWarChangeNotify::seedtype() const {
  return seedtype_;
}
inline void CMessageWarChangeNotify::set_seedtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  seedtype_ = value;
}

// optional uint32 SeedValue = 3;
inline bool CMessageWarChangeNotify::has_seedvalue() const {
  return _has_bit(2);
}
inline void CMessageWarChangeNotify::clear_seedvalue() {
  seedvalue_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWarChangeNotify::seedvalue() const {
  return seedvalue_;
}
inline void CMessageWarChangeNotify::set_seedvalue(::google::protobuf::uint32 value) {
  _set_bit(2);
  seedvalue_ = value;
}

// optional uint32 SourceType = 4;
inline bool CMessageWarChangeNotify::has_sourcetype() const {
  return _has_bit(3);
}
inline void CMessageWarChangeNotify::clear_sourcetype() {
  sourcetype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWarChangeNotify::sourcetype() const {
  return sourcetype_;
}
inline void CMessageWarChangeNotify::set_sourcetype(::google::protobuf::uint32 value) {
  _set_bit(3);
  sourcetype_ = value;
}

// optional uint32 SourceValue = 5;
inline bool CMessageWarChangeNotify::has_sourcevalue() const {
  return _has_bit(4);
}
inline void CMessageWarChangeNotify::clear_sourcevalue() {
  sourcevalue_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageWarChangeNotify::sourcevalue() const {
  return sourcevalue_;
}
inline void CMessageWarChangeNotify::set_sourcevalue(::google::protobuf::uint32 value) {
  _set_bit(4);
  sourcevalue_ = value;
}

// optional uint32 MapID = 6;
inline bool CMessageWarChangeNotify::has_mapid() const {
  return _has_bit(5);
}
inline void CMessageWarChangeNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageWarChangeNotify::mapid() const {
  return mapid_;
}
inline void CMessageWarChangeNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(5);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageReliveChangeNotify

// repeated uint32 WorldID = 1;
inline int CMessageReliveChangeNotify::worldid_size() const {
  return worldid_.size();
}
inline void CMessageReliveChangeNotify::clear_worldid() {
  worldid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageReliveChangeNotify::worldid() const {
  return worldid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageReliveChangeNotify::mutable_worldid() {
  return &worldid_;
}
inline ::google::protobuf::uint32 CMessageReliveChangeNotify::worldid(int index) const {
  return worldid_.Get(index);
}
inline void CMessageReliveChangeNotify::set_worldid(int index, ::google::protobuf::uint32 value) {
  worldid_.Set(index, value);
}
inline void CMessageReliveChangeNotify::add_worldid(::google::protobuf::uint32 value) {
  worldid_.Add(value);
}

// repeated uint32 CampID = 2;
inline int CMessageReliveChangeNotify::campid_size() const {
  return campid_.size();
}
inline void CMessageReliveChangeNotify::clear_campid() {
  campid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageReliveChangeNotify::campid() const {
  return campid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageReliveChangeNotify::mutable_campid() {
  return &campid_;
}
inline ::google::protobuf::uint32 CMessageReliveChangeNotify::campid(int index) const {
  return campid_.Get(index);
}
inline void CMessageReliveChangeNotify::set_campid(int index, ::google::protobuf::uint32 value) {
  campid_.Set(index, value);
}
inline void CMessageReliveChangeNotify::add_campid(::google::protobuf::uint32 value) {
  campid_.Add(value);
}

// optional uint32 WarStatus = 3;
inline bool CMessageReliveChangeNotify::has_warstatus() const {
  return _has_bit(2);
}
inline void CMessageReliveChangeNotify::clear_warstatus() {
  warstatus_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReliveChangeNotify::warstatus() const {
  return warstatus_;
}
inline void CMessageReliveChangeNotify::set_warstatus(::google::protobuf::uint32 value) {
  _set_bit(2);
  warstatus_ = value;
}

// -------------------------------------------------------------------

// WarHonorData

// optional uint32 CharID = 1;
inline bool WarHonorData::has_charid() const {
  return _has_bit(0);
}
inline void WarHonorData::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 WarHonorData::charid() const {
  return charid_;
}
inline void WarHonorData::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WarHonor = 2;
inline bool WarHonorData::has_warhonor() const {
  return _has_bit(1);
}
inline void WarHonorData::clear_warhonor() {
  warhonor_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 WarHonorData::warhonor() const {
  return warhonor_;
}
inline void WarHonorData::set_warhonor(::google::protobuf::uint32 value) {
  _set_bit(1);
  warhonor_ = value;
}

// optional uint32 WarKill = 3;
inline bool WarHonorData::has_warkill() const {
  return _has_bit(2);
}
inline void WarHonorData::clear_warkill() {
  warkill_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 WarHonorData::warkill() const {
  return warkill_;
}
inline void WarHonorData::set_warkill(::google::protobuf::uint32 value) {
  _set_bit(2);
  warkill_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainWarHonorNotify

// repeated .WarHonorData WarHonor = 1;
inline int CMessageObtainWarHonorNotify::warhonor_size() const {
  return warhonor_.size();
}
inline void CMessageObtainWarHonorNotify::clear_warhonor() {
  warhonor_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::WarHonorData >&
CMessageObtainWarHonorNotify::warhonor() const {
  return warhonor_;
}
inline ::google::protobuf::RepeatedPtrField< ::WarHonorData >*
CMessageObtainWarHonorNotify::mutable_warhonor() {
  return &warhonor_;
}
inline const ::WarHonorData& CMessageObtainWarHonorNotify::warhonor(int index) const {
  return warhonor_.Get(index);
}
inline ::WarHonorData* CMessageObtainWarHonorNotify::mutable_warhonor(int index) {
  return warhonor_.Mutable(index);
}
inline ::WarHonorData* CMessageObtainWarHonorNotify::add_warhonor() {
  return warhonor_.Add();
}

// optional uint32 IsKill = 2;
inline bool CMessageObtainWarHonorNotify::has_iskill() const {
  return _has_bit(1);
}
inline void CMessageObtainWarHonorNotify::clear_iskill() {
  iskill_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageObtainWarHonorNotify::iskill() const {
  return iskill_;
}
inline void CMessageObtainWarHonorNotify::set_iskill(::google::protobuf::uint32 value) {
  _set_bit(1);
  iskill_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseG2SLoadList

// optional uint32 ListID = 1;
inline bool CMessageBourseG2SLoadList::has_listid() const {
  return _has_bit(0);
}
inline void CMessageBourseG2SLoadList::clear_listid() {
  listid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseG2SLoadList::listid() const {
  return listid_;
}
inline void CMessageBourseG2SLoadList::set_listid(::google::protobuf::uint32 value) {
  _set_bit(0);
  listid_ = value;
}

// optional .PBBourseDetailList BuyList = 2;
inline bool CMessageBourseG2SLoadList::has_buylist() const {
  return _has_bit(1);
}
inline void CMessageBourseG2SLoadList::clear_buylist() {
  if (buylist_ != NULL) buylist_->::PBBourseDetailList::Clear();
  _clear_bit(1);
}
inline const ::PBBourseDetailList& CMessageBourseG2SLoadList::buylist() const {
  return buylist_ != NULL ? *buylist_ : *default_instance_->buylist_;
}
inline ::PBBourseDetailList* CMessageBourseG2SLoadList::mutable_buylist() {
  _set_bit(1);
  if (buylist_ == NULL) buylist_ = new ::PBBourseDetailList;
  return buylist_;
}

// optional .PBBourseDetailList SellList = 3;
inline bool CMessageBourseG2SLoadList::has_selllist() const {
  return _has_bit(2);
}
inline void CMessageBourseG2SLoadList::clear_selllist() {
  if (selllist_ != NULL) selllist_->::PBBourseDetailList::Clear();
  _clear_bit(2);
}
inline const ::PBBourseDetailList& CMessageBourseG2SLoadList::selllist() const {
  return selllist_ != NULL ? *selllist_ : *default_instance_->selllist_;
}
inline ::PBBourseDetailList* CMessageBourseG2SLoadList::mutable_selllist() {
  _set_bit(2);
  if (selllist_ == NULL) selllist_ = new ::PBBourseDetailList;
  return selllist_;
}

// -------------------------------------------------------------------

// CMessageBourseS2GLoadList

// -------------------------------------------------------------------

// CMessageSyncWarStatusNotify

// optional uint32 WarStatus = 1;
inline bool CMessageSyncWarStatusNotify::has_warstatus() const {
  return _has_bit(0);
}
inline void CMessageSyncWarStatusNotify::clear_warstatus() {
  warstatus_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSyncWarStatusNotify::warstatus() const {
  return warstatus_;
}
inline void CMessageSyncWarStatusNotify::set_warstatus(::google::protobuf::uint32 value) {
  _set_bit(0);
  warstatus_ = value;
}

// optional uint32 WarSerial = 2;
inline bool CMessageSyncWarStatusNotify::has_warserial() const {
  return _has_bit(1);
}
inline void CMessageSyncWarStatusNotify::clear_warserial() {
  warserial_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSyncWarStatusNotify::warserial() const {
  return warserial_;
}
inline void CMessageSyncWarStatusNotify::set_warserial(::google::protobuf::uint32 value) {
  _set_bit(1);
  warserial_ = value;
}

// -------------------------------------------------------------------

// CMessageWarControlNotify

// optional uint32 ControlState = 1;
inline bool CMessageWarControlNotify::has_controlstate() const {
  return _has_bit(0);
}
inline void CMessageWarControlNotify::clear_controlstate() {
  controlstate_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWarControlNotify::controlstate() const {
  return controlstate_;
}
inline void CMessageWarControlNotify::set_controlstate(::google::protobuf::uint32 value) {
  _set_bit(0);
  controlstate_ = value;
}

// optional int32 GMHour = 2;
inline bool CMessageWarControlNotify::has_gmhour() const {
  return _has_bit(1);
}
inline void CMessageWarControlNotify::clear_gmhour() {
  gmhour_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageWarControlNotify::gmhour() const {
  return gmhour_;
}
inline void CMessageWarControlNotify::set_gmhour(::google::protobuf::int32 value) {
  _set_bit(1);
  gmhour_ = value;
}

// optional int32 GMMin = 3;
inline bool CMessageWarControlNotify::has_gmmin() const {
  return _has_bit(2);
}
inline void CMessageWarControlNotify::clear_gmmin() {
  gmmin_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageWarControlNotify::gmmin() const {
  return gmmin_;
}
inline void CMessageWarControlNotify::set_gmmin(::google::protobuf::int32 value) {
  _set_bit(2);
  gmmin_ = value;
}

// optional int32 GMDay = 4;
inline bool CMessageWarControlNotify::has_gmday() const {
  return _has_bit(3);
}
inline void CMessageWarControlNotify::clear_gmday() {
  gmday_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageWarControlNotify::gmday() const {
  return gmday_;
}
inline void CMessageWarControlNotify::set_gmday(::google::protobuf::int32 value) {
  _set_bit(3);
  gmday_ = value;
}

// optional uint32 WarSerial = 5;
inline bool CMessageWarControlNotify::has_warserial() const {
  return _has_bit(4);
}
inline void CMessageWarControlNotify::clear_warserial() {
  warserial_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageWarControlNotify::warserial() const {
  return warserial_;
}
inline void CMessageWarControlNotify::set_warserial(::google::protobuf::uint32 value) {
  _set_bit(4);
  warserial_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseTradeNotice

// optional .PBBourseDetail BuyDetail = 1;
inline bool CMessageBourseTradeNotice::has_buydetail() const {
  return _has_bit(0);
}
inline void CMessageBourseTradeNotice::clear_buydetail() {
  if (buydetail_ != NULL) buydetail_->::PBBourseDetail::Clear();
  _clear_bit(0);
}
inline const ::PBBourseDetail& CMessageBourseTradeNotice::buydetail() const {
  return buydetail_ != NULL ? *buydetail_ : *default_instance_->buydetail_;
}
inline ::PBBourseDetail* CMessageBourseTradeNotice::mutable_buydetail() {
  _set_bit(0);
  if (buydetail_ == NULL) buydetail_ = new ::PBBourseDetail;
  return buydetail_;
}

// optional .PBBourseDetail SellDetail = 2;
inline bool CMessageBourseTradeNotice::has_selldetail() const {
  return _has_bit(1);
}
inline void CMessageBourseTradeNotice::clear_selldetail() {
  if (selldetail_ != NULL) selldetail_->::PBBourseDetail::Clear();
  _clear_bit(1);
}
inline const ::PBBourseDetail& CMessageBourseTradeNotice::selldetail() const {
  return selldetail_ != NULL ? *selldetail_ : *default_instance_->selldetail_;
}
inline ::PBBourseDetail* CMessageBourseTradeNotice::mutable_selldetail() {
  _set_bit(1);
  if (selldetail_ == NULL) selldetail_ = new ::PBBourseDetail;
  return selldetail_;
}

// -------------------------------------------------------------------

// CMessageReSavePlayerRequest

// optional uint32 RoleID = 1;
inline bool CMessageReSavePlayerRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageReSavePlayerRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageReSavePlayerRequest::roleid() const {
  return roleid_;
}
inline void CMessageReSavePlayerRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageReSavePlayerResponse

// optional uint32 RoleID = 1;
inline bool CMessageReSavePlayerResponse::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageReSavePlayerResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageReSavePlayerResponse::roleid() const {
  return roleid_;
}
inline void CMessageReSavePlayerResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageReSavePlayerResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageReSavePlayerResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReSavePlayerResponse::result() const {
  return result_;
}
inline void CMessageReSavePlayerResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 LineID = 3;
inline bool CMessageReSavePlayerResponse::has_lineid() const {
  return _has_bit(2);
}
inline void CMessageReSavePlayerResponse::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReSavePlayerResponse::lineid() const {
  return lineid_;
}
inline void CMessageReSavePlayerResponse::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(2);
  lineid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessageReSavePlayerResponse::has_mapid() const {
  return _has_bit(3);
}
inline void CMessageReSavePlayerResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageReSavePlayerResponse::mapid() const {
  return mapid_;
}
inline void CMessageReSavePlayerResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// optional uint32 AccountID = 5;
inline bool CMessageReSavePlayerResponse::has_accountid() const {
  return _has_bit(4);
}
inline void CMessageReSavePlayerResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageReSavePlayerResponse::accountid() const {
  return accountid_;
}
inline void CMessageReSavePlayerResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(4);
  accountid_ = value;
}

// optional uint32 PosX = 6;
inline bool CMessageReSavePlayerResponse::has_posx() const {
  return _has_bit(5);
}
inline void CMessageReSavePlayerResponse::clear_posx() {
  posx_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageReSavePlayerResponse::posx() const {
  return posx_;
}
inline void CMessageReSavePlayerResponse::set_posx(::google::protobuf::uint32 value) {
  _set_bit(5);
  posx_ = value;
}

// optional uint32 PosY = 7;
inline bool CMessageReSavePlayerResponse::has_posy() const {
  return _has_bit(6);
}
inline void CMessageReSavePlayerResponse::clear_posy() {
  posy_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageReSavePlayerResponse::posy() const {
  return posy_;
}
inline void CMessageReSavePlayerResponse::set_posy(::google::protobuf::uint32 value) {
  _set_bit(6);
  posy_ = value;
}

// -------------------------------------------------------------------

// CMessageBoursePlayerTradeBuyNotice

// optional .PBBourseDetail Detail = 1;
inline bool CMessageBoursePlayerTradeBuyNotice::has_detail() const {
  return _has_bit(0);
}
inline void CMessageBoursePlayerTradeBuyNotice::clear_detail() {
  if (detail_ != NULL) detail_->::PBBourseDetail::Clear();
  _clear_bit(0);
}
inline const ::PBBourseDetail& CMessageBoursePlayerTradeBuyNotice::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::PBBourseDetail* CMessageBoursePlayerTradeBuyNotice::mutable_detail() {
  _set_bit(0);
  if (detail_ == NULL) detail_ = new ::PBBourseDetail;
  return detail_;
}

// -------------------------------------------------------------------

// CMessageBoursePlayerTradeSellNotice

// optional .PBBourseDetail Detail = 1;
inline bool CMessageBoursePlayerTradeSellNotice::has_detail() const {
  return _has_bit(0);
}
inline void CMessageBoursePlayerTradeSellNotice::clear_detail() {
  if (detail_ != NULL) detail_->::PBBourseDetail::Clear();
  _clear_bit(0);
}
inline const ::PBBourseDetail& CMessageBoursePlayerTradeSellNotice::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::PBBourseDetail* CMessageBoursePlayerTradeSellNotice::mutable_detail() {
  _set_bit(0);
  if (detail_ == NULL) detail_ = new ::PBBourseDetail;
  return detail_;
}

// -------------------------------------------------------------------

// CMessageWarStoneOverNotify

// optional uint32 MapID = 1;
inline bool CMessageWarStoneOverNotify::has_mapid() const {
  return _has_bit(0);
}
inline void CMessageWarStoneOverNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWarStoneOverNotify::mapid() const {
  return mapid_;
}
inline void CMessageWarStoneOverNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateWarStoneNotify

// optional uint32 StoneLevel = 1;
inline bool CMessageCreateWarStoneNotify::has_stonelevel() const {
  return _has_bit(0);
}
inline void CMessageCreateWarStoneNotify::clear_stonelevel() {
  stonelevel_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateWarStoneNotify::stonelevel() const {
  return stonelevel_;
}
inline void CMessageCreateWarStoneNotify::set_stonelevel(::google::protobuf::uint32 value) {
  _set_bit(0);
  stonelevel_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageCreateWarStoneNotify::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageCreateWarStoneNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCreateWarStoneNotify::mapid() const {
  return mapid_;
}
inline void CMessageCreateWarStoneNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageAddTaxNotify

// optional uint32 Money = 1;
inline bool CMessageAddTaxNotify::has_money() const {
  return _has_bit(0);
}
inline void CMessageAddTaxNotify::clear_money() {
  money_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAddTaxNotify::money() const {
  return money_;
}
inline void CMessageAddTaxNotify::set_money(::google::protobuf::uint32 value) {
  _set_bit(0);
  money_ = value;
}

// -------------------------------------------------------------------

// CMessageSendSysMailToPlayer

// optional string role_name = 1;
inline bool CMessageSendSysMailToPlayer::has_role_name() const {
  return _has_bit(0);
}
inline void CMessageSendSysMailToPlayer::clear_role_name() {
  if (role_name_ != &_default_role_name_) {
    role_name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageSendSysMailToPlayer::role_name() const {
  return *role_name_;
}
inline void CMessageSendSysMailToPlayer::set_role_name(const ::std::string& value) {
  _set_bit(0);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void CMessageSendSysMailToPlayer::set_role_name(const char* value) {
  _set_bit(0);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void CMessageSendSysMailToPlayer::set_role_name(const char* value, size_t size) {
  _set_bit(0);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSendSysMailToPlayer::mutable_role_name() {
  _set_bit(0);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}

// optional uint32 role_id = 2;
inline bool CMessageSendSysMailToPlayer::has_role_id() const {
  return _has_bit(1);
}
inline void CMessageSendSysMailToPlayer::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::role_id() const {
  return role_id_;
}
inline void CMessageSendSysMailToPlayer::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  role_id_ = value;
}

// optional string sender_name = 3;
inline bool CMessageSendSysMailToPlayer::has_sender_name() const {
  return _has_bit(2);
}
inline void CMessageSendSysMailToPlayer::clear_sender_name() {
  if (sender_name_ != &_default_sender_name_) {
    sender_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageSendSysMailToPlayer::sender_name() const {
  return *sender_name_;
}
inline void CMessageSendSysMailToPlayer::set_sender_name(const ::std::string& value) {
  _set_bit(2);
  if (sender_name_ == &_default_sender_name_) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
}
inline void CMessageSendSysMailToPlayer::set_sender_name(const char* value) {
  _set_bit(2);
  if (sender_name_ == &_default_sender_name_) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
}
inline void CMessageSendSysMailToPlayer::set_sender_name(const char* value, size_t size) {
  _set_bit(2);
  if (sender_name_ == &_default_sender_name_) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSendSysMailToPlayer::mutable_sender_name() {
  _set_bit(2);
  if (sender_name_ == &_default_sender_name_) {
    sender_name_ = new ::std::string;
  }
  return sender_name_;
}

// optional string title = 4;
inline bool CMessageSendSysMailToPlayer::has_title() const {
  return _has_bit(3);
}
inline void CMessageSendSysMailToPlayer::clear_title() {
  if (title_ != &_default_title_) {
    title_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageSendSysMailToPlayer::title() const {
  return *title_;
}
inline void CMessageSendSysMailToPlayer::set_title(const ::std::string& value) {
  _set_bit(3);
  if (title_ == &_default_title_) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CMessageSendSysMailToPlayer::set_title(const char* value) {
  _set_bit(3);
  if (title_ == &_default_title_) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CMessageSendSysMailToPlayer::set_title(const char* value, size_t size) {
  _set_bit(3);
  if (title_ == &_default_title_) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSendSysMailToPlayer::mutable_title() {
  _set_bit(3);
  if (title_ == &_default_title_) {
    title_ = new ::std::string;
  }
  return title_;
}

// optional string body = 5;
inline bool CMessageSendSysMailToPlayer::has_body() const {
  return _has_bit(4);
}
inline void CMessageSendSysMailToPlayer::clear_body() {
  if (body_ != &_default_body_) {
    body_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageSendSysMailToPlayer::body() const {
  return *body_;
}
inline void CMessageSendSysMailToPlayer::set_body(const ::std::string& value) {
  _set_bit(4);
  if (body_ == &_default_body_) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void CMessageSendSysMailToPlayer::set_body(const char* value) {
  _set_bit(4);
  if (body_ == &_default_body_) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void CMessageSendSysMailToPlayer::set_body(const char* value, size_t size) {
  _set_bit(4);
  if (body_ == &_default_body_) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSendSysMailToPlayer::mutable_body() {
  _set_bit(4);
  if (body_ == &_default_body_) {
    body_ = new ::std::string;
  }
  return body_;
}

// optional uint32 receive_countryid = 6;
inline bool CMessageSendSysMailToPlayer::has_receive_countryid() const {
  return _has_bit(5);
}
inline void CMessageSendSysMailToPlayer::clear_receive_countryid() {
  receive_countryid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::receive_countryid() const {
  return receive_countryid_;
}
inline void CMessageSendSysMailToPlayer::set_receive_countryid(::google::protobuf::uint32 value) {
  _set_bit(5);
  receive_countryid_ = value;
}

// optional uint32 gateway_id = 7;
inline bool CMessageSendSysMailToPlayer::has_gateway_id() const {
  return _has_bit(6);
}
inline void CMessageSendSysMailToPlayer::clear_gateway_id() {
  gateway_id_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::gateway_id() const {
  return gateway_id_;
}
inline void CMessageSendSysMailToPlayer::set_gateway_id(::google::protobuf::uint32 value) {
  _set_bit(6);
  gateway_id_ = value;
}

// optional uint32 game_id = 8;
inline bool CMessageSendSysMailToPlayer::has_game_id() const {
  return _has_bit(7);
}
inline void CMessageSendSysMailToPlayer::clear_game_id() {
  game_id_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::game_id() const {
  return game_id_;
}
inline void CMessageSendSysMailToPlayer::set_game_id(::google::protobuf::uint32 value) {
  _set_bit(7);
  game_id_ = value;
}

// optional uint32 fd = 9;
inline bool CMessageSendSysMailToPlayer::has_fd() const {
  return _has_bit(8);
}
inline void CMessageSendSysMailToPlayer::clear_fd() {
  fd_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::fd() const {
  return fd_;
}
inline void CMessageSendSysMailToPlayer::set_fd(::google::protobuf::uint32 value) {
  _set_bit(8);
  fd_ = value;
}

// optional uint32 type = 10;
inline bool CMessageSendSysMailToPlayer::has_type() const {
  return _has_bit(9);
}
inline void CMessageSendSysMailToPlayer::clear_type() {
  type_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::type() const {
  return type_;
}
inline void CMessageSendSysMailToPlayer::set_type(::google::protobuf::uint32 value) {
  _set_bit(9);
  type_ = value;
}

// optional uint32 session_id = 11;
inline bool CMessageSendSysMailToPlayer::has_session_id() const {
  return _has_bit(10);
}
inline void CMessageSendSysMailToPlayer::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::session_id() const {
  return session_id_;
}
inline void CMessageSendSysMailToPlayer::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(10);
  session_id_ = value;
}

// repeated uint32 ItemID = 13;
inline int CMessageSendSysMailToPlayer::itemid_size() const {
  return itemid_.size();
}
inline void CMessageSendSysMailToPlayer::clear_itemid() {
  itemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageSendSysMailToPlayer::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageSendSysMailToPlayer::mutable_itemid() {
  return &itemid_;
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::itemid(int index) const {
  return itemid_.Get(index);
}
inline void CMessageSendSysMailToPlayer::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
}
inline void CMessageSendSysMailToPlayer::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
}

// repeated uint32 ItemNum = 14;
inline int CMessageSendSysMailToPlayer::itemnum_size() const {
  return itemnum_.size();
}
inline void CMessageSendSysMailToPlayer::clear_itemnum() {
  itemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageSendSysMailToPlayer::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageSendSysMailToPlayer::mutable_itemnum() {
  return &itemnum_;
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void CMessageSendSysMailToPlayer::set_itemnum(int index, ::google::protobuf::uint32 value) {
  itemnum_.Set(index, value);
}
inline void CMessageSendSysMailToPlayer::add_itemnum(::google::protobuf::uint32 value) {
  itemnum_.Add(value);
}

// optional uint32 MailSendType = 15;
inline bool CMessageSendSysMailToPlayer::has_mailsendtype() const {
  return _has_bit(13);
}
inline void CMessageSendSysMailToPlayer::clear_mailsendtype() {
  mailsendtype_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMessageSendSysMailToPlayer::mailsendtype() const {
  return mailsendtype_;
}
inline void CMessageSendSysMailToPlayer::set_mailsendtype(::google::protobuf::uint32 value) {
  _set_bit(13);
  mailsendtype_ = value;
}

// -------------------------------------------------------------------

// CMessageCampAddHonerScore

// optional uint32 role_id = 1;
inline bool CMessageCampAddHonerScore::has_role_id() const {
  return _has_bit(0);
}
inline void CMessageCampAddHonerScore::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCampAddHonerScore::role_id() const {
  return role_id_;
}
inline void CMessageCampAddHonerScore::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  role_id_ = value;
}

// optional uint32 honer_value = 2;
inline bool CMessageCampAddHonerScore::has_honer_value() const {
  return _has_bit(1);
}
inline void CMessageCampAddHonerScore::clear_honer_value() {
  honer_value_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCampAddHonerScore::honer_value() const {
  return honer_value_;
}
inline void CMessageCampAddHonerScore::set_honer_value(::google::protobuf::uint32 value) {
  _set_bit(1);
  honer_value_ = value;
}

// optional uint32 camp_id = 3;
inline bool CMessageCampAddHonerScore::has_camp_id() const {
  return _has_bit(2);
}
inline void CMessageCampAddHonerScore::clear_camp_id() {
  camp_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCampAddHonerScore::camp_id() const {
  return camp_id_;
}
inline void CMessageCampAddHonerScore::set_camp_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  camp_id_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleTeamFixWait

// optional uint32 CharID = 1;
inline bool CMessageBattleTeamFixWait::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBattleTeamFixWait::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleTeamFixWait::charid() const {
  return charid_;
}
inline void CMessageBattleTeamFixWait::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Level = 2;
inline bool CMessageBattleTeamFixWait::has_level() const {
  return _has_bit(1);
}
inline void CMessageBattleTeamFixWait::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleTeamFixWait::level() const {
  return level_;
}
inline void CMessageBattleTeamFixWait::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 BattleID = 3;
inline bool CMessageBattleTeamFixWait::has_battleid() const {
  return _has_bit(2);
}
inline void CMessageBattleTeamFixWait::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleTeamFixWait::battleid() const {
  return battleid_;
}
inline void CMessageBattleTeamFixWait::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  battleid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessageBattleTeamFixWait::has_mapid() const {
  return _has_bit(3);
}
inline void CMessageBattleTeamFixWait::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBattleTeamFixWait::mapid() const {
  return mapid_;
}
inline void CMessageBattleTeamFixWait::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageActivityEventNotify

// optional uint32 ActivityID = 1;
inline bool CMessageActivityEventNotify::has_activityid() const {
  return _has_bit(0);
}
inline void CMessageActivityEventNotify::clear_activityid() {
  activityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageActivityEventNotify::activityid() const {
  return activityid_;
}
inline void CMessageActivityEventNotify::set_activityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  activityid_ = value;
}

// optional uint32 EventID = 2;
inline bool CMessageActivityEventNotify::has_eventid() const {
  return _has_bit(1);
}
inline void CMessageActivityEventNotify::clear_eventid() {
  eventid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageActivityEventNotify::eventid() const {
  return eventid_;
}
inline void CMessageActivityEventNotify::set_eventid(::google::protobuf::uint32 value) {
  _set_bit(1);
  eventid_ = value;
}

// repeated uint32 IntParams = 3;
inline int CMessageActivityEventNotify::intparams_size() const {
  return intparams_.size();
}
inline void CMessageActivityEventNotify::clear_intparams() {
  intparams_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageActivityEventNotify::intparams() const {
  return intparams_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageActivityEventNotify::mutable_intparams() {
  return &intparams_;
}
inline ::google::protobuf::uint32 CMessageActivityEventNotify::intparams(int index) const {
  return intparams_.Get(index);
}
inline void CMessageActivityEventNotify::set_intparams(int index, ::google::protobuf::uint32 value) {
  intparams_.Set(index, value);
}
inline void CMessageActivityEventNotify::add_intparams(::google::protobuf::uint32 value) {
  intparams_.Add(value);
}

// repeated string StrParams = 4;
inline int CMessageActivityEventNotify::strparams_size() const {
  return strparams_.size();
}
inline void CMessageActivityEventNotify::clear_strparams() {
  strparams_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageActivityEventNotify::strparams() const {
  return strparams_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageActivityEventNotify::mutable_strparams() {
  return &strparams_;
}
inline const ::std::string& CMessageActivityEventNotify::strparams(int index) const {
  return strparams_.Get(index);
}
inline ::std::string* CMessageActivityEventNotify::mutable_strparams(int index) {
  return strparams_.Mutable(index);
}
inline void CMessageActivityEventNotify::set_strparams(int index, const ::std::string& value) {
  strparams_.Mutable(index)->assign(value);
}
inline void CMessageActivityEventNotify::set_strparams(int index, const char* value) {
  strparams_.Mutable(index)->assign(value);
}
inline void CMessageActivityEventNotify::set_strparams(int index, const char* value, size_t size) {
  strparams_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageActivityEventNotify::add_strparams() {
  return strparams_.Add();
}
inline void CMessageActivityEventNotify::add_strparams(const ::std::string& value) {
  strparams_.Add()->assign(value);
}
inline void CMessageActivityEventNotify::add_strparams(const char* value) {
  strparams_.Add()->assign(value);
}
inline void CMessageActivityEventNotify::add_strparams(const char* value, size_t size) {
  strparams_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// CMessageAddMasterPointRequest

// optional uint32 MasterID = 1;
inline bool CMessageAddMasterPointRequest::has_masterid() const {
  return _has_bit(0);
}
inline void CMessageAddMasterPointRequest::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAddMasterPointRequest::masterid() const {
  return masterid_;
}
inline void CMessageAddMasterPointRequest::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(0);
  masterid_ = value;
}

// optional uint32 Point = 2;
inline bool CMessageAddMasterPointRequest::has_point() const {
  return _has_bit(1);
}
inline void CMessageAddMasterPointRequest::clear_point() {
  point_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAddMasterPointRequest::point() const {
  return point_;
}
inline void CMessageAddMasterPointRequest::set_point(::google::protobuf::uint32 value) {
  _set_bit(1);
  point_ = value;
}

// -------------------------------------------------------------------

// CMessageAddMasterPointNotify

// optional uint32 CharID = 1;
inline bool CMessageAddMasterPointNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageAddMasterPointNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAddMasterPointNotify::charid() const {
  return charid_;
}
inline void CMessageAddMasterPointNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Point = 2;
inline bool CMessageAddMasterPointNotify::has_point() const {
  return _has_bit(1);
}
inline void CMessageAddMasterPointNotify::clear_point() {
  point_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAddMasterPointNotify::point() const {
  return point_;
}
inline void CMessageAddMasterPointNotify::set_point(::google::protobuf::uint32 value) {
  _set_bit(1);
  point_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleSingleFixWait

// optional uint32 CharID = 1;
inline bool CMessageBattleSingleFixWait::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBattleSingleFixWait::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleSingleFixWait::charid() const {
  return charid_;
}
inline void CMessageBattleSingleFixWait::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Level = 2;
inline bool CMessageBattleSingleFixWait::has_level() const {
  return _has_bit(1);
}
inline void CMessageBattleSingleFixWait::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleSingleFixWait::level() const {
  return level_;
}
inline void CMessageBattleSingleFixWait::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 BattleID = 3;
inline bool CMessageBattleSingleFixWait::has_battleid() const {
  return _has_bit(2);
}
inline void CMessageBattleSingleFixWait::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleSingleFixWait::battleid() const {
  return battleid_;
}
inline void CMessageBattleSingleFixWait::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  battleid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessageBattleSingleFixWait::has_mapid() const {
  return _has_bit(3);
}
inline void CMessageBattleSingleFixWait::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBattleSingleFixWait::mapid() const {
  return mapid_;
}
inline void CMessageBattleSingleFixWait::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageSpecialEventNotify

// optional uint32 SrcWorldID = 1;
inline bool CMessageSpecialEventNotify::has_srcworldid() const {
  return _has_bit(0);
}
inline void CMessageSpecialEventNotify::clear_srcworldid() {
  srcworldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSpecialEventNotify::srcworldid() const {
  return srcworldid_;
}
inline void CMessageSpecialEventNotify::set_srcworldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srcworldid_ = value;
}

// optional uint32 DesWorldID = 2;
inline bool CMessageSpecialEventNotify::has_desworldid() const {
  return _has_bit(1);
}
inline void CMessageSpecialEventNotify::clear_desworldid() {
  desworldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSpecialEventNotify::desworldid() const {
  return desworldid_;
}
inline void CMessageSpecialEventNotify::set_desworldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  desworldid_ = value;
}

// optional uint32 EventType = 3;
inline bool CMessageSpecialEventNotify::has_eventtype() const {
  return _has_bit(2);
}
inline void CMessageSpecialEventNotify::clear_eventtype() {
  eventtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSpecialEventNotify::eventtype() const {
  return eventtype_;
}
inline void CMessageSpecialEventNotify::set_eventtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  eventtype_ = value;
}

// optional uint32 CharID = 4;
inline bool CMessageSpecialEventNotify::has_charid() const {
  return _has_bit(3);
}
inline void CMessageSpecialEventNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSpecialEventNotify::charid() const {
  return charid_;
}
inline void CMessageSpecialEventNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(3);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageAcquireMasterNotify

// optional uint32 SlaveID = 1;
inline bool CMessageAcquireMasterNotify::has_slaveid() const {
  return _has_bit(0);
}
inline void CMessageAcquireMasterNotify::clear_slaveid() {
  slaveid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAcquireMasterNotify::slaveid() const {
  return slaveid_;
}
inline void CMessageAcquireMasterNotify::set_slaveid(::google::protobuf::uint32 value) {
  _set_bit(0);
  slaveid_ = value;
}

// optional uint32 MasterID = 2;
inline bool CMessageAcquireMasterNotify::has_masterid() const {
  return _has_bit(1);
}
inline void CMessageAcquireMasterNotify::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAcquireMasterNotify::masterid() const {
  return masterid_;
}
inline void CMessageAcquireMasterNotify::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(1);
  masterid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleWinnerNotify

// optional uint32 HasWinner = 1;
inline bool CMessageBattleWinnerNotify::has_haswinner() const {
  return _has_bit(0);
}
inline void CMessageBattleWinnerNotify::clear_haswinner() {
  haswinner_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleWinnerNotify::haswinner() const {
  return haswinner_;
}
inline void CMessageBattleWinnerNotify::set_haswinner(::google::protobuf::uint32 value) {
  _set_bit(0);
  haswinner_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageBattleWinnerNotify::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageBattleWinnerNotify::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleWinnerNotify::battleid() const {
  return battleid_;
}
inline void CMessageBattleWinnerNotify::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// optional uint32 Level = 3;
inline bool CMessageBattleWinnerNotify::has_level() const {
  return _has_bit(2);
}
inline void CMessageBattleWinnerNotify::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleWinnerNotify::level() const {
  return level_;
}
inline void CMessageBattleWinnerNotify::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// optional uint32 CharID = 4;
inline bool CMessageBattleWinnerNotify::has_charid() const {
  return _has_bit(3);
}
inline void CMessageBattleWinnerNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBattleWinnerNotify::charid() const {
  return charid_;
}
inline void CMessageBattleWinnerNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(3);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeFamilyStabilityNotify

// optional uint32 FamilyID = 1;
inline bool CMessageChangeFamilyStabilityNotify::has_familyid() const {
  return _has_bit(0);
}
inline void CMessageChangeFamilyStabilityNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyStabilityNotify::familyid() const {
  return familyid_;
}
inline void CMessageChangeFamilyStabilityNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(0);
  familyid_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageChangeFamilyStabilityNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageChangeFamilyStabilityNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyStabilityNotify::roleid() const {
  return roleid_;
}
inline void CMessageChangeFamilyStabilityNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 Reason = 4;
inline bool CMessageChangeFamilyStabilityNotify::has_reason() const {
  return _has_bit(2);
}
inline void CMessageChangeFamilyStabilityNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyStabilityNotify::reason() const {
  return reason_;
}
inline void CMessageChangeFamilyStabilityNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(2);
  reason_ = value;
}

// optional string RoleName = 5;
inline bool CMessageChangeFamilyStabilityNotify::has_rolename() const {
  return _has_bit(3);
}
inline void CMessageChangeFamilyStabilityNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageChangeFamilyStabilityNotify::rolename() const {
  return *rolename_;
}
inline void CMessageChangeFamilyStabilityNotify::set_rolename(const ::std::string& value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeFamilyStabilityNotify::set_rolename(const char* value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageChangeFamilyStabilityNotify::set_rolename(const char* value, size_t size) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeFamilyStabilityNotify::mutable_rolename() {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional uint32 OnLineTime = 6;
inline bool CMessageChangeFamilyStabilityNotify::has_onlinetime() const {
  return _has_bit(4);
}
inline void CMessageChangeFamilyStabilityNotify::clear_onlinetime() {
  onlinetime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyStabilityNotify::onlinetime() const {
  return onlinetime_;
}
inline void CMessageChangeFamilyStabilityNotify::set_onlinetime(::google::protobuf::uint32 value) {
  _set_bit(4);
  onlinetime_ = value;
}

// optional uint32 RoleLevel = 7;
inline bool CMessageChangeFamilyStabilityNotify::has_rolelevel() const {
  return _has_bit(5);
}
inline void CMessageChangeFamilyStabilityNotify::clear_rolelevel() {
  rolelevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyStabilityNotify::rolelevel() const {
  return rolelevel_;
}
inline void CMessageChangeFamilyStabilityNotify::set_rolelevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  rolelevel_ = value;
}

// optional uint32 Value = 9;
inline bool CMessageChangeFamilyStabilityNotify::has_value() const {
  return _has_bit(6);
}
inline void CMessageChangeFamilyStabilityNotify::clear_value() {
  value_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageChangeFamilyStabilityNotify::value() const {
  return value_;
}
inline void CMessageChangeFamilyStabilityNotify::set_value(::google::protobuf::uint32 value) {
  _set_bit(6);
  value_ = value;
}

// -------------------------------------------------------------------

// CMessageS2GJoinOnTimeOpenBattleRequest

// optional uint32 BattleID = 1;
inline bool CMessageS2GJoinOnTimeOpenBattleRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2GJoinOnTimeOpenBattleRequest::battleid() const {
  return battleid_;
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageS2GJoinOnTimeOpenBattleRequest::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2GJoinOnTimeOpenBattleRequest::mapid() const {
  return mapid_;
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageS2GJoinOnTimeOpenBattleRequest::has_charid() const {
  return _has_bit(2);
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageS2GJoinOnTimeOpenBattleRequest::charid() const {
  return charid_;
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 PosX = 4;
inline bool CMessageS2GJoinOnTimeOpenBattleRequest::has_posx() const {
  return _has_bit(3);
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageS2GJoinOnTimeOpenBattleRequest::posx() const {
  return posx_;
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool CMessageS2GJoinOnTimeOpenBattleRequest::has_posy() const {
  return _has_bit(4);
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageS2GJoinOnTimeOpenBattleRequest::posy() const {
  return posy_;
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional uint32 Level = 6;
inline bool CMessageS2GJoinOnTimeOpenBattleRequest::has_level() const {
  return _has_bit(5);
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::clear_level() {
  level_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageS2GJoinOnTimeOpenBattleRequest::level() const {
  return level_;
}
inline void CMessageS2GJoinOnTimeOpenBattleRequest::set_level(::google::protobuf::uint32 value) {
  _set_bit(5);
  level_ = value;
}

// -------------------------------------------------------------------

// CMessageSyncGTAndLWNotify

// repeated .GTAndLWInfo GTInfo = 1;
inline int CMessageSyncGTAndLWNotify::gtinfo_size() const {
  return gtinfo_.size();
}
inline void CMessageSyncGTAndLWNotify::clear_gtinfo() {
  gtinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >&
CMessageSyncGTAndLWNotify::gtinfo() const {
  return gtinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >*
CMessageSyncGTAndLWNotify::mutable_gtinfo() {
  return &gtinfo_;
}
inline const ::GTAndLWInfo& CMessageSyncGTAndLWNotify::gtinfo(int index) const {
  return gtinfo_.Get(index);
}
inline ::GTAndLWInfo* CMessageSyncGTAndLWNotify::mutable_gtinfo(int index) {
  return gtinfo_.Mutable(index);
}
inline ::GTAndLWInfo* CMessageSyncGTAndLWNotify::add_gtinfo() {
  return gtinfo_.Add();
}

// repeated .GTAndLWInfo LWInfo = 2;
inline int CMessageSyncGTAndLWNotify::lwinfo_size() const {
  return lwinfo_.size();
}
inline void CMessageSyncGTAndLWNotify::clear_lwinfo() {
  lwinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >&
CMessageSyncGTAndLWNotify::lwinfo() const {
  return lwinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >*
CMessageSyncGTAndLWNotify::mutable_lwinfo() {
  return &lwinfo_;
}
inline const ::GTAndLWInfo& CMessageSyncGTAndLWNotify::lwinfo(int index) const {
  return lwinfo_.Get(index);
}
inline ::GTAndLWInfo* CMessageSyncGTAndLWNotify::mutable_lwinfo(int index) {
  return lwinfo_.Mutable(index);
}
inline ::GTAndLWInfo* CMessageSyncGTAndLWNotify::add_lwinfo() {
  return lwinfo_.Add();
}

// -------------------------------------------------------------------

// CMessageS2GBattleClose

// optional uint32 BattleID = 1;
inline bool CMessageS2GBattleClose::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageS2GBattleClose::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2GBattleClose::battleid() const {
  return battleid_;
}
inline void CMessageS2GBattleClose::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageS2GBattleClose::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageS2GBattleClose::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2GBattleClose::mapid() const {
  return mapid_;
}
inline void CMessageS2GBattleClose::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageS2GIntoCorpsBossRepetion

// optional uint32 BattleID = 1;
inline bool CMessageS2GIntoCorpsBossRepetion::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageS2GIntoCorpsBossRepetion::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2GIntoCorpsBossRepetion::battleid() const {
  return battleid_;
}
inline void CMessageS2GIntoCorpsBossRepetion::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageS2GIntoCorpsBossRepetion::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageS2GIntoCorpsBossRepetion::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2GIntoCorpsBossRepetion::mapid() const {
  return mapid_;
}
inline void CMessageS2GIntoCorpsBossRepetion::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageS2GIntoCorpsBossRepetion::has_charid() const {
  return _has_bit(2);
}
inline void CMessageS2GIntoCorpsBossRepetion::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageS2GIntoCorpsBossRepetion::charid() const {
  return charid_;
}
inline void CMessageS2GIntoCorpsBossRepetion::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 CorpsID = 4;
inline bool CMessageS2GIntoCorpsBossRepetion::has_corpsid() const {
  return _has_bit(3);
}
inline void CMessageS2GIntoCorpsBossRepetion::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageS2GIntoCorpsBossRepetion::corpsid() const {
  return corpsid_;
}
inline void CMessageS2GIntoCorpsBossRepetion::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  corpsid_ = value;
}

// optional uint32 PostX = 5;
inline bool CMessageS2GIntoCorpsBossRepetion::has_postx() const {
  return _has_bit(4);
}
inline void CMessageS2GIntoCorpsBossRepetion::clear_postx() {
  postx_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageS2GIntoCorpsBossRepetion::postx() const {
  return postx_;
}
inline void CMessageS2GIntoCorpsBossRepetion::set_postx(::google::protobuf::uint32 value) {
  _set_bit(4);
  postx_ = value;
}

// optional uint32 PostY = 6;
inline bool CMessageS2GIntoCorpsBossRepetion::has_posty() const {
  return _has_bit(5);
}
inline void CMessageS2GIntoCorpsBossRepetion::clear_posty() {
  posty_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageS2GIntoCorpsBossRepetion::posty() const {
  return posty_;
}
inline void CMessageS2GIntoCorpsBossRepetion::set_posty(::google::protobuf::uint32 value) {
  _set_bit(5);
  posty_ = value;
}

// -------------------------------------------------------------------

// CMessgeS2GEndCorpsBossRepetion

// optional uint32 BattleID = 1;
inline bool CMessgeS2GEndCorpsBossRepetion::has_battleid() const {
  return _has_bit(0);
}
inline void CMessgeS2GEndCorpsBossRepetion::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessgeS2GEndCorpsBossRepetion::battleid() const {
  return battleid_;
}
inline void CMessgeS2GEndCorpsBossRepetion::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessgeS2GEndCorpsBossRepetion::has_mapid() const {
  return _has_bit(1);
}
inline void CMessgeS2GEndCorpsBossRepetion::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessgeS2GEndCorpsBossRepetion::mapid() const {
  return mapid_;
}
inline void CMessgeS2GEndCorpsBossRepetion::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 CorpsID = 3;
inline bool CMessgeS2GEndCorpsBossRepetion::has_corpsid() const {
  return _has_bit(2);
}
inline void CMessgeS2GEndCorpsBossRepetion::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessgeS2GEndCorpsBossRepetion::corpsid() const {
  return corpsid_;
}
inline void CMessgeS2GEndCorpsBossRepetion::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  corpsid_ = value;
}

// -------------------------------------------------------------------

// PBGroupTasks

// optional uint32 TaskID = 1;
inline bool PBGroupTasks::has_taskid() const {
  return _has_bit(0);
}
inline void PBGroupTasks::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBGroupTasks::taskid() const {
  return taskid_;
}
inline void PBGroupTasks::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 TaskState = 2;
inline bool PBGroupTasks::has_taskstate() const {
  return _has_bit(1);
}
inline void PBGroupTasks::clear_taskstate() {
  taskstate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBGroupTasks::taskstate() const {
  return taskstate_;
}
inline void PBGroupTasks::set_taskstate(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskstate_ = value;
}

// -------------------------------------------------------------------

// CMessageGateCheckGroupPublishRequest

// optional uint32 CharID = 1;
inline bool CMessageGateCheckGroupPublishRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGateCheckGroupPublishRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGateCheckGroupPublishRequest::charid() const {
  return charid_;
}
inline void CMessageGateCheckGroupPublishRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 PublishType = 2;
inline bool CMessageGateCheckGroupPublishRequest::has_publishtype() const {
  return _has_bit(1);
}
inline void CMessageGateCheckGroupPublishRequest::clear_publishtype() {
  publishtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGateCheckGroupPublishRequest::publishtype() const {
  return publishtype_;
}
inline void CMessageGateCheckGroupPublishRequest::set_publishtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  publishtype_ = value;
}

// -------------------------------------------------------------------

// CMessageGatePublishGroupRequest

// optional uint32 CharID = 1;
inline bool CMessageGatePublishGroupRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGatePublishGroupRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupRequest::charid() const {
  return charid_;
}
inline void CMessageGatePublishGroupRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 TaskID = 2;
inline bool CMessageGatePublishGroupRequest::has_taskid() const {
  return _has_bit(1);
}
inline void CMessageGatePublishGroupRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupRequest::taskid() const {
  return taskid_;
}
inline void CMessageGatePublishGroupRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskid_ = value;
}

// optional uint32 PublishType = 3;
inline bool CMessageGatePublishGroupRequest::has_publishtype() const {
  return _has_bit(2);
}
inline void CMessageGatePublishGroupRequest::clear_publishtype() {
  publishtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupRequest::publishtype() const {
  return publishtype_;
}
inline void CMessageGatePublishGroupRequest::set_publishtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  publishtype_ = value;
}

// optional uint32 TaskState = 4;
inline bool CMessageGatePublishGroupRequest::has_taskstate() const {
  return _has_bit(3);
}
inline void CMessageGatePublishGroupRequest::clear_taskstate() {
  taskstate_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupRequest::taskstate() const {
  return taskstate_;
}
inline void CMessageGatePublishGroupRequest::set_taskstate(::google::protobuf::uint32 value) {
  _set_bit(3);
  taskstate_ = value;
}

// optional uint32 PayGroupMoney = 5;
inline bool CMessageGatePublishGroupRequest::has_paygroupmoney() const {
  return _has_bit(4);
}
inline void CMessageGatePublishGroupRequest::clear_paygroupmoney() {
  paygroupmoney_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupRequest::paygroupmoney() const {
  return paygroupmoney_;
}
inline void CMessageGatePublishGroupRequest::set_paygroupmoney(::google::protobuf::uint32 value) {
  _set_bit(4);
  paygroupmoney_ = value;
}

// -------------------------------------------------------------------

// PBGroupInfo

// optional uint32 GroupID = 1;
inline bool PBGroupInfo::has_groupid() const {
  return _has_bit(0);
}
inline void PBGroupInfo::clear_groupid() {
  groupid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBGroupInfo::groupid() const {
  return groupid_;
}
inline void PBGroupInfo::set_groupid(::google::protobuf::uint32 value) {
  _set_bit(0);
  groupid_ = value;
}

// optional uint32 GroupLevel = 2;
inline bool PBGroupInfo::has_grouplevel() const {
  return _has_bit(1);
}
inline void PBGroupInfo::clear_grouplevel() {
  grouplevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBGroupInfo::grouplevel() const {
  return grouplevel_;
}
inline void PBGroupInfo::set_grouplevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  grouplevel_ = value;
}

// optional uint32 GroupMoney = 3;
inline bool PBGroupInfo::has_groupmoney() const {
  return _has_bit(2);
}
inline void PBGroupInfo::clear_groupmoney() {
  groupmoney_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBGroupInfo::groupmoney() const {
  return groupmoney_;
}
inline void PBGroupInfo::set_groupmoney(::google::protobuf::uint32 value) {
  _set_bit(2);
  groupmoney_ = value;
}

// optional uint32 PlayerPosition = 4;
inline bool PBGroupInfo::has_playerposition() const {
  return _has_bit(3);
}
inline void PBGroupInfo::clear_playerposition() {
  playerposition_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBGroupInfo::playerposition() const {
  return playerposition_;
}
inline void PBGroupInfo::set_playerposition(::google::protobuf::uint32 value) {
  _set_bit(3);
  playerposition_ = value;
}

// -------------------------------------------------------------------

// CMessageGateCheckGroupPublishResponse

// optional uint32 CharID = 1;
inline bool CMessageGateCheckGroupPublishResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGateCheckGroupPublishResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGateCheckGroupPublishResponse::charid() const {
  return charid_;
}
inline void CMessageGateCheckGroupPublishResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 PublishType = 2;
inline bool CMessageGateCheckGroupPublishResponse::has_publishtype() const {
  return _has_bit(1);
}
inline void CMessageGateCheckGroupPublishResponse::clear_publishtype() {
  publishtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGateCheckGroupPublishResponse::publishtype() const {
  return publishtype_;
}
inline void CMessageGateCheckGroupPublishResponse::set_publishtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  publishtype_ = value;
}

// repeated .PBGroupTasks Tasks = 3;
inline int CMessageGateCheckGroupPublishResponse::tasks_size() const {
  return tasks_.size();
}
inline void CMessageGateCheckGroupPublishResponse::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGroupTasks >&
CMessageGateCheckGroupPublishResponse::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBGroupTasks >*
CMessageGateCheckGroupPublishResponse::mutable_tasks() {
  return &tasks_;
}
inline const ::PBGroupTasks& CMessageGateCheckGroupPublishResponse::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::PBGroupTasks* CMessageGateCheckGroupPublishResponse::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::PBGroupTasks* CMessageGateCheckGroupPublishResponse::add_tasks() {
  return tasks_.Add();
}

// optional .PBGroupInfo GroupInfo = 4;
inline bool CMessageGateCheckGroupPublishResponse::has_groupinfo() const {
  return _has_bit(3);
}
inline void CMessageGateCheckGroupPublishResponse::clear_groupinfo() {
  if (groupinfo_ != NULL) groupinfo_->::PBGroupInfo::Clear();
  _clear_bit(3);
}
inline const ::PBGroupInfo& CMessageGateCheckGroupPublishResponse::groupinfo() const {
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::PBGroupInfo* CMessageGateCheckGroupPublishResponse::mutable_groupinfo() {
  _set_bit(3);
  if (groupinfo_ == NULL) groupinfo_ = new ::PBGroupInfo;
  return groupinfo_;
}

// optional uint32 Result = 5;
inline bool CMessageGateCheckGroupPublishResponse::has_result() const {
  return _has_bit(4);
}
inline void CMessageGateCheckGroupPublishResponse::clear_result() {
  result_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGateCheckGroupPublishResponse::result() const {
  return result_;
}
inline void CMessageGateCheckGroupPublishResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(4);
  result_ = value;
}

// -------------------------------------------------------------------

// CMessageGatePublishGroupResponse

// optional uint32 CharID = 1;
inline bool CMessageGatePublishGroupResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGatePublishGroupResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupResponse::charid() const {
  return charid_;
}
inline void CMessageGatePublishGroupResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 TaskID = 2;
inline bool CMessageGatePublishGroupResponse::has_taskid() const {
  return _has_bit(1);
}
inline void CMessageGatePublishGroupResponse::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupResponse::taskid() const {
  return taskid_;
}
inline void CMessageGatePublishGroupResponse::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskid_ = value;
}

// optional uint32 PublishType = 3;
inline bool CMessageGatePublishGroupResponse::has_publishtype() const {
  return _has_bit(2);
}
inline void CMessageGatePublishGroupResponse::clear_publishtype() {
  publishtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupResponse::publishtype() const {
  return publishtype_;
}
inline void CMessageGatePublishGroupResponse::set_publishtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  publishtype_ = value;
}

// optional uint32 TaskState = 4;
inline bool CMessageGatePublishGroupResponse::has_taskstate() const {
  return _has_bit(3);
}
inline void CMessageGatePublishGroupResponse::clear_taskstate() {
  taskstate_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupResponse::taskstate() const {
  return taskstate_;
}
inline void CMessageGatePublishGroupResponse::set_taskstate(::google::protobuf::uint32 value) {
  _set_bit(3);
  taskstate_ = value;
}

// optional uint32 TaskAcion = 5;
inline bool CMessageGatePublishGroupResponse::has_taskacion() const {
  return _has_bit(4);
}
inline void CMessageGatePublishGroupResponse::clear_taskacion() {
  taskacion_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupResponse::taskacion() const {
  return taskacion_;
}
inline void CMessageGatePublishGroupResponse::set_taskacion(::google::protobuf::uint32 value) {
  _set_bit(4);
  taskacion_ = value;
}

// optional uint32 Result = 6;
inline bool CMessageGatePublishGroupResponse::has_result() const {
  return _has_bit(5);
}
inline void CMessageGatePublishGroupResponse::clear_result() {
  result_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageGatePublishGroupResponse::result() const {
  return result_;
}
inline void CMessageGatePublishGroupResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(5);
  result_ = value;
}

#endif  // PROTOBUF_servermessage_5fpb_2ehxx__INCLUDED
