// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_gmmessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_gmmessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "property_pb.hxx.pb.h"
#include "db_msg_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();

class CGMMessageKickRoleCmd;
class CGMMessageCmdNormalResult;
class CGMMessageRoleDetailCmd;
class PBRoleInfo;
class CGMMessageRoleDetailResult;
class CGMMessageUserStorageInfoCmd;
class CGMMessageUserStorageInfoResult;
class CGMMessageRoleLocationCmd;
class CGMMessageRoleLocationResult;
class CGMMessageUserLevelInfoCmd;
class PBRoleUpgradeInfo;
class CGMMessageUserLevelInfoResult;
class CGMMessageUserSocialInfoCmd;
class CGMMessageUserSocialInfoResult;
class CGMMessageGoodsHistoryToNPCCmd;
class PBItemExchange2Npc;
class CGMMessageGoodsHistoryToNPCResult;
class CGMMessageGoodsHistoryFromNPCCmd;
class CGMMessageGoodsHistoryFromNPCResult;
class CGMMessageGoodsHistoryBetweenUsersCmd;
class PBItemExchange2Player;
class CGMMessageGoodsHistoryBetweenUsersResult;
class CGMMessageGoodsHistoryCmd;
class PBItemAction;
class CGMMessageGoodsHistoryResult;
class CGMMessagePetHistoryCmd;
class PBPetHistory;
class CGMMessagePetHistoryResult;
class CGMMessageOperationDetailCmd;
class CGMMessageNPCDetailCmd;
class PBNPCDetail;
class CGMMessageNPCDetailResult;
class CGMMessageGoodsDropLogCmd;
class PBGoodsDropLog;
class CGMMessageGoodsDropLogResult;
class CGMMessageTaskInfoCmd;
class PBTaskInfo;
class CGMMessageTaskInfoResult;
class CGMMessageLoginInfoCmd;
class PBLoginInfo;
class CGMMessageLoginInfoResult;
class CGMMessageShutUpCmd;
class CGMMessageCancelShutUpCmd;
class CGMMessageFreezeAccountCmd;
class CGMMessageFreezeAccountBatCmd;
class CGMMessageUnFreezeAccountCmd;
class CGMMessageTrusteeUserCmd;
class CGMMessageUnTrusteeUserCmd;
class CGMMessageMoveRoleCmd;
class CGMMessageEndTaskCmd;
class CGMMessageTrusteeStorageCmd;
class CGMMessageUnTrusteeStorageCmd;
class CGMMessageRecoverRoleCmd;
class CGMMessagePostBulletinCmd;
class CGMMessageMultiExpCmd;
class CGMMessageCancelMultiExpCmd;
class CGMMessageChangeMoneyCmd;
class CGMMessageChangeExpCmd;
class CGMMessageChangeItemCmd;
class CGMMessageDeleteRoleCmd;
class CGMMessageClearBagCmd;
class CGMMessageChangePetCmd;
class CGMMessageSetOLGMAccountCmd;
class CGMMessageIbInfoCmd;
class PBIbItem;
class CGMMessageIbInfoResult;
class CGMMessageSetIbPriceCmd;
class CGMMessageSetIbLocationCmd;
class CGMMessageIbOnSaleCmd;
class CGMMessageIbNotSaleCmd;
class CGMMessageIbDescriptCmd;
class CGMMessageIpBindCmd;
class CGMMessageRoleProtoCmd;
class CGMMessageRoleEquipmentCmd;
class CGMMessageRolePackInfoCmd;
class CGMMessageRoleItemInPackCmd;
class CGMMessageRoleSkillInfoCmd;
class CGMMessageRoleSkillDetailCmd;
class CGMMessageRoleEquipmentResult;
class CGMMessageRolePackInfoResult;
class CGMMessageRoleItemInPackResult;
class CGMMessageRoleSkillInfoResult;
class CGMMessageRoleSkillDetailResult;
class CMessageActivityListRequest;
class PBActivity;
class CMessageActivityListResponse;
class CMessageUserItemListRequest;
class PBActivityItem;
class CMessageUserItemListResponse;
class CMessageUserItemMinusRequest;
class CMessageUserItemMinusResponse;
class CGMMessageRoleEquipmentDetailCmd;
class CGMMessageRoleStorageDetailCmd;
class CGMMessageRoleEquipmentDetailResult;
class CGMMessageRoleStorageDetailResult;
class PBSubjectAmount;
class CMessageFangChenMiResponse;
class PBFangChenMi;
class CMessageFangChenMiRequest;
class CMessageFCMPlayerListNotify;
class CMessageFCMPlayerResetRequest;
class CMessageChangeGateNotify;
class CMessageResetRolePasswordRequest;
class CMessageResetRolePasswordResponse;
class CGMMessageRoleItemOperatedCmd;
class CGMMessageRoleMoneyOperateCmd;
class CGMMessageRoleExpCmd;
class CGMMessageRoleItemLevelUpCmd;
class CGMMessageFreezeMacCmd;
class CGMMessageUnFreezeMacCmd;
class CGMMessageCorpsTotalCmd;
class CGMMessageCorpsDetailCmd;
class CGMMessageCorpsInfoCmd;
class CGMMessageRoleInfoCmd;
class CGMMsgRoleItemRecoveryCmd;
class CMessageOfflineSysMailNotify;
class CGMMessageSqlQueryResult;
class CGMMessageUserInfoByIPCmd;
class PlayerInfo;
class IPInfo;
class CGMMsgUserInfoByIPResult;
class CGMMessageQueryRoleMailCmd;

enum EMGMCmdMessageID {
  ID_G2M_CMDNORMAL_RESULT = 49152,
  ID_M2G_KICKROLE_CMD = 49153,
  ID_M2G_MOVEROLE_CMD = 49154,
  ID_M2G_SHUTUP_CMD = 49155,
  ID_M2G_CANCLESHUTUP_CMD = 49156,
  ID_M2G_FROZENACCOUNT_CMD = 49157,
  ID_M2G_UNFROZENACCOUNT_CMD = 49158,
  ID_M2G_TRUSTEEUSER_CMD = 49159,
  ID_M2G_UNTRUSTEEUSER_CMD = 49160,
  ID_M2G_ENDTASK_CMD = 49161,
  ID_M2G_TRUSTEESTORAGE_CMD = 49162,
  ID_M2G_UNTRUSTEESTORAGE_CMD = 49163,
  ID_M2G_RECOVERROLE_CMD = 49164,
  ID_M2G_POSTBULLETIN_CMD = 49165,
  ID_M2G_MULTIEXP_CMD = 49166,
  ID_M2G_CANCELMULTIEXP_CMD = 49167,
  ID_M2G_CHANGEMONEY_CMD = 49168,
  ID_M2G_CHANGEEXP_CMD = 49169,
  ID_M2G_CHANGEITEM_CMD = 49170,
  ID_M2G_DELETEROLE_CMD = 49171,
  ID_M2G_CLEARBAG_CMD = 49172,
  ID_M2G_USERSOCIALINFO_CMD = 49173,
  ID_G2M_USERSOCIALINFO_RESULT = 49174,
  ID_M2G_ROLEDETAIL_CMD = 49184,
  ID_G2M_ROLEDETAIL_RESULT = 49185,
  ID_M2G_USERSTORAGEINFO_CMD = 49186,
  ID_G2M_USERSTORAGEINFO_RESULT = 49187,
  ID_M2G_ROLELOCATION_CMD = 49188,
  ID_G2M_ROLELOCATION_RESULT = 49189,
  ID_M2G_USERLEVELINFO_CMD = 49190,
  ID_G2M_USERLEVELINFO_RESULT = 49191,
  ID_M2G_GOODSHISTORYTONPC_CMD = 49192,
  ID_G2M_GOODSHISTORYTONPC_RESULT = 49193,
  ID_M2G_GOODSHISTORYFROMNPC_CMD = 49194,
  ID_G2M_GOODSHISTORYFROMNPC_RESULT = 49195,
  ID_M2G_GOODSHISTORYBETWEENUSERS_CMD = 49196,
  ID_G2M_GOODSHISTORYBETWEENUSERS_RESULT = 49197,
  ID_M2G_GOODSHISTORY_CMD = 49198,
  ID_G2M_GOODSHISTORY_RESULT = 49199,
  ID_M2G_PETHISTORY_CMD = 49200,
  ID_G2M_PETHISTORY_RESULT = 49201,
  ID_M2G_OPERATIONDETAIL_CMD = 49202,
  ID_G2M_OPERATIONDETAIL_RESULT = 49203,
  ID_M2G_NPCDETAIL_CMD = 49204,
  ID_G2M_NPCDETAIL_RESULT = 49205,
  ID_M2G_GOODSDROPLOG_CMD = 49206,
  ID_G2M_GOODSDROPLOG_RESULT = 49207,
  ID_M2G_TASKINFO_CMD = 49208,
  ID_G2M_TASKINFO_RESULT = 49209,
  ID_M2G_LOGININFO_CMD = 49210,
  ID_G2M_LOGININFO_RESULT = 49211,
  ID_M2G_ONLINETIME_CMD = 49212,
  ID_G2M_ONLINETIME_RESULT = 49213,
  ID_M2G_IPINFO_CMD = 49214,
  ID_G2M_IPINFO_RESULT = 49215,
  ID_M2G_USERINFOBYIP_CMD = 49216,
  ID_G2M_USERINFOBYIP_RESULT = 49217,
  ID_M2G_ATTRCHANGEHISTORY_CMD = 49218,
  ID_G2M_ATTRCHANGEHISTORY_RESULT = 49219,
  ID_M2G_ROLEPROTO_CMD = 49220,
  ID_M2G_IBINFO_CMD = 49221,
  ID_M2G_SETIBPRICE_CMD = 49222,
  ID_M2G_SETIBLOCATION_CMD = 49223,
  ID_M2G_IBONSALE_CMD = 49224,
  ID_M2G_IBNOTSALE_CMD = 49225,
  ID_M2G_IBDESCRIPT_CMD = 49226,
  ID_M2G_IPBIND_CMD = 49227,
  ID_M2G_ROLEEQUIPMENT_CMD = 49228,
  ID_M2G_ROLEPACKINFO_CMD = 49229,
  ID_M2G_ROLEITEMINPACK_CMD = 49230,
  ID_M2G_ROLESKILLINFO_CMD = 49231,
  ID_M2G_ROLESKILLDETAIL_CMD = 49232,
  ID_G2M_ROLEEQUIPMENT_RESULT = 49233,
  ID_G2M_ROLEPACKINFO_RESULT = 49234,
  ID_G2M_ROLEITEMINPACK_RESULT = 49235,
  ID_G2M_ROLESKILLINFO_RESULT = 49236,
  ID_G2M_ROLESKILLDETAIL_RESULT = 49237,
  ID_G2M_IBINFO_RESULT = 49238,
  ID_M2G_ROLEEQUIPMENT_DETAIL_CMD = 49240,
  ID_M2G_ROLESTORAGE_DETAIL_CMD = 49241,
  ID_G2M_ROLEEQUIPMENT_DETAIL_RESULT = 49242,
  ID_G2M_ROLESTORAGE_DETAIL_RESULT = 49243,
  ID_S2E_USERITEMLIST_REQUEST = 49248,
  ID_E2S_USERITEMLIST_RESPONSE = 49249,
  ID_S2E_USERITEMMINUS_REQUEST = 49250,
  ID_E2S_USERITEMMINUS_RESPONSE = 49251,
  ID_S2E_ACTIVITYLIST_REQUEST = 49252,
  ID_E2S_ACTIVITYLIST_RESPONSE = 49253,
  ID_M2G_USER_CHARGE_NOTICE = 51302,
  ID_S2G_FANGCHENMI_REQUEST = 49255,
  ID_G2S_FANGCHENMI_RESPONSE = 49256,
  ID_G2S_FCMPLAYERLIST_NOTIFY = 49257,
  ID_G2S_FCMPLAYERRESET_NOTIFY = 49258,
  ID_S2G_FCMPLAYERRESET_REQUEST = 49262,
  ID_S2G_CHANGEGATE_NOTIFY = 49259,
  ID_S2G_REQUEST_RESETROLEPASSWORD = 49260,
  ID_G2S_RESPONSE_RESETROLEPASSWORD = 49261,
  ID_M2G_REQUEST_ROLEITEMOPERATE = 49264,
  ID_M2G_ROLEMONEYOPERATE = 49265,
  ID_M2G_REQUEST_ROLEEXP = 49266,
  ID_M2G_REQUEST_ROLEITEMLEVELUP = 49267,
  ID_M2G_FROZENMAC_CMD = 49269,
  ID_M2G_UNFROZENMAC_CMD = 49270,
  ID_M2G_REQUEST_FASTFREEZE_CMD = 49271,
  ID_M2G_REQUEST_UNFASTFREEZE_CMD = 49272,
  ID_M2G_REQUEST_CORPSTOTAL_CMD = 49273,
  ID_M2G_REQUEST_CORPSDETAIL_CMD = 49274,
  ID_M2G_REQUEST_CORPSINFO_CMD = 49275,
  ID_M2G_REQUEST_ROLEINFO_CMD = 49276,
  ID_S2G_NOTIFY_OFFLINEMAIL = 49277,
  ID_M2G_ROLE_ITEM_RECOVERY_CMD = 49278,
  ID_G2M_SQL_QUERY_RESULT = 49279,
  ID_M2G_QUERY_ROLE_MAIL_CMD = 49280,
  ID_M2G_FINISHED_TASKINFO_CMD = 49281,
  ID_M2G_QUERY_ROLETITLE_CMD = 49282
};
const ::google::protobuf::EnumDescriptor* EMGMCmdMessageID_descriptor();
bool EMGMCmdMessageID_IsValid(int value);
const EMGMCmdMessageID EMGMCmdMessageID_MIN = ID_G2M_CMDNORMAL_RESULT;
const EMGMCmdMessageID EMGMCmdMessageID_MAX = ID_M2G_USER_CHARGE_NOTICE;

inline const ::std::string& EMGMCmdMessageID_Name(EMGMCmdMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMGMCmdMessageID_descriptor(), value);
}
inline bool EMGMCmdMessageID_Parse(
    const ::std::string& name, EMGMCmdMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMGMCmdMessageID>(
    EMGMCmdMessageID_descriptor(), name, value);
}
// ===================================================================

class CGMMessageKickRoleCmd : public ::google::protobuf::Message {
 public:
  CGMMessageKickRoleCmd();
  virtual ~CGMMessageKickRoleCmd();
  
  CGMMessageKickRoleCmd(const CGMMessageKickRoleCmd& from);
  
  inline CGMMessageKickRoleCmd& operator=(const CGMMessageKickRoleCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageKickRoleCmd& default_instance();
  void Swap(CGMMessageKickRoleCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageKickRoleCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageKickRoleCmd& from);
  void MergeFrom(const CGMMessageKickRoleCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageKickRoleCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageCmdNormalResult : public ::google::protobuf::Message {
 public:
  CGMMessageCmdNormalResult();
  virtual ~CGMMessageCmdNormalResult();
  
  CGMMessageCmdNormalResult(const CGMMessageCmdNormalResult& from);
  
  inline CGMMessageCmdNormalResult& operator=(const CGMMessageCmdNormalResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageCmdNormalResult& default_instance();
  void Swap(CGMMessageCmdNormalResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageCmdNormalResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageCmdNormalResult& from);
  void MergeFrom(const CGMMessageCmdNormalResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageCmdNormalResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleDetailCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleDetailCmd();
  virtual ~CGMMessageRoleDetailCmd();
  
  CGMMessageRoleDetailCmd(const CGMMessageRoleDetailCmd& from);
  
  inline CGMMessageRoleDetailCmd& operator=(const CGMMessageRoleDetailCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleDetailCmd& default_instance();
  void Swap(CGMMessageRoleDetailCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleDetailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleDetailCmd& from);
  void MergeFrom(const CGMMessageRoleDetailCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleDetailCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBRoleInfo : public ::google::protobuf::Message {
 public:
  PBRoleInfo();
  virtual ~PBRoleInfo();
  
  PBRoleInfo(const PBRoleInfo& from);
  
  inline PBRoleInfo& operator=(const PBRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleInfo& default_instance();
  void Swap(PBRoleInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRoleInfo& from);
  void MergeFrom(const PBRoleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 role_status = 2;
  inline bool has_role_status() const;
  inline void clear_role_status();
  static const int kRoleStatusFieldNumber = 2;
  inline ::google::protobuf::int32 role_status() const;
  inline void set_role_status(::google::protobuf::int32 value);
  
  // optional int32 account_id = 3;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::int32 account_id() const;
  inline void set_account_id(::google::protobuf::int32 value);
  
  // optional string role_name = 4;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 4;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  
  // optional int32 is_alive = 5;
  inline bool has_is_alive() const;
  inline void clear_is_alive();
  static const int kIsAliveFieldNumber = 5;
  inline ::google::protobuf::int32 is_alive() const;
  inline void set_is_alive(::google::protobuf::int32 value);
  
  // optional int32 gender_id = 6;
  inline bool has_gender_id() const;
  inline void clear_gender_id();
  static const int kGenderIdFieldNumber = 6;
  inline ::google::protobuf::int32 gender_id() const;
  inline void set_gender_id(::google::protobuf::int32 value);
  
  // optional int32 metier_id = 7;
  inline bool has_metier_id() const;
  inline void clear_metier_id();
  static const int kMetierIdFieldNumber = 7;
  inline ::google::protobuf::int32 metier_id() const;
  inline void set_metier_id(::google::protobuf::int32 value);
  
  // optional int32 nationality_id = 8;
  inline bool has_nationality_id() const;
  inline void clear_nationality_id();
  static const int kNationalityIdFieldNumber = 8;
  inline ::google::protobuf::int32 nationality_id() const;
  inline void set_nationality_id(::google::protobuf::int32 value);
  
  // optional int32 face_type = 9;
  inline bool has_face_type() const;
  inline void clear_face_type();
  static const int kFaceTypeFieldNumber = 9;
  inline ::google::protobuf::int32 face_type() const;
  inline void set_face_type(::google::protobuf::int32 value);
  
  // optional int32 line_id = 10;
  inline bool has_line_id() const;
  inline void clear_line_id();
  static const int kLineIdFieldNumber = 10;
  inline ::google::protobuf::int32 line_id() const;
  inline void set_line_id(::google::protobuf::int32 value);
  
  // optional int32 map_id = 11;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 11;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);
  
  // optional int32 pos_x = 12;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 12;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);
  
  // optional int32 pos_y = 13;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 13;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);
  
  // optional int32 role_level = 14;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 14;
  inline ::google::protobuf::int32 role_level() const;
  inline void set_role_level(::google::protobuf::int32 value);
  
  // optional int64 role_expr = 15;
  inline bool has_role_expr() const;
  inline void clear_role_expr();
  static const int kRoleExprFieldNumber = 15;
  inline ::google::protobuf::int64 role_expr() const;
  inline void set_role_expr(::google::protobuf::int64 value);
  
  // optional int32 role_money = 16;
  inline bool has_role_money() const;
  inline void clear_role_money();
  static const int kRoleMoneyFieldNumber = 16;
  inline ::google::protobuf::int32 role_money() const;
  inline void set_role_money(::google::protobuf::int32 value);
  
  // optional int32 bounded_money = 17;
  inline bool has_bounded_money() const;
  inline void clear_bounded_money();
  static const int kBoundedMoneyFieldNumber = 17;
  inline ::google::protobuf::int32 bounded_money() const;
  inline void set_bounded_money(::google::protobuf::int32 value);
  
  // optional int32 login_time = 18;
  inline bool has_login_time() const;
  inline void clear_login_time();
  static const int kLoginTimeFieldNumber = 18;
  inline ::google::protobuf::int32 login_time() const;
  inline void set_login_time(::google::protobuf::int32 value);
  
  // optional int32 online_duration = 19;
  inline bool has_online_duration() const;
  inline void clear_online_duration();
  static const int kOnlineDurationFieldNumber = 19;
  inline ::google::protobuf::int32 online_duration() const;
  inline void set_online_duration(::google::protobuf::int32 value);
  
  // optional int32 update_time = 20;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 20;
  inline ::google::protobuf::int32 update_time() const;
  inline void set_update_time(::google::protobuf::int32 value);
  
  // optional int32 create_time = 21;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 21;
  inline ::google::protobuf::int32 create_time() const;
  inline void set_create_time(::google::protobuf::int32 value);
  
  // optional .PBProperty proto = 22;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 22;
  inline const ::PBProperty& proto() const;
  inline ::PBProperty* mutable_proto();
  
  // optional string login_ip = 23;
  inline bool has_login_ip() const;
  inline void clear_login_ip();
  static const int kLoginIpFieldNumber = 23;
  inline const ::std::string& login_ip() const;
  inline void set_login_ip(const ::std::string& value);
  inline void set_login_ip(const char* value);
  inline void set_login_ip(const char* value, size_t size);
  inline ::std::string* mutable_login_ip();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 role_status_;
  ::google::protobuf::int32 account_id_;
  ::std::string* role_name_;
  static const ::std::string _default_role_name_;
  ::google::protobuf::int32 is_alive_;
  ::google::protobuf::int32 gender_id_;
  ::google::protobuf::int32 metier_id_;
  ::google::protobuf::int32 nationality_id_;
  ::google::protobuf::int32 face_type_;
  ::google::protobuf::int32 line_id_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 role_level_;
  ::google::protobuf::int64 role_expr_;
  ::google::protobuf::int32 role_money_;
  ::google::protobuf::int32 bounded_money_;
  ::google::protobuf::int32 login_time_;
  ::google::protobuf::int32 online_duration_;
  ::google::protobuf::int32 update_time_;
  ::google::protobuf::int32 create_time_;
  ::PBProperty* proto_;
  ::std::string* login_ip_;
  static const ::std::string _default_login_ip_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleDetailResult : public ::google::protobuf::Message {
 public:
  CGMMessageRoleDetailResult();
  virtual ~CGMMessageRoleDetailResult();
  
  CGMMessageRoleDetailResult(const CGMMessageRoleDetailResult& from);
  
  inline CGMMessageRoleDetailResult& operator=(const CGMMessageRoleDetailResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleDetailResult& default_instance();
  void Swap(CGMMessageRoleDetailResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleDetailResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleDetailResult& from);
  void MergeFrom(const CGMMessageRoleDetailResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBRoleInfo proto = 3;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 3;
  inline const ::PBRoleInfo& proto() const;
  inline ::PBRoleInfo* mutable_proto();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBRoleInfo* proto_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleDetailResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUserStorageInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageUserStorageInfoCmd();
  virtual ~CGMMessageUserStorageInfoCmd();
  
  CGMMessageUserStorageInfoCmd(const CGMMessageUserStorageInfoCmd& from);
  
  inline CGMMessageUserStorageInfoCmd& operator=(const CGMMessageUserStorageInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUserStorageInfoCmd& default_instance();
  void Swap(CGMMessageUserStorageInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUserStorageInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUserStorageInfoCmd& from);
  void MergeFrom(const CGMMessageUserStorageInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 page = 4;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 4;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUserStorageInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUserStorageInfoResult : public ::google::protobuf::Message {
 public:
  CGMMessageUserStorageInfoResult();
  virtual ~CGMMessageUserStorageInfoResult();
  
  CGMMessageUserStorageInfoResult(const CGMMessageUserStorageInfoResult& from);
  
  inline CGMMessageUserStorageInfoResult& operator=(const CGMMessageUserStorageInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUserStorageInfoResult& default_instance();
  void Swap(CGMMessageUserStorageInfoResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUserStorageInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUserStorageInfoResult& from);
  void MergeFrom(const CGMMessageUserStorageInfoResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBItemBox items = 3;
  inline bool has_items() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 3;
  inline const ::PBItemBox& items() const;
  inline ::PBItemBox* mutable_items();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBItemBox* items_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUserStorageInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleLocationCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleLocationCmd();
  virtual ~CGMMessageRoleLocationCmd();
  
  CGMMessageRoleLocationCmd(const CGMMessageRoleLocationCmd& from);
  
  inline CGMMessageRoleLocationCmd& operator=(const CGMMessageRoleLocationCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleLocationCmd& default_instance();
  void Swap(CGMMessageRoleLocationCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleLocationCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleLocationCmd& from);
  void MergeFrom(const CGMMessageRoleLocationCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleLocationCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleLocationResult : public ::google::protobuf::Message {
 public:
  CGMMessageRoleLocationResult();
  virtual ~CGMMessageRoleLocationResult();
  
  CGMMessageRoleLocationResult(const CGMMessageRoleLocationResult& from);
  
  inline CGMMessageRoleLocationResult& operator=(const CGMMessageRoleLocationResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleLocationResult& default_instance();
  void Swap(CGMMessageRoleLocationResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleLocationResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleLocationResult& from);
  void MergeFrom(const CGMMessageRoleLocationResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 line_id = 3;
  inline bool has_line_id() const;
  inline void clear_line_id();
  static const int kLineIdFieldNumber = 3;
  inline ::google::protobuf::int32 line_id() const;
  inline void set_line_id(::google::protobuf::int32 value);
  
  // optional int32 map_id = 4;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 4;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);
  
  // optional int32 x = 5;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 5;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 y = 6;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 6;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // optional int32 role_id = 7;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 7;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 line_id_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleLocationResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUserLevelInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageUserLevelInfoCmd();
  virtual ~CGMMessageUserLevelInfoCmd();
  
  CGMMessageUserLevelInfoCmd(const CGMMessageUserLevelInfoCmd& from);
  
  inline CGMMessageUserLevelInfoCmd& operator=(const CGMMessageUserLevelInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUserLevelInfoCmd& default_instance();
  void Swap(CGMMessageUserLevelInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUserLevelInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUserLevelInfoCmd& from);
  void MergeFrom(const CGMMessageUserLevelInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional string start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUserLevelInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBRoleUpgradeInfo : public ::google::protobuf::Message {
 public:
  PBRoleUpgradeInfo();
  virtual ~PBRoleUpgradeInfo();
  
  PBRoleUpgradeInfo(const PBRoleUpgradeInfo& from);
  
  inline PBRoleUpgradeInfo& operator=(const PBRoleUpgradeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRoleUpgradeInfo& default_instance();
  void Swap(PBRoleUpgradeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBRoleUpgradeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRoleUpgradeInfo& from);
  void MergeFrom(const PBRoleUpgradeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 up_period = 2;
  inline bool has_up_period() const;
  inline void clear_up_period();
  static const int kUpPeriodFieldNumber = 2;
  inline ::google::protobuf::int32 up_period() const;
  inline void set_up_period(::google::protobuf::int32 value);
  
  // optional int32 up_time = 3;
  inline bool has_up_time() const;
  inline void clear_up_time();
  static const int kUpTimeFieldNumber = 3;
  inline ::google::protobuf::int32 up_time() const;
  inline void set_up_time(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 up_period_;
  ::google::protobuf::int32 up_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRoleUpgradeInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUserLevelInfoResult : public ::google::protobuf::Message {
 public:
  CGMMessageUserLevelInfoResult();
  virtual ~CGMMessageUserLevelInfoResult();
  
  CGMMessageUserLevelInfoResult(const CGMMessageUserLevelInfoResult& from);
  
  inline CGMMessageUserLevelInfoResult& operator=(const CGMMessageUserLevelInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUserLevelInfoResult& default_instance();
  void Swap(CGMMessageUserLevelInfoResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUserLevelInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUserLevelInfoResult& from);
  void MergeFrom(const CGMMessageUserLevelInfoResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBRoleUpgradeInfo role_upgrade_info = 3;
  inline int role_upgrade_info_size() const;
  inline void clear_role_upgrade_info();
  static const int kRoleUpgradeInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRoleUpgradeInfo >& role_upgrade_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRoleUpgradeInfo >* mutable_role_upgrade_info();
  inline const ::PBRoleUpgradeInfo& role_upgrade_info(int index) const;
  inline ::PBRoleUpgradeInfo* mutable_role_upgrade_info(int index);
  inline ::PBRoleUpgradeInfo* add_role_upgrade_info();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBRoleUpgradeInfo > role_upgrade_info_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUserLevelInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUserSocialInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageUserSocialInfoCmd();
  virtual ~CGMMessageUserSocialInfoCmd();
  
  CGMMessageUserSocialInfoCmd(const CGMMessageUserSocialInfoCmd& from);
  
  inline CGMMessageUserSocialInfoCmd& operator=(const CGMMessageUserSocialInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUserSocialInfoCmd& default_instance();
  void Swap(CGMMessageUserSocialInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUserSocialInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUserSocialInfoCmd& from);
  void MergeFrom(const CGMMessageUserSocialInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUserSocialInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUserSocialInfoResult : public ::google::protobuf::Message {
 public:
  CGMMessageUserSocialInfoResult();
  virtual ~CGMMessageUserSocialInfoResult();
  
  CGMMessageUserSocialInfoResult(const CGMMessageUserSocialInfoResult& from);
  
  inline CGMMessageUserSocialInfoResult& operator=(const CGMMessageUserSocialInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUserSocialInfoResult& default_instance();
  void Swap(CGMMessageUserSocialInfoResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUserSocialInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUserSocialInfoResult& from);
  void MergeFrom(const CGMMessageUserSocialInfoResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBFriend friends = 3;
  inline bool has_friends() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 3;
  inline const ::PBFriend& friends() const;
  inline ::PBFriend* mutable_friends();
  
  // optional string familyname = 4;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilynameFieldNumber = 4;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
  // optional string corpsname = 5;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsnameFieldNumber = 5;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 spouseid = 6;
  inline bool has_spouseid() const;
  inline void clear_spouseid();
  static const int kSpouseidFieldNumber = 6;
  inline ::google::protobuf::uint32 spouseid() const;
  inline void set_spouseid(::google::protobuf::uint32 value);
  
  // optional uint32 WeddingModule = 7;
  inline bool has_weddingmodule() const;
  inline void clear_weddingmodule();
  static const int kWeddingModuleFieldNumber = 7;
  inline ::google::protobuf::uint32 weddingmodule() const;
  inline void set_weddingmodule(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageID = 8;
  inline bool has_marriageid() const;
  inline void clear_marriageid();
  static const int kMarriageIDFieldNumber = 8;
  inline ::google::protobuf::uint32 marriageid() const;
  inline void set_marriageid(::google::protobuf::uint32 value);
  
  // optional string WeddingTime = 9;
  inline bool has_weddingtime() const;
  inline void clear_weddingtime();
  static const int kWeddingTimeFieldNumber = 9;
  inline const ::std::string& weddingtime() const;
  inline void set_weddingtime(const ::std::string& value);
  inline void set_weddingtime(const char* value);
  inline void set_weddingtime(const char* value, size_t size);
  inline ::std::string* mutable_weddingtime();
  
  // optional string MarriageTime = 10;
  inline bool has_marriagetime() const;
  inline void clear_marriagetime();
  static const int kMarriageTimeFieldNumber = 10;
  inline const ::std::string& marriagetime() const;
  inline void set_marriagetime(const ::std::string& value);
  inline void set_marriagetime(const char* value);
  inline void set_marriagetime(const char* value, size_t size);
  inline ::std::string* mutable_marriagetime();
  
  // optional .PBMatrixInfo MatrixInfo = 11;
  inline bool has_matrixinfo() const;
  inline void clear_matrixinfo();
  static const int kMatrixInfoFieldNumber = 11;
  inline const ::PBMatrixInfo& matrixinfo() const;
  inline ::PBMatrixInfo* mutable_matrixinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBFriend* friends_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 spouseid_;
  ::google::protobuf::uint32 weddingmodule_;
  ::google::protobuf::uint32 marriageid_;
  ::std::string* weddingtime_;
  static const ::std::string _default_weddingtime_;
  ::std::string* marriagetime_;
  static const ::std::string _default_marriagetime_;
  ::PBMatrixInfo* matrixinfo_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUserSocialInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsHistoryToNPCCmd : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsHistoryToNPCCmd();
  virtual ~CGMMessageGoodsHistoryToNPCCmd();
  
  CGMMessageGoodsHistoryToNPCCmd(const CGMMessageGoodsHistoryToNPCCmd& from);
  
  inline CGMMessageGoodsHistoryToNPCCmd& operator=(const CGMMessageGoodsHistoryToNPCCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsHistoryToNPCCmd& default_instance();
  void Swap(CGMMessageGoodsHistoryToNPCCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsHistoryToNPCCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsHistoryToNPCCmd& from);
  void MergeFrom(const CGMMessageGoodsHistoryToNPCCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 role_flag = 4;
  inline bool has_role_flag() const;
  inline void clear_role_flag();
  static const int kRoleFlagFieldNumber = 4;
  inline ::google::protobuf::int32 role_flag() const;
  inline void set_role_flag(::google::protobuf::int32 value);
  
  // optional string npc_name = 5;
  inline bool has_npc_name() const;
  inline void clear_npc_name();
  static const int kNpcNameFieldNumber = 5;
  inline const ::std::string& npc_name() const;
  inline void set_npc_name(const ::std::string& value);
  inline void set_npc_name(const char* value);
  inline void set_npc_name(const char* value, size_t size);
  inline ::std::string* mutable_npc_name();
  
  // optional string start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 role_flag_;
  ::std::string* npc_name_;
  static const ::std::string _default_npc_name_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsHistoryToNPCCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBItemExchange2Npc : public ::google::protobuf::Message {
 public:
  PBItemExchange2Npc();
  virtual ~PBItemExchange2Npc();
  
  PBItemExchange2Npc(const PBItemExchange2Npc& from);
  
  inline PBItemExchange2Npc& operator=(const PBItemExchange2Npc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemExchange2Npc& default_instance();
  void Swap(PBItemExchange2Npc* other);
  
  // implements Message ----------------------------------------------
  
  PBItemExchange2Npc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemExchange2Npc& from);
  void MergeFrom(const PBItemExchange2Npc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string npc_name = 1;
  inline bool has_npc_name() const;
  inline void clear_npc_name();
  static const int kNpcNameFieldNumber = 1;
  inline const ::std::string& npc_name() const;
  inline void set_npc_name(const ::std::string& value);
  inline void set_npc_name(const char* value);
  inline void set_npc_name(const char* value, size_t size);
  inline ::std::string* mutable_npc_name();
  
  // optional string item_name = 2;
  inline bool has_item_name() const;
  inline void clear_item_name();
  static const int kItemNameFieldNumber = 2;
  inline const ::std::string& item_name() const;
  inline void set_item_name(const ::std::string& value);
  inline void set_item_name(const char* value);
  inline void set_item_name(const char* value, size_t size);
  inline ::std::string* mutable_item_name();
  
  // optional int32 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::int32 item_num() const;
  inline void set_item_num(::google::protobuf::int32 value);
  
  // optional string exchange_time = 4;
  inline bool has_exchange_time() const;
  inline void clear_exchange_time();
  static const int kExchangeTimeFieldNumber = 4;
  inline const ::std::string& exchange_time() const;
  inline void set_exchange_time(const ::std::string& value);
  inline void set_exchange_time(const char* value);
  inline void set_exchange_time(const char* value, size_t size);
  inline ::std::string* mutable_exchange_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* npc_name_;
  static const ::std::string _default_npc_name_;
  ::std::string* item_name_;
  static const ::std::string _default_item_name_;
  ::google::protobuf::int32 item_num_;
  ::std::string* exchange_time_;
  static const ::std::string _default_exchange_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemExchange2Npc* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsHistoryToNPCResult : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsHistoryToNPCResult();
  virtual ~CGMMessageGoodsHistoryToNPCResult();
  
  CGMMessageGoodsHistoryToNPCResult(const CGMMessageGoodsHistoryToNPCResult& from);
  
  inline CGMMessageGoodsHistoryToNPCResult& operator=(const CGMMessageGoodsHistoryToNPCResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsHistoryToNPCResult& default_instance();
  void Swap(CGMMessageGoodsHistoryToNPCResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsHistoryToNPCResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsHistoryToNPCResult& from);
  void MergeFrom(const CGMMessageGoodsHistoryToNPCResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBItemExchange2Npc items_selled = 1;
  inline int items_selled_size() const;
  inline void clear_items_selled();
  static const int kItemsSelledFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc >& items_selled() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc >* mutable_items_selled();
  inline const ::PBItemExchange2Npc& items_selled(int index) const;
  inline ::PBItemExchange2Npc* mutable_items_selled(int index);
  inline ::PBItemExchange2Npc* add_items_selled();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc > items_selled_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsHistoryToNPCResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsHistoryFromNPCCmd : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsHistoryFromNPCCmd();
  virtual ~CGMMessageGoodsHistoryFromNPCCmd();
  
  CGMMessageGoodsHistoryFromNPCCmd(const CGMMessageGoodsHistoryFromNPCCmd& from);
  
  inline CGMMessageGoodsHistoryFromNPCCmd& operator=(const CGMMessageGoodsHistoryFromNPCCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsHistoryFromNPCCmd& default_instance();
  void Swap(CGMMessageGoodsHistoryFromNPCCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsHistoryFromNPCCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsHistoryFromNPCCmd& from);
  void MergeFrom(const CGMMessageGoodsHistoryFromNPCCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 role_flag = 4;
  inline bool has_role_flag() const;
  inline void clear_role_flag();
  static const int kRoleFlagFieldNumber = 4;
  inline ::google::protobuf::int32 role_flag() const;
  inline void set_role_flag(::google::protobuf::int32 value);
  
  // optional string npc_name = 5;
  inline bool has_npc_name() const;
  inline void clear_npc_name();
  static const int kNpcNameFieldNumber = 5;
  inline const ::std::string& npc_name() const;
  inline void set_npc_name(const ::std::string& value);
  inline void set_npc_name(const char* value);
  inline void set_npc_name(const char* value, size_t size);
  inline ::std::string* mutable_npc_name();
  
  // optional string start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 role_flag_;
  ::std::string* npc_name_;
  static const ::std::string _default_npc_name_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsHistoryFromNPCCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsHistoryFromNPCResult : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsHistoryFromNPCResult();
  virtual ~CGMMessageGoodsHistoryFromNPCResult();
  
  CGMMessageGoodsHistoryFromNPCResult(const CGMMessageGoodsHistoryFromNPCResult& from);
  
  inline CGMMessageGoodsHistoryFromNPCResult& operator=(const CGMMessageGoodsHistoryFromNPCResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsHistoryFromNPCResult& default_instance();
  void Swap(CGMMessageGoodsHistoryFromNPCResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsHistoryFromNPCResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsHistoryFromNPCResult& from);
  void MergeFrom(const CGMMessageGoodsHistoryFromNPCResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBItemExchange2Npc items_buyed = 3;
  inline int items_buyed_size() const;
  inline void clear_items_buyed();
  static const int kItemsBuyedFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc >& items_buyed() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc >* mutable_items_buyed();
  inline const ::PBItemExchange2Npc& items_buyed(int index) const;
  inline ::PBItemExchange2Npc* mutable_items_buyed(int index);
  inline ::PBItemExchange2Npc* add_items_buyed();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc > items_buyed_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsHistoryFromNPCResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsHistoryBetweenUsersCmd : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsHistoryBetweenUsersCmd();
  virtual ~CGMMessageGoodsHistoryBetweenUsersCmd();
  
  CGMMessageGoodsHistoryBetweenUsersCmd(const CGMMessageGoodsHistoryBetweenUsersCmd& from);
  
  inline CGMMessageGoodsHistoryBetweenUsersCmd& operator=(const CGMMessageGoodsHistoryBetweenUsersCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsHistoryBetweenUsersCmd& default_instance();
  void Swap(CGMMessageGoodsHistoryBetweenUsersCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsHistoryBetweenUsersCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsHistoryBetweenUsersCmd& from);
  void MergeFrom(const CGMMessageGoodsHistoryBetweenUsersCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id1 = 3;
  inline bool has_role_id1() const;
  inline void clear_role_id1();
  static const int kRoleId1FieldNumber = 3;
  inline ::google::protobuf::int32 role_id1() const;
  inline void set_role_id1(::google::protobuf::int32 value);
  
  // optional int32 role_id2 = 4;
  inline bool has_role_id2() const;
  inline void clear_role_id2();
  static const int kRoleId2FieldNumber = 4;
  inline ::google::protobuf::int32 role_id2() const;
  inline void set_role_id2(::google::protobuf::int32 value);
  
  // optional string start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id1_;
  ::google::protobuf::int32 role_id2_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsHistoryBetweenUsersCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBItemExchange2Player : public ::google::protobuf::Message {
 public:
  PBItemExchange2Player();
  virtual ~PBItemExchange2Player();
  
  PBItemExchange2Player(const PBItemExchange2Player& from);
  
  inline PBItemExchange2Player& operator=(const PBItemExchange2Player& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemExchange2Player& default_instance();
  void Swap(PBItemExchange2Player* other);
  
  // implements Message ----------------------------------------------
  
  PBItemExchange2Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemExchange2Player& from);
  void MergeFrom(const PBItemExchange2Player& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string from = 1;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 1;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const char* value, size_t size);
  inline ::std::string* mutable_from();
  
  // optional string to = 2;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 2;
  inline const ::std::string& to() const;
  inline void set_to(const ::std::string& value);
  inline void set_to(const char* value);
  inline void set_to(const char* value, size_t size);
  inline ::std::string* mutable_to();
  
  // optional string item_name = 3;
  inline bool has_item_name() const;
  inline void clear_item_name();
  static const int kItemNameFieldNumber = 3;
  inline const ::std::string& item_name() const;
  inline void set_item_name(const ::std::string& value);
  inline void set_item_name(const char* value);
  inline void set_item_name(const char* value, size_t size);
  inline ::std::string* mutable_item_name();
  
  // optional string item_count = 4;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 4;
  inline const ::std::string& item_count() const;
  inline void set_item_count(const ::std::string& value);
  inline void set_item_count(const char* value);
  inline void set_item_count(const char* value, size_t size);
  inline ::std::string* mutable_item_count();
  
  // optional string exchange_time = 5;
  inline bool has_exchange_time() const;
  inline void clear_exchange_time();
  static const int kExchangeTimeFieldNumber = 5;
  inline const ::std::string& exchange_time() const;
  inline void set_exchange_time(const ::std::string& value);
  inline void set_exchange_time(const char* value);
  inline void set_exchange_time(const char* value, size_t size);
  inline ::std::string* mutable_exchange_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* from_;
  static const ::std::string _default_from_;
  ::std::string* to_;
  static const ::std::string _default_to_;
  ::std::string* item_name_;
  static const ::std::string _default_item_name_;
  ::std::string* item_count_;
  static const ::std::string _default_item_count_;
  ::std::string* exchange_time_;
  static const ::std::string _default_exchange_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemExchange2Player* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsHistoryBetweenUsersResult : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsHistoryBetweenUsersResult();
  virtual ~CGMMessageGoodsHistoryBetweenUsersResult();
  
  CGMMessageGoodsHistoryBetweenUsersResult(const CGMMessageGoodsHistoryBetweenUsersResult& from);
  
  inline CGMMessageGoodsHistoryBetweenUsersResult& operator=(const CGMMessageGoodsHistoryBetweenUsersResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsHistoryBetweenUsersResult& default_instance();
  void Swap(CGMMessageGoodsHistoryBetweenUsersResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsHistoryBetweenUsersResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsHistoryBetweenUsersResult& from);
  void MergeFrom(const CGMMessageGoodsHistoryBetweenUsersResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBItemExchange2Player item_exchanged = 3;
  inline int item_exchanged_size() const;
  inline void clear_item_exchanged();
  static const int kItemExchangedFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Player >& item_exchanged() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Player >* mutable_item_exchanged();
  inline const ::PBItemExchange2Player& item_exchanged(int index) const;
  inline ::PBItemExchange2Player* mutable_item_exchanged(int index);
  inline ::PBItemExchange2Player* add_item_exchanged();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Player > item_exchanged_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsHistoryBetweenUsersResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsHistoryCmd : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsHistoryCmd();
  virtual ~CGMMessageGoodsHistoryCmd();
  
  CGMMessageGoodsHistoryCmd(const CGMMessageGoodsHistoryCmd& from);
  
  inline CGMMessageGoodsHistoryCmd& operator=(const CGMMessageGoodsHistoryCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsHistoryCmd& default_instance();
  void Swap(CGMMessageGoodsHistoryCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsHistoryCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsHistoryCmd& from);
  void MergeFrom(const CGMMessageGoodsHistoryCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string item_id = 3;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline const ::std::string& item_id() const;
  inline void set_item_id(const ::std::string& value);
  inline void set_item_id(const char* value);
  inline void set_item_id(const char* value, size_t size);
  inline ::std::string* mutable_item_id();
  
  // optional string start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* item_id_;
  static const ::std::string _default_item_id_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsHistoryCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBItemAction : public ::google::protobuf::Message {
 public:
  PBItemAction();
  virtual ~PBItemAction();
  
  PBItemAction(const PBItemAction& from);
  
  inline PBItemAction& operator=(const PBItemAction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemAction& default_instance();
  void Swap(PBItemAction* other);
  
  // implements Message ----------------------------------------------
  
  PBItemAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemAction& from);
  void MergeFrom(const PBItemAction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string from = 1;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 1;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const char* value, size_t size);
  inline ::std::string* mutable_from();
  
  // optional string to = 2;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 2;
  inline const ::std::string& to() const;
  inline void set_to(const ::std::string& value);
  inline void set_to(const char* value);
  inline void set_to(const char* value, size_t size);
  inline ::std::string* mutable_to();
  
  // optional string action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline const ::std::string& action() const;
  inline void set_action(const ::std::string& value);
  inline void set_action(const char* value);
  inline void set_action(const char* value, size_t size);
  inline ::std::string* mutable_action();
  
  // optional string action_time = 4;
  inline bool has_action_time() const;
  inline void clear_action_time();
  static const int kActionTimeFieldNumber = 4;
  inline const ::std::string& action_time() const;
  inline void set_action_time(const ::std::string& value);
  inline void set_action_time(const char* value);
  inline void set_action_time(const char* value, size_t size);
  inline ::std::string* mutable_action_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* from_;
  static const ::std::string _default_from_;
  ::std::string* to_;
  static const ::std::string _default_to_;
  ::std::string* action_;
  static const ::std::string _default_action_;
  ::std::string* action_time_;
  static const ::std::string _default_action_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemAction* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsHistoryResult : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsHistoryResult();
  virtual ~CGMMessageGoodsHistoryResult();
  
  CGMMessageGoodsHistoryResult(const CGMMessageGoodsHistoryResult& from);
  
  inline CGMMessageGoodsHistoryResult& operator=(const CGMMessageGoodsHistoryResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsHistoryResult& default_instance();
  void Swap(CGMMessageGoodsHistoryResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsHistoryResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsHistoryResult& from);
  void MergeFrom(const CGMMessageGoodsHistoryResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBItemAction item_actioned = 3;
  inline int item_actioned_size() const;
  inline void clear_item_actioned();
  static const int kItemActionedFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemAction >& item_actioned() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemAction >* mutable_item_actioned();
  inline const ::PBItemAction& item_actioned(int index) const;
  inline ::PBItemAction* mutable_item_actioned(int index);
  inline ::PBItemAction* add_item_actioned();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBItemAction > item_actioned_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsHistoryResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessagePetHistoryCmd : public ::google::protobuf::Message {
 public:
  CGMMessagePetHistoryCmd();
  virtual ~CGMMessagePetHistoryCmd();
  
  CGMMessagePetHistoryCmd(const CGMMessagePetHistoryCmd& from);
  
  inline CGMMessagePetHistoryCmd& operator=(const CGMMessagePetHistoryCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessagePetHistoryCmd& default_instance();
  void Swap(CGMMessagePetHistoryCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessagePetHistoryCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessagePetHistoryCmd& from);
  void MergeFrom(const CGMMessagePetHistoryCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string role_name = 3;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 3;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  
  // optional int32 pet_id = 4;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 4;
  inline ::google::protobuf::int32 pet_id() const;
  inline void set_pet_id(::google::protobuf::int32 value);
  
  // optional string start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* role_name_;
  static const ::std::string _default_role_name_;
  ::google::protobuf::int32 pet_id_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessagePetHistoryCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBPetHistory : public ::google::protobuf::Message {
 public:
  PBPetHistory();
  virtual ~PBPetHistory();
  
  PBPetHistory(const PBPetHistory& from);
  
  inline PBPetHistory& operator=(const PBPetHistory& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPetHistory& default_instance();
  void Swap(PBPetHistory* other);
  
  // implements Message ----------------------------------------------
  
  PBPetHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPetHistory& from);
  void MergeFrom(const PBPetHistory& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string from = 1;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 1;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const char* value, size_t size);
  inline ::std::string* mutable_from();
  
  // optional string to = 2;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 2;
  inline const ::std::string& to() const;
  inline void set_to(const ::std::string& value);
  inline void set_to(const char* value);
  inline void set_to(const char* value, size_t size);
  inline ::std::string* mutable_to();
  
  // optional string action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline const ::std::string& action() const;
  inline void set_action(const ::std::string& value);
  inline void set_action(const char* value);
  inline void set_action(const char* value, size_t size);
  inline ::std::string* mutable_action();
  
  // optional string action_time = 4;
  inline bool has_action_time() const;
  inline void clear_action_time();
  static const int kActionTimeFieldNumber = 4;
  inline const ::std::string& action_time() const;
  inline void set_action_time(const ::std::string& value);
  inline void set_action_time(const char* value);
  inline void set_action_time(const char* value, size_t size);
  inline ::std::string* mutable_action_time();
  
  // optional string action_attr = 5;
  inline bool has_action_attr() const;
  inline void clear_action_attr();
  static const int kActionAttrFieldNumber = 5;
  inline const ::std::string& action_attr() const;
  inline void set_action_attr(const ::std::string& value);
  inline void set_action_attr(const char* value);
  inline void set_action_attr(const char* value, size_t size);
  inline ::std::string* mutable_action_attr();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* from_;
  static const ::std::string _default_from_;
  ::std::string* to_;
  static const ::std::string _default_to_;
  ::std::string* action_;
  static const ::std::string _default_action_;
  ::std::string* action_time_;
  static const ::std::string _default_action_time_;
  ::std::string* action_attr_;
  static const ::std::string _default_action_attr_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPetHistory* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessagePetHistoryResult : public ::google::protobuf::Message {
 public:
  CGMMessagePetHistoryResult();
  virtual ~CGMMessagePetHistoryResult();
  
  CGMMessagePetHistoryResult(const CGMMessagePetHistoryResult& from);
  
  inline CGMMessagePetHistoryResult& operator=(const CGMMessagePetHistoryResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessagePetHistoryResult& default_instance();
  void Swap(CGMMessagePetHistoryResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessagePetHistoryResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessagePetHistoryResult& from);
  void MergeFrom(const CGMMessagePetHistoryResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBPetHistory pet_history = 3;
  inline int pet_history_size() const;
  inline void clear_pet_history();
  static const int kPetHistoryFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPetHistory >& pet_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPetHistory >* mutable_pet_history();
  inline const ::PBPetHistory& pet_history(int index) const;
  inline ::PBPetHistory* mutable_pet_history(int index);
  inline ::PBPetHistory* add_pet_history();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBPetHistory > pet_history_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessagePetHistoryResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageOperationDetailCmd : public ::google::protobuf::Message {
 public:
  CGMMessageOperationDetailCmd();
  virtual ~CGMMessageOperationDetailCmd();
  
  CGMMessageOperationDetailCmd(const CGMMessageOperationDetailCmd& from);
  
  inline CGMMessageOperationDetailCmd& operator=(const CGMMessageOperationDetailCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageOperationDetailCmd& default_instance();
  void Swap(CGMMessageOperationDetailCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageOperationDetailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageOperationDetailCmd& from);
  void MergeFrom(const CGMMessageOperationDetailCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 server_id = 3;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional string start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 role_id_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageOperationDetailCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageNPCDetailCmd : public ::google::protobuf::Message {
 public:
  CGMMessageNPCDetailCmd();
  virtual ~CGMMessageNPCDetailCmd();
  
  CGMMessageNPCDetailCmd(const CGMMessageNPCDetailCmd& from);
  
  inline CGMMessageNPCDetailCmd& operator=(const CGMMessageNPCDetailCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageNPCDetailCmd& default_instance();
  void Swap(CGMMessageNPCDetailCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageNPCDetailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageNPCDetailCmd& from);
  void MergeFrom(const CGMMessageNPCDetailCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string npc_name = 3;
  inline bool has_npc_name() const;
  inline void clear_npc_name();
  static const int kNpcNameFieldNumber = 3;
  inline const ::std::string& npc_name() const;
  inline void set_npc_name(const ::std::string& value);
  inline void set_npc_name(const char* value);
  inline void set_npc_name(const char* value, size_t size);
  inline ::std::string* mutable_npc_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* npc_name_;
  static const ::std::string _default_npc_name_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageNPCDetailCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBNPCDetail : public ::google::protobuf::Message {
 public:
  PBNPCDetail();
  virtual ~PBNPCDetail();
  
  PBNPCDetail(const PBNPCDetail& from);
  
  inline PBNPCDetail& operator=(const PBNPCDetail& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBNPCDetail& default_instance();
  void Swap(PBNPCDetail* other);
  
  // implements Message ----------------------------------------------
  
  PBNPCDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBNPCDetail& from);
  void MergeFrom(const PBNPCDetail& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);
  
  // optional string npc_location = 2;
  inline bool has_npc_location() const;
  inline void clear_npc_location();
  static const int kNpcLocationFieldNumber = 2;
  inline const ::std::string& npc_location() const;
  inline void set_npc_location(const ::std::string& value);
  inline void set_npc_location(const char* value);
  inline void set_npc_location(const char* value, size_t size);
  inline ::std::string* mutable_npc_location();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 map_id_;
  ::std::string* npc_location_;
  static const ::std::string _default_npc_location_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBNPCDetail* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageNPCDetailResult : public ::google::protobuf::Message {
 public:
  CGMMessageNPCDetailResult();
  virtual ~CGMMessageNPCDetailResult();
  
  CGMMessageNPCDetailResult(const CGMMessageNPCDetailResult& from);
  
  inline CGMMessageNPCDetailResult& operator=(const CGMMessageNPCDetailResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageNPCDetailResult& default_instance();
  void Swap(CGMMessageNPCDetailResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageNPCDetailResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageNPCDetailResult& from);
  void MergeFrom(const CGMMessageNPCDetailResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBNPCDetail npc_detail = 3;
  inline int npc_detail_size() const;
  inline void clear_npc_detail();
  static const int kNpcDetailFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBNPCDetail >& npc_detail() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBNPCDetail >* mutable_npc_detail();
  inline const ::PBNPCDetail& npc_detail(int index) const;
  inline ::PBNPCDetail* mutable_npc_detail(int index);
  inline ::PBNPCDetail* add_npc_detail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBNPCDetail > npc_detail_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageNPCDetailResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsDropLogCmd : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsDropLogCmd();
  virtual ~CGMMessageGoodsDropLogCmd();
  
  CGMMessageGoodsDropLogCmd(const CGMMessageGoodsDropLogCmd& from);
  
  inline CGMMessageGoodsDropLogCmd& operator=(const CGMMessageGoodsDropLogCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsDropLogCmd& default_instance();
  void Swap(CGMMessageGoodsDropLogCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsDropLogCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsDropLogCmd& from);
  void MergeFrom(const CGMMessageGoodsDropLogCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 goods_id = 3;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 3;
  inline ::google::protobuf::int32 goods_id() const;
  inline void set_goods_id(::google::protobuf::int32 value);
  
  // optional string map_name = 4;
  inline bool has_map_name() const;
  inline void clear_map_name();
  static const int kMapNameFieldNumber = 4;
  inline const ::std::string& map_name() const;
  inline void set_map_name(const ::std::string& value);
  inline void set_map_name(const char* value);
  inline void set_map_name(const char* value, size_t size);
  inline ::std::string* mutable_map_name();
  
  // optional string start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 goods_id_;
  ::std::string* map_name_;
  static const ::std::string _default_map_name_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsDropLogCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBGoodsDropLog : public ::google::protobuf::Message {
 public:
  PBGoodsDropLog();
  virtual ~PBGoodsDropLog();
  
  PBGoodsDropLog(const PBGoodsDropLog& from);
  
  inline PBGoodsDropLog& operator=(const PBGoodsDropLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGoodsDropLog& default_instance();
  void Swap(PBGoodsDropLog* other);
  
  // implements Message ----------------------------------------------
  
  PBGoodsDropLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGoodsDropLog& from);
  void MergeFrom(const PBGoodsDropLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string role_name = 1;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 1;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  
  // optional string drop_time = 2;
  inline bool has_drop_time() const;
  inline void clear_drop_time();
  static const int kDropTimeFieldNumber = 2;
  inline const ::std::string& drop_time() const;
  inline void set_drop_time(const ::std::string& value);
  inline void set_drop_time(const char* value);
  inline void set_drop_time(const char* value, size_t size);
  inline ::std::string* mutable_drop_time();
  
  // optional int32 total_num = 3;
  inline bool has_total_num() const;
  inline void clear_total_num();
  static const int kTotalNumFieldNumber = 3;
  inline ::google::protobuf::int32 total_num() const;
  inline void set_total_num(::google::protobuf::int32 value);
  
  // optional int32 drop_rate = 4;
  inline bool has_drop_rate() const;
  inline void clear_drop_rate();
  static const int kDropRateFieldNumber = 4;
  inline ::google::protobuf::int32 drop_rate() const;
  inline void set_drop_rate(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* role_name_;
  static const ::std::string _default_role_name_;
  ::std::string* drop_time_;
  static const ::std::string _default_drop_time_;
  ::google::protobuf::int32 total_num_;
  ::google::protobuf::int32 drop_rate_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBGoodsDropLog* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageGoodsDropLogResult : public ::google::protobuf::Message {
 public:
  CGMMessageGoodsDropLogResult();
  virtual ~CGMMessageGoodsDropLogResult();
  
  CGMMessageGoodsDropLogResult(const CGMMessageGoodsDropLogResult& from);
  
  inline CGMMessageGoodsDropLogResult& operator=(const CGMMessageGoodsDropLogResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageGoodsDropLogResult& default_instance();
  void Swap(CGMMessageGoodsDropLogResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageGoodsDropLogResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageGoodsDropLogResult& from);
  void MergeFrom(const CGMMessageGoodsDropLogResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBGoodsDropLog goods_drop_log = 3;
  inline int goods_drop_log_size() const;
  inline void clear_goods_drop_log();
  static const int kGoodsDropLogFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBGoodsDropLog >& goods_drop_log() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBGoodsDropLog >* mutable_goods_drop_log();
  inline const ::PBGoodsDropLog& goods_drop_log(int index) const;
  inline ::PBGoodsDropLog* mutable_goods_drop_log(int index);
  inline ::PBGoodsDropLog* add_goods_drop_log();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBGoodsDropLog > goods_drop_log_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageGoodsDropLogResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageTaskInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageTaskInfoCmd();
  virtual ~CGMMessageTaskInfoCmd();
  
  CGMMessageTaskInfoCmd(const CGMMessageTaskInfoCmd& from);
  
  inline CGMMessageTaskInfoCmd& operator=(const CGMMessageTaskInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageTaskInfoCmd& default_instance();
  void Swap(CGMMessageTaskInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageTaskInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageTaskInfoCmd& from);
  void MergeFrom(const CGMMessageTaskInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageTaskInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBTaskInfo : public ::google::protobuf::Message {
 public:
  PBTaskInfo();
  virtual ~PBTaskInfo();
  
  PBTaskInfo(const PBTaskInfo& from);
  
  inline PBTaskInfo& operator=(const PBTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTaskInfo& default_instance();
  void Swap(PBTaskInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTaskInfo& from);
  void MergeFrom(const PBTaskInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);
  
  // optional string task_name = 2;
  inline bool has_task_name() const;
  inline void clear_task_name();
  static const int kTaskNameFieldNumber = 2;
  inline const ::std::string& task_name() const;
  inline void set_task_name(const ::std::string& value);
  inline void set_task_name(const char* value);
  inline void set_task_name(const char* value, size_t size);
  inline ::std::string* mutable_task_name();
  
  // optional int32 finish_type = 3;
  inline bool has_finish_type() const;
  inline void clear_finish_type();
  static const int kFinishTypeFieldNumber = 3;
  inline ::google::protobuf::int32 finish_type() const;
  inline void set_finish_type(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 task_id_;
  ::std::string* task_name_;
  static const ::std::string _default_task_name_;
  ::google::protobuf::int32 finish_type_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageTaskInfoResult : public ::google::protobuf::Message {
 public:
  CGMMessageTaskInfoResult();
  virtual ~CGMMessageTaskInfoResult();
  
  CGMMessageTaskInfoResult(const CGMMessageTaskInfoResult& from);
  
  inline CGMMessageTaskInfoResult& operator=(const CGMMessageTaskInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageTaskInfoResult& default_instance();
  void Swap(CGMMessageTaskInfoResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageTaskInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageTaskInfoResult& from);
  void MergeFrom(const CGMMessageTaskInfoResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBTaskInfo task_detail = 3;
  inline int task_detail_size() const;
  inline void clear_task_detail();
  static const int kTaskDetailFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTaskInfo >& task_detail() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTaskInfo >* mutable_task_detail();
  inline const ::PBTaskInfo& task_detail(int index) const;
  inline ::PBTaskInfo* mutable_task_detail(int index);
  inline ::PBTaskInfo* add_task_detail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBTaskInfo > task_detail_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageTaskInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageLoginInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageLoginInfoCmd();
  virtual ~CGMMessageLoginInfoCmd();
  
  CGMMessageLoginInfoCmd(const CGMMessageLoginInfoCmd& from);
  
  inline CGMMessageLoginInfoCmd& operator=(const CGMMessageLoginInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageLoginInfoCmd& default_instance();
  void Swap(CGMMessageLoginInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageLoginInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageLoginInfoCmd& from);
  void MergeFrom(const CGMMessageLoginInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  
  // optional string start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* user_name_;
  static const ::std::string _default_user_name_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageLoginInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBLoginInfo : public ::google::protobuf::Message {
 public:
  PBLoginInfo();
  virtual ~PBLoginInfo();
  
  PBLoginInfo(const PBLoginInfo& from);
  
  inline PBLoginInfo& operator=(const PBLoginInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLoginInfo& default_instance();
  void Swap(PBLoginInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBLoginInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLoginInfo& from);
  void MergeFrom(const PBLoginInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 login_in_time = 1;
  inline bool has_login_in_time() const;
  inline void clear_login_in_time();
  static const int kLoginInTimeFieldNumber = 1;
  inline ::google::protobuf::int32 login_in_time() const;
  inline void set_login_in_time(::google::protobuf::int32 value);
  
  // optional int32 login_in_money = 2;
  inline bool has_login_in_money() const;
  inline void clear_login_in_money();
  static const int kLoginInMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 login_in_money() const;
  inline void set_login_in_money(::google::protobuf::int32 value);
  
  // optional int32 login_in_exp = 3;
  inline bool has_login_in_exp() const;
  inline void clear_login_in_exp();
  static const int kLoginInExpFieldNumber = 3;
  inline ::google::protobuf::int32 login_in_exp() const;
  inline void set_login_in_exp(::google::protobuf::int32 value);
  
  // optional int32 login_in_ip = 4;
  inline bool has_login_in_ip() const;
  inline void clear_login_in_ip();
  static const int kLoginInIpFieldNumber = 4;
  inline ::google::protobuf::int32 login_in_ip() const;
  inline void set_login_in_ip(::google::protobuf::int32 value);
  
  // optional int32 login_out_time = 5;
  inline bool has_login_out_time() const;
  inline void clear_login_out_time();
  static const int kLoginOutTimeFieldNumber = 5;
  inline ::google::protobuf::int32 login_out_time() const;
  inline void set_login_out_time(::google::protobuf::int32 value);
  
  // optional int32 login_out_money = 6;
  inline bool has_login_out_money() const;
  inline void clear_login_out_money();
  static const int kLoginOutMoneyFieldNumber = 6;
  inline ::google::protobuf::int32 login_out_money() const;
  inline void set_login_out_money(::google::protobuf::int32 value);
  
  // optional int32 login_out_exp = 7;
  inline bool has_login_out_exp() const;
  inline void clear_login_out_exp();
  static const int kLoginOutExpFieldNumber = 7;
  inline ::google::protobuf::int32 login_out_exp() const;
  inline void set_login_out_exp(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 login_in_time_;
  ::google::protobuf::int32 login_in_money_;
  ::google::protobuf::int32 login_in_exp_;
  ::google::protobuf::int32 login_in_ip_;
  ::google::protobuf::int32 login_out_time_;
  ::google::protobuf::int32 login_out_money_;
  ::google::protobuf::int32 login_out_exp_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLoginInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageLoginInfoResult : public ::google::protobuf::Message {
 public:
  CGMMessageLoginInfoResult();
  virtual ~CGMMessageLoginInfoResult();
  
  CGMMessageLoginInfoResult(const CGMMessageLoginInfoResult& from);
  
  inline CGMMessageLoginInfoResult& operator=(const CGMMessageLoginInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageLoginInfoResult& default_instance();
  void Swap(CGMMessageLoginInfoResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageLoginInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageLoginInfoResult& from);
  void MergeFrom(const CGMMessageLoginInfoResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .PBLoginInfo login_info = 3;
  inline int login_info_size() const;
  inline void clear_login_info();
  static const int kLoginInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLoginInfo >& login_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLoginInfo >* mutable_login_info();
  inline const ::PBLoginInfo& login_info(int index) const;
  inline ::PBLoginInfo* mutable_login_info(int index);
  inline ::PBLoginInfo* add_login_info();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::PBLoginInfo > login_info_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageLoginInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageShutUpCmd : public ::google::protobuf::Message {
 public:
  CGMMessageShutUpCmd();
  virtual ~CGMMessageShutUpCmd();
  
  CGMMessageShutUpCmd(const CGMMessageShutUpCmd& from);
  
  inline CGMMessageShutUpCmd& operator=(const CGMMessageShutUpCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageShutUpCmd& default_instance();
  void Swap(CGMMessageShutUpCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageShutUpCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageShutUpCmd& from);
  void MergeFrom(const CGMMessageShutUpCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 channel = 4;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 4;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);
  
  // optional int32 period = 5;
  inline bool has_period() const;
  inline void clear_period();
  static const int kPeriodFieldNumber = 5;
  inline ::google::protobuf::int32 period() const;
  inline void set_period(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 period_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageShutUpCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageCancelShutUpCmd : public ::google::protobuf::Message {
 public:
  CGMMessageCancelShutUpCmd();
  virtual ~CGMMessageCancelShutUpCmd();
  
  CGMMessageCancelShutUpCmd(const CGMMessageCancelShutUpCmd& from);
  
  inline CGMMessageCancelShutUpCmd& operator=(const CGMMessageCancelShutUpCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageCancelShutUpCmd& default_instance();
  void Swap(CGMMessageCancelShutUpCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageCancelShutUpCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageCancelShutUpCmd& from);
  void MergeFrom(const CGMMessageCancelShutUpCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 channel = 4;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 4;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 channel_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageCancelShutUpCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageFreezeAccountCmd : public ::google::protobuf::Message {
 public:
  CGMMessageFreezeAccountCmd();
  virtual ~CGMMessageFreezeAccountCmd();
  
  CGMMessageFreezeAccountCmd(const CGMMessageFreezeAccountCmd& from);
  
  inline CGMMessageFreezeAccountCmd& operator=(const CGMMessageFreezeAccountCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageFreezeAccountCmd& default_instance();
  void Swap(CGMMessageFreezeAccountCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageFreezeAccountCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageFreezeAccountCmd& from);
  void MergeFrom(const CGMMessageFreezeAccountCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 user_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageFreezeAccountCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageFreezeAccountBatCmd : public ::google::protobuf::Message {
 public:
  CGMMessageFreezeAccountBatCmd();
  virtual ~CGMMessageFreezeAccountBatCmd();
  
  CGMMessageFreezeAccountBatCmd(const CGMMessageFreezeAccountBatCmd& from);
  
  inline CGMMessageFreezeAccountBatCmd& operator=(const CGMMessageFreezeAccountBatCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageFreezeAccountBatCmd& default_instance();
  void Swap(CGMMessageFreezeAccountBatCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageFreezeAccountBatCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageFreezeAccountBatCmd& from);
  void MergeFrom(const CGMMessageFreezeAccountBatCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string uid_list = 3;
  inline bool has_uid_list() const;
  inline void clear_uid_list();
  static const int kUidListFieldNumber = 3;
  inline const ::std::string& uid_list() const;
  inline void set_uid_list(const ::std::string& value);
  inline void set_uid_list(const char* value);
  inline void set_uid_list(const char* value, size_t size);
  inline ::std::string* mutable_uid_list();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* uid_list_;
  static const ::std::string _default_uid_list_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageFreezeAccountBatCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUnFreezeAccountCmd : public ::google::protobuf::Message {
 public:
  CGMMessageUnFreezeAccountCmd();
  virtual ~CGMMessageUnFreezeAccountCmd();
  
  CGMMessageUnFreezeAccountCmd(const CGMMessageUnFreezeAccountCmd& from);
  
  inline CGMMessageUnFreezeAccountCmd& operator=(const CGMMessageUnFreezeAccountCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUnFreezeAccountCmd& default_instance();
  void Swap(CGMMessageUnFreezeAccountCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUnFreezeAccountCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUnFreezeAccountCmd& from);
  void MergeFrom(const CGMMessageUnFreezeAccountCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 user_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUnFreezeAccountCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageTrusteeUserCmd : public ::google::protobuf::Message {
 public:
  CGMMessageTrusteeUserCmd();
  virtual ~CGMMessageTrusteeUserCmd();
  
  CGMMessageTrusteeUserCmd(const CGMMessageTrusteeUserCmd& from);
  
  inline CGMMessageTrusteeUserCmd& operator=(const CGMMessageTrusteeUserCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageTrusteeUserCmd& default_instance();
  void Swap(CGMMessageTrusteeUserCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageTrusteeUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageTrusteeUserCmd& from);
  void MergeFrom(const CGMMessageTrusteeUserCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional string password = 4;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 4;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 user_id_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageTrusteeUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUnTrusteeUserCmd : public ::google::protobuf::Message {
 public:
  CGMMessageUnTrusteeUserCmd();
  virtual ~CGMMessageUnTrusteeUserCmd();
  
  CGMMessageUnTrusteeUserCmd(const CGMMessageUnTrusteeUserCmd& from);
  
  inline CGMMessageUnTrusteeUserCmd& operator=(const CGMMessageUnTrusteeUserCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUnTrusteeUserCmd& default_instance();
  void Swap(CGMMessageUnTrusteeUserCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUnTrusteeUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUnTrusteeUserCmd& from);
  void MergeFrom(const CGMMessageUnTrusteeUserCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 user_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUnTrusteeUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageMoveRoleCmd : public ::google::protobuf::Message {
 public:
  CGMMessageMoveRoleCmd();
  virtual ~CGMMessageMoveRoleCmd();
  
  CGMMessageMoveRoleCmd(const CGMMessageMoveRoleCmd& from);
  
  inline CGMMessageMoveRoleCmd& operator=(const CGMMessageMoveRoleCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageMoveRoleCmd& default_instance();
  void Swap(CGMMessageMoveRoleCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageMoveRoleCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageMoveRoleCmd& from);
  void MergeFrom(const CGMMessageMoveRoleCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 server_id = 4;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 4;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string target_location = 6;
  inline bool has_target_location() const;
  inline void clear_target_location();
  static const int kTargetLocationFieldNumber = 6;
  inline const ::std::string& target_location() const;
  inline void set_target_location(const ::std::string& value);
  inline void set_target_location(const char* value);
  inline void set_target_location(const char* value, size_t size);
  inline ::std::string* mutable_target_location();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 type_;
  ::std::string* target_location_;
  static const ::std::string _default_target_location_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageMoveRoleCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageEndTaskCmd : public ::google::protobuf::Message {
 public:
  CGMMessageEndTaskCmd();
  virtual ~CGMMessageEndTaskCmd();
  
  CGMMessageEndTaskCmd(const CGMMessageEndTaskCmd& from);
  
  inline CGMMessageEndTaskCmd& operator=(const CGMMessageEndTaskCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageEndTaskCmd& default_instance();
  void Swap(CGMMessageEndTaskCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageEndTaskCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageEndTaskCmd& from);
  void MergeFrom(const CGMMessageEndTaskCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 task_id = 4;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 4;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 task_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageEndTaskCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageTrusteeStorageCmd : public ::google::protobuf::Message {
 public:
  CGMMessageTrusteeStorageCmd();
  virtual ~CGMMessageTrusteeStorageCmd();
  
  CGMMessageTrusteeStorageCmd(const CGMMessageTrusteeStorageCmd& from);
  
  inline CGMMessageTrusteeStorageCmd& operator=(const CGMMessageTrusteeStorageCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageTrusteeStorageCmd& default_instance();
  void Swap(CGMMessageTrusteeStorageCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageTrusteeStorageCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageTrusteeStorageCmd& from);
  void MergeFrom(const CGMMessageTrusteeStorageCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageTrusteeStorageCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUnTrusteeStorageCmd : public ::google::protobuf::Message {
 public:
  CGMMessageUnTrusteeStorageCmd();
  virtual ~CGMMessageUnTrusteeStorageCmd();
  
  CGMMessageUnTrusteeStorageCmd(const CGMMessageUnTrusteeStorageCmd& from);
  
  inline CGMMessageUnTrusteeStorageCmd& operator=(const CGMMessageUnTrusteeStorageCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUnTrusteeStorageCmd& default_instance();
  void Swap(CGMMessageUnTrusteeStorageCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUnTrusteeStorageCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUnTrusteeStorageCmd& from);
  void MergeFrom(const CGMMessageUnTrusteeStorageCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUnTrusteeStorageCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRecoverRoleCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRecoverRoleCmd();
  virtual ~CGMMessageRecoverRoleCmd();
  
  CGMMessageRecoverRoleCmd(const CGMMessageRecoverRoleCmd& from);
  
  inline CGMMessageRecoverRoleCmd& operator=(const CGMMessageRecoverRoleCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRecoverRoleCmd& default_instance();
  void Swap(CGMMessageRecoverRoleCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRecoverRoleCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRecoverRoleCmd& from);
  void MergeFrom(const CGMMessageRecoverRoleCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRecoverRoleCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessagePostBulletinCmd : public ::google::protobuf::Message {
 public:
  CGMMessagePostBulletinCmd();
  virtual ~CGMMessagePostBulletinCmd();
  
  CGMMessagePostBulletinCmd(const CGMMessagePostBulletinCmd& from);
  
  inline CGMMessagePostBulletinCmd& operator=(const CGMMessagePostBulletinCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessagePostBulletinCmd& default_instance();
  void Swap(CGMMessagePostBulletinCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessagePostBulletinCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessagePostBulletinCmd& from);
  void MergeFrom(const CGMMessagePostBulletinCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  
  // optional uint32 times = 4;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);
  
  // optional uint32 interval = 5;
  inline bool has_interval() const;
  inline void clear_interval();
  static const int kIntervalFieldNumber = 5;
  inline ::google::protobuf::uint32 interval() const;
  inline void set_interval(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* content_;
  static const ::std::string _default_content_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 interval_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessagePostBulletinCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageMultiExpCmd : public ::google::protobuf::Message {
 public:
  CGMMessageMultiExpCmd();
  virtual ~CGMMessageMultiExpCmd();
  
  CGMMessageMultiExpCmd(const CGMMessageMultiExpCmd& from);
  
  inline CGMMessageMultiExpCmd& operator=(const CGMMessageMultiExpCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageMultiExpCmd& default_instance();
  void Swap(CGMMessageMultiExpCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageMultiExpCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageMultiExpCmd& from);
  void MergeFrom(const CGMMessageMultiExpCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 gateway_id = 3;
  inline bool has_gateway_id() const;
  inline void clear_gateway_id();
  static const int kGatewayIdFieldNumber = 3;
  inline ::google::protobuf::int32 gateway_id() const;
  inline void set_gateway_id(::google::protobuf::int32 value);
  
  // optional int32 server_id = 4;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 4;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 exp_type = 5;
  inline bool has_exp_type() const;
  inline void clear_exp_type();
  static const int kExpTypeFieldNumber = 5;
  inline ::google::protobuf::int32 exp_type() const;
  inline void set_exp_type(::google::protobuf::int32 value);
  
  // optional string multi_num = 6;
  inline bool has_multi_num() const;
  inline void clear_multi_num();
  static const int kMultiNumFieldNumber = 6;
  inline const ::std::string& multi_num() const;
  inline void set_multi_num(const ::std::string& value);
  inline void set_multi_num(const char* value);
  inline void set_multi_num(const char* value, size_t size);
  inline ::std::string* mutable_multi_num();
  
  // optional string reason = 7;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 7;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  
  // optional int32 start_time = 8;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 8;
  inline ::google::protobuf::int32 start_time() const;
  inline void set_start_time(::google::protobuf::int32 value);
  
  // optional int32 end_time = 9;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 9;
  inline ::google::protobuf::int32 end_time() const;
  inline void set_end_time(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 gateway_id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 exp_type_;
  ::std::string* multi_num_;
  static const ::std::string _default_multi_num_;
  ::std::string* reason_;
  static const ::std::string _default_reason_;
  ::google::protobuf::int32 start_time_;
  ::google::protobuf::int32 end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageMultiExpCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageCancelMultiExpCmd : public ::google::protobuf::Message {
 public:
  CGMMessageCancelMultiExpCmd();
  virtual ~CGMMessageCancelMultiExpCmd();
  
  CGMMessageCancelMultiExpCmd(const CGMMessageCancelMultiExpCmd& from);
  
  inline CGMMessageCancelMultiExpCmd& operator=(const CGMMessageCancelMultiExpCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageCancelMultiExpCmd& default_instance();
  void Swap(CGMMessageCancelMultiExpCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageCancelMultiExpCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageCancelMultiExpCmd& from);
  void MergeFrom(const CGMMessageCancelMultiExpCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 gateway_id = 3;
  inline bool has_gateway_id() const;
  inline void clear_gateway_id();
  static const int kGatewayIdFieldNumber = 3;
  inline ::google::protobuf::int32 gateway_id() const;
  inline void set_gateway_id(::google::protobuf::int32 value);
  
  // optional int32 server_id = 4;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 4;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 exp_type = 5;
  inline bool has_exp_type() const;
  inline void clear_exp_type();
  static const int kExpTypeFieldNumber = 5;
  inline ::google::protobuf::int32 exp_type() const;
  inline void set_exp_type(::google::protobuf::int32 value);
  
  // optional int32 multi_num = 6;
  inline bool has_multi_num() const;
  inline void clear_multi_num();
  static const int kMultiNumFieldNumber = 6;
  inline ::google::protobuf::int32 multi_num() const;
  inline void set_multi_num(::google::protobuf::int32 value);
  
  // optional string reason = 7;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 7;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  
  // optional int32 start_time = 8;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 8;
  inline ::google::protobuf::int32 start_time() const;
  inline void set_start_time(::google::protobuf::int32 value);
  
  // optional int32 end_time = 9;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 9;
  inline ::google::protobuf::int32 end_time() const;
  inline void set_end_time(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 gateway_id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 exp_type_;
  ::google::protobuf::int32 multi_num_;
  ::std::string* reason_;
  static const ::std::string _default_reason_;
  ::google::protobuf::int32 start_time_;
  ::google::protobuf::int32 end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageCancelMultiExpCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageChangeMoneyCmd : public ::google::protobuf::Message {
 public:
  CGMMessageChangeMoneyCmd();
  virtual ~CGMMessageChangeMoneyCmd();
  
  CGMMessageChangeMoneyCmd(const CGMMessageChangeMoneyCmd& from);
  
  inline CGMMessageChangeMoneyCmd& operator=(const CGMMessageChangeMoneyCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageChangeMoneyCmd& default_instance();
  void Swap(CGMMessageChangeMoneyCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageChangeMoneyCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageChangeMoneyCmd& from);
  void MergeFrom(const CGMMessageChangeMoneyCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 server_id = 3;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 change_num = 5;
  inline bool has_change_num() const;
  inline void clear_change_num();
  static const int kChangeNumFieldNumber = 5;
  inline ::google::protobuf::int32 change_num() const;
  inline void set_change_num(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 change_num_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageChangeMoneyCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageChangeExpCmd : public ::google::protobuf::Message {
 public:
  CGMMessageChangeExpCmd();
  virtual ~CGMMessageChangeExpCmd();
  
  CGMMessageChangeExpCmd(const CGMMessageChangeExpCmd& from);
  
  inline CGMMessageChangeExpCmd& operator=(const CGMMessageChangeExpCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageChangeExpCmd& default_instance();
  void Swap(CGMMessageChangeExpCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageChangeExpCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageChangeExpCmd& from);
  void MergeFrom(const CGMMessageChangeExpCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 server_id = 3;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 change_num = 5;
  inline bool has_change_num() const;
  inline void clear_change_num();
  static const int kChangeNumFieldNumber = 5;
  inline ::google::protobuf::int32 change_num() const;
  inline void set_change_num(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 change_num_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageChangeExpCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageChangeItemCmd : public ::google::protobuf::Message {
 public:
  CGMMessageChangeItemCmd();
  virtual ~CGMMessageChangeItemCmd();
  
  CGMMessageChangeItemCmd(const CGMMessageChangeItemCmd& from);
  
  inline CGMMessageChangeItemCmd& operator=(const CGMMessageChangeItemCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageChangeItemCmd& default_instance();
  void Swap(CGMMessageChangeItemCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageChangeItemCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageChangeItemCmd& from);
  void MergeFrom(const CGMMessageChangeItemCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 server_id = 3;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional int32 item_code = 5;
  inline bool has_item_code() const;
  inline void clear_item_code();
  static const int kItemCodeFieldNumber = 5;
  inline ::google::protobuf::int32 item_code() const;
  inline void set_item_code(::google::protobuf::int32 value);
  
  // optional int32 item_num = 6;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 6;
  inline ::google::protobuf::int32 item_num() const;
  inline void set_item_num(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 item_code_;
  ::google::protobuf::int32 item_num_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageChangeItemCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageDeleteRoleCmd : public ::google::protobuf::Message {
 public:
  CGMMessageDeleteRoleCmd();
  virtual ~CGMMessageDeleteRoleCmd();
  
  CGMMessageDeleteRoleCmd(const CGMMessageDeleteRoleCmd& from);
  
  inline CGMMessageDeleteRoleCmd& operator=(const CGMMessageDeleteRoleCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageDeleteRoleCmd& default_instance();
  void Swap(CGMMessageDeleteRoleCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageDeleteRoleCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageDeleteRoleCmd& from);
  void MergeFrom(const CGMMessageDeleteRoleCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageDeleteRoleCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageClearBagCmd : public ::google::protobuf::Message {
 public:
  CGMMessageClearBagCmd();
  virtual ~CGMMessageClearBagCmd();
  
  CGMMessageClearBagCmd(const CGMMessageClearBagCmd& from);
  
  inline CGMMessageClearBagCmd& operator=(const CGMMessageClearBagCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageClearBagCmd& default_instance();
  void Swap(CGMMessageClearBagCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageClearBagCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageClearBagCmd& from);
  void MergeFrom(const CGMMessageClearBagCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);
  
  // optional string bag_name = 4;
  inline bool has_bag_name() const;
  inline void clear_bag_name();
  static const int kBagNameFieldNumber = 4;
  inline const ::std::string& bag_name() const;
  inline void set_bag_name(const ::std::string& value);
  inline void set_bag_name(const char* value);
  inline void set_bag_name(const char* value, size_t size);
  inline ::std::string* mutable_bag_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 role_id_;
  ::std::string* bag_name_;
  static const ::std::string _default_bag_name_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageClearBagCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageChangePetCmd : public ::google::protobuf::Message {
 public:
  CGMMessageChangePetCmd();
  virtual ~CGMMessageChangePetCmd();
  
  CGMMessageChangePetCmd(const CGMMessageChangePetCmd& from);
  
  inline CGMMessageChangePetCmd& operator=(const CGMMessageChangePetCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageChangePetCmd& default_instance();
  void Swap(CGMMessageChangePetCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageChangePetCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageChangePetCmd& from);
  void MergeFrom(const CGMMessageChangePetCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional string user_name = 4;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 4;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::std::string* user_name_;
  static const ::std::string _default_user_name_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageChangePetCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageSetOLGMAccountCmd : public ::google::protobuf::Message {
 public:
  CGMMessageSetOLGMAccountCmd();
  virtual ~CGMMessageSetOLGMAccountCmd();
  
  CGMMessageSetOLGMAccountCmd(const CGMMessageSetOLGMAccountCmd& from);
  
  inline CGMMessageSetOLGMAccountCmd& operator=(const CGMMessageSetOLGMAccountCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageSetOLGMAccountCmd& default_instance();
  void Swap(CGMMessageSetOLGMAccountCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageSetOLGMAccountCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageSetOLGMAccountCmd& from);
  void MergeFrom(const CGMMessageSetOLGMAccountCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);
  
  // optional string password = 4;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 4;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 user_id_;
  ::std::string* password_;
  static const ::std::string _default_password_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageSetOLGMAccountCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageIbInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageIbInfoCmd();
  virtual ~CGMMessageIbInfoCmd();
  
  CGMMessageIbInfoCmd(const CGMMessageIbInfoCmd& from);
  
  inline CGMMessageIbInfoCmd& operator=(const CGMMessageIbInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageIbInfoCmd& default_instance();
  void Swap(CGMMessageIbInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageIbInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageIbInfoCmd& from);
  void MergeFrom(const CGMMessageIbInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 3;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 item_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageIbInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class PBIbItem : public ::google::protobuf::Message {
 public:
  PBIbItem();
  virtual ~PBIbItem();
  
  PBIbItem(const PBIbItem& from);
  
  inline PBIbItem& operator=(const PBIbItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBIbItem& default_instance();
  void Swap(PBIbItem* other);
  
  // implements Message ----------------------------------------------
  
  PBIbItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBIbItem& from);
  void MergeFrom(const PBIbItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional string item_location = 2;
  inline bool has_item_location() const;
  inline void clear_item_location();
  static const int kItemLocationFieldNumber = 2;
  inline const ::std::string& item_location() const;
  inline void set_item_location(const ::std::string& value);
  inline void set_item_location(const char* value);
  inline void set_item_location(const char* value, size_t size);
  inline ::std::string* mutable_item_location();
  
  // optional uint32 pay_type = 3;
  inline bool has_pay_type() const;
  inline void clear_pay_type();
  static const int kPayTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 pay_type() const;
  inline void set_pay_type(::google::protobuf::uint32 value);
  
  // optional uint32 item_type = 4;
  inline bool has_item_type() const;
  inline void clear_item_type();
  static const int kItemTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 item_type() const;
  inline void set_item_type(::google::protobuf::uint32 value);
  
  // optional uint32 item_limit = 5;
  inline bool has_item_limit() const;
  inline void clear_item_limit();
  static const int kItemLimitFieldNumber = 5;
  inline ::google::protobuf::uint32 item_limit() const;
  inline void set_item_limit(::google::protobuf::uint32 value);
  
  // optional uint32 price = 6;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 6;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 discount = 7;
  inline bool has_discount() const;
  inline void clear_discount();
  static const int kDiscountFieldNumber = 7;
  inline ::google::protobuf::uint32 discount() const;
  inline void set_discount(::google::protobuf::uint32 value);
  
  // optional uint32 start_time = 8;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);
  
  // optional uint32 sale_room = 9;
  inline bool has_sale_room() const;
  inline void clear_sale_room();
  static const int kSaleRoomFieldNumber = 9;
  inline ::google::protobuf::uint32 sale_room() const;
  inline void set_sale_room(::google::protobuf::uint32 value);
  
  // optional uint32 on_sale = 10;
  inline bool has_on_sale() const;
  inline void clear_on_sale();
  static const int kOnSaleFieldNumber = 10;
  inline ::google::protobuf::uint32 on_sale() const;
  inline void set_on_sale(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 item_id_;
  ::std::string* item_location_;
  static const ::std::string _default_item_location_;
  ::google::protobuf::uint32 pay_type_;
  ::google::protobuf::uint32 item_type_;
  ::google::protobuf::uint32 item_limit_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 discount_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 sale_room_;
  ::google::protobuf::uint32 on_sale_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBIbItem* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageIbInfoResult : public ::google::protobuf::Message {
 public:
  CGMMessageIbInfoResult();
  virtual ~CGMMessageIbInfoResult();
  
  CGMMessageIbInfoResult(const CGMMessageIbInfoResult& from);
  
  inline CGMMessageIbInfoResult& operator=(const CGMMessageIbInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageIbInfoResult& default_instance();
  void Swap(CGMMessageIbInfoResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageIbInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageIbInfoResult& from);
  void MergeFrom(const CGMMessageIbInfoResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 isall = 3;
  inline bool has_isall() const;
  inline void clear_isall();
  static const int kIsallFieldNumber = 3;
  inline ::google::protobuf::uint32 isall() const;
  inline void set_isall(::google::protobuf::uint32 value);
  
  // repeated .PBIbItem ibitems = 4;
  inline int ibitems_size() const;
  inline void clear_ibitems();
  static const int kIbitemsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbItem >& ibitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbItem >* mutable_ibitems();
  inline const ::PBIbItem& ibitems(int index) const;
  inline ::PBIbItem* mutable_ibitems(int index);
  inline ::PBIbItem* add_ibitems();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 isall_;
  ::google::protobuf::RepeatedPtrField< ::PBIbItem > ibitems_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageIbInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageSetIbPriceCmd : public ::google::protobuf::Message {
 public:
  CGMMessageSetIbPriceCmd();
  virtual ~CGMMessageSetIbPriceCmd();
  
  CGMMessageSetIbPriceCmd(const CGMMessageSetIbPriceCmd& from);
  
  inline CGMMessageSetIbPriceCmd& operator=(const CGMMessageSetIbPriceCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageSetIbPriceCmd& default_instance();
  void Swap(CGMMessageSetIbPriceCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageSetIbPriceCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageSetIbPriceCmd& from);
  void MergeFrom(const CGMMessageSetIbPriceCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 3;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional uint32 price = 4;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 limit_num = 6;
  inline bool has_limit_num() const;
  inline void clear_limit_num();
  static const int kLimitNumFieldNumber = 6;
  inline ::google::protobuf::uint32 limit_num() const;
  inline void set_limit_num(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 limit_num_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageSetIbPriceCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageSetIbLocationCmd : public ::google::protobuf::Message {
 public:
  CGMMessageSetIbLocationCmd();
  virtual ~CGMMessageSetIbLocationCmd();
  
  CGMMessageSetIbLocationCmd(const CGMMessageSetIbLocationCmd& from);
  
  inline CGMMessageSetIbLocationCmd& operator=(const CGMMessageSetIbLocationCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageSetIbLocationCmd& default_instance();
  void Swap(CGMMessageSetIbLocationCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageSetIbLocationCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageSetIbLocationCmd& from);
  void MergeFrom(const CGMMessageSetIbLocationCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::std::string& pos() const;
  inline void set_pos(const ::std::string& value);
  inline void set_pos(const char* value);
  inline void set_pos(const char* value, size_t size);
  inline ::std::string* mutable_pos();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* pos_;
  static const ::std::string _default_pos_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageSetIbLocationCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageIbOnSaleCmd : public ::google::protobuf::Message {
 public:
  CGMMessageIbOnSaleCmd();
  virtual ~CGMMessageIbOnSaleCmd();
  
  CGMMessageIbOnSaleCmd(const CGMMessageIbOnSaleCmd& from);
  
  inline CGMMessageIbOnSaleCmd& operator=(const CGMMessageIbOnSaleCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageIbOnSaleCmd& default_instance();
  void Swap(CGMMessageIbOnSaleCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageIbOnSaleCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageIbOnSaleCmd& from);
  void MergeFrom(const CGMMessageIbOnSaleCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 3;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional string pos = 4;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 4;
  inline const ::std::string& pos() const;
  inline void set_pos(const ::std::string& value);
  inline void set_pos(const char* value);
  inline void set_pos(const char* value, size_t size);
  inline ::std::string* mutable_pos();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 item_id_;
  ::std::string* pos_;
  static const ::std::string _default_pos_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageIbOnSaleCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageIbNotSaleCmd : public ::google::protobuf::Message {
 public:
  CGMMessageIbNotSaleCmd();
  virtual ~CGMMessageIbNotSaleCmd();
  
  CGMMessageIbNotSaleCmd(const CGMMessageIbNotSaleCmd& from);
  
  inline CGMMessageIbNotSaleCmd& operator=(const CGMMessageIbNotSaleCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageIbNotSaleCmd& default_instance();
  void Swap(CGMMessageIbNotSaleCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageIbNotSaleCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageIbNotSaleCmd& from);
  void MergeFrom(const CGMMessageIbNotSaleCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 3;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 item_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageIbNotSaleCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageIbDescriptCmd : public ::google::protobuf::Message {
 public:
  CGMMessageIbDescriptCmd();
  virtual ~CGMMessageIbDescriptCmd();
  
  CGMMessageIbDescriptCmd(const CGMMessageIbDescriptCmd& from);
  
  inline CGMMessageIbDescriptCmd& operator=(const CGMMessageIbDescriptCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageIbDescriptCmd& default_instance();
  void Swap(CGMMessageIbDescriptCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageIbDescriptCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageIbDescriptCmd& from);
  void MergeFrom(const CGMMessageIbDescriptCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 3;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // optional string description = 4;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 4;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 item_id_;
  ::std::string* description_;
  static const ::std::string _default_description_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageIbDescriptCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageIpBindCmd : public ::google::protobuf::Message {
 public:
  CGMMessageIpBindCmd();
  virtual ~CGMMessageIpBindCmd();
  
  CGMMessageIpBindCmd(const CGMMessageIpBindCmd& from);
  
  inline CGMMessageIpBindCmd& operator=(const CGMMessageIpBindCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageIpBindCmd& default_instance();
  void Swap(CGMMessageIpBindCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageIpBindCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageIpBindCmd& from);
  void MergeFrom(const CGMMessageIpBindCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);
  
  // optional string ip = 4;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 4;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  
  // optional uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 user_id_;
  ::std::string* ip_;
  static const ::std::string _default_ip_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageIpBindCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleProtoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleProtoCmd();
  virtual ~CGMMessageRoleProtoCmd();
  
  CGMMessageRoleProtoCmd(const CGMMessageRoleProtoCmd& from);
  
  inline CGMMessageRoleProtoCmd& operator=(const CGMMessageRoleProtoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleProtoCmd& default_instance();
  void Swap(CGMMessageRoleProtoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleProtoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleProtoCmd& from);
  void MergeFrom(const CGMMessageRoleProtoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional string field_name = 4;
  inline bool has_field_name() const;
  inline void clear_field_name();
  static const int kFieldNameFieldNumber = 4;
  inline const ::std::string& field_name() const;
  inline void set_field_name(const ::std::string& value);
  inline void set_field_name(const char* value);
  inline void set_field_name(const char* value, size_t size);
  inline ::std::string* mutable_field_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::std::string* field_name_;
  static const ::std::string _default_field_name_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleProtoCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleEquipmentCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleEquipmentCmd();
  virtual ~CGMMessageRoleEquipmentCmd();
  
  CGMMessageRoleEquipmentCmd(const CGMMessageRoleEquipmentCmd& from);
  
  inline CGMMessageRoleEquipmentCmd& operator=(const CGMMessageRoleEquipmentCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleEquipmentCmd& default_instance();
  void Swap(CGMMessageRoleEquipmentCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleEquipmentCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleEquipmentCmd& from);
  void MergeFrom(const CGMMessageRoleEquipmentCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleEquipmentCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRolePackInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRolePackInfoCmd();
  virtual ~CGMMessageRolePackInfoCmd();
  
  CGMMessageRolePackInfoCmd(const CGMMessageRolePackInfoCmd& from);
  
  inline CGMMessageRolePackInfoCmd& operator=(const CGMMessageRolePackInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRolePackInfoCmd& default_instance();
  void Swap(CGMMessageRolePackInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRolePackInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRolePackInfoCmd& from);
  void MergeFrom(const CGMMessageRolePackInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRolePackInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleItemInPackCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleItemInPackCmd();
  virtual ~CGMMessageRoleItemInPackCmd();
  
  CGMMessageRoleItemInPackCmd(const CGMMessageRoleItemInPackCmd& from);
  
  inline CGMMessageRoleItemInPackCmd& operator=(const CGMMessageRoleItemInPackCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleItemInPackCmd& default_instance();
  void Swap(CGMMessageRoleItemInPackCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleItemInPackCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleItemInPackCmd& from);
  void MergeFrom(const CGMMessageRoleItemInPackCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 4;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 item_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleItemInPackCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleSkillInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleSkillInfoCmd();
  virtual ~CGMMessageRoleSkillInfoCmd();
  
  CGMMessageRoleSkillInfoCmd(const CGMMessageRoleSkillInfoCmd& from);
  
  inline CGMMessageRoleSkillInfoCmd& operator=(const CGMMessageRoleSkillInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleSkillInfoCmd& default_instance();
  void Swap(CGMMessageRoleSkillInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleSkillInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleSkillInfoCmd& from);
  void MergeFrom(const CGMMessageRoleSkillInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleSkillInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleSkillDetailCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleSkillDetailCmd();
  virtual ~CGMMessageRoleSkillDetailCmd();
  
  CGMMessageRoleSkillDetailCmd(const CGMMessageRoleSkillDetailCmd& from);
  
  inline CGMMessageRoleSkillDetailCmd& operator=(const CGMMessageRoleSkillDetailCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleSkillDetailCmd& default_instance();
  void Swap(CGMMessageRoleSkillDetailCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleSkillDetailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleSkillDetailCmd& from);
  void MergeFrom(const CGMMessageRoleSkillDetailCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional uint32 skill_id = 4;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 4;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 skill_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleSkillDetailCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleEquipmentResult : public ::google::protobuf::Message {
 public:
  CGMMessageRoleEquipmentResult();
  virtual ~CGMMessageRoleEquipmentResult();
  
  CGMMessageRoleEquipmentResult(const CGMMessageRoleEquipmentResult& from);
  
  inline CGMMessageRoleEquipmentResult& operator=(const CGMMessageRoleEquipmentResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleEquipmentResult& default_instance();
  void Swap(CGMMessageRoleEquipmentResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleEquipmentResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleEquipmentResult& from);
  void MergeFrom(const CGMMessageRoleEquipmentResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBItemBox proto = 3;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 3;
  inline const ::PBItemBox& proto() const;
  inline ::PBItemBox* mutable_proto();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBItemBox* proto_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleEquipmentResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRolePackInfoResult : public ::google::protobuf::Message {
 public:
  CGMMessageRolePackInfoResult();
  virtual ~CGMMessageRolePackInfoResult();
  
  CGMMessageRolePackInfoResult(const CGMMessageRolePackInfoResult& from);
  
  inline CGMMessageRolePackInfoResult& operator=(const CGMMessageRolePackInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRolePackInfoResult& default_instance();
  void Swap(CGMMessageRolePackInfoResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRolePackInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRolePackInfoResult& from);
  void MergeFrom(const CGMMessageRolePackInfoResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBItemBox proto = 3;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 3;
  inline const ::PBItemBox& proto() const;
  inline ::PBItemBox* mutable_proto();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBItemBox* proto_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRolePackInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleItemInPackResult : public ::google::protobuf::Message {
 public:
  CGMMessageRoleItemInPackResult();
  virtual ~CGMMessageRoleItemInPackResult();
  
  CGMMessageRoleItemInPackResult(const CGMMessageRoleItemInPackResult& from);
  
  inline CGMMessageRoleItemInPackResult& operator=(const CGMMessageRoleItemInPackResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleItemInPackResult& default_instance();
  void Swap(CGMMessageRoleItemInPackResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleItemInPackResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleItemInPackResult& from);
  void MergeFrom(const CGMMessageRoleItemInPackResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBItemObject proto = 3;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 3;
  inline const ::PBItemObject& proto() const;
  inline ::PBItemObject* mutable_proto();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBItemObject* proto_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleItemInPackResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleSkillInfoResult : public ::google::protobuf::Message {
 public:
  CGMMessageRoleSkillInfoResult();
  virtual ~CGMMessageRoleSkillInfoResult();
  
  CGMMessageRoleSkillInfoResult(const CGMMessageRoleSkillInfoResult& from);
  
  inline CGMMessageRoleSkillInfoResult& operator=(const CGMMessageRoleSkillInfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleSkillInfoResult& default_instance();
  void Swap(CGMMessageRoleSkillInfoResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleSkillInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleSkillInfoResult& from);
  void MergeFrom(const CGMMessageRoleSkillInfoResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBSkillList proto = 3;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 3;
  inline const ::PBSkillList& proto() const;
  inline ::PBSkillList* mutable_proto();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBSkillList* proto_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleSkillInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleSkillDetailResult : public ::google::protobuf::Message {
 public:
  CGMMessageRoleSkillDetailResult();
  virtual ~CGMMessageRoleSkillDetailResult();
  
  CGMMessageRoleSkillDetailResult(const CGMMessageRoleSkillDetailResult& from);
  
  inline CGMMessageRoleSkillDetailResult& operator=(const CGMMessageRoleSkillDetailResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleSkillDetailResult& default_instance();
  void Swap(CGMMessageRoleSkillDetailResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleSkillDetailResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleSkillDetailResult& from);
  void MergeFrom(const CGMMessageRoleSkillDetailResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBSkillObject proto = 3;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 3;
  inline const ::PBSkillObject& proto() const;
  inline ::PBSkillObject* mutable_proto();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBSkillObject* proto_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleSkillDetailResult* default_instance_;
};
// -------------------------------------------------------------------

class CMessageActivityListRequest : public ::google::protobuf::Message {
 public:
  CMessageActivityListRequest();
  virtual ~CMessageActivityListRequest();
  
  CMessageActivityListRequest(const CMessageActivityListRequest& from);
  
  inline CMessageActivityListRequest& operator=(const CMessageActivityListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageActivityListRequest& default_instance();
  void Swap(CMessageActivityListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageActivityListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageActivityListRequest& from);
  void MergeFrom(const CMessageActivityListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageActivityListRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBActivity : public ::google::protobuf::Message {
 public:
  PBActivity();
  virtual ~PBActivity();
  
  PBActivity(const PBActivity& from);
  
  inline PBActivity& operator=(const PBActivity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBActivity& default_instance();
  void Swap(PBActivity* other);
  
  // implements Message ----------------------------------------------
  
  PBActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBActivity& from);
  void MergeFrom(const PBActivity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MenuID = 1;
  inline bool has_menuid() const;
  inline void clear_menuid();
  static const int kMenuIDFieldNumber = 1;
  inline ::google::protobuf::uint32 menuid() const;
  inline void set_menuid(::google::protobuf::uint32 value);
  
  // optional string Desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  
  // optional uint32 BeginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);
  
  // optional uint32 EndTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 menuid_;
  ::std::string* desc_;
  static const ::std::string _default_desc_;
  ::google::protobuf::uint32 begintime_;
  ::google::protobuf::uint32 endtime_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBActivity* default_instance_;
};
// -------------------------------------------------------------------

class CMessageActivityListResponse : public ::google::protobuf::Message {
 public:
  CMessageActivityListResponse();
  virtual ~CMessageActivityListResponse();
  
  CMessageActivityListResponse(const CMessageActivityListResponse& from);
  
  inline CMessageActivityListResponse& operator=(const CMessageActivityListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageActivityListResponse& default_instance();
  void Swap(CMessageActivityListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageActivityListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageActivityListResponse& from);
  void MergeFrom(const CMessageActivityListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // repeated .PBActivity activity = 2;
  inline int activity_size() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBActivity >& activity() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBActivity >* mutable_activity();
  inline const ::PBActivity& activity(int index) const;
  inline ::PBActivity* mutable_activity(int index);
  inline ::PBActivity* add_activity();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::RepeatedPtrField< ::PBActivity > activity_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageActivityListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserItemListRequest : public ::google::protobuf::Message {
 public:
  CMessageUserItemListRequest();
  virtual ~CMessageUserItemListRequest();
  
  CMessageUserItemListRequest(const CMessageUserItemListRequest& from);
  
  inline CMessageUserItemListRequest& operator=(const CMessageUserItemListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserItemListRequest& default_instance();
  void Swap(CMessageUserItemListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserItemListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserItemListRequest& from);
  void MergeFrom(const CMessageUserItemListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 MenuID = 3;
  inline bool has_menuid() const;
  inline void clear_menuid();
  static const int kMenuIDFieldNumber = 3;
  inline ::google::protobuf::uint32 menuid() const;
  inline void set_menuid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleLevel = 4;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRoleLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::uint32 value);
  
  // optional uint32 RoleMetier = 5;
  inline bool has_rolemetier() const;
  inline void clear_rolemetier();
  static const int kRoleMetierFieldNumber = 5;
  inline ::google::protobuf::uint32 rolemetier() const;
  inline void set_rolemetier(::google::protobuf::uint32 value);
  
  // optional uint32 RoleGender = 6;
  inline bool has_rolegender() const;
  inline void clear_rolegender();
  static const int kRoleGenderFieldNumber = 6;
  inline ::google::protobuf::uint32 rolegender() const;
  inline void set_rolegender(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 menuid_;
  ::google::protobuf::uint32 rolelevel_;
  ::google::protobuf::uint32 rolemetier_;
  ::google::protobuf::uint32 rolegender_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserItemListRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBActivityItem : public ::google::protobuf::Message {
 public:
  PBActivityItem();
  virtual ~PBActivityItem();
  
  PBActivityItem(const PBActivityItem& from);
  
  inline PBActivityItem& operator=(const PBActivityItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBActivityItem& default_instance();
  void Swap(PBActivityItem* other);
  
  // implements Message ----------------------------------------------
  
  PBActivityItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBActivityItem& from);
  void MergeFrom(const PBActivityItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string ItemCode = 1;
  inline bool has_itemcode() const;
  inline void clear_itemcode();
  static const int kItemCodeFieldNumber = 1;
  inline const ::std::string& itemcode() const;
  inline void set_itemcode(const ::std::string& value);
  inline void set_itemcode(const char* value);
  inline void set_itemcode(const char* value, size_t size);
  inline ::std::string* mutable_itemcode();
  
  // optional uint32 Number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
  // optional uint32 ActivityID = 3;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* itemcode_;
  static const ::std::string _default_itemcode_;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::uint32 activityid_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBActivityItem* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserItemListResponse : public ::google::protobuf::Message {
 public:
  CMessageUserItemListResponse();
  virtual ~CMessageUserItemListResponse();
  
  CMessageUserItemListResponse(const CMessageUserItemListResponse& from);
  
  inline CMessageUserItemListResponse& operator=(const CMessageUserItemListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserItemListResponse& default_instance();
  void Swap(CMessageUserItemListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserItemListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserItemListResponse& from);
  void MergeFrom(const CMessageUserItemListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional uint32 MenuID = 2;
  inline bool has_menuid() const;
  inline void clear_menuid();
  static const int kMenuIDFieldNumber = 2;
  inline ::google::protobuf::uint32 menuid() const;
  inline void set_menuid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // repeated .PBActivityItem items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBActivityItem >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBActivityItem >* mutable_items();
  inline const ::PBActivityItem& items(int index) const;
  inline ::PBActivityItem* mutable_items(int index);
  inline ::PBActivityItem* add_items();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 menuid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::RepeatedPtrField< ::PBActivityItem > items_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserItemListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserItemMinusRequest : public ::google::protobuf::Message {
 public:
  CMessageUserItemMinusRequest();
  virtual ~CMessageUserItemMinusRequest();
  
  CMessageUserItemMinusRequest(const CMessageUserItemMinusRequest& from);
  
  inline CMessageUserItemMinusRequest& operator=(const CMessageUserItemMinusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserItemMinusRequest& default_instance();
  void Swap(CMessageUserItemMinusRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserItemMinusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserItemMinusRequest& from);
  void MergeFrom(const CMessageUserItemMinusRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 ActivityID = 3;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);
  
  // optional string ItemCode = 4;
  inline bool has_itemcode() const;
  inline void clear_itemcode();
  static const int kItemCodeFieldNumber = 4;
  inline const ::std::string& itemcode() const;
  inline void set_itemcode(const ::std::string& value);
  inline void set_itemcode(const char* value);
  inline void set_itemcode(const char* value, size_t size);
  inline ::std::string* mutable_itemcode();
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 RoleLevel = 6;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRoleLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::uint32 value);
  
  // optional uint32 RoleMetier = 7;
  inline bool has_rolemetier() const;
  inline void clear_rolemetier();
  static const int kRoleMetierFieldNumber = 7;
  inline ::google::protobuf::uint32 rolemetier() const;
  inline void set_rolemetier(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 activityid_;
  ::std::string* itemcode_;
  static const ::std::string _default_itemcode_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 rolelevel_;
  ::google::protobuf::uint32 rolemetier_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserItemMinusRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserItemMinusResponse : public ::google::protobuf::Message {
 public:
  CMessageUserItemMinusResponse();
  virtual ~CMessageUserItemMinusResponse();
  
  CMessageUserItemMinusResponse(const CMessageUserItemMinusResponse& from);
  
  inline CMessageUserItemMinusResponse& operator=(const CMessageUserItemMinusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserItemMinusResponse& default_instance();
  void Swap(CMessageUserItemMinusResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserItemMinusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserItemMinusResponse& from);
  void MergeFrom(const CMessageUserItemMinusResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional int32 MenuID = 2;
  inline bool has_menuid() const;
  inline void clear_menuid();
  static const int kMenuIDFieldNumber = 2;
  inline ::google::protobuf::int32 menuid() const;
  inline void set_menuid(::google::protobuf::int32 value);
  
  // optional int32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);
  
  // optional .PBActivityItem Item = 4;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 4;
  inline const ::PBActivityItem& item() const;
  inline ::PBActivityItem* mutable_item();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 menuid_;
  ::google::protobuf::int32 roleid_;
  ::PBActivityItem* item_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserItemMinusResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleEquipmentDetailCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleEquipmentDetailCmd();
  virtual ~CGMMessageRoleEquipmentDetailCmd();
  
  CGMMessageRoleEquipmentDetailCmd(const CGMMessageRoleEquipmentDetailCmd& from);
  
  inline CGMMessageRoleEquipmentDetailCmd& operator=(const CGMMessageRoleEquipmentDetailCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleEquipmentDetailCmd& default_instance();
  void Swap(CGMMessageRoleEquipmentDetailCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleEquipmentDetailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleEquipmentDetailCmd& from);
  void MergeFrom(const CGMMessageRoleEquipmentDetailCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 4;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 item_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleEquipmentDetailCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleStorageDetailCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleStorageDetailCmd();
  virtual ~CGMMessageRoleStorageDetailCmd();
  
  CGMMessageRoleStorageDetailCmd(const CGMMessageRoleStorageDetailCmd& from);
  
  inline CGMMessageRoleStorageDetailCmd& operator=(const CGMMessageRoleStorageDetailCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleStorageDetailCmd& default_instance();
  void Swap(CGMMessageRoleStorageDetailCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleStorageDetailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleStorageDetailCmd& from);
  void MergeFrom(const CGMMessageRoleStorageDetailCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 4;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 item_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleStorageDetailCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleEquipmentDetailResult : public ::google::protobuf::Message {
 public:
  CGMMessageRoleEquipmentDetailResult();
  virtual ~CGMMessageRoleEquipmentDetailResult();
  
  CGMMessageRoleEquipmentDetailResult(const CGMMessageRoleEquipmentDetailResult& from);
  
  inline CGMMessageRoleEquipmentDetailResult& operator=(const CGMMessageRoleEquipmentDetailResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleEquipmentDetailResult& default_instance();
  void Swap(CGMMessageRoleEquipmentDetailResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleEquipmentDetailResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleEquipmentDetailResult& from);
  void MergeFrom(const CGMMessageRoleEquipmentDetailResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBItemObject proto = 3;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 3;
  inline const ::PBItemObject& proto() const;
  inline ::PBItemObject* mutable_proto();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBItemObject* proto_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleEquipmentDetailResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleStorageDetailResult : public ::google::protobuf::Message {
 public:
  CGMMessageRoleStorageDetailResult();
  virtual ~CGMMessageRoleStorageDetailResult();
  
  CGMMessageRoleStorageDetailResult(const CGMMessageRoleStorageDetailResult& from);
  
  inline CGMMessageRoleStorageDetailResult& operator=(const CGMMessageRoleStorageDetailResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleStorageDetailResult& default_instance();
  void Swap(CGMMessageRoleStorageDetailResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleStorageDetailResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleStorageDetailResult& from);
  void MergeFrom(const CGMMessageRoleStorageDetailResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional .PBItemObject proto = 3;
  inline bool has_proto() const;
  inline void clear_proto();
  static const int kProtoFieldNumber = 3;
  inline const ::PBItemObject& proto() const;
  inline ::PBItemObject* mutable_proto();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::PBItemObject* proto_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleStorageDetailResult* default_instance_;
};
// -------------------------------------------------------------------

class PBSubjectAmount : public ::google::protobuf::Message {
 public:
  PBSubjectAmount();
  virtual ~PBSubjectAmount();
  
  PBSubjectAmount(const PBSubjectAmount& from);
  
  inline PBSubjectAmount& operator=(const PBSubjectAmount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSubjectAmount& default_instance();
  void Swap(PBSubjectAmount* other);
  
  // implements Message ----------------------------------------------
  
  PBSubjectAmount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSubjectAmount& from);
  void MergeFrom(const PBSubjectAmount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SubjectID = 1;
  inline bool has_subjectid() const;
  inline void clear_subjectid();
  static const int kSubjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 subjectid() const;
  inline void set_subjectid(::google::protobuf::uint32 value);
  
  // optional uint32 Amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::uint32 amount() const;
  inline void set_amount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 subjectid_;
  ::google::protobuf::uint32 amount_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSubjectAmount* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFangChenMiResponse : public ::google::protobuf::Message {
 public:
  CMessageFangChenMiResponse();
  virtual ~CMessageFangChenMiResponse();
  
  CMessageFangChenMiResponse(const CMessageFangChenMiResponse& from);
  
  inline CMessageFangChenMiResponse& operator=(const CMessageFangChenMiResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFangChenMiResponse& default_instance();
  void Swap(CMessageFangChenMiResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFangChenMiResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFangChenMiResponse& from);
  void MergeFrom(const CMessageFangChenMiResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated .PBSubjectAmount Subjects = 2;
  inline int subjects_size() const;
  inline void clear_subjects();
  static const int kSubjectsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSubjectAmount >& subjects() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSubjectAmount >* mutable_subjects();
  inline const ::PBSubjectAmount& subjects(int index) const;
  inline ::PBSubjectAmount* mutable_subjects(int index);
  inline ::PBSubjectAmount* add_subjects();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedPtrField< ::PBSubjectAmount > subjects_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFangChenMiResponse* default_instance_;
};
// -------------------------------------------------------------------

class PBFangChenMi : public ::google::protobuf::Message {
 public:
  PBFangChenMi();
  virtual ~PBFangChenMi();
  
  PBFangChenMi(const PBFangChenMi& from);
  
  inline PBFangChenMi& operator=(const PBFangChenMi& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFangChenMi& default_instance();
  void Swap(PBFangChenMi* other);
  
  // implements Message ----------------------------------------------
  
  PBFangChenMi* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFangChenMi& from);
  void MergeFrom(const PBFangChenMi& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 CharLevel = 2;
  inline bool has_charlevel() const;
  inline void clear_charlevel();
  static const int kCharLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 charlevel() const;
  inline void set_charlevel(::google::protobuf::uint32 value);
  
  // optional uint32 CharMetier = 3;
  inline bool has_charmetier() const;
  inline void clear_charmetier();
  static const int kCharMetierFieldNumber = 3;
  inline ::google::protobuf::uint32 charmetier() const;
  inline void set_charmetier(::google::protobuf::uint32 value);
  
  // optional uint32 Money1 = 4;
  inline bool has_money1() const;
  inline void clear_money1();
  static const int kMoney1FieldNumber = 4;
  inline ::google::protobuf::uint32 money1() const;
  inline void set_money1(::google::protobuf::uint32 value);
  
  // optional uint32 Money2 = 5;
  inline bool has_money2() const;
  inline void clear_money2();
  static const int kMoney2FieldNumber = 5;
  inline ::google::protobuf::uint32 money2() const;
  inline void set_money2(::google::protobuf::uint32 value);
  
  // optional uint64 Exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 charlevel_;
  ::google::protobuf::uint32 charmetier_;
  ::google::protobuf::uint32 money1_;
  ::google::protobuf::uint32 money2_;
  ::google::protobuf::uint64 exp_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBFangChenMi* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFangChenMiRequest : public ::google::protobuf::Message {
 public:
  CMessageFangChenMiRequest();
  virtual ~CMessageFangChenMiRequest();
  
  CMessageFangChenMiRequest(const CMessageFangChenMiRequest& from);
  
  inline CMessageFangChenMiRequest& operator=(const CMessageFangChenMiRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFangChenMiRequest& default_instance();
  void Swap(CMessageFangChenMiRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFangChenMiRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFangChenMiRequest& from);
  void MergeFrom(const CMessageFangChenMiRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBFangChenMi RoleDetail = 1;
  inline int roledetail_size() const;
  inline void clear_roledetail();
  static const int kRoleDetailFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBFangChenMi >& roledetail() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFangChenMi >* mutable_roledetail();
  inline const ::PBFangChenMi& roledetail(int index) const;
  inline ::PBFangChenMi* mutable_roledetail(int index);
  inline ::PBFangChenMi* add_roledetail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBFangChenMi > roledetail_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFangChenMiRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFCMPlayerListNotify : public ::google::protobuf::Message {
 public:
  CMessageFCMPlayerListNotify();
  virtual ~CMessageFCMPlayerListNotify();
  
  CMessageFCMPlayerListNotify(const CMessageFCMPlayerListNotify& from);
  
  inline CMessageFCMPlayerListNotify& operator=(const CMessageFCMPlayerListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFCMPlayerListNotify& default_instance();
  void Swap(CMessageFCMPlayerListNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFCMPlayerListNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFCMPlayerListNotify& from);
  void MergeFrom(const CMessageFCMPlayerListNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 ReportPlayer = 1;
  inline int reportplayer_size() const;
  inline void clear_reportplayer();
  static const int kReportPlayerFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& reportplayer() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_reportplayer();
  inline ::google::protobuf::uint32 reportplayer(int index) const;
  inline void set_reportplayer(int index, ::google::protobuf::uint32 value);
  inline void add_reportplayer(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reportplayer_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFCMPlayerListNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFCMPlayerResetRequest : public ::google::protobuf::Message {
 public:
  CMessageFCMPlayerResetRequest();
  virtual ~CMessageFCMPlayerResetRequest();
  
  CMessageFCMPlayerResetRequest(const CMessageFCMPlayerResetRequest& from);
  
  inline CMessageFCMPlayerResetRequest& operator=(const CMessageFCMPlayerResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFCMPlayerResetRequest& default_instance();
  void Swap(CMessageFCMPlayerResetRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFCMPlayerResetRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFCMPlayerResetRequest& from);
  void MergeFrom(const CMessageFCMPlayerResetRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 Seconds = 2;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 2;
  inline ::google::protobuf::uint32 seconds() const;
  inline void set_seconds(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 seconds_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFCMPlayerResetRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeGateNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeGateNotify();
  virtual ~CMessageChangeGateNotify();
  
  CMessageChangeGateNotify(const CMessageChangeGateNotify& from);
  
  inline CMessageChangeGateNotify& operator=(const CMessageChangeGateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeGateNotify& default_instance();
  void Swap(CMessageChangeGateNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeGateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeGateNotify& from);
  void MergeFrom(const CMessageChangeGateNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional int32 Param1 = 3;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 3;
  inline ::google::protobuf::int32 param1() const;
  inline void set_param1(::google::protobuf::int32 value);
  
  // optional int32 Param2 = 4;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 4;
  inline ::google::protobuf::int32 param2() const;
  inline void set_param2(::google::protobuf::int32 value);
  
  // optional int32 Param3 = 5;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 5;
  inline ::google::protobuf::int32 param3() const;
  inline void set_param3(::google::protobuf::int32 value);
  
  // optional int32 Param4 = 6;
  inline bool has_param4() const;
  inline void clear_param4();
  static const int kParam4FieldNumber = 6;
  inline ::google::protobuf::int32 param4() const;
  inline void set_param4(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::int32 param3_;
  ::google::protobuf::int32 param4_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeGateNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageResetRolePasswordRequest : public ::google::protobuf::Message {
 public:
  CMessageResetRolePasswordRequest();
  virtual ~CMessageResetRolePasswordRequest();
  
  CMessageResetRolePasswordRequest(const CMessageResetRolePasswordRequest& from);
  
  inline CMessageResetRolePasswordRequest& operator=(const CMessageResetRolePasswordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageResetRolePasswordRequest& default_instance();
  void Swap(CMessageResetRolePasswordRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageResetRolePasswordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageResetRolePasswordRequest& from);
  void MergeFrom(const CMessageResetRolePasswordRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageResetRolePasswordRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageResetRolePasswordResponse : public ::google::protobuf::Message {
 public:
  CMessageResetRolePasswordResponse();
  virtual ~CMessageResetRolePasswordResponse();
  
  CMessageResetRolePasswordResponse(const CMessageResetRolePasswordResponse& from);
  
  inline CMessageResetRolePasswordResponse& operator=(const CMessageResetRolePasswordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageResetRolePasswordResponse& default_instance();
  void Swap(CMessageResetRolePasswordResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageResetRolePasswordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageResetRolePasswordResponse& from);
  void MergeFrom(const CMessageResetRolePasswordResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 Errcode = 3;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 3;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageResetRolePasswordResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleItemOperatedCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleItemOperatedCmd();
  virtual ~CGMMessageRoleItemOperatedCmd();
  
  CGMMessageRoleItemOperatedCmd(const CGMMessageRoleItemOperatedCmd& from);
  
  inline CGMMessageRoleItemOperatedCmd& operator=(const CGMMessageRoleItemOperatedCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleItemOperatedCmd& default_instance();
  void Swap(CGMMessageRoleItemOperatedCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleItemOperatedCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleItemOperatedCmd& from);
  void MergeFrom(const CGMMessageRoleItemOperatedCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional int32 op_type = 4;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 4;
  inline ::google::protobuf::int32 op_type() const;
  inline void set_op_type(::google::protobuf::int32 value);
  
  // optional int32 item_id = 5;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 5;
  inline ::google::protobuf::int32 item_id() const;
  inline void set_item_id(::google::protobuf::int32 value);
  
  // optional uint64 item_guid = 6;
  inline bool has_item_guid() const;
  inline void clear_item_guid();
  static const int kItemGuidFieldNumber = 6;
  inline ::google::protobuf::uint64 item_guid() const;
  inline void set_item_guid(::google::protobuf::uint64 value);
  
  // optional string start_time = 7;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 7;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 8;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 8;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
  // optional int32 page = 9;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 9;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 op_type_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::uint64 item_guid_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleItemOperatedCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleMoneyOperateCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleMoneyOperateCmd();
  virtual ~CGMMessageRoleMoneyOperateCmd();
  
  CGMMessageRoleMoneyOperateCmd(const CGMMessageRoleMoneyOperateCmd& from);
  
  inline CGMMessageRoleMoneyOperateCmd& operator=(const CGMMessageRoleMoneyOperateCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleMoneyOperateCmd& default_instance();
  void Swap(CGMMessageRoleMoneyOperateCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleMoneyOperateCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleMoneyOperateCmd& from);
  void MergeFrom(const CGMMessageRoleMoneyOperateCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional int32 op_type = 4;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 4;
  inline ::google::protobuf::int32 op_type() const;
  inline void set_op_type(::google::protobuf::int32 value);
  
  // optional int32 item_type = 5;
  inline bool has_item_type() const;
  inline void clear_item_type();
  static const int kItemTypeFieldNumber = 5;
  inline ::google::protobuf::int32 item_type() const;
  inline void set_item_type(::google::protobuf::int32 value);
  
  // optional string start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
  // optional int32 page = 8;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 8;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 op_type_;
  ::google::protobuf::int32 item_type_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleMoneyOperateCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleExpCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleExpCmd();
  virtual ~CGMMessageRoleExpCmd();
  
  CGMMessageRoleExpCmd(const CGMMessageRoleExpCmd& from);
  
  inline CGMMessageRoleExpCmd& operator=(const CGMMessageRoleExpCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleExpCmd& default_instance();
  void Swap(CGMMessageRoleExpCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleExpCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleExpCmd& from);
  void MergeFrom(const CGMMessageRoleExpCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional int32 op_type = 4;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 4;
  inline ::google::protobuf::int32 op_type() const;
  inline void set_op_type(::google::protobuf::int32 value);
  
  // optional int32 exp_type = 5;
  inline bool has_exp_type() const;
  inline void clear_exp_type();
  static const int kExpTypeFieldNumber = 5;
  inline ::google::protobuf::int32 exp_type() const;
  inline void set_exp_type(::google::protobuf::int32 value);
  
  // optional string start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
  // optional int32 page = 8;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 8;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 op_type_;
  ::google::protobuf::int32 exp_type_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleExpCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleItemLevelUpCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleItemLevelUpCmd();
  virtual ~CGMMessageRoleItemLevelUpCmd();
  
  CGMMessageRoleItemLevelUpCmd(const CGMMessageRoleItemLevelUpCmd& from);
  
  inline CGMMessageRoleItemLevelUpCmd& operator=(const CGMMessageRoleItemLevelUpCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleItemLevelUpCmd& default_instance();
  void Swap(CGMMessageRoleItemLevelUpCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleItemLevelUpCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleItemLevelUpCmd& from);
  void MergeFrom(const CGMMessageRoleItemLevelUpCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 page = 3;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 3;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
  // optional uint32 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional int32 item_id = 5;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 5;
  inline ::google::protobuf::int32 item_id() const;
  inline void set_item_id(::google::protobuf::int32 value);
  
  // optional string start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 page_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 item_id_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleItemLevelUpCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageFreezeMacCmd : public ::google::protobuf::Message {
 public:
  CGMMessageFreezeMacCmd();
  virtual ~CGMMessageFreezeMacCmd();
  
  CGMMessageFreezeMacCmd(const CGMMessageFreezeMacCmd& from);
  
  inline CGMMessageFreezeMacCmd& operator=(const CGMMessageFreezeMacCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageFreezeMacCmd& default_instance();
  void Swap(CGMMessageFreezeMacCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageFreezeMacCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageFreezeMacCmd& from);
  void MergeFrom(const CGMMessageFreezeMacCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string mac = 3;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 3;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* mac_;
  static const ::std::string _default_mac_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageFreezeMacCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUnFreezeMacCmd : public ::google::protobuf::Message {
 public:
  CGMMessageUnFreezeMacCmd();
  virtual ~CGMMessageUnFreezeMacCmd();
  
  CGMMessageUnFreezeMacCmd(const CGMMessageUnFreezeMacCmd& from);
  
  inline CGMMessageUnFreezeMacCmd& operator=(const CGMMessageUnFreezeMacCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUnFreezeMacCmd& default_instance();
  void Swap(CGMMessageUnFreezeMacCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUnFreezeMacCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUnFreezeMacCmd& from);
  void MergeFrom(const CGMMessageUnFreezeMacCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string mac = 3;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 3;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* mac_;
  static const ::std::string _default_mac_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUnFreezeMacCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageCorpsTotalCmd : public ::google::protobuf::Message {
 public:
  CGMMessageCorpsTotalCmd();
  virtual ~CGMMessageCorpsTotalCmd();
  
  CGMMessageCorpsTotalCmd(const CGMMessageCorpsTotalCmd& from);
  
  inline CGMMessageCorpsTotalCmd& operator=(const CGMMessageCorpsTotalCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageCorpsTotalCmd& default_instance();
  void Swap(CGMMessageCorpsTotalCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageCorpsTotalCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageCorpsTotalCmd& from);
  void MergeFrom(const CGMMessageCorpsTotalCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 page = 4;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 4;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageCorpsTotalCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageCorpsDetailCmd : public ::google::protobuf::Message {
 public:
  CGMMessageCorpsDetailCmd();
  virtual ~CGMMessageCorpsDetailCmd();
  
  CGMMessageCorpsDetailCmd(const CGMMessageCorpsDetailCmd& from);
  
  inline CGMMessageCorpsDetailCmd& operator=(const CGMMessageCorpsDetailCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageCorpsDetailCmd& default_instance();
  void Swap(CGMMessageCorpsDetailCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageCorpsDetailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageCorpsDetailCmd& from);
  void MergeFrom(const CGMMessageCorpsDetailCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string corps_name = 3;
  inline bool has_corps_name() const;
  inline void clear_corps_name();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corps_name() const;
  inline void set_corps_name(const ::std::string& value);
  inline void set_corps_name(const char* value);
  inline void set_corps_name(const char* value, size_t size);
  inline ::std::string* mutable_corps_name();
  
  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* corps_name_;
  static const ::std::string _default_corps_name_;
  ::google::protobuf::int32 type_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageCorpsDetailCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageCorpsInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageCorpsInfoCmd();
  virtual ~CGMMessageCorpsInfoCmd();
  
  CGMMessageCorpsInfoCmd(const CGMMessageCorpsInfoCmd& from);
  
  inline CGMMessageCorpsInfoCmd& operator=(const CGMMessageCorpsInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageCorpsInfoCmd& default_instance();
  void Swap(CGMMessageCorpsInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageCorpsInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageCorpsInfoCmd& from);
  void MergeFrom(const CGMMessageCorpsInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string corps_name = 3;
  inline bool has_corps_name() const;
  inline void clear_corps_name();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corps_name() const;
  inline void set_corps_name(const ::std::string& value);
  inline void set_corps_name(const char* value);
  inline void set_corps_name(const char* value, size_t size);
  inline ::std::string* mutable_corps_name();
  
  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
  // optional int32 page = 8;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 8;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* corps_name_;
  static const ::std::string _default_corps_name_;
  ::google::protobuf::int32 type_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageCorpsInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageRoleInfoCmd : public ::google::protobuf::Message {
 public:
  CGMMessageRoleInfoCmd();
  virtual ~CGMMessageRoleInfoCmd();
  
  CGMMessageRoleInfoCmd(const CGMMessageRoleInfoCmd& from);
  
  inline CGMMessageRoleInfoCmd& operator=(const CGMMessageRoleInfoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageRoleInfoCmd& default_instance();
  void Swap(CGMMessageRoleInfoCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageRoleInfoCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageRoleInfoCmd& from);
  void MergeFrom(const CGMMessageRoleInfoCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
  // optional int32 page = 8;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 8;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 type_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageRoleInfoCmd* default_instance_;
};
// -------------------------------------------------------------------

class CGMMsgRoleItemRecoveryCmd : public ::google::protobuf::Message {
 public:
  CGMMsgRoleItemRecoveryCmd();
  virtual ~CGMMsgRoleItemRecoveryCmd();
  
  CGMMsgRoleItemRecoveryCmd(const CGMMsgRoleItemRecoveryCmd& from);
  
  inline CGMMsgRoleItemRecoveryCmd& operator=(const CGMMsgRoleItemRecoveryCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMsgRoleItemRecoveryCmd& default_instance();
  void Swap(CGMMsgRoleItemRecoveryCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMsgRoleItemRecoveryCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMsgRoleItemRecoveryCmd& from);
  void MergeFrom(const CGMMsgRoleItemRecoveryCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional uint64 item_id = 5;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 5;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);
  
  // optional string start_time = 6;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 7;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
  // optional uint32 page = 8;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 8;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 item_id_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  ::google::protobuf::uint32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMsgRoleItemRecoveryCmd* default_instance_;
};
// -------------------------------------------------------------------

class CMessageOfflineSysMailNotify : public ::google::protobuf::Message {
 public:
  CMessageOfflineSysMailNotify();
  virtual ~CMessageOfflineSysMailNotify();
  
  CMessageOfflineSysMailNotify(const CMessageOfflineSysMailNotify& from);
  
  inline CMessageOfflineSysMailNotify& operator=(const CMessageOfflineSysMailNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageOfflineSysMailNotify& default_instance();
  void Swap(CMessageOfflineSysMailNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageOfflineSysMailNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageOfflineSysMailNotify& from);
  void MergeFrom(const CMessageOfflineSysMailNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 MailType = 2;
  inline bool has_mailtype() const;
  inline void clear_mailtype();
  static const int kMailTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 mailtype() const;
  inline void set_mailtype(::google::protobuf::uint32 value);
  
  // optional uint32 AttachMoney = 3;
  inline bool has_attachmoney() const;
  inline void clear_attachmoney();
  static const int kAttachMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 attachmoney() const;
  inline void set_attachmoney(::google::protobuf::uint32 value);
  
  // repeated .PBItemObject AttachItem = 4;
  inline int attachitem_size() const;
  inline void clear_attachitem();
  static const int kAttachItemFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >& attachitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >* mutable_attachitem();
  inline const ::PBItemObject& attachitem(int index) const;
  inline ::PBItemObject* mutable_attachitem(int index);
  inline ::PBItemObject* add_attachitem();
  
  // optional uint32 session_id = 5;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 5;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 6;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 6;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 mailtype_;
  ::google::protobuf::uint32 attachmoney_;
  ::google::protobuf::RepeatedPtrField< ::PBItemObject > attachitem_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageOfflineSysMailNotify* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageSqlQueryResult : public ::google::protobuf::Message {
 public:
  CGMMessageSqlQueryResult();
  virtual ~CGMMessageSqlQueryResult();
  
  CGMMessageSqlQueryResult(const CGMMessageSqlQueryResult& from);
  
  inline CGMMessageSqlQueryResult& operator=(const CGMMessageSqlQueryResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageSqlQueryResult& default_instance();
  void Swap(CGMMessageSqlQueryResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageSqlQueryResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageSqlQueryResult& from);
  void MergeFrom(const CGMMessageSqlQueryResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional .CMessageExecuteSqlResponse3 SqlResult = 4;
  inline bool has_sqlresult() const;
  inline void clear_sqlresult();
  static const int kSqlResultFieldNumber = 4;
  inline const ::CMessageExecuteSqlResponse3& sqlresult() const;
  inline ::CMessageExecuteSqlResponse3* mutable_sqlresult();
  
  // optional uint32 page = 5;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 5;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 type_;
  ::CMessageExecuteSqlResponse3* sqlresult_;
  ::google::protobuf::uint32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageSqlQueryResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageUserInfoByIPCmd : public ::google::protobuf::Message {
 public:
  CGMMessageUserInfoByIPCmd();
  virtual ~CGMMessageUserInfoByIPCmd();
  
  CGMMessageUserInfoByIPCmd(const CGMMessageUserInfoByIPCmd& from);
  
  inline CGMMessageUserInfoByIPCmd& operator=(const CGMMessageUserInfoByIPCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageUserInfoByIPCmd& default_instance();
  void Swap(CGMMessageUserInfoByIPCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageUserInfoByIPCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageUserInfoByIPCmd& from);
  void MergeFrom(const CGMMessageUserInfoByIPCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional string ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  
  // optional string start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline const ::std::string& start_time() const;
  inline void set_start_time(const ::std::string& value);
  inline void set_start_time(const char* value);
  inline void set_start_time(const char* value, size_t size);
  inline ::std::string* mutable_start_time();
  
  // optional string end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline const ::std::string& end_time() const;
  inline void set_end_time(const ::std::string& value);
  inline void set_end_time(const char* value);
  inline void set_end_time(const char* value, size_t size);
  inline ::std::string* mutable_end_time();
  
  // optional int32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 page = 7;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 7;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::std::string* ip_;
  static const ::std::string _default_ip_;
  ::std::string* start_time_;
  static const ::std::string _default_start_time_;
  ::std::string* end_time_;
  static const ::std::string _default_end_time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageUserInfoByIPCmd* default_instance_;
};
// -------------------------------------------------------------------

class PlayerInfo : public ::google::protobuf::Message {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();
  
  PlayerInfo(const PlayerInfo& from);
  
  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfo& default_instance();
  void Swap(PlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional string account_name = 2;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 2;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional string role_name = 4;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 4;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  
  // optional int32 login_time = 5;
  inline bool has_login_time() const;
  inline void clear_login_time();
  static const int kLoginTimeFieldNumber = 5;
  inline ::google::protobuf::int32 login_time() const;
  inline void set_login_time(::google::protobuf::int32 value);
  
  // optional int32 role_level = 6;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 6;
  inline ::google::protobuf::int32 role_level() const;
  inline void set_role_level(::google::protobuf::int32 value);
  
  // optional int32 metier_id = 7;
  inline bool has_metier_id() const;
  inline void clear_metier_id();
  static const int kMetierIdFieldNumber = 7;
  inline ::google::protobuf::int32 metier_id() const;
  inline void set_metier_id(::google::protobuf::int32 value);
  
  // optional int32 cpu_id = 8;
  inline bool has_cpu_id() const;
  inline void clear_cpu_id();
  static const int kCpuIdFieldNumber = 8;
  inline ::google::protobuf::int32 cpu_id() const;
  inline void set_cpu_id(::google::protobuf::int32 value);
  
  // optional int32 disk_id = 9;
  inline bool has_disk_id() const;
  inline void clear_disk_id();
  static const int kDiskIdFieldNumber = 9;
  inline ::google::protobuf::int32 disk_id() const;
  inline void set_disk_id(::google::protobuf::int32 value);
  
  // optional string mac = 10;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 10;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  
  // optional int32 line_id = 11;
  inline bool has_line_id() const;
  inline void clear_line_id();
  static const int kLineIdFieldNumber = 11;
  inline ::google::protobuf::int32 line_id() const;
  inline void set_line_id(::google::protobuf::int32 value);
  
  // optional int32 map_id = 12;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 12;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);
  
  // optional int32 game_id = 13;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 13;
  inline ::google::protobuf::int32 game_id() const;
  inline void set_game_id(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 account_id_;
  ::std::string* account_name_;
  static const ::std::string _default_account_name_;
  ::google::protobuf::uint32 role_id_;
  ::std::string* role_name_;
  static const ::std::string _default_role_name_;
  ::google::protobuf::int32 login_time_;
  ::google::protobuf::int32 role_level_;
  ::google::protobuf::int32 metier_id_;
  ::google::protobuf::int32 cpu_id_;
  ::google::protobuf::int32 disk_id_;
  ::std::string* mac_;
  static const ::std::string _default_mac_;
  ::google::protobuf::int32 line_id_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 game_id_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class IPInfo : public ::google::protobuf::Message {
 public:
  IPInfo();
  virtual ~IPInfo();
  
  IPInfo(const IPInfo& from);
  
  inline IPInfo& operator=(const IPInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPInfo& default_instance();
  void Swap(IPInfo* other);
  
  // implements Message ----------------------------------------------
  
  IPInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IPInfo& from);
  void MergeFrom(const IPInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // optional uint32 role_num = 2;
  inline bool has_role_num() const;
  inline void clear_role_num();
  static const int kRoleNumFieldNumber = 2;
  inline ::google::protobuf::uint32 role_num() const;
  inline void set_role_num(::google::protobuf::uint32 value);
  
  // repeated .PlayerInfo player_info = 3;
  inline int player_info_size() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerInfo >& player_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerInfo >* mutable_player_info();
  inline const ::PlayerInfo& player_info(int index) const;
  inline ::PlayerInfo* mutable_player_info(int index);
  inline ::PlayerInfo* add_player_info();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 role_num_;
  ::google::protobuf::RepeatedPtrField< ::PlayerInfo > player_info_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static IPInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGMMsgUserInfoByIPResult : public ::google::protobuf::Message {
 public:
  CGMMsgUserInfoByIPResult();
  virtual ~CGMMsgUserInfoByIPResult();
  
  CGMMsgUserInfoByIPResult(const CGMMsgUserInfoByIPResult& from);
  
  inline CGMMsgUserInfoByIPResult& operator=(const CGMMsgUserInfoByIPResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMsgUserInfoByIPResult& default_instance();
  void Swap(CGMMsgUserInfoByIPResult* other);
  
  // implements Message ----------------------------------------------
  
  CGMMsgUserInfoByIPResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMsgUserInfoByIPResult& from);
  void MergeFrom(const CGMMsgUserInfoByIPResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // repeated .IPInfo ipinfo = 3;
  inline int ipinfo_size() const;
  inline void clear_ipinfo();
  static const int kIpinfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::IPInfo >& ipinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::IPInfo >* mutable_ipinfo();
  inline const ::IPInfo& ipinfo(int index) const;
  inline ::IPInfo* mutable_ipinfo(int index);
  inline ::IPInfo* add_ipinfo();
  
  // optional uint32 ZeroIP = 4;
  inline bool has_zeroip() const;
  inline void clear_zeroip();
  static const int kZeroIPFieldNumber = 4;
  inline ::google::protobuf::uint32 zeroip() const;
  inline void set_zeroip(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::RepeatedPtrField< ::IPInfo > ipinfo_;
  ::google::protobuf::uint32 zeroip_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMsgUserInfoByIPResult* default_instance_;
};
// -------------------------------------------------------------------

class CGMMessageQueryRoleMailCmd : public ::google::protobuf::Message {
 public:
  CGMMessageQueryRoleMailCmd();
  virtual ~CGMMessageQueryRoleMailCmd();
  
  CGMMessageQueryRoleMailCmd(const CGMMessageQueryRoleMailCmd& from);
  
  inline CGMMessageQueryRoleMailCmd& operator=(const CGMMessageQueryRoleMailCmd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGMMessageQueryRoleMailCmd& default_instance();
  void Swap(CGMMessageQueryRoleMailCmd* other);
  
  // implements Message ----------------------------------------------
  
  CGMMessageQueryRoleMailCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGMMessageQueryRoleMailCmd& from);
  void MergeFrom(const CGMMessageQueryRoleMailCmd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 session_id = 1;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);
  
  // optional uint32 fd = 2;
  inline bool has_fd() const;
  inline void clear_fd();
  static const int kFdFieldNumber = 2;
  inline ::google::protobuf::uint32 fd() const;
  inline void set_fd(::google::protobuf::uint32 value);
  
  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
  // optional int32 page = 4;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 4;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 fd_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::int32 page_;
  friend void  protobuf_AddDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_gmmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_gmmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CGMMessageQueryRoleMailCmd* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CGMMessageKickRoleCmd

// optional uint32 session_id = 1;
inline bool CGMMessageKickRoleCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageKickRoleCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageKickRoleCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageKickRoleCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageKickRoleCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageKickRoleCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageKickRoleCmd::fd() const {
  return fd_;
}
inline void CGMMessageKickRoleCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageKickRoleCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageKickRoleCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageKickRoleCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageKickRoleCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageCmdNormalResult

// optional uint32 session_id = 1;
inline bool CGMMessageCmdNormalResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageCmdNormalResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageCmdNormalResult::session_id() const {
  return session_id_;
}
inline void CGMMessageCmdNormalResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageCmdNormalResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageCmdNormalResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageCmdNormalResult::fd() const {
  return fd_;
}
inline void CGMMessageCmdNormalResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 result = 3;
inline bool CGMMessageCmdNormalResult::has_result() const {
  return _has_bit(2);
}
inline void CGMMessageCmdNormalResult::clear_result() {
  result_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageCmdNormalResult::result() const {
  return result_;
}
inline void CGMMessageCmdNormalResult::set_result(::google::protobuf::int32 value) {
  _set_bit(2);
  result_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleDetailCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleDetailCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleDetailCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleDetailCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleDetailCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleDetailCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleDetailCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleDetailCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleDetailCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageRoleDetailCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleDetailCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageRoleDetailCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleDetailCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 type = 4;
inline bool CGMMessageRoleDetailCmd::has_type() const {
  return _has_bit(3);
}
inline void CGMMessageRoleDetailCmd::clear_type() {
  type_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageRoleDetailCmd::type() const {
  return type_;
}
inline void CGMMessageRoleDetailCmd::set_type(::google::protobuf::int32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// PBRoleInfo

// optional int32 role_id = 1;
inline bool PBRoleInfo::has_role_id() const {
  return _has_bit(0);
}
inline void PBRoleInfo::clear_role_id() {
  role_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PBRoleInfo::role_id() const {
  return role_id_;
}
inline void PBRoleInfo::set_role_id(::google::protobuf::int32 value) {
  _set_bit(0);
  role_id_ = value;
}

// optional int32 role_status = 2;
inline bool PBRoleInfo::has_role_status() const {
  return _has_bit(1);
}
inline void PBRoleInfo::clear_role_status() {
  role_status_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBRoleInfo::role_status() const {
  return role_status_;
}
inline void PBRoleInfo::set_role_status(::google::protobuf::int32 value) {
  _set_bit(1);
  role_status_ = value;
}

// optional int32 account_id = 3;
inline bool PBRoleInfo::has_account_id() const {
  return _has_bit(2);
}
inline void PBRoleInfo::clear_account_id() {
  account_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBRoleInfo::account_id() const {
  return account_id_;
}
inline void PBRoleInfo::set_account_id(::google::protobuf::int32 value) {
  _set_bit(2);
  account_id_ = value;
}

// optional string role_name = 4;
inline bool PBRoleInfo::has_role_name() const {
  return _has_bit(3);
}
inline void PBRoleInfo::clear_role_name() {
  if (role_name_ != &_default_role_name_) {
    role_name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBRoleInfo::role_name() const {
  return *role_name_;
}
inline void PBRoleInfo::set_role_name(const ::std::string& value) {
  _set_bit(3);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void PBRoleInfo::set_role_name(const char* value) {
  _set_bit(3);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void PBRoleInfo::set_role_name(const char* value, size_t size) {
  _set_bit(3);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBRoleInfo::mutable_role_name() {
  _set_bit(3);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}

// optional int32 is_alive = 5;
inline bool PBRoleInfo::has_is_alive() const {
  return _has_bit(4);
}
inline void PBRoleInfo::clear_is_alive() {
  is_alive_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 PBRoleInfo::is_alive() const {
  return is_alive_;
}
inline void PBRoleInfo::set_is_alive(::google::protobuf::int32 value) {
  _set_bit(4);
  is_alive_ = value;
}

// optional int32 gender_id = 6;
inline bool PBRoleInfo::has_gender_id() const {
  return _has_bit(5);
}
inline void PBRoleInfo::clear_gender_id() {
  gender_id_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PBRoleInfo::gender_id() const {
  return gender_id_;
}
inline void PBRoleInfo::set_gender_id(::google::protobuf::int32 value) {
  _set_bit(5);
  gender_id_ = value;
}

// optional int32 metier_id = 7;
inline bool PBRoleInfo::has_metier_id() const {
  return _has_bit(6);
}
inline void PBRoleInfo::clear_metier_id() {
  metier_id_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 PBRoleInfo::metier_id() const {
  return metier_id_;
}
inline void PBRoleInfo::set_metier_id(::google::protobuf::int32 value) {
  _set_bit(6);
  metier_id_ = value;
}

// optional int32 nationality_id = 8;
inline bool PBRoleInfo::has_nationality_id() const {
  return _has_bit(7);
}
inline void PBRoleInfo::clear_nationality_id() {
  nationality_id_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 PBRoleInfo::nationality_id() const {
  return nationality_id_;
}
inline void PBRoleInfo::set_nationality_id(::google::protobuf::int32 value) {
  _set_bit(7);
  nationality_id_ = value;
}

// optional int32 face_type = 9;
inline bool PBRoleInfo::has_face_type() const {
  return _has_bit(8);
}
inline void PBRoleInfo::clear_face_type() {
  face_type_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 PBRoleInfo::face_type() const {
  return face_type_;
}
inline void PBRoleInfo::set_face_type(::google::protobuf::int32 value) {
  _set_bit(8);
  face_type_ = value;
}

// optional int32 line_id = 10;
inline bool PBRoleInfo::has_line_id() const {
  return _has_bit(9);
}
inline void PBRoleInfo::clear_line_id() {
  line_id_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 PBRoleInfo::line_id() const {
  return line_id_;
}
inline void PBRoleInfo::set_line_id(::google::protobuf::int32 value) {
  _set_bit(9);
  line_id_ = value;
}

// optional int32 map_id = 11;
inline bool PBRoleInfo::has_map_id() const {
  return _has_bit(10);
}
inline void PBRoleInfo::clear_map_id() {
  map_id_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 PBRoleInfo::map_id() const {
  return map_id_;
}
inline void PBRoleInfo::set_map_id(::google::protobuf::int32 value) {
  _set_bit(10);
  map_id_ = value;
}

// optional int32 pos_x = 12;
inline bool PBRoleInfo::has_pos_x() const {
  return _has_bit(11);
}
inline void PBRoleInfo::clear_pos_x() {
  pos_x_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 PBRoleInfo::pos_x() const {
  return pos_x_;
}
inline void PBRoleInfo::set_pos_x(::google::protobuf::int32 value) {
  _set_bit(11);
  pos_x_ = value;
}

// optional int32 pos_y = 13;
inline bool PBRoleInfo::has_pos_y() const {
  return _has_bit(12);
}
inline void PBRoleInfo::clear_pos_y() {
  pos_y_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 PBRoleInfo::pos_y() const {
  return pos_y_;
}
inline void PBRoleInfo::set_pos_y(::google::protobuf::int32 value) {
  _set_bit(12);
  pos_y_ = value;
}

// optional int32 role_level = 14;
inline bool PBRoleInfo::has_role_level() const {
  return _has_bit(13);
}
inline void PBRoleInfo::clear_role_level() {
  role_level_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 PBRoleInfo::role_level() const {
  return role_level_;
}
inline void PBRoleInfo::set_role_level(::google::protobuf::int32 value) {
  _set_bit(13);
  role_level_ = value;
}

// optional int64 role_expr = 15;
inline bool PBRoleInfo::has_role_expr() const {
  return _has_bit(14);
}
inline void PBRoleInfo::clear_role_expr() {
  role_expr_ = GOOGLE_LONGLONG(0);
  _clear_bit(14);
}
inline ::google::protobuf::int64 PBRoleInfo::role_expr() const {
  return role_expr_;
}
inline void PBRoleInfo::set_role_expr(::google::protobuf::int64 value) {
  _set_bit(14);
  role_expr_ = value;
}

// optional int32 role_money = 16;
inline bool PBRoleInfo::has_role_money() const {
  return _has_bit(15);
}
inline void PBRoleInfo::clear_role_money() {
  role_money_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 PBRoleInfo::role_money() const {
  return role_money_;
}
inline void PBRoleInfo::set_role_money(::google::protobuf::int32 value) {
  _set_bit(15);
  role_money_ = value;
}

// optional int32 bounded_money = 17;
inline bool PBRoleInfo::has_bounded_money() const {
  return _has_bit(16);
}
inline void PBRoleInfo::clear_bounded_money() {
  bounded_money_ = 0;
  _clear_bit(16);
}
inline ::google::protobuf::int32 PBRoleInfo::bounded_money() const {
  return bounded_money_;
}
inline void PBRoleInfo::set_bounded_money(::google::protobuf::int32 value) {
  _set_bit(16);
  bounded_money_ = value;
}

// optional int32 login_time = 18;
inline bool PBRoleInfo::has_login_time() const {
  return _has_bit(17);
}
inline void PBRoleInfo::clear_login_time() {
  login_time_ = 0;
  _clear_bit(17);
}
inline ::google::protobuf::int32 PBRoleInfo::login_time() const {
  return login_time_;
}
inline void PBRoleInfo::set_login_time(::google::protobuf::int32 value) {
  _set_bit(17);
  login_time_ = value;
}

// optional int32 online_duration = 19;
inline bool PBRoleInfo::has_online_duration() const {
  return _has_bit(18);
}
inline void PBRoleInfo::clear_online_duration() {
  online_duration_ = 0;
  _clear_bit(18);
}
inline ::google::protobuf::int32 PBRoleInfo::online_duration() const {
  return online_duration_;
}
inline void PBRoleInfo::set_online_duration(::google::protobuf::int32 value) {
  _set_bit(18);
  online_duration_ = value;
}

// optional int32 update_time = 20;
inline bool PBRoleInfo::has_update_time() const {
  return _has_bit(19);
}
inline void PBRoleInfo::clear_update_time() {
  update_time_ = 0;
  _clear_bit(19);
}
inline ::google::protobuf::int32 PBRoleInfo::update_time() const {
  return update_time_;
}
inline void PBRoleInfo::set_update_time(::google::protobuf::int32 value) {
  _set_bit(19);
  update_time_ = value;
}

// optional int32 create_time = 21;
inline bool PBRoleInfo::has_create_time() const {
  return _has_bit(20);
}
inline void PBRoleInfo::clear_create_time() {
  create_time_ = 0;
  _clear_bit(20);
}
inline ::google::protobuf::int32 PBRoleInfo::create_time() const {
  return create_time_;
}
inline void PBRoleInfo::set_create_time(::google::protobuf::int32 value) {
  _set_bit(20);
  create_time_ = value;
}

// optional .PBProperty proto = 22;
inline bool PBRoleInfo::has_proto() const {
  return _has_bit(21);
}
inline void PBRoleInfo::clear_proto() {
  if (proto_ != NULL) proto_->::PBProperty::Clear();
  _clear_bit(21);
}
inline const ::PBProperty& PBRoleInfo::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBProperty* PBRoleInfo::mutable_proto() {
  _set_bit(21);
  if (proto_ == NULL) proto_ = new ::PBProperty;
  return proto_;
}

// optional string login_ip = 23;
inline bool PBRoleInfo::has_login_ip() const {
  return _has_bit(22);
}
inline void PBRoleInfo::clear_login_ip() {
  if (login_ip_ != &_default_login_ip_) {
    login_ip_->clear();
  }
  _clear_bit(22);
}
inline const ::std::string& PBRoleInfo::login_ip() const {
  return *login_ip_;
}
inline void PBRoleInfo::set_login_ip(const ::std::string& value) {
  _set_bit(22);
  if (login_ip_ == &_default_login_ip_) {
    login_ip_ = new ::std::string;
  }
  login_ip_->assign(value);
}
inline void PBRoleInfo::set_login_ip(const char* value) {
  _set_bit(22);
  if (login_ip_ == &_default_login_ip_) {
    login_ip_ = new ::std::string;
  }
  login_ip_->assign(value);
}
inline void PBRoleInfo::set_login_ip(const char* value, size_t size) {
  _set_bit(22);
  if (login_ip_ == &_default_login_ip_) {
    login_ip_ = new ::std::string;
  }
  login_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBRoleInfo::mutable_login_ip() {
  _set_bit(22);
  if (login_ip_ == &_default_login_ip_) {
    login_ip_ = new ::std::string;
  }
  return login_ip_;
}

// -------------------------------------------------------------------

// CGMMessageRoleDetailResult

// optional uint32 session_id = 1;
inline bool CGMMessageRoleDetailResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleDetailResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleDetailResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleDetailResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleDetailResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleDetailResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleDetailResult::fd() const {
  return fd_;
}
inline void CGMMessageRoleDetailResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBRoleInfo proto = 3;
inline bool CGMMessageRoleDetailResult::has_proto() const {
  return _has_bit(2);
}
inline void CGMMessageRoleDetailResult::clear_proto() {
  if (proto_ != NULL) proto_->::PBRoleInfo::Clear();
  _clear_bit(2);
}
inline const ::PBRoleInfo& CGMMessageRoleDetailResult::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBRoleInfo* CGMMessageRoleDetailResult::mutable_proto() {
  _set_bit(2);
  if (proto_ == NULL) proto_ = new ::PBRoleInfo;
  return proto_;
}

// -------------------------------------------------------------------

// CGMMessageUserStorageInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageUserStorageInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUserStorageInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUserStorageInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageUserStorageInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUserStorageInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUserStorageInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUserStorageInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageUserStorageInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageUserStorageInfoCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageUserStorageInfoCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageUserStorageInfoCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageUserStorageInfoCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 page = 4;
inline bool CGMMessageUserStorageInfoCmd::has_page() const {
  return _has_bit(3);
}
inline void CGMMessageUserStorageInfoCmd::clear_page() {
  page_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageUserStorageInfoCmd::page() const {
  return page_;
}
inline void CGMMessageUserStorageInfoCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(3);
  page_ = value;
}

// -------------------------------------------------------------------

// CGMMessageUserStorageInfoResult

// optional uint32 session_id = 1;
inline bool CGMMessageUserStorageInfoResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUserStorageInfoResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUserStorageInfoResult::session_id() const {
  return session_id_;
}
inline void CGMMessageUserStorageInfoResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUserStorageInfoResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUserStorageInfoResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUserStorageInfoResult::fd() const {
  return fd_;
}
inline void CGMMessageUserStorageInfoResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBItemBox items = 3;
inline bool CGMMessageUserStorageInfoResult::has_items() const {
  return _has_bit(2);
}
inline void CGMMessageUserStorageInfoResult::clear_items() {
  if (items_ != NULL) items_->::PBItemBox::Clear();
  _clear_bit(2);
}
inline const ::PBItemBox& CGMMessageUserStorageInfoResult::items() const {
  return items_ != NULL ? *items_ : *default_instance_->items_;
}
inline ::PBItemBox* CGMMessageUserStorageInfoResult::mutable_items() {
  _set_bit(2);
  if (items_ == NULL) items_ = new ::PBItemBox;
  return items_;
}

// -------------------------------------------------------------------

// CGMMessageRoleLocationCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleLocationCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleLocationCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleLocationCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleLocationCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleLocationCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleLocationCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleLocationCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleLocationCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageRoleLocationCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleLocationCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageRoleLocationCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleLocationCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleLocationResult

// optional uint32 session_id = 1;
inline bool CGMMessageRoleLocationResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleLocationResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleLocationResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleLocationResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleLocationResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleLocationResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleLocationResult::fd() const {
  return fd_;
}
inline void CGMMessageRoleLocationResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 line_id = 3;
inline bool CGMMessageRoleLocationResult::has_line_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleLocationResult::clear_line_id() {
  line_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageRoleLocationResult::line_id() const {
  return line_id_;
}
inline void CGMMessageRoleLocationResult::set_line_id(::google::protobuf::int32 value) {
  _set_bit(2);
  line_id_ = value;
}

// optional int32 map_id = 4;
inline bool CGMMessageRoleLocationResult::has_map_id() const {
  return _has_bit(3);
}
inline void CGMMessageRoleLocationResult::clear_map_id() {
  map_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageRoleLocationResult::map_id() const {
  return map_id_;
}
inline void CGMMessageRoleLocationResult::set_map_id(::google::protobuf::int32 value) {
  _set_bit(3);
  map_id_ = value;
}

// optional int32 x = 5;
inline bool CGMMessageRoleLocationResult::has_x() const {
  return _has_bit(4);
}
inline void CGMMessageRoleLocationResult::clear_x() {
  x_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageRoleLocationResult::x() const {
  return x_;
}
inline void CGMMessageRoleLocationResult::set_x(::google::protobuf::int32 value) {
  _set_bit(4);
  x_ = value;
}

// optional int32 y = 6;
inline bool CGMMessageRoleLocationResult::has_y() const {
  return _has_bit(5);
}
inline void CGMMessageRoleLocationResult::clear_y() {
  y_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CGMMessageRoleLocationResult::y() const {
  return y_;
}
inline void CGMMessageRoleLocationResult::set_y(::google::protobuf::int32 value) {
  _set_bit(5);
  y_ = value;
}

// optional int32 role_id = 7;
inline bool CGMMessageRoleLocationResult::has_role_id() const {
  return _has_bit(6);
}
inline void CGMMessageRoleLocationResult::clear_role_id() {
  role_id_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 CGMMessageRoleLocationResult::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleLocationResult::set_role_id(::google::protobuf::int32 value) {
  _set_bit(6);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageUserLevelInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageUserLevelInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUserLevelInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUserLevelInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageUserLevelInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUserLevelInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUserLevelInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUserLevelInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageUserLevelInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageUserLevelInfoCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageUserLevelInfoCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageUserLevelInfoCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageUserLevelInfoCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional string start_time = 4;
inline bool CGMMessageUserLevelInfoCmd::has_start_time() const {
  return _has_bit(3);
}
inline void CGMMessageUserLevelInfoCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageUserLevelInfoCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageUserLevelInfoCmd::set_start_time(const ::std::string& value) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageUserLevelInfoCmd::set_start_time(const char* value) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageUserLevelInfoCmd::set_start_time(const char* value, size_t size) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserLevelInfoCmd::mutable_start_time() {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 5;
inline bool CGMMessageUserLevelInfoCmd::has_end_time() const {
  return _has_bit(4);
}
inline void CGMMessageUserLevelInfoCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageUserLevelInfoCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageUserLevelInfoCmd::set_end_time(const ::std::string& value) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageUserLevelInfoCmd::set_end_time(const char* value) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageUserLevelInfoCmd::set_end_time(const char* value, size_t size) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserLevelInfoCmd::mutable_end_time() {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// PBRoleUpgradeInfo

// optional int32 level = 1;
inline bool PBRoleUpgradeInfo::has_level() const {
  return _has_bit(0);
}
inline void PBRoleUpgradeInfo::clear_level() {
  level_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PBRoleUpgradeInfo::level() const {
  return level_;
}
inline void PBRoleUpgradeInfo::set_level(::google::protobuf::int32 value) {
  _set_bit(0);
  level_ = value;
}

// optional int32 up_period = 2;
inline bool PBRoleUpgradeInfo::has_up_period() const {
  return _has_bit(1);
}
inline void PBRoleUpgradeInfo::clear_up_period() {
  up_period_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBRoleUpgradeInfo::up_period() const {
  return up_period_;
}
inline void PBRoleUpgradeInfo::set_up_period(::google::protobuf::int32 value) {
  _set_bit(1);
  up_period_ = value;
}

// optional int32 up_time = 3;
inline bool PBRoleUpgradeInfo::has_up_time() const {
  return _has_bit(2);
}
inline void PBRoleUpgradeInfo::clear_up_time() {
  up_time_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBRoleUpgradeInfo::up_time() const {
  return up_time_;
}
inline void PBRoleUpgradeInfo::set_up_time(::google::protobuf::int32 value) {
  _set_bit(2);
  up_time_ = value;
}

// -------------------------------------------------------------------

// CGMMessageUserLevelInfoResult

// optional uint32 session_id = 1;
inline bool CGMMessageUserLevelInfoResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUserLevelInfoResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUserLevelInfoResult::session_id() const {
  return session_id_;
}
inline void CGMMessageUserLevelInfoResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUserLevelInfoResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUserLevelInfoResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUserLevelInfoResult::fd() const {
  return fd_;
}
inline void CGMMessageUserLevelInfoResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBRoleUpgradeInfo role_upgrade_info = 3;
inline int CGMMessageUserLevelInfoResult::role_upgrade_info_size() const {
  return role_upgrade_info_.size();
}
inline void CGMMessageUserLevelInfoResult::clear_role_upgrade_info() {
  role_upgrade_info_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRoleUpgradeInfo >&
CGMMessageUserLevelInfoResult::role_upgrade_info() const {
  return role_upgrade_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRoleUpgradeInfo >*
CGMMessageUserLevelInfoResult::mutable_role_upgrade_info() {
  return &role_upgrade_info_;
}
inline const ::PBRoleUpgradeInfo& CGMMessageUserLevelInfoResult::role_upgrade_info(int index) const {
  return role_upgrade_info_.Get(index);
}
inline ::PBRoleUpgradeInfo* CGMMessageUserLevelInfoResult::mutable_role_upgrade_info(int index) {
  return role_upgrade_info_.Mutable(index);
}
inline ::PBRoleUpgradeInfo* CGMMessageUserLevelInfoResult::add_role_upgrade_info() {
  return role_upgrade_info_.Add();
}

// -------------------------------------------------------------------

// CGMMessageUserSocialInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageUserSocialInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUserSocialInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUserSocialInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageUserSocialInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUserSocialInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUserSocialInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUserSocialInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageUserSocialInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageUserSocialInfoCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageUserSocialInfoCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageUserSocialInfoCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageUserSocialInfoCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional uint32 type = 4;
inline bool CGMMessageUserSocialInfoCmd::has_type() const {
  return _has_bit(3);
}
inline void CGMMessageUserSocialInfoCmd::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMessageUserSocialInfoCmd::type() const {
  return type_;
}
inline void CGMMessageUserSocialInfoCmd::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// CGMMessageUserSocialInfoResult

// optional uint32 session_id = 1;
inline bool CGMMessageUserSocialInfoResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUserSocialInfoResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUserSocialInfoResult::session_id() const {
  return session_id_;
}
inline void CGMMessageUserSocialInfoResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUserSocialInfoResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUserSocialInfoResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUserSocialInfoResult::fd() const {
  return fd_;
}
inline void CGMMessageUserSocialInfoResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBFriend friends = 3;
inline bool CGMMessageUserSocialInfoResult::has_friends() const {
  return _has_bit(2);
}
inline void CGMMessageUserSocialInfoResult::clear_friends() {
  if (friends_ != NULL) friends_->::PBFriend::Clear();
  _clear_bit(2);
}
inline const ::PBFriend& CGMMessageUserSocialInfoResult::friends() const {
  return friends_ != NULL ? *friends_ : *default_instance_->friends_;
}
inline ::PBFriend* CGMMessageUserSocialInfoResult::mutable_friends() {
  _set_bit(2);
  if (friends_ == NULL) friends_ = new ::PBFriend;
  return friends_;
}

// optional string familyname = 4;
inline bool CGMMessageUserSocialInfoResult::has_familyname() const {
  return _has_bit(3);
}
inline void CGMMessageUserSocialInfoResult::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageUserSocialInfoResult::familyname() const {
  return *familyname_;
}
inline void CGMMessageUserSocialInfoResult::set_familyname(const ::std::string& value) {
  _set_bit(3);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CGMMessageUserSocialInfoResult::set_familyname(const char* value) {
  _set_bit(3);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CGMMessageUserSocialInfoResult::set_familyname(const char* value, size_t size) {
  _set_bit(3);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserSocialInfoResult::mutable_familyname() {
  _set_bit(3);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// optional string corpsname = 5;
inline bool CGMMessageUserSocialInfoResult::has_corpsname() const {
  return _has_bit(4);
}
inline void CGMMessageUserSocialInfoResult::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageUserSocialInfoResult::corpsname() const {
  return *corpsname_;
}
inline void CGMMessageUserSocialInfoResult::set_corpsname(const ::std::string& value) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CGMMessageUserSocialInfoResult::set_corpsname(const char* value) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CGMMessageUserSocialInfoResult::set_corpsname(const char* value, size_t size) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserSocialInfoResult::mutable_corpsname() {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 spouseid = 6;
inline bool CGMMessageUserSocialInfoResult::has_spouseid() const {
  return _has_bit(5);
}
inline void CGMMessageUserSocialInfoResult::clear_spouseid() {
  spouseid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CGMMessageUserSocialInfoResult::spouseid() const {
  return spouseid_;
}
inline void CGMMessageUserSocialInfoResult::set_spouseid(::google::protobuf::uint32 value) {
  _set_bit(5);
  spouseid_ = value;
}

// optional uint32 WeddingModule = 7;
inline bool CGMMessageUserSocialInfoResult::has_weddingmodule() const {
  return _has_bit(6);
}
inline void CGMMessageUserSocialInfoResult::clear_weddingmodule() {
  weddingmodule_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CGMMessageUserSocialInfoResult::weddingmodule() const {
  return weddingmodule_;
}
inline void CGMMessageUserSocialInfoResult::set_weddingmodule(::google::protobuf::uint32 value) {
  _set_bit(6);
  weddingmodule_ = value;
}

// optional uint32 MarriageID = 8;
inline bool CGMMessageUserSocialInfoResult::has_marriageid() const {
  return _has_bit(7);
}
inline void CGMMessageUserSocialInfoResult::clear_marriageid() {
  marriageid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CGMMessageUserSocialInfoResult::marriageid() const {
  return marriageid_;
}
inline void CGMMessageUserSocialInfoResult::set_marriageid(::google::protobuf::uint32 value) {
  _set_bit(7);
  marriageid_ = value;
}

// optional string WeddingTime = 9;
inline bool CGMMessageUserSocialInfoResult::has_weddingtime() const {
  return _has_bit(8);
}
inline void CGMMessageUserSocialInfoResult::clear_weddingtime() {
  if (weddingtime_ != &_default_weddingtime_) {
    weddingtime_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& CGMMessageUserSocialInfoResult::weddingtime() const {
  return *weddingtime_;
}
inline void CGMMessageUserSocialInfoResult::set_weddingtime(const ::std::string& value) {
  _set_bit(8);
  if (weddingtime_ == &_default_weddingtime_) {
    weddingtime_ = new ::std::string;
  }
  weddingtime_->assign(value);
}
inline void CGMMessageUserSocialInfoResult::set_weddingtime(const char* value) {
  _set_bit(8);
  if (weddingtime_ == &_default_weddingtime_) {
    weddingtime_ = new ::std::string;
  }
  weddingtime_->assign(value);
}
inline void CGMMessageUserSocialInfoResult::set_weddingtime(const char* value, size_t size) {
  _set_bit(8);
  if (weddingtime_ == &_default_weddingtime_) {
    weddingtime_ = new ::std::string;
  }
  weddingtime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserSocialInfoResult::mutable_weddingtime() {
  _set_bit(8);
  if (weddingtime_ == &_default_weddingtime_) {
    weddingtime_ = new ::std::string;
  }
  return weddingtime_;
}

// optional string MarriageTime = 10;
inline bool CGMMessageUserSocialInfoResult::has_marriagetime() const {
  return _has_bit(9);
}
inline void CGMMessageUserSocialInfoResult::clear_marriagetime() {
  if (marriagetime_ != &_default_marriagetime_) {
    marriagetime_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& CGMMessageUserSocialInfoResult::marriagetime() const {
  return *marriagetime_;
}
inline void CGMMessageUserSocialInfoResult::set_marriagetime(const ::std::string& value) {
  _set_bit(9);
  if (marriagetime_ == &_default_marriagetime_) {
    marriagetime_ = new ::std::string;
  }
  marriagetime_->assign(value);
}
inline void CGMMessageUserSocialInfoResult::set_marriagetime(const char* value) {
  _set_bit(9);
  if (marriagetime_ == &_default_marriagetime_) {
    marriagetime_ = new ::std::string;
  }
  marriagetime_->assign(value);
}
inline void CGMMessageUserSocialInfoResult::set_marriagetime(const char* value, size_t size) {
  _set_bit(9);
  if (marriagetime_ == &_default_marriagetime_) {
    marriagetime_ = new ::std::string;
  }
  marriagetime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserSocialInfoResult::mutable_marriagetime() {
  _set_bit(9);
  if (marriagetime_ == &_default_marriagetime_) {
    marriagetime_ = new ::std::string;
  }
  return marriagetime_;
}

// optional .PBMatrixInfo MatrixInfo = 11;
inline bool CGMMessageUserSocialInfoResult::has_matrixinfo() const {
  return _has_bit(10);
}
inline void CGMMessageUserSocialInfoResult::clear_matrixinfo() {
  if (matrixinfo_ != NULL) matrixinfo_->::PBMatrixInfo::Clear();
  _clear_bit(10);
}
inline const ::PBMatrixInfo& CGMMessageUserSocialInfoResult::matrixinfo() const {
  return matrixinfo_ != NULL ? *matrixinfo_ : *default_instance_->matrixinfo_;
}
inline ::PBMatrixInfo* CGMMessageUserSocialInfoResult::mutable_matrixinfo() {
  _set_bit(10);
  if (matrixinfo_ == NULL) matrixinfo_ = new ::PBMatrixInfo;
  return matrixinfo_;
}

// -------------------------------------------------------------------

// CGMMessageGoodsHistoryToNPCCmd

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsHistoryToNPCCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsHistoryToNPCCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryToNPCCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsHistoryToNPCCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsHistoryToNPCCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryToNPCCmd::fd() const {
  return fd_;
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageGoodsHistoryToNPCCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageGoodsHistoryToNPCCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageGoodsHistoryToNPCCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 role_flag = 4;
inline bool CGMMessageGoodsHistoryToNPCCmd::has_role_flag() const {
  return _has_bit(3);
}
inline void CGMMessageGoodsHistoryToNPCCmd::clear_role_flag() {
  role_flag_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageGoodsHistoryToNPCCmd::role_flag() const {
  return role_flag_;
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_role_flag(::google::protobuf::int32 value) {
  _set_bit(3);
  role_flag_ = value;
}

// optional string npc_name = 5;
inline bool CGMMessageGoodsHistoryToNPCCmd::has_npc_name() const {
  return _has_bit(4);
}
inline void CGMMessageGoodsHistoryToNPCCmd::clear_npc_name() {
  if (npc_name_ != &_default_npc_name_) {
    npc_name_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageGoodsHistoryToNPCCmd::npc_name() const {
  return *npc_name_;
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_npc_name(const ::std::string& value) {
  _set_bit(4);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_npc_name(const char* value) {
  _set_bit(4);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_npc_name(const char* value, size_t size) {
  _set_bit(4);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryToNPCCmd::mutable_npc_name() {
  _set_bit(4);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  return npc_name_;
}

// optional string start_time = 6;
inline bool CGMMessageGoodsHistoryToNPCCmd::has_start_time() const {
  return _has_bit(5);
}
inline void CGMMessageGoodsHistoryToNPCCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageGoodsHistoryToNPCCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_start_time(const ::std::string& value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_start_time(const char* value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_start_time(const char* value, size_t size) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryToNPCCmd::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 7;
inline bool CGMMessageGoodsHistoryToNPCCmd::has_end_time() const {
  return _has_bit(6);
}
inline void CGMMessageGoodsHistoryToNPCCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMessageGoodsHistoryToNPCCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_end_time(const ::std::string& value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_end_time(const char* value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsHistoryToNPCCmd::set_end_time(const char* value, size_t size) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryToNPCCmd::mutable_end_time() {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// PBItemExchange2Npc

// optional string npc_name = 1;
inline bool PBItemExchange2Npc::has_npc_name() const {
  return _has_bit(0);
}
inline void PBItemExchange2Npc::clear_npc_name() {
  if (npc_name_ != &_default_npc_name_) {
    npc_name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBItemExchange2Npc::npc_name() const {
  return *npc_name_;
}
inline void PBItemExchange2Npc::set_npc_name(const ::std::string& value) {
  _set_bit(0);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void PBItemExchange2Npc::set_npc_name(const char* value) {
  _set_bit(0);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void PBItemExchange2Npc::set_npc_name(const char* value, size_t size) {
  _set_bit(0);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemExchange2Npc::mutable_npc_name() {
  _set_bit(0);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  return npc_name_;
}

// optional string item_name = 2;
inline bool PBItemExchange2Npc::has_item_name() const {
  return _has_bit(1);
}
inline void PBItemExchange2Npc::clear_item_name() {
  if (item_name_ != &_default_item_name_) {
    item_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBItemExchange2Npc::item_name() const {
  return *item_name_;
}
inline void PBItemExchange2Npc::set_item_name(const ::std::string& value) {
  _set_bit(1);
  if (item_name_ == &_default_item_name_) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
}
inline void PBItemExchange2Npc::set_item_name(const char* value) {
  _set_bit(1);
  if (item_name_ == &_default_item_name_) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
}
inline void PBItemExchange2Npc::set_item_name(const char* value, size_t size) {
  _set_bit(1);
  if (item_name_ == &_default_item_name_) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemExchange2Npc::mutable_item_name() {
  _set_bit(1);
  if (item_name_ == &_default_item_name_) {
    item_name_ = new ::std::string;
  }
  return item_name_;
}

// optional int32 item_num = 3;
inline bool PBItemExchange2Npc::has_item_num() const {
  return _has_bit(2);
}
inline void PBItemExchange2Npc::clear_item_num() {
  item_num_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBItemExchange2Npc::item_num() const {
  return item_num_;
}
inline void PBItemExchange2Npc::set_item_num(::google::protobuf::int32 value) {
  _set_bit(2);
  item_num_ = value;
}

// optional string exchange_time = 4;
inline bool PBItemExchange2Npc::has_exchange_time() const {
  return _has_bit(3);
}
inline void PBItemExchange2Npc::clear_exchange_time() {
  if (exchange_time_ != &_default_exchange_time_) {
    exchange_time_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBItemExchange2Npc::exchange_time() const {
  return *exchange_time_;
}
inline void PBItemExchange2Npc::set_exchange_time(const ::std::string& value) {
  _set_bit(3);
  if (exchange_time_ == &_default_exchange_time_) {
    exchange_time_ = new ::std::string;
  }
  exchange_time_->assign(value);
}
inline void PBItemExchange2Npc::set_exchange_time(const char* value) {
  _set_bit(3);
  if (exchange_time_ == &_default_exchange_time_) {
    exchange_time_ = new ::std::string;
  }
  exchange_time_->assign(value);
}
inline void PBItemExchange2Npc::set_exchange_time(const char* value, size_t size) {
  _set_bit(3);
  if (exchange_time_ == &_default_exchange_time_) {
    exchange_time_ = new ::std::string;
  }
  exchange_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemExchange2Npc::mutable_exchange_time() {
  _set_bit(3);
  if (exchange_time_ == &_default_exchange_time_) {
    exchange_time_ = new ::std::string;
  }
  return exchange_time_;
}

// -------------------------------------------------------------------

// CGMMessageGoodsHistoryToNPCResult

// repeated .PBItemExchange2Npc items_selled = 1;
inline int CGMMessageGoodsHistoryToNPCResult::items_selled_size() const {
  return items_selled_.size();
}
inline void CGMMessageGoodsHistoryToNPCResult::clear_items_selled() {
  items_selled_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc >&
CGMMessageGoodsHistoryToNPCResult::items_selled() const {
  return items_selled_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc >*
CGMMessageGoodsHistoryToNPCResult::mutable_items_selled() {
  return &items_selled_;
}
inline const ::PBItemExchange2Npc& CGMMessageGoodsHistoryToNPCResult::items_selled(int index) const {
  return items_selled_.Get(index);
}
inline ::PBItemExchange2Npc* CGMMessageGoodsHistoryToNPCResult::mutable_items_selled(int index) {
  return items_selled_.Mutable(index);
}
inline ::PBItemExchange2Npc* CGMMessageGoodsHistoryToNPCResult::add_items_selled() {
  return items_selled_.Add();
}

// -------------------------------------------------------------------

// CGMMessageGoodsHistoryFromNPCCmd

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsHistoryFromNPCCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryFromNPCCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsHistoryFromNPCCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryFromNPCCmd::fd() const {
  return fd_;
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageGoodsHistoryFromNPCCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageGoodsHistoryFromNPCCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 role_flag = 4;
inline bool CGMMessageGoodsHistoryFromNPCCmd::has_role_flag() const {
  return _has_bit(3);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::clear_role_flag() {
  role_flag_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageGoodsHistoryFromNPCCmd::role_flag() const {
  return role_flag_;
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_role_flag(::google::protobuf::int32 value) {
  _set_bit(3);
  role_flag_ = value;
}

// optional string npc_name = 5;
inline bool CGMMessageGoodsHistoryFromNPCCmd::has_npc_name() const {
  return _has_bit(4);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::clear_npc_name() {
  if (npc_name_ != &_default_npc_name_) {
    npc_name_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageGoodsHistoryFromNPCCmd::npc_name() const {
  return *npc_name_;
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_npc_name(const ::std::string& value) {
  _set_bit(4);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_npc_name(const char* value) {
  _set_bit(4);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_npc_name(const char* value, size_t size) {
  _set_bit(4);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryFromNPCCmd::mutable_npc_name() {
  _set_bit(4);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  return npc_name_;
}

// optional string start_time = 6;
inline bool CGMMessageGoodsHistoryFromNPCCmd::has_start_time() const {
  return _has_bit(5);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageGoodsHistoryFromNPCCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_start_time(const ::std::string& value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_start_time(const char* value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_start_time(const char* value, size_t size) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryFromNPCCmd::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 7;
inline bool CGMMessageGoodsHistoryFromNPCCmd::has_end_time() const {
  return _has_bit(6);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMessageGoodsHistoryFromNPCCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_end_time(const ::std::string& value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_end_time(const char* value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsHistoryFromNPCCmd::set_end_time(const char* value, size_t size) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryFromNPCCmd::mutable_end_time() {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// CGMMessageGoodsHistoryFromNPCResult

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsHistoryFromNPCResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsHistoryFromNPCResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryFromNPCResult::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsHistoryFromNPCResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsHistoryFromNPCResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsHistoryFromNPCResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryFromNPCResult::fd() const {
  return fd_;
}
inline void CGMMessageGoodsHistoryFromNPCResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBItemExchange2Npc items_buyed = 3;
inline int CGMMessageGoodsHistoryFromNPCResult::items_buyed_size() const {
  return items_buyed_.size();
}
inline void CGMMessageGoodsHistoryFromNPCResult::clear_items_buyed() {
  items_buyed_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc >&
CGMMessageGoodsHistoryFromNPCResult::items_buyed() const {
  return items_buyed_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Npc >*
CGMMessageGoodsHistoryFromNPCResult::mutable_items_buyed() {
  return &items_buyed_;
}
inline const ::PBItemExchange2Npc& CGMMessageGoodsHistoryFromNPCResult::items_buyed(int index) const {
  return items_buyed_.Get(index);
}
inline ::PBItemExchange2Npc* CGMMessageGoodsHistoryFromNPCResult::mutable_items_buyed(int index) {
  return items_buyed_.Mutable(index);
}
inline ::PBItemExchange2Npc* CGMMessageGoodsHistoryFromNPCResult::add_items_buyed() {
  return items_buyed_.Add();
}

// -------------------------------------------------------------------

// CGMMessageGoodsHistoryBetweenUsersCmd

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsHistoryBetweenUsersCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryBetweenUsersCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsHistoryBetweenUsersCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryBetweenUsersCmd::fd() const {
  return fd_;
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id1 = 3;
inline bool CGMMessageGoodsHistoryBetweenUsersCmd::has_role_id1() const {
  return _has_bit(2);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::clear_role_id1() {
  role_id1_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageGoodsHistoryBetweenUsersCmd::role_id1() const {
  return role_id1_;
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_role_id1(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id1_ = value;
}

// optional int32 role_id2 = 4;
inline bool CGMMessageGoodsHistoryBetweenUsersCmd::has_role_id2() const {
  return _has_bit(3);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::clear_role_id2() {
  role_id2_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageGoodsHistoryBetweenUsersCmd::role_id2() const {
  return role_id2_;
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_role_id2(::google::protobuf::int32 value) {
  _set_bit(3);
  role_id2_ = value;
}

// optional string start_time = 5;
inline bool CGMMessageGoodsHistoryBetweenUsersCmd::has_start_time() const {
  return _has_bit(4);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageGoodsHistoryBetweenUsersCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_start_time(const ::std::string& value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_start_time(const char* value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_start_time(const char* value, size_t size) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryBetweenUsersCmd::mutable_start_time() {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 6;
inline bool CGMMessageGoodsHistoryBetweenUsersCmd::has_end_time() const {
  return _has_bit(5);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageGoodsHistoryBetweenUsersCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_end_time(const ::std::string& value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_end_time(const char* value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsHistoryBetweenUsersCmd::set_end_time(const char* value, size_t size) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryBetweenUsersCmd::mutable_end_time() {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// PBItemExchange2Player

// optional string from = 1;
inline bool PBItemExchange2Player::has_from() const {
  return _has_bit(0);
}
inline void PBItemExchange2Player::clear_from() {
  if (from_ != &_default_from_) {
    from_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBItemExchange2Player::from() const {
  return *from_;
}
inline void PBItemExchange2Player::set_from(const ::std::string& value) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void PBItemExchange2Player::set_from(const char* value) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void PBItemExchange2Player::set_from(const char* value, size_t size) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemExchange2Player::mutable_from() {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  return from_;
}

// optional string to = 2;
inline bool PBItemExchange2Player::has_to() const {
  return _has_bit(1);
}
inline void PBItemExchange2Player::clear_to() {
  if (to_ != &_default_to_) {
    to_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBItemExchange2Player::to() const {
  return *to_;
}
inline void PBItemExchange2Player::set_to(const ::std::string& value) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(value);
}
inline void PBItemExchange2Player::set_to(const char* value) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(value);
}
inline void PBItemExchange2Player::set_to(const char* value, size_t size) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemExchange2Player::mutable_to() {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  return to_;
}

// optional string item_name = 3;
inline bool PBItemExchange2Player::has_item_name() const {
  return _has_bit(2);
}
inline void PBItemExchange2Player::clear_item_name() {
  if (item_name_ != &_default_item_name_) {
    item_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBItemExchange2Player::item_name() const {
  return *item_name_;
}
inline void PBItemExchange2Player::set_item_name(const ::std::string& value) {
  _set_bit(2);
  if (item_name_ == &_default_item_name_) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
}
inline void PBItemExchange2Player::set_item_name(const char* value) {
  _set_bit(2);
  if (item_name_ == &_default_item_name_) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
}
inline void PBItemExchange2Player::set_item_name(const char* value, size_t size) {
  _set_bit(2);
  if (item_name_ == &_default_item_name_) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemExchange2Player::mutable_item_name() {
  _set_bit(2);
  if (item_name_ == &_default_item_name_) {
    item_name_ = new ::std::string;
  }
  return item_name_;
}

// optional string item_count = 4;
inline bool PBItemExchange2Player::has_item_count() const {
  return _has_bit(3);
}
inline void PBItemExchange2Player::clear_item_count() {
  if (item_count_ != &_default_item_count_) {
    item_count_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBItemExchange2Player::item_count() const {
  return *item_count_;
}
inline void PBItemExchange2Player::set_item_count(const ::std::string& value) {
  _set_bit(3);
  if (item_count_ == &_default_item_count_) {
    item_count_ = new ::std::string;
  }
  item_count_->assign(value);
}
inline void PBItemExchange2Player::set_item_count(const char* value) {
  _set_bit(3);
  if (item_count_ == &_default_item_count_) {
    item_count_ = new ::std::string;
  }
  item_count_->assign(value);
}
inline void PBItemExchange2Player::set_item_count(const char* value, size_t size) {
  _set_bit(3);
  if (item_count_ == &_default_item_count_) {
    item_count_ = new ::std::string;
  }
  item_count_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemExchange2Player::mutable_item_count() {
  _set_bit(3);
  if (item_count_ == &_default_item_count_) {
    item_count_ = new ::std::string;
  }
  return item_count_;
}

// optional string exchange_time = 5;
inline bool PBItemExchange2Player::has_exchange_time() const {
  return _has_bit(4);
}
inline void PBItemExchange2Player::clear_exchange_time() {
  if (exchange_time_ != &_default_exchange_time_) {
    exchange_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& PBItemExchange2Player::exchange_time() const {
  return *exchange_time_;
}
inline void PBItemExchange2Player::set_exchange_time(const ::std::string& value) {
  _set_bit(4);
  if (exchange_time_ == &_default_exchange_time_) {
    exchange_time_ = new ::std::string;
  }
  exchange_time_->assign(value);
}
inline void PBItemExchange2Player::set_exchange_time(const char* value) {
  _set_bit(4);
  if (exchange_time_ == &_default_exchange_time_) {
    exchange_time_ = new ::std::string;
  }
  exchange_time_->assign(value);
}
inline void PBItemExchange2Player::set_exchange_time(const char* value, size_t size) {
  _set_bit(4);
  if (exchange_time_ == &_default_exchange_time_) {
    exchange_time_ = new ::std::string;
  }
  exchange_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemExchange2Player::mutable_exchange_time() {
  _set_bit(4);
  if (exchange_time_ == &_default_exchange_time_) {
    exchange_time_ = new ::std::string;
  }
  return exchange_time_;
}

// -------------------------------------------------------------------

// CGMMessageGoodsHistoryBetweenUsersResult

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsHistoryBetweenUsersResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsHistoryBetweenUsersResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryBetweenUsersResult::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsHistoryBetweenUsersResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsHistoryBetweenUsersResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsHistoryBetweenUsersResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryBetweenUsersResult::fd() const {
  return fd_;
}
inline void CGMMessageGoodsHistoryBetweenUsersResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBItemExchange2Player item_exchanged = 3;
inline int CGMMessageGoodsHistoryBetweenUsersResult::item_exchanged_size() const {
  return item_exchanged_.size();
}
inline void CGMMessageGoodsHistoryBetweenUsersResult::clear_item_exchanged() {
  item_exchanged_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Player >&
CGMMessageGoodsHistoryBetweenUsersResult::item_exchanged() const {
  return item_exchanged_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemExchange2Player >*
CGMMessageGoodsHistoryBetweenUsersResult::mutable_item_exchanged() {
  return &item_exchanged_;
}
inline const ::PBItemExchange2Player& CGMMessageGoodsHistoryBetweenUsersResult::item_exchanged(int index) const {
  return item_exchanged_.Get(index);
}
inline ::PBItemExchange2Player* CGMMessageGoodsHistoryBetweenUsersResult::mutable_item_exchanged(int index) {
  return item_exchanged_.Mutable(index);
}
inline ::PBItemExchange2Player* CGMMessageGoodsHistoryBetweenUsersResult::add_item_exchanged() {
  return item_exchanged_.Add();
}

// -------------------------------------------------------------------

// CGMMessageGoodsHistoryCmd

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsHistoryCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsHistoryCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsHistoryCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsHistoryCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsHistoryCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryCmd::fd() const {
  return fd_;
}
inline void CGMMessageGoodsHistoryCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string item_id = 3;
inline bool CGMMessageGoodsHistoryCmd::has_item_id() const {
  return _has_bit(2);
}
inline void CGMMessageGoodsHistoryCmd::clear_item_id() {
  if (item_id_ != &_default_item_id_) {
    item_id_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageGoodsHistoryCmd::item_id() const {
  return *item_id_;
}
inline void CGMMessageGoodsHistoryCmd::set_item_id(const ::std::string& value) {
  _set_bit(2);
  if (item_id_ == &_default_item_id_) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
}
inline void CGMMessageGoodsHistoryCmd::set_item_id(const char* value) {
  _set_bit(2);
  if (item_id_ == &_default_item_id_) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(value);
}
inline void CGMMessageGoodsHistoryCmd::set_item_id(const char* value, size_t size) {
  _set_bit(2);
  if (item_id_ == &_default_item_id_) {
    item_id_ = new ::std::string;
  }
  item_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryCmd::mutable_item_id() {
  _set_bit(2);
  if (item_id_ == &_default_item_id_) {
    item_id_ = new ::std::string;
  }
  return item_id_;
}

// optional string start_time = 4;
inline bool CGMMessageGoodsHistoryCmd::has_start_time() const {
  return _has_bit(3);
}
inline void CGMMessageGoodsHistoryCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageGoodsHistoryCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageGoodsHistoryCmd::set_start_time(const ::std::string& value) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsHistoryCmd::set_start_time(const char* value) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsHistoryCmd::set_start_time(const char* value, size_t size) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryCmd::mutable_start_time() {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 5;
inline bool CGMMessageGoodsHistoryCmd::has_end_time() const {
  return _has_bit(4);
}
inline void CGMMessageGoodsHistoryCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageGoodsHistoryCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageGoodsHistoryCmd::set_end_time(const ::std::string& value) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsHistoryCmd::set_end_time(const char* value) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsHistoryCmd::set_end_time(const char* value, size_t size) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsHistoryCmd::mutable_end_time() {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// PBItemAction

// optional string from = 1;
inline bool PBItemAction::has_from() const {
  return _has_bit(0);
}
inline void PBItemAction::clear_from() {
  if (from_ != &_default_from_) {
    from_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBItemAction::from() const {
  return *from_;
}
inline void PBItemAction::set_from(const ::std::string& value) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void PBItemAction::set_from(const char* value) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void PBItemAction::set_from(const char* value, size_t size) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemAction::mutable_from() {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  return from_;
}

// optional string to = 2;
inline bool PBItemAction::has_to() const {
  return _has_bit(1);
}
inline void PBItemAction::clear_to() {
  if (to_ != &_default_to_) {
    to_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBItemAction::to() const {
  return *to_;
}
inline void PBItemAction::set_to(const ::std::string& value) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(value);
}
inline void PBItemAction::set_to(const char* value) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(value);
}
inline void PBItemAction::set_to(const char* value, size_t size) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemAction::mutable_to() {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  return to_;
}

// optional string action = 3;
inline bool PBItemAction::has_action() const {
  return _has_bit(2);
}
inline void PBItemAction::clear_action() {
  if (action_ != &_default_action_) {
    action_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBItemAction::action() const {
  return *action_;
}
inline void PBItemAction::set_action(const ::std::string& value) {
  _set_bit(2);
  if (action_ == &_default_action_) {
    action_ = new ::std::string;
  }
  action_->assign(value);
}
inline void PBItemAction::set_action(const char* value) {
  _set_bit(2);
  if (action_ == &_default_action_) {
    action_ = new ::std::string;
  }
  action_->assign(value);
}
inline void PBItemAction::set_action(const char* value, size_t size) {
  _set_bit(2);
  if (action_ == &_default_action_) {
    action_ = new ::std::string;
  }
  action_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemAction::mutable_action() {
  _set_bit(2);
  if (action_ == &_default_action_) {
    action_ = new ::std::string;
  }
  return action_;
}

// optional string action_time = 4;
inline bool PBItemAction::has_action_time() const {
  return _has_bit(3);
}
inline void PBItemAction::clear_action_time() {
  if (action_time_ != &_default_action_time_) {
    action_time_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBItemAction::action_time() const {
  return *action_time_;
}
inline void PBItemAction::set_action_time(const ::std::string& value) {
  _set_bit(3);
  if (action_time_ == &_default_action_time_) {
    action_time_ = new ::std::string;
  }
  action_time_->assign(value);
}
inline void PBItemAction::set_action_time(const char* value) {
  _set_bit(3);
  if (action_time_ == &_default_action_time_) {
    action_time_ = new ::std::string;
  }
  action_time_->assign(value);
}
inline void PBItemAction::set_action_time(const char* value, size_t size) {
  _set_bit(3);
  if (action_time_ == &_default_action_time_) {
    action_time_ = new ::std::string;
  }
  action_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemAction::mutable_action_time() {
  _set_bit(3);
  if (action_time_ == &_default_action_time_) {
    action_time_ = new ::std::string;
  }
  return action_time_;
}

// -------------------------------------------------------------------

// CGMMessageGoodsHistoryResult

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsHistoryResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsHistoryResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryResult::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsHistoryResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsHistoryResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsHistoryResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsHistoryResult::fd() const {
  return fd_;
}
inline void CGMMessageGoodsHistoryResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBItemAction item_actioned = 3;
inline int CGMMessageGoodsHistoryResult::item_actioned_size() const {
  return item_actioned_.size();
}
inline void CGMMessageGoodsHistoryResult::clear_item_actioned() {
  item_actioned_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemAction >&
CGMMessageGoodsHistoryResult::item_actioned() const {
  return item_actioned_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemAction >*
CGMMessageGoodsHistoryResult::mutable_item_actioned() {
  return &item_actioned_;
}
inline const ::PBItemAction& CGMMessageGoodsHistoryResult::item_actioned(int index) const {
  return item_actioned_.Get(index);
}
inline ::PBItemAction* CGMMessageGoodsHistoryResult::mutable_item_actioned(int index) {
  return item_actioned_.Mutable(index);
}
inline ::PBItemAction* CGMMessageGoodsHistoryResult::add_item_actioned() {
  return item_actioned_.Add();
}

// -------------------------------------------------------------------

// CGMMessagePetHistoryCmd

// optional uint32 session_id = 1;
inline bool CGMMessagePetHistoryCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessagePetHistoryCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessagePetHistoryCmd::session_id() const {
  return session_id_;
}
inline void CGMMessagePetHistoryCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessagePetHistoryCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessagePetHistoryCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessagePetHistoryCmd::fd() const {
  return fd_;
}
inline void CGMMessagePetHistoryCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string role_name = 3;
inline bool CGMMessagePetHistoryCmd::has_role_name() const {
  return _has_bit(2);
}
inline void CGMMessagePetHistoryCmd::clear_role_name() {
  if (role_name_ != &_default_role_name_) {
    role_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessagePetHistoryCmd::role_name() const {
  return *role_name_;
}
inline void CGMMessagePetHistoryCmd::set_role_name(const ::std::string& value) {
  _set_bit(2);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void CGMMessagePetHistoryCmd::set_role_name(const char* value) {
  _set_bit(2);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void CGMMessagePetHistoryCmd::set_role_name(const char* value, size_t size) {
  _set_bit(2);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessagePetHistoryCmd::mutable_role_name() {
  _set_bit(2);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}

// optional int32 pet_id = 4;
inline bool CGMMessagePetHistoryCmd::has_pet_id() const {
  return _has_bit(3);
}
inline void CGMMessagePetHistoryCmd::clear_pet_id() {
  pet_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessagePetHistoryCmd::pet_id() const {
  return pet_id_;
}
inline void CGMMessagePetHistoryCmd::set_pet_id(::google::protobuf::int32 value) {
  _set_bit(3);
  pet_id_ = value;
}

// optional string start_time = 5;
inline bool CGMMessagePetHistoryCmd::has_start_time() const {
  return _has_bit(4);
}
inline void CGMMessagePetHistoryCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessagePetHistoryCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessagePetHistoryCmd::set_start_time(const ::std::string& value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessagePetHistoryCmd::set_start_time(const char* value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessagePetHistoryCmd::set_start_time(const char* value, size_t size) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessagePetHistoryCmd::mutable_start_time() {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 6;
inline bool CGMMessagePetHistoryCmd::has_end_time() const {
  return _has_bit(5);
}
inline void CGMMessagePetHistoryCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessagePetHistoryCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessagePetHistoryCmd::set_end_time(const ::std::string& value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessagePetHistoryCmd::set_end_time(const char* value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessagePetHistoryCmd::set_end_time(const char* value, size_t size) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessagePetHistoryCmd::mutable_end_time() {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// PBPetHistory

// optional string from = 1;
inline bool PBPetHistory::has_from() const {
  return _has_bit(0);
}
inline void PBPetHistory::clear_from() {
  if (from_ != &_default_from_) {
    from_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBPetHistory::from() const {
  return *from_;
}
inline void PBPetHistory::set_from(const ::std::string& value) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void PBPetHistory::set_from(const char* value) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void PBPetHistory::set_from(const char* value, size_t size) {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  from_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPetHistory::mutable_from() {
  _set_bit(0);
  if (from_ == &_default_from_) {
    from_ = new ::std::string;
  }
  return from_;
}

// optional string to = 2;
inline bool PBPetHistory::has_to() const {
  return _has_bit(1);
}
inline void PBPetHistory::clear_to() {
  if (to_ != &_default_to_) {
    to_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBPetHistory::to() const {
  return *to_;
}
inline void PBPetHistory::set_to(const ::std::string& value) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(value);
}
inline void PBPetHistory::set_to(const char* value) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(value);
}
inline void PBPetHistory::set_to(const char* value, size_t size) {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  to_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPetHistory::mutable_to() {
  _set_bit(1);
  if (to_ == &_default_to_) {
    to_ = new ::std::string;
  }
  return to_;
}

// optional string action = 3;
inline bool PBPetHistory::has_action() const {
  return _has_bit(2);
}
inline void PBPetHistory::clear_action() {
  if (action_ != &_default_action_) {
    action_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBPetHistory::action() const {
  return *action_;
}
inline void PBPetHistory::set_action(const ::std::string& value) {
  _set_bit(2);
  if (action_ == &_default_action_) {
    action_ = new ::std::string;
  }
  action_->assign(value);
}
inline void PBPetHistory::set_action(const char* value) {
  _set_bit(2);
  if (action_ == &_default_action_) {
    action_ = new ::std::string;
  }
  action_->assign(value);
}
inline void PBPetHistory::set_action(const char* value, size_t size) {
  _set_bit(2);
  if (action_ == &_default_action_) {
    action_ = new ::std::string;
  }
  action_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPetHistory::mutable_action() {
  _set_bit(2);
  if (action_ == &_default_action_) {
    action_ = new ::std::string;
  }
  return action_;
}

// optional string action_time = 4;
inline bool PBPetHistory::has_action_time() const {
  return _has_bit(3);
}
inline void PBPetHistory::clear_action_time() {
  if (action_time_ != &_default_action_time_) {
    action_time_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBPetHistory::action_time() const {
  return *action_time_;
}
inline void PBPetHistory::set_action_time(const ::std::string& value) {
  _set_bit(3);
  if (action_time_ == &_default_action_time_) {
    action_time_ = new ::std::string;
  }
  action_time_->assign(value);
}
inline void PBPetHistory::set_action_time(const char* value) {
  _set_bit(3);
  if (action_time_ == &_default_action_time_) {
    action_time_ = new ::std::string;
  }
  action_time_->assign(value);
}
inline void PBPetHistory::set_action_time(const char* value, size_t size) {
  _set_bit(3);
  if (action_time_ == &_default_action_time_) {
    action_time_ = new ::std::string;
  }
  action_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPetHistory::mutable_action_time() {
  _set_bit(3);
  if (action_time_ == &_default_action_time_) {
    action_time_ = new ::std::string;
  }
  return action_time_;
}

// optional string action_attr = 5;
inline bool PBPetHistory::has_action_attr() const {
  return _has_bit(4);
}
inline void PBPetHistory::clear_action_attr() {
  if (action_attr_ != &_default_action_attr_) {
    action_attr_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& PBPetHistory::action_attr() const {
  return *action_attr_;
}
inline void PBPetHistory::set_action_attr(const ::std::string& value) {
  _set_bit(4);
  if (action_attr_ == &_default_action_attr_) {
    action_attr_ = new ::std::string;
  }
  action_attr_->assign(value);
}
inline void PBPetHistory::set_action_attr(const char* value) {
  _set_bit(4);
  if (action_attr_ == &_default_action_attr_) {
    action_attr_ = new ::std::string;
  }
  action_attr_->assign(value);
}
inline void PBPetHistory::set_action_attr(const char* value, size_t size) {
  _set_bit(4);
  if (action_attr_ == &_default_action_attr_) {
    action_attr_ = new ::std::string;
  }
  action_attr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPetHistory::mutable_action_attr() {
  _set_bit(4);
  if (action_attr_ == &_default_action_attr_) {
    action_attr_ = new ::std::string;
  }
  return action_attr_;
}

// -------------------------------------------------------------------

// CGMMessagePetHistoryResult

// optional uint32 session_id = 1;
inline bool CGMMessagePetHistoryResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessagePetHistoryResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessagePetHistoryResult::session_id() const {
  return session_id_;
}
inline void CGMMessagePetHistoryResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessagePetHistoryResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessagePetHistoryResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessagePetHistoryResult::fd() const {
  return fd_;
}
inline void CGMMessagePetHistoryResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBPetHistory pet_history = 3;
inline int CGMMessagePetHistoryResult::pet_history_size() const {
  return pet_history_.size();
}
inline void CGMMessagePetHistoryResult::clear_pet_history() {
  pet_history_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPetHistory >&
CGMMessagePetHistoryResult::pet_history() const {
  return pet_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPetHistory >*
CGMMessagePetHistoryResult::mutable_pet_history() {
  return &pet_history_;
}
inline const ::PBPetHistory& CGMMessagePetHistoryResult::pet_history(int index) const {
  return pet_history_.Get(index);
}
inline ::PBPetHistory* CGMMessagePetHistoryResult::mutable_pet_history(int index) {
  return pet_history_.Mutable(index);
}
inline ::PBPetHistory* CGMMessagePetHistoryResult::add_pet_history() {
  return pet_history_.Add();
}

// -------------------------------------------------------------------

// CGMMessageOperationDetailCmd

// optional uint32 session_id = 1;
inline bool CGMMessageOperationDetailCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageOperationDetailCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageOperationDetailCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageOperationDetailCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageOperationDetailCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageOperationDetailCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageOperationDetailCmd::fd() const {
  return fd_;
}
inline void CGMMessageOperationDetailCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 server_id = 3;
inline bool CGMMessageOperationDetailCmd::has_server_id() const {
  return _has_bit(2);
}
inline void CGMMessageOperationDetailCmd::clear_server_id() {
  server_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageOperationDetailCmd::server_id() const {
  return server_id_;
}
inline void CGMMessageOperationDetailCmd::set_server_id(::google::protobuf::int32 value) {
  _set_bit(2);
  server_id_ = value;
}

// optional int32 role_id = 4;
inline bool CGMMessageOperationDetailCmd::has_role_id() const {
  return _has_bit(3);
}
inline void CGMMessageOperationDetailCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageOperationDetailCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageOperationDetailCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(3);
  role_id_ = value;
}

// optional string start_time = 5;
inline bool CGMMessageOperationDetailCmd::has_start_time() const {
  return _has_bit(4);
}
inline void CGMMessageOperationDetailCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageOperationDetailCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageOperationDetailCmd::set_start_time(const ::std::string& value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageOperationDetailCmd::set_start_time(const char* value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageOperationDetailCmd::set_start_time(const char* value, size_t size) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageOperationDetailCmd::mutable_start_time() {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 6;
inline bool CGMMessageOperationDetailCmd::has_end_time() const {
  return _has_bit(5);
}
inline void CGMMessageOperationDetailCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageOperationDetailCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageOperationDetailCmd::set_end_time(const ::std::string& value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageOperationDetailCmd::set_end_time(const char* value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageOperationDetailCmd::set_end_time(const char* value, size_t size) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageOperationDetailCmd::mutable_end_time() {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// CGMMessageNPCDetailCmd

// optional uint32 session_id = 1;
inline bool CGMMessageNPCDetailCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageNPCDetailCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageNPCDetailCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageNPCDetailCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageNPCDetailCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageNPCDetailCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageNPCDetailCmd::fd() const {
  return fd_;
}
inline void CGMMessageNPCDetailCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string npc_name = 3;
inline bool CGMMessageNPCDetailCmd::has_npc_name() const {
  return _has_bit(2);
}
inline void CGMMessageNPCDetailCmd::clear_npc_name() {
  if (npc_name_ != &_default_npc_name_) {
    npc_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageNPCDetailCmd::npc_name() const {
  return *npc_name_;
}
inline void CGMMessageNPCDetailCmd::set_npc_name(const ::std::string& value) {
  _set_bit(2);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void CGMMessageNPCDetailCmd::set_npc_name(const char* value) {
  _set_bit(2);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void CGMMessageNPCDetailCmd::set_npc_name(const char* value, size_t size) {
  _set_bit(2);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageNPCDetailCmd::mutable_npc_name() {
  _set_bit(2);
  if (npc_name_ == &_default_npc_name_) {
    npc_name_ = new ::std::string;
  }
  return npc_name_;
}

// -------------------------------------------------------------------

// PBNPCDetail

// optional int32 map_id = 1;
inline bool PBNPCDetail::has_map_id() const {
  return _has_bit(0);
}
inline void PBNPCDetail::clear_map_id() {
  map_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PBNPCDetail::map_id() const {
  return map_id_;
}
inline void PBNPCDetail::set_map_id(::google::protobuf::int32 value) {
  _set_bit(0);
  map_id_ = value;
}

// optional string npc_location = 2;
inline bool PBNPCDetail::has_npc_location() const {
  return _has_bit(1);
}
inline void PBNPCDetail::clear_npc_location() {
  if (npc_location_ != &_default_npc_location_) {
    npc_location_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBNPCDetail::npc_location() const {
  return *npc_location_;
}
inline void PBNPCDetail::set_npc_location(const ::std::string& value) {
  _set_bit(1);
  if (npc_location_ == &_default_npc_location_) {
    npc_location_ = new ::std::string;
  }
  npc_location_->assign(value);
}
inline void PBNPCDetail::set_npc_location(const char* value) {
  _set_bit(1);
  if (npc_location_ == &_default_npc_location_) {
    npc_location_ = new ::std::string;
  }
  npc_location_->assign(value);
}
inline void PBNPCDetail::set_npc_location(const char* value, size_t size) {
  _set_bit(1);
  if (npc_location_ == &_default_npc_location_) {
    npc_location_ = new ::std::string;
  }
  npc_location_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBNPCDetail::mutable_npc_location() {
  _set_bit(1);
  if (npc_location_ == &_default_npc_location_) {
    npc_location_ = new ::std::string;
  }
  return npc_location_;
}

// -------------------------------------------------------------------

// CGMMessageNPCDetailResult

// optional uint32 session_id = 1;
inline bool CGMMessageNPCDetailResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageNPCDetailResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageNPCDetailResult::session_id() const {
  return session_id_;
}
inline void CGMMessageNPCDetailResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageNPCDetailResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageNPCDetailResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageNPCDetailResult::fd() const {
  return fd_;
}
inline void CGMMessageNPCDetailResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBNPCDetail npc_detail = 3;
inline int CGMMessageNPCDetailResult::npc_detail_size() const {
  return npc_detail_.size();
}
inline void CGMMessageNPCDetailResult::clear_npc_detail() {
  npc_detail_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBNPCDetail >&
CGMMessageNPCDetailResult::npc_detail() const {
  return npc_detail_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBNPCDetail >*
CGMMessageNPCDetailResult::mutable_npc_detail() {
  return &npc_detail_;
}
inline const ::PBNPCDetail& CGMMessageNPCDetailResult::npc_detail(int index) const {
  return npc_detail_.Get(index);
}
inline ::PBNPCDetail* CGMMessageNPCDetailResult::mutable_npc_detail(int index) {
  return npc_detail_.Mutable(index);
}
inline ::PBNPCDetail* CGMMessageNPCDetailResult::add_npc_detail() {
  return npc_detail_.Add();
}

// -------------------------------------------------------------------

// CGMMessageGoodsDropLogCmd

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsDropLogCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsDropLogCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsDropLogCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsDropLogCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsDropLogCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsDropLogCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsDropLogCmd::fd() const {
  return fd_;
}
inline void CGMMessageGoodsDropLogCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 goods_id = 3;
inline bool CGMMessageGoodsDropLogCmd::has_goods_id() const {
  return _has_bit(2);
}
inline void CGMMessageGoodsDropLogCmd::clear_goods_id() {
  goods_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageGoodsDropLogCmd::goods_id() const {
  return goods_id_;
}
inline void CGMMessageGoodsDropLogCmd::set_goods_id(::google::protobuf::int32 value) {
  _set_bit(2);
  goods_id_ = value;
}

// optional string map_name = 4;
inline bool CGMMessageGoodsDropLogCmd::has_map_name() const {
  return _has_bit(3);
}
inline void CGMMessageGoodsDropLogCmd::clear_map_name() {
  if (map_name_ != &_default_map_name_) {
    map_name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageGoodsDropLogCmd::map_name() const {
  return *map_name_;
}
inline void CGMMessageGoodsDropLogCmd::set_map_name(const ::std::string& value) {
  _set_bit(3);
  if (map_name_ == &_default_map_name_) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
}
inline void CGMMessageGoodsDropLogCmd::set_map_name(const char* value) {
  _set_bit(3);
  if (map_name_ == &_default_map_name_) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
}
inline void CGMMessageGoodsDropLogCmd::set_map_name(const char* value, size_t size) {
  _set_bit(3);
  if (map_name_ == &_default_map_name_) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsDropLogCmd::mutable_map_name() {
  _set_bit(3);
  if (map_name_ == &_default_map_name_) {
    map_name_ = new ::std::string;
  }
  return map_name_;
}

// optional string start_time = 5;
inline bool CGMMessageGoodsDropLogCmd::has_start_time() const {
  return _has_bit(4);
}
inline void CGMMessageGoodsDropLogCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageGoodsDropLogCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageGoodsDropLogCmd::set_start_time(const ::std::string& value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsDropLogCmd::set_start_time(const char* value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageGoodsDropLogCmd::set_start_time(const char* value, size_t size) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsDropLogCmd::mutable_start_time() {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 6;
inline bool CGMMessageGoodsDropLogCmd::has_end_time() const {
  return _has_bit(5);
}
inline void CGMMessageGoodsDropLogCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageGoodsDropLogCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageGoodsDropLogCmd::set_end_time(const ::std::string& value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsDropLogCmd::set_end_time(const char* value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageGoodsDropLogCmd::set_end_time(const char* value, size_t size) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageGoodsDropLogCmd::mutable_end_time() {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// PBGoodsDropLog

// optional string role_name = 1;
inline bool PBGoodsDropLog::has_role_name() const {
  return _has_bit(0);
}
inline void PBGoodsDropLog::clear_role_name() {
  if (role_name_ != &_default_role_name_) {
    role_name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBGoodsDropLog::role_name() const {
  return *role_name_;
}
inline void PBGoodsDropLog::set_role_name(const ::std::string& value) {
  _set_bit(0);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void PBGoodsDropLog::set_role_name(const char* value) {
  _set_bit(0);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void PBGoodsDropLog::set_role_name(const char* value, size_t size) {
  _set_bit(0);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBGoodsDropLog::mutable_role_name() {
  _set_bit(0);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}

// optional string drop_time = 2;
inline bool PBGoodsDropLog::has_drop_time() const {
  return _has_bit(1);
}
inline void PBGoodsDropLog::clear_drop_time() {
  if (drop_time_ != &_default_drop_time_) {
    drop_time_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBGoodsDropLog::drop_time() const {
  return *drop_time_;
}
inline void PBGoodsDropLog::set_drop_time(const ::std::string& value) {
  _set_bit(1);
  if (drop_time_ == &_default_drop_time_) {
    drop_time_ = new ::std::string;
  }
  drop_time_->assign(value);
}
inline void PBGoodsDropLog::set_drop_time(const char* value) {
  _set_bit(1);
  if (drop_time_ == &_default_drop_time_) {
    drop_time_ = new ::std::string;
  }
  drop_time_->assign(value);
}
inline void PBGoodsDropLog::set_drop_time(const char* value, size_t size) {
  _set_bit(1);
  if (drop_time_ == &_default_drop_time_) {
    drop_time_ = new ::std::string;
  }
  drop_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBGoodsDropLog::mutable_drop_time() {
  _set_bit(1);
  if (drop_time_ == &_default_drop_time_) {
    drop_time_ = new ::std::string;
  }
  return drop_time_;
}

// optional int32 total_num = 3;
inline bool PBGoodsDropLog::has_total_num() const {
  return _has_bit(2);
}
inline void PBGoodsDropLog::clear_total_num() {
  total_num_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBGoodsDropLog::total_num() const {
  return total_num_;
}
inline void PBGoodsDropLog::set_total_num(::google::protobuf::int32 value) {
  _set_bit(2);
  total_num_ = value;
}

// optional int32 drop_rate = 4;
inline bool PBGoodsDropLog::has_drop_rate() const {
  return _has_bit(3);
}
inline void PBGoodsDropLog::clear_drop_rate() {
  drop_rate_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PBGoodsDropLog::drop_rate() const {
  return drop_rate_;
}
inline void PBGoodsDropLog::set_drop_rate(::google::protobuf::int32 value) {
  _set_bit(3);
  drop_rate_ = value;
}

// -------------------------------------------------------------------

// CGMMessageGoodsDropLogResult

// optional uint32 session_id = 1;
inline bool CGMMessageGoodsDropLogResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageGoodsDropLogResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageGoodsDropLogResult::session_id() const {
  return session_id_;
}
inline void CGMMessageGoodsDropLogResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageGoodsDropLogResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageGoodsDropLogResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageGoodsDropLogResult::fd() const {
  return fd_;
}
inline void CGMMessageGoodsDropLogResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBGoodsDropLog goods_drop_log = 3;
inline int CGMMessageGoodsDropLogResult::goods_drop_log_size() const {
  return goods_drop_log_.size();
}
inline void CGMMessageGoodsDropLogResult::clear_goods_drop_log() {
  goods_drop_log_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGoodsDropLog >&
CGMMessageGoodsDropLogResult::goods_drop_log() const {
  return goods_drop_log_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBGoodsDropLog >*
CGMMessageGoodsDropLogResult::mutable_goods_drop_log() {
  return &goods_drop_log_;
}
inline const ::PBGoodsDropLog& CGMMessageGoodsDropLogResult::goods_drop_log(int index) const {
  return goods_drop_log_.Get(index);
}
inline ::PBGoodsDropLog* CGMMessageGoodsDropLogResult::mutable_goods_drop_log(int index) {
  return goods_drop_log_.Mutable(index);
}
inline ::PBGoodsDropLog* CGMMessageGoodsDropLogResult::add_goods_drop_log() {
  return goods_drop_log_.Add();
}

// -------------------------------------------------------------------

// CGMMessageTaskInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageTaskInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageTaskInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageTaskInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageTaskInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageTaskInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageTaskInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageTaskInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageTaskInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageTaskInfoCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageTaskInfoCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageTaskInfoCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageTaskInfoCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// PBTaskInfo

// optional int32 task_id = 1;
inline bool PBTaskInfo::has_task_id() const {
  return _has_bit(0);
}
inline void PBTaskInfo::clear_task_id() {
  task_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PBTaskInfo::task_id() const {
  return task_id_;
}
inline void PBTaskInfo::set_task_id(::google::protobuf::int32 value) {
  _set_bit(0);
  task_id_ = value;
}

// optional string task_name = 2;
inline bool PBTaskInfo::has_task_name() const {
  return _has_bit(1);
}
inline void PBTaskInfo::clear_task_name() {
  if (task_name_ != &_default_task_name_) {
    task_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBTaskInfo::task_name() const {
  return *task_name_;
}
inline void PBTaskInfo::set_task_name(const ::std::string& value) {
  _set_bit(1);
  if (task_name_ == &_default_task_name_) {
    task_name_ = new ::std::string;
  }
  task_name_->assign(value);
}
inline void PBTaskInfo::set_task_name(const char* value) {
  _set_bit(1);
  if (task_name_ == &_default_task_name_) {
    task_name_ = new ::std::string;
  }
  task_name_->assign(value);
}
inline void PBTaskInfo::set_task_name(const char* value, size_t size) {
  _set_bit(1);
  if (task_name_ == &_default_task_name_) {
    task_name_ = new ::std::string;
  }
  task_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTaskInfo::mutable_task_name() {
  _set_bit(1);
  if (task_name_ == &_default_task_name_) {
    task_name_ = new ::std::string;
  }
  return task_name_;
}

// optional int32 finish_type = 3;
inline bool PBTaskInfo::has_finish_type() const {
  return _has_bit(2);
}
inline void PBTaskInfo::clear_finish_type() {
  finish_type_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBTaskInfo::finish_type() const {
  return finish_type_;
}
inline void PBTaskInfo::set_finish_type(::google::protobuf::int32 value) {
  _set_bit(2);
  finish_type_ = value;
}

// -------------------------------------------------------------------

// CGMMessageTaskInfoResult

// optional uint32 session_id = 1;
inline bool CGMMessageTaskInfoResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageTaskInfoResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageTaskInfoResult::session_id() const {
  return session_id_;
}
inline void CGMMessageTaskInfoResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageTaskInfoResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageTaskInfoResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageTaskInfoResult::fd() const {
  return fd_;
}
inline void CGMMessageTaskInfoResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBTaskInfo task_detail = 3;
inline int CGMMessageTaskInfoResult::task_detail_size() const {
  return task_detail_.size();
}
inline void CGMMessageTaskInfoResult::clear_task_detail() {
  task_detail_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTaskInfo >&
CGMMessageTaskInfoResult::task_detail() const {
  return task_detail_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTaskInfo >*
CGMMessageTaskInfoResult::mutable_task_detail() {
  return &task_detail_;
}
inline const ::PBTaskInfo& CGMMessageTaskInfoResult::task_detail(int index) const {
  return task_detail_.Get(index);
}
inline ::PBTaskInfo* CGMMessageTaskInfoResult::mutable_task_detail(int index) {
  return task_detail_.Mutable(index);
}
inline ::PBTaskInfo* CGMMessageTaskInfoResult::add_task_detail() {
  return task_detail_.Add();
}

// -------------------------------------------------------------------

// CGMMessageLoginInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageLoginInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageLoginInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageLoginInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageLoginInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageLoginInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageLoginInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageLoginInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageLoginInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string user_name = 3;
inline bool CGMMessageLoginInfoCmd::has_user_name() const {
  return _has_bit(2);
}
inline void CGMMessageLoginInfoCmd::clear_user_name() {
  if (user_name_ != &_default_user_name_) {
    user_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageLoginInfoCmd::user_name() const {
  return *user_name_;
}
inline void CGMMessageLoginInfoCmd::set_user_name(const ::std::string& value) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CGMMessageLoginInfoCmd::set_user_name(const char* value) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CGMMessageLoginInfoCmd::set_user_name(const char* value, size_t size) {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageLoginInfoCmd::mutable_user_name() {
  _set_bit(2);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}

// optional string start_time = 4;
inline bool CGMMessageLoginInfoCmd::has_start_time() const {
  return _has_bit(3);
}
inline void CGMMessageLoginInfoCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageLoginInfoCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageLoginInfoCmd::set_start_time(const ::std::string& value) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageLoginInfoCmd::set_start_time(const char* value) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageLoginInfoCmd::set_start_time(const char* value, size_t size) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageLoginInfoCmd::mutable_start_time() {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 5;
inline bool CGMMessageLoginInfoCmd::has_end_time() const {
  return _has_bit(4);
}
inline void CGMMessageLoginInfoCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageLoginInfoCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageLoginInfoCmd::set_end_time(const ::std::string& value) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageLoginInfoCmd::set_end_time(const char* value) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageLoginInfoCmd::set_end_time(const char* value, size_t size) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageLoginInfoCmd::mutable_end_time() {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// PBLoginInfo

// optional int32 login_in_time = 1;
inline bool PBLoginInfo::has_login_in_time() const {
  return _has_bit(0);
}
inline void PBLoginInfo::clear_login_in_time() {
  login_in_time_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PBLoginInfo::login_in_time() const {
  return login_in_time_;
}
inline void PBLoginInfo::set_login_in_time(::google::protobuf::int32 value) {
  _set_bit(0);
  login_in_time_ = value;
}

// optional int32 login_in_money = 2;
inline bool PBLoginInfo::has_login_in_money() const {
  return _has_bit(1);
}
inline void PBLoginInfo::clear_login_in_money() {
  login_in_money_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBLoginInfo::login_in_money() const {
  return login_in_money_;
}
inline void PBLoginInfo::set_login_in_money(::google::protobuf::int32 value) {
  _set_bit(1);
  login_in_money_ = value;
}

// optional int32 login_in_exp = 3;
inline bool PBLoginInfo::has_login_in_exp() const {
  return _has_bit(2);
}
inline void PBLoginInfo::clear_login_in_exp() {
  login_in_exp_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBLoginInfo::login_in_exp() const {
  return login_in_exp_;
}
inline void PBLoginInfo::set_login_in_exp(::google::protobuf::int32 value) {
  _set_bit(2);
  login_in_exp_ = value;
}

// optional int32 login_in_ip = 4;
inline bool PBLoginInfo::has_login_in_ip() const {
  return _has_bit(3);
}
inline void PBLoginInfo::clear_login_in_ip() {
  login_in_ip_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PBLoginInfo::login_in_ip() const {
  return login_in_ip_;
}
inline void PBLoginInfo::set_login_in_ip(::google::protobuf::int32 value) {
  _set_bit(3);
  login_in_ip_ = value;
}

// optional int32 login_out_time = 5;
inline bool PBLoginInfo::has_login_out_time() const {
  return _has_bit(4);
}
inline void PBLoginInfo::clear_login_out_time() {
  login_out_time_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 PBLoginInfo::login_out_time() const {
  return login_out_time_;
}
inline void PBLoginInfo::set_login_out_time(::google::protobuf::int32 value) {
  _set_bit(4);
  login_out_time_ = value;
}

// optional int32 login_out_money = 6;
inline bool PBLoginInfo::has_login_out_money() const {
  return _has_bit(5);
}
inline void PBLoginInfo::clear_login_out_money() {
  login_out_money_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PBLoginInfo::login_out_money() const {
  return login_out_money_;
}
inline void PBLoginInfo::set_login_out_money(::google::protobuf::int32 value) {
  _set_bit(5);
  login_out_money_ = value;
}

// optional int32 login_out_exp = 7;
inline bool PBLoginInfo::has_login_out_exp() const {
  return _has_bit(6);
}
inline void PBLoginInfo::clear_login_out_exp() {
  login_out_exp_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 PBLoginInfo::login_out_exp() const {
  return login_out_exp_;
}
inline void PBLoginInfo::set_login_out_exp(::google::protobuf::int32 value) {
  _set_bit(6);
  login_out_exp_ = value;
}

// -------------------------------------------------------------------

// CGMMessageLoginInfoResult

// optional uint32 session_id = 1;
inline bool CGMMessageLoginInfoResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageLoginInfoResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageLoginInfoResult::session_id() const {
  return session_id_;
}
inline void CGMMessageLoginInfoResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageLoginInfoResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageLoginInfoResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageLoginInfoResult::fd() const {
  return fd_;
}
inline void CGMMessageLoginInfoResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .PBLoginInfo login_info = 3;
inline int CGMMessageLoginInfoResult::login_info_size() const {
  return login_info_.size();
}
inline void CGMMessageLoginInfoResult::clear_login_info() {
  login_info_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLoginInfo >&
CGMMessageLoginInfoResult::login_info() const {
  return login_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLoginInfo >*
CGMMessageLoginInfoResult::mutable_login_info() {
  return &login_info_;
}
inline const ::PBLoginInfo& CGMMessageLoginInfoResult::login_info(int index) const {
  return login_info_.Get(index);
}
inline ::PBLoginInfo* CGMMessageLoginInfoResult::mutable_login_info(int index) {
  return login_info_.Mutable(index);
}
inline ::PBLoginInfo* CGMMessageLoginInfoResult::add_login_info() {
  return login_info_.Add();
}

// -------------------------------------------------------------------

// CGMMessageShutUpCmd

// optional uint32 session_id = 1;
inline bool CGMMessageShutUpCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageShutUpCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageShutUpCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageShutUpCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageShutUpCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageShutUpCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageShutUpCmd::fd() const {
  return fd_;
}
inline void CGMMessageShutUpCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageShutUpCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageShutUpCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageShutUpCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageShutUpCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 channel = 4;
inline bool CGMMessageShutUpCmd::has_channel() const {
  return _has_bit(3);
}
inline void CGMMessageShutUpCmd::clear_channel() {
  channel_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageShutUpCmd::channel() const {
  return channel_;
}
inline void CGMMessageShutUpCmd::set_channel(::google::protobuf::int32 value) {
  _set_bit(3);
  channel_ = value;
}

// optional int32 period = 5;
inline bool CGMMessageShutUpCmd::has_period() const {
  return _has_bit(4);
}
inline void CGMMessageShutUpCmd::clear_period() {
  period_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageShutUpCmd::period() const {
  return period_;
}
inline void CGMMessageShutUpCmd::set_period(::google::protobuf::int32 value) {
  _set_bit(4);
  period_ = value;
}

// -------------------------------------------------------------------

// CGMMessageCancelShutUpCmd

// optional uint32 session_id = 1;
inline bool CGMMessageCancelShutUpCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageCancelShutUpCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageCancelShutUpCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageCancelShutUpCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageCancelShutUpCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageCancelShutUpCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageCancelShutUpCmd::fd() const {
  return fd_;
}
inline void CGMMessageCancelShutUpCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageCancelShutUpCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageCancelShutUpCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageCancelShutUpCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageCancelShutUpCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 channel = 4;
inline bool CGMMessageCancelShutUpCmd::has_channel() const {
  return _has_bit(3);
}
inline void CGMMessageCancelShutUpCmd::clear_channel() {
  channel_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageCancelShutUpCmd::channel() const {
  return channel_;
}
inline void CGMMessageCancelShutUpCmd::set_channel(::google::protobuf::int32 value) {
  _set_bit(3);
  channel_ = value;
}

// -------------------------------------------------------------------

// CGMMessageFreezeAccountCmd

// optional uint32 session_id = 1;
inline bool CGMMessageFreezeAccountCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageFreezeAccountCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageFreezeAccountCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageFreezeAccountCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageFreezeAccountCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageFreezeAccountCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageFreezeAccountCmd::fd() const {
  return fd_;
}
inline void CGMMessageFreezeAccountCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 user_id = 3;
inline bool CGMMessageFreezeAccountCmd::has_user_id() const {
  return _has_bit(2);
}
inline void CGMMessageFreezeAccountCmd::clear_user_id() {
  user_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageFreezeAccountCmd::user_id() const {
  return user_id_;
}
inline void CGMMessageFreezeAccountCmd::set_user_id(::google::protobuf::int32 value) {
  _set_bit(2);
  user_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageFreezeAccountBatCmd

// optional uint32 session_id = 1;
inline bool CGMMessageFreezeAccountBatCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageFreezeAccountBatCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageFreezeAccountBatCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageFreezeAccountBatCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageFreezeAccountBatCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageFreezeAccountBatCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageFreezeAccountBatCmd::fd() const {
  return fd_;
}
inline void CGMMessageFreezeAccountBatCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string uid_list = 3;
inline bool CGMMessageFreezeAccountBatCmd::has_uid_list() const {
  return _has_bit(2);
}
inline void CGMMessageFreezeAccountBatCmd::clear_uid_list() {
  if (uid_list_ != &_default_uid_list_) {
    uid_list_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageFreezeAccountBatCmd::uid_list() const {
  return *uid_list_;
}
inline void CGMMessageFreezeAccountBatCmd::set_uid_list(const ::std::string& value) {
  _set_bit(2);
  if (uid_list_ == &_default_uid_list_) {
    uid_list_ = new ::std::string;
  }
  uid_list_->assign(value);
}
inline void CGMMessageFreezeAccountBatCmd::set_uid_list(const char* value) {
  _set_bit(2);
  if (uid_list_ == &_default_uid_list_) {
    uid_list_ = new ::std::string;
  }
  uid_list_->assign(value);
}
inline void CGMMessageFreezeAccountBatCmd::set_uid_list(const char* value, size_t size) {
  _set_bit(2);
  if (uid_list_ == &_default_uid_list_) {
    uid_list_ = new ::std::string;
  }
  uid_list_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageFreezeAccountBatCmd::mutable_uid_list() {
  _set_bit(2);
  if (uid_list_ == &_default_uid_list_) {
    uid_list_ = new ::std::string;
  }
  return uid_list_;
}

// -------------------------------------------------------------------

// CGMMessageUnFreezeAccountCmd

// optional uint32 session_id = 1;
inline bool CGMMessageUnFreezeAccountCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUnFreezeAccountCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUnFreezeAccountCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageUnFreezeAccountCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUnFreezeAccountCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUnFreezeAccountCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUnFreezeAccountCmd::fd() const {
  return fd_;
}
inline void CGMMessageUnFreezeAccountCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 user_id = 3;
inline bool CGMMessageUnFreezeAccountCmd::has_user_id() const {
  return _has_bit(2);
}
inline void CGMMessageUnFreezeAccountCmd::clear_user_id() {
  user_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageUnFreezeAccountCmd::user_id() const {
  return user_id_;
}
inline void CGMMessageUnFreezeAccountCmd::set_user_id(::google::protobuf::int32 value) {
  _set_bit(2);
  user_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageTrusteeUserCmd

// optional uint32 session_id = 1;
inline bool CGMMessageTrusteeUserCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageTrusteeUserCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageTrusteeUserCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageTrusteeUserCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageTrusteeUserCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageTrusteeUserCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageTrusteeUserCmd::fd() const {
  return fd_;
}
inline void CGMMessageTrusteeUserCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 user_id = 3;
inline bool CGMMessageTrusteeUserCmd::has_user_id() const {
  return _has_bit(2);
}
inline void CGMMessageTrusteeUserCmd::clear_user_id() {
  user_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageTrusteeUserCmd::user_id() const {
  return user_id_;
}
inline void CGMMessageTrusteeUserCmd::set_user_id(::google::protobuf::int32 value) {
  _set_bit(2);
  user_id_ = value;
}

// optional string password = 4;
inline bool CGMMessageTrusteeUserCmd::has_password() const {
  return _has_bit(3);
}
inline void CGMMessageTrusteeUserCmd::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageTrusteeUserCmd::password() const {
  return *password_;
}
inline void CGMMessageTrusteeUserCmd::set_password(const ::std::string& value) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CGMMessageTrusteeUserCmd::set_password(const char* value) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CGMMessageTrusteeUserCmd::set_password(const char* value, size_t size) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageTrusteeUserCmd::mutable_password() {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// -------------------------------------------------------------------

// CGMMessageUnTrusteeUserCmd

// optional uint32 session_id = 1;
inline bool CGMMessageUnTrusteeUserCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUnTrusteeUserCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUnTrusteeUserCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageUnTrusteeUserCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUnTrusteeUserCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUnTrusteeUserCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUnTrusteeUserCmd::fd() const {
  return fd_;
}
inline void CGMMessageUnTrusteeUserCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 user_id = 3;
inline bool CGMMessageUnTrusteeUserCmd::has_user_id() const {
  return _has_bit(2);
}
inline void CGMMessageUnTrusteeUserCmd::clear_user_id() {
  user_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageUnTrusteeUserCmd::user_id() const {
  return user_id_;
}
inline void CGMMessageUnTrusteeUserCmd::set_user_id(::google::protobuf::int32 value) {
  _set_bit(2);
  user_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageMoveRoleCmd

// optional uint32 session_id = 1;
inline bool CGMMessageMoveRoleCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageMoveRoleCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageMoveRoleCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageMoveRoleCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageMoveRoleCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageMoveRoleCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageMoveRoleCmd::fd() const {
  return fd_;
}
inline void CGMMessageMoveRoleCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageMoveRoleCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageMoveRoleCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageMoveRoleCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageMoveRoleCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 server_id = 4;
inline bool CGMMessageMoveRoleCmd::has_server_id() const {
  return _has_bit(3);
}
inline void CGMMessageMoveRoleCmd::clear_server_id() {
  server_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageMoveRoleCmd::server_id() const {
  return server_id_;
}
inline void CGMMessageMoveRoleCmd::set_server_id(::google::protobuf::int32 value) {
  _set_bit(3);
  server_id_ = value;
}

// optional int32 type = 5;
inline bool CGMMessageMoveRoleCmd::has_type() const {
  return _has_bit(4);
}
inline void CGMMessageMoveRoleCmd::clear_type() {
  type_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageMoveRoleCmd::type() const {
  return type_;
}
inline void CGMMessageMoveRoleCmd::set_type(::google::protobuf::int32 value) {
  _set_bit(4);
  type_ = value;
}

// optional string target_location = 6;
inline bool CGMMessageMoveRoleCmd::has_target_location() const {
  return _has_bit(5);
}
inline void CGMMessageMoveRoleCmd::clear_target_location() {
  if (target_location_ != &_default_target_location_) {
    target_location_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageMoveRoleCmd::target_location() const {
  return *target_location_;
}
inline void CGMMessageMoveRoleCmd::set_target_location(const ::std::string& value) {
  _set_bit(5);
  if (target_location_ == &_default_target_location_) {
    target_location_ = new ::std::string;
  }
  target_location_->assign(value);
}
inline void CGMMessageMoveRoleCmd::set_target_location(const char* value) {
  _set_bit(5);
  if (target_location_ == &_default_target_location_) {
    target_location_ = new ::std::string;
  }
  target_location_->assign(value);
}
inline void CGMMessageMoveRoleCmd::set_target_location(const char* value, size_t size) {
  _set_bit(5);
  if (target_location_ == &_default_target_location_) {
    target_location_ = new ::std::string;
  }
  target_location_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageMoveRoleCmd::mutable_target_location() {
  _set_bit(5);
  if (target_location_ == &_default_target_location_) {
    target_location_ = new ::std::string;
  }
  return target_location_;
}

// -------------------------------------------------------------------

// CGMMessageEndTaskCmd

// optional uint32 session_id = 1;
inline bool CGMMessageEndTaskCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageEndTaskCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageEndTaskCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageEndTaskCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageEndTaskCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageEndTaskCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageEndTaskCmd::fd() const {
  return fd_;
}
inline void CGMMessageEndTaskCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageEndTaskCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageEndTaskCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageEndTaskCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageEndTaskCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 task_id = 4;
inline bool CGMMessageEndTaskCmd::has_task_id() const {
  return _has_bit(3);
}
inline void CGMMessageEndTaskCmd::clear_task_id() {
  task_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageEndTaskCmd::task_id() const {
  return task_id_;
}
inline void CGMMessageEndTaskCmd::set_task_id(::google::protobuf::int32 value) {
  _set_bit(3);
  task_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageTrusteeStorageCmd

// optional uint32 session_id = 1;
inline bool CGMMessageTrusteeStorageCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageTrusteeStorageCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageTrusteeStorageCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageTrusteeStorageCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageTrusteeStorageCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageTrusteeStorageCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageTrusteeStorageCmd::fd() const {
  return fd_;
}
inline void CGMMessageTrusteeStorageCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageTrusteeStorageCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageTrusteeStorageCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageTrusteeStorageCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageTrusteeStorageCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageUnTrusteeStorageCmd

// optional uint32 session_id = 1;
inline bool CGMMessageUnTrusteeStorageCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUnTrusteeStorageCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUnTrusteeStorageCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageUnTrusteeStorageCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUnTrusteeStorageCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUnTrusteeStorageCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUnTrusteeStorageCmd::fd() const {
  return fd_;
}
inline void CGMMessageUnTrusteeStorageCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageUnTrusteeStorageCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageUnTrusteeStorageCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageUnTrusteeStorageCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageUnTrusteeStorageCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRecoverRoleCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRecoverRoleCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRecoverRoleCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRecoverRoleCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRecoverRoleCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRecoverRoleCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRecoverRoleCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRecoverRoleCmd::fd() const {
  return fd_;
}
inline void CGMMessageRecoverRoleCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageRecoverRoleCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRecoverRoleCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageRecoverRoleCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRecoverRoleCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessagePostBulletinCmd

// optional uint32 session_id = 1;
inline bool CGMMessagePostBulletinCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessagePostBulletinCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessagePostBulletinCmd::session_id() const {
  return session_id_;
}
inline void CGMMessagePostBulletinCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessagePostBulletinCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessagePostBulletinCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessagePostBulletinCmd::fd() const {
  return fd_;
}
inline void CGMMessagePostBulletinCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string content = 3;
inline bool CGMMessagePostBulletinCmd::has_content() const {
  return _has_bit(2);
}
inline void CGMMessagePostBulletinCmd::clear_content() {
  if (content_ != &_default_content_) {
    content_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessagePostBulletinCmd::content() const {
  return *content_;
}
inline void CGMMessagePostBulletinCmd::set_content(const ::std::string& value) {
  _set_bit(2);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CGMMessagePostBulletinCmd::set_content(const char* value) {
  _set_bit(2);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CGMMessagePostBulletinCmd::set_content(const char* value, size_t size) {
  _set_bit(2);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessagePostBulletinCmd::mutable_content() {
  _set_bit(2);
  if (content_ == &_default_content_) {
    content_ = new ::std::string;
  }
  return content_;
}

// optional uint32 times = 4;
inline bool CGMMessagePostBulletinCmd::has_times() const {
  return _has_bit(3);
}
inline void CGMMessagePostBulletinCmd::clear_times() {
  times_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMessagePostBulletinCmd::times() const {
  return times_;
}
inline void CGMMessagePostBulletinCmd::set_times(::google::protobuf::uint32 value) {
  _set_bit(3);
  times_ = value;
}

// optional uint32 interval = 5;
inline bool CGMMessagePostBulletinCmd::has_interval() const {
  return _has_bit(4);
}
inline void CGMMessagePostBulletinCmd::clear_interval() {
  interval_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CGMMessagePostBulletinCmd::interval() const {
  return interval_;
}
inline void CGMMessagePostBulletinCmd::set_interval(::google::protobuf::uint32 value) {
  _set_bit(4);
  interval_ = value;
}

// -------------------------------------------------------------------

// CGMMessageMultiExpCmd

// optional uint32 session_id = 1;
inline bool CGMMessageMultiExpCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageMultiExpCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageMultiExpCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageMultiExpCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageMultiExpCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageMultiExpCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageMultiExpCmd::fd() const {
  return fd_;
}
inline void CGMMessageMultiExpCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 gateway_id = 3;
inline bool CGMMessageMultiExpCmd::has_gateway_id() const {
  return _has_bit(2);
}
inline void CGMMessageMultiExpCmd::clear_gateway_id() {
  gateway_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageMultiExpCmd::gateway_id() const {
  return gateway_id_;
}
inline void CGMMessageMultiExpCmd::set_gateway_id(::google::protobuf::int32 value) {
  _set_bit(2);
  gateway_id_ = value;
}

// optional int32 server_id = 4;
inline bool CGMMessageMultiExpCmd::has_server_id() const {
  return _has_bit(3);
}
inline void CGMMessageMultiExpCmd::clear_server_id() {
  server_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageMultiExpCmd::server_id() const {
  return server_id_;
}
inline void CGMMessageMultiExpCmd::set_server_id(::google::protobuf::int32 value) {
  _set_bit(3);
  server_id_ = value;
}

// optional int32 exp_type = 5;
inline bool CGMMessageMultiExpCmd::has_exp_type() const {
  return _has_bit(4);
}
inline void CGMMessageMultiExpCmd::clear_exp_type() {
  exp_type_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageMultiExpCmd::exp_type() const {
  return exp_type_;
}
inline void CGMMessageMultiExpCmd::set_exp_type(::google::protobuf::int32 value) {
  _set_bit(4);
  exp_type_ = value;
}

// optional string multi_num = 6;
inline bool CGMMessageMultiExpCmd::has_multi_num() const {
  return _has_bit(5);
}
inline void CGMMessageMultiExpCmd::clear_multi_num() {
  if (multi_num_ != &_default_multi_num_) {
    multi_num_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageMultiExpCmd::multi_num() const {
  return *multi_num_;
}
inline void CGMMessageMultiExpCmd::set_multi_num(const ::std::string& value) {
  _set_bit(5);
  if (multi_num_ == &_default_multi_num_) {
    multi_num_ = new ::std::string;
  }
  multi_num_->assign(value);
}
inline void CGMMessageMultiExpCmd::set_multi_num(const char* value) {
  _set_bit(5);
  if (multi_num_ == &_default_multi_num_) {
    multi_num_ = new ::std::string;
  }
  multi_num_->assign(value);
}
inline void CGMMessageMultiExpCmd::set_multi_num(const char* value, size_t size) {
  _set_bit(5);
  if (multi_num_ == &_default_multi_num_) {
    multi_num_ = new ::std::string;
  }
  multi_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageMultiExpCmd::mutable_multi_num() {
  _set_bit(5);
  if (multi_num_ == &_default_multi_num_) {
    multi_num_ = new ::std::string;
  }
  return multi_num_;
}

// optional string reason = 7;
inline bool CGMMessageMultiExpCmd::has_reason() const {
  return _has_bit(6);
}
inline void CGMMessageMultiExpCmd::clear_reason() {
  if (reason_ != &_default_reason_) {
    reason_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMessageMultiExpCmd::reason() const {
  return *reason_;
}
inline void CGMMessageMultiExpCmd::set_reason(const ::std::string& value) {
  _set_bit(6);
  if (reason_ == &_default_reason_) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void CGMMessageMultiExpCmd::set_reason(const char* value) {
  _set_bit(6);
  if (reason_ == &_default_reason_) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void CGMMessageMultiExpCmd::set_reason(const char* value, size_t size) {
  _set_bit(6);
  if (reason_ == &_default_reason_) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageMultiExpCmd::mutable_reason() {
  _set_bit(6);
  if (reason_ == &_default_reason_) {
    reason_ = new ::std::string;
  }
  return reason_;
}

// optional int32 start_time = 8;
inline bool CGMMessageMultiExpCmd::has_start_time() const {
  return _has_bit(7);
}
inline void CGMMessageMultiExpCmd::clear_start_time() {
  start_time_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 CGMMessageMultiExpCmd::start_time() const {
  return start_time_;
}
inline void CGMMessageMultiExpCmd::set_start_time(::google::protobuf::int32 value) {
  _set_bit(7);
  start_time_ = value;
}

// optional int32 end_time = 9;
inline bool CGMMessageMultiExpCmd::has_end_time() const {
  return _has_bit(8);
}
inline void CGMMessageMultiExpCmd::clear_end_time() {
  end_time_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 CGMMessageMultiExpCmd::end_time() const {
  return end_time_;
}
inline void CGMMessageMultiExpCmd::set_end_time(::google::protobuf::int32 value) {
  _set_bit(8);
  end_time_ = value;
}

// -------------------------------------------------------------------

// CGMMessageCancelMultiExpCmd

// optional uint32 session_id = 1;
inline bool CGMMessageCancelMultiExpCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageCancelMultiExpCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageCancelMultiExpCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageCancelMultiExpCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageCancelMultiExpCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageCancelMultiExpCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageCancelMultiExpCmd::fd() const {
  return fd_;
}
inline void CGMMessageCancelMultiExpCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 gateway_id = 3;
inline bool CGMMessageCancelMultiExpCmd::has_gateway_id() const {
  return _has_bit(2);
}
inline void CGMMessageCancelMultiExpCmd::clear_gateway_id() {
  gateway_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageCancelMultiExpCmd::gateway_id() const {
  return gateway_id_;
}
inline void CGMMessageCancelMultiExpCmd::set_gateway_id(::google::protobuf::int32 value) {
  _set_bit(2);
  gateway_id_ = value;
}

// optional int32 server_id = 4;
inline bool CGMMessageCancelMultiExpCmd::has_server_id() const {
  return _has_bit(3);
}
inline void CGMMessageCancelMultiExpCmd::clear_server_id() {
  server_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageCancelMultiExpCmd::server_id() const {
  return server_id_;
}
inline void CGMMessageCancelMultiExpCmd::set_server_id(::google::protobuf::int32 value) {
  _set_bit(3);
  server_id_ = value;
}

// optional int32 exp_type = 5;
inline bool CGMMessageCancelMultiExpCmd::has_exp_type() const {
  return _has_bit(4);
}
inline void CGMMessageCancelMultiExpCmd::clear_exp_type() {
  exp_type_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageCancelMultiExpCmd::exp_type() const {
  return exp_type_;
}
inline void CGMMessageCancelMultiExpCmd::set_exp_type(::google::protobuf::int32 value) {
  _set_bit(4);
  exp_type_ = value;
}

// optional int32 multi_num = 6;
inline bool CGMMessageCancelMultiExpCmd::has_multi_num() const {
  return _has_bit(5);
}
inline void CGMMessageCancelMultiExpCmd::clear_multi_num() {
  multi_num_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CGMMessageCancelMultiExpCmd::multi_num() const {
  return multi_num_;
}
inline void CGMMessageCancelMultiExpCmd::set_multi_num(::google::protobuf::int32 value) {
  _set_bit(5);
  multi_num_ = value;
}

// optional string reason = 7;
inline bool CGMMessageCancelMultiExpCmd::has_reason() const {
  return _has_bit(6);
}
inline void CGMMessageCancelMultiExpCmd::clear_reason() {
  if (reason_ != &_default_reason_) {
    reason_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMessageCancelMultiExpCmd::reason() const {
  return *reason_;
}
inline void CGMMessageCancelMultiExpCmd::set_reason(const ::std::string& value) {
  _set_bit(6);
  if (reason_ == &_default_reason_) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void CGMMessageCancelMultiExpCmd::set_reason(const char* value) {
  _set_bit(6);
  if (reason_ == &_default_reason_) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void CGMMessageCancelMultiExpCmd::set_reason(const char* value, size_t size) {
  _set_bit(6);
  if (reason_ == &_default_reason_) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageCancelMultiExpCmd::mutable_reason() {
  _set_bit(6);
  if (reason_ == &_default_reason_) {
    reason_ = new ::std::string;
  }
  return reason_;
}

// optional int32 start_time = 8;
inline bool CGMMessageCancelMultiExpCmd::has_start_time() const {
  return _has_bit(7);
}
inline void CGMMessageCancelMultiExpCmd::clear_start_time() {
  start_time_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 CGMMessageCancelMultiExpCmd::start_time() const {
  return start_time_;
}
inline void CGMMessageCancelMultiExpCmd::set_start_time(::google::protobuf::int32 value) {
  _set_bit(7);
  start_time_ = value;
}

// optional int32 end_time = 9;
inline bool CGMMessageCancelMultiExpCmd::has_end_time() const {
  return _has_bit(8);
}
inline void CGMMessageCancelMultiExpCmd::clear_end_time() {
  end_time_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 CGMMessageCancelMultiExpCmd::end_time() const {
  return end_time_;
}
inline void CGMMessageCancelMultiExpCmd::set_end_time(::google::protobuf::int32 value) {
  _set_bit(8);
  end_time_ = value;
}

// -------------------------------------------------------------------

// CGMMessageChangeMoneyCmd

// optional uint32 session_id = 1;
inline bool CGMMessageChangeMoneyCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageChangeMoneyCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageChangeMoneyCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageChangeMoneyCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageChangeMoneyCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageChangeMoneyCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageChangeMoneyCmd::fd() const {
  return fd_;
}
inline void CGMMessageChangeMoneyCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 server_id = 3;
inline bool CGMMessageChangeMoneyCmd::has_server_id() const {
  return _has_bit(2);
}
inline void CGMMessageChangeMoneyCmd::clear_server_id() {
  server_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageChangeMoneyCmd::server_id() const {
  return server_id_;
}
inline void CGMMessageChangeMoneyCmd::set_server_id(::google::protobuf::int32 value) {
  _set_bit(2);
  server_id_ = value;
}

// optional int32 role_id = 4;
inline bool CGMMessageChangeMoneyCmd::has_role_id() const {
  return _has_bit(3);
}
inline void CGMMessageChangeMoneyCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageChangeMoneyCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageChangeMoneyCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(3);
  role_id_ = value;
}

// optional int32 change_num = 5;
inline bool CGMMessageChangeMoneyCmd::has_change_num() const {
  return _has_bit(4);
}
inline void CGMMessageChangeMoneyCmd::clear_change_num() {
  change_num_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageChangeMoneyCmd::change_num() const {
  return change_num_;
}
inline void CGMMessageChangeMoneyCmd::set_change_num(::google::protobuf::int32 value) {
  _set_bit(4);
  change_num_ = value;
}

// -------------------------------------------------------------------

// CGMMessageChangeExpCmd

// optional uint32 session_id = 1;
inline bool CGMMessageChangeExpCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageChangeExpCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageChangeExpCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageChangeExpCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageChangeExpCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageChangeExpCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageChangeExpCmd::fd() const {
  return fd_;
}
inline void CGMMessageChangeExpCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 server_id = 3;
inline bool CGMMessageChangeExpCmd::has_server_id() const {
  return _has_bit(2);
}
inline void CGMMessageChangeExpCmd::clear_server_id() {
  server_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageChangeExpCmd::server_id() const {
  return server_id_;
}
inline void CGMMessageChangeExpCmd::set_server_id(::google::protobuf::int32 value) {
  _set_bit(2);
  server_id_ = value;
}

// optional int32 role_id = 4;
inline bool CGMMessageChangeExpCmd::has_role_id() const {
  return _has_bit(3);
}
inline void CGMMessageChangeExpCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageChangeExpCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageChangeExpCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(3);
  role_id_ = value;
}

// optional int32 change_num = 5;
inline bool CGMMessageChangeExpCmd::has_change_num() const {
  return _has_bit(4);
}
inline void CGMMessageChangeExpCmd::clear_change_num() {
  change_num_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageChangeExpCmd::change_num() const {
  return change_num_;
}
inline void CGMMessageChangeExpCmd::set_change_num(::google::protobuf::int32 value) {
  _set_bit(4);
  change_num_ = value;
}

// -------------------------------------------------------------------

// CGMMessageChangeItemCmd

// optional uint32 session_id = 1;
inline bool CGMMessageChangeItemCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageChangeItemCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageChangeItemCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageChangeItemCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageChangeItemCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageChangeItemCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageChangeItemCmd::fd() const {
  return fd_;
}
inline void CGMMessageChangeItemCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 server_id = 3;
inline bool CGMMessageChangeItemCmd::has_server_id() const {
  return _has_bit(2);
}
inline void CGMMessageChangeItemCmd::clear_server_id() {
  server_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageChangeItemCmd::server_id() const {
  return server_id_;
}
inline void CGMMessageChangeItemCmd::set_server_id(::google::protobuf::int32 value) {
  _set_bit(2);
  server_id_ = value;
}

// optional int32 role_id = 4;
inline bool CGMMessageChangeItemCmd::has_role_id() const {
  return _has_bit(3);
}
inline void CGMMessageChangeItemCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageChangeItemCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageChangeItemCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(3);
  role_id_ = value;
}

// optional int32 item_code = 5;
inline bool CGMMessageChangeItemCmd::has_item_code() const {
  return _has_bit(4);
}
inline void CGMMessageChangeItemCmd::clear_item_code() {
  item_code_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageChangeItemCmd::item_code() const {
  return item_code_;
}
inline void CGMMessageChangeItemCmd::set_item_code(::google::protobuf::int32 value) {
  _set_bit(4);
  item_code_ = value;
}

// optional int32 item_num = 6;
inline bool CGMMessageChangeItemCmd::has_item_num() const {
  return _has_bit(5);
}
inline void CGMMessageChangeItemCmd::clear_item_num() {
  item_num_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CGMMessageChangeItemCmd::item_num() const {
  return item_num_;
}
inline void CGMMessageChangeItemCmd::set_item_num(::google::protobuf::int32 value) {
  _set_bit(5);
  item_num_ = value;
}

// -------------------------------------------------------------------

// CGMMessageDeleteRoleCmd

// optional uint32 session_id = 1;
inline bool CGMMessageDeleteRoleCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageDeleteRoleCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageDeleteRoleCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageDeleteRoleCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageDeleteRoleCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageDeleteRoleCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageDeleteRoleCmd::fd() const {
  return fd_;
}
inline void CGMMessageDeleteRoleCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageDeleteRoleCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageDeleteRoleCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageDeleteRoleCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageDeleteRoleCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageClearBagCmd

// optional uint32 session_id = 1;
inline bool CGMMessageClearBagCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageClearBagCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageClearBagCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageClearBagCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageClearBagCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageClearBagCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageClearBagCmd::fd() const {
  return fd_;
}
inline void CGMMessageClearBagCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 role_id = 3;
inline bool CGMMessageClearBagCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageClearBagCmd::clear_role_id() {
  role_id_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageClearBagCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageClearBagCmd::set_role_id(::google::protobuf::int32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional string bag_name = 4;
inline bool CGMMessageClearBagCmd::has_bag_name() const {
  return _has_bit(3);
}
inline void CGMMessageClearBagCmd::clear_bag_name() {
  if (bag_name_ != &_default_bag_name_) {
    bag_name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageClearBagCmd::bag_name() const {
  return *bag_name_;
}
inline void CGMMessageClearBagCmd::set_bag_name(const ::std::string& value) {
  _set_bit(3);
  if (bag_name_ == &_default_bag_name_) {
    bag_name_ = new ::std::string;
  }
  bag_name_->assign(value);
}
inline void CGMMessageClearBagCmd::set_bag_name(const char* value) {
  _set_bit(3);
  if (bag_name_ == &_default_bag_name_) {
    bag_name_ = new ::std::string;
  }
  bag_name_->assign(value);
}
inline void CGMMessageClearBagCmd::set_bag_name(const char* value, size_t size) {
  _set_bit(3);
  if (bag_name_ == &_default_bag_name_) {
    bag_name_ = new ::std::string;
  }
  bag_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageClearBagCmd::mutable_bag_name() {
  _set_bit(3);
  if (bag_name_ == &_default_bag_name_) {
    bag_name_ = new ::std::string;
  }
  return bag_name_;
}

// -------------------------------------------------------------------

// CGMMessageChangePetCmd

// optional uint32 session_id = 1;
inline bool CGMMessageChangePetCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageChangePetCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageChangePetCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageChangePetCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageChangePetCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageChangePetCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageChangePetCmd::fd() const {
  return fd_;
}
inline void CGMMessageChangePetCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageChangePetCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageChangePetCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageChangePetCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageChangePetCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional string user_name = 4;
inline bool CGMMessageChangePetCmd::has_user_name() const {
  return _has_bit(3);
}
inline void CGMMessageChangePetCmd::clear_user_name() {
  if (user_name_ != &_default_user_name_) {
    user_name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageChangePetCmd::user_name() const {
  return *user_name_;
}
inline void CGMMessageChangePetCmd::set_user_name(const ::std::string& value) {
  _set_bit(3);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CGMMessageChangePetCmd::set_user_name(const char* value) {
  _set_bit(3);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CGMMessageChangePetCmd::set_user_name(const char* value, size_t size) {
  _set_bit(3);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageChangePetCmd::mutable_user_name() {
  _set_bit(3);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}

// -------------------------------------------------------------------

// CGMMessageSetOLGMAccountCmd

// optional uint32 session_id = 1;
inline bool CGMMessageSetOLGMAccountCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageSetOLGMAccountCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageSetOLGMAccountCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageSetOLGMAccountCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageSetOLGMAccountCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageSetOLGMAccountCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageSetOLGMAccountCmd::fd() const {
  return fd_;
}
inline void CGMMessageSetOLGMAccountCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 user_id = 3;
inline bool CGMMessageSetOLGMAccountCmd::has_user_id() const {
  return _has_bit(2);
}
inline void CGMMessageSetOLGMAccountCmd::clear_user_id() {
  user_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageSetOLGMAccountCmd::user_id() const {
  return user_id_;
}
inline void CGMMessageSetOLGMAccountCmd::set_user_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  user_id_ = value;
}

// optional string password = 4;
inline bool CGMMessageSetOLGMAccountCmd::has_password() const {
  return _has_bit(3);
}
inline void CGMMessageSetOLGMAccountCmd::clear_password() {
  if (password_ != &_default_password_) {
    password_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageSetOLGMAccountCmd::password() const {
  return *password_;
}
inline void CGMMessageSetOLGMAccountCmd::set_password(const ::std::string& value) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CGMMessageSetOLGMAccountCmd::set_password(const char* value) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void CGMMessageSetOLGMAccountCmd::set_password(const char* value, size_t size) {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageSetOLGMAccountCmd::mutable_password() {
  _set_bit(3);
  if (password_ == &_default_password_) {
    password_ = new ::std::string;
  }
  return password_;
}

// -------------------------------------------------------------------

// CGMMessageIbInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageIbInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageIbInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageIbInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageIbInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageIbInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageIbInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageIbInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageIbInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 item_id = 3;
inline bool CGMMessageIbInfoCmd::has_item_id() const {
  return _has_bit(2);
}
inline void CGMMessageIbInfoCmd::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageIbInfoCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageIbInfoCmd::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  item_id_ = value;
}

// -------------------------------------------------------------------

// PBIbItem

// optional uint32 item_id = 1;
inline bool PBIbItem::has_item_id() const {
  return _has_bit(0);
}
inline void PBIbItem::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBIbItem::item_id() const {
  return item_id_;
}
inline void PBIbItem::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  item_id_ = value;
}

// optional string item_location = 2;
inline bool PBIbItem::has_item_location() const {
  return _has_bit(1);
}
inline void PBIbItem::clear_item_location() {
  if (item_location_ != &_default_item_location_) {
    item_location_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBIbItem::item_location() const {
  return *item_location_;
}
inline void PBIbItem::set_item_location(const ::std::string& value) {
  _set_bit(1);
  if (item_location_ == &_default_item_location_) {
    item_location_ = new ::std::string;
  }
  item_location_->assign(value);
}
inline void PBIbItem::set_item_location(const char* value) {
  _set_bit(1);
  if (item_location_ == &_default_item_location_) {
    item_location_ = new ::std::string;
  }
  item_location_->assign(value);
}
inline void PBIbItem::set_item_location(const char* value, size_t size) {
  _set_bit(1);
  if (item_location_ == &_default_item_location_) {
    item_location_ = new ::std::string;
  }
  item_location_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBIbItem::mutable_item_location() {
  _set_bit(1);
  if (item_location_ == &_default_item_location_) {
    item_location_ = new ::std::string;
  }
  return item_location_;
}

// optional uint32 pay_type = 3;
inline bool PBIbItem::has_pay_type() const {
  return _has_bit(2);
}
inline void PBIbItem::clear_pay_type() {
  pay_type_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBIbItem::pay_type() const {
  return pay_type_;
}
inline void PBIbItem::set_pay_type(::google::protobuf::uint32 value) {
  _set_bit(2);
  pay_type_ = value;
}

// optional uint32 item_type = 4;
inline bool PBIbItem::has_item_type() const {
  return _has_bit(3);
}
inline void PBIbItem::clear_item_type() {
  item_type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBIbItem::item_type() const {
  return item_type_;
}
inline void PBIbItem::set_item_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  item_type_ = value;
}

// optional uint32 item_limit = 5;
inline bool PBIbItem::has_item_limit() const {
  return _has_bit(4);
}
inline void PBIbItem::clear_item_limit() {
  item_limit_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBIbItem::item_limit() const {
  return item_limit_;
}
inline void PBIbItem::set_item_limit(::google::protobuf::uint32 value) {
  _set_bit(4);
  item_limit_ = value;
}

// optional uint32 price = 6;
inline bool PBIbItem::has_price() const {
  return _has_bit(5);
}
inline void PBIbItem::clear_price() {
  price_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBIbItem::price() const {
  return price_;
}
inline void PBIbItem::set_price(::google::protobuf::uint32 value) {
  _set_bit(5);
  price_ = value;
}

// optional uint32 discount = 7;
inline bool PBIbItem::has_discount() const {
  return _has_bit(6);
}
inline void PBIbItem::clear_discount() {
  discount_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBIbItem::discount() const {
  return discount_;
}
inline void PBIbItem::set_discount(::google::protobuf::uint32 value) {
  _set_bit(6);
  discount_ = value;
}

// optional uint32 start_time = 8;
inline bool PBIbItem::has_start_time() const {
  return _has_bit(7);
}
inline void PBIbItem::clear_start_time() {
  start_time_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBIbItem::start_time() const {
  return start_time_;
}
inline void PBIbItem::set_start_time(::google::protobuf::uint32 value) {
  _set_bit(7);
  start_time_ = value;
}

// optional uint32 sale_room = 9;
inline bool PBIbItem::has_sale_room() const {
  return _has_bit(8);
}
inline void PBIbItem::clear_sale_room() {
  sale_room_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBIbItem::sale_room() const {
  return sale_room_;
}
inline void PBIbItem::set_sale_room(::google::protobuf::uint32 value) {
  _set_bit(8);
  sale_room_ = value;
}

// optional uint32 on_sale = 10;
inline bool PBIbItem::has_on_sale() const {
  return _has_bit(9);
}
inline void PBIbItem::clear_on_sale() {
  on_sale_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBIbItem::on_sale() const {
  return on_sale_;
}
inline void PBIbItem::set_on_sale(::google::protobuf::uint32 value) {
  _set_bit(9);
  on_sale_ = value;
}

// -------------------------------------------------------------------

// CGMMessageIbInfoResult

// optional uint32 session_id = 1;
inline bool CGMMessageIbInfoResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageIbInfoResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageIbInfoResult::session_id() const {
  return session_id_;
}
inline void CGMMessageIbInfoResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageIbInfoResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageIbInfoResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageIbInfoResult::fd() const {
  return fd_;
}
inline void CGMMessageIbInfoResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 isall = 3;
inline bool CGMMessageIbInfoResult::has_isall() const {
  return _has_bit(2);
}
inline void CGMMessageIbInfoResult::clear_isall() {
  isall_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageIbInfoResult::isall() const {
  return isall_;
}
inline void CGMMessageIbInfoResult::set_isall(::google::protobuf::uint32 value) {
  _set_bit(2);
  isall_ = value;
}

// repeated .PBIbItem ibitems = 4;
inline int CGMMessageIbInfoResult::ibitems_size() const {
  return ibitems_.size();
}
inline void CGMMessageIbInfoResult::clear_ibitems() {
  ibitems_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbItem >&
CGMMessageIbInfoResult::ibitems() const {
  return ibitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbItem >*
CGMMessageIbInfoResult::mutable_ibitems() {
  return &ibitems_;
}
inline const ::PBIbItem& CGMMessageIbInfoResult::ibitems(int index) const {
  return ibitems_.Get(index);
}
inline ::PBIbItem* CGMMessageIbInfoResult::mutable_ibitems(int index) {
  return ibitems_.Mutable(index);
}
inline ::PBIbItem* CGMMessageIbInfoResult::add_ibitems() {
  return ibitems_.Add();
}

// -------------------------------------------------------------------

// CGMMessageSetIbPriceCmd

// optional uint32 session_id = 1;
inline bool CGMMessageSetIbPriceCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageSetIbPriceCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageSetIbPriceCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageSetIbPriceCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageSetIbPriceCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageSetIbPriceCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageSetIbPriceCmd::fd() const {
  return fd_;
}
inline void CGMMessageSetIbPriceCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 item_id = 3;
inline bool CGMMessageSetIbPriceCmd::has_item_id() const {
  return _has_bit(2);
}
inline void CGMMessageSetIbPriceCmd::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageSetIbPriceCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageSetIbPriceCmd::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  item_id_ = value;
}

// optional uint32 price = 4;
inline bool CGMMessageSetIbPriceCmd::has_price() const {
  return _has_bit(3);
}
inline void CGMMessageSetIbPriceCmd::clear_price() {
  price_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMessageSetIbPriceCmd::price() const {
  return price_;
}
inline void CGMMessageSetIbPriceCmd::set_price(::google::protobuf::uint32 value) {
  _set_bit(3);
  price_ = value;
}

// optional uint32 time = 5;
inline bool CGMMessageSetIbPriceCmd::has_time() const {
  return _has_bit(4);
}
inline void CGMMessageSetIbPriceCmd::clear_time() {
  time_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CGMMessageSetIbPriceCmd::time() const {
  return time_;
}
inline void CGMMessageSetIbPriceCmd::set_time(::google::protobuf::uint32 value) {
  _set_bit(4);
  time_ = value;
}

// optional uint32 limit_num = 6;
inline bool CGMMessageSetIbPriceCmd::has_limit_num() const {
  return _has_bit(5);
}
inline void CGMMessageSetIbPriceCmd::clear_limit_num() {
  limit_num_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CGMMessageSetIbPriceCmd::limit_num() const {
  return limit_num_;
}
inline void CGMMessageSetIbPriceCmd::set_limit_num(::google::protobuf::uint32 value) {
  _set_bit(5);
  limit_num_ = value;
}

// -------------------------------------------------------------------

// CGMMessageSetIbLocationCmd

// optional uint32 session_id = 1;
inline bool CGMMessageSetIbLocationCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageSetIbLocationCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageSetIbLocationCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageSetIbLocationCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageSetIbLocationCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageSetIbLocationCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageSetIbLocationCmd::fd() const {
  return fd_;
}
inline void CGMMessageSetIbLocationCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string pos = 3;
inline bool CGMMessageSetIbLocationCmd::has_pos() const {
  return _has_bit(2);
}
inline void CGMMessageSetIbLocationCmd::clear_pos() {
  if (pos_ != &_default_pos_) {
    pos_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageSetIbLocationCmd::pos() const {
  return *pos_;
}
inline void CGMMessageSetIbLocationCmd::set_pos(const ::std::string& value) {
  _set_bit(2);
  if (pos_ == &_default_pos_) {
    pos_ = new ::std::string;
  }
  pos_->assign(value);
}
inline void CGMMessageSetIbLocationCmd::set_pos(const char* value) {
  _set_bit(2);
  if (pos_ == &_default_pos_) {
    pos_ = new ::std::string;
  }
  pos_->assign(value);
}
inline void CGMMessageSetIbLocationCmd::set_pos(const char* value, size_t size) {
  _set_bit(2);
  if (pos_ == &_default_pos_) {
    pos_ = new ::std::string;
  }
  pos_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageSetIbLocationCmd::mutable_pos() {
  _set_bit(2);
  if (pos_ == &_default_pos_) {
    pos_ = new ::std::string;
  }
  return pos_;
}

// -------------------------------------------------------------------

// CGMMessageIbOnSaleCmd

// optional uint32 session_id = 1;
inline bool CGMMessageIbOnSaleCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageIbOnSaleCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageIbOnSaleCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageIbOnSaleCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageIbOnSaleCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageIbOnSaleCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageIbOnSaleCmd::fd() const {
  return fd_;
}
inline void CGMMessageIbOnSaleCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 item_id = 3;
inline bool CGMMessageIbOnSaleCmd::has_item_id() const {
  return _has_bit(2);
}
inline void CGMMessageIbOnSaleCmd::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageIbOnSaleCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageIbOnSaleCmd::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  item_id_ = value;
}

// optional string pos = 4;
inline bool CGMMessageIbOnSaleCmd::has_pos() const {
  return _has_bit(3);
}
inline void CGMMessageIbOnSaleCmd::clear_pos() {
  if (pos_ != &_default_pos_) {
    pos_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageIbOnSaleCmd::pos() const {
  return *pos_;
}
inline void CGMMessageIbOnSaleCmd::set_pos(const ::std::string& value) {
  _set_bit(3);
  if (pos_ == &_default_pos_) {
    pos_ = new ::std::string;
  }
  pos_->assign(value);
}
inline void CGMMessageIbOnSaleCmd::set_pos(const char* value) {
  _set_bit(3);
  if (pos_ == &_default_pos_) {
    pos_ = new ::std::string;
  }
  pos_->assign(value);
}
inline void CGMMessageIbOnSaleCmd::set_pos(const char* value, size_t size) {
  _set_bit(3);
  if (pos_ == &_default_pos_) {
    pos_ = new ::std::string;
  }
  pos_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageIbOnSaleCmd::mutable_pos() {
  _set_bit(3);
  if (pos_ == &_default_pos_) {
    pos_ = new ::std::string;
  }
  return pos_;
}

// -------------------------------------------------------------------

// CGMMessageIbNotSaleCmd

// optional uint32 session_id = 1;
inline bool CGMMessageIbNotSaleCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageIbNotSaleCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageIbNotSaleCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageIbNotSaleCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageIbNotSaleCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageIbNotSaleCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageIbNotSaleCmd::fd() const {
  return fd_;
}
inline void CGMMessageIbNotSaleCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 item_id = 3;
inline bool CGMMessageIbNotSaleCmd::has_item_id() const {
  return _has_bit(2);
}
inline void CGMMessageIbNotSaleCmd::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageIbNotSaleCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageIbNotSaleCmd::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  item_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageIbDescriptCmd

// optional uint32 session_id = 1;
inline bool CGMMessageIbDescriptCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageIbDescriptCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageIbDescriptCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageIbDescriptCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageIbDescriptCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageIbDescriptCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageIbDescriptCmd::fd() const {
  return fd_;
}
inline void CGMMessageIbDescriptCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 item_id = 3;
inline bool CGMMessageIbDescriptCmd::has_item_id() const {
  return _has_bit(2);
}
inline void CGMMessageIbDescriptCmd::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageIbDescriptCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageIbDescriptCmd::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  item_id_ = value;
}

// optional string description = 4;
inline bool CGMMessageIbDescriptCmd::has_description() const {
  return _has_bit(3);
}
inline void CGMMessageIbDescriptCmd::clear_description() {
  if (description_ != &_default_description_) {
    description_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageIbDescriptCmd::description() const {
  return *description_;
}
inline void CGMMessageIbDescriptCmd::set_description(const ::std::string& value) {
  _set_bit(3);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void CGMMessageIbDescriptCmd::set_description(const char* value) {
  _set_bit(3);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void CGMMessageIbDescriptCmd::set_description(const char* value, size_t size) {
  _set_bit(3);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageIbDescriptCmd::mutable_description() {
  _set_bit(3);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  return description_;
}

// -------------------------------------------------------------------

// CGMMessageIpBindCmd

// optional uint32 session_id = 1;
inline bool CGMMessageIpBindCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageIpBindCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageIpBindCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageIpBindCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageIpBindCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageIpBindCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageIpBindCmd::fd() const {
  return fd_;
}
inline void CGMMessageIpBindCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 user_id = 3;
inline bool CGMMessageIpBindCmd::has_user_id() const {
  return _has_bit(2);
}
inline void CGMMessageIpBindCmd::clear_user_id() {
  user_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageIpBindCmd::user_id() const {
  return user_id_;
}
inline void CGMMessageIpBindCmd::set_user_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  user_id_ = value;
}

// optional string ip = 4;
inline bool CGMMessageIpBindCmd::has_ip() const {
  return _has_bit(3);
}
inline void CGMMessageIpBindCmd::clear_ip() {
  if (ip_ != &_default_ip_) {
    ip_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageIpBindCmd::ip() const {
  return *ip_;
}
inline void CGMMessageIpBindCmd::set_ip(const ::std::string& value) {
  _set_bit(3);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void CGMMessageIpBindCmd::set_ip(const char* value) {
  _set_bit(3);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void CGMMessageIpBindCmd::set_ip(const char* value, size_t size) {
  _set_bit(3);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageIpBindCmd::mutable_ip() {
  _set_bit(3);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  return ip_;
}

// optional uint32 type = 5;
inline bool CGMMessageIpBindCmd::has_type() const {
  return _has_bit(4);
}
inline void CGMMessageIpBindCmd::clear_type() {
  type_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CGMMessageIpBindCmd::type() const {
  return type_;
}
inline void CGMMessageIpBindCmd::set_type(::google::protobuf::uint32 value) {
  _set_bit(4);
  type_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleProtoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleProtoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleProtoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleProtoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleProtoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleProtoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleProtoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleProtoCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleProtoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleProtoCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleProtoCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleProtoCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleProtoCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional string field_name = 4;
inline bool CGMMessageRoleProtoCmd::has_field_name() const {
  return _has_bit(3);
}
inline void CGMMessageRoleProtoCmd::clear_field_name() {
  if (field_name_ != &_default_field_name_) {
    field_name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageRoleProtoCmd::field_name() const {
  return *field_name_;
}
inline void CGMMessageRoleProtoCmd::set_field_name(const ::std::string& value) {
  _set_bit(3);
  if (field_name_ == &_default_field_name_) {
    field_name_ = new ::std::string;
  }
  field_name_->assign(value);
}
inline void CGMMessageRoleProtoCmd::set_field_name(const char* value) {
  _set_bit(3);
  if (field_name_ == &_default_field_name_) {
    field_name_ = new ::std::string;
  }
  field_name_->assign(value);
}
inline void CGMMessageRoleProtoCmd::set_field_name(const char* value, size_t size) {
  _set_bit(3);
  if (field_name_ == &_default_field_name_) {
    field_name_ = new ::std::string;
  }
  field_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleProtoCmd::mutable_field_name() {
  _set_bit(3);
  if (field_name_ == &_default_field_name_) {
    field_name_ = new ::std::string;
  }
  return field_name_;
}

// -------------------------------------------------------------------

// CGMMessageRoleEquipmentCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleEquipmentCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleEquipmentCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleEquipmentCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleEquipmentCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleEquipmentCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleEquipmentCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleEquipmentCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleEquipmentCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleEquipmentCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRolePackInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRolePackInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRolePackInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRolePackInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRolePackInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRolePackInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRolePackInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRolePackInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageRolePackInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRolePackInfoCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRolePackInfoCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRolePackInfoCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRolePackInfoCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleItemInPackCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleItemInPackCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleItemInPackCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemInPackCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleItemInPackCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleItemInPackCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleItemInPackCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemInPackCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleItemInPackCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleItemInPackCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleItemInPackCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemInPackCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleItemInPackCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional uint32 item_id = 4;
inline bool CGMMessageRoleItemInPackCmd::has_item_id() const {
  return _has_bit(3);
}
inline void CGMMessageRoleItemInPackCmd::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemInPackCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageRoleItemInPackCmd::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  item_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleSkillInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleSkillInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleSkillInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleSkillInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleSkillInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleSkillInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleSkillInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleSkillInfoCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleSkillInfoCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillInfoCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleSkillInfoCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleSkillDetailCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleSkillDetailCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleSkillDetailCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillDetailCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleSkillDetailCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleSkillDetailCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleSkillDetailCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillDetailCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleSkillDetailCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleSkillDetailCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleSkillDetailCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillDetailCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleSkillDetailCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional uint32 skill_id = 4;
inline bool CGMMessageRoleSkillDetailCmd::has_skill_id() const {
  return _has_bit(3);
}
inline void CGMMessageRoleSkillDetailCmd::clear_skill_id() {
  skill_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillDetailCmd::skill_id() const {
  return skill_id_;
}
inline void CGMMessageRoleSkillDetailCmd::set_skill_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  skill_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleEquipmentResult

// optional uint32 session_id = 1;
inline bool CGMMessageRoleEquipmentResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleEquipmentResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleEquipmentResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleEquipmentResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleEquipmentResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentResult::fd() const {
  return fd_;
}
inline void CGMMessageRoleEquipmentResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBItemBox proto = 3;
inline bool CGMMessageRoleEquipmentResult::has_proto() const {
  return _has_bit(2);
}
inline void CGMMessageRoleEquipmentResult::clear_proto() {
  if (proto_ != NULL) proto_->::PBItemBox::Clear();
  _clear_bit(2);
}
inline const ::PBItemBox& CGMMessageRoleEquipmentResult::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBItemBox* CGMMessageRoleEquipmentResult::mutable_proto() {
  _set_bit(2);
  if (proto_ == NULL) proto_ = new ::PBItemBox;
  return proto_;
}

// -------------------------------------------------------------------

// CGMMessageRolePackInfoResult

// optional uint32 session_id = 1;
inline bool CGMMessageRolePackInfoResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRolePackInfoResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRolePackInfoResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRolePackInfoResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRolePackInfoResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRolePackInfoResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRolePackInfoResult::fd() const {
  return fd_;
}
inline void CGMMessageRolePackInfoResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBItemBox proto = 3;
inline bool CGMMessageRolePackInfoResult::has_proto() const {
  return _has_bit(2);
}
inline void CGMMessageRolePackInfoResult::clear_proto() {
  if (proto_ != NULL) proto_->::PBItemBox::Clear();
  _clear_bit(2);
}
inline const ::PBItemBox& CGMMessageRolePackInfoResult::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBItemBox* CGMMessageRolePackInfoResult::mutable_proto() {
  _set_bit(2);
  if (proto_ == NULL) proto_ = new ::PBItemBox;
  return proto_;
}

// -------------------------------------------------------------------

// CGMMessageRoleItemInPackResult

// optional uint32 session_id = 1;
inline bool CGMMessageRoleItemInPackResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleItemInPackResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemInPackResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleItemInPackResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleItemInPackResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleItemInPackResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemInPackResult::fd() const {
  return fd_;
}
inline void CGMMessageRoleItemInPackResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBItemObject proto = 3;
inline bool CGMMessageRoleItemInPackResult::has_proto() const {
  return _has_bit(2);
}
inline void CGMMessageRoleItemInPackResult::clear_proto() {
  if (proto_ != NULL) proto_->::PBItemObject::Clear();
  _clear_bit(2);
}
inline const ::PBItemObject& CGMMessageRoleItemInPackResult::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBItemObject* CGMMessageRoleItemInPackResult::mutable_proto() {
  _set_bit(2);
  if (proto_ == NULL) proto_ = new ::PBItemObject;
  return proto_;
}

// -------------------------------------------------------------------

// CGMMessageRoleSkillInfoResult

// optional uint32 session_id = 1;
inline bool CGMMessageRoleSkillInfoResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleSkillInfoResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillInfoResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleSkillInfoResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleSkillInfoResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleSkillInfoResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillInfoResult::fd() const {
  return fd_;
}
inline void CGMMessageRoleSkillInfoResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBSkillList proto = 3;
inline bool CGMMessageRoleSkillInfoResult::has_proto() const {
  return _has_bit(2);
}
inline void CGMMessageRoleSkillInfoResult::clear_proto() {
  if (proto_ != NULL) proto_->::PBSkillList::Clear();
  _clear_bit(2);
}
inline const ::PBSkillList& CGMMessageRoleSkillInfoResult::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBSkillList* CGMMessageRoleSkillInfoResult::mutable_proto() {
  _set_bit(2);
  if (proto_ == NULL) proto_ = new ::PBSkillList;
  return proto_;
}

// -------------------------------------------------------------------

// CGMMessageRoleSkillDetailResult

// optional uint32 session_id = 1;
inline bool CGMMessageRoleSkillDetailResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleSkillDetailResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillDetailResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleSkillDetailResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleSkillDetailResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleSkillDetailResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleSkillDetailResult::fd() const {
  return fd_;
}
inline void CGMMessageRoleSkillDetailResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBSkillObject proto = 3;
inline bool CGMMessageRoleSkillDetailResult::has_proto() const {
  return _has_bit(2);
}
inline void CGMMessageRoleSkillDetailResult::clear_proto() {
  if (proto_ != NULL) proto_->::PBSkillObject::Clear();
  _clear_bit(2);
}
inline const ::PBSkillObject& CGMMessageRoleSkillDetailResult::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBSkillObject* CGMMessageRoleSkillDetailResult::mutable_proto() {
  _set_bit(2);
  if (proto_ == NULL) proto_ = new ::PBSkillObject;
  return proto_;
}

// -------------------------------------------------------------------

// CMessageActivityListRequest

// optional uint32 RoleID = 1;
inline bool CMessageActivityListRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageActivityListRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageActivityListRequest::roleid() const {
  return roleid_;
}
inline void CMessageActivityListRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// PBActivity

// optional uint32 MenuID = 1;
inline bool PBActivity::has_menuid() const {
  return _has_bit(0);
}
inline void PBActivity::clear_menuid() {
  menuid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBActivity::menuid() const {
  return menuid_;
}
inline void PBActivity::set_menuid(::google::protobuf::uint32 value) {
  _set_bit(0);
  menuid_ = value;
}

// optional string Desc = 2;
inline bool PBActivity::has_desc() const {
  return _has_bit(1);
}
inline void PBActivity::clear_desc() {
  if (desc_ != &_default_desc_) {
    desc_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBActivity::desc() const {
  return *desc_;
}
inline void PBActivity::set_desc(const ::std::string& value) {
  _set_bit(1);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBActivity::set_desc(const char* value) {
  _set_bit(1);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBActivity::set_desc(const char* value, size_t size) {
  _set_bit(1);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBActivity::mutable_desc() {
  _set_bit(1);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  return desc_;
}

// optional uint32 BeginTime = 3;
inline bool PBActivity::has_begintime() const {
  return _has_bit(2);
}
inline void PBActivity::clear_begintime() {
  begintime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBActivity::begintime() const {
  return begintime_;
}
inline void PBActivity::set_begintime(::google::protobuf::uint32 value) {
  _set_bit(2);
  begintime_ = value;
}

// optional uint32 EndTime = 4;
inline bool PBActivity::has_endtime() const {
  return _has_bit(3);
}
inline void PBActivity::clear_endtime() {
  endtime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBActivity::endtime() const {
  return endtime_;
}
inline void PBActivity::set_endtime(::google::protobuf::uint32 value) {
  _set_bit(3);
  endtime_ = value;
}

// -------------------------------------------------------------------

// CMessageActivityListResponse

// optional uint32 RoleID = 1;
inline bool CMessageActivityListResponse::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageActivityListResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageActivityListResponse::roleid() const {
  return roleid_;
}
inline void CMessageActivityListResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// repeated .PBActivity activity = 2;
inline int CMessageActivityListResponse::activity_size() const {
  return activity_.size();
}
inline void CMessageActivityListResponse::clear_activity() {
  activity_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBActivity >&
CMessageActivityListResponse::activity() const {
  return activity_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBActivity >*
CMessageActivityListResponse::mutable_activity() {
  return &activity_;
}
inline const ::PBActivity& CMessageActivityListResponse::activity(int index) const {
  return activity_.Get(index);
}
inline ::PBActivity* CMessageActivityListResponse::mutable_activity(int index) {
  return activity_.Mutable(index);
}
inline ::PBActivity* CMessageActivityListResponse::add_activity() {
  return activity_.Add();
}

// -------------------------------------------------------------------

// CMessageUserItemListRequest

// optional uint32 AccountID = 1;
inline bool CMessageUserItemListRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageUserItemListRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUserItemListRequest::accountid() const {
  return accountid_;
}
inline void CMessageUserItemListRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageUserItemListRequest::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageUserItemListRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUserItemListRequest::roleid() const {
  return roleid_;
}
inline void CMessageUserItemListRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 MenuID = 3;
inline bool CMessageUserItemListRequest::has_menuid() const {
  return _has_bit(2);
}
inline void CMessageUserItemListRequest::clear_menuid() {
  menuid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUserItemListRequest::menuid() const {
  return menuid_;
}
inline void CMessageUserItemListRequest::set_menuid(::google::protobuf::uint32 value) {
  _set_bit(2);
  menuid_ = value;
}

// optional uint32 RoleLevel = 4;
inline bool CMessageUserItemListRequest::has_rolelevel() const {
  return _has_bit(3);
}
inline void CMessageUserItemListRequest::clear_rolelevel() {
  rolelevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUserItemListRequest::rolelevel() const {
  return rolelevel_;
}
inline void CMessageUserItemListRequest::set_rolelevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  rolelevel_ = value;
}

// optional uint32 RoleMetier = 5;
inline bool CMessageUserItemListRequest::has_rolemetier() const {
  return _has_bit(4);
}
inline void CMessageUserItemListRequest::clear_rolemetier() {
  rolemetier_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUserItemListRequest::rolemetier() const {
  return rolemetier_;
}
inline void CMessageUserItemListRequest::set_rolemetier(::google::protobuf::uint32 value) {
  _set_bit(4);
  rolemetier_ = value;
}

// optional uint32 RoleGender = 6;
inline bool CMessageUserItemListRequest::has_rolegender() const {
  return _has_bit(5);
}
inline void CMessageUserItemListRequest::clear_rolegender() {
  rolegender_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUserItemListRequest::rolegender() const {
  return rolegender_;
}
inline void CMessageUserItemListRequest::set_rolegender(::google::protobuf::uint32 value) {
  _set_bit(5);
  rolegender_ = value;
}

// -------------------------------------------------------------------

// PBActivityItem

// optional string ItemCode = 1;
inline bool PBActivityItem::has_itemcode() const {
  return _has_bit(0);
}
inline void PBActivityItem::clear_itemcode() {
  if (itemcode_ != &_default_itemcode_) {
    itemcode_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBActivityItem::itemcode() const {
  return *itemcode_;
}
inline void PBActivityItem::set_itemcode(const ::std::string& value) {
  _set_bit(0);
  if (itemcode_ == &_default_itemcode_) {
    itemcode_ = new ::std::string;
  }
  itemcode_->assign(value);
}
inline void PBActivityItem::set_itemcode(const char* value) {
  _set_bit(0);
  if (itemcode_ == &_default_itemcode_) {
    itemcode_ = new ::std::string;
  }
  itemcode_->assign(value);
}
inline void PBActivityItem::set_itemcode(const char* value, size_t size) {
  _set_bit(0);
  if (itemcode_ == &_default_itemcode_) {
    itemcode_ = new ::std::string;
  }
  itemcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBActivityItem::mutable_itemcode() {
  _set_bit(0);
  if (itemcode_ == &_default_itemcode_) {
    itemcode_ = new ::std::string;
  }
  return itemcode_;
}

// optional uint32 Number = 2;
inline bool PBActivityItem::has_number() const {
  return _has_bit(1);
}
inline void PBActivityItem::clear_number() {
  number_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBActivityItem::number() const {
  return number_;
}
inline void PBActivityItem::set_number(::google::protobuf::uint32 value) {
  _set_bit(1);
  number_ = value;
}

// optional uint32 ActivityID = 3;
inline bool PBActivityItem::has_activityid() const {
  return _has_bit(2);
}
inline void PBActivityItem::clear_activityid() {
  activityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBActivityItem::activityid() const {
  return activityid_;
}
inline void PBActivityItem::set_activityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  activityid_ = value;
}

// -------------------------------------------------------------------

// CMessageUserItemListResponse

// optional int32 Result = 1;
inline bool CMessageUserItemListResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageUserItemListResponse::clear_result() {
  result_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageUserItemListResponse::result() const {
  return result_;
}
inline void CMessageUserItemListResponse::set_result(::google::protobuf::int32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 MenuID = 2;
inline bool CMessageUserItemListResponse::has_menuid() const {
  return _has_bit(1);
}
inline void CMessageUserItemListResponse::clear_menuid() {
  menuid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUserItemListResponse::menuid() const {
  return menuid_;
}
inline void CMessageUserItemListResponse::set_menuid(::google::protobuf::uint32 value) {
  _set_bit(1);
  menuid_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageUserItemListResponse::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageUserItemListResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUserItemListResponse::roleid() const {
  return roleid_;
}
inline void CMessageUserItemListResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// repeated .PBActivityItem items = 4;
inline int CMessageUserItemListResponse::items_size() const {
  return items_.size();
}
inline void CMessageUserItemListResponse::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBActivityItem >&
CMessageUserItemListResponse::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBActivityItem >*
CMessageUserItemListResponse::mutable_items() {
  return &items_;
}
inline const ::PBActivityItem& CMessageUserItemListResponse::items(int index) const {
  return items_.Get(index);
}
inline ::PBActivityItem* CMessageUserItemListResponse::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::PBActivityItem* CMessageUserItemListResponse::add_items() {
  return items_.Add();
}

// -------------------------------------------------------------------

// CMessageUserItemMinusRequest

// optional uint32 AccountID = 1;
inline bool CMessageUserItemMinusRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageUserItemMinusRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUserItemMinusRequest::accountid() const {
  return accountid_;
}
inline void CMessageUserItemMinusRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageUserItemMinusRequest::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageUserItemMinusRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUserItemMinusRequest::roleid() const {
  return roleid_;
}
inline void CMessageUserItemMinusRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 ActivityID = 3;
inline bool CMessageUserItemMinusRequest::has_activityid() const {
  return _has_bit(2);
}
inline void CMessageUserItemMinusRequest::clear_activityid() {
  activityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUserItemMinusRequest::activityid() const {
  return activityid_;
}
inline void CMessageUserItemMinusRequest::set_activityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  activityid_ = value;
}

// optional string ItemCode = 4;
inline bool CMessageUserItemMinusRequest::has_itemcode() const {
  return _has_bit(3);
}
inline void CMessageUserItemMinusRequest::clear_itemcode() {
  if (itemcode_ != &_default_itemcode_) {
    itemcode_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageUserItemMinusRequest::itemcode() const {
  return *itemcode_;
}
inline void CMessageUserItemMinusRequest::set_itemcode(const ::std::string& value) {
  _set_bit(3);
  if (itemcode_ == &_default_itemcode_) {
    itemcode_ = new ::std::string;
  }
  itemcode_->assign(value);
}
inline void CMessageUserItemMinusRequest::set_itemcode(const char* value) {
  _set_bit(3);
  if (itemcode_ == &_default_itemcode_) {
    itemcode_ = new ::std::string;
  }
  itemcode_->assign(value);
}
inline void CMessageUserItemMinusRequest::set_itemcode(const char* value, size_t size) {
  _set_bit(3);
  if (itemcode_ == &_default_itemcode_) {
    itemcode_ = new ::std::string;
  }
  itemcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUserItemMinusRequest::mutable_itemcode() {
  _set_bit(3);
  if (itemcode_ == &_default_itemcode_) {
    itemcode_ = new ::std::string;
  }
  return itemcode_;
}

// optional uint32 ItemNum = 5;
inline bool CMessageUserItemMinusRequest::has_itemnum() const {
  return _has_bit(4);
}
inline void CMessageUserItemMinusRequest::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUserItemMinusRequest::itemnum() const {
  return itemnum_;
}
inline void CMessageUserItemMinusRequest::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// optional uint32 RoleLevel = 6;
inline bool CMessageUserItemMinusRequest::has_rolelevel() const {
  return _has_bit(5);
}
inline void CMessageUserItemMinusRequest::clear_rolelevel() {
  rolelevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUserItemMinusRequest::rolelevel() const {
  return rolelevel_;
}
inline void CMessageUserItemMinusRequest::set_rolelevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  rolelevel_ = value;
}

// optional uint32 RoleMetier = 7;
inline bool CMessageUserItemMinusRequest::has_rolemetier() const {
  return _has_bit(6);
}
inline void CMessageUserItemMinusRequest::clear_rolemetier() {
  rolemetier_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageUserItemMinusRequest::rolemetier() const {
  return rolemetier_;
}
inline void CMessageUserItemMinusRequest::set_rolemetier(::google::protobuf::uint32 value) {
  _set_bit(6);
  rolemetier_ = value;
}

// -------------------------------------------------------------------

// CMessageUserItemMinusResponse

// optional int32 Result = 1;
inline bool CMessageUserItemMinusResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageUserItemMinusResponse::clear_result() {
  result_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageUserItemMinusResponse::result() const {
  return result_;
}
inline void CMessageUserItemMinusResponse::set_result(::google::protobuf::int32 value) {
  _set_bit(0);
  result_ = value;
}

// optional int32 MenuID = 2;
inline bool CMessageUserItemMinusResponse::has_menuid() const {
  return _has_bit(1);
}
inline void CMessageUserItemMinusResponse::clear_menuid() {
  menuid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageUserItemMinusResponse::menuid() const {
  return menuid_;
}
inline void CMessageUserItemMinusResponse::set_menuid(::google::protobuf::int32 value) {
  _set_bit(1);
  menuid_ = value;
}

// optional int32 RoleID = 3;
inline bool CMessageUserItemMinusResponse::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageUserItemMinusResponse::clear_roleid() {
  roleid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageUserItemMinusResponse::roleid() const {
  return roleid_;
}
inline void CMessageUserItemMinusResponse::set_roleid(::google::protobuf::int32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional .PBActivityItem Item = 4;
inline bool CMessageUserItemMinusResponse::has_item() const {
  return _has_bit(3);
}
inline void CMessageUserItemMinusResponse::clear_item() {
  if (item_ != NULL) item_->::PBActivityItem::Clear();
  _clear_bit(3);
}
inline const ::PBActivityItem& CMessageUserItemMinusResponse::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBActivityItem* CMessageUserItemMinusResponse::mutable_item() {
  _set_bit(3);
  if (item_ == NULL) item_ = new ::PBActivityItem;
  return item_;
}

// -------------------------------------------------------------------

// CGMMessageRoleEquipmentDetailCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleEquipmentDetailCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleEquipmentDetailCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentDetailCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleEquipmentDetailCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleEquipmentDetailCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleEquipmentDetailCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentDetailCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleEquipmentDetailCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleEquipmentDetailCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleEquipmentDetailCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentDetailCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleEquipmentDetailCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional uint32 item_id = 4;
inline bool CGMMessageRoleEquipmentDetailCmd::has_item_id() const {
  return _has_bit(3);
}
inline void CGMMessageRoleEquipmentDetailCmd::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentDetailCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageRoleEquipmentDetailCmd::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  item_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleStorageDetailCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleStorageDetailCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleStorageDetailCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleStorageDetailCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleStorageDetailCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleStorageDetailCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleStorageDetailCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleStorageDetailCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleStorageDetailCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleStorageDetailCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleStorageDetailCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleStorageDetailCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleStorageDetailCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional uint32 item_id = 4;
inline bool CGMMessageRoleStorageDetailCmd::has_item_id() const {
  return _has_bit(3);
}
inline void CGMMessageRoleStorageDetailCmd::clear_item_id() {
  item_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMessageRoleStorageDetailCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageRoleStorageDetailCmd::set_item_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  item_id_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleEquipmentDetailResult

// optional uint32 session_id = 1;
inline bool CGMMessageRoleEquipmentDetailResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleEquipmentDetailResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentDetailResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleEquipmentDetailResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleEquipmentDetailResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleEquipmentDetailResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleEquipmentDetailResult::fd() const {
  return fd_;
}
inline void CGMMessageRoleEquipmentDetailResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBItemObject proto = 3;
inline bool CGMMessageRoleEquipmentDetailResult::has_proto() const {
  return _has_bit(2);
}
inline void CGMMessageRoleEquipmentDetailResult::clear_proto() {
  if (proto_ != NULL) proto_->::PBItemObject::Clear();
  _clear_bit(2);
}
inline const ::PBItemObject& CGMMessageRoleEquipmentDetailResult::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBItemObject* CGMMessageRoleEquipmentDetailResult::mutable_proto() {
  _set_bit(2);
  if (proto_ == NULL) proto_ = new ::PBItemObject;
  return proto_;
}

// -------------------------------------------------------------------

// CGMMessageRoleStorageDetailResult

// optional uint32 session_id = 1;
inline bool CGMMessageRoleStorageDetailResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleStorageDetailResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleStorageDetailResult::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleStorageDetailResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleStorageDetailResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleStorageDetailResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleStorageDetailResult::fd() const {
  return fd_;
}
inline void CGMMessageRoleStorageDetailResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional .PBItemObject proto = 3;
inline bool CGMMessageRoleStorageDetailResult::has_proto() const {
  return _has_bit(2);
}
inline void CGMMessageRoleStorageDetailResult::clear_proto() {
  if (proto_ != NULL) proto_->::PBItemObject::Clear();
  _clear_bit(2);
}
inline const ::PBItemObject& CGMMessageRoleStorageDetailResult::proto() const {
  return proto_ != NULL ? *proto_ : *default_instance_->proto_;
}
inline ::PBItemObject* CGMMessageRoleStorageDetailResult::mutable_proto() {
  _set_bit(2);
  if (proto_ == NULL) proto_ = new ::PBItemObject;
  return proto_;
}

// -------------------------------------------------------------------

// PBSubjectAmount

// optional uint32 SubjectID = 1;
inline bool PBSubjectAmount::has_subjectid() const {
  return _has_bit(0);
}
inline void PBSubjectAmount::clear_subjectid() {
  subjectid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSubjectAmount::subjectid() const {
  return subjectid_;
}
inline void PBSubjectAmount::set_subjectid(::google::protobuf::uint32 value) {
  _set_bit(0);
  subjectid_ = value;
}

// optional uint32 Amount = 2;
inline bool PBSubjectAmount::has_amount() const {
  return _has_bit(1);
}
inline void PBSubjectAmount::clear_amount() {
  amount_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSubjectAmount::amount() const {
  return amount_;
}
inline void PBSubjectAmount::set_amount(::google::protobuf::uint32 value) {
  _set_bit(1);
  amount_ = value;
}

// -------------------------------------------------------------------

// CMessageFangChenMiResponse

// optional uint32 CharID = 1;
inline bool CMessageFangChenMiResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFangChenMiResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFangChenMiResponse::charid() const {
  return charid_;
}
inline void CMessageFangChenMiResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// repeated .PBSubjectAmount Subjects = 2;
inline int CMessageFangChenMiResponse::subjects_size() const {
  return subjects_.size();
}
inline void CMessageFangChenMiResponse::clear_subjects() {
  subjects_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSubjectAmount >&
CMessageFangChenMiResponse::subjects() const {
  return subjects_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSubjectAmount >*
CMessageFangChenMiResponse::mutable_subjects() {
  return &subjects_;
}
inline const ::PBSubjectAmount& CMessageFangChenMiResponse::subjects(int index) const {
  return subjects_.Get(index);
}
inline ::PBSubjectAmount* CMessageFangChenMiResponse::mutable_subjects(int index) {
  return subjects_.Mutable(index);
}
inline ::PBSubjectAmount* CMessageFangChenMiResponse::add_subjects() {
  return subjects_.Add();
}

// -------------------------------------------------------------------

// PBFangChenMi

// optional uint32 CharID = 1;
inline bool PBFangChenMi::has_charid() const {
  return _has_bit(0);
}
inline void PBFangChenMi::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBFangChenMi::charid() const {
  return charid_;
}
inline void PBFangChenMi::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 CharLevel = 2;
inline bool PBFangChenMi::has_charlevel() const {
  return _has_bit(1);
}
inline void PBFangChenMi::clear_charlevel() {
  charlevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBFangChenMi::charlevel() const {
  return charlevel_;
}
inline void PBFangChenMi::set_charlevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  charlevel_ = value;
}

// optional uint32 CharMetier = 3;
inline bool PBFangChenMi::has_charmetier() const {
  return _has_bit(2);
}
inline void PBFangChenMi::clear_charmetier() {
  charmetier_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBFangChenMi::charmetier() const {
  return charmetier_;
}
inline void PBFangChenMi::set_charmetier(::google::protobuf::uint32 value) {
  _set_bit(2);
  charmetier_ = value;
}

// optional uint32 Money1 = 4;
inline bool PBFangChenMi::has_money1() const {
  return _has_bit(3);
}
inline void PBFangChenMi::clear_money1() {
  money1_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBFangChenMi::money1() const {
  return money1_;
}
inline void PBFangChenMi::set_money1(::google::protobuf::uint32 value) {
  _set_bit(3);
  money1_ = value;
}

// optional uint32 Money2 = 5;
inline bool PBFangChenMi::has_money2() const {
  return _has_bit(4);
}
inline void PBFangChenMi::clear_money2() {
  money2_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBFangChenMi::money2() const {
  return money2_;
}
inline void PBFangChenMi::set_money2(::google::protobuf::uint32 value) {
  _set_bit(4);
  money2_ = value;
}

// optional uint64 Exp = 6;
inline bool PBFangChenMi::has_exp() const {
  return _has_bit(5);
}
inline void PBFangChenMi::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 PBFangChenMi::exp() const {
  return exp_;
}
inline void PBFangChenMi::set_exp(::google::protobuf::uint64 value) {
  _set_bit(5);
  exp_ = value;
}

// -------------------------------------------------------------------

// CMessageFangChenMiRequest

// repeated .PBFangChenMi RoleDetail = 1;
inline int CMessageFangChenMiRequest::roledetail_size() const {
  return roledetail_.size();
}
inline void CMessageFangChenMiRequest::clear_roledetail() {
  roledetail_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFangChenMi >&
CMessageFangChenMiRequest::roledetail() const {
  return roledetail_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFangChenMi >*
CMessageFangChenMiRequest::mutable_roledetail() {
  return &roledetail_;
}
inline const ::PBFangChenMi& CMessageFangChenMiRequest::roledetail(int index) const {
  return roledetail_.Get(index);
}
inline ::PBFangChenMi* CMessageFangChenMiRequest::mutable_roledetail(int index) {
  return roledetail_.Mutable(index);
}
inline ::PBFangChenMi* CMessageFangChenMiRequest::add_roledetail() {
  return roledetail_.Add();
}

// -------------------------------------------------------------------

// CMessageFCMPlayerListNotify

// repeated uint32 ReportPlayer = 1;
inline int CMessageFCMPlayerListNotify::reportplayer_size() const {
  return reportplayer_.size();
}
inline void CMessageFCMPlayerListNotify::clear_reportplayer() {
  reportplayer_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageFCMPlayerListNotify::reportplayer() const {
  return reportplayer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageFCMPlayerListNotify::mutable_reportplayer() {
  return &reportplayer_;
}
inline ::google::protobuf::uint32 CMessageFCMPlayerListNotify::reportplayer(int index) const {
  return reportplayer_.Get(index);
}
inline void CMessageFCMPlayerListNotify::set_reportplayer(int index, ::google::protobuf::uint32 value) {
  reportplayer_.Set(index, value);
}
inline void CMessageFCMPlayerListNotify::add_reportplayer(::google::protobuf::uint32 value) {
  reportplayer_.Add(value);
}

// -------------------------------------------------------------------

// CMessageFCMPlayerResetRequest

// optional uint32 AccountID = 1;
inline bool CMessageFCMPlayerResetRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageFCMPlayerResetRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFCMPlayerResetRequest::accountid() const {
  return accountid_;
}
inline void CMessageFCMPlayerResetRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 Seconds = 2;
inline bool CMessageFCMPlayerResetRequest::has_seconds() const {
  return _has_bit(1);
}
inline void CMessageFCMPlayerResetRequest::clear_seconds() {
  seconds_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFCMPlayerResetRequest::seconds() const {
  return seconds_;
}
inline void CMessageFCMPlayerResetRequest::set_seconds(::google::protobuf::uint32 value) {
  _set_bit(1);
  seconds_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeGateNotify

// optional uint32 Type = 1;
inline bool CMessageChangeGateNotify::has_type() const {
  return _has_bit(0);
}
inline void CMessageChangeGateNotify::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeGateNotify::type() const {
  return type_;
}
inline void CMessageChangeGateNotify::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional string Name = 2;
inline bool CMessageChangeGateNotify::has_name() const {
  return _has_bit(1);
}
inline void CMessageChangeGateNotify::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageChangeGateNotify::name() const {
  return *name_;
}
inline void CMessageChangeGateNotify::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageChangeGateNotify::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageChangeGateNotify::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeGateNotify::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional int32 Param1 = 3;
inline bool CMessageChangeGateNotify::has_param1() const {
  return _has_bit(2);
}
inline void CMessageChangeGateNotify::clear_param1() {
  param1_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageChangeGateNotify::param1() const {
  return param1_;
}
inline void CMessageChangeGateNotify::set_param1(::google::protobuf::int32 value) {
  _set_bit(2);
  param1_ = value;
}

// optional int32 Param2 = 4;
inline bool CMessageChangeGateNotify::has_param2() const {
  return _has_bit(3);
}
inline void CMessageChangeGateNotify::clear_param2() {
  param2_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageChangeGateNotify::param2() const {
  return param2_;
}
inline void CMessageChangeGateNotify::set_param2(::google::protobuf::int32 value) {
  _set_bit(3);
  param2_ = value;
}

// optional int32 Param3 = 5;
inline bool CMessageChangeGateNotify::has_param3() const {
  return _has_bit(4);
}
inline void CMessageChangeGateNotify::clear_param3() {
  param3_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessageChangeGateNotify::param3() const {
  return param3_;
}
inline void CMessageChangeGateNotify::set_param3(::google::protobuf::int32 value) {
  _set_bit(4);
  param3_ = value;
}

// optional int32 Param4 = 6;
inline bool CMessageChangeGateNotify::has_param4() const {
  return _has_bit(5);
}
inline void CMessageChangeGateNotify::clear_param4() {
  param4_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CMessageChangeGateNotify::param4() const {
  return param4_;
}
inline void CMessageChangeGateNotify::set_param4(::google::protobuf::int32 value) {
  _set_bit(5);
  param4_ = value;
}

// -------------------------------------------------------------------

// CMessageResetRolePasswordRequest

// optional uint32 session_id = 1;
inline bool CMessageResetRolePasswordRequest::has_session_id() const {
  return _has_bit(0);
}
inline void CMessageResetRolePasswordRequest::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageResetRolePasswordRequest::session_id() const {
  return session_id_;
}
inline void CMessageResetRolePasswordRequest::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CMessageResetRolePasswordRequest::has_fd() const {
  return _has_bit(1);
}
inline void CMessageResetRolePasswordRequest::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageResetRolePasswordRequest::fd() const {
  return fd_;
}
inline void CMessageResetRolePasswordRequest::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CMessageResetRolePasswordRequest::has_role_id() const {
  return _has_bit(2);
}
inline void CMessageResetRolePasswordRequest::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageResetRolePasswordRequest::role_id() const {
  return role_id_;
}
inline void CMessageResetRolePasswordRequest::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// -------------------------------------------------------------------

// CMessageResetRolePasswordResponse

// optional uint32 session_id = 1;
inline bool CMessageResetRolePasswordResponse::has_session_id() const {
  return _has_bit(0);
}
inline void CMessageResetRolePasswordResponse::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageResetRolePasswordResponse::session_id() const {
  return session_id_;
}
inline void CMessageResetRolePasswordResponse::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CMessageResetRolePasswordResponse::has_fd() const {
  return _has_bit(1);
}
inline void CMessageResetRolePasswordResponse::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageResetRolePasswordResponse::fd() const {
  return fd_;
}
inline void CMessageResetRolePasswordResponse::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 Errcode = 3;
inline bool CMessageResetRolePasswordResponse::has_errcode() const {
  return _has_bit(2);
}
inline void CMessageResetRolePasswordResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageResetRolePasswordResponse::errcode() const {
  return errcode_;
}
inline void CMessageResetRolePasswordResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(2);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleItemOperatedCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleItemOperatedCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleItemOperatedCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemOperatedCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleItemOperatedCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleItemOperatedCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleItemOperatedCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemOperatedCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleItemOperatedCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleItemOperatedCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleItemOperatedCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemOperatedCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleItemOperatedCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 op_type = 4;
inline bool CGMMessageRoleItemOperatedCmd::has_op_type() const {
  return _has_bit(3);
}
inline void CGMMessageRoleItemOperatedCmd::clear_op_type() {
  op_type_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageRoleItemOperatedCmd::op_type() const {
  return op_type_;
}
inline void CGMMessageRoleItemOperatedCmd::set_op_type(::google::protobuf::int32 value) {
  _set_bit(3);
  op_type_ = value;
}

// optional int32 item_id = 5;
inline bool CGMMessageRoleItemOperatedCmd::has_item_id() const {
  return _has_bit(4);
}
inline void CGMMessageRoleItemOperatedCmd::clear_item_id() {
  item_id_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageRoleItemOperatedCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageRoleItemOperatedCmd::set_item_id(::google::protobuf::int32 value) {
  _set_bit(4);
  item_id_ = value;
}

// optional uint64 item_guid = 6;
inline bool CGMMessageRoleItemOperatedCmd::has_item_guid() const {
  return _has_bit(5);
}
inline void CGMMessageRoleItemOperatedCmd::clear_item_guid() {
  item_guid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 CGMMessageRoleItemOperatedCmd::item_guid() const {
  return item_guid_;
}
inline void CGMMessageRoleItemOperatedCmd::set_item_guid(::google::protobuf::uint64 value) {
  _set_bit(5);
  item_guid_ = value;
}

// optional string start_time = 7;
inline bool CGMMessageRoleItemOperatedCmd::has_start_time() const {
  return _has_bit(6);
}
inline void CGMMessageRoleItemOperatedCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMessageRoleItemOperatedCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageRoleItemOperatedCmd::set_start_time(const ::std::string& value) {
  _set_bit(6);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleItemOperatedCmd::set_start_time(const char* value) {
  _set_bit(6);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleItemOperatedCmd::set_start_time(const char* value, size_t size) {
  _set_bit(6);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleItemOperatedCmd::mutable_start_time() {
  _set_bit(6);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 8;
inline bool CGMMessageRoleItemOperatedCmd::has_end_time() const {
  return _has_bit(7);
}
inline void CGMMessageRoleItemOperatedCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CGMMessageRoleItemOperatedCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageRoleItemOperatedCmd::set_end_time(const ::std::string& value) {
  _set_bit(7);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleItemOperatedCmd::set_end_time(const char* value) {
  _set_bit(7);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleItemOperatedCmd::set_end_time(const char* value, size_t size) {
  _set_bit(7);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleItemOperatedCmd::mutable_end_time() {
  _set_bit(7);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// optional int32 page = 9;
inline bool CGMMessageRoleItemOperatedCmd::has_page() const {
  return _has_bit(8);
}
inline void CGMMessageRoleItemOperatedCmd::clear_page() {
  page_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 CGMMessageRoleItemOperatedCmd::page() const {
  return page_;
}
inline void CGMMessageRoleItemOperatedCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(8);
  page_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleMoneyOperateCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleMoneyOperateCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleMoneyOperateCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleMoneyOperateCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleMoneyOperateCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleMoneyOperateCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleMoneyOperateCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleMoneyOperateCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleMoneyOperateCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleMoneyOperateCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleMoneyOperateCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleMoneyOperateCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleMoneyOperateCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 op_type = 4;
inline bool CGMMessageRoleMoneyOperateCmd::has_op_type() const {
  return _has_bit(3);
}
inline void CGMMessageRoleMoneyOperateCmd::clear_op_type() {
  op_type_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageRoleMoneyOperateCmd::op_type() const {
  return op_type_;
}
inline void CGMMessageRoleMoneyOperateCmd::set_op_type(::google::protobuf::int32 value) {
  _set_bit(3);
  op_type_ = value;
}

// optional int32 item_type = 5;
inline bool CGMMessageRoleMoneyOperateCmd::has_item_type() const {
  return _has_bit(4);
}
inline void CGMMessageRoleMoneyOperateCmd::clear_item_type() {
  item_type_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageRoleMoneyOperateCmd::item_type() const {
  return item_type_;
}
inline void CGMMessageRoleMoneyOperateCmd::set_item_type(::google::protobuf::int32 value) {
  _set_bit(4);
  item_type_ = value;
}

// optional string start_time = 6;
inline bool CGMMessageRoleMoneyOperateCmd::has_start_time() const {
  return _has_bit(5);
}
inline void CGMMessageRoleMoneyOperateCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageRoleMoneyOperateCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageRoleMoneyOperateCmd::set_start_time(const ::std::string& value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleMoneyOperateCmd::set_start_time(const char* value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleMoneyOperateCmd::set_start_time(const char* value, size_t size) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleMoneyOperateCmd::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 7;
inline bool CGMMessageRoleMoneyOperateCmd::has_end_time() const {
  return _has_bit(6);
}
inline void CGMMessageRoleMoneyOperateCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMessageRoleMoneyOperateCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageRoleMoneyOperateCmd::set_end_time(const ::std::string& value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleMoneyOperateCmd::set_end_time(const char* value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleMoneyOperateCmd::set_end_time(const char* value, size_t size) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleMoneyOperateCmd::mutable_end_time() {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// optional int32 page = 8;
inline bool CGMMessageRoleMoneyOperateCmd::has_page() const {
  return _has_bit(7);
}
inline void CGMMessageRoleMoneyOperateCmd::clear_page() {
  page_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 CGMMessageRoleMoneyOperateCmd::page() const {
  return page_;
}
inline void CGMMessageRoleMoneyOperateCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(7);
  page_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleExpCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleExpCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleExpCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleExpCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleExpCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleExpCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleExpCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleExpCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleExpCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleExpCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleExpCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleExpCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleExpCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 op_type = 4;
inline bool CGMMessageRoleExpCmd::has_op_type() const {
  return _has_bit(3);
}
inline void CGMMessageRoleExpCmd::clear_op_type() {
  op_type_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageRoleExpCmd::op_type() const {
  return op_type_;
}
inline void CGMMessageRoleExpCmd::set_op_type(::google::protobuf::int32 value) {
  _set_bit(3);
  op_type_ = value;
}

// optional int32 exp_type = 5;
inline bool CGMMessageRoleExpCmd::has_exp_type() const {
  return _has_bit(4);
}
inline void CGMMessageRoleExpCmd::clear_exp_type() {
  exp_type_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageRoleExpCmd::exp_type() const {
  return exp_type_;
}
inline void CGMMessageRoleExpCmd::set_exp_type(::google::protobuf::int32 value) {
  _set_bit(4);
  exp_type_ = value;
}

// optional string start_time = 6;
inline bool CGMMessageRoleExpCmd::has_start_time() const {
  return _has_bit(5);
}
inline void CGMMessageRoleExpCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageRoleExpCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageRoleExpCmd::set_start_time(const ::std::string& value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleExpCmd::set_start_time(const char* value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleExpCmd::set_start_time(const char* value, size_t size) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleExpCmd::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 7;
inline bool CGMMessageRoleExpCmd::has_end_time() const {
  return _has_bit(6);
}
inline void CGMMessageRoleExpCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMessageRoleExpCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageRoleExpCmd::set_end_time(const ::std::string& value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleExpCmd::set_end_time(const char* value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleExpCmd::set_end_time(const char* value, size_t size) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleExpCmd::mutable_end_time() {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// optional int32 page = 8;
inline bool CGMMessageRoleExpCmd::has_page() const {
  return _has_bit(7);
}
inline void CGMMessageRoleExpCmd::clear_page() {
  page_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 CGMMessageRoleExpCmd::page() const {
  return page_;
}
inline void CGMMessageRoleExpCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(7);
  page_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleItemLevelUpCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleItemLevelUpCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleItemLevelUpCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemLevelUpCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleItemLevelUpCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleItemLevelUpCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleItemLevelUpCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemLevelUpCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleItemLevelUpCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 page = 3;
inline bool CGMMessageRoleItemLevelUpCmd::has_page() const {
  return _has_bit(2);
}
inline void CGMMessageRoleItemLevelUpCmd::clear_page() {
  page_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageRoleItemLevelUpCmd::page() const {
  return page_;
}
inline void CGMMessageRoleItemLevelUpCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(2);
  page_ = value;
}

// optional uint32 role_id = 4;
inline bool CGMMessageRoleItemLevelUpCmd::has_role_id() const {
  return _has_bit(3);
}
inline void CGMMessageRoleItemLevelUpCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMessageRoleItemLevelUpCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleItemLevelUpCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  role_id_ = value;
}

// optional int32 item_id = 5;
inline bool CGMMessageRoleItemLevelUpCmd::has_item_id() const {
  return _has_bit(4);
}
inline void CGMMessageRoleItemLevelUpCmd::clear_item_id() {
  item_id_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CGMMessageRoleItemLevelUpCmd::item_id() const {
  return item_id_;
}
inline void CGMMessageRoleItemLevelUpCmd::set_item_id(::google::protobuf::int32 value) {
  _set_bit(4);
  item_id_ = value;
}

// optional string start_time = 6;
inline bool CGMMessageRoleItemLevelUpCmd::has_start_time() const {
  return _has_bit(5);
}
inline void CGMMessageRoleItemLevelUpCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageRoleItemLevelUpCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageRoleItemLevelUpCmd::set_start_time(const ::std::string& value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleItemLevelUpCmd::set_start_time(const char* value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleItemLevelUpCmd::set_start_time(const char* value, size_t size) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleItemLevelUpCmd::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 7;
inline bool CGMMessageRoleItemLevelUpCmd::has_end_time() const {
  return _has_bit(6);
}
inline void CGMMessageRoleItemLevelUpCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMessageRoleItemLevelUpCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageRoleItemLevelUpCmd::set_end_time(const ::std::string& value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleItemLevelUpCmd::set_end_time(const char* value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleItemLevelUpCmd::set_end_time(const char* value, size_t size) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleItemLevelUpCmd::mutable_end_time() {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// -------------------------------------------------------------------

// CGMMessageFreezeMacCmd

// optional uint32 session_id = 1;
inline bool CGMMessageFreezeMacCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageFreezeMacCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageFreezeMacCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageFreezeMacCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageFreezeMacCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageFreezeMacCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageFreezeMacCmd::fd() const {
  return fd_;
}
inline void CGMMessageFreezeMacCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string mac = 3;
inline bool CGMMessageFreezeMacCmd::has_mac() const {
  return _has_bit(2);
}
inline void CGMMessageFreezeMacCmd::clear_mac() {
  if (mac_ != &_default_mac_) {
    mac_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageFreezeMacCmd::mac() const {
  return *mac_;
}
inline void CGMMessageFreezeMacCmd::set_mac(const ::std::string& value) {
  _set_bit(2);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CGMMessageFreezeMacCmd::set_mac(const char* value) {
  _set_bit(2);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CGMMessageFreezeMacCmd::set_mac(const char* value, size_t size) {
  _set_bit(2);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageFreezeMacCmd::mutable_mac() {
  _set_bit(2);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  return mac_;
}

// -------------------------------------------------------------------

// CGMMessageUnFreezeMacCmd

// optional uint32 session_id = 1;
inline bool CGMMessageUnFreezeMacCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUnFreezeMacCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUnFreezeMacCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageUnFreezeMacCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUnFreezeMacCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUnFreezeMacCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUnFreezeMacCmd::fd() const {
  return fd_;
}
inline void CGMMessageUnFreezeMacCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string mac = 3;
inline bool CGMMessageUnFreezeMacCmd::has_mac() const {
  return _has_bit(2);
}
inline void CGMMessageUnFreezeMacCmd::clear_mac() {
  if (mac_ != &_default_mac_) {
    mac_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageUnFreezeMacCmd::mac() const {
  return *mac_;
}
inline void CGMMessageUnFreezeMacCmd::set_mac(const ::std::string& value) {
  _set_bit(2);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CGMMessageUnFreezeMacCmd::set_mac(const char* value) {
  _set_bit(2);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void CGMMessageUnFreezeMacCmd::set_mac(const char* value, size_t size) {
  _set_bit(2);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUnFreezeMacCmd::mutable_mac() {
  _set_bit(2);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  return mac_;
}

// -------------------------------------------------------------------

// CGMMessageCorpsTotalCmd

// optional uint32 session_id = 1;
inline bool CGMMessageCorpsTotalCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageCorpsTotalCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageCorpsTotalCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageCorpsTotalCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageCorpsTotalCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageCorpsTotalCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageCorpsTotalCmd::fd() const {
  return fd_;
}
inline void CGMMessageCorpsTotalCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional int32 type = 3;
inline bool CGMMessageCorpsTotalCmd::has_type() const {
  return _has_bit(2);
}
inline void CGMMessageCorpsTotalCmd::clear_type() {
  type_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CGMMessageCorpsTotalCmd::type() const {
  return type_;
}
inline void CGMMessageCorpsTotalCmd::set_type(::google::protobuf::int32 value) {
  _set_bit(2);
  type_ = value;
}

// optional int32 page = 4;
inline bool CGMMessageCorpsTotalCmd::has_page() const {
  return _has_bit(3);
}
inline void CGMMessageCorpsTotalCmd::clear_page() {
  page_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageCorpsTotalCmd::page() const {
  return page_;
}
inline void CGMMessageCorpsTotalCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(3);
  page_ = value;
}

// -------------------------------------------------------------------

// CGMMessageCorpsDetailCmd

// optional uint32 session_id = 1;
inline bool CGMMessageCorpsDetailCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageCorpsDetailCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageCorpsDetailCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageCorpsDetailCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageCorpsDetailCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageCorpsDetailCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageCorpsDetailCmd::fd() const {
  return fd_;
}
inline void CGMMessageCorpsDetailCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string corps_name = 3;
inline bool CGMMessageCorpsDetailCmd::has_corps_name() const {
  return _has_bit(2);
}
inline void CGMMessageCorpsDetailCmd::clear_corps_name() {
  if (corps_name_ != &_default_corps_name_) {
    corps_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageCorpsDetailCmd::corps_name() const {
  return *corps_name_;
}
inline void CGMMessageCorpsDetailCmd::set_corps_name(const ::std::string& value) {
  _set_bit(2);
  if (corps_name_ == &_default_corps_name_) {
    corps_name_ = new ::std::string;
  }
  corps_name_->assign(value);
}
inline void CGMMessageCorpsDetailCmd::set_corps_name(const char* value) {
  _set_bit(2);
  if (corps_name_ == &_default_corps_name_) {
    corps_name_ = new ::std::string;
  }
  corps_name_->assign(value);
}
inline void CGMMessageCorpsDetailCmd::set_corps_name(const char* value, size_t size) {
  _set_bit(2);
  if (corps_name_ == &_default_corps_name_) {
    corps_name_ = new ::std::string;
  }
  corps_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageCorpsDetailCmd::mutable_corps_name() {
  _set_bit(2);
  if (corps_name_ == &_default_corps_name_) {
    corps_name_ = new ::std::string;
  }
  return corps_name_;
}

// optional int32 type = 4;
inline bool CGMMessageCorpsDetailCmd::has_type() const {
  return _has_bit(3);
}
inline void CGMMessageCorpsDetailCmd::clear_type() {
  type_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageCorpsDetailCmd::type() const {
  return type_;
}
inline void CGMMessageCorpsDetailCmd::set_type(::google::protobuf::int32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// CGMMessageCorpsInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageCorpsInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageCorpsInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageCorpsInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageCorpsInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageCorpsInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageCorpsInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageCorpsInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageCorpsInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string corps_name = 3;
inline bool CGMMessageCorpsInfoCmd::has_corps_name() const {
  return _has_bit(2);
}
inline void CGMMessageCorpsInfoCmd::clear_corps_name() {
  if (corps_name_ != &_default_corps_name_) {
    corps_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageCorpsInfoCmd::corps_name() const {
  return *corps_name_;
}
inline void CGMMessageCorpsInfoCmd::set_corps_name(const ::std::string& value) {
  _set_bit(2);
  if (corps_name_ == &_default_corps_name_) {
    corps_name_ = new ::std::string;
  }
  corps_name_->assign(value);
}
inline void CGMMessageCorpsInfoCmd::set_corps_name(const char* value) {
  _set_bit(2);
  if (corps_name_ == &_default_corps_name_) {
    corps_name_ = new ::std::string;
  }
  corps_name_->assign(value);
}
inline void CGMMessageCorpsInfoCmd::set_corps_name(const char* value, size_t size) {
  _set_bit(2);
  if (corps_name_ == &_default_corps_name_) {
    corps_name_ = new ::std::string;
  }
  corps_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageCorpsInfoCmd::mutable_corps_name() {
  _set_bit(2);
  if (corps_name_ == &_default_corps_name_) {
    corps_name_ = new ::std::string;
  }
  return corps_name_;
}

// optional int32 type = 4;
inline bool CGMMessageCorpsInfoCmd::has_type() const {
  return _has_bit(3);
}
inline void CGMMessageCorpsInfoCmd::clear_type() {
  type_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageCorpsInfoCmd::type() const {
  return type_;
}
inline void CGMMessageCorpsInfoCmd::set_type(::google::protobuf::int32 value) {
  _set_bit(3);
  type_ = value;
}

// optional string start_time = 6;
inline bool CGMMessageCorpsInfoCmd::has_start_time() const {
  return _has_bit(4);
}
inline void CGMMessageCorpsInfoCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageCorpsInfoCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageCorpsInfoCmd::set_start_time(const ::std::string& value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageCorpsInfoCmd::set_start_time(const char* value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageCorpsInfoCmd::set_start_time(const char* value, size_t size) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageCorpsInfoCmd::mutable_start_time() {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 7;
inline bool CGMMessageCorpsInfoCmd::has_end_time() const {
  return _has_bit(5);
}
inline void CGMMessageCorpsInfoCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageCorpsInfoCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageCorpsInfoCmd::set_end_time(const ::std::string& value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageCorpsInfoCmd::set_end_time(const char* value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageCorpsInfoCmd::set_end_time(const char* value, size_t size) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageCorpsInfoCmd::mutable_end_time() {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// optional int32 page = 8;
inline bool CGMMessageCorpsInfoCmd::has_page() const {
  return _has_bit(6);
}
inline void CGMMessageCorpsInfoCmd::clear_page() {
  page_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 CGMMessageCorpsInfoCmd::page() const {
  return page_;
}
inline void CGMMessageCorpsInfoCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(6);
  page_ = value;
}

// -------------------------------------------------------------------

// CGMMessageRoleInfoCmd

// optional uint32 session_id = 1;
inline bool CGMMessageRoleInfoCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageRoleInfoCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageRoleInfoCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageRoleInfoCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageRoleInfoCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageRoleInfoCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageRoleInfoCmd::fd() const {
  return fd_;
}
inline void CGMMessageRoleInfoCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageRoleInfoCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageRoleInfoCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageRoleInfoCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageRoleInfoCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 type = 4;
inline bool CGMMessageRoleInfoCmd::has_type() const {
  return _has_bit(3);
}
inline void CGMMessageRoleInfoCmd::clear_type() {
  type_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageRoleInfoCmd::type() const {
  return type_;
}
inline void CGMMessageRoleInfoCmd::set_type(::google::protobuf::int32 value) {
  _set_bit(3);
  type_ = value;
}

// optional string start_time = 6;
inline bool CGMMessageRoleInfoCmd::has_start_time() const {
  return _has_bit(4);
}
inline void CGMMessageRoleInfoCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageRoleInfoCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageRoleInfoCmd::set_start_time(const ::std::string& value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleInfoCmd::set_start_time(const char* value) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageRoleInfoCmd::set_start_time(const char* value, size_t size) {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleInfoCmd::mutable_start_time() {
  _set_bit(4);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 7;
inline bool CGMMessageRoleInfoCmd::has_end_time() const {
  return _has_bit(5);
}
inline void CGMMessageRoleInfoCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMessageRoleInfoCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageRoleInfoCmd::set_end_time(const ::std::string& value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleInfoCmd::set_end_time(const char* value) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageRoleInfoCmd::set_end_time(const char* value, size_t size) {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageRoleInfoCmd::mutable_end_time() {
  _set_bit(5);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// optional int32 page = 8;
inline bool CGMMessageRoleInfoCmd::has_page() const {
  return _has_bit(6);
}
inline void CGMMessageRoleInfoCmd::clear_page() {
  page_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 CGMMessageRoleInfoCmd::page() const {
  return page_;
}
inline void CGMMessageRoleInfoCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(6);
  page_ = value;
}

// -------------------------------------------------------------------

// CGMMsgRoleItemRecoveryCmd

// optional uint32 session_id = 1;
inline bool CGMMsgRoleItemRecoveryCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMsgRoleItemRecoveryCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMsgRoleItemRecoveryCmd::session_id() const {
  return session_id_;
}
inline void CGMMsgRoleItemRecoveryCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMsgRoleItemRecoveryCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMsgRoleItemRecoveryCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMsgRoleItemRecoveryCmd::fd() const {
  return fd_;
}
inline void CGMMsgRoleItemRecoveryCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMsgRoleItemRecoveryCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMsgRoleItemRecoveryCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMsgRoleItemRecoveryCmd::role_id() const {
  return role_id_;
}
inline void CGMMsgRoleItemRecoveryCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 type = 4;
inline bool CGMMsgRoleItemRecoveryCmd::has_type() const {
  return _has_bit(3);
}
inline void CGMMsgRoleItemRecoveryCmd::clear_type() {
  type_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMsgRoleItemRecoveryCmd::type() const {
  return type_;
}
inline void CGMMsgRoleItemRecoveryCmd::set_type(::google::protobuf::int32 value) {
  _set_bit(3);
  type_ = value;
}

// optional uint64 item_id = 5;
inline bool CGMMsgRoleItemRecoveryCmd::has_item_id() const {
  return _has_bit(4);
}
inline void CGMMsgRoleItemRecoveryCmd::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 CGMMsgRoleItemRecoveryCmd::item_id() const {
  return item_id_;
}
inline void CGMMsgRoleItemRecoveryCmd::set_item_id(::google::protobuf::uint64 value) {
  _set_bit(4);
  item_id_ = value;
}

// optional string start_time = 6;
inline bool CGMMsgRoleItemRecoveryCmd::has_start_time() const {
  return _has_bit(5);
}
inline void CGMMsgRoleItemRecoveryCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CGMMsgRoleItemRecoveryCmd::start_time() const {
  return *start_time_;
}
inline void CGMMsgRoleItemRecoveryCmd::set_start_time(const ::std::string& value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMsgRoleItemRecoveryCmd::set_start_time(const char* value) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMsgRoleItemRecoveryCmd::set_start_time(const char* value, size_t size) {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMsgRoleItemRecoveryCmd::mutable_start_time() {
  _set_bit(5);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 7;
inline bool CGMMsgRoleItemRecoveryCmd::has_end_time() const {
  return _has_bit(6);
}
inline void CGMMsgRoleItemRecoveryCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CGMMsgRoleItemRecoveryCmd::end_time() const {
  return *end_time_;
}
inline void CGMMsgRoleItemRecoveryCmd::set_end_time(const ::std::string& value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMsgRoleItemRecoveryCmd::set_end_time(const char* value) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMsgRoleItemRecoveryCmd::set_end_time(const char* value, size_t size) {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMsgRoleItemRecoveryCmd::mutable_end_time() {
  _set_bit(6);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// optional uint32 page = 8;
inline bool CGMMsgRoleItemRecoveryCmd::has_page() const {
  return _has_bit(7);
}
inline void CGMMsgRoleItemRecoveryCmd::clear_page() {
  page_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CGMMsgRoleItemRecoveryCmd::page() const {
  return page_;
}
inline void CGMMsgRoleItemRecoveryCmd::set_page(::google::protobuf::uint32 value) {
  _set_bit(7);
  page_ = value;
}

// -------------------------------------------------------------------

// CMessageOfflineSysMailNotify

// optional uint32 RoleId = 1;
inline bool CMessageOfflineSysMailNotify::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageOfflineSysMailNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageOfflineSysMailNotify::roleid() const {
  return roleid_;
}
inline void CMessageOfflineSysMailNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 MailType = 2;
inline bool CMessageOfflineSysMailNotify::has_mailtype() const {
  return _has_bit(1);
}
inline void CMessageOfflineSysMailNotify::clear_mailtype() {
  mailtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageOfflineSysMailNotify::mailtype() const {
  return mailtype_;
}
inline void CMessageOfflineSysMailNotify::set_mailtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  mailtype_ = value;
}

// optional uint32 AttachMoney = 3;
inline bool CMessageOfflineSysMailNotify::has_attachmoney() const {
  return _has_bit(2);
}
inline void CMessageOfflineSysMailNotify::clear_attachmoney() {
  attachmoney_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageOfflineSysMailNotify::attachmoney() const {
  return attachmoney_;
}
inline void CMessageOfflineSysMailNotify::set_attachmoney(::google::protobuf::uint32 value) {
  _set_bit(2);
  attachmoney_ = value;
}

// repeated .PBItemObject AttachItem = 4;
inline int CMessageOfflineSysMailNotify::attachitem_size() const {
  return attachitem_.size();
}
inline void CMessageOfflineSysMailNotify::clear_attachitem() {
  attachitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >&
CMessageOfflineSysMailNotify::attachitem() const {
  return attachitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >*
CMessageOfflineSysMailNotify::mutable_attachitem() {
  return &attachitem_;
}
inline const ::PBItemObject& CMessageOfflineSysMailNotify::attachitem(int index) const {
  return attachitem_.Get(index);
}
inline ::PBItemObject* CMessageOfflineSysMailNotify::mutable_attachitem(int index) {
  return attachitem_.Mutable(index);
}
inline ::PBItemObject* CMessageOfflineSysMailNotify::add_attachitem() {
  return attachitem_.Add();
}

// optional uint32 session_id = 5;
inline bool CMessageOfflineSysMailNotify::has_session_id() const {
  return _has_bit(4);
}
inline void CMessageOfflineSysMailNotify::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageOfflineSysMailNotify::session_id() const {
  return session_id_;
}
inline void CMessageOfflineSysMailNotify::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(4);
  session_id_ = value;
}

// optional uint32 fd = 6;
inline bool CMessageOfflineSysMailNotify::has_fd() const {
  return _has_bit(5);
}
inline void CMessageOfflineSysMailNotify::clear_fd() {
  fd_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageOfflineSysMailNotify::fd() const {
  return fd_;
}
inline void CMessageOfflineSysMailNotify::set_fd(::google::protobuf::uint32 value) {
  _set_bit(5);
  fd_ = value;
}

// -------------------------------------------------------------------

// CGMMessageSqlQueryResult

// optional uint32 session_id = 1;
inline bool CGMMessageSqlQueryResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageSqlQueryResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageSqlQueryResult::session_id() const {
  return session_id_;
}
inline void CGMMessageSqlQueryResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageSqlQueryResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageSqlQueryResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageSqlQueryResult::fd() const {
  return fd_;
}
inline void CGMMessageSqlQueryResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 type = 3;
inline bool CGMMessageSqlQueryResult::has_type() const {
  return _has_bit(2);
}
inline void CGMMessageSqlQueryResult::clear_type() {
  type_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageSqlQueryResult::type() const {
  return type_;
}
inline void CGMMessageSqlQueryResult::set_type(::google::protobuf::uint32 value) {
  _set_bit(2);
  type_ = value;
}

// optional .CMessageExecuteSqlResponse3 SqlResult = 4;
inline bool CGMMessageSqlQueryResult::has_sqlresult() const {
  return _has_bit(3);
}
inline void CGMMessageSqlQueryResult::clear_sqlresult() {
  if (sqlresult_ != NULL) sqlresult_->::CMessageExecuteSqlResponse3::Clear();
  _clear_bit(3);
}
inline const ::CMessageExecuteSqlResponse3& CGMMessageSqlQueryResult::sqlresult() const {
  return sqlresult_ != NULL ? *sqlresult_ : *default_instance_->sqlresult_;
}
inline ::CMessageExecuteSqlResponse3* CGMMessageSqlQueryResult::mutable_sqlresult() {
  _set_bit(3);
  if (sqlresult_ == NULL) sqlresult_ = new ::CMessageExecuteSqlResponse3;
  return sqlresult_;
}

// optional uint32 page = 5;
inline bool CGMMessageSqlQueryResult::has_page() const {
  return _has_bit(4);
}
inline void CGMMessageSqlQueryResult::clear_page() {
  page_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CGMMessageSqlQueryResult::page() const {
  return page_;
}
inline void CGMMessageSqlQueryResult::set_page(::google::protobuf::uint32 value) {
  _set_bit(4);
  page_ = value;
}

// -------------------------------------------------------------------

// CGMMessageUserInfoByIPCmd

// optional uint32 session_id = 1;
inline bool CGMMessageUserInfoByIPCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageUserInfoByIPCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageUserInfoByIPCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageUserInfoByIPCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageUserInfoByIPCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageUserInfoByIPCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageUserInfoByIPCmd::fd() const {
  return fd_;
}
inline void CGMMessageUserInfoByIPCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional string ip = 3;
inline bool CGMMessageUserInfoByIPCmd::has_ip() const {
  return _has_bit(2);
}
inline void CGMMessageUserInfoByIPCmd::clear_ip() {
  if (ip_ != &_default_ip_) {
    ip_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CGMMessageUserInfoByIPCmd::ip() const {
  return *ip_;
}
inline void CGMMessageUserInfoByIPCmd::set_ip(const ::std::string& value) {
  _set_bit(2);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void CGMMessageUserInfoByIPCmd::set_ip(const char* value) {
  _set_bit(2);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void CGMMessageUserInfoByIPCmd::set_ip(const char* value, size_t size) {
  _set_bit(2);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserInfoByIPCmd::mutable_ip() {
  _set_bit(2);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  return ip_;
}

// optional string start_time = 4;
inline bool CGMMessageUserInfoByIPCmd::has_start_time() const {
  return _has_bit(3);
}
inline void CGMMessageUserInfoByIPCmd::clear_start_time() {
  if (start_time_ != &_default_start_time_) {
    start_time_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CGMMessageUserInfoByIPCmd::start_time() const {
  return *start_time_;
}
inline void CGMMessageUserInfoByIPCmd::set_start_time(const ::std::string& value) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageUserInfoByIPCmd::set_start_time(const char* value) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(value);
}
inline void CGMMessageUserInfoByIPCmd::set_start_time(const char* value, size_t size) {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  start_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserInfoByIPCmd::mutable_start_time() {
  _set_bit(3);
  if (start_time_ == &_default_start_time_) {
    start_time_ = new ::std::string;
  }
  return start_time_;
}

// optional string end_time = 5;
inline bool CGMMessageUserInfoByIPCmd::has_end_time() const {
  return _has_bit(4);
}
inline void CGMMessageUserInfoByIPCmd::clear_end_time() {
  if (end_time_ != &_default_end_time_) {
    end_time_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CGMMessageUserInfoByIPCmd::end_time() const {
  return *end_time_;
}
inline void CGMMessageUserInfoByIPCmd::set_end_time(const ::std::string& value) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageUserInfoByIPCmd::set_end_time(const char* value) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(value);
}
inline void CGMMessageUserInfoByIPCmd::set_end_time(const char* value, size_t size) {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  end_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGMMessageUserInfoByIPCmd::mutable_end_time() {
  _set_bit(4);
  if (end_time_ == &_default_end_time_) {
    end_time_ = new ::std::string;
  }
  return end_time_;
}

// optional int32 type = 6;
inline bool CGMMessageUserInfoByIPCmd::has_type() const {
  return _has_bit(5);
}
inline void CGMMessageUserInfoByIPCmd::clear_type() {
  type_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CGMMessageUserInfoByIPCmd::type() const {
  return type_;
}
inline void CGMMessageUserInfoByIPCmd::set_type(::google::protobuf::int32 value) {
  _set_bit(5);
  type_ = value;
}

// optional int32 page = 7;
inline bool CGMMessageUserInfoByIPCmd::has_page() const {
  return _has_bit(6);
}
inline void CGMMessageUserInfoByIPCmd::clear_page() {
  page_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 CGMMessageUserInfoByIPCmd::page() const {
  return page_;
}
inline void CGMMessageUserInfoByIPCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(6);
  page_ = value;
}

// -------------------------------------------------------------------

// PlayerInfo

// optional uint32 account_id = 1;
inline bool PlayerInfo::has_account_id() const {
  return _has_bit(0);
}
inline void PlayerInfo::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PlayerInfo::account_id() const {
  return account_id_;
}
inline void PlayerInfo::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  account_id_ = value;
}

// optional string account_name = 2;
inline bool PlayerInfo::has_account_name() const {
  return _has_bit(1);
}
inline void PlayerInfo::clear_account_name() {
  if (account_name_ != &_default_account_name_) {
    account_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PlayerInfo::account_name() const {
  return *account_name_;
}
inline void PlayerInfo::set_account_name(const ::std::string& value) {
  _set_bit(1);
  if (account_name_ == &_default_account_name_) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void PlayerInfo::set_account_name(const char* value) {
  _set_bit(1);
  if (account_name_ == &_default_account_name_) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void PlayerInfo::set_account_name(const char* value, size_t size) {
  _set_bit(1);
  if (account_name_ == &_default_account_name_) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_account_name() {
  _set_bit(1);
  if (account_name_ == &_default_account_name_) {
    account_name_ = new ::std::string;
  }
  return account_name_;
}

// optional uint32 role_id = 3;
inline bool PlayerInfo::has_role_id() const {
  return _has_bit(2);
}
inline void PlayerInfo::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PlayerInfo::role_id() const {
  return role_id_;
}
inline void PlayerInfo::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional string role_name = 4;
inline bool PlayerInfo::has_role_name() const {
  return _has_bit(3);
}
inline void PlayerInfo::clear_role_name() {
  if (role_name_ != &_default_role_name_) {
    role_name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PlayerInfo::role_name() const {
  return *role_name_;
}
inline void PlayerInfo::set_role_name(const ::std::string& value) {
  _set_bit(3);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void PlayerInfo::set_role_name(const char* value) {
  _set_bit(3);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
}
inline void PlayerInfo::set_role_name(const char* value, size_t size) {
  _set_bit(3);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_role_name() {
  _set_bit(3);
  if (role_name_ == &_default_role_name_) {
    role_name_ = new ::std::string;
  }
  return role_name_;
}

// optional int32 login_time = 5;
inline bool PlayerInfo::has_login_time() const {
  return _has_bit(4);
}
inline void PlayerInfo::clear_login_time() {
  login_time_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 PlayerInfo::login_time() const {
  return login_time_;
}
inline void PlayerInfo::set_login_time(::google::protobuf::int32 value) {
  _set_bit(4);
  login_time_ = value;
}

// optional int32 role_level = 6;
inline bool PlayerInfo::has_role_level() const {
  return _has_bit(5);
}
inline void PlayerInfo::clear_role_level() {
  role_level_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PlayerInfo::role_level() const {
  return role_level_;
}
inline void PlayerInfo::set_role_level(::google::protobuf::int32 value) {
  _set_bit(5);
  role_level_ = value;
}

// optional int32 metier_id = 7;
inline bool PlayerInfo::has_metier_id() const {
  return _has_bit(6);
}
inline void PlayerInfo::clear_metier_id() {
  metier_id_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 PlayerInfo::metier_id() const {
  return metier_id_;
}
inline void PlayerInfo::set_metier_id(::google::protobuf::int32 value) {
  _set_bit(6);
  metier_id_ = value;
}

// optional int32 cpu_id = 8;
inline bool PlayerInfo::has_cpu_id() const {
  return _has_bit(7);
}
inline void PlayerInfo::clear_cpu_id() {
  cpu_id_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 PlayerInfo::cpu_id() const {
  return cpu_id_;
}
inline void PlayerInfo::set_cpu_id(::google::protobuf::int32 value) {
  _set_bit(7);
  cpu_id_ = value;
}

// optional int32 disk_id = 9;
inline bool PlayerInfo::has_disk_id() const {
  return _has_bit(8);
}
inline void PlayerInfo::clear_disk_id() {
  disk_id_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 PlayerInfo::disk_id() const {
  return disk_id_;
}
inline void PlayerInfo::set_disk_id(::google::protobuf::int32 value) {
  _set_bit(8);
  disk_id_ = value;
}

// optional string mac = 10;
inline bool PlayerInfo::has_mac() const {
  return _has_bit(9);
}
inline void PlayerInfo::clear_mac() {
  if (mac_ != &_default_mac_) {
    mac_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& PlayerInfo::mac() const {
  return *mac_;
}
inline void PlayerInfo::set_mac(const ::std::string& value) {
  _set_bit(9);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void PlayerInfo::set_mac(const char* value) {
  _set_bit(9);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void PlayerInfo::set_mac(const char* value, size_t size) {
  _set_bit(9);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_mac() {
  _set_bit(9);
  if (mac_ == &_default_mac_) {
    mac_ = new ::std::string;
  }
  return mac_;
}

// optional int32 line_id = 11;
inline bool PlayerInfo::has_line_id() const {
  return _has_bit(10);
}
inline void PlayerInfo::clear_line_id() {
  line_id_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 PlayerInfo::line_id() const {
  return line_id_;
}
inline void PlayerInfo::set_line_id(::google::protobuf::int32 value) {
  _set_bit(10);
  line_id_ = value;
}

// optional int32 map_id = 12;
inline bool PlayerInfo::has_map_id() const {
  return _has_bit(11);
}
inline void PlayerInfo::clear_map_id() {
  map_id_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 PlayerInfo::map_id() const {
  return map_id_;
}
inline void PlayerInfo::set_map_id(::google::protobuf::int32 value) {
  _set_bit(11);
  map_id_ = value;
}

// optional int32 game_id = 13;
inline bool PlayerInfo::has_game_id() const {
  return _has_bit(12);
}
inline void PlayerInfo::clear_game_id() {
  game_id_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 PlayerInfo::game_id() const {
  return game_id_;
}
inline void PlayerInfo::set_game_id(::google::protobuf::int32 value) {
  _set_bit(12);
  game_id_ = value;
}

// -------------------------------------------------------------------

// IPInfo

// optional uint32 ip = 1;
inline bool IPInfo::has_ip() const {
  return _has_bit(0);
}
inline void IPInfo::clear_ip() {
  ip_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 IPInfo::ip() const {
  return ip_;
}
inline void IPInfo::set_ip(::google::protobuf::uint32 value) {
  _set_bit(0);
  ip_ = value;
}

// optional uint32 role_num = 2;
inline bool IPInfo::has_role_num() const {
  return _has_bit(1);
}
inline void IPInfo::clear_role_num() {
  role_num_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 IPInfo::role_num() const {
  return role_num_;
}
inline void IPInfo::set_role_num(::google::protobuf::uint32 value) {
  _set_bit(1);
  role_num_ = value;
}

// repeated .PlayerInfo player_info = 3;
inline int IPInfo::player_info_size() const {
  return player_info_.size();
}
inline void IPInfo::clear_player_info() {
  player_info_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerInfo >&
IPInfo::player_info() const {
  return player_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerInfo >*
IPInfo::mutable_player_info() {
  return &player_info_;
}
inline const ::PlayerInfo& IPInfo::player_info(int index) const {
  return player_info_.Get(index);
}
inline ::PlayerInfo* IPInfo::mutable_player_info(int index) {
  return player_info_.Mutable(index);
}
inline ::PlayerInfo* IPInfo::add_player_info() {
  return player_info_.Add();
}

// -------------------------------------------------------------------

// CGMMsgUserInfoByIPResult

// optional uint32 session_id = 1;
inline bool CGMMsgUserInfoByIPResult::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMsgUserInfoByIPResult::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMsgUserInfoByIPResult::session_id() const {
  return session_id_;
}
inline void CGMMsgUserInfoByIPResult::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMsgUserInfoByIPResult::has_fd() const {
  return _has_bit(1);
}
inline void CGMMsgUserInfoByIPResult::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMsgUserInfoByIPResult::fd() const {
  return fd_;
}
inline void CGMMsgUserInfoByIPResult::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// repeated .IPInfo ipinfo = 3;
inline int CGMMsgUserInfoByIPResult::ipinfo_size() const {
  return ipinfo_.size();
}
inline void CGMMsgUserInfoByIPResult::clear_ipinfo() {
  ipinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IPInfo >&
CGMMsgUserInfoByIPResult::ipinfo() const {
  return ipinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::IPInfo >*
CGMMsgUserInfoByIPResult::mutable_ipinfo() {
  return &ipinfo_;
}
inline const ::IPInfo& CGMMsgUserInfoByIPResult::ipinfo(int index) const {
  return ipinfo_.Get(index);
}
inline ::IPInfo* CGMMsgUserInfoByIPResult::mutable_ipinfo(int index) {
  return ipinfo_.Mutable(index);
}
inline ::IPInfo* CGMMsgUserInfoByIPResult::add_ipinfo() {
  return ipinfo_.Add();
}

// optional uint32 ZeroIP = 4;
inline bool CGMMsgUserInfoByIPResult::has_zeroip() const {
  return _has_bit(3);
}
inline void CGMMsgUserInfoByIPResult::clear_zeroip() {
  zeroip_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CGMMsgUserInfoByIPResult::zeroip() const {
  return zeroip_;
}
inline void CGMMsgUserInfoByIPResult::set_zeroip(::google::protobuf::uint32 value) {
  _set_bit(3);
  zeroip_ = value;
}

// -------------------------------------------------------------------

// CGMMessageQueryRoleMailCmd

// optional uint32 session_id = 1;
inline bool CGMMessageQueryRoleMailCmd::has_session_id() const {
  return _has_bit(0);
}
inline void CGMMessageQueryRoleMailCmd::clear_session_id() {
  session_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CGMMessageQueryRoleMailCmd::session_id() const {
  return session_id_;
}
inline void CGMMessageQueryRoleMailCmd::set_session_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  session_id_ = value;
}

// optional uint32 fd = 2;
inline bool CGMMessageQueryRoleMailCmd::has_fd() const {
  return _has_bit(1);
}
inline void CGMMessageQueryRoleMailCmd::clear_fd() {
  fd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CGMMessageQueryRoleMailCmd::fd() const {
  return fd_;
}
inline void CGMMessageQueryRoleMailCmd::set_fd(::google::protobuf::uint32 value) {
  _set_bit(1);
  fd_ = value;
}

// optional uint32 role_id = 3;
inline bool CGMMessageQueryRoleMailCmd::has_role_id() const {
  return _has_bit(2);
}
inline void CGMMessageQueryRoleMailCmd::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CGMMessageQueryRoleMailCmd::role_id() const {
  return role_id_;
}
inline void CGMMessageQueryRoleMailCmd::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_id_ = value;
}

// optional int32 page = 4;
inline bool CGMMessageQueryRoleMailCmd::has_page() const {
  return _has_bit(3);
}
inline void CGMMessageQueryRoleMailCmd::clear_page() {
  page_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CGMMessageQueryRoleMailCmd::page() const {
  return page_;
}
inline void CGMMessageQueryRoleMailCmd::set_page(::google::protobuf::int32 value) {
  _set_bit(3);
  page_ = value;
}

#endif  // PROTOBUF_gmmessage_5fpb_2ehxx__INCLUDED
