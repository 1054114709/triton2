// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_db_5fmsg_5fpb_2ehxx__INCLUDED
#define PROTOBUF_db_5fmsg_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "property_pb.hxx.pb.h"
#include "boursemessage_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();

class CMessageExecuteSqlRequest;
class CMessageExecuteSqlResponse3;
class CMessageLoadPlayerItemInfoRequest;
class CMessageLoadPlayerItemInfoResponse;
class CMessageSavePlayerItemInfoRequest;
class CMessageSavePlayerItemInfoResponse;
class CMessagePlayerProperty;
class CMessageSavePlayerRequest;
class CMessageLoadPlayerInfoRequest;
class CMessageLoadPlayerInfoResponse;
class CMessageSavePlayerResponse;
class CMessageLoadPlayerPropertyRequest;
class CMessageLoadPlayerPropertyResponse;
class CMessageUpdatePlayerInfoRequest;
class CMessageGetBourseInfo;
class CMessageBourseInfoNotice;
class CMessageBourseAddDoc;
class CMessageBourseS2DIncAccount;
class CMessageBourseS2DDecAccount;
class CMessageBourseS2DGetAccount;
class CMessageBourseD2SAccountNotice;
class CMessageUpdatePlayerInfoResponse;
class CMessageBoursePlayerListNotice;
class CMessageBoursePlayerListGet;
class CMessageBourseTrade;
class CMessageS2DBourseDecBuyDoc;
class CMessageS2DBourseDecSellDoc;
class CMessageBourseLogQuery;
class CMessageD2SBourseLog;

enum CMessageLoadPlayerItemInfoResponse_emErrorCode {
  CMessageLoadPlayerItemInfoResponse_emErrorCode_SUCCES = 0,
  CMessageLoadPlayerItemInfoResponse_emErrorCode_SQL_FAILED = -1,
  CMessageLoadPlayerItemInfoResponse_emErrorCode_RECORD_EMPTY = -2,
  CMessageLoadPlayerItemInfoResponse_emErrorCode_DATA_CRASH = -3
};
const ::google::protobuf::EnumDescriptor* CMessageLoadPlayerItemInfoResponse_emErrorCode_descriptor();
bool CMessageLoadPlayerItemInfoResponse_emErrorCode_IsValid(int value);
const CMessageLoadPlayerItemInfoResponse_emErrorCode CMessageLoadPlayerItemInfoResponse_emErrorCode_emErrorCode_MIN = CMessageLoadPlayerItemInfoResponse_emErrorCode_DATA_CRASH;
const CMessageLoadPlayerItemInfoResponse_emErrorCode CMessageLoadPlayerItemInfoResponse_emErrorCode_emErrorCode_MAX = CMessageLoadPlayerItemInfoResponse_emErrorCode_SUCCES;

inline const ::std::string& CMessageLoadPlayerItemInfoResponse_emErrorCode_Name(CMessageLoadPlayerItemInfoResponse_emErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageLoadPlayerItemInfoResponse_emErrorCode_descriptor(), value);
}
inline bool CMessageLoadPlayerItemInfoResponse_emErrorCode_Parse(
    const ::std::string& name, CMessageLoadPlayerItemInfoResponse_emErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageLoadPlayerItemInfoResponse_emErrorCode>(
    CMessageLoadPlayerItemInfoResponse_emErrorCode_descriptor(), name, value);
}
enum CMessageSavePlayerItemInfoResponse_emErrorCode {
  CMessageSavePlayerItemInfoResponse_emErrorCode_SUCCES = 0,
  CMessageSavePlayerItemInfoResponse_emErrorCode_SQL_FAILED = -1,
  CMessageSavePlayerItemInfoResponse_emErrorCode_SERALIZE_FAILED = -2,
  CMessageSavePlayerItemInfoResponse_emErrorCode_FILTER_FAILED = -3,
  CMessageSavePlayerItemInfoResponse_emErrorCode_INVALID_PKGIDX = -4
};
const ::google::protobuf::EnumDescriptor* CMessageSavePlayerItemInfoResponse_emErrorCode_descriptor();
bool CMessageSavePlayerItemInfoResponse_emErrorCode_IsValid(int value);
const CMessageSavePlayerItemInfoResponse_emErrorCode CMessageSavePlayerItemInfoResponse_emErrorCode_emErrorCode_MIN = CMessageSavePlayerItemInfoResponse_emErrorCode_INVALID_PKGIDX;
const CMessageSavePlayerItemInfoResponse_emErrorCode CMessageSavePlayerItemInfoResponse_emErrorCode_emErrorCode_MAX = CMessageSavePlayerItemInfoResponse_emErrorCode_SUCCES;

inline const ::std::string& CMessageSavePlayerItemInfoResponse_emErrorCode_Name(CMessageSavePlayerItemInfoResponse_emErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMessageSavePlayerItemInfoResponse_emErrorCode_descriptor(), value);
}
inline bool CMessageSavePlayerItemInfoResponse_emErrorCode_Parse(
    const ::std::string& name, CMessageSavePlayerItemInfoResponse_emErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMessageSavePlayerItemInfoResponse_emErrorCode>(
    CMessageSavePlayerItemInfoResponse_emErrorCode_descriptor(), name, value);
}
enum DB_MSG_ID {
  ID_S2S_EXECUTESQL_REQUEST = 33278,
  ID_S2S_EXECUTESQL_RESPONSE = 33279,
  ID_S2D_LOADPLAYERITEMINFO_REQUEST = 31746,
  ID_D2S_LOADPLAYERITEMINFO_RESPONSE = 31747,
  ID_S2D_SAVEPLAYERITEMINFO_REQUEST = 31748,
  ID_D2S_SAVEPLAYERITEMINFO_RESPONSE = 31749,
  ID_S2D_LOADPLAYERINFO_REQUEST = 31750,
  ID_D2S_LOADPLAYERINFO_RESPONSE = 31751,
  ID_S2D_SAVEPLAYER_REQUEST = 31752,
  ID_D2S_SAVEPLAYER_RESPONSE = 31753,
  ID_S2D_LOADPLAYERPROPERTY_REQUEST = 31754,
  ID_D2S_LOADPLAYERPROPERTY_RESPONSE = 31755,
  ID_S2D_UPDATEPLAYERINFO_REQUEST = 31758,
  ID_D2S_UPDATEPLAYERINFO_RESPONSE = 31760,
  ID_G2D_GETBOURSE_INFO = 31761,
  ID_S2D_BOURSE_INC_ACCOUNT = 31763,
  ID_S2D_BOURSE_DEC_ACCOUNT = 31764,
  ID_S2D_BOURSE_GET_ACCOUNT = 31765,
  ID_D2S_BOURSE_ACCOUNT_NOTICE = 31766,
  ID_S2D_BOURSE_ADD_DOC = 31767,
  ID_S2D_BOURSE_PLAYER_LIST_GET = 31768,
  ID_D2S_BOURSE_PLAYER_NOTICE = 31769,
  ID_G2D_BOURSE_TRADE = 31770,
  ID_S2D_BOURSE_DEC_BUY_DOC = 31771,
  ID_S2D_BOURSE_DEC_SELL_DOC = 31772,
  ID_S2D_BOURSE_LOG_QUERY = 31773,
  ID_D2S_BOURSE_LOG = 31774
};
const ::google::protobuf::EnumDescriptor* DB_MSG_ID_descriptor();
bool DB_MSG_ID_IsValid(int value);
const DB_MSG_ID DB_MSG_ID_MIN = ID_S2D_LOADPLAYERITEMINFO_REQUEST;
const DB_MSG_ID DB_MSG_ID_MAX = ID_S2S_EXECUTESQL_RESPONSE;

inline const ::std::string& DB_MSG_ID_Name(DB_MSG_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DB_MSG_ID_descriptor(), value);
}
inline bool DB_MSG_ID_Parse(
    const ::std::string& name, DB_MSG_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DB_MSG_ID>(
    DB_MSG_ID_descriptor(), name, value);
}
enum SQLTYPE {
  SELECT = 1,
  INSERT = 2,
  UPDATE = 3,
  DELETE = 4
};
const ::google::protobuf::EnumDescriptor* SQLTYPE_descriptor();
bool SQLTYPE_IsValid(int value);
const SQLTYPE SQLTYPE_MIN = SELECT;
const SQLTYPE SQLTYPE_MAX = DELETE;

inline const ::std::string& SQLTYPE_Name(SQLTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SQLTYPE_descriptor(), value);
}
inline bool SQLTYPE_Parse(
    const ::std::string& name, SQLTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SQLTYPE>(
    SQLTYPE_descriptor(), name, value);
}
enum emPackageIdx {
  PACKAGE_EQUIPMENT = 0,
  PACKAGE_BAGGAGE = 1,
  PACKAGE_STORAGE = 2,
  PACKAGE_TASK = 3
};
const ::google::protobuf::EnumDescriptor* emPackageIdx_descriptor();
bool emPackageIdx_IsValid(int value);
const emPackageIdx emPackageIdx_MIN = PACKAGE_EQUIPMENT;
const emPackageIdx emPackageIdx_MAX = PACKAGE_TASK;

inline const ::std::string& emPackageIdx_Name(emPackageIdx value) {
  return ::google::protobuf::internal::NameOfEnum(
    emPackageIdx_descriptor(), value);
}
inline bool emPackageIdx_Parse(
    const ::std::string& name, emPackageIdx* value) {
  return ::google::protobuf::internal::ParseNamedEnum<emPackageIdx>(
    emPackageIdx_descriptor(), name, value);
}
enum emReSaveFlag {
  SAVE_PACKAGE_EQUIPMENT = 0,
  SAVE_PACKAGE_BAGGAGE = 1,
  SAVE_PACKAGE_STORAGE = 2,
  SAVE_PACKAGE_TASK = 3,
  SAVE_PLAYER_INFO = 4,
  SAVE_PLAYER_PRO = 5,
  SAVE_ITEM_NUM = 6,
  SAVE_ITEM_FULL_FLAG = 63
};
const ::google::protobuf::EnumDescriptor* emReSaveFlag_descriptor();
bool emReSaveFlag_IsValid(int value);
const emReSaveFlag emReSaveFlag_MIN = SAVE_PACKAGE_EQUIPMENT;
const emReSaveFlag emReSaveFlag_MAX = SAVE_ITEM_FULL_FLAG;

inline const ::std::string& emReSaveFlag_Name(emReSaveFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    emReSaveFlag_descriptor(), value);
}
inline bool emReSaveFlag_Parse(
    const ::std::string& name, emReSaveFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<emReSaveFlag>(
    emReSaveFlag_descriptor(), name, value);
}
enum UpdateType {
  BasicInfo = 1,
  SkillList = 2,
  BuffList = 3,
  CDGroup = 4,
  PVPInfo = 5,
  TitleInfo = 6,
  ActivityInfo = 7,
  TalentInfo = 8,
  MWInfo = 9,
  LifeSkill = 10,
  StasticInfo = 11,
  MonsterInfo = 12,
  TelePosInfo = 13,
  Wizard = 14,
  ClientInfo = 15,
  Friend = 16,
  Repetion = 17,
  TaskList = 18,
  MatrixInfo = 19,
  Charm = 20,
  Guide = 21,
  Times = 22
};
const ::google::protobuf::EnumDescriptor* UpdateType_descriptor();
bool UpdateType_IsValid(int value);
const UpdateType UpdateType_MIN = BasicInfo;
const UpdateType UpdateType_MAX = Times;

inline const ::std::string& UpdateType_Name(UpdateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateType_descriptor(), value);
}
inline bool UpdateType_Parse(
    const ::std::string& name, UpdateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateType>(
    UpdateType_descriptor(), name, value);
}
enum MatrixSubType {
  RemoveMaster = 1,
  RemoveSlave = 2,
  AddMasterPoint = 3,
  AddSlaveNum = 4,
  AddFormal = 5
};
const ::google::protobuf::EnumDescriptor* MatrixSubType_descriptor();
bool MatrixSubType_IsValid(int value);
const MatrixSubType MatrixSubType_MIN = RemoveMaster;
const MatrixSubType MatrixSubType_MAX = AddFormal;

inline const ::std::string& MatrixSubType_Name(MatrixSubType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatrixSubType_descriptor(), value);
}
inline bool MatrixSubType_Parse(
    const ::std::string& name, MatrixSubType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixSubType>(
    MatrixSubType_descriptor(), name, value);
}
enum MatrixParam {
  BeginnerNum = 1,
  FormalNum = 2,
  EducatedNum = 3
};
const ::google::protobuf::EnumDescriptor* MatrixParam_descriptor();
bool MatrixParam_IsValid(int value);
const MatrixParam MatrixParam_MIN = BeginnerNum;
const MatrixParam MatrixParam_MAX = EducatedNum;

inline const ::std::string& MatrixParam_Name(MatrixParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatrixParam_descriptor(), value);
}
inline bool MatrixParam_Parse(
    const ::std::string& name, MatrixParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixParam>(
    MatrixParam_descriptor(), name, value);
}
// ===================================================================

class CMessageExecuteSqlRequest : public ::google::protobuf::Message {
 public:
  CMessageExecuteSqlRequest();
  virtual ~CMessageExecuteSqlRequest();
  
  CMessageExecuteSqlRequest(const CMessageExecuteSqlRequest& from);
  
  inline CMessageExecuteSqlRequest& operator=(const CMessageExecuteSqlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageExecuteSqlRequest& default_instance();
  void Swap(CMessageExecuteSqlRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageExecuteSqlRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageExecuteSqlRequest& from);
  void MergeFrom(const CMessageExecuteSqlRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional string SQL = 2;
  inline bool has_sql() const;
  inline void clear_sql();
  static const int kSQLFieldNumber = 2;
  inline const ::std::string& sql() const;
  inline void set_sql(const ::std::string& value);
  inline void set_sql(const char* value);
  inline void set_sql(const char* value, size_t size);
  inline ::std::string* mutable_sql();
  
  // optional uint32 BufSize = 3;
  inline bool has_bufsize() const;
  inline void clear_bufsize();
  static const int kBufSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 bufsize() const;
  inline void set_bufsize(::google::protobuf::uint32 value);
  
  // optional bytes Buffer = 4;
  inline bool has_buffer() const;
  inline void clear_buffer();
  static const int kBufferFieldNumber = 4;
  inline const ::std::string& buffer() const;
  inline void set_buffer(const ::std::string& value);
  inline void set_buffer(const char* value);
  inline void set_buffer(const void* value, size_t size);
  inline ::std::string* mutable_buffer();
  
  // optional uint32 Callback = 5;
  inline bool has_callback() const;
  inline void clear_callback();
  static const int kCallbackFieldNumber = 5;
  inline ::google::protobuf::uint32 callback() const;
  inline void set_callback(::google::protobuf::uint32 value);
  
  // optional uint32 LatestAutoIncID = 6;
  inline bool has_latestautoincid() const;
  inline void clear_latestautoincid();
  static const int kLatestAutoIncIDFieldNumber = 6;
  inline ::google::protobuf::uint32 latestautoincid() const;
  inline void set_latestautoincid(::google::protobuf::uint32 value);
  
  // optional .SQLTYPE SqlType = 7 [default = SELECT];
  inline bool has_sqltype() const;
  inline void clear_sqltype();
  static const int kSqlTypeFieldNumber = 7;
  inline SQLTYPE sqltype() const;
  inline void set_sqltype(SQLTYPE value);
  
  // optional uint32 SessionType = 8;
  inline bool has_sessiontype() const;
  inline void clear_sessiontype();
  static const int kSessionTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 sessiontype() const;
  inline void set_sessiontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::std::string* sql_;
  static const ::std::string _default_sql_;
  ::google::protobuf::uint32 bufsize_;
  ::std::string* buffer_;
  static const ::std::string _default_buffer_;
  ::google::protobuf::uint32 callback_;
  ::google::protobuf::uint32 latestautoincid_;
  int sqltype_;
  ::google::protobuf::uint32 sessiontype_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageExecuteSqlRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageExecuteSqlResponse3 : public ::google::protobuf::Message {
 public:
  CMessageExecuteSqlResponse3();
  virtual ~CMessageExecuteSqlResponse3();
  
  CMessageExecuteSqlResponse3(const CMessageExecuteSqlResponse3& from);
  
  inline CMessageExecuteSqlResponse3& operator=(const CMessageExecuteSqlResponse3& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageExecuteSqlResponse3& default_instance();
  void Swap(CMessageExecuteSqlResponse3* other);
  
  // implements Message ----------------------------------------------
  
  CMessageExecuteSqlResponse3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageExecuteSqlResponse3& from);
  void MergeFrom(const CMessageExecuteSqlResponse3& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 ResultCode = 2;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
  // optional uint32 RowCount = 3 [default = 0];
  inline bool has_rowcount() const;
  inline void clear_rowcount();
  static const int kRowCountFieldNumber = 3;
  inline ::google::protobuf::uint32 rowcount() const;
  inline void set_rowcount(::google::protobuf::uint32 value);
  
  // optional uint32 ColCount = 4 [default = 0];
  inline bool has_colcount() const;
  inline void clear_colcount();
  static const int kColCountFieldNumber = 4;
  inline ::google::protobuf::uint32 colcount() const;
  inline void set_colcount(::google::protobuf::uint32 value);
  
  // repeated string FieldName = 5;
  inline int fieldname_size() const;
  inline void clear_fieldname();
  static const int kFieldNameFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& fieldname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fieldname();
  inline const ::std::string& fieldname(int index) const;
  inline ::std::string* mutable_fieldname(int index);
  inline void set_fieldname(int index, const ::std::string& value);
  inline void set_fieldname(int index, const char* value);
  inline void set_fieldname(int index, const char* value, size_t size);
  inline ::std::string* add_fieldname();
  inline void add_fieldname(const ::std::string& value);
  inline void add_fieldname(const char* value);
  inline void add_fieldname(const char* value, size_t size);
  
  // repeated uint32 FieldType = 6;
  inline int fieldtype_size() const;
  inline void clear_fieldtype();
  static const int kFieldTypeFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& fieldtype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_fieldtype();
  inline ::google::protobuf::uint32 fieldtype(int index) const;
  inline void set_fieldtype(int index, ::google::protobuf::uint32 value);
  inline void add_fieldtype(::google::protobuf::uint32 value);
  
  // repeated bytes FieldValue = 7;
  inline int fieldvalue_size() const;
  inline void clear_fieldvalue();
  static const int kFieldValueFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& fieldvalue() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fieldvalue();
  inline const ::std::string& fieldvalue(int index) const;
  inline ::std::string* mutable_fieldvalue(int index);
  inline void set_fieldvalue(int index, const ::std::string& value);
  inline void set_fieldvalue(int index, const char* value);
  inline void set_fieldvalue(int index, const void* value, size_t size);
  inline ::std::string* add_fieldvalue();
  inline void add_fieldvalue(const ::std::string& value);
  inline void add_fieldvalue(const char* value);
  inline void add_fieldvalue(const void* value, size_t size);
  
  // repeated uint32 FieldValueLen = 8;
  inline int fieldvaluelen_size() const;
  inline void clear_fieldvaluelen();
  static const int kFieldValueLenFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& fieldvaluelen() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_fieldvaluelen();
  inline ::google::protobuf::uint32 fieldvaluelen(int index) const;
  inline void set_fieldvaluelen(int index, ::google::protobuf::uint32 value);
  inline void add_fieldvaluelen(::google::protobuf::uint32 value);
  
  // optional uint32 LatestAutoIncID = 9;
  inline bool has_latestautoincid() const;
  inline void clear_latestautoincid();
  static const int kLatestAutoIncIDFieldNumber = 9;
  inline ::google::protobuf::uint32 latestautoincid() const;
  inline void set_latestautoincid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 resultcode_;
  ::google::protobuf::uint32 rowcount_;
  ::google::protobuf::uint32 colcount_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fieldname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fieldtype_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fieldvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fieldvaluelen_;
  ::google::protobuf::uint32 latestautoincid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageExecuteSqlResponse3* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoadPlayerItemInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageLoadPlayerItemInfoRequest();
  virtual ~CMessageLoadPlayerItemInfoRequest();
  
  CMessageLoadPlayerItemInfoRequest(const CMessageLoadPlayerItemInfoRequest& from);
  
  inline CMessageLoadPlayerItemInfoRequest& operator=(const CMessageLoadPlayerItemInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoadPlayerItemInfoRequest& default_instance();
  void Swap(CMessageLoadPlayerItemInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoadPlayerItemInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoadPlayerItemInfoRequest& from);
  void MergeFrom(const CMessageLoadPlayerItemInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated uint32 PackageIdx = 3;
  inline int packageidx_size() const;
  inline void clear_packageidx();
  static const int kPackageIdxFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& packageidx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_packageidx();
  inline ::google::protobuf::uint32 packageidx(int index) const;
  inline void set_packageidx(int index, ::google::protobuf::uint32 value);
  inline void add_packageidx(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 4;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 4;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > packageidx_;
  ::google::protobuf::uint32 sessionid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoadPlayerItemInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoadPlayerItemInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageLoadPlayerItemInfoResponse();
  virtual ~CMessageLoadPlayerItemInfoResponse();
  
  CMessageLoadPlayerItemInfoResponse(const CMessageLoadPlayerItemInfoResponse& from);
  
  inline CMessageLoadPlayerItemInfoResponse& operator=(const CMessageLoadPlayerItemInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoadPlayerItemInfoResponse& default_instance();
  void Swap(CMessageLoadPlayerItemInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoadPlayerItemInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoadPlayerItemInfoResponse& from);
  void MergeFrom(const CMessageLoadPlayerItemInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageLoadPlayerItemInfoResponse_emErrorCode emErrorCode;
  static const emErrorCode SUCCES = CMessageLoadPlayerItemInfoResponse_emErrorCode_SUCCES;
  static const emErrorCode SQL_FAILED = CMessageLoadPlayerItemInfoResponse_emErrorCode_SQL_FAILED;
  static const emErrorCode RECORD_EMPTY = CMessageLoadPlayerItemInfoResponse_emErrorCode_RECORD_EMPTY;
  static const emErrorCode DATA_CRASH = CMessageLoadPlayerItemInfoResponse_emErrorCode_DATA_CRASH;
  static inline const ::google::protobuf::EnumDescriptor*
  emErrorCode_descriptor() {
    return CMessageLoadPlayerItemInfoResponse_emErrorCode_descriptor();
  }
  static inline bool emErrorCode_IsValid(int value) {
    return CMessageLoadPlayerItemInfoResponse_emErrorCode_IsValid(value);
  }
  static inline const ::std::string& emErrorCode_Name(emErrorCode value) {
    return CMessageLoadPlayerItemInfoResponse_emErrorCode_Name(value);
  }
  static inline bool emErrorCode_Parse(const ::std::string& name,
      emErrorCode* value) {
    return CMessageLoadPlayerItemInfoResponse_emErrorCode_Parse(name, value);
  }
  static const emErrorCode emErrorCode_MIN =
    CMessageLoadPlayerItemInfoResponse_emErrorCode_emErrorCode_MIN;
  static const emErrorCode emErrorCode_MAX =
    CMessageLoadPlayerItemInfoResponse_emErrorCode_emErrorCode_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional int32 ErrCode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  inline ::google::protobuf::int32 errcode() const;
  inline void set_errcode(::google::protobuf::int32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 4;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 4;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // repeated uint32 PackageIdx = 5;
  inline int packageidx_size() const;
  inline void clear_packageidx();
  static const int kPackageIdxFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& packageidx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_packageidx();
  inline ::google::protobuf::uint32 packageidx(int index) const;
  inline void set_packageidx(int index, ::google::protobuf::uint32 value);
  inline void add_packageidx(::google::protobuf::uint32 value);
  
  // repeated .PBItemBox ItemBox = 6;
  inline int itembox_size() const;
  inline void clear_itembox();
  static const int kItemBoxFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemBox >& itembox() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemBox >* mutable_itembox();
  inline const ::PBItemBox& itembox(int index) const;
  inline ::PBItemBox* mutable_itembox(int index);
  inline ::PBItemBox* add_itembox();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 errcode_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > packageidx_;
  ::google::protobuf::RepeatedPtrField< ::PBItemBox > itembox_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoadPlayerItemInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSavePlayerItemInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageSavePlayerItemInfoRequest();
  virtual ~CMessageSavePlayerItemInfoRequest();
  
  CMessageSavePlayerItemInfoRequest(const CMessageSavePlayerItemInfoRequest& from);
  
  inline CMessageSavePlayerItemInfoRequest& operator=(const CMessageSavePlayerItemInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSavePlayerItemInfoRequest& default_instance();
  void Swap(CMessageSavePlayerItemInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSavePlayerItemInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSavePlayerItemInfoRequest& from);
  void MergeFrom(const CMessageSavePlayerItemInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated uint32 PackageIdx = 3;
  inline int packageidx_size() const;
  inline void clear_packageidx();
  static const int kPackageIdxFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& packageidx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_packageidx();
  inline ::google::protobuf::uint32 packageidx(int index) const;
  inline void set_packageidx(int index, ::google::protobuf::uint32 value);
  inline void add_packageidx(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 4;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 4;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // repeated .PBItemBox ItemBox = 6;
  inline int itembox_size() const;
  inline void clear_itembox();
  static const int kItemBoxFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemBox >& itembox() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemBox >* mutable_itembox();
  inline const ::PBItemBox& itembox(int index) const;
  inline ::PBItemBox* mutable_itembox(int index);
  inline ::PBItemBox* add_itembox();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > packageidx_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::RepeatedPtrField< ::PBItemBox > itembox_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSavePlayerItemInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSavePlayerItemInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageSavePlayerItemInfoResponse();
  virtual ~CMessageSavePlayerItemInfoResponse();
  
  CMessageSavePlayerItemInfoResponse(const CMessageSavePlayerItemInfoResponse& from);
  
  inline CMessageSavePlayerItemInfoResponse& operator=(const CMessageSavePlayerItemInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSavePlayerItemInfoResponse& default_instance();
  void Swap(CMessageSavePlayerItemInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSavePlayerItemInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSavePlayerItemInfoResponse& from);
  void MergeFrom(const CMessageSavePlayerItemInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMessageSavePlayerItemInfoResponse_emErrorCode emErrorCode;
  static const emErrorCode SUCCES = CMessageSavePlayerItemInfoResponse_emErrorCode_SUCCES;
  static const emErrorCode SQL_FAILED = CMessageSavePlayerItemInfoResponse_emErrorCode_SQL_FAILED;
  static const emErrorCode SERALIZE_FAILED = CMessageSavePlayerItemInfoResponse_emErrorCode_SERALIZE_FAILED;
  static const emErrorCode FILTER_FAILED = CMessageSavePlayerItemInfoResponse_emErrorCode_FILTER_FAILED;
  static const emErrorCode INVALID_PKGIDX = CMessageSavePlayerItemInfoResponse_emErrorCode_INVALID_PKGIDX;
  static inline const ::google::protobuf::EnumDescriptor*
  emErrorCode_descriptor() {
    return CMessageSavePlayerItemInfoResponse_emErrorCode_descriptor();
  }
  static inline bool emErrorCode_IsValid(int value) {
    return CMessageSavePlayerItemInfoResponse_emErrorCode_IsValid(value);
  }
  static inline const ::std::string& emErrorCode_Name(emErrorCode value) {
    return CMessageSavePlayerItemInfoResponse_emErrorCode_Name(value);
  }
  static inline bool emErrorCode_Parse(const ::std::string& name,
      emErrorCode* value) {
    return CMessageSavePlayerItemInfoResponse_emErrorCode_Parse(name, value);
  }
  static const emErrorCode emErrorCode_MIN =
    CMessageSavePlayerItemInfoResponse_emErrorCode_emErrorCode_MIN;
  static const emErrorCode emErrorCode_MAX =
    CMessageSavePlayerItemInfoResponse_emErrorCode_emErrorCode_MAX;
  
  // accessors -------------------------------------------------------
  
  // optional int32 ErrCode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  inline ::google::protobuf::int32 errcode() const;
  inline void set_errcode(::google::protobuf::int32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated uint32 PackageIdx = 4;
  inline int packageidx_size() const;
  inline void clear_packageidx();
  static const int kPackageIdxFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& packageidx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_packageidx();
  inline ::google::protobuf::uint32 packageidx(int index) const;
  inline void set_packageidx(int index, ::google::protobuf::uint32 value);
  inline void add_packageidx(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 5;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 5;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 errcode_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > packageidx_;
  ::google::protobuf::uint32 sessionid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSavePlayerItemInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerProperty : public ::google::protobuf::Message {
 public:
  CMessagePlayerProperty();
  virtual ~CMessagePlayerProperty();
  
  CMessagePlayerProperty(const CMessagePlayerProperty& from);
  
  inline CMessagePlayerProperty& operator=(const CMessagePlayerProperty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerProperty& default_instance();
  void Swap(CMessagePlayerProperty* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerProperty& from);
  void MergeFrom(const CMessagePlayerProperty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 role_hp = 1;
  inline bool has_role_hp() const;
  inline void clear_role_hp();
  static const int kRoleHpFieldNumber = 1;
  inline ::google::protobuf::uint32 role_hp() const;
  inline void set_role_hp(::google::protobuf::uint32 value);
  
  // optional uint32 role_mp = 2;
  inline bool has_role_mp() const;
  inline void clear_role_mp();
  static const int kRoleMpFieldNumber = 2;
  inline ::google::protobuf::uint32 role_mp() const;
  inline void set_role_mp(::google::protobuf::uint32 value);
  
  // optional uint32 role_ap = 3;
  inline bool has_role_ap() const;
  inline void clear_role_ap();
  static const int kRoleApFieldNumber = 3;
  inline ::google::protobuf::uint32 role_ap() const;
  inline void set_role_ap(::google::protobuf::uint32 value);
  
  // optional .PBPlayerBasicInfo role_basic = 4;
  inline bool has_role_basic() const;
  inline void clear_role_basic();
  static const int kRoleBasicFieldNumber = 4;
  inline const ::PBPlayerBasicInfo& role_basic() const;
  inline ::PBPlayerBasicInfo* mutable_role_basic();
  
  // optional .PBSkillList role_skill = 5;
  inline bool has_role_skill() const;
  inline void clear_role_skill();
  static const int kRoleSkillFieldNumber = 5;
  inline const ::PBSkillList& role_skill() const;
  inline ::PBSkillList* mutable_role_skill();
  
  // optional .PBBuffList role_buff = 6;
  inline bool has_role_buff() const;
  inline void clear_role_buff();
  static const int kRoleBuffFieldNumber = 6;
  inline const ::PBBuffList& role_buff() const;
  inline ::PBBuffList* mutable_role_buff();
  
  // optional .PBPlayerCDGroupInfo role_cdgroup = 7;
  inline bool has_role_cdgroup() const;
  inline void clear_role_cdgroup();
  static const int kRoleCdgroupFieldNumber = 7;
  inline const ::PBPlayerCDGroupInfo& role_cdgroup() const;
  inline ::PBPlayerCDGroupInfo* mutable_role_cdgroup();
  
  // optional .PBPlayerPVPInfo role_pvp = 8;
  inline bool has_role_pvp() const;
  inline void clear_role_pvp();
  static const int kRolePvpFieldNumber = 8;
  inline const ::PBPlayerPVPInfo& role_pvp() const;
  inline ::PBPlayerPVPInfo* mutable_role_pvp();
  
  // optional .PBPlayerTitleInfo role_title = 9;
  inline bool has_role_title() const;
  inline void clear_role_title();
  static const int kRoleTitleFieldNumber = 9;
  inline const ::PBPlayerTitleInfo& role_title() const;
  inline ::PBPlayerTitleInfo* mutable_role_title();
  
  // optional .PBPlayerActivityInfo role_activity = 10;
  inline bool has_role_activity() const;
  inline void clear_role_activity();
  static const int kRoleActivityFieldNumber = 10;
  inline const ::PBPlayerActivityInfo& role_activity() const;
  inline ::PBPlayerActivityInfo* mutable_role_activity();
  
  // optional .PBPlayerTalentInfo role_talent = 11;
  inline bool has_role_talent() const;
  inline void clear_role_talent();
  static const int kRoleTalentFieldNumber = 11;
  inline const ::PBPlayerTalentInfo& role_talent() const;
  inline ::PBPlayerTalentInfo* mutable_role_talent();
  
  // optional .PBPlayerMWInfo role_mw = 12;
  inline bool has_role_mw() const;
  inline void clear_role_mw();
  static const int kRoleMwFieldNumber = 12;
  inline const ::PBPlayerMWInfo& role_mw() const;
  inline ::PBPlayerMWInfo* mutable_role_mw();
  
  // optional .PBLifeSkillBox role_lifeskill = 13;
  inline bool has_role_lifeskill() const;
  inline void clear_role_lifeskill();
  static const int kRoleLifeskillFieldNumber = 13;
  inline const ::PBLifeSkillBox& role_lifeskill() const;
  inline ::PBLifeSkillBox* mutable_role_lifeskill();
  
  // optional .PBPlayerStatisticInfo role_statistic = 14;
  inline bool has_role_statistic() const;
  inline void clear_role_statistic();
  static const int kRoleStatisticFieldNumber = 14;
  inline const ::PBPlayerStatisticInfo& role_statistic() const;
  inline ::PBPlayerStatisticInfo* mutable_role_statistic();
  
  // optional .PBMonsterRecordInfo role_monster_record = 15;
  inline bool has_role_monster_record() const;
  inline void clear_role_monster_record();
  static const int kRoleMonsterRecordFieldNumber = 15;
  inline const ::PBMonsterRecordInfo& role_monster_record() const;
  inline ::PBMonsterRecordInfo* mutable_role_monster_record();
  
  // optional .PBTelePosInfo role_tele_pos = 16;
  inline bool has_role_tele_pos() const;
  inline void clear_role_tele_pos();
  static const int kRoleTelePosFieldNumber = 16;
  inline const ::PBTelePosInfo& role_tele_pos() const;
  inline ::PBTelePosInfo* mutable_role_tele_pos();
  
  // optional .PBWizard role_wizard = 17;
  inline bool has_role_wizard() const;
  inline void clear_role_wizard();
  static const int kRoleWizardFieldNumber = 17;
  inline const ::PBWizard& role_wizard() const;
  inline ::PBWizard* mutable_role_wizard();
  
  // optional .PBPlayerClientInfo role_client = 18;
  inline bool has_role_client() const;
  inline void clear_role_client();
  static const int kRoleClientFieldNumber = 18;
  inline const ::PBPlayerClientInfo& role_client() const;
  inline ::PBPlayerClientInfo* mutable_role_client();
  
  // optional uint32 save_bitflag = 19;
  inline bool has_save_bitflag() const;
  inline void clear_save_bitflag();
  static const int kSaveBitflagFieldNumber = 19;
  inline ::google::protobuf::uint32 save_bitflag() const;
  inline void set_save_bitflag(::google::protobuf::uint32 value);
  
  // optional .PBFriend role_friend = 20;
  inline bool has_role_friend() const;
  inline void clear_role_friend();
  static const int kRoleFriendFieldNumber = 20;
  inline const ::PBFriend& role_friend() const;
  inline ::PBFriend* mutable_role_friend();
  
  // optional .PBRepetion role_repetion = 21;
  inline bool has_role_repetion() const;
  inline void clear_role_repetion();
  static const int kRoleRepetionFieldNumber = 21;
  inline const ::PBRepetion& role_repetion() const;
  inline ::PBRepetion* mutable_role_repetion();
  
  // optional .PBTaskList role_task = 22;
  inline bool has_role_task() const;
  inline void clear_role_task();
  static const int kRoleTaskFieldNumber = 22;
  inline const ::PBTaskList& role_task() const;
  inline ::PBTaskList* mutable_role_task();
  
  // optional .PBMatrixInfo role_matrix = 23;
  inline bool has_role_matrix() const;
  inline void clear_role_matrix();
  static const int kRoleMatrixFieldNumber = 23;
  inline const ::PBMatrixInfo& role_matrix() const;
  inline ::PBMatrixInfo* mutable_role_matrix();
  
  // optional .PBCharm role_charm = 24;
  inline bool has_role_charm() const;
  inline void clear_role_charm();
  static const int kRoleCharmFieldNumber = 24;
  inline const ::PBCharm& role_charm() const;
  inline ::PBCharm* mutable_role_charm();
  
  // optional .PBGuideData role_guide = 25;
  inline bool has_role_guide() const;
  inline void clear_role_guide();
  static const int kRoleGuideFieldNumber = 25;
  inline const ::PBGuideData& role_guide() const;
  inline ::PBGuideData* mutable_role_guide();
  
  // optional .PBTimes role_times = 26;
  inline bool has_role_times() const;
  inline void clear_role_times();
  static const int kRoleTimesFieldNumber = 26;
  inline const ::PBTimes& role_times() const;
  inline ::PBTimes* mutable_role_times();
  
  // optional .PBExpTimeInfo role_exptimeinfo = 27;
  inline bool has_role_exptimeinfo() const;
  inline void clear_role_exptimeinfo();
  static const int kRoleExptimeinfoFieldNumber = 27;
  inline const ::PBExpTimeInfo& role_exptimeinfo() const;
  inline ::PBExpTimeInfo* mutable_role_exptimeinfo();
  
  // optional .PBTreasureBowl role_treasurebowl = 28;
  inline bool has_role_treasurebowl() const;
  inline void clear_role_treasurebowl();
  static const int kRoleTreasurebowlFieldNumber = 28;
  inline const ::PBTreasureBowl& role_treasurebowl() const;
  inline ::PBTreasureBowl* mutable_role_treasurebowl();
  
  // optional .PBSpiritInfo role_spiritinfo = 29;
  inline bool has_role_spiritinfo() const;
  inline void clear_role_spiritinfo();
  static const int kRoleSpiritinfoFieldNumber = 29;
  inline const ::PBSpiritInfo& role_spiritinfo() const;
  inline ::PBSpiritInfo* mutable_role_spiritinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 role_hp_;
  ::google::protobuf::uint32 role_mp_;
  ::google::protobuf::uint32 role_ap_;
  ::PBPlayerBasicInfo* role_basic_;
  ::PBSkillList* role_skill_;
  ::PBBuffList* role_buff_;
  ::PBPlayerCDGroupInfo* role_cdgroup_;
  ::PBPlayerPVPInfo* role_pvp_;
  ::PBPlayerTitleInfo* role_title_;
  ::PBPlayerActivityInfo* role_activity_;
  ::PBPlayerTalentInfo* role_talent_;
  ::PBPlayerMWInfo* role_mw_;
  ::PBLifeSkillBox* role_lifeskill_;
  ::PBPlayerStatisticInfo* role_statistic_;
  ::PBMonsterRecordInfo* role_monster_record_;
  ::PBTelePosInfo* role_tele_pos_;
  ::PBWizard* role_wizard_;
  ::PBPlayerClientInfo* role_client_;
  ::google::protobuf::uint32 save_bitflag_;
  ::PBFriend* role_friend_;
  ::PBRepetion* role_repetion_;
  ::PBTaskList* role_task_;
  ::PBMatrixInfo* role_matrix_;
  ::PBCharm* role_charm_;
  ::PBGuideData* role_guide_;
  ::PBTimes* role_times_;
  ::PBExpTimeInfo* role_exptimeinfo_;
  ::PBTreasureBowl* role_treasurebowl_;
  ::PBSpiritInfo* role_spiritinfo_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(29 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerProperty* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSavePlayerRequest : public ::google::protobuf::Message {
 public:
  CMessageSavePlayerRequest();
  virtual ~CMessageSavePlayerRequest();
  
  CMessageSavePlayerRequest(const CMessageSavePlayerRequest& from);
  
  inline CMessageSavePlayerRequest& operator=(const CMessageSavePlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSavePlayerRequest& default_instance();
  void Swap(CMessageSavePlayerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSavePlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSavePlayerRequest& from);
  void MergeFrom(const CMessageSavePlayerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional .CMessagePlayerInfo Info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::CMessagePlayerInfo& info() const;
  inline ::CMessagePlayerInfo* mutable_info();
  
  // optional .CMessagePlayerProperty Property = 3;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 3;
  inline const ::CMessagePlayerProperty& property() const;
  inline ::CMessagePlayerProperty* mutable_property();
  
  // optional uint32 SessionID = 4;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 4;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 DetailID = 5;
  inline bool has_detailid() const;
  inline void clear_detailid();
  static const int kDetailIDFieldNumber = 5;
  inline ::google::protobuf::uint32 detailid() const;
  inline void set_detailid(::google::protobuf::uint32 value);
  
  // optional uint32 CallBack = 6;
  inline bool has_callback() const;
  inline void clear_callback();
  static const int kCallBackFieldNumber = 6;
  inline ::google::protobuf::uint32 callback() const;
  inline void set_callback(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::CMessagePlayerInfo* info_;
  ::CMessagePlayerProperty* property_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 detailid_;
  ::google::protobuf::uint32 callback_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSavePlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoadPlayerInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageLoadPlayerInfoRequest();
  virtual ~CMessageLoadPlayerInfoRequest();
  
  CMessageLoadPlayerInfoRequest(const CMessageLoadPlayerInfoRequest& from);
  
  inline CMessageLoadPlayerInfoRequest& operator=(const CMessageLoadPlayerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoadPlayerInfoRequest& default_instance();
  void Swap(CMessageLoadPlayerInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoadPlayerInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoadPlayerInfoRequest& from);
  void MergeFrom(const CMessageLoadPlayerInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 sessionid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoadPlayerInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoadPlayerInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageLoadPlayerInfoResponse();
  virtual ~CMessageLoadPlayerInfoResponse();
  
  CMessageLoadPlayerInfoResponse(const CMessageLoadPlayerInfoResponse& from);
  
  inline CMessageLoadPlayerInfoResponse& operator=(const CMessageLoadPlayerInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoadPlayerInfoResponse& default_instance();
  void Swap(CMessageLoadPlayerInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoadPlayerInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoadPlayerInfoResponse& from);
  void MergeFrom(const CMessageLoadPlayerInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional .CMessagePlayerInfo Info = 3;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 3;
  inline const ::CMessagePlayerInfo& info() const;
  inline ::CMessagePlayerInfo* mutable_info();
  
  // optional uint32 ResultCode = 4;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 4;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 sessionid_;
  ::CMessagePlayerInfo* info_;
  ::google::protobuf::uint32 resultcode_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoadPlayerInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSavePlayerResponse : public ::google::protobuf::Message {
 public:
  CMessageSavePlayerResponse();
  virtual ~CMessageSavePlayerResponse();
  
  CMessageSavePlayerResponse(const CMessageSavePlayerResponse& from);
  
  inline CMessageSavePlayerResponse& operator=(const CMessageSavePlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSavePlayerResponse& default_instance();
  void Swap(CMessageSavePlayerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSavePlayerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSavePlayerResponse& from);
  void MergeFrom(const CMessageSavePlayerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 ResultCode = 3;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 resultcode_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSavePlayerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoadPlayerPropertyRequest : public ::google::protobuf::Message {
 public:
  CMessageLoadPlayerPropertyRequest();
  virtual ~CMessageLoadPlayerPropertyRequest();
  
  CMessageLoadPlayerPropertyRequest(const CMessageLoadPlayerPropertyRequest& from);
  
  inline CMessageLoadPlayerPropertyRequest& operator=(const CMessageLoadPlayerPropertyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoadPlayerPropertyRequest& default_instance();
  void Swap(CMessageLoadPlayerPropertyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoadPlayerPropertyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoadPlayerPropertyRequest& from);
  void MergeFrom(const CMessageLoadPlayerPropertyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 DetailID = 4;
  inline bool has_detailid() const;
  inline void clear_detailid();
  static const int kDetailIDFieldNumber = 4;
  inline ::google::protobuf::uint32 detailid() const;
  inline void set_detailid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 detailid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoadPlayerPropertyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLoadPlayerPropertyResponse : public ::google::protobuf::Message {
 public:
  CMessageLoadPlayerPropertyResponse();
  virtual ~CMessageLoadPlayerPropertyResponse();
  
  CMessageLoadPlayerPropertyResponse(const CMessageLoadPlayerPropertyResponse& from);
  
  inline CMessageLoadPlayerPropertyResponse& operator=(const CMessageLoadPlayerPropertyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoadPlayerPropertyResponse& default_instance();
  void Swap(CMessageLoadPlayerPropertyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLoadPlayerPropertyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoadPlayerPropertyResponse& from);
  void MergeFrom(const CMessageLoadPlayerPropertyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional .CMessagePlayerProperty Property = 3;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 3;
  inline const ::CMessagePlayerProperty& property() const;
  inline ::CMessagePlayerProperty* mutable_property();
  
  // optional uint32 ResultCode = 4;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 4;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 sessionid_;
  ::CMessagePlayerProperty* property_;
  ::google::protobuf::uint32 resultcode_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLoadPlayerPropertyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdatePlayerInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageUpdatePlayerInfoRequest();
  virtual ~CMessageUpdatePlayerInfoRequest();
  
  CMessageUpdatePlayerInfoRequest(const CMessageUpdatePlayerInfoRequest& from);
  
  inline CMessageUpdatePlayerInfoRequest& operator=(const CMessageUpdatePlayerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdatePlayerInfoRequest& default_instance();
  void Swap(CMessageUpdatePlayerInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdatePlayerInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdatePlayerInfoRequest& from);
  void MergeFrom(const CMessageUpdatePlayerInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 UpdateType = 3;
  inline bool has_updatetype() const;
  inline void clear_updatetype();
  static const int kUpdateTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 updatetype() const;
  inline void set_updatetype(::google::protobuf::uint32 value);
  
  // optional uint32 Param1 = 4;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 4;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);
  
  // optional uint32 Param2 = 5;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 5;
  inline ::google::protobuf::uint32 param2() const;
  inline void set_param2(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // optional uint32 DetailID = 7;
  inline bool has_detailid() const;
  inline void clear_detailid();
  static const int kDetailIDFieldNumber = 7;
  inline ::google::protobuf::uint32 detailid() const;
  inline void set_detailid(::google::protobuf::uint32 value);
  
  // optional uint32 SubType = 8;
  inline bool has_subtype() const;
  inline void clear_subtype();
  static const int kSubTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 subtype() const;
  inline void set_subtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 updatetype_;
  ::google::protobuf::uint32 param1_;
  ::google::protobuf::uint32 param2_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 detailid_;
  ::google::protobuf::uint32 subtype_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdatePlayerInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetBourseInfo : public ::google::protobuf::Message {
 public:
  CMessageGetBourseInfo();
  virtual ~CMessageGetBourseInfo();
  
  CMessageGetBourseInfo(const CMessageGetBourseInfo& from);
  
  inline CMessageGetBourseInfo& operator=(const CMessageGetBourseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetBourseInfo& default_instance();
  void Swap(CMessageGetBourseInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetBourseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetBourseInfo& from);
  void MergeFrom(const CMessageGetBourseInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 accountid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetBourseInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseInfoNotice : public ::google::protobuf::Message {
 public:
  CMessageBourseInfoNotice();
  virtual ~CMessageBourseInfoNotice();
  
  CMessageBourseInfoNotice(const CMessageBourseInfoNotice& from);
  
  inline CMessageBourseInfoNotice& operator=(const CMessageBourseInfoNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseInfoNotice& default_instance();
  void Swap(CMessageBourseInfoNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseInfoNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseInfoNotice& from);
  void MergeFrom(const CMessageBourseInfoNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional .PBBourseDetailList BuyList = 2;
  inline bool has_buylist() const;
  inline void clear_buylist();
  static const int kBuyListFieldNumber = 2;
  inline const ::PBBourseDetailList& buylist() const;
  inline ::PBBourseDetailList* mutable_buylist();
  
  // optional .PBBourseDetailList SellList = 3;
  inline bool has_selllist() const;
  inline void clear_selllist();
  static const int kSellListFieldNumber = 3;
  inline const ::PBBourseDetailList& selllist() const;
  inline ::PBBourseDetailList* mutable_selllist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::PBBourseDetailList* buylist_;
  ::PBBourseDetailList* selllist_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseInfoNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseAddDoc : public ::google::protobuf::Message {
 public:
  CMessageBourseAddDoc();
  virtual ~CMessageBourseAddDoc();
  
  CMessageBourseAddDoc(const CMessageBourseAddDoc& from);
  
  inline CMessageBourseAddDoc& operator=(const CMessageBourseAddDoc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseAddDoc& default_instance();
  void Swap(CMessageBourseAddDoc* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseAddDoc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseAddDoc& from);
  void MergeFrom(const CMessageBourseAddDoc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional .PBBourseDetail Detail = 3;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 3;
  inline const ::PBBourseDetail& detail() const;
  inline ::PBBourseDetail* mutable_detail();
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Tax = 5;
  inline bool has_tax() const;
  inline void clear_tax();
  static const int kTaxFieldNumber = 5;
  inline ::google::protobuf::uint32 tax() const;
  inline void set_tax(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 6;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 6;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 8;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 8;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 ServerID = 9;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 9;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
  // optional uint32 TaxID = 10;
  inline bool has_taxid() const;
  inline void clear_taxid();
  static const int kTaxIDFieldNumber = 10;
  inline ::google::protobuf::uint32 taxid() const;
  inline void set_taxid(::google::protobuf::uint32 value);
  
  // optional uint32 GameID = 11;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIDFieldNumber = 11;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 accountid_;
  ::PBBourseDetail* detail_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 tax_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 serverid_;
  ::google::protobuf::uint32 taxid_;
  ::google::protobuf::uint32 gameid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseAddDoc* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseS2DIncAccount : public ::google::protobuf::Message {
 public:
  CMessageBourseS2DIncAccount();
  virtual ~CMessageBourseS2DIncAccount();
  
  CMessageBourseS2DIncAccount(const CMessageBourseS2DIncAccount& from);
  
  inline CMessageBourseS2DIncAccount& operator=(const CMessageBourseS2DIncAccount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseS2DIncAccount& default_instance();
  void Swap(CMessageBourseS2DIncAccount* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseS2DIncAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseS2DIncAccount& from);
  void MergeFrom(const CMessageBourseS2DIncAccount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 Yb = 3;
  inline bool has_yb() const;
  inline void clear_yb();
  static const int kYbFieldNumber = 3;
  inline ::google::protobuf::uint32 yb() const;
  inline void set_yb(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 5;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 5;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 yb_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseS2DIncAccount* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseS2DDecAccount : public ::google::protobuf::Message {
 public:
  CMessageBourseS2DDecAccount();
  virtual ~CMessageBourseS2DDecAccount();
  
  CMessageBourseS2DDecAccount(const CMessageBourseS2DDecAccount& from);
  
  inline CMessageBourseS2DDecAccount& operator=(const CMessageBourseS2DDecAccount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseS2DDecAccount& default_instance();
  void Swap(CMessageBourseS2DDecAccount* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseS2DDecAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseS2DDecAccount& from);
  void MergeFrom(const CMessageBourseS2DDecAccount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 Yb = 3;
  inline bool has_yb() const;
  inline void clear_yb();
  static const int kYbFieldNumber = 3;
  inline ::google::protobuf::uint32 yb() const;
  inline void set_yb(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 5;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 5;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 yb_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseS2DDecAccount* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseS2DGetAccount : public ::google::protobuf::Message {
 public:
  CMessageBourseS2DGetAccount();
  virtual ~CMessageBourseS2DGetAccount();
  
  CMessageBourseS2DGetAccount(const CMessageBourseS2DGetAccount& from);
  
  inline CMessageBourseS2DGetAccount& operator=(const CMessageBourseS2DGetAccount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseS2DGetAccount& default_instance();
  void Swap(CMessageBourseS2DGetAccount* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseS2DGetAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseS2DGetAccount& from);
  void MergeFrom(const CMessageBourseS2DGetAccount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 Code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 code_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseS2DGetAccount* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseD2SAccountNotice : public ::google::protobuf::Message {
 public:
  CMessageBourseD2SAccountNotice();
  virtual ~CMessageBourseD2SAccountNotice();
  
  CMessageBourseD2SAccountNotice(const CMessageBourseD2SAccountNotice& from);
  
  inline CMessageBourseD2SAccountNotice& operator=(const CMessageBourseD2SAccountNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseD2SAccountNotice& default_instance();
  void Swap(CMessageBourseD2SAccountNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseD2SAccountNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseD2SAccountNotice& from);
  void MergeFrom(const CMessageBourseD2SAccountNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SessionID = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 Yb = 3;
  inline bool has_yb() const;
  inline void clear_yb();
  static const int kYbFieldNumber = 3;
  inline ::google::protobuf::uint32 yb() const;
  inline void set_yb(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 Code = 5;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 5;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 6;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 6;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 Parame1 = 7;
  inline bool has_parame1() const;
  inline void clear_parame1();
  static const int kParame1FieldNumber = 7;
  inline ::google::protobuf::uint32 parame1() const;
  inline void set_parame1(::google::protobuf::uint32 value);
  
  // optional uint32 Parame2 = 8;
  inline bool has_parame2() const;
  inline void clear_parame2();
  static const int kParame2FieldNumber = 8;
  inline ::google::protobuf::uint32 parame2() const;
  inline void set_parame2(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 yb_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 code_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 parame1_;
  ::google::protobuf::uint32 parame2_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseD2SAccountNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdatePlayerInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageUpdatePlayerInfoResponse();
  virtual ~CMessageUpdatePlayerInfoResponse();
  
  CMessageUpdatePlayerInfoResponse(const CMessageUpdatePlayerInfoResponse& from);
  
  inline CMessageUpdatePlayerInfoResponse& operator=(const CMessageUpdatePlayerInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdatePlayerInfoResponse& default_instance();
  void Swap(CMessageUpdatePlayerInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdatePlayerInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdatePlayerInfoResponse& from);
  void MergeFrom(const CMessageUpdatePlayerInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 SessionID = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);
  
  // optional uint32 ResultCode = 3;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 sessionid_;
  ::google::protobuf::uint32 resultcode_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdatePlayerInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBoursePlayerListNotice : public ::google::protobuf::Message {
 public:
  CMessageBoursePlayerListNotice();
  virtual ~CMessageBoursePlayerListNotice();
  
  CMessageBoursePlayerListNotice(const CMessageBoursePlayerListNotice& from);
  
  inline CMessageBoursePlayerListNotice& operator=(const CMessageBoursePlayerListNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBoursePlayerListNotice& default_instance();
  void Swap(CMessageBoursePlayerListNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBoursePlayerListNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBoursePlayerListNotice& from);
  void MergeFrom(const CMessageBoursePlayerListNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional .PBBourseDetailList BuyList = 2;
  inline bool has_buylist() const;
  inline void clear_buylist();
  static const int kBuyListFieldNumber = 2;
  inline const ::PBBourseDetailList& buylist() const;
  inline ::PBBourseDetailList* mutable_buylist();
  
  // optional .PBBourseDetailList SellList = 3;
  inline bool has_selllist() const;
  inline void clear_selllist();
  static const int kSellListFieldNumber = 3;
  inline const ::PBBourseDetailList& selllist() const;
  inline ::PBBourseDetailList* mutable_selllist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::PBBourseDetailList* buylist_;
  ::PBBourseDetailList* selllist_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBoursePlayerListNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBoursePlayerListGet : public ::google::protobuf::Message {
 public:
  CMessageBoursePlayerListGet();
  virtual ~CMessageBoursePlayerListGet();
  
  CMessageBoursePlayerListGet(const CMessageBoursePlayerListGet& from);
  
  inline CMessageBoursePlayerListGet& operator=(const CMessageBoursePlayerListGet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBoursePlayerListGet& default_instance();
  void Swap(CMessageBoursePlayerListGet* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBoursePlayerListGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBoursePlayerListGet& from);
  void MergeFrom(const CMessageBoursePlayerListGet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBoursePlayerListGet* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseTrade : public ::google::protobuf::Message {
 public:
  CMessageBourseTrade();
  virtual ~CMessageBourseTrade();
  
  CMessageBourseTrade(const CMessageBourseTrade& from);
  
  inline CMessageBourseTrade& operator=(const CMessageBourseTrade& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseTrade& default_instance();
  void Swap(CMessageBourseTrade* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseTrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseTrade& from);
  void MergeFrom(const CMessageBourseTrade& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BuyPrice = 1;
  inline bool has_buyprice() const;
  inline void clear_buyprice();
  static const int kBuyPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 buyprice() const;
  inline void set_buyprice(::google::protobuf::uint32 value);
  
  // optional uint32 SellPrice = 2;
  inline bool has_sellprice() const;
  inline void clear_sellprice();
  static const int kSellPriceFieldNumber = 2;
  inline ::google::protobuf::uint32 sellprice() const;
  inline void set_sellprice(::google::protobuf::uint32 value);
  
  // optional uint32 Rating_id = 3;
  inline bool has_rating_id() const;
  inline void clear_rating_id();
  static const int kRatingIdFieldNumber = 3;
  inline ::google::protobuf::uint32 rating_id() const;
  inline void set_rating_id(::google::protobuf::uint32 value);
  
  // optional uint32 Worldid = 4;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 4;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 buyprice_;
  ::google::protobuf::uint32 sellprice_;
  ::google::protobuf::uint32 rating_id_;
  ::google::protobuf::uint32 worldid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseTrade* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2DBourseDecBuyDoc : public ::google::protobuf::Message {
 public:
  CMessageS2DBourseDecBuyDoc();
  virtual ~CMessageS2DBourseDecBuyDoc();
  
  CMessageS2DBourseDecBuyDoc(const CMessageS2DBourseDecBuyDoc& from);
  
  inline CMessageS2DBourseDecBuyDoc& operator=(const CMessageS2DBourseDecBuyDoc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2DBourseDecBuyDoc& default_instance();
  void Swap(CMessageS2DBourseDecBuyDoc* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2DBourseDecBuyDoc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2DBourseDecBuyDoc& from);
  void MergeFrom(const CMessageS2DBourseDecBuyDoc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Doc = 1;
  inline bool has_doc() const;
  inline void clear_doc();
  static const int kDocFieldNumber = 1;
  inline ::google::protobuf::uint32 doc() const;
  inline void set_doc(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 doc_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2DBourseDecBuyDoc* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2DBourseDecSellDoc : public ::google::protobuf::Message {
 public:
  CMessageS2DBourseDecSellDoc();
  virtual ~CMessageS2DBourseDecSellDoc();
  
  CMessageS2DBourseDecSellDoc(const CMessageS2DBourseDecSellDoc& from);
  
  inline CMessageS2DBourseDecSellDoc& operator=(const CMessageS2DBourseDecSellDoc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2DBourseDecSellDoc& default_instance();
  void Swap(CMessageS2DBourseDecSellDoc* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2DBourseDecSellDoc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2DBourseDecSellDoc& from);
  void MergeFrom(const CMessageS2DBourseDecSellDoc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Doc = 1;
  inline bool has_doc() const;
  inline void clear_doc();
  static const int kDocFieldNumber = 1;
  inline ::google::protobuf::uint32 doc() const;
  inline void set_doc(::google::protobuf::uint32 value);
  
  // optional uint32 AccountID = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 doc_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2DBourseDecSellDoc* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseLogQuery : public ::google::protobuf::Message {
 public:
  CMessageBourseLogQuery();
  virtual ~CMessageBourseLogQuery();
  
  CMessageBourseLogQuery(const CMessageBourseLogQuery& from);
  
  inline CMessageBourseLogQuery& operator=(const CMessageBourseLogQuery& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseLogQuery& default_instance();
  void Swap(CMessageBourseLogQuery* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseLogQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseLogQuery& from);
  void MergeFrom(const CMessageBourseLogQuery& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseLogQuery* default_instance_;
};
// -------------------------------------------------------------------

class CMessageD2SBourseLog : public ::google::protobuf::Message {
 public:
  CMessageD2SBourseLog();
  virtual ~CMessageD2SBourseLog();
  
  CMessageD2SBourseLog(const CMessageD2SBourseLog& from);
  
  inline CMessageD2SBourseLog& operator=(const CMessageD2SBourseLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageD2SBourseLog& default_instance();
  void Swap(CMessageD2SBourseLog* other);
  
  // implements Message ----------------------------------------------
  
  CMessageD2SBourseLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageD2SBourseLog& from);
  void MergeFrom(const CMessageD2SBourseLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccountID = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional .PBBourseDetailList buy_log = 2;
  inline bool has_buy_log() const;
  inline void clear_buy_log();
  static const int kBuyLogFieldNumber = 2;
  inline const ::PBBourseDetailList& buy_log() const;
  inline ::PBBourseDetailList* mutable_buy_log();
  
  // optional .PBBourseDetailList sell_log = 3;
  inline bool has_sell_log() const;
  inline void clear_sell_log();
  static const int kSellLogFieldNumber = 3;
  inline const ::PBBourseDetailList& sell_log() const;
  inline ::PBBourseDetailList* mutable_sell_log();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accountid_;
  ::PBBourseDetailList* buy_log_;
  ::PBBourseDetailList* sell_log_;
  friend void  protobuf_AddDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_AssignDesc_db_5fmsg_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_db_5fmsg_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageD2SBourseLog* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageExecuteSqlRequest

// optional uint32 SessionID = 1;
inline bool CMessageExecuteSqlRequest::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageExecuteSqlRequest::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlRequest::sessionid() const {
  return sessionid_;
}
inline void CMessageExecuteSqlRequest::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional string SQL = 2;
inline bool CMessageExecuteSqlRequest::has_sql() const {
  return _has_bit(1);
}
inline void CMessageExecuteSqlRequest::clear_sql() {
  if (sql_ != &_default_sql_) {
    sql_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageExecuteSqlRequest::sql() const {
  return *sql_;
}
inline void CMessageExecuteSqlRequest::set_sql(const ::std::string& value) {
  _set_bit(1);
  if (sql_ == &_default_sql_) {
    sql_ = new ::std::string;
  }
  sql_->assign(value);
}
inline void CMessageExecuteSqlRequest::set_sql(const char* value) {
  _set_bit(1);
  if (sql_ == &_default_sql_) {
    sql_ = new ::std::string;
  }
  sql_->assign(value);
}
inline void CMessageExecuteSqlRequest::set_sql(const char* value, size_t size) {
  _set_bit(1);
  if (sql_ == &_default_sql_) {
    sql_ = new ::std::string;
  }
  sql_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageExecuteSqlRequest::mutable_sql() {
  _set_bit(1);
  if (sql_ == &_default_sql_) {
    sql_ = new ::std::string;
  }
  return sql_;
}

// optional uint32 BufSize = 3;
inline bool CMessageExecuteSqlRequest::has_bufsize() const {
  return _has_bit(2);
}
inline void CMessageExecuteSqlRequest::clear_bufsize() {
  bufsize_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlRequest::bufsize() const {
  return bufsize_;
}
inline void CMessageExecuteSqlRequest::set_bufsize(::google::protobuf::uint32 value) {
  _set_bit(2);
  bufsize_ = value;
}

// optional bytes Buffer = 4;
inline bool CMessageExecuteSqlRequest::has_buffer() const {
  return _has_bit(3);
}
inline void CMessageExecuteSqlRequest::clear_buffer() {
  if (buffer_ != &_default_buffer_) {
    buffer_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageExecuteSqlRequest::buffer() const {
  return *buffer_;
}
inline void CMessageExecuteSqlRequest::set_buffer(const ::std::string& value) {
  _set_bit(3);
  if (buffer_ == &_default_buffer_) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void CMessageExecuteSqlRequest::set_buffer(const char* value) {
  _set_bit(3);
  if (buffer_ == &_default_buffer_) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(value);
}
inline void CMessageExecuteSqlRequest::set_buffer(const void* value, size_t size) {
  _set_bit(3);
  if (buffer_ == &_default_buffer_) {
    buffer_ = new ::std::string;
  }
  buffer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageExecuteSqlRequest::mutable_buffer() {
  _set_bit(3);
  if (buffer_ == &_default_buffer_) {
    buffer_ = new ::std::string;
  }
  return buffer_;
}

// optional uint32 Callback = 5;
inline bool CMessageExecuteSqlRequest::has_callback() const {
  return _has_bit(4);
}
inline void CMessageExecuteSqlRequest::clear_callback() {
  callback_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlRequest::callback() const {
  return callback_;
}
inline void CMessageExecuteSqlRequest::set_callback(::google::protobuf::uint32 value) {
  _set_bit(4);
  callback_ = value;
}

// optional uint32 LatestAutoIncID = 6;
inline bool CMessageExecuteSqlRequest::has_latestautoincid() const {
  return _has_bit(5);
}
inline void CMessageExecuteSqlRequest::clear_latestautoincid() {
  latestautoincid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlRequest::latestautoincid() const {
  return latestautoincid_;
}
inline void CMessageExecuteSqlRequest::set_latestautoincid(::google::protobuf::uint32 value) {
  _set_bit(5);
  latestautoincid_ = value;
}

// optional .SQLTYPE SqlType = 7 [default = SELECT];
inline bool CMessageExecuteSqlRequest::has_sqltype() const {
  return _has_bit(6);
}
inline void CMessageExecuteSqlRequest::clear_sqltype() {
  sqltype_ = 1;
  _clear_bit(6);
}
inline SQLTYPE CMessageExecuteSqlRequest::sqltype() const {
  return static_cast< SQLTYPE >(sqltype_);
}
inline void CMessageExecuteSqlRequest::set_sqltype(SQLTYPE value) {
  GOOGLE_DCHECK(SQLTYPE_IsValid(value));
  _set_bit(6);
  sqltype_ = value;
}

// optional uint32 SessionType = 8;
inline bool CMessageExecuteSqlRequest::has_sessiontype() const {
  return _has_bit(7);
}
inline void CMessageExecuteSqlRequest::clear_sessiontype() {
  sessiontype_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlRequest::sessiontype() const {
  return sessiontype_;
}
inline void CMessageExecuteSqlRequest::set_sessiontype(::google::protobuf::uint32 value) {
  _set_bit(7);
  sessiontype_ = value;
}

// -------------------------------------------------------------------

// CMessageExecuteSqlResponse3

// optional uint32 SessionID = 1;
inline bool CMessageExecuteSqlResponse3::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageExecuteSqlResponse3::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlResponse3::sessionid() const {
  return sessionid_;
}
inline void CMessageExecuteSqlResponse3::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional uint32 ResultCode = 2;
inline bool CMessageExecuteSqlResponse3::has_resultcode() const {
  return _has_bit(1);
}
inline void CMessageExecuteSqlResponse3::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlResponse3::resultcode() const {
  return resultcode_;
}
inline void CMessageExecuteSqlResponse3::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  resultcode_ = value;
}

// optional uint32 RowCount = 3 [default = 0];
inline bool CMessageExecuteSqlResponse3::has_rowcount() const {
  return _has_bit(2);
}
inline void CMessageExecuteSqlResponse3::clear_rowcount() {
  rowcount_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlResponse3::rowcount() const {
  return rowcount_;
}
inline void CMessageExecuteSqlResponse3::set_rowcount(::google::protobuf::uint32 value) {
  _set_bit(2);
  rowcount_ = value;
}

// optional uint32 ColCount = 4 [default = 0];
inline bool CMessageExecuteSqlResponse3::has_colcount() const {
  return _has_bit(3);
}
inline void CMessageExecuteSqlResponse3::clear_colcount() {
  colcount_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlResponse3::colcount() const {
  return colcount_;
}
inline void CMessageExecuteSqlResponse3::set_colcount(::google::protobuf::uint32 value) {
  _set_bit(3);
  colcount_ = value;
}

// repeated string FieldName = 5;
inline int CMessageExecuteSqlResponse3::fieldname_size() const {
  return fieldname_.size();
}
inline void CMessageExecuteSqlResponse3::clear_fieldname() {
  fieldname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageExecuteSqlResponse3::fieldname() const {
  return fieldname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageExecuteSqlResponse3::mutable_fieldname() {
  return &fieldname_;
}
inline const ::std::string& CMessageExecuteSqlResponse3::fieldname(int index) const {
  return fieldname_.Get(index);
}
inline ::std::string* CMessageExecuteSqlResponse3::mutable_fieldname(int index) {
  return fieldname_.Mutable(index);
}
inline void CMessageExecuteSqlResponse3::set_fieldname(int index, const ::std::string& value) {
  fieldname_.Mutable(index)->assign(value);
}
inline void CMessageExecuteSqlResponse3::set_fieldname(int index, const char* value) {
  fieldname_.Mutable(index)->assign(value);
}
inline void CMessageExecuteSqlResponse3::set_fieldname(int index, const char* value, size_t size) {
  fieldname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageExecuteSqlResponse3::add_fieldname() {
  return fieldname_.Add();
}
inline void CMessageExecuteSqlResponse3::add_fieldname(const ::std::string& value) {
  fieldname_.Add()->assign(value);
}
inline void CMessageExecuteSqlResponse3::add_fieldname(const char* value) {
  fieldname_.Add()->assign(value);
}
inline void CMessageExecuteSqlResponse3::add_fieldname(const char* value, size_t size) {
  fieldname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 FieldType = 6;
inline int CMessageExecuteSqlResponse3::fieldtype_size() const {
  return fieldtype_.size();
}
inline void CMessageExecuteSqlResponse3::clear_fieldtype() {
  fieldtype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageExecuteSqlResponse3::fieldtype() const {
  return fieldtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageExecuteSqlResponse3::mutable_fieldtype() {
  return &fieldtype_;
}
inline ::google::protobuf::uint32 CMessageExecuteSqlResponse3::fieldtype(int index) const {
  return fieldtype_.Get(index);
}
inline void CMessageExecuteSqlResponse3::set_fieldtype(int index, ::google::protobuf::uint32 value) {
  fieldtype_.Set(index, value);
}
inline void CMessageExecuteSqlResponse3::add_fieldtype(::google::protobuf::uint32 value) {
  fieldtype_.Add(value);
}

// repeated bytes FieldValue = 7;
inline int CMessageExecuteSqlResponse3::fieldvalue_size() const {
  return fieldvalue_.size();
}
inline void CMessageExecuteSqlResponse3::clear_fieldvalue() {
  fieldvalue_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageExecuteSqlResponse3::fieldvalue() const {
  return fieldvalue_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageExecuteSqlResponse3::mutable_fieldvalue() {
  return &fieldvalue_;
}
inline const ::std::string& CMessageExecuteSqlResponse3::fieldvalue(int index) const {
  return fieldvalue_.Get(index);
}
inline ::std::string* CMessageExecuteSqlResponse3::mutable_fieldvalue(int index) {
  return fieldvalue_.Mutable(index);
}
inline void CMessageExecuteSqlResponse3::set_fieldvalue(int index, const ::std::string& value) {
  fieldvalue_.Mutable(index)->assign(value);
}
inline void CMessageExecuteSqlResponse3::set_fieldvalue(int index, const char* value) {
  fieldvalue_.Mutable(index)->assign(value);
}
inline void CMessageExecuteSqlResponse3::set_fieldvalue(int index, const void* value, size_t size) {
  fieldvalue_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageExecuteSqlResponse3::add_fieldvalue() {
  return fieldvalue_.Add();
}
inline void CMessageExecuteSqlResponse3::add_fieldvalue(const ::std::string& value) {
  fieldvalue_.Add()->assign(value);
}
inline void CMessageExecuteSqlResponse3::add_fieldvalue(const char* value) {
  fieldvalue_.Add()->assign(value);
}
inline void CMessageExecuteSqlResponse3::add_fieldvalue(const void* value, size_t size) {
  fieldvalue_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 FieldValueLen = 8;
inline int CMessageExecuteSqlResponse3::fieldvaluelen_size() const {
  return fieldvaluelen_.size();
}
inline void CMessageExecuteSqlResponse3::clear_fieldvaluelen() {
  fieldvaluelen_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageExecuteSqlResponse3::fieldvaluelen() const {
  return fieldvaluelen_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageExecuteSqlResponse3::mutable_fieldvaluelen() {
  return &fieldvaluelen_;
}
inline ::google::protobuf::uint32 CMessageExecuteSqlResponse3::fieldvaluelen(int index) const {
  return fieldvaluelen_.Get(index);
}
inline void CMessageExecuteSqlResponse3::set_fieldvaluelen(int index, ::google::protobuf::uint32 value) {
  fieldvaluelen_.Set(index, value);
}
inline void CMessageExecuteSqlResponse3::add_fieldvaluelen(::google::protobuf::uint32 value) {
  fieldvaluelen_.Add(value);
}

// optional uint32 LatestAutoIncID = 9;
inline bool CMessageExecuteSqlResponse3::has_latestautoincid() const {
  return _has_bit(8);
}
inline void CMessageExecuteSqlResponse3::clear_latestautoincid() {
  latestautoincid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageExecuteSqlResponse3::latestautoincid() const {
  return latestautoincid_;
}
inline void CMessageExecuteSqlResponse3::set_latestautoincid(::google::protobuf::uint32 value) {
  _set_bit(8);
  latestautoincid_ = value;
}

// -------------------------------------------------------------------

// CMessageLoadPlayerItemInfoRequest

// optional uint32 AccountID = 1;
inline bool CMessageLoadPlayerItemInfoRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageLoadPlayerItemInfoRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerItemInfoRequest::accountid() const {
  return accountid_;
}
inline void CMessageLoadPlayerItemInfoRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageLoadPlayerItemInfoRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageLoadPlayerItemInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerItemInfoRequest::charid() const {
  return charid_;
}
inline void CMessageLoadPlayerItemInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// repeated uint32 PackageIdx = 3;
inline int CMessageLoadPlayerItemInfoRequest::packageidx_size() const {
  return packageidx_.size();
}
inline void CMessageLoadPlayerItemInfoRequest::clear_packageidx() {
  packageidx_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageLoadPlayerItemInfoRequest::packageidx() const {
  return packageidx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageLoadPlayerItemInfoRequest::mutable_packageidx() {
  return &packageidx_;
}
inline ::google::protobuf::uint32 CMessageLoadPlayerItemInfoRequest::packageidx(int index) const {
  return packageidx_.Get(index);
}
inline void CMessageLoadPlayerItemInfoRequest::set_packageidx(int index, ::google::protobuf::uint32 value) {
  packageidx_.Set(index, value);
}
inline void CMessageLoadPlayerItemInfoRequest::add_packageidx(::google::protobuf::uint32 value) {
  packageidx_.Add(value);
}

// optional uint32 SessionID = 4;
inline bool CMessageLoadPlayerItemInfoRequest::has_sessionid() const {
  return _has_bit(3);
}
inline void CMessageLoadPlayerItemInfoRequest::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerItemInfoRequest::sessionid() const {
  return sessionid_;
}
inline void CMessageLoadPlayerItemInfoRequest::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(3);
  sessionid_ = value;
}

// -------------------------------------------------------------------

// CMessageLoadPlayerItemInfoResponse

// optional int32 ErrCode = 1;
inline bool CMessageLoadPlayerItemInfoResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageLoadPlayerItemInfoResponse::clear_errcode() {
  errcode_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageLoadPlayerItemInfoResponse::errcode() const {
  return errcode_;
}
inline void CMessageLoadPlayerItemInfoResponse::set_errcode(::google::protobuf::int32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageLoadPlayerItemInfoResponse::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageLoadPlayerItemInfoResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerItemInfoResponse::accountid() const {
  return accountid_;
}
inline void CMessageLoadPlayerItemInfoResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageLoadPlayerItemInfoResponse::has_charid() const {
  return _has_bit(2);
}
inline void CMessageLoadPlayerItemInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerItemInfoResponse::charid() const {
  return charid_;
}
inline void CMessageLoadPlayerItemInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 SessionID = 4;
inline bool CMessageLoadPlayerItemInfoResponse::has_sessionid() const {
  return _has_bit(3);
}
inline void CMessageLoadPlayerItemInfoResponse::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerItemInfoResponse::sessionid() const {
  return sessionid_;
}
inline void CMessageLoadPlayerItemInfoResponse::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(3);
  sessionid_ = value;
}

// repeated uint32 PackageIdx = 5;
inline int CMessageLoadPlayerItemInfoResponse::packageidx_size() const {
  return packageidx_.size();
}
inline void CMessageLoadPlayerItemInfoResponse::clear_packageidx() {
  packageidx_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageLoadPlayerItemInfoResponse::packageidx() const {
  return packageidx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageLoadPlayerItemInfoResponse::mutable_packageidx() {
  return &packageidx_;
}
inline ::google::protobuf::uint32 CMessageLoadPlayerItemInfoResponse::packageidx(int index) const {
  return packageidx_.Get(index);
}
inline void CMessageLoadPlayerItemInfoResponse::set_packageidx(int index, ::google::protobuf::uint32 value) {
  packageidx_.Set(index, value);
}
inline void CMessageLoadPlayerItemInfoResponse::add_packageidx(::google::protobuf::uint32 value) {
  packageidx_.Add(value);
}

// repeated .PBItemBox ItemBox = 6;
inline int CMessageLoadPlayerItemInfoResponse::itembox_size() const {
  return itembox_.size();
}
inline void CMessageLoadPlayerItemInfoResponse::clear_itembox() {
  itembox_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemBox >&
CMessageLoadPlayerItemInfoResponse::itembox() const {
  return itembox_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemBox >*
CMessageLoadPlayerItemInfoResponse::mutable_itembox() {
  return &itembox_;
}
inline const ::PBItemBox& CMessageLoadPlayerItemInfoResponse::itembox(int index) const {
  return itembox_.Get(index);
}
inline ::PBItemBox* CMessageLoadPlayerItemInfoResponse::mutable_itembox(int index) {
  return itembox_.Mutable(index);
}
inline ::PBItemBox* CMessageLoadPlayerItemInfoResponse::add_itembox() {
  return itembox_.Add();
}

// -------------------------------------------------------------------

// CMessageSavePlayerItemInfoRequest

// optional uint32 AccountID = 1;
inline bool CMessageSavePlayerItemInfoRequest::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageSavePlayerItemInfoRequest::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSavePlayerItemInfoRequest::accountid() const {
  return accountid_;
}
inline void CMessageSavePlayerItemInfoRequest::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageSavePlayerItemInfoRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageSavePlayerItemInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSavePlayerItemInfoRequest::charid() const {
  return charid_;
}
inline void CMessageSavePlayerItemInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// repeated uint32 PackageIdx = 3;
inline int CMessageSavePlayerItemInfoRequest::packageidx_size() const {
  return packageidx_.size();
}
inline void CMessageSavePlayerItemInfoRequest::clear_packageidx() {
  packageidx_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageSavePlayerItemInfoRequest::packageidx() const {
  return packageidx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageSavePlayerItemInfoRequest::mutable_packageidx() {
  return &packageidx_;
}
inline ::google::protobuf::uint32 CMessageSavePlayerItemInfoRequest::packageidx(int index) const {
  return packageidx_.Get(index);
}
inline void CMessageSavePlayerItemInfoRequest::set_packageidx(int index, ::google::protobuf::uint32 value) {
  packageidx_.Set(index, value);
}
inline void CMessageSavePlayerItemInfoRequest::add_packageidx(::google::protobuf::uint32 value) {
  packageidx_.Add(value);
}

// optional uint32 SessionID = 4;
inline bool CMessageSavePlayerItemInfoRequest::has_sessionid() const {
  return _has_bit(3);
}
inline void CMessageSavePlayerItemInfoRequest::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSavePlayerItemInfoRequest::sessionid() const {
  return sessionid_;
}
inline void CMessageSavePlayerItemInfoRequest::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(3);
  sessionid_ = value;
}

// repeated .PBItemBox ItemBox = 6;
inline int CMessageSavePlayerItemInfoRequest::itembox_size() const {
  return itembox_.size();
}
inline void CMessageSavePlayerItemInfoRequest::clear_itembox() {
  itembox_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemBox >&
CMessageSavePlayerItemInfoRequest::itembox() const {
  return itembox_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemBox >*
CMessageSavePlayerItemInfoRequest::mutable_itembox() {
  return &itembox_;
}
inline const ::PBItemBox& CMessageSavePlayerItemInfoRequest::itembox(int index) const {
  return itembox_.Get(index);
}
inline ::PBItemBox* CMessageSavePlayerItemInfoRequest::mutable_itembox(int index) {
  return itembox_.Mutable(index);
}
inline ::PBItemBox* CMessageSavePlayerItemInfoRequest::add_itembox() {
  return itembox_.Add();
}

// -------------------------------------------------------------------

// CMessageSavePlayerItemInfoResponse

// optional int32 ErrCode = 1;
inline bool CMessageSavePlayerItemInfoResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageSavePlayerItemInfoResponse::clear_errcode() {
  errcode_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageSavePlayerItemInfoResponse::errcode() const {
  return errcode_;
}
inline void CMessageSavePlayerItemInfoResponse::set_errcode(::google::protobuf::int32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageSavePlayerItemInfoResponse::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageSavePlayerItemInfoResponse::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSavePlayerItemInfoResponse::accountid() const {
  return accountid_;
}
inline void CMessageSavePlayerItemInfoResponse::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageSavePlayerItemInfoResponse::has_charid() const {
  return _has_bit(2);
}
inline void CMessageSavePlayerItemInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSavePlayerItemInfoResponse::charid() const {
  return charid_;
}
inline void CMessageSavePlayerItemInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// repeated uint32 PackageIdx = 4;
inline int CMessageSavePlayerItemInfoResponse::packageidx_size() const {
  return packageidx_.size();
}
inline void CMessageSavePlayerItemInfoResponse::clear_packageidx() {
  packageidx_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageSavePlayerItemInfoResponse::packageidx() const {
  return packageidx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageSavePlayerItemInfoResponse::mutable_packageidx() {
  return &packageidx_;
}
inline ::google::protobuf::uint32 CMessageSavePlayerItemInfoResponse::packageidx(int index) const {
  return packageidx_.Get(index);
}
inline void CMessageSavePlayerItemInfoResponse::set_packageidx(int index, ::google::protobuf::uint32 value) {
  packageidx_.Set(index, value);
}
inline void CMessageSavePlayerItemInfoResponse::add_packageidx(::google::protobuf::uint32 value) {
  packageidx_.Add(value);
}

// optional uint32 SessionID = 5;
inline bool CMessageSavePlayerItemInfoResponse::has_sessionid() const {
  return _has_bit(4);
}
inline void CMessageSavePlayerItemInfoResponse::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageSavePlayerItemInfoResponse::sessionid() const {
  return sessionid_;
}
inline void CMessageSavePlayerItemInfoResponse::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(4);
  sessionid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerProperty

// optional uint32 role_hp = 1;
inline bool CMessagePlayerProperty::has_role_hp() const {
  return _has_bit(0);
}
inline void CMessagePlayerProperty::clear_role_hp() {
  role_hp_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerProperty::role_hp() const {
  return role_hp_;
}
inline void CMessagePlayerProperty::set_role_hp(::google::protobuf::uint32 value) {
  _set_bit(0);
  role_hp_ = value;
}

// optional uint32 role_mp = 2;
inline bool CMessagePlayerProperty::has_role_mp() const {
  return _has_bit(1);
}
inline void CMessagePlayerProperty::clear_role_mp() {
  role_mp_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerProperty::role_mp() const {
  return role_mp_;
}
inline void CMessagePlayerProperty::set_role_mp(::google::protobuf::uint32 value) {
  _set_bit(1);
  role_mp_ = value;
}

// optional uint32 role_ap = 3;
inline bool CMessagePlayerProperty::has_role_ap() const {
  return _has_bit(2);
}
inline void CMessagePlayerProperty::clear_role_ap() {
  role_ap_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerProperty::role_ap() const {
  return role_ap_;
}
inline void CMessagePlayerProperty::set_role_ap(::google::protobuf::uint32 value) {
  _set_bit(2);
  role_ap_ = value;
}

// optional .PBPlayerBasicInfo role_basic = 4;
inline bool CMessagePlayerProperty::has_role_basic() const {
  return _has_bit(3);
}
inline void CMessagePlayerProperty::clear_role_basic() {
  if (role_basic_ != NULL) role_basic_->::PBPlayerBasicInfo::Clear();
  _clear_bit(3);
}
inline const ::PBPlayerBasicInfo& CMessagePlayerProperty::role_basic() const {
  return role_basic_ != NULL ? *role_basic_ : *default_instance_->role_basic_;
}
inline ::PBPlayerBasicInfo* CMessagePlayerProperty::mutable_role_basic() {
  _set_bit(3);
  if (role_basic_ == NULL) role_basic_ = new ::PBPlayerBasicInfo;
  return role_basic_;
}

// optional .PBSkillList role_skill = 5;
inline bool CMessagePlayerProperty::has_role_skill() const {
  return _has_bit(4);
}
inline void CMessagePlayerProperty::clear_role_skill() {
  if (role_skill_ != NULL) role_skill_->::PBSkillList::Clear();
  _clear_bit(4);
}
inline const ::PBSkillList& CMessagePlayerProperty::role_skill() const {
  return role_skill_ != NULL ? *role_skill_ : *default_instance_->role_skill_;
}
inline ::PBSkillList* CMessagePlayerProperty::mutable_role_skill() {
  _set_bit(4);
  if (role_skill_ == NULL) role_skill_ = new ::PBSkillList;
  return role_skill_;
}

// optional .PBBuffList role_buff = 6;
inline bool CMessagePlayerProperty::has_role_buff() const {
  return _has_bit(5);
}
inline void CMessagePlayerProperty::clear_role_buff() {
  if (role_buff_ != NULL) role_buff_->::PBBuffList::Clear();
  _clear_bit(5);
}
inline const ::PBBuffList& CMessagePlayerProperty::role_buff() const {
  return role_buff_ != NULL ? *role_buff_ : *default_instance_->role_buff_;
}
inline ::PBBuffList* CMessagePlayerProperty::mutable_role_buff() {
  _set_bit(5);
  if (role_buff_ == NULL) role_buff_ = new ::PBBuffList;
  return role_buff_;
}

// optional .PBPlayerCDGroupInfo role_cdgroup = 7;
inline bool CMessagePlayerProperty::has_role_cdgroup() const {
  return _has_bit(6);
}
inline void CMessagePlayerProperty::clear_role_cdgroup() {
  if (role_cdgroup_ != NULL) role_cdgroup_->::PBPlayerCDGroupInfo::Clear();
  _clear_bit(6);
}
inline const ::PBPlayerCDGroupInfo& CMessagePlayerProperty::role_cdgroup() const {
  return role_cdgroup_ != NULL ? *role_cdgroup_ : *default_instance_->role_cdgroup_;
}
inline ::PBPlayerCDGroupInfo* CMessagePlayerProperty::mutable_role_cdgroup() {
  _set_bit(6);
  if (role_cdgroup_ == NULL) role_cdgroup_ = new ::PBPlayerCDGroupInfo;
  return role_cdgroup_;
}

// optional .PBPlayerPVPInfo role_pvp = 8;
inline bool CMessagePlayerProperty::has_role_pvp() const {
  return _has_bit(7);
}
inline void CMessagePlayerProperty::clear_role_pvp() {
  if (role_pvp_ != NULL) role_pvp_->::PBPlayerPVPInfo::Clear();
  _clear_bit(7);
}
inline const ::PBPlayerPVPInfo& CMessagePlayerProperty::role_pvp() const {
  return role_pvp_ != NULL ? *role_pvp_ : *default_instance_->role_pvp_;
}
inline ::PBPlayerPVPInfo* CMessagePlayerProperty::mutable_role_pvp() {
  _set_bit(7);
  if (role_pvp_ == NULL) role_pvp_ = new ::PBPlayerPVPInfo;
  return role_pvp_;
}

// optional .PBPlayerTitleInfo role_title = 9;
inline bool CMessagePlayerProperty::has_role_title() const {
  return _has_bit(8);
}
inline void CMessagePlayerProperty::clear_role_title() {
  if (role_title_ != NULL) role_title_->::PBPlayerTitleInfo::Clear();
  _clear_bit(8);
}
inline const ::PBPlayerTitleInfo& CMessagePlayerProperty::role_title() const {
  return role_title_ != NULL ? *role_title_ : *default_instance_->role_title_;
}
inline ::PBPlayerTitleInfo* CMessagePlayerProperty::mutable_role_title() {
  _set_bit(8);
  if (role_title_ == NULL) role_title_ = new ::PBPlayerTitleInfo;
  return role_title_;
}

// optional .PBPlayerActivityInfo role_activity = 10;
inline bool CMessagePlayerProperty::has_role_activity() const {
  return _has_bit(9);
}
inline void CMessagePlayerProperty::clear_role_activity() {
  if (role_activity_ != NULL) role_activity_->::PBPlayerActivityInfo::Clear();
  _clear_bit(9);
}
inline const ::PBPlayerActivityInfo& CMessagePlayerProperty::role_activity() const {
  return role_activity_ != NULL ? *role_activity_ : *default_instance_->role_activity_;
}
inline ::PBPlayerActivityInfo* CMessagePlayerProperty::mutable_role_activity() {
  _set_bit(9);
  if (role_activity_ == NULL) role_activity_ = new ::PBPlayerActivityInfo;
  return role_activity_;
}

// optional .PBPlayerTalentInfo role_talent = 11;
inline bool CMessagePlayerProperty::has_role_talent() const {
  return _has_bit(10);
}
inline void CMessagePlayerProperty::clear_role_talent() {
  if (role_talent_ != NULL) role_talent_->::PBPlayerTalentInfo::Clear();
  _clear_bit(10);
}
inline const ::PBPlayerTalentInfo& CMessagePlayerProperty::role_talent() const {
  return role_talent_ != NULL ? *role_talent_ : *default_instance_->role_talent_;
}
inline ::PBPlayerTalentInfo* CMessagePlayerProperty::mutable_role_talent() {
  _set_bit(10);
  if (role_talent_ == NULL) role_talent_ = new ::PBPlayerTalentInfo;
  return role_talent_;
}

// optional .PBPlayerMWInfo role_mw = 12;
inline bool CMessagePlayerProperty::has_role_mw() const {
  return _has_bit(11);
}
inline void CMessagePlayerProperty::clear_role_mw() {
  if (role_mw_ != NULL) role_mw_->::PBPlayerMWInfo::Clear();
  _clear_bit(11);
}
inline const ::PBPlayerMWInfo& CMessagePlayerProperty::role_mw() const {
  return role_mw_ != NULL ? *role_mw_ : *default_instance_->role_mw_;
}
inline ::PBPlayerMWInfo* CMessagePlayerProperty::mutable_role_mw() {
  _set_bit(11);
  if (role_mw_ == NULL) role_mw_ = new ::PBPlayerMWInfo;
  return role_mw_;
}

// optional .PBLifeSkillBox role_lifeskill = 13;
inline bool CMessagePlayerProperty::has_role_lifeskill() const {
  return _has_bit(12);
}
inline void CMessagePlayerProperty::clear_role_lifeskill() {
  if (role_lifeskill_ != NULL) role_lifeskill_->::PBLifeSkillBox::Clear();
  _clear_bit(12);
}
inline const ::PBLifeSkillBox& CMessagePlayerProperty::role_lifeskill() const {
  return role_lifeskill_ != NULL ? *role_lifeskill_ : *default_instance_->role_lifeskill_;
}
inline ::PBLifeSkillBox* CMessagePlayerProperty::mutable_role_lifeskill() {
  _set_bit(12);
  if (role_lifeskill_ == NULL) role_lifeskill_ = new ::PBLifeSkillBox;
  return role_lifeskill_;
}

// optional .PBPlayerStatisticInfo role_statistic = 14;
inline bool CMessagePlayerProperty::has_role_statistic() const {
  return _has_bit(13);
}
inline void CMessagePlayerProperty::clear_role_statistic() {
  if (role_statistic_ != NULL) role_statistic_->::PBPlayerStatisticInfo::Clear();
  _clear_bit(13);
}
inline const ::PBPlayerStatisticInfo& CMessagePlayerProperty::role_statistic() const {
  return role_statistic_ != NULL ? *role_statistic_ : *default_instance_->role_statistic_;
}
inline ::PBPlayerStatisticInfo* CMessagePlayerProperty::mutable_role_statistic() {
  _set_bit(13);
  if (role_statistic_ == NULL) role_statistic_ = new ::PBPlayerStatisticInfo;
  return role_statistic_;
}

// optional .PBMonsterRecordInfo role_monster_record = 15;
inline bool CMessagePlayerProperty::has_role_monster_record() const {
  return _has_bit(14);
}
inline void CMessagePlayerProperty::clear_role_monster_record() {
  if (role_monster_record_ != NULL) role_monster_record_->::PBMonsterRecordInfo::Clear();
  _clear_bit(14);
}
inline const ::PBMonsterRecordInfo& CMessagePlayerProperty::role_monster_record() const {
  return role_monster_record_ != NULL ? *role_monster_record_ : *default_instance_->role_monster_record_;
}
inline ::PBMonsterRecordInfo* CMessagePlayerProperty::mutable_role_monster_record() {
  _set_bit(14);
  if (role_monster_record_ == NULL) role_monster_record_ = new ::PBMonsterRecordInfo;
  return role_monster_record_;
}

// optional .PBTelePosInfo role_tele_pos = 16;
inline bool CMessagePlayerProperty::has_role_tele_pos() const {
  return _has_bit(15);
}
inline void CMessagePlayerProperty::clear_role_tele_pos() {
  if (role_tele_pos_ != NULL) role_tele_pos_->::PBTelePosInfo::Clear();
  _clear_bit(15);
}
inline const ::PBTelePosInfo& CMessagePlayerProperty::role_tele_pos() const {
  return role_tele_pos_ != NULL ? *role_tele_pos_ : *default_instance_->role_tele_pos_;
}
inline ::PBTelePosInfo* CMessagePlayerProperty::mutable_role_tele_pos() {
  _set_bit(15);
  if (role_tele_pos_ == NULL) role_tele_pos_ = new ::PBTelePosInfo;
  return role_tele_pos_;
}

// optional .PBWizard role_wizard = 17;
inline bool CMessagePlayerProperty::has_role_wizard() const {
  return _has_bit(16);
}
inline void CMessagePlayerProperty::clear_role_wizard() {
  if (role_wizard_ != NULL) role_wizard_->::PBWizard::Clear();
  _clear_bit(16);
}
inline const ::PBWizard& CMessagePlayerProperty::role_wizard() const {
  return role_wizard_ != NULL ? *role_wizard_ : *default_instance_->role_wizard_;
}
inline ::PBWizard* CMessagePlayerProperty::mutable_role_wizard() {
  _set_bit(16);
  if (role_wizard_ == NULL) role_wizard_ = new ::PBWizard;
  return role_wizard_;
}

// optional .PBPlayerClientInfo role_client = 18;
inline bool CMessagePlayerProperty::has_role_client() const {
  return _has_bit(17);
}
inline void CMessagePlayerProperty::clear_role_client() {
  if (role_client_ != NULL) role_client_->::PBPlayerClientInfo::Clear();
  _clear_bit(17);
}
inline const ::PBPlayerClientInfo& CMessagePlayerProperty::role_client() const {
  return role_client_ != NULL ? *role_client_ : *default_instance_->role_client_;
}
inline ::PBPlayerClientInfo* CMessagePlayerProperty::mutable_role_client() {
  _set_bit(17);
  if (role_client_ == NULL) role_client_ = new ::PBPlayerClientInfo;
  return role_client_;
}

// optional uint32 save_bitflag = 19;
inline bool CMessagePlayerProperty::has_save_bitflag() const {
  return _has_bit(18);
}
inline void CMessagePlayerProperty::clear_save_bitflag() {
  save_bitflag_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CMessagePlayerProperty::save_bitflag() const {
  return save_bitflag_;
}
inline void CMessagePlayerProperty::set_save_bitflag(::google::protobuf::uint32 value) {
  _set_bit(18);
  save_bitflag_ = value;
}

// optional .PBFriend role_friend = 20;
inline bool CMessagePlayerProperty::has_role_friend() const {
  return _has_bit(19);
}
inline void CMessagePlayerProperty::clear_role_friend() {
  if (role_friend_ != NULL) role_friend_->::PBFriend::Clear();
  _clear_bit(19);
}
inline const ::PBFriend& CMessagePlayerProperty::role_friend() const {
  return role_friend_ != NULL ? *role_friend_ : *default_instance_->role_friend_;
}
inline ::PBFriend* CMessagePlayerProperty::mutable_role_friend() {
  _set_bit(19);
  if (role_friend_ == NULL) role_friend_ = new ::PBFriend;
  return role_friend_;
}

// optional .PBRepetion role_repetion = 21;
inline bool CMessagePlayerProperty::has_role_repetion() const {
  return _has_bit(20);
}
inline void CMessagePlayerProperty::clear_role_repetion() {
  if (role_repetion_ != NULL) role_repetion_->::PBRepetion::Clear();
  _clear_bit(20);
}
inline const ::PBRepetion& CMessagePlayerProperty::role_repetion() const {
  return role_repetion_ != NULL ? *role_repetion_ : *default_instance_->role_repetion_;
}
inline ::PBRepetion* CMessagePlayerProperty::mutable_role_repetion() {
  _set_bit(20);
  if (role_repetion_ == NULL) role_repetion_ = new ::PBRepetion;
  return role_repetion_;
}

// optional .PBTaskList role_task = 22;
inline bool CMessagePlayerProperty::has_role_task() const {
  return _has_bit(21);
}
inline void CMessagePlayerProperty::clear_role_task() {
  if (role_task_ != NULL) role_task_->::PBTaskList::Clear();
  _clear_bit(21);
}
inline const ::PBTaskList& CMessagePlayerProperty::role_task() const {
  return role_task_ != NULL ? *role_task_ : *default_instance_->role_task_;
}
inline ::PBTaskList* CMessagePlayerProperty::mutable_role_task() {
  _set_bit(21);
  if (role_task_ == NULL) role_task_ = new ::PBTaskList;
  return role_task_;
}

// optional .PBMatrixInfo role_matrix = 23;
inline bool CMessagePlayerProperty::has_role_matrix() const {
  return _has_bit(22);
}
inline void CMessagePlayerProperty::clear_role_matrix() {
  if (role_matrix_ != NULL) role_matrix_->::PBMatrixInfo::Clear();
  _clear_bit(22);
}
inline const ::PBMatrixInfo& CMessagePlayerProperty::role_matrix() const {
  return role_matrix_ != NULL ? *role_matrix_ : *default_instance_->role_matrix_;
}
inline ::PBMatrixInfo* CMessagePlayerProperty::mutable_role_matrix() {
  _set_bit(22);
  if (role_matrix_ == NULL) role_matrix_ = new ::PBMatrixInfo;
  return role_matrix_;
}

// optional .PBCharm role_charm = 24;
inline bool CMessagePlayerProperty::has_role_charm() const {
  return _has_bit(23);
}
inline void CMessagePlayerProperty::clear_role_charm() {
  if (role_charm_ != NULL) role_charm_->::PBCharm::Clear();
  _clear_bit(23);
}
inline const ::PBCharm& CMessagePlayerProperty::role_charm() const {
  return role_charm_ != NULL ? *role_charm_ : *default_instance_->role_charm_;
}
inline ::PBCharm* CMessagePlayerProperty::mutable_role_charm() {
  _set_bit(23);
  if (role_charm_ == NULL) role_charm_ = new ::PBCharm;
  return role_charm_;
}

// optional .PBGuideData role_guide = 25;
inline bool CMessagePlayerProperty::has_role_guide() const {
  return _has_bit(24);
}
inline void CMessagePlayerProperty::clear_role_guide() {
  if (role_guide_ != NULL) role_guide_->::PBGuideData::Clear();
  _clear_bit(24);
}
inline const ::PBGuideData& CMessagePlayerProperty::role_guide() const {
  return role_guide_ != NULL ? *role_guide_ : *default_instance_->role_guide_;
}
inline ::PBGuideData* CMessagePlayerProperty::mutable_role_guide() {
  _set_bit(24);
  if (role_guide_ == NULL) role_guide_ = new ::PBGuideData;
  return role_guide_;
}

// optional .PBTimes role_times = 26;
inline bool CMessagePlayerProperty::has_role_times() const {
  return _has_bit(25);
}
inline void CMessagePlayerProperty::clear_role_times() {
  if (role_times_ != NULL) role_times_->::PBTimes::Clear();
  _clear_bit(25);
}
inline const ::PBTimes& CMessagePlayerProperty::role_times() const {
  return role_times_ != NULL ? *role_times_ : *default_instance_->role_times_;
}
inline ::PBTimes* CMessagePlayerProperty::mutable_role_times() {
  _set_bit(25);
  if (role_times_ == NULL) role_times_ = new ::PBTimes;
  return role_times_;
}

// optional .PBExpTimeInfo role_exptimeinfo = 27;
inline bool CMessagePlayerProperty::has_role_exptimeinfo() const {
  return _has_bit(26);
}
inline void CMessagePlayerProperty::clear_role_exptimeinfo() {
  if (role_exptimeinfo_ != NULL) role_exptimeinfo_->::PBExpTimeInfo::Clear();
  _clear_bit(26);
}
inline const ::PBExpTimeInfo& CMessagePlayerProperty::role_exptimeinfo() const {
  return role_exptimeinfo_ != NULL ? *role_exptimeinfo_ : *default_instance_->role_exptimeinfo_;
}
inline ::PBExpTimeInfo* CMessagePlayerProperty::mutable_role_exptimeinfo() {
  _set_bit(26);
  if (role_exptimeinfo_ == NULL) role_exptimeinfo_ = new ::PBExpTimeInfo;
  return role_exptimeinfo_;
}

// optional .PBTreasureBowl role_treasurebowl = 28;
inline bool CMessagePlayerProperty::has_role_treasurebowl() const {
  return _has_bit(27);
}
inline void CMessagePlayerProperty::clear_role_treasurebowl() {
  if (role_treasurebowl_ != NULL) role_treasurebowl_->::PBTreasureBowl::Clear();
  _clear_bit(27);
}
inline const ::PBTreasureBowl& CMessagePlayerProperty::role_treasurebowl() const {
  return role_treasurebowl_ != NULL ? *role_treasurebowl_ : *default_instance_->role_treasurebowl_;
}
inline ::PBTreasureBowl* CMessagePlayerProperty::mutable_role_treasurebowl() {
  _set_bit(27);
  if (role_treasurebowl_ == NULL) role_treasurebowl_ = new ::PBTreasureBowl;
  return role_treasurebowl_;
}

// optional .PBSpiritInfo role_spiritinfo = 29;
inline bool CMessagePlayerProperty::has_role_spiritinfo() const {
  return _has_bit(28);
}
inline void CMessagePlayerProperty::clear_role_spiritinfo() {
  if (role_spiritinfo_ != NULL) role_spiritinfo_->::PBSpiritInfo::Clear();
  _clear_bit(28);
}
inline const ::PBSpiritInfo& CMessagePlayerProperty::role_spiritinfo() const {
  return role_spiritinfo_ != NULL ? *role_spiritinfo_ : *default_instance_->role_spiritinfo_;
}
inline ::PBSpiritInfo* CMessagePlayerProperty::mutable_role_spiritinfo() {
  _set_bit(28);
  if (role_spiritinfo_ == NULL) role_spiritinfo_ = new ::PBSpiritInfo;
  return role_spiritinfo_;
}

// -------------------------------------------------------------------

// CMessageSavePlayerRequest

// optional uint32 RoleID = 1;
inline bool CMessageSavePlayerRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageSavePlayerRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSavePlayerRequest::roleid() const {
  return roleid_;
}
inline void CMessageSavePlayerRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional .CMessagePlayerInfo Info = 2;
inline bool CMessageSavePlayerRequest::has_info() const {
  return _has_bit(1);
}
inline void CMessageSavePlayerRequest::clear_info() {
  if (info_ != NULL) info_->::CMessagePlayerInfo::Clear();
  _clear_bit(1);
}
inline const ::CMessagePlayerInfo& CMessageSavePlayerRequest::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::CMessagePlayerInfo* CMessageSavePlayerRequest::mutable_info() {
  _set_bit(1);
  if (info_ == NULL) info_ = new ::CMessagePlayerInfo;
  return info_;
}

// optional .CMessagePlayerProperty Property = 3;
inline bool CMessageSavePlayerRequest::has_property() const {
  return _has_bit(2);
}
inline void CMessageSavePlayerRequest::clear_property() {
  if (property_ != NULL) property_->::CMessagePlayerProperty::Clear();
  _clear_bit(2);
}
inline const ::CMessagePlayerProperty& CMessageSavePlayerRequest::property() const {
  return property_ != NULL ? *property_ : *default_instance_->property_;
}
inline ::CMessagePlayerProperty* CMessageSavePlayerRequest::mutable_property() {
  _set_bit(2);
  if (property_ == NULL) property_ = new ::CMessagePlayerProperty;
  return property_;
}

// optional uint32 SessionID = 4;
inline bool CMessageSavePlayerRequest::has_sessionid() const {
  return _has_bit(3);
}
inline void CMessageSavePlayerRequest::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSavePlayerRequest::sessionid() const {
  return sessionid_;
}
inline void CMessageSavePlayerRequest::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(3);
  sessionid_ = value;
}

// optional uint32 DetailID = 5;
inline bool CMessageSavePlayerRequest::has_detailid() const {
  return _has_bit(4);
}
inline void CMessageSavePlayerRequest::clear_detailid() {
  detailid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageSavePlayerRequest::detailid() const {
  return detailid_;
}
inline void CMessageSavePlayerRequest::set_detailid(::google::protobuf::uint32 value) {
  _set_bit(4);
  detailid_ = value;
}

// optional uint32 CallBack = 6;
inline bool CMessageSavePlayerRequest::has_callback() const {
  return _has_bit(5);
}
inline void CMessageSavePlayerRequest::clear_callback() {
  callback_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageSavePlayerRequest::callback() const {
  return callback_;
}
inline void CMessageSavePlayerRequest::set_callback(::google::protobuf::uint32 value) {
  _set_bit(5);
  callback_ = value;
}

// -------------------------------------------------------------------

// CMessageLoadPlayerInfoRequest

// optional uint32 RoleID = 1;
inline bool CMessageLoadPlayerInfoRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageLoadPlayerInfoRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerInfoRequest::roleid() const {
  return roleid_;
}
inline void CMessageLoadPlayerInfoRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 SessionID = 2;
inline bool CMessageLoadPlayerInfoRequest::has_sessionid() const {
  return _has_bit(1);
}
inline void CMessageLoadPlayerInfoRequest::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerInfoRequest::sessionid() const {
  return sessionid_;
}
inline void CMessageLoadPlayerInfoRequest::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  sessionid_ = value;
}

// -------------------------------------------------------------------

// CMessageLoadPlayerInfoResponse

// optional uint32 RoleID = 1;
inline bool CMessageLoadPlayerInfoResponse::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageLoadPlayerInfoResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerInfoResponse::roleid() const {
  return roleid_;
}
inline void CMessageLoadPlayerInfoResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 SessionID = 2;
inline bool CMessageLoadPlayerInfoResponse::has_sessionid() const {
  return _has_bit(1);
}
inline void CMessageLoadPlayerInfoResponse::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerInfoResponse::sessionid() const {
  return sessionid_;
}
inline void CMessageLoadPlayerInfoResponse::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  sessionid_ = value;
}

// optional .CMessagePlayerInfo Info = 3;
inline bool CMessageLoadPlayerInfoResponse::has_info() const {
  return _has_bit(2);
}
inline void CMessageLoadPlayerInfoResponse::clear_info() {
  if (info_ != NULL) info_->::CMessagePlayerInfo::Clear();
  _clear_bit(2);
}
inline const ::CMessagePlayerInfo& CMessageLoadPlayerInfoResponse::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::CMessagePlayerInfo* CMessageLoadPlayerInfoResponse::mutable_info() {
  _set_bit(2);
  if (info_ == NULL) info_ = new ::CMessagePlayerInfo;
  return info_;
}

// optional uint32 ResultCode = 4;
inline bool CMessageLoadPlayerInfoResponse::has_resultcode() const {
  return _has_bit(3);
}
inline void CMessageLoadPlayerInfoResponse::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerInfoResponse::resultcode() const {
  return resultcode_;
}
inline void CMessageLoadPlayerInfoResponse::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(3);
  resultcode_ = value;
}

// -------------------------------------------------------------------

// CMessageSavePlayerResponse

// optional uint32 RoleID = 1;
inline bool CMessageSavePlayerResponse::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageSavePlayerResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSavePlayerResponse::roleid() const {
  return roleid_;
}
inline void CMessageSavePlayerResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 SessionID = 2;
inline bool CMessageSavePlayerResponse::has_sessionid() const {
  return _has_bit(1);
}
inline void CMessageSavePlayerResponse::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSavePlayerResponse::sessionid() const {
  return sessionid_;
}
inline void CMessageSavePlayerResponse::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  sessionid_ = value;
}

// optional uint32 ResultCode = 3;
inline bool CMessageSavePlayerResponse::has_resultcode() const {
  return _has_bit(2);
}
inline void CMessageSavePlayerResponse::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSavePlayerResponse::resultcode() const {
  return resultcode_;
}
inline void CMessageSavePlayerResponse::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(2);
  resultcode_ = value;
}

// -------------------------------------------------------------------

// CMessageLoadPlayerPropertyRequest

// optional uint32 RoleID = 1;
inline bool CMessageLoadPlayerPropertyRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageLoadPlayerPropertyRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerPropertyRequest::roleid() const {
  return roleid_;
}
inline void CMessageLoadPlayerPropertyRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 SessionID = 2;
inline bool CMessageLoadPlayerPropertyRequest::has_sessionid() const {
  return _has_bit(1);
}
inline void CMessageLoadPlayerPropertyRequest::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerPropertyRequest::sessionid() const {
  return sessionid_;
}
inline void CMessageLoadPlayerPropertyRequest::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  sessionid_ = value;
}

// optional uint32 DetailID = 4;
inline bool CMessageLoadPlayerPropertyRequest::has_detailid() const {
  return _has_bit(2);
}
inline void CMessageLoadPlayerPropertyRequest::clear_detailid() {
  detailid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerPropertyRequest::detailid() const {
  return detailid_;
}
inline void CMessageLoadPlayerPropertyRequest::set_detailid(::google::protobuf::uint32 value) {
  _set_bit(2);
  detailid_ = value;
}

// -------------------------------------------------------------------

// CMessageLoadPlayerPropertyResponse

// optional uint32 RoleID = 1;
inline bool CMessageLoadPlayerPropertyResponse::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageLoadPlayerPropertyResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerPropertyResponse::roleid() const {
  return roleid_;
}
inline void CMessageLoadPlayerPropertyResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 SessionID = 2;
inline bool CMessageLoadPlayerPropertyResponse::has_sessionid() const {
  return _has_bit(1);
}
inline void CMessageLoadPlayerPropertyResponse::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerPropertyResponse::sessionid() const {
  return sessionid_;
}
inline void CMessageLoadPlayerPropertyResponse::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  sessionid_ = value;
}

// optional .CMessagePlayerProperty Property = 3;
inline bool CMessageLoadPlayerPropertyResponse::has_property() const {
  return _has_bit(2);
}
inline void CMessageLoadPlayerPropertyResponse::clear_property() {
  if (property_ != NULL) property_->::CMessagePlayerProperty::Clear();
  _clear_bit(2);
}
inline const ::CMessagePlayerProperty& CMessageLoadPlayerPropertyResponse::property() const {
  return property_ != NULL ? *property_ : *default_instance_->property_;
}
inline ::CMessagePlayerProperty* CMessageLoadPlayerPropertyResponse::mutable_property() {
  _set_bit(2);
  if (property_ == NULL) property_ = new ::CMessagePlayerProperty;
  return property_;
}

// optional uint32 ResultCode = 4;
inline bool CMessageLoadPlayerPropertyResponse::has_resultcode() const {
  return _has_bit(3);
}
inline void CMessageLoadPlayerPropertyResponse::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageLoadPlayerPropertyResponse::resultcode() const {
  return resultcode_;
}
inline void CMessageLoadPlayerPropertyResponse::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(3);
  resultcode_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdatePlayerInfoRequest

// optional uint32 RoleID = 1;
inline bool CMessageUpdatePlayerInfoRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageUpdatePlayerInfoRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoRequest::roleid() const {
  return roleid_;
}
inline void CMessageUpdatePlayerInfoRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 SessionID = 2;
inline bool CMessageUpdatePlayerInfoRequest::has_sessionid() const {
  return _has_bit(1);
}
inline void CMessageUpdatePlayerInfoRequest::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoRequest::sessionid() const {
  return sessionid_;
}
inline void CMessageUpdatePlayerInfoRequest::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  sessionid_ = value;
}

// optional uint32 UpdateType = 3;
inline bool CMessageUpdatePlayerInfoRequest::has_updatetype() const {
  return _has_bit(2);
}
inline void CMessageUpdatePlayerInfoRequest::clear_updatetype() {
  updatetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoRequest::updatetype() const {
  return updatetype_;
}
inline void CMessageUpdatePlayerInfoRequest::set_updatetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  updatetype_ = value;
}

// optional uint32 Param1 = 4;
inline bool CMessageUpdatePlayerInfoRequest::has_param1() const {
  return _has_bit(3);
}
inline void CMessageUpdatePlayerInfoRequest::clear_param1() {
  param1_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoRequest::param1() const {
  return param1_;
}
inline void CMessageUpdatePlayerInfoRequest::set_param1(::google::protobuf::uint32 value) {
  _set_bit(3);
  param1_ = value;
}

// optional uint32 Param2 = 5;
inline bool CMessageUpdatePlayerInfoRequest::has_param2() const {
  return _has_bit(4);
}
inline void CMessageUpdatePlayerInfoRequest::clear_param2() {
  param2_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoRequest::param2() const {
  return param2_;
}
inline void CMessageUpdatePlayerInfoRequest::set_param2(::google::protobuf::uint32 value) {
  _set_bit(4);
  param2_ = value;
}

// optional uint32 Value = 6;
inline bool CMessageUpdatePlayerInfoRequest::has_value() const {
  return _has_bit(5);
}
inline void CMessageUpdatePlayerInfoRequest::clear_value() {
  value_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoRequest::value() const {
  return value_;
}
inline void CMessageUpdatePlayerInfoRequest::set_value(::google::protobuf::uint32 value) {
  _set_bit(5);
  value_ = value;
}

// optional uint32 DetailID = 7;
inline bool CMessageUpdatePlayerInfoRequest::has_detailid() const {
  return _has_bit(6);
}
inline void CMessageUpdatePlayerInfoRequest::clear_detailid() {
  detailid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoRequest::detailid() const {
  return detailid_;
}
inline void CMessageUpdatePlayerInfoRequest::set_detailid(::google::protobuf::uint32 value) {
  _set_bit(6);
  detailid_ = value;
}

// optional uint32 SubType = 8;
inline bool CMessageUpdatePlayerInfoRequest::has_subtype() const {
  return _has_bit(7);
}
inline void CMessageUpdatePlayerInfoRequest::clear_subtype() {
  subtype_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoRequest::subtype() const {
  return subtype_;
}
inline void CMessageUpdatePlayerInfoRequest::set_subtype(::google::protobuf::uint32 value) {
  _set_bit(7);
  subtype_ = value;
}

// -------------------------------------------------------------------

// CMessageGetBourseInfo

// optional uint32 SessionID = 1;
inline bool CMessageGetBourseInfo::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageGetBourseInfo::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetBourseInfo::sessionid() const {
  return sessionid_;
}
inline void CMessageGetBourseInfo::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageGetBourseInfo::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageGetBourseInfo::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetBourseInfo::accountid() const {
  return accountid_;
}
inline void CMessageGetBourseInfo::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseInfoNotice

// optional uint32 SessionID = 1;
inline bool CMessageBourseInfoNotice::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageBourseInfoNotice::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseInfoNotice::sessionid() const {
  return sessionid_;
}
inline void CMessageBourseInfoNotice::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional .PBBourseDetailList BuyList = 2;
inline bool CMessageBourseInfoNotice::has_buylist() const {
  return _has_bit(1);
}
inline void CMessageBourseInfoNotice::clear_buylist() {
  if (buylist_ != NULL) buylist_->::PBBourseDetailList::Clear();
  _clear_bit(1);
}
inline const ::PBBourseDetailList& CMessageBourseInfoNotice::buylist() const {
  return buylist_ != NULL ? *buylist_ : *default_instance_->buylist_;
}
inline ::PBBourseDetailList* CMessageBourseInfoNotice::mutable_buylist() {
  _set_bit(1);
  if (buylist_ == NULL) buylist_ = new ::PBBourseDetailList;
  return buylist_;
}

// optional .PBBourseDetailList SellList = 3;
inline bool CMessageBourseInfoNotice::has_selllist() const {
  return _has_bit(2);
}
inline void CMessageBourseInfoNotice::clear_selllist() {
  if (selllist_ != NULL) selllist_->::PBBourseDetailList::Clear();
  _clear_bit(2);
}
inline const ::PBBourseDetailList& CMessageBourseInfoNotice::selllist() const {
  return selllist_ != NULL ? *selllist_ : *default_instance_->selllist_;
}
inline ::PBBourseDetailList* CMessageBourseInfoNotice::mutable_selllist() {
  _set_bit(2);
  if (selllist_ == NULL) selllist_ = new ::PBBourseDetailList;
  return selllist_;
}

// -------------------------------------------------------------------

// CMessageBourseAddDoc

// optional uint32 SessionID = 1;
inline bool CMessageBourseAddDoc::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageBourseAddDoc::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::sessionid() const {
  return sessionid_;
}
inline void CMessageBourseAddDoc::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageBourseAddDoc::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageBourseAddDoc::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::accountid() const {
  return accountid_;
}
inline void CMessageBourseAddDoc::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional .PBBourseDetail Detail = 3;
inline bool CMessageBourseAddDoc::has_detail() const {
  return _has_bit(2);
}
inline void CMessageBourseAddDoc::clear_detail() {
  if (detail_ != NULL) detail_->::PBBourseDetail::Clear();
  _clear_bit(2);
}
inline const ::PBBourseDetail& CMessageBourseAddDoc::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::PBBourseDetail* CMessageBourseAddDoc::mutable_detail() {
  _set_bit(2);
  if (detail_ == NULL) detail_ = new ::PBBourseDetail;
  return detail_;
}

// optional uint32 Type = 4;
inline bool CMessageBourseAddDoc::has_type() const {
  return _has_bit(3);
}
inline void CMessageBourseAddDoc::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::type() const {
  return type_;
}
inline void CMessageBourseAddDoc::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// optional uint32 Tax = 5;
inline bool CMessageBourseAddDoc::has_tax() const {
  return _has_bit(4);
}
inline void CMessageBourseAddDoc::clear_tax() {
  tax_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::tax() const {
  return tax_;
}
inline void CMessageBourseAddDoc::set_tax(::google::protobuf::uint32 value) {
  _set_bit(4);
  tax_ = value;
}

// optional uint32 RoleID = 6;
inline bool CMessageBourseAddDoc::has_roleid() const {
  return _has_bit(5);
}
inline void CMessageBourseAddDoc::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::roleid() const {
  return roleid_;
}
inline void CMessageBourseAddDoc::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(5);
  roleid_ = value;
}

// optional uint32 Level = 7;
inline bool CMessageBourseAddDoc::has_level() const {
  return _has_bit(6);
}
inline void CMessageBourseAddDoc::clear_level() {
  level_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::level() const {
  return level_;
}
inline void CMessageBourseAddDoc::set_level(::google::protobuf::uint32 value) {
  _set_bit(6);
  level_ = value;
}

// optional uint32 WorldID = 8;
inline bool CMessageBourseAddDoc::has_worldid() const {
  return _has_bit(7);
}
inline void CMessageBourseAddDoc::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::worldid() const {
  return worldid_;
}
inline void CMessageBourseAddDoc::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(7);
  worldid_ = value;
}

// optional uint32 ServerID = 9;
inline bool CMessageBourseAddDoc::has_serverid() const {
  return _has_bit(8);
}
inline void CMessageBourseAddDoc::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::serverid() const {
  return serverid_;
}
inline void CMessageBourseAddDoc::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(8);
  serverid_ = value;
}

// optional uint32 TaxID = 10;
inline bool CMessageBourseAddDoc::has_taxid() const {
  return _has_bit(9);
}
inline void CMessageBourseAddDoc::clear_taxid() {
  taxid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::taxid() const {
  return taxid_;
}
inline void CMessageBourseAddDoc::set_taxid(::google::protobuf::uint32 value) {
  _set_bit(9);
  taxid_ = value;
}

// optional uint32 GameID = 11;
inline bool CMessageBourseAddDoc::has_gameid() const {
  return _has_bit(10);
}
inline void CMessageBourseAddDoc::clear_gameid() {
  gameid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageBourseAddDoc::gameid() const {
  return gameid_;
}
inline void CMessageBourseAddDoc::set_gameid(::google::protobuf::uint32 value) {
  _set_bit(10);
  gameid_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseS2DIncAccount

// optional uint32 SessionID = 1;
inline bool CMessageBourseS2DIncAccount::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageBourseS2DIncAccount::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseS2DIncAccount::sessionid() const {
  return sessionid_;
}
inline void CMessageBourseS2DIncAccount::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional uint32 Money = 2;
inline bool CMessageBourseS2DIncAccount::has_money() const {
  return _has_bit(1);
}
inline void CMessageBourseS2DIncAccount::clear_money() {
  money_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseS2DIncAccount::money() const {
  return money_;
}
inline void CMessageBourseS2DIncAccount::set_money(::google::protobuf::uint32 value) {
  _set_bit(1);
  money_ = value;
}

// optional uint32 Yb = 3;
inline bool CMessageBourseS2DIncAccount::has_yb() const {
  return _has_bit(2);
}
inline void CMessageBourseS2DIncAccount::clear_yb() {
  yb_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBourseS2DIncAccount::yb() const {
  return yb_;
}
inline void CMessageBourseS2DIncAccount::set_yb(::google::protobuf::uint32 value) {
  _set_bit(2);
  yb_ = value;
}

// optional uint32 AccountID = 4;
inline bool CMessageBourseS2DIncAccount::has_accountid() const {
  return _has_bit(3);
}
inline void CMessageBourseS2DIncAccount::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBourseS2DIncAccount::accountid() const {
  return accountid_;
}
inline void CMessageBourseS2DIncAccount::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(3);
  accountid_ = value;
}

// optional uint32 RoleID = 5;
inline bool CMessageBourseS2DIncAccount::has_roleid() const {
  return _has_bit(4);
}
inline void CMessageBourseS2DIncAccount::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBourseS2DIncAccount::roleid() const {
  return roleid_;
}
inline void CMessageBourseS2DIncAccount::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(4);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseS2DDecAccount

// optional uint32 SessionID = 1;
inline bool CMessageBourseS2DDecAccount::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageBourseS2DDecAccount::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseS2DDecAccount::sessionid() const {
  return sessionid_;
}
inline void CMessageBourseS2DDecAccount::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional uint32 Money = 2;
inline bool CMessageBourseS2DDecAccount::has_money() const {
  return _has_bit(1);
}
inline void CMessageBourseS2DDecAccount::clear_money() {
  money_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseS2DDecAccount::money() const {
  return money_;
}
inline void CMessageBourseS2DDecAccount::set_money(::google::protobuf::uint32 value) {
  _set_bit(1);
  money_ = value;
}

// optional uint32 Yb = 3;
inline bool CMessageBourseS2DDecAccount::has_yb() const {
  return _has_bit(2);
}
inline void CMessageBourseS2DDecAccount::clear_yb() {
  yb_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBourseS2DDecAccount::yb() const {
  return yb_;
}
inline void CMessageBourseS2DDecAccount::set_yb(::google::protobuf::uint32 value) {
  _set_bit(2);
  yb_ = value;
}

// optional uint32 AccountID = 4;
inline bool CMessageBourseS2DDecAccount::has_accountid() const {
  return _has_bit(3);
}
inline void CMessageBourseS2DDecAccount::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBourseS2DDecAccount::accountid() const {
  return accountid_;
}
inline void CMessageBourseS2DDecAccount::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(3);
  accountid_ = value;
}

// optional uint32 RoleID = 5;
inline bool CMessageBourseS2DDecAccount::has_roleid() const {
  return _has_bit(4);
}
inline void CMessageBourseS2DDecAccount::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBourseS2DDecAccount::roleid() const {
  return roleid_;
}
inline void CMessageBourseS2DDecAccount::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(4);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseS2DGetAccount

// optional uint32 SessionID = 1;
inline bool CMessageBourseS2DGetAccount::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageBourseS2DGetAccount::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseS2DGetAccount::sessionid() const {
  return sessionid_;
}
inline void CMessageBourseS2DGetAccount::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageBourseS2DGetAccount::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageBourseS2DGetAccount::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseS2DGetAccount::accountid() const {
  return accountid_;
}
inline void CMessageBourseS2DGetAccount::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 Code = 3;
inline bool CMessageBourseS2DGetAccount::has_code() const {
  return _has_bit(2);
}
inline void CMessageBourseS2DGetAccount::clear_code() {
  code_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBourseS2DGetAccount::code() const {
  return code_;
}
inline void CMessageBourseS2DGetAccount::set_code(::google::protobuf::uint32 value) {
  _set_bit(2);
  code_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseD2SAccountNotice

// optional uint32 SessionID = 1;
inline bool CMessageBourseD2SAccountNotice::has_sessionid() const {
  return _has_bit(0);
}
inline void CMessageBourseD2SAccountNotice::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseD2SAccountNotice::sessionid() const {
  return sessionid_;
}
inline void CMessageBourseD2SAccountNotice::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sessionid_ = value;
}

// optional uint32 Money = 2;
inline bool CMessageBourseD2SAccountNotice::has_money() const {
  return _has_bit(1);
}
inline void CMessageBourseD2SAccountNotice::clear_money() {
  money_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseD2SAccountNotice::money() const {
  return money_;
}
inline void CMessageBourseD2SAccountNotice::set_money(::google::protobuf::uint32 value) {
  _set_bit(1);
  money_ = value;
}

// optional uint32 Yb = 3;
inline bool CMessageBourseD2SAccountNotice::has_yb() const {
  return _has_bit(2);
}
inline void CMessageBourseD2SAccountNotice::clear_yb() {
  yb_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBourseD2SAccountNotice::yb() const {
  return yb_;
}
inline void CMessageBourseD2SAccountNotice::set_yb(::google::protobuf::uint32 value) {
  _set_bit(2);
  yb_ = value;
}

// optional uint32 AccountID = 4;
inline bool CMessageBourseD2SAccountNotice::has_accountid() const {
  return _has_bit(3);
}
inline void CMessageBourseD2SAccountNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBourseD2SAccountNotice::accountid() const {
  return accountid_;
}
inline void CMessageBourseD2SAccountNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(3);
  accountid_ = value;
}

// optional uint32 Code = 5;
inline bool CMessageBourseD2SAccountNotice::has_code() const {
  return _has_bit(4);
}
inline void CMessageBourseD2SAccountNotice::clear_code() {
  code_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBourseD2SAccountNotice::code() const {
  return code_;
}
inline void CMessageBourseD2SAccountNotice::set_code(::google::protobuf::uint32 value) {
  _set_bit(4);
  code_ = value;
}

// optional uint32 Result = 6;
inline bool CMessageBourseD2SAccountNotice::has_result() const {
  return _has_bit(5);
}
inline void CMessageBourseD2SAccountNotice::clear_result() {
  result_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageBourseD2SAccountNotice::result() const {
  return result_;
}
inline void CMessageBourseD2SAccountNotice::set_result(::google::protobuf::uint32 value) {
  _set_bit(5);
  result_ = value;
}

// optional uint32 Parame1 = 7;
inline bool CMessageBourseD2SAccountNotice::has_parame1() const {
  return _has_bit(6);
}
inline void CMessageBourseD2SAccountNotice::clear_parame1() {
  parame1_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageBourseD2SAccountNotice::parame1() const {
  return parame1_;
}
inline void CMessageBourseD2SAccountNotice::set_parame1(::google::protobuf::uint32 value) {
  _set_bit(6);
  parame1_ = value;
}

// optional uint32 Parame2 = 8;
inline bool CMessageBourseD2SAccountNotice::has_parame2() const {
  return _has_bit(7);
}
inline void CMessageBourseD2SAccountNotice::clear_parame2() {
  parame2_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageBourseD2SAccountNotice::parame2() const {
  return parame2_;
}
inline void CMessageBourseD2SAccountNotice::set_parame2(::google::protobuf::uint32 value) {
  _set_bit(7);
  parame2_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdatePlayerInfoResponse

// optional uint32 RoleID = 1;
inline bool CMessageUpdatePlayerInfoResponse::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageUpdatePlayerInfoResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoResponse::roleid() const {
  return roleid_;
}
inline void CMessageUpdatePlayerInfoResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 SessionID = 2;
inline bool CMessageUpdatePlayerInfoResponse::has_sessionid() const {
  return _has_bit(1);
}
inline void CMessageUpdatePlayerInfoResponse::clear_sessionid() {
  sessionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoResponse::sessionid() const {
  return sessionid_;
}
inline void CMessageUpdatePlayerInfoResponse::set_sessionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  sessionid_ = value;
}

// optional uint32 ResultCode = 3;
inline bool CMessageUpdatePlayerInfoResponse::has_resultcode() const {
  return _has_bit(2);
}
inline void CMessageUpdatePlayerInfoResponse::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUpdatePlayerInfoResponse::resultcode() const {
  return resultcode_;
}
inline void CMessageUpdatePlayerInfoResponse::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(2);
  resultcode_ = value;
}

// -------------------------------------------------------------------

// CMessageBoursePlayerListNotice

// optional uint32 AccountID = 1;
inline bool CMessageBoursePlayerListNotice::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageBoursePlayerListNotice::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBoursePlayerListNotice::accountid() const {
  return accountid_;
}
inline void CMessageBoursePlayerListNotice::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional .PBBourseDetailList BuyList = 2;
inline bool CMessageBoursePlayerListNotice::has_buylist() const {
  return _has_bit(1);
}
inline void CMessageBoursePlayerListNotice::clear_buylist() {
  if (buylist_ != NULL) buylist_->::PBBourseDetailList::Clear();
  _clear_bit(1);
}
inline const ::PBBourseDetailList& CMessageBoursePlayerListNotice::buylist() const {
  return buylist_ != NULL ? *buylist_ : *default_instance_->buylist_;
}
inline ::PBBourseDetailList* CMessageBoursePlayerListNotice::mutable_buylist() {
  _set_bit(1);
  if (buylist_ == NULL) buylist_ = new ::PBBourseDetailList;
  return buylist_;
}

// optional .PBBourseDetailList SellList = 3;
inline bool CMessageBoursePlayerListNotice::has_selllist() const {
  return _has_bit(2);
}
inline void CMessageBoursePlayerListNotice::clear_selllist() {
  if (selllist_ != NULL) selllist_->::PBBourseDetailList::Clear();
  _clear_bit(2);
}
inline const ::PBBourseDetailList& CMessageBoursePlayerListNotice::selllist() const {
  return selllist_ != NULL ? *selllist_ : *default_instance_->selllist_;
}
inline ::PBBourseDetailList* CMessageBoursePlayerListNotice::mutable_selllist() {
  _set_bit(2);
  if (selllist_ == NULL) selllist_ = new ::PBBourseDetailList;
  return selllist_;
}

// -------------------------------------------------------------------

// CMessageBoursePlayerListGet

// optional uint32 AccountID = 1;
inline bool CMessageBoursePlayerListGet::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageBoursePlayerListGet::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBoursePlayerListGet::accountid() const {
  return accountid_;
}
inline void CMessageBoursePlayerListGet::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseTrade

// optional uint32 BuyPrice = 1;
inline bool CMessageBourseTrade::has_buyprice() const {
  return _has_bit(0);
}
inline void CMessageBourseTrade::clear_buyprice() {
  buyprice_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseTrade::buyprice() const {
  return buyprice_;
}
inline void CMessageBourseTrade::set_buyprice(::google::protobuf::uint32 value) {
  _set_bit(0);
  buyprice_ = value;
}

// optional uint32 SellPrice = 2;
inline bool CMessageBourseTrade::has_sellprice() const {
  return _has_bit(1);
}
inline void CMessageBourseTrade::clear_sellprice() {
  sellprice_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseTrade::sellprice() const {
  return sellprice_;
}
inline void CMessageBourseTrade::set_sellprice(::google::protobuf::uint32 value) {
  _set_bit(1);
  sellprice_ = value;
}

// optional uint32 Rating_id = 3;
inline bool CMessageBourseTrade::has_rating_id() const {
  return _has_bit(2);
}
inline void CMessageBourseTrade::clear_rating_id() {
  rating_id_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBourseTrade::rating_id() const {
  return rating_id_;
}
inline void CMessageBourseTrade::set_rating_id(::google::protobuf::uint32 value) {
  _set_bit(2);
  rating_id_ = value;
}

// optional uint32 Worldid = 4;
inline bool CMessageBourseTrade::has_worldid() const {
  return _has_bit(3);
}
inline void CMessageBourseTrade::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBourseTrade::worldid() const {
  return worldid_;
}
inline void CMessageBourseTrade::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(3);
  worldid_ = value;
}

// -------------------------------------------------------------------

// CMessageS2DBourseDecBuyDoc

// optional uint32 Doc = 1;
inline bool CMessageS2DBourseDecBuyDoc::has_doc() const {
  return _has_bit(0);
}
inline void CMessageS2DBourseDecBuyDoc::clear_doc() {
  doc_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2DBourseDecBuyDoc::doc() const {
  return doc_;
}
inline void CMessageS2DBourseDecBuyDoc::set_doc(::google::protobuf::uint32 value) {
  _set_bit(0);
  doc_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageS2DBourseDecBuyDoc::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageS2DBourseDecBuyDoc::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2DBourseDecBuyDoc::accountid() const {
  return accountid_;
}
inline void CMessageS2DBourseDecBuyDoc::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageS2DBourseDecBuyDoc::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageS2DBourseDecBuyDoc::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageS2DBourseDecBuyDoc::roleid() const {
  return roleid_;
}
inline void CMessageS2DBourseDecBuyDoc::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageS2DBourseDecSellDoc

// optional uint32 Doc = 1;
inline bool CMessageS2DBourseDecSellDoc::has_doc() const {
  return _has_bit(0);
}
inline void CMessageS2DBourseDecSellDoc::clear_doc() {
  doc_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2DBourseDecSellDoc::doc() const {
  return doc_;
}
inline void CMessageS2DBourseDecSellDoc::set_doc(::google::protobuf::uint32 value) {
  _set_bit(0);
  doc_ = value;
}

// optional uint32 AccountID = 2;
inline bool CMessageS2DBourseDecSellDoc::has_accountid() const {
  return _has_bit(1);
}
inline void CMessageS2DBourseDecSellDoc::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2DBourseDecSellDoc::accountid() const {
  return accountid_;
}
inline void CMessageS2DBourseDecSellDoc::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(1);
  accountid_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageS2DBourseDecSellDoc::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageS2DBourseDecSellDoc::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageS2DBourseDecSellDoc::roleid() const {
  return roleid_;
}
inline void CMessageS2DBourseDecSellDoc::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseLogQuery

// optional uint32 AccountID = 1;
inline bool CMessageBourseLogQuery::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageBourseLogQuery::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseLogQuery::accountid() const {
  return accountid_;
}
inline void CMessageBourseLogQuery::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// -------------------------------------------------------------------

// CMessageD2SBourseLog

// optional uint32 AccountID = 1;
inline bool CMessageD2SBourseLog::has_accountid() const {
  return _has_bit(0);
}
inline void CMessageD2SBourseLog::clear_accountid() {
  accountid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageD2SBourseLog::accountid() const {
  return accountid_;
}
inline void CMessageD2SBourseLog::set_accountid(::google::protobuf::uint32 value) {
  _set_bit(0);
  accountid_ = value;
}

// optional .PBBourseDetailList buy_log = 2;
inline bool CMessageD2SBourseLog::has_buy_log() const {
  return _has_bit(1);
}
inline void CMessageD2SBourseLog::clear_buy_log() {
  if (buy_log_ != NULL) buy_log_->::PBBourseDetailList::Clear();
  _clear_bit(1);
}
inline const ::PBBourseDetailList& CMessageD2SBourseLog::buy_log() const {
  return buy_log_ != NULL ? *buy_log_ : *default_instance_->buy_log_;
}
inline ::PBBourseDetailList* CMessageD2SBourseLog::mutable_buy_log() {
  _set_bit(1);
  if (buy_log_ == NULL) buy_log_ = new ::PBBourseDetailList;
  return buy_log_;
}

// optional .PBBourseDetailList sell_log = 3;
inline bool CMessageD2SBourseLog::has_sell_log() const {
  return _has_bit(2);
}
inline void CMessageD2SBourseLog::clear_sell_log() {
  if (sell_log_ != NULL) sell_log_->::PBBourseDetailList::Clear();
  _clear_bit(2);
}
inline const ::PBBourseDetailList& CMessageD2SBourseLog::sell_log() const {
  return sell_log_ != NULL ? *sell_log_ : *default_instance_->sell_log_;
}
inline ::PBBourseDetailList* CMessageD2SBourseLog::mutable_sell_log() {
  _set_bit(2);
  if (sell_log_ == NULL) sell_log_ = new ::PBBourseDetailList;
  return sell_log_;
}

#endif  // PROTOBUF_db_5fmsg_5fpb_2ehxx__INCLUDED
