// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_rankmessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_rankmessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rankmessage_5fpb_2ehxx();
void protobuf_AssignDesc_rankmessage_5fpb_2ehxx();
void protobuf_ShutdownFile_rankmessage_5fpb_2ehxx();

class PBSingleRankInfo;
class CMessageGetPlayerRankRequest;
class CMessageGetPlayerRankResponse;

enum RankMessageID {
  ID_C2S_REQUEST_PLAYERRANK = 15361,
  ID_S2C_RESPONSE_PLAYERRANK = 15362
};
const ::google::protobuf::EnumDescriptor* RankMessageID_descriptor();
bool RankMessageID_IsValid(int value);
const RankMessageID RankMessageID_MIN = ID_C2S_REQUEST_PLAYERRANK;
const RankMessageID RankMessageID_MAX = ID_S2C_RESPONSE_PLAYERRANK;

inline const ::std::string& RankMessageID_Name(RankMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    RankMessageID_descriptor(), value);
}
inline bool RankMessageID_Parse(
    const ::std::string& name, RankMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RankMessageID>(
    RankMessageID_descriptor(), name, value);
}
// ===================================================================

class PBSingleRankInfo : public ::google::protobuf::Message {
 public:
  PBSingleRankInfo();
  virtual ~PBSingleRankInfo();
  
  PBSingleRankInfo(const PBSingleRankInfo& from);
  
  inline PBSingleRankInfo& operator=(const PBSingleRankInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSingleRankInfo& default_instance();
  void Swap(PBSingleRankInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBSingleRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSingleRankInfo& from);
  void MergeFrom(const PBSingleRankInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string CharName = 1;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 1;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 Rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // optional uint32 ContinuousBoard = 3;
  inline bool has_continuousboard() const;
  inline void clear_continuousboard();
  static const int kContinuousBoardFieldNumber = 3;
  inline ::google::protobuf::uint32 continuousboard() const;
  inline void set_continuousboard(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 4;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 4;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Country = 5;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 5;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);
  
  // optional uint32 ContinuousFirst = 6;
  inline bool has_continuousfirst() const;
  inline void clear_continuousfirst();
  static const int kContinuousFirstFieldNumber = 6;
  inline ::google::protobuf::uint32 continuousfirst() const;
  inline void set_continuousfirst(::google::protobuf::uint32 value);
  
  // optional uint32 Title = 7;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 7;
  inline ::google::protobuf::uint32 title() const;
  inline void set_title(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 8;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 8;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 RankValue = 9;
  inline bool has_rankvalue() const;
  inline void clear_rankvalue();
  static const int kRankValueFieldNumber = 9;
  inline ::google::protobuf::uint32 rankvalue() const;
  inline void set_rankvalue(::google::protobuf::uint32 value);
  
  // optional int32 RankChange = 10;
  inline bool has_rankchange() const;
  inline void clear_rankchange();
  static const int kRankChangeFieldNumber = 10;
  inline ::google::protobuf::int32 rankchange() const;
  inline void set_rankchange(::google::protobuf::int32 value);
  
  // optional int32 RankChangeVal = 11;
  inline bool has_rankchangeval() const;
  inline void clear_rankchangeval();
  static const int kRankChangeValFieldNumber = 11;
  inline ::google::protobuf::int32 rankchangeval() const;
  inline void set_rankchangeval(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 continuousboard_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 continuousfirst_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 rankvalue_;
  ::google::protobuf::int32 rankchange_;
  ::google::protobuf::int32 rankchangeval_;
  friend void  protobuf_AddDesc_rankmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_rankmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_rankmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSingleRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetPlayerRankRequest : public ::google::protobuf::Message {
 public:
  CMessageGetPlayerRankRequest();
  virtual ~CMessageGetPlayerRankRequest();
  
  CMessageGetPlayerRankRequest(const CMessageGetPlayerRankRequest& from);
  
  inline CMessageGetPlayerRankRequest& operator=(const CMessageGetPlayerRankRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetPlayerRankRequest& default_instance();
  void Swap(CMessageGetPlayerRankRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetPlayerRankRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetPlayerRankRequest& from);
  void MergeFrom(const CMessageGetPlayerRankRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);
  
  // optional uint32 RecordNum = 2;
  inline bool has_recordnum() const;
  inline void clear_recordnum();
  static const int kRecordNumFieldNumber = 2;
  inline ::google::protobuf::uint32 recordnum() const;
  inline void set_recordnum(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BeginIndex = 4;
  inline bool has_beginindex() const;
  inline void clear_beginindex();
  static const int kBeginIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 beginindex() const;
  inline void set_beginindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 ranktype_;
  ::google::protobuf::uint32 recordnum_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 beginindex_;
  friend void  protobuf_AddDesc_rankmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_rankmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_rankmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetPlayerRankRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetPlayerRankResponse : public ::google::protobuf::Message {
 public:
  CMessageGetPlayerRankResponse();
  virtual ~CMessageGetPlayerRankResponse();
  
  CMessageGetPlayerRankResponse(const CMessageGetPlayerRankResponse& from);
  
  inline CMessageGetPlayerRankResponse& operator=(const CMessageGetPlayerRankResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetPlayerRankResponse& default_instance();
  void Swap(CMessageGetPlayerRankResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetPlayerRankResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetPlayerRankResponse& from);
  void MergeFrom(const CMessageGetPlayerRankResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MyRankChange = 1;
  inline bool has_myrankchange() const;
  inline void clear_myrankchange();
  static const int kMyRankChangeFieldNumber = 1;
  inline ::google::protobuf::uint32 myrankchange() const;
  inline void set_myrankchange(::google::protobuf::uint32 value);
  
  // optional uint32 RankType = 2;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);
  
  // optional uint32 MyRankValue = 3;
  inline bool has_myrankvalue() const;
  inline void clear_myrankvalue();
  static const int kMyRankValueFieldNumber = 3;
  inline ::google::protobuf::uint32 myrankvalue() const;
  inline void set_myrankvalue(::google::protobuf::uint32 value);
  
  // repeated .PBSingleRankInfo RankInfo = 4;
  inline int rankinfo_size() const;
  inline void clear_rankinfo();
  static const int kRankInfoFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSingleRankInfo >& rankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSingleRankInfo >* mutable_rankinfo();
  inline const ::PBSingleRankInfo& rankinfo(int index) const;
  inline ::PBSingleRankInfo* mutable_rankinfo(int index);
  inline ::PBSingleRankInfo* add_rankinfo();
  
  // optional uint32 CharID = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 5;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional int32 MyRankChangeVal = 6;
  inline bool has_myrankchangeval() const;
  inline void clear_myrankchangeval();
  static const int kMyRankChangeValFieldNumber = 6;
  inline ::google::protobuf::int32 myrankchangeval() const;
  inline void set_myrankchangeval(::google::protobuf::int32 value);
  
  // optional uint32 MyRankIndex = 7;
  inline bool has_myrankindex() const;
  inline void clear_myrankindex();
  static const int kMyRankIndexFieldNumber = 7;
  inline ::google::protobuf::uint32 myrankindex() const;
  inline void set_myrankindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 myrankchange_;
  ::google::protobuf::uint32 ranktype_;
  ::google::protobuf::uint32 myrankvalue_;
  ::google::protobuf::RepeatedPtrField< ::PBSingleRankInfo > rankinfo_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::int32 myrankchangeval_;
  ::google::protobuf::uint32 myrankindex_;
  friend void  protobuf_AddDesc_rankmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_rankmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_rankmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetPlayerRankResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// PBSingleRankInfo

// optional string CharName = 1;
inline bool PBSingleRankInfo::has_charname() const {
  return _has_bit(0);
}
inline void PBSingleRankInfo::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBSingleRankInfo::charname() const {
  return *charname_;
}
inline void PBSingleRankInfo::set_charname(const ::std::string& value) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PBSingleRankInfo::set_charname(const char* value) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PBSingleRankInfo::set_charname(const char* value, size_t size) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSingleRankInfo::mutable_charname() {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 Rank = 2;
inline bool PBSingleRankInfo::has_rank() const {
  return _has_bit(1);
}
inline void PBSingleRankInfo::clear_rank() {
  rank_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSingleRankInfo::rank() const {
  return rank_;
}
inline void PBSingleRankInfo::set_rank(::google::protobuf::uint32 value) {
  _set_bit(1);
  rank_ = value;
}

// optional uint32 ContinuousBoard = 3;
inline bool PBSingleRankInfo::has_continuousboard() const {
  return _has_bit(2);
}
inline void PBSingleRankInfo::clear_continuousboard() {
  continuousboard_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSingleRankInfo::continuousboard() const {
  return continuousboard_;
}
inline void PBSingleRankInfo::set_continuousboard(::google::protobuf::uint32 value) {
  _set_bit(2);
  continuousboard_ = value;
}

// optional uint32 Metier = 4;
inline bool PBSingleRankInfo::has_metier() const {
  return _has_bit(3);
}
inline void PBSingleRankInfo::clear_metier() {
  metier_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSingleRankInfo::metier() const {
  return metier_;
}
inline void PBSingleRankInfo::set_metier(::google::protobuf::uint32 value) {
  _set_bit(3);
  metier_ = value;
}

// optional uint32 Country = 5;
inline bool PBSingleRankInfo::has_country() const {
  return _has_bit(4);
}
inline void PBSingleRankInfo::clear_country() {
  country_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBSingleRankInfo::country() const {
  return country_;
}
inline void PBSingleRankInfo::set_country(::google::protobuf::uint32 value) {
  _set_bit(4);
  country_ = value;
}

// optional uint32 ContinuousFirst = 6;
inline bool PBSingleRankInfo::has_continuousfirst() const {
  return _has_bit(5);
}
inline void PBSingleRankInfo::clear_continuousfirst() {
  continuousfirst_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBSingleRankInfo::continuousfirst() const {
  return continuousfirst_;
}
inline void PBSingleRankInfo::set_continuousfirst(::google::protobuf::uint32 value) {
  _set_bit(5);
  continuousfirst_ = value;
}

// optional uint32 Title = 7;
inline bool PBSingleRankInfo::has_title() const {
  return _has_bit(6);
}
inline void PBSingleRankInfo::clear_title() {
  title_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBSingleRankInfo::title() const {
  return title_;
}
inline void PBSingleRankInfo::set_title(::google::protobuf::uint32 value) {
  _set_bit(6);
  title_ = value;
}

// optional uint32 CharID = 8;
inline bool PBSingleRankInfo::has_charid() const {
  return _has_bit(7);
}
inline void PBSingleRankInfo::clear_charid() {
  charid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBSingleRankInfo::charid() const {
  return charid_;
}
inline void PBSingleRankInfo::set_charid(::google::protobuf::uint32 value) {
  _set_bit(7);
  charid_ = value;
}

// optional uint32 RankValue = 9;
inline bool PBSingleRankInfo::has_rankvalue() const {
  return _has_bit(8);
}
inline void PBSingleRankInfo::clear_rankvalue() {
  rankvalue_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBSingleRankInfo::rankvalue() const {
  return rankvalue_;
}
inline void PBSingleRankInfo::set_rankvalue(::google::protobuf::uint32 value) {
  _set_bit(8);
  rankvalue_ = value;
}

// optional int32 RankChange = 10;
inline bool PBSingleRankInfo::has_rankchange() const {
  return _has_bit(9);
}
inline void PBSingleRankInfo::clear_rankchange() {
  rankchange_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 PBSingleRankInfo::rankchange() const {
  return rankchange_;
}
inline void PBSingleRankInfo::set_rankchange(::google::protobuf::int32 value) {
  _set_bit(9);
  rankchange_ = value;
}

// optional int32 RankChangeVal = 11;
inline bool PBSingleRankInfo::has_rankchangeval() const {
  return _has_bit(10);
}
inline void PBSingleRankInfo::clear_rankchangeval() {
  rankchangeval_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 PBSingleRankInfo::rankchangeval() const {
  return rankchangeval_;
}
inline void PBSingleRankInfo::set_rankchangeval(::google::protobuf::int32 value) {
  _set_bit(10);
  rankchangeval_ = value;
}

// -------------------------------------------------------------------

// CMessageGetPlayerRankRequest

// optional uint32 RankType = 1;
inline bool CMessageGetPlayerRankRequest::has_ranktype() const {
  return _has_bit(0);
}
inline void CMessageGetPlayerRankRequest::clear_ranktype() {
  ranktype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankRequest::ranktype() const {
  return ranktype_;
}
inline void CMessageGetPlayerRankRequest::set_ranktype(::google::protobuf::uint32 value) {
  _set_bit(0);
  ranktype_ = value;
}

// optional uint32 RecordNum = 2;
inline bool CMessageGetPlayerRankRequest::has_recordnum() const {
  return _has_bit(1);
}
inline void CMessageGetPlayerRankRequest::clear_recordnum() {
  recordnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankRequest::recordnum() const {
  return recordnum_;
}
inline void CMessageGetPlayerRankRequest::set_recordnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  recordnum_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageGetPlayerRankRequest::has_charid() const {
  return _has_bit(2);
}
inline void CMessageGetPlayerRankRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankRequest::charid() const {
  return charid_;
}
inline void CMessageGetPlayerRankRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 BeginIndex = 4;
inline bool CMessageGetPlayerRankRequest::has_beginindex() const {
  return _has_bit(3);
}
inline void CMessageGetPlayerRankRequest::clear_beginindex() {
  beginindex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankRequest::beginindex() const {
  return beginindex_;
}
inline void CMessageGetPlayerRankRequest::set_beginindex(::google::protobuf::uint32 value) {
  _set_bit(3);
  beginindex_ = value;
}

// -------------------------------------------------------------------

// CMessageGetPlayerRankResponse

// optional uint32 MyRankChange = 1;
inline bool CMessageGetPlayerRankResponse::has_myrankchange() const {
  return _has_bit(0);
}
inline void CMessageGetPlayerRankResponse::clear_myrankchange() {
  myrankchange_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankResponse::myrankchange() const {
  return myrankchange_;
}
inline void CMessageGetPlayerRankResponse::set_myrankchange(::google::protobuf::uint32 value) {
  _set_bit(0);
  myrankchange_ = value;
}

// optional uint32 RankType = 2;
inline bool CMessageGetPlayerRankResponse::has_ranktype() const {
  return _has_bit(1);
}
inline void CMessageGetPlayerRankResponse::clear_ranktype() {
  ranktype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankResponse::ranktype() const {
  return ranktype_;
}
inline void CMessageGetPlayerRankResponse::set_ranktype(::google::protobuf::uint32 value) {
  _set_bit(1);
  ranktype_ = value;
}

// optional uint32 MyRankValue = 3;
inline bool CMessageGetPlayerRankResponse::has_myrankvalue() const {
  return _has_bit(2);
}
inline void CMessageGetPlayerRankResponse::clear_myrankvalue() {
  myrankvalue_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankResponse::myrankvalue() const {
  return myrankvalue_;
}
inline void CMessageGetPlayerRankResponse::set_myrankvalue(::google::protobuf::uint32 value) {
  _set_bit(2);
  myrankvalue_ = value;
}

// repeated .PBSingleRankInfo RankInfo = 4;
inline int CMessageGetPlayerRankResponse::rankinfo_size() const {
  return rankinfo_.size();
}
inline void CMessageGetPlayerRankResponse::clear_rankinfo() {
  rankinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSingleRankInfo >&
CMessageGetPlayerRankResponse::rankinfo() const {
  return rankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSingleRankInfo >*
CMessageGetPlayerRankResponse::mutable_rankinfo() {
  return &rankinfo_;
}
inline const ::PBSingleRankInfo& CMessageGetPlayerRankResponse::rankinfo(int index) const {
  return rankinfo_.Get(index);
}
inline ::PBSingleRankInfo* CMessageGetPlayerRankResponse::mutable_rankinfo(int index) {
  return rankinfo_.Mutable(index);
}
inline ::PBSingleRankInfo* CMessageGetPlayerRankResponse::add_rankinfo() {
  return rankinfo_.Add();
}

// optional uint32 CharID = 5;
inline bool CMessageGetPlayerRankResponse::has_charid() const {
  return _has_bit(4);
}
inline void CMessageGetPlayerRankResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankResponse::charid() const {
  return charid_;
}
inline void CMessageGetPlayerRankResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(4);
  charid_ = value;
}

// optional int32 MyRankChangeVal = 6;
inline bool CMessageGetPlayerRankResponse::has_myrankchangeval() const {
  return _has_bit(5);
}
inline void CMessageGetPlayerRankResponse::clear_myrankchangeval() {
  myrankchangeval_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 CMessageGetPlayerRankResponse::myrankchangeval() const {
  return myrankchangeval_;
}
inline void CMessageGetPlayerRankResponse::set_myrankchangeval(::google::protobuf::int32 value) {
  _set_bit(5);
  myrankchangeval_ = value;
}

// optional uint32 MyRankIndex = 7;
inline bool CMessageGetPlayerRankResponse::has_myrankindex() const {
  return _has_bit(6);
}
inline void CMessageGetPlayerRankResponse::clear_myrankindex() {
  myrankindex_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageGetPlayerRankResponse::myrankindex() const {
  return myrankindex_;
}
inline void CMessageGetPlayerRankResponse::set_myrankindex(::google::protobuf::uint32 value) {
  _set_bit(6);
  myrankindex_ = value;
}

#endif  // PROTOBUF_rankmessage_5fpb_2ehxx__INCLUDED
