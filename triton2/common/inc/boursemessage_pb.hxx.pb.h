// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_boursemessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_boursemessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();

class PBBourseAccountInfo;
class PBBourseDetail;
class PBBourseDetailList;
class CMessageBourseAccountNotify;
class CMessageBourseCode;
class CMessageBourseIncAccount;
class CMessageBourseDecAccount;
class CMessageBourseAccountLoad;
class CMessageBourseAccountAddBuy;
class CMessageBourseAccountAddSell;
class CMessageBourseLoadSelfList;
class CMessageBourseSelfListNotice;
class CMessageBourseListNotice;
class CMessageBourseLoadList;
class CMessageBourseTradeBuyNotice;
class CMessageBourseTradeSellNotice;
class CMessageBourseDecBuyDoc;
class CMessageBourseDecSellDoc;
class CMessageBourseTradeLog;
class CMessageBourseTradeLogQuery;

enum BOURSE_MSG_ID {
  ID_S2C_BOURSE_NOTIFY_ACCOUNT = 22529,
  ID_C2S_BOURSE_INC_ACCOUNT = 22530,
  ID_C2S_BOURSE_DEC_ACCOUNT = 22531,
  ID_C2S_BOURSE_LOAD_ACCOUNT = 22532,
  ID_C2S_BOURSE_ADD_BUY = 22533,
  ID_C2S_BOURSE_ADD_SELL = 22534,
  ID_C2S_BOURSE_LOAD_SELF_LIST = 22535,
  ID_S2C_BOURSE_NOTIFY_SELF_LIST = 22536,
  ID_C2S_BOURSE_LOAD_LIST = 22537,
  ID_S2C_BOURSE_LIST_NOTICE = 22538,
  ID_S2C_BOURSE_CODE = 22539,
  ID_S2C_BOURSE_TRADE_BUY = 22540,
  ID_S2C_BOURSE_TRADE_SELL = 22541,
  ID_C2S_BOURSE_BUY_DOC = 22542,
  ID_C2S_BOURSE_SELL_DOC = 22544,
  ID_C2S_BOURSE_TRADE_LOG_QUERY = 22545,
  ID_S2C_BOURSE_TRADE_LOG = 22546
};
const ::google::protobuf::EnumDescriptor* BOURSE_MSG_ID_descriptor();
bool BOURSE_MSG_ID_IsValid(int value);
const BOURSE_MSG_ID BOURSE_MSG_ID_MIN = ID_S2C_BOURSE_NOTIFY_ACCOUNT;
const BOURSE_MSG_ID BOURSE_MSG_ID_MAX = ID_S2C_BOURSE_TRADE_LOG;

inline const ::std::string& BOURSE_MSG_ID_Name(BOURSE_MSG_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    BOURSE_MSG_ID_descriptor(), value);
}
inline bool BOURSE_MSG_ID_Parse(
    const ::std::string& name, BOURSE_MSG_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BOURSE_MSG_ID>(
    BOURSE_MSG_ID_descriptor(), name, value);
}
enum BOURSE_ACCOUNT_NOTIFY_CODE {
  BOURSE_ACCOUNT_LOAD = 0,
  BOURSE_ACCOUNT_INC = 1,
  BOURSE_ACCOUNT_DEC = 2,
  BOURSE_ACCOUNT_TRADE = 4,
  BOURSE_ACCOUNT_NOTENOUGH_MONEY = 16,
  BOURSE_ACCOUNT_NOTENOUGH_YB = 32,
  BOURSE_ADD_DOC_BUY = 64,
  BOURSE_ADD_DOC_SELL = 128,
  BOURSE_DEC_DOC_BUY = 256,
  BOURSE_DEC_DOC_SELL = 512
};
const ::google::protobuf::EnumDescriptor* BOURSE_ACCOUNT_NOTIFY_CODE_descriptor();
bool BOURSE_ACCOUNT_NOTIFY_CODE_IsValid(int value);
const BOURSE_ACCOUNT_NOTIFY_CODE BOURSE_ACCOUNT_NOTIFY_CODE_MIN = BOURSE_ACCOUNT_LOAD;
const BOURSE_ACCOUNT_NOTIFY_CODE BOURSE_ACCOUNT_NOTIFY_CODE_MAX = BOURSE_DEC_DOC_SELL;

inline const ::std::string& BOURSE_ACCOUNT_NOTIFY_CODE_Name(BOURSE_ACCOUNT_NOTIFY_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    BOURSE_ACCOUNT_NOTIFY_CODE_descriptor(), value);
}
inline bool BOURSE_ACCOUNT_NOTIFY_CODE_Parse(
    const ::std::string& name, BOURSE_ACCOUNT_NOTIFY_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BOURSE_ACCOUNT_NOTIFY_CODE>(
    BOURSE_ACCOUNT_NOTIFY_CODE_descriptor(), name, value);
}
// ===================================================================

class PBBourseAccountInfo : public ::google::protobuf::Message {
 public:
  PBBourseAccountInfo();
  virtual ~PBBourseAccountInfo();
  
  PBBourseAccountInfo(const PBBourseAccountInfo& from);
  
  inline PBBourseAccountInfo& operator=(const PBBourseAccountInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBourseAccountInfo& default_instance();
  void Swap(PBBourseAccountInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBBourseAccountInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBourseAccountInfo& from);
  void MergeFrom(const PBBourseAccountInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 Yb = 2;
  inline bool has_yb() const;
  inline void clear_yb();
  static const int kYbFieldNumber = 2;
  inline ::google::protobuf::uint32 yb() const;
  inline void set_yb(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 yb_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBourseAccountInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBBourseDetail : public ::google::protobuf::Message {
 public:
  PBBourseDetail();
  virtual ~PBBourseDetail();
  
  PBBourseDetail(const PBBourseDetail& from);
  
  inline PBBourseDetail& operator=(const PBBourseDetail& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBourseDetail& default_instance();
  void Swap(PBBourseDetail* other);
  
  // implements Message ----------------------------------------------
  
  PBBourseDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBourseDetail& from);
  void MergeFrom(const PBBourseDetail& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 bourse_doc_no = 1;
  inline bool has_bourse_doc_no() const;
  inline void clear_bourse_doc_no();
  static const int kBourseDocNoFieldNumber = 1;
  inline ::google::protobuf::uint32 bourse_doc_no() const;
  inline void set_bourse_doc_no(::google::protobuf::uint32 value);
  
  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 yb_count = 4;
  inline bool has_yb_count() const;
  inline void clear_yb_count();
  static const int kYbCountFieldNumber = 4;
  inline ::google::protobuf::uint32 yb_count() const;
  inline void set_yb_count(::google::protobuf::uint32 value);
  
  // optional uint32 bourse_date = 5;
  inline bool has_bourse_date() const;
  inline void clear_bourse_date();
  static const int kBourseDateFieldNumber = 5;
  inline ::google::protobuf::uint32 bourse_date() const;
  inline void set_bourse_date(::google::protobuf::uint32 value);
  
  // optional uint64 bourse_detail = 6;
  inline bool has_bourse_detail() const;
  inline void clear_bourse_detail();
  static const int kBourseDetailFieldNumber = 6;
  inline ::google::protobuf::uint64 bourse_detail() const;
  inline void set_bourse_detail(::google::protobuf::uint64 value);
  
  // optional uint32 role_id = 7;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 7;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 bourse_doc_no_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 yb_count_;
  ::google::protobuf::uint32 bourse_date_;
  ::google::protobuf::uint64 bourse_detail_;
  ::google::protobuf::uint32 role_id_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBourseDetail* default_instance_;
};
// -------------------------------------------------------------------

class PBBourseDetailList : public ::google::protobuf::Message {
 public:
  PBBourseDetailList();
  virtual ~PBBourseDetailList();
  
  PBBourseDetailList(const PBBourseDetailList& from);
  
  inline PBBourseDetailList& operator=(const PBBourseDetailList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBourseDetailList& default_instance();
  void Swap(PBBourseDetailList* other);
  
  // implements Message ----------------------------------------------
  
  PBBourseDetailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBourseDetailList& from);
  void MergeFrom(const PBBourseDetailList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBBourseDetail list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBourseDetail >& list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBourseDetail >* mutable_list();
  inline const ::PBBourseDetail& list(int index) const;
  inline ::PBBourseDetail* mutable_list(int index);
  inline ::PBBourseDetail* add_list();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBBourseDetail > list_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBourseDetailList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseAccountNotify : public ::google::protobuf::Message {
 public:
  CMessageBourseAccountNotify();
  virtual ~CMessageBourseAccountNotify();
  
  CMessageBourseAccountNotify(const CMessageBourseAccountNotify& from);
  
  inline CMessageBourseAccountNotify& operator=(const CMessageBourseAccountNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseAccountNotify& default_instance();
  void Swap(CMessageBourseAccountNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseAccountNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseAccountNotify& from);
  void MergeFrom(const CMessageBourseAccountNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseAccountInfo Account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::PBBourseAccountInfo& account() const;
  inline ::PBBourseAccountInfo* mutable_account();
  
  // optional uint32 YB = 2;
  inline bool has_yb() const;
  inline void clear_yb();
  static const int kYBFieldNumber = 2;
  inline ::google::protobuf::uint32 yb() const;
  inline void set_yb(::google::protobuf::uint32 value);
  
  // optional uint32 NotifyCode = 3;
  inline bool has_notifycode() const;
  inline void clear_notifycode();
  static const int kNotifyCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 notifycode() const;
  inline void set_notifycode(::google::protobuf::uint32 value);
  
  // optional uint32 Param1 = 4;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 4;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);
  
  // optional uint32 Param2 = 5;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 5;
  inline ::google::protobuf::uint32 param2() const;
  inline void set_param2(::google::protobuf::uint32 value);
  
  // optional uint32 Param3 = 6;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 6;
  inline ::google::protobuf::uint32 param3() const;
  inline void set_param3(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseAccountInfo* account_;
  ::google::protobuf::uint32 yb_;
  ::google::protobuf::uint32 notifycode_;
  ::google::protobuf::uint32 param1_;
  ::google::protobuf::uint32 param2_;
  ::google::protobuf::uint32 param3_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseAccountNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseCode : public ::google::protobuf::Message {
 public:
  CMessageBourseCode();
  virtual ~CMessageBourseCode();
  
  CMessageBourseCode(const CMessageBourseCode& from);
  
  inline CMessageBourseCode& operator=(const CMessageBourseCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseCode& default_instance();
  void Swap(CMessageBourseCode* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseCode& from);
  void MergeFrom(const CMessageBourseCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 code_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseCode* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseIncAccount : public ::google::protobuf::Message {
 public:
  CMessageBourseIncAccount();
  virtual ~CMessageBourseIncAccount();
  
  CMessageBourseIncAccount(const CMessageBourseIncAccount& from);
  
  inline CMessageBourseIncAccount& operator=(const CMessageBourseIncAccount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseIncAccount& default_instance();
  void Swap(CMessageBourseIncAccount* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseIncAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseIncAccount& from);
  void MergeFrom(const CMessageBourseIncAccount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseAccountInfo AccountInc = 1;
  inline bool has_accountinc() const;
  inline void clear_accountinc();
  static const int kAccountIncFieldNumber = 1;
  inline const ::PBBourseAccountInfo& accountinc() const;
  inline ::PBBourseAccountInfo* mutable_accountinc();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseAccountInfo* accountinc_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseIncAccount* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseDecAccount : public ::google::protobuf::Message {
 public:
  CMessageBourseDecAccount();
  virtual ~CMessageBourseDecAccount();
  
  CMessageBourseDecAccount(const CMessageBourseDecAccount& from);
  
  inline CMessageBourseDecAccount& operator=(const CMessageBourseDecAccount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseDecAccount& default_instance();
  void Swap(CMessageBourseDecAccount* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseDecAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseDecAccount& from);
  void MergeFrom(const CMessageBourseDecAccount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseAccountInfo AccountDec = 1;
  inline bool has_accountdec() const;
  inline void clear_accountdec();
  static const int kAccountDecFieldNumber = 1;
  inline const ::PBBourseAccountInfo& accountdec() const;
  inline ::PBBourseAccountInfo* mutable_accountdec();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseAccountInfo* accountdec_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseDecAccount* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseAccountLoad : public ::google::protobuf::Message {
 public:
  CMessageBourseAccountLoad();
  virtual ~CMessageBourseAccountLoad();
  
  CMessageBourseAccountLoad(const CMessageBourseAccountLoad& from);
  
  inline CMessageBourseAccountLoad& operator=(const CMessageBourseAccountLoad& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseAccountLoad& default_instance();
  void Swap(CMessageBourseAccountLoad* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseAccountLoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseAccountLoad& from);
  void MergeFrom(const CMessageBourseAccountLoad& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseAccountLoad* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseAccountAddBuy : public ::google::protobuf::Message {
 public:
  CMessageBourseAccountAddBuy();
  virtual ~CMessageBourseAccountAddBuy();
  
  CMessageBourseAccountAddBuy(const CMessageBourseAccountAddBuy& from);
  
  inline CMessageBourseAccountAddBuy& operator=(const CMessageBourseAccountAddBuy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseAccountAddBuy& default_instance();
  void Swap(CMessageBourseAccountAddBuy* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseAccountAddBuy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseAccountAddBuy& from);
  void MergeFrom(const CMessageBourseAccountAddBuy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 yb_count = 2;
  inline bool has_yb_count() const;
  inline void clear_yb_count();
  static const int kYbCountFieldNumber = 2;
  inline ::google::protobuf::uint32 yb_count() const;
  inline void set_yb_count(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 yb_count_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseAccountAddBuy* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseAccountAddSell : public ::google::protobuf::Message {
 public:
  CMessageBourseAccountAddSell();
  virtual ~CMessageBourseAccountAddSell();
  
  CMessageBourseAccountAddSell(const CMessageBourseAccountAddSell& from);
  
  inline CMessageBourseAccountAddSell& operator=(const CMessageBourseAccountAddSell& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseAccountAddSell& default_instance();
  void Swap(CMessageBourseAccountAddSell* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseAccountAddSell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseAccountAddSell& from);
  void MergeFrom(const CMessageBourseAccountAddSell& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 yb_count = 2;
  inline bool has_yb_count() const;
  inline void clear_yb_count();
  static const int kYbCountFieldNumber = 2;
  inline ::google::protobuf::uint32 yb_count() const;
  inline void set_yb_count(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 yb_count_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseAccountAddSell* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseLoadSelfList : public ::google::protobuf::Message {
 public:
  CMessageBourseLoadSelfList();
  virtual ~CMessageBourseLoadSelfList();
  
  CMessageBourseLoadSelfList(const CMessageBourseLoadSelfList& from);
  
  inline CMessageBourseLoadSelfList& operator=(const CMessageBourseLoadSelfList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseLoadSelfList& default_instance();
  void Swap(CMessageBourseLoadSelfList* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseLoadSelfList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseLoadSelfList& from);
  void MergeFrom(const CMessageBourseLoadSelfList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseLoadSelfList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseSelfListNotice : public ::google::protobuf::Message {
 public:
  CMessageBourseSelfListNotice();
  virtual ~CMessageBourseSelfListNotice();
  
  CMessageBourseSelfListNotice(const CMessageBourseSelfListNotice& from);
  
  inline CMessageBourseSelfListNotice& operator=(const CMessageBourseSelfListNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseSelfListNotice& default_instance();
  void Swap(CMessageBourseSelfListNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseSelfListNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseSelfListNotice& from);
  void MergeFrom(const CMessageBourseSelfListNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseDetailList BuyList = 1;
  inline bool has_buylist() const;
  inline void clear_buylist();
  static const int kBuyListFieldNumber = 1;
  inline const ::PBBourseDetailList& buylist() const;
  inline ::PBBourseDetailList* mutable_buylist();
  
  // optional .PBBourseDetailList SellList = 2;
  inline bool has_selllist() const;
  inline void clear_selllist();
  static const int kSellListFieldNumber = 2;
  inline const ::PBBourseDetailList& selllist() const;
  inline ::PBBourseDetailList* mutable_selllist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseDetailList* buylist_;
  ::PBBourseDetailList* selllist_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseSelfListNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseListNotice : public ::google::protobuf::Message {
 public:
  CMessageBourseListNotice();
  virtual ~CMessageBourseListNotice();
  
  CMessageBourseListNotice(const CMessageBourseListNotice& from);
  
  inline CMessageBourseListNotice& operator=(const CMessageBourseListNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseListNotice& default_instance();
  void Swap(CMessageBourseListNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseListNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseListNotice& from);
  void MergeFrom(const CMessageBourseListNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseDetailList BuyList = 1;
  inline bool has_buylist() const;
  inline void clear_buylist();
  static const int kBuyListFieldNumber = 1;
  inline const ::PBBourseDetailList& buylist() const;
  inline ::PBBourseDetailList* mutable_buylist();
  
  // optional .PBBourseDetailList SellList = 2;
  inline bool has_selllist() const;
  inline void clear_selllist();
  static const int kSellListFieldNumber = 2;
  inline const ::PBBourseDetailList& selllist() const;
  inline ::PBBourseDetailList* mutable_selllist();
  
  // optional uint32 ListID = 3;
  inline bool has_listid() const;
  inline void clear_listid();
  static const int kListIDFieldNumber = 3;
  inline ::google::protobuf::uint32 listid() const;
  inline void set_listid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseDetailList* buylist_;
  ::PBBourseDetailList* selllist_;
  ::google::protobuf::uint32 listid_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseListNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseLoadList : public ::google::protobuf::Message {
 public:
  CMessageBourseLoadList();
  virtual ~CMessageBourseLoadList();
  
  CMessageBourseLoadList(const CMessageBourseLoadList& from);
  
  inline CMessageBourseLoadList& operator=(const CMessageBourseLoadList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseLoadList& default_instance();
  void Swap(CMessageBourseLoadList* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseLoadList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseLoadList& from);
  void MergeFrom(const CMessageBourseLoadList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ListID = 1;
  inline bool has_listid() const;
  inline void clear_listid();
  static const int kListIDFieldNumber = 1;
  inline ::google::protobuf::uint32 listid() const;
  inline void set_listid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 listid_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseLoadList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseTradeBuyNotice : public ::google::protobuf::Message {
 public:
  CMessageBourseTradeBuyNotice();
  virtual ~CMessageBourseTradeBuyNotice();
  
  CMessageBourseTradeBuyNotice(const CMessageBourseTradeBuyNotice& from);
  
  inline CMessageBourseTradeBuyNotice& operator=(const CMessageBourseTradeBuyNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseTradeBuyNotice& default_instance();
  void Swap(CMessageBourseTradeBuyNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseTradeBuyNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseTradeBuyNotice& from);
  void MergeFrom(const CMessageBourseTradeBuyNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseDetail Detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::PBBourseDetail& detail() const;
  inline ::PBBourseDetail* mutable_detail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseDetail* detail_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseTradeBuyNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseTradeSellNotice : public ::google::protobuf::Message {
 public:
  CMessageBourseTradeSellNotice();
  virtual ~CMessageBourseTradeSellNotice();
  
  CMessageBourseTradeSellNotice(const CMessageBourseTradeSellNotice& from);
  
  inline CMessageBourseTradeSellNotice& operator=(const CMessageBourseTradeSellNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseTradeSellNotice& default_instance();
  void Swap(CMessageBourseTradeSellNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseTradeSellNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseTradeSellNotice& from);
  void MergeFrom(const CMessageBourseTradeSellNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseDetail Detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::PBBourseDetail& detail() const;
  inline ::PBBourseDetail* mutable_detail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseDetail* detail_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseTradeSellNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseDecBuyDoc : public ::google::protobuf::Message {
 public:
  CMessageBourseDecBuyDoc();
  virtual ~CMessageBourseDecBuyDoc();
  
  CMessageBourseDecBuyDoc(const CMessageBourseDecBuyDoc& from);
  
  inline CMessageBourseDecBuyDoc& operator=(const CMessageBourseDecBuyDoc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseDecBuyDoc& default_instance();
  void Swap(CMessageBourseDecBuyDoc* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseDecBuyDoc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseDecBuyDoc& from);
  void MergeFrom(const CMessageBourseDecBuyDoc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Doc = 1;
  inline bool has_doc() const;
  inline void clear_doc();
  static const int kDocFieldNumber = 1;
  inline ::google::protobuf::uint32 doc() const;
  inline void set_doc(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 doc_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseDecBuyDoc* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseDecSellDoc : public ::google::protobuf::Message {
 public:
  CMessageBourseDecSellDoc();
  virtual ~CMessageBourseDecSellDoc();
  
  CMessageBourseDecSellDoc(const CMessageBourseDecSellDoc& from);
  
  inline CMessageBourseDecSellDoc& operator=(const CMessageBourseDecSellDoc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseDecSellDoc& default_instance();
  void Swap(CMessageBourseDecSellDoc* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseDecSellDoc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseDecSellDoc& from);
  void MergeFrom(const CMessageBourseDecSellDoc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Doc = 1;
  inline bool has_doc() const;
  inline void clear_doc();
  static const int kDocFieldNumber = 1;
  inline ::google::protobuf::uint32 doc() const;
  inline void set_doc(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 doc_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseDecSellDoc* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseTradeLog : public ::google::protobuf::Message {
 public:
  CMessageBourseTradeLog();
  virtual ~CMessageBourseTradeLog();
  
  CMessageBourseTradeLog(const CMessageBourseTradeLog& from);
  
  inline CMessageBourseTradeLog& operator=(const CMessageBourseTradeLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseTradeLog& default_instance();
  void Swap(CMessageBourseTradeLog* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseTradeLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseTradeLog& from);
  void MergeFrom(const CMessageBourseTradeLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBBourseDetailList buy_log = 1;
  inline bool has_buy_log() const;
  inline void clear_buy_log();
  static const int kBuyLogFieldNumber = 1;
  inline const ::PBBourseDetailList& buy_log() const;
  inline ::PBBourseDetailList* mutable_buy_log();
  
  // optional .PBBourseDetailList sell_log = 2;
  inline bool has_sell_log() const;
  inline void clear_sell_log();
  static const int kSellLogFieldNumber = 2;
  inline const ::PBBourseDetailList& sell_log() const;
  inline ::PBBourseDetailList* mutable_sell_log();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBBourseDetailList* buy_log_;
  ::PBBourseDetailList* sell_log_;
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseTradeLog* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBourseTradeLogQuery : public ::google::protobuf::Message {
 public:
  CMessageBourseTradeLogQuery();
  virtual ~CMessageBourseTradeLogQuery();
  
  CMessageBourseTradeLogQuery(const CMessageBourseTradeLogQuery& from);
  
  inline CMessageBourseTradeLogQuery& operator=(const CMessageBourseTradeLogQuery& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBourseTradeLogQuery& default_instance();
  void Swap(CMessageBourseTradeLogQuery* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBourseTradeLogQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBourseTradeLogQuery& from);
  void MergeFrom(const CMessageBourseTradeLogQuery& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_boursemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBourseTradeLogQuery* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// PBBourseAccountInfo

// optional uint32 Money = 1;
inline bool PBBourseAccountInfo::has_money() const {
  return _has_bit(0);
}
inline void PBBourseAccountInfo::clear_money() {
  money_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBourseAccountInfo::money() const {
  return money_;
}
inline void PBBourseAccountInfo::set_money(::google::protobuf::uint32 value) {
  _set_bit(0);
  money_ = value;
}

// optional uint32 Yb = 2;
inline bool PBBourseAccountInfo::has_yb() const {
  return _has_bit(1);
}
inline void PBBourseAccountInfo::clear_yb() {
  yb_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBBourseAccountInfo::yb() const {
  return yb_;
}
inline void PBBourseAccountInfo::set_yb(::google::protobuf::uint32 value) {
  _set_bit(1);
  yb_ = value;
}

// -------------------------------------------------------------------

// PBBourseDetail

// optional uint32 bourse_doc_no = 1;
inline bool PBBourseDetail::has_bourse_doc_no() const {
  return _has_bit(0);
}
inline void PBBourseDetail::clear_bourse_doc_no() {
  bourse_doc_no_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBourseDetail::bourse_doc_no() const {
  return bourse_doc_no_;
}
inline void PBBourseDetail::set_bourse_doc_no(::google::protobuf::uint32 value) {
  _set_bit(0);
  bourse_doc_no_ = value;
}

// optional uint32 account_id = 2;
inline bool PBBourseDetail::has_account_id() const {
  return _has_bit(1);
}
inline void PBBourseDetail::clear_account_id() {
  account_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBBourseDetail::account_id() const {
  return account_id_;
}
inline void PBBourseDetail::set_account_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  account_id_ = value;
}

// optional uint32 price = 3;
inline bool PBBourseDetail::has_price() const {
  return _has_bit(2);
}
inline void PBBourseDetail::clear_price() {
  price_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBBourseDetail::price() const {
  return price_;
}
inline void PBBourseDetail::set_price(::google::protobuf::uint32 value) {
  _set_bit(2);
  price_ = value;
}

// optional uint32 yb_count = 4;
inline bool PBBourseDetail::has_yb_count() const {
  return _has_bit(3);
}
inline void PBBourseDetail::clear_yb_count() {
  yb_count_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBBourseDetail::yb_count() const {
  return yb_count_;
}
inline void PBBourseDetail::set_yb_count(::google::protobuf::uint32 value) {
  _set_bit(3);
  yb_count_ = value;
}

// optional uint32 bourse_date = 5;
inline bool PBBourseDetail::has_bourse_date() const {
  return _has_bit(4);
}
inline void PBBourseDetail::clear_bourse_date() {
  bourse_date_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBBourseDetail::bourse_date() const {
  return bourse_date_;
}
inline void PBBourseDetail::set_bourse_date(::google::protobuf::uint32 value) {
  _set_bit(4);
  bourse_date_ = value;
}

// optional uint64 bourse_detail = 6;
inline bool PBBourseDetail::has_bourse_detail() const {
  return _has_bit(5);
}
inline void PBBourseDetail::clear_bourse_detail() {
  bourse_detail_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 PBBourseDetail::bourse_detail() const {
  return bourse_detail_;
}
inline void PBBourseDetail::set_bourse_detail(::google::protobuf::uint64 value) {
  _set_bit(5);
  bourse_detail_ = value;
}

// optional uint32 role_id = 7;
inline bool PBBourseDetail::has_role_id() const {
  return _has_bit(6);
}
inline void PBBourseDetail::clear_role_id() {
  role_id_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBBourseDetail::role_id() const {
  return role_id_;
}
inline void PBBourseDetail::set_role_id(::google::protobuf::uint32 value) {
  _set_bit(6);
  role_id_ = value;
}

// -------------------------------------------------------------------

// PBBourseDetailList

// repeated .PBBourseDetail list = 1;
inline int PBBourseDetailList::list_size() const {
  return list_.size();
}
inline void PBBourseDetailList::clear_list() {
  list_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBourseDetail >&
PBBourseDetailList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBourseDetail >*
PBBourseDetailList::mutable_list() {
  return &list_;
}
inline const ::PBBourseDetail& PBBourseDetailList::list(int index) const {
  return list_.Get(index);
}
inline ::PBBourseDetail* PBBourseDetailList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::PBBourseDetail* PBBourseDetailList::add_list() {
  return list_.Add();
}

// -------------------------------------------------------------------

// CMessageBourseAccountNotify

// optional .PBBourseAccountInfo Account = 1;
inline bool CMessageBourseAccountNotify::has_account() const {
  return _has_bit(0);
}
inline void CMessageBourseAccountNotify::clear_account() {
  if (account_ != NULL) account_->::PBBourseAccountInfo::Clear();
  _clear_bit(0);
}
inline const ::PBBourseAccountInfo& CMessageBourseAccountNotify::account() const {
  return account_ != NULL ? *account_ : *default_instance_->account_;
}
inline ::PBBourseAccountInfo* CMessageBourseAccountNotify::mutable_account() {
  _set_bit(0);
  if (account_ == NULL) account_ = new ::PBBourseAccountInfo;
  return account_;
}

// optional uint32 YB = 2;
inline bool CMessageBourseAccountNotify::has_yb() const {
  return _has_bit(1);
}
inline void CMessageBourseAccountNotify::clear_yb() {
  yb_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseAccountNotify::yb() const {
  return yb_;
}
inline void CMessageBourseAccountNotify::set_yb(::google::protobuf::uint32 value) {
  _set_bit(1);
  yb_ = value;
}

// optional uint32 NotifyCode = 3;
inline bool CMessageBourseAccountNotify::has_notifycode() const {
  return _has_bit(2);
}
inline void CMessageBourseAccountNotify::clear_notifycode() {
  notifycode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBourseAccountNotify::notifycode() const {
  return notifycode_;
}
inline void CMessageBourseAccountNotify::set_notifycode(::google::protobuf::uint32 value) {
  _set_bit(2);
  notifycode_ = value;
}

// optional uint32 Param1 = 4;
inline bool CMessageBourseAccountNotify::has_param1() const {
  return _has_bit(3);
}
inline void CMessageBourseAccountNotify::clear_param1() {
  param1_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBourseAccountNotify::param1() const {
  return param1_;
}
inline void CMessageBourseAccountNotify::set_param1(::google::protobuf::uint32 value) {
  _set_bit(3);
  param1_ = value;
}

// optional uint32 Param2 = 5;
inline bool CMessageBourseAccountNotify::has_param2() const {
  return _has_bit(4);
}
inline void CMessageBourseAccountNotify::clear_param2() {
  param2_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBourseAccountNotify::param2() const {
  return param2_;
}
inline void CMessageBourseAccountNotify::set_param2(::google::protobuf::uint32 value) {
  _set_bit(4);
  param2_ = value;
}

// optional uint32 Param3 = 6;
inline bool CMessageBourseAccountNotify::has_param3() const {
  return _has_bit(5);
}
inline void CMessageBourseAccountNotify::clear_param3() {
  param3_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageBourseAccountNotify::param3() const {
  return param3_;
}
inline void CMessageBourseAccountNotify::set_param3(::google::protobuf::uint32 value) {
  _set_bit(5);
  param3_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseCode

// optional uint32 Code = 1;
inline bool CMessageBourseCode::has_code() const {
  return _has_bit(0);
}
inline void CMessageBourseCode::clear_code() {
  code_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseCode::code() const {
  return code_;
}
inline void CMessageBourseCode::set_code(::google::protobuf::uint32 value) {
  _set_bit(0);
  code_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseIncAccount

// optional .PBBourseAccountInfo AccountInc = 1;
inline bool CMessageBourseIncAccount::has_accountinc() const {
  return _has_bit(0);
}
inline void CMessageBourseIncAccount::clear_accountinc() {
  if (accountinc_ != NULL) accountinc_->::PBBourseAccountInfo::Clear();
  _clear_bit(0);
}
inline const ::PBBourseAccountInfo& CMessageBourseIncAccount::accountinc() const {
  return accountinc_ != NULL ? *accountinc_ : *default_instance_->accountinc_;
}
inline ::PBBourseAccountInfo* CMessageBourseIncAccount::mutable_accountinc() {
  _set_bit(0);
  if (accountinc_ == NULL) accountinc_ = new ::PBBourseAccountInfo;
  return accountinc_;
}

// -------------------------------------------------------------------

// CMessageBourseDecAccount

// optional .PBBourseAccountInfo AccountDec = 1;
inline bool CMessageBourseDecAccount::has_accountdec() const {
  return _has_bit(0);
}
inline void CMessageBourseDecAccount::clear_accountdec() {
  if (accountdec_ != NULL) accountdec_->::PBBourseAccountInfo::Clear();
  _clear_bit(0);
}
inline const ::PBBourseAccountInfo& CMessageBourseDecAccount::accountdec() const {
  return accountdec_ != NULL ? *accountdec_ : *default_instance_->accountdec_;
}
inline ::PBBourseAccountInfo* CMessageBourseDecAccount::mutable_accountdec() {
  _set_bit(0);
  if (accountdec_ == NULL) accountdec_ = new ::PBBourseAccountInfo;
  return accountdec_;
}

// -------------------------------------------------------------------

// CMessageBourseAccountLoad

// -------------------------------------------------------------------

// CMessageBourseAccountAddBuy

// optional uint32 price = 1;
inline bool CMessageBourseAccountAddBuy::has_price() const {
  return _has_bit(0);
}
inline void CMessageBourseAccountAddBuy::clear_price() {
  price_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseAccountAddBuy::price() const {
  return price_;
}
inline void CMessageBourseAccountAddBuy::set_price(::google::protobuf::uint32 value) {
  _set_bit(0);
  price_ = value;
}

// optional uint32 yb_count = 2;
inline bool CMessageBourseAccountAddBuy::has_yb_count() const {
  return _has_bit(1);
}
inline void CMessageBourseAccountAddBuy::clear_yb_count() {
  yb_count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseAccountAddBuy::yb_count() const {
  return yb_count_;
}
inline void CMessageBourseAccountAddBuy::set_yb_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  yb_count_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseAccountAddSell

// optional uint32 price = 1;
inline bool CMessageBourseAccountAddSell::has_price() const {
  return _has_bit(0);
}
inline void CMessageBourseAccountAddSell::clear_price() {
  price_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseAccountAddSell::price() const {
  return price_;
}
inline void CMessageBourseAccountAddSell::set_price(::google::protobuf::uint32 value) {
  _set_bit(0);
  price_ = value;
}

// optional uint32 yb_count = 2;
inline bool CMessageBourseAccountAddSell::has_yb_count() const {
  return _has_bit(1);
}
inline void CMessageBourseAccountAddSell::clear_yb_count() {
  yb_count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBourseAccountAddSell::yb_count() const {
  return yb_count_;
}
inline void CMessageBourseAccountAddSell::set_yb_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  yb_count_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseLoadSelfList

// -------------------------------------------------------------------

// CMessageBourseSelfListNotice

// optional .PBBourseDetailList BuyList = 1;
inline bool CMessageBourseSelfListNotice::has_buylist() const {
  return _has_bit(0);
}
inline void CMessageBourseSelfListNotice::clear_buylist() {
  if (buylist_ != NULL) buylist_->::PBBourseDetailList::Clear();
  _clear_bit(0);
}
inline const ::PBBourseDetailList& CMessageBourseSelfListNotice::buylist() const {
  return buylist_ != NULL ? *buylist_ : *default_instance_->buylist_;
}
inline ::PBBourseDetailList* CMessageBourseSelfListNotice::mutable_buylist() {
  _set_bit(0);
  if (buylist_ == NULL) buylist_ = new ::PBBourseDetailList;
  return buylist_;
}

// optional .PBBourseDetailList SellList = 2;
inline bool CMessageBourseSelfListNotice::has_selllist() const {
  return _has_bit(1);
}
inline void CMessageBourseSelfListNotice::clear_selllist() {
  if (selllist_ != NULL) selllist_->::PBBourseDetailList::Clear();
  _clear_bit(1);
}
inline const ::PBBourseDetailList& CMessageBourseSelfListNotice::selllist() const {
  return selllist_ != NULL ? *selllist_ : *default_instance_->selllist_;
}
inline ::PBBourseDetailList* CMessageBourseSelfListNotice::mutable_selllist() {
  _set_bit(1);
  if (selllist_ == NULL) selllist_ = new ::PBBourseDetailList;
  return selllist_;
}

// -------------------------------------------------------------------

// CMessageBourseListNotice

// optional .PBBourseDetailList BuyList = 1;
inline bool CMessageBourseListNotice::has_buylist() const {
  return _has_bit(0);
}
inline void CMessageBourseListNotice::clear_buylist() {
  if (buylist_ != NULL) buylist_->::PBBourseDetailList::Clear();
  _clear_bit(0);
}
inline const ::PBBourseDetailList& CMessageBourseListNotice::buylist() const {
  return buylist_ != NULL ? *buylist_ : *default_instance_->buylist_;
}
inline ::PBBourseDetailList* CMessageBourseListNotice::mutable_buylist() {
  _set_bit(0);
  if (buylist_ == NULL) buylist_ = new ::PBBourseDetailList;
  return buylist_;
}

// optional .PBBourseDetailList SellList = 2;
inline bool CMessageBourseListNotice::has_selllist() const {
  return _has_bit(1);
}
inline void CMessageBourseListNotice::clear_selllist() {
  if (selllist_ != NULL) selllist_->::PBBourseDetailList::Clear();
  _clear_bit(1);
}
inline const ::PBBourseDetailList& CMessageBourseListNotice::selllist() const {
  return selllist_ != NULL ? *selllist_ : *default_instance_->selllist_;
}
inline ::PBBourseDetailList* CMessageBourseListNotice::mutable_selllist() {
  _set_bit(1);
  if (selllist_ == NULL) selllist_ = new ::PBBourseDetailList;
  return selllist_;
}

// optional uint32 ListID = 3;
inline bool CMessageBourseListNotice::has_listid() const {
  return _has_bit(2);
}
inline void CMessageBourseListNotice::clear_listid() {
  listid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBourseListNotice::listid() const {
  return listid_;
}
inline void CMessageBourseListNotice::set_listid(::google::protobuf::uint32 value) {
  _set_bit(2);
  listid_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseLoadList

// optional uint32 ListID = 1;
inline bool CMessageBourseLoadList::has_listid() const {
  return _has_bit(0);
}
inline void CMessageBourseLoadList::clear_listid() {
  listid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseLoadList::listid() const {
  return listid_;
}
inline void CMessageBourseLoadList::set_listid(::google::protobuf::uint32 value) {
  _set_bit(0);
  listid_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseTradeBuyNotice

// optional .PBBourseDetail Detail = 1;
inline bool CMessageBourseTradeBuyNotice::has_detail() const {
  return _has_bit(0);
}
inline void CMessageBourseTradeBuyNotice::clear_detail() {
  if (detail_ != NULL) detail_->::PBBourseDetail::Clear();
  _clear_bit(0);
}
inline const ::PBBourseDetail& CMessageBourseTradeBuyNotice::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::PBBourseDetail* CMessageBourseTradeBuyNotice::mutable_detail() {
  _set_bit(0);
  if (detail_ == NULL) detail_ = new ::PBBourseDetail;
  return detail_;
}

// -------------------------------------------------------------------

// CMessageBourseTradeSellNotice

// optional .PBBourseDetail Detail = 1;
inline bool CMessageBourseTradeSellNotice::has_detail() const {
  return _has_bit(0);
}
inline void CMessageBourseTradeSellNotice::clear_detail() {
  if (detail_ != NULL) detail_->::PBBourseDetail::Clear();
  _clear_bit(0);
}
inline const ::PBBourseDetail& CMessageBourseTradeSellNotice::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::PBBourseDetail* CMessageBourseTradeSellNotice::mutable_detail() {
  _set_bit(0);
  if (detail_ == NULL) detail_ = new ::PBBourseDetail;
  return detail_;
}

// -------------------------------------------------------------------

// CMessageBourseDecBuyDoc

// optional uint32 Doc = 1;
inline bool CMessageBourseDecBuyDoc::has_doc() const {
  return _has_bit(0);
}
inline void CMessageBourseDecBuyDoc::clear_doc() {
  doc_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseDecBuyDoc::doc() const {
  return doc_;
}
inline void CMessageBourseDecBuyDoc::set_doc(::google::protobuf::uint32 value) {
  _set_bit(0);
  doc_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseDecSellDoc

// optional uint32 Doc = 1;
inline bool CMessageBourseDecSellDoc::has_doc() const {
  return _has_bit(0);
}
inline void CMessageBourseDecSellDoc::clear_doc() {
  doc_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBourseDecSellDoc::doc() const {
  return doc_;
}
inline void CMessageBourseDecSellDoc::set_doc(::google::protobuf::uint32 value) {
  _set_bit(0);
  doc_ = value;
}

// -------------------------------------------------------------------

// CMessageBourseTradeLog

// optional .PBBourseDetailList buy_log = 1;
inline bool CMessageBourseTradeLog::has_buy_log() const {
  return _has_bit(0);
}
inline void CMessageBourseTradeLog::clear_buy_log() {
  if (buy_log_ != NULL) buy_log_->::PBBourseDetailList::Clear();
  _clear_bit(0);
}
inline const ::PBBourseDetailList& CMessageBourseTradeLog::buy_log() const {
  return buy_log_ != NULL ? *buy_log_ : *default_instance_->buy_log_;
}
inline ::PBBourseDetailList* CMessageBourseTradeLog::mutable_buy_log() {
  _set_bit(0);
  if (buy_log_ == NULL) buy_log_ = new ::PBBourseDetailList;
  return buy_log_;
}

// optional .PBBourseDetailList sell_log = 2;
inline bool CMessageBourseTradeLog::has_sell_log() const {
  return _has_bit(1);
}
inline void CMessageBourseTradeLog::clear_sell_log() {
  if (sell_log_ != NULL) sell_log_->::PBBourseDetailList::Clear();
  _clear_bit(1);
}
inline const ::PBBourseDetailList& CMessageBourseTradeLog::sell_log() const {
  return sell_log_ != NULL ? *sell_log_ : *default_instance_->sell_log_;
}
inline ::PBBourseDetailList* CMessageBourseTradeLog::mutable_sell_log() {
  _set_bit(1);
  if (sell_log_ == NULL) sell_log_ = new ::PBBourseDetailList;
  return sell_log_;
}

// -------------------------------------------------------------------

// CMessageBourseTradeLogQuery

#endif  // PROTOBUF_boursemessage_5fpb_2ehxx__INCLUDED
