// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_ibstore_5fpb_2ehxx__INCLUDED
#define PROTOBUF_ibstore_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();

class PBLocation;
class PBIbMoney;
class PBIbItemOnSale;
class CMessageListIbItemsRequest;
class CMessageListIbItemsResponse;
class CMessagePurchaseIbItemRequest;
class CMessagePurchaseIbItemResponse;
class CMessageRoleIbTransNotify;
class PBIbSubTab;
class PBIbTab;
class PBIbStore;
class CMessageUserChargeNotice;
class PBPromotion;
class CMessageIbItemRemainNotice;
class PBConsume;
class PBFuncStore;
class CMessageGetFuncConsumesRequest;
class CMessageGetFuncConsumesResponse;
class CMessagePurchaseFuncRequest;
class CMessagePurchaseFuncResponse;

enum IBSTORE_MSG_ID {
  ID_C2S_REQUEST_LISTIBITEMS = 18433,
  ID_S2C_RESPONSE_LISTIBITEMS = 18434,
  ID_C2S_REQUEST_PURCHASEIBITEM = 18435,
  ID_S2C_RESPONSE_PURCHASEIBITEM = 18436,
  ID_S2C_NOTIFY_USERCHARGE = 18437,
  ID_S2C_NOTIFY_IBSTOREPROMOTION = 18438,
  ID_C2S_GET_FUNCCONSUMES_REQUEST = 18439,
  ID_S2C_GET_FUNCCONSUMES_RESPONSE = 18440,
  ID_C2S_PURCHASE_FUNC_REQUEST = 18441,
  ID_S2C_PURCHASE_FUNC_RESPONSE = 18442
};
const ::google::protobuf::EnumDescriptor* IBSTORE_MSG_ID_descriptor();
bool IBSTORE_MSG_ID_IsValid(int value);
const IBSTORE_MSG_ID IBSTORE_MSG_ID_MIN = ID_C2S_REQUEST_LISTIBITEMS;
const IBSTORE_MSG_ID IBSTORE_MSG_ID_MAX = ID_S2C_PURCHASE_FUNC_RESPONSE;

inline const ::std::string& IBSTORE_MSG_ID_Name(IBSTORE_MSG_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    IBSTORE_MSG_ID_descriptor(), value);
}
inline bool IBSTORE_MSG_ID_Parse(
    const ::std::string& name, IBSTORE_MSG_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IBSTORE_MSG_ID>(
    IBSTORE_MSG_ID_descriptor(), name, value);
}
enum IBSTORE_FLAG {
  EM_GOODS_RECOMMEND = 1,
  EM_GOODS_COUNT_LIMITED = 2,
  EM_GOODS_TIME_LIMITED = 3,
  EM_GOODS_DISCOUNT = 4,
  EM_GOODS_HOT = 5,
  EM_GOODS_NEW = 6,
  EM_GOODS_SELL_OUT = 7,
  EM_GOODS_INACTIVE = 8,
  EM_GOODS_TIME_COUNT = 9
};
const ::google::protobuf::EnumDescriptor* IBSTORE_FLAG_descriptor();
bool IBSTORE_FLAG_IsValid(int value);
const IBSTORE_FLAG IBSTORE_FLAG_MIN = EM_GOODS_RECOMMEND;
const IBSTORE_FLAG IBSTORE_FLAG_MAX = EM_GOODS_TIME_COUNT;

inline const ::std::string& IBSTORE_FLAG_Name(IBSTORE_FLAG value) {
  return ::google::protobuf::internal::NameOfEnum(
    IBSTORE_FLAG_descriptor(), value);
}
inline bool IBSTORE_FLAG_Parse(
    const ::std::string& name, IBSTORE_FLAG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IBSTORE_FLAG>(
    IBSTORE_FLAG_descriptor(), name, value);
}
// ===================================================================

class PBLocation : public ::google::protobuf::Message {
 public:
  PBLocation();
  virtual ~PBLocation();
  
  PBLocation(const PBLocation& from);
  
  inline PBLocation& operator=(const PBLocation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLocation& default_instance();
  void Swap(PBLocation* other);
  
  // implements Message ----------------------------------------------
  
  PBLocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLocation& from);
  void MergeFrom(const PBLocation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);
  
  // optional uint32 row = 2;
  inline bool has_row() const;
  inline void clear_row();
  static const int kRowFieldNumber = 2;
  inline ::google::protobuf::uint32 row() const;
  inline void set_row(::google::protobuf::uint32 value);
  
  // optional uint32 col = 3;
  inline bool has_col() const;
  inline void clear_col();
  static const int kColFieldNumber = 3;
  inline ::google::protobuf::uint32 col() const;
  inline void set_col(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 row_;
  ::google::protobuf::uint32 col_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLocation* default_instance_;
};
// -------------------------------------------------------------------

class PBIbMoney : public ::google::protobuf::Message {
 public:
  PBIbMoney();
  virtual ~PBIbMoney();
  
  PBIbMoney(const PBIbMoney& from);
  
  inline PBIbMoney& operator=(const PBIbMoney& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBIbMoney& default_instance();
  void Swap(PBIbMoney* other);
  
  // implements Message ----------------------------------------------
  
  PBIbMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBIbMoney& from);
  void MergeFrom(const PBIbMoney& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 unit = 1;
  inline bool has_unit() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 1;
  inline ::google::protobuf::uint32 unit() const;
  inline void set_unit(::google::protobuf::uint32 value);
  
  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 unit_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBIbMoney* default_instance_;
};
// -------------------------------------------------------------------

class PBIbItemOnSale : public ::google::protobuf::Message {
 public:
  PBIbItemOnSale();
  virtual ~PBIbItemOnSale();
  
  PBIbItemOnSale(const PBIbItemOnSale& from);
  
  inline PBIbItemOnSale& operator=(const PBIbItemOnSale& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBIbItemOnSale& default_instance();
  void Swap(PBIbItemOnSale* other);
  
  // implements Message ----------------------------------------------
  
  PBIbItemOnSale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBIbItemOnSale& from);
  void MergeFrom(const PBIbItemOnSale& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 GoodsID = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemCount = 3;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 itemcount() const;
  inline void set_itemcount(::google::protobuf::uint32 value);
  
  // optional int32 GoodsCount = 4;
  inline bool has_goodscount() const;
  inline void clear_goodscount();
  static const int kGoodsCountFieldNumber = 4;
  inline ::google::protobuf::int32 goodscount() const;
  inline void set_goodscount(::google::protobuf::int32 value);
  
  // optional .PBIbMoney GoodsPrice = 5;
  inline bool has_goodsprice() const;
  inline void clear_goodsprice();
  static const int kGoodsPriceFieldNumber = 5;
  inline const ::PBIbMoney& goodsprice() const;
  inline ::PBIbMoney* mutable_goodsprice();
  
  // optional .PBIbMoney Discount = 6;
  inline bool has_discount() const;
  inline void clear_discount();
  static const int kDiscountFieldNumber = 6;
  inline const ::PBIbMoney& discount() const;
  inline ::PBIbMoney* mutable_discount();
  
  // optional int32 ExpiryTime = 7;
  inline bool has_expirytime() const;
  inline void clear_expirytime();
  static const int kExpiryTimeFieldNumber = 7;
  inline ::google::protobuf::int32 expirytime() const;
  inline void set_expirytime(::google::protobuf::int32 value);
  
  // optional int32 ColdTime = 8;
  inline bool has_coldtime() const;
  inline void clear_coldtime();
  static const int kColdTimeFieldNumber = 8;
  inline ::google::protobuf::int32 coldtime() const;
  inline void set_coldtime(::google::protobuf::int32 value);
  
  // optional int32 ElapsedTime = 9;
  inline bool has_elapsedtime() const;
  inline void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 9;
  inline ::google::protobuf::int32 elapsedtime() const;
  inline void set_elapsedtime(::google::protobuf::int32 value);
  
  // optional uint32 Active = 10;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 10;
  inline ::google::protobuf::uint32 active() const;
  inline void set_active(::google::protobuf::uint32 value);
  
  // optional string GoodsName = 11;
  inline bool has_goodsname() const;
  inline void clear_goodsname();
  static const int kGoodsNameFieldNumber = 11;
  inline const ::std::string& goodsname() const;
  inline void set_goodsname(const ::std::string& value);
  inline void set_goodsname(const char* value);
  inline void set_goodsname(const char* value, size_t size);
  inline ::std::string* mutable_goodsname();
  
  // optional string GoodsDesc = 12;
  inline bool has_goodsdesc() const;
  inline void clear_goodsdesc();
  static const int kGoodsDescFieldNumber = 12;
  inline const ::std::string& goodsdesc() const;
  inline void set_goodsdesc(const ::std::string& value);
  inline void set_goodsdesc(const char* value);
  inline void set_goodsdesc(const char* value, size_t size);
  inline ::std::string* mutable_goodsdesc();
  
  // optional int32 IsPack = 13;
  inline bool has_ispack() const;
  inline void clear_ispack();
  static const int kIsPackFieldNumber = 13;
  inline ::google::protobuf::int32 ispack() const;
  inline void set_ispack(::google::protobuf::int32 value);
  
  // optional int32 Flag = 14;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 14;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);
  
  // optional int32 LimitPerChar = 15;
  inline bool has_limitperchar() const;
  inline void clear_limitperchar();
  static const int kLimitPerCharFieldNumber = 15;
  inline ::google::protobuf::int32 limitperchar() const;
  inline void set_limitperchar(::google::protobuf::int32 value);
  
  // optional int32 LimitType = 16;
  inline bool has_limittype() const;
  inline void clear_limittype();
  static const int kLimitTypeFieldNumber = 16;
  inline ::google::protobuf::int32 limittype() const;
  inline void set_limittype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemcount_;
  ::google::protobuf::int32 goodscount_;
  ::PBIbMoney* goodsprice_;
  ::PBIbMoney* discount_;
  ::google::protobuf::int32 expirytime_;
  ::google::protobuf::int32 coldtime_;
  ::google::protobuf::int32 elapsedtime_;
  ::google::protobuf::uint32 active_;
  ::std::string* goodsname_;
  static const ::std::string _default_goodsname_;
  ::std::string* goodsdesc_;
  static const ::std::string _default_goodsdesc_;
  ::google::protobuf::int32 ispack_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 limitperchar_;
  ::google::protobuf::int32 limittype_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBIbItemOnSale* default_instance_;
};
// -------------------------------------------------------------------

class CMessageListIbItemsRequest : public ::google::protobuf::Message {
 public:
  CMessageListIbItemsRequest();
  virtual ~CMessageListIbItemsRequest();
  
  CMessageListIbItemsRequest(const CMessageListIbItemsRequest& from);
  
  inline CMessageListIbItemsRequest& operator=(const CMessageListIbItemsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageListIbItemsRequest& default_instance();
  void Swap(CMessageListIbItemsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageListIbItemsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageListIbItemsRequest& from);
  void MergeFrom(const CMessageListIbItemsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // optional uint32 IsOpenRMBShopUI = 2;
  inline bool has_isopenrmbshopui() const;
  inline void clear_isopenrmbshopui();
  static const int kIsOpenRMBShopUIFieldNumber = 2;
  inline ::google::protobuf::uint32 isopenrmbshopui() const;
  inline void set_isopenrmbshopui(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 isopenrmbshopui_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageListIbItemsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageListIbItemsResponse : public ::google::protobuf::Message {
 public:
  CMessageListIbItemsResponse();
  virtual ~CMessageListIbItemsResponse();
  
  CMessageListIbItemsResponse(const CMessageListIbItemsResponse& from);
  
  inline CMessageListIbItemsResponse& operator=(const CMessageListIbItemsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageListIbItemsResponse& default_instance();
  void Swap(CMessageListIbItemsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageListIbItemsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageListIbItemsResponse& from);
  void MergeFrom(const CMessageListIbItemsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);
  
  // optional uint32 Version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // repeated .PBIbMoney RemainMoneys = 3;
  inline int remainmoneys_size() const;
  inline void clear_remainmoneys();
  static const int kRemainMoneysFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbMoney >& remainmoneys() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbMoney >* mutable_remainmoneys();
  inline const ::PBIbMoney& remainmoneys(int index) const;
  inline ::PBIbMoney* mutable_remainmoneys(int index);
  inline ::PBIbMoney* add_remainmoneys();
  
  // repeated .PBIbItemOnSale Goods = 4;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale >& goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale >* mutable_goods();
  inline const ::PBIbItemOnSale& goods(int index) const;
  inline ::PBIbItemOnSale* mutable_goods(int index);
  inline ::PBIbItemOnSale* add_goods();
  
  // repeated .PBIbStore IbStore = 5;
  inline int ibstore_size() const;
  inline void clear_ibstore();
  static const int kIbStoreFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbStore >& ibstore() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbStore >* mutable_ibstore();
  inline const ::PBIbStore& ibstore(int index) const;
  inline ::PBIbStore* mutable_ibstore(int index);
  inline ::PBIbStore* add_ibstore();
  
  // optional string Bulletin = 6;
  inline bool has_bulletin() const;
  inline void clear_bulletin();
  static const int kBulletinFieldNumber = 6;
  inline const ::std::string& bulletin() const;
  inline void set_bulletin(const ::std::string& value);
  inline void set_bulletin(const char* value);
  inline void set_bulletin(const char* value, size_t size);
  inline ::std::string* mutable_bulletin();
  
  // repeated .PBIbSubTab FocusTab = 7;
  inline int focustab_size() const;
  inline void clear_focustab();
  static const int kFocusTabFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >& focustab() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >* mutable_focustab();
  inline const ::PBIbSubTab& focustab(int index) const;
  inline ::PBIbSubTab* mutable_focustab(int index);
  inline ::PBIbSubTab* add_focustab();
  
  // optional uint32 IsOpenRMBShopUI = 8;
  inline bool has_isopenrmbshopui() const;
  inline void clear_isopenrmbshopui();
  static const int kIsOpenRMBShopUIFieldNumber = 8;
  inline ::google::protobuf::uint32 isopenrmbshopui() const;
  inline void set_isopenrmbshopui(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 error_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::RepeatedPtrField< ::PBIbMoney > remainmoneys_;
  ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale > goods_;
  ::google::protobuf::RepeatedPtrField< ::PBIbStore > ibstore_;
  ::std::string* bulletin_;
  static const ::std::string _default_bulletin_;
  ::google::protobuf::RepeatedPtrField< ::PBIbSubTab > focustab_;
  ::google::protobuf::uint32 isopenrmbshopui_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageListIbItemsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePurchaseIbItemRequest : public ::google::protobuf::Message {
 public:
  CMessagePurchaseIbItemRequest();
  virtual ~CMessagePurchaseIbItemRequest();
  
  CMessagePurchaseIbItemRequest(const CMessagePurchaseIbItemRequest& from);
  
  inline CMessagePurchaseIbItemRequest& operator=(const CMessagePurchaseIbItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePurchaseIbItemRequest& default_instance();
  void Swap(CMessagePurchaseIbItemRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePurchaseIbItemRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePurchaseIbItemRequest& from);
  void MergeFrom(const CMessagePurchaseIbItemRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 GoodsID = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);
  
  // optional uint32 GoodsCount = 2;
  inline bool has_goodscount() const;
  inline void clear_goodscount();
  static const int kGoodsCountFieldNumber = 2;
  inline ::google::protobuf::uint32 goodscount() const;
  inline void set_goodscount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 goodscount_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePurchaseIbItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePurchaseIbItemResponse : public ::google::protobuf::Message {
 public:
  CMessagePurchaseIbItemResponse();
  virtual ~CMessagePurchaseIbItemResponse();
  
  CMessagePurchaseIbItemResponse(const CMessagePurchaseIbItemResponse& from);
  
  inline CMessagePurchaseIbItemResponse& operator=(const CMessagePurchaseIbItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePurchaseIbItemResponse& default_instance();
  void Swap(CMessagePurchaseIbItemResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePurchaseIbItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePurchaseIbItemResponse& from);
  void MergeFrom(const CMessagePurchaseIbItemResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional int32 TransID = 3;
  inline bool has_transid() const;
  inline void clear_transid();
  static const int kTransIDFieldNumber = 3;
  inline ::google::protobuf::int32 transid() const;
  inline void set_transid(::google::protobuf::int32 value);
  
  // optional uint32 GoodsID = 4;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);
  
  // optional uint32 GoodsCount = 5;
  inline bool has_goodscount() const;
  inline void clear_goodscount();
  static const int kGoodsCountFieldNumber = 5;
  inline ::google::protobuf::uint32 goodscount() const;
  inline void set_goodscount(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 6;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 6;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemCount = 7;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemCountFieldNumber = 7;
  inline ::google::protobuf::uint32 itemcount() const;
  inline void set_itemcount(::google::protobuf::uint32 value);
  
  // optional .PBIbMoney GoodsCost = 8;
  inline bool has_goodscost() const;
  inline void clear_goodscost();
  static const int kGoodsCostFieldNumber = 8;
  inline const ::PBIbMoney& goodscost() const;
  inline ::PBIbMoney* mutable_goodscost();
  
  // optional .PBIbMoney Remained = 9;
  inline bool has_remained() const;
  inline void clear_remained();
  static const int kRemainedFieldNumber = 9;
  inline const ::PBIbMoney& remained() const;
  inline ::PBIbMoney* mutable_remained();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 error_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::int32 transid_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 goodscount_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemcount_;
  ::PBIbMoney* goodscost_;
  ::PBIbMoney* remained_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePurchaseIbItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRoleIbTransNotify : public ::google::protobuf::Message {
 public:
  CMessageRoleIbTransNotify();
  virtual ~CMessageRoleIbTransNotify();
  
  CMessageRoleIbTransNotify(const CMessageRoleIbTransNotify& from);
  
  inline CMessageRoleIbTransNotify& operator=(const CMessageRoleIbTransNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRoleIbTransNotify& default_instance();
  void Swap(CMessageRoleIbTransNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRoleIbTransNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRoleIbTransNotify& from);
  void MergeFrom(const CMessageRoleIbTransNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 TransID = 1;
  inline bool has_transid() const;
  inline void clear_transid();
  static const int kTransIDFieldNumber = 1;
  inline ::google::protobuf::int32 transid() const;
  inline void set_transid(::google::protobuf::int32 value);
  
  // optional int32 Successful = 2;
  inline bool has_successful() const;
  inline void clear_successful();
  static const int kSuccessfulFieldNumber = 2;
  inline ::google::protobuf::int32 successful() const;
  inline void set_successful(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 transid_;
  ::google::protobuf::int32 successful_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRoleIbTransNotify* default_instance_;
};
// -------------------------------------------------------------------

class PBIbSubTab : public ::google::protobuf::Message {
 public:
  PBIbSubTab();
  virtual ~PBIbSubTab();
  
  PBIbSubTab(const PBIbSubTab& from);
  
  inline PBIbSubTab& operator=(const PBIbSubTab& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBIbSubTab& default_instance();
  void Swap(PBIbSubTab* other);
  
  // implements Message ----------------------------------------------
  
  PBIbSubTab* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBIbSubTab& from);
  void MergeFrom(const PBIbSubTab& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SubTabID = 1;
  inline bool has_subtabid() const;
  inline void clear_subtabid();
  static const int kSubTabIDFieldNumber = 1;
  inline ::google::protobuf::uint32 subtabid() const;
  inline void set_subtabid(::google::protobuf::uint32 value);
  
  // optional string SubTabName = 2;
  inline bool has_subtabname() const;
  inline void clear_subtabname();
  static const int kSubTabNameFieldNumber = 2;
  inline const ::std::string& subtabname() const;
  inline void set_subtabname(const ::std::string& value);
  inline void set_subtabname(const char* value);
  inline void set_subtabname(const char* value, size_t size);
  inline ::std::string* mutable_subtabname();
  
  // repeated uint32 GoodsID = 3;
  inline int goodsid_size() const;
  inline void clear_goodsid();
  static const int kGoodsIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& goodsid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_goodsid();
  inline ::google::protobuf::uint32 goodsid(int index) const;
  inline void set_goodsid(int index, ::google::protobuf::uint32 value);
  inline void add_goodsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 subtabid_;
  ::std::string* subtabname_;
  static const ::std::string _default_subtabname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > goodsid_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBIbSubTab* default_instance_;
};
// -------------------------------------------------------------------

class PBIbTab : public ::google::protobuf::Message {
 public:
  PBIbTab();
  virtual ~PBIbTab();
  
  PBIbTab(const PBIbTab& from);
  
  inline PBIbTab& operator=(const PBIbTab& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBIbTab& default_instance();
  void Swap(PBIbTab* other);
  
  // implements Message ----------------------------------------------
  
  PBIbTab* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBIbTab& from);
  void MergeFrom(const PBIbTab& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TabID = 1;
  inline bool has_tabid() const;
  inline void clear_tabid();
  static const int kTabIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tabid() const;
  inline void set_tabid(::google::protobuf::uint32 value);
  
  // optional string TabName = 2;
  inline bool has_tabname() const;
  inline void clear_tabname();
  static const int kTabNameFieldNumber = 2;
  inline const ::std::string& tabname() const;
  inline void set_tabname(const ::std::string& value);
  inline void set_tabname(const char* value);
  inline void set_tabname(const char* value, size_t size);
  inline ::std::string* mutable_tabname();
  
  // repeated .PBIbSubTab SubTab = 3;
  inline int subtab_size() const;
  inline void clear_subtab();
  static const int kSubTabFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >& subtab() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >* mutable_subtab();
  inline const ::PBIbSubTab& subtab(int index) const;
  inline ::PBIbSubTab* mutable_subtab(int index);
  inline ::PBIbSubTab* add_subtab();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tabid_;
  ::std::string* tabname_;
  static const ::std::string _default_tabname_;
  ::google::protobuf::RepeatedPtrField< ::PBIbSubTab > subtab_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBIbTab* default_instance_;
};
// -------------------------------------------------------------------

class PBIbStore : public ::google::protobuf::Message {
 public:
  PBIbStore();
  virtual ~PBIbStore();
  
  PBIbStore(const PBIbStore& from);
  
  inline PBIbStore& operator=(const PBIbStore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBIbStore& default_instance();
  void Swap(PBIbStore* other);
  
  // implements Message ----------------------------------------------
  
  PBIbStore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBIbStore& from);
  void MergeFrom(const PBIbStore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PageID = 1;
  inline bool has_pageid() const;
  inline void clear_pageid();
  static const int kPageIDFieldNumber = 1;
  inline ::google::protobuf::uint32 pageid() const;
  inline void set_pageid(::google::protobuf::uint32 value);
  
  // optional string PageName = 2;
  inline bool has_pagename() const;
  inline void clear_pagename();
  static const int kPageNameFieldNumber = 2;
  inline const ::std::string& pagename() const;
  inline void set_pagename(const ::std::string& value);
  inline void set_pagename(const char* value);
  inline void set_pagename(const char* value, size_t size);
  inline ::std::string* mutable_pagename();
  
  // repeated .PBIbTab Tab = 3;
  inline int tab_size() const;
  inline void clear_tab();
  static const int kTabFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBIbTab >& tab() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIbTab >* mutable_tab();
  inline const ::PBIbTab& tab(int index) const;
  inline ::PBIbTab* mutable_tab(int index);
  inline ::PBIbTab* add_tab();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 pageid_;
  ::std::string* pagename_;
  static const ::std::string _default_pagename_;
  ::google::protobuf::RepeatedPtrField< ::PBIbTab > tab_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBIbStore* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUserChargeNotice : public ::google::protobuf::Message {
 public:
  CMessageUserChargeNotice();
  virtual ~CMessageUserChargeNotice();
  
  CMessageUserChargeNotice(const CMessageUserChargeNotice& from);
  
  inline CMessageUserChargeNotice& operator=(const CMessageUserChargeNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUserChargeNotice& default_instance();
  void Swap(CMessageUserChargeNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUserChargeNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUserChargeNotice& from);
  void MergeFrom(const CMessageUserChargeNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 DetailID = 1;
  inline bool has_detailid() const;
  inline void clear_detailid();
  static const int kDetailIDFieldNumber = 1;
  inline ::google::protobuf::int64 detailid() const;
  inline void set_detailid(::google::protobuf::int64 value);
  
  // optional int32 UserID = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 SubjectID = 3;
  inline bool has_subjectid() const;
  inline void clear_subjectid();
  static const int kSubjectIDFieldNumber = 3;
  inline ::google::protobuf::int32 subjectid() const;
  inline void set_subjectid(::google::protobuf::int32 value);
  
  // optional int32 Amount = 4;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 4;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 detailid_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 subjectid_;
  ::google::protobuf::int32 amount_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUserChargeNotice* default_instance_;
};
// -------------------------------------------------------------------

class PBPromotion : public ::google::protobuf::Message {
 public:
  PBPromotion();
  virtual ~PBPromotion();
  
  PBPromotion(const PBPromotion& from);
  
  inline PBPromotion& operator=(const PBPromotion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPromotion& default_instance();
  void Swap(PBPromotion* other);
  
  // implements Message ----------------------------------------------
  
  PBPromotion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPromotion& from);
  void MergeFrom(const PBPromotion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 GoodsID = 1;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 goodsid() const;
  inline void set_goodsid(::google::protobuf::uint32 value);
  
  // optional int32 RemainCount = 2;
  inline bool has_remaincount() const;
  inline void clear_remaincount();
  static const int kRemainCountFieldNumber = 2;
  inline ::google::protobuf::int32 remaincount() const;
  inline void set_remaincount(::google::protobuf::int32 value);
  
  // optional int32 BeginTime = 3;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::int32 begintime() const;
  inline void set_begintime(::google::protobuf::int32 value);
  
  // optional int32 EndTime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int32 endtime() const;
  inline void set_endtime(::google::protobuf::int32 value);
  
  // optional int32 MaxCount = 5;
  inline bool has_maxcount() const;
  inline void clear_maxcount();
  static const int kMaxCountFieldNumber = 5;
  inline ::google::protobuf::int32 maxcount() const;
  inline void set_maxcount(::google::protobuf::int32 value);
  
  // optional int32 ColdNum = 6;
  inline bool has_coldnum() const;
  inline void clear_coldnum();
  static const int kColdNumFieldNumber = 6;
  inline ::google::protobuf::int32 coldnum() const;
  inline void set_coldnum(::google::protobuf::int32 value);
  
  // optional int32 ColdTime = 7;
  inline bool has_coldtime() const;
  inline void clear_coldtime();
  static const int kColdTimeFieldNumber = 7;
  inline ::google::protobuf::int32 coldtime() const;
  inline void set_coldtime(::google::protobuf::int32 value);
  
  // optional int32 ElapsedTime = 8;
  inline bool has_elapsedtime() const;
  inline void clear_elapsedtime();
  static const int kElapsedTimeFieldNumber = 8;
  inline ::google::protobuf::int32 elapsedtime() const;
  inline void set_elapsedtime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::int32 remaincount_;
  ::google::protobuf::int32 begintime_;
  ::google::protobuf::int32 endtime_;
  ::google::protobuf::int32 maxcount_;
  ::google::protobuf::int32 coldnum_;
  ::google::protobuf::int32 coldtime_;
  ::google::protobuf::int32 elapsedtime_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPromotion* default_instance_;
};
// -------------------------------------------------------------------

class CMessageIbItemRemainNotice : public ::google::protobuf::Message {
 public:
  CMessageIbItemRemainNotice();
  virtual ~CMessageIbItemRemainNotice();
  
  CMessageIbItemRemainNotice(const CMessageIbItemRemainNotice& from);
  
  inline CMessageIbItemRemainNotice& operator=(const CMessageIbItemRemainNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageIbItemRemainNotice& default_instance();
  void Swap(CMessageIbItemRemainNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageIbItemRemainNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageIbItemRemainNotice& from);
  void MergeFrom(const CMessageIbItemRemainNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPromotion promotion = 1;
  inline int promotion_size() const;
  inline void clear_promotion();
  static const int kPromotionFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPromotion >& promotion() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPromotion >* mutable_promotion();
  inline const ::PBPromotion& promotion(int index) const;
  inline ::PBPromotion* mutable_promotion(int index);
  inline ::PBPromotion* add_promotion();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPromotion > promotion_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageIbItemRemainNotice* default_instance_;
};
// -------------------------------------------------------------------

class PBConsume : public ::google::protobuf::Message {
 public:
  PBConsume();
  virtual ~PBConsume();
  
  PBConsume(const PBConsume& from);
  
  inline PBConsume& operator=(const PBConsume& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBConsume& default_instance();
  void Swap(PBConsume* other);
  
  // implements Message ----------------------------------------------
  
  PBConsume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBConsume& from);
  void MergeFrom(const PBConsume& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ConsumeType = 1;
  inline bool has_consumetype() const;
  inline void clear_consumetype();
  static const int kConsumeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 consumetype() const;
  inline void set_consumetype(::google::protobuf::uint32 value);
  
  // optional uint32 ConsumeSprice = 2;
  inline bool has_consumesprice() const;
  inline void clear_consumesprice();
  static const int kConsumeSpriceFieldNumber = 2;
  inline ::google::protobuf::uint32 consumesprice() const;
  inline void set_consumesprice(::google::protobuf::uint32 value);
  
  // optional uint32 TamplateRate = 3;
  inline bool has_tamplaterate() const;
  inline void clear_tamplaterate();
  static const int kTamplateRateFieldNumber = 3;
  inline ::google::protobuf::uint32 tamplaterate() const;
  inline void set_tamplaterate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 consumetype_;
  ::google::protobuf::uint32 consumesprice_;
  ::google::protobuf::uint32 tamplaterate_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBConsume* default_instance_;
};
// -------------------------------------------------------------------

class PBFuncStore : public ::google::protobuf::Message {
 public:
  PBFuncStore();
  virtual ~PBFuncStore();
  
  PBFuncStore(const PBFuncStore& from);
  
  inline PBFuncStore& operator=(const PBFuncStore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFuncStore& default_instance();
  void Swap(PBFuncStore* other);
  
  // implements Message ----------------------------------------------
  
  PBFuncStore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFuncStore& from);
  void MergeFrom(const PBFuncStore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FuncID = 1;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncIDFieldNumber = 1;
  inline ::google::protobuf::uint32 funcid() const;
  inline void set_funcid(::google::protobuf::uint32 value);
  
  // optional string FuncName = 2;
  inline bool has_funcname() const;
  inline void clear_funcname();
  static const int kFuncNameFieldNumber = 2;
  inline const ::std::string& funcname() const;
  inline void set_funcname(const ::std::string& value);
  inline void set_funcname(const char* value);
  inline void set_funcname(const char* value, size_t size);
  inline ::std::string* mutable_funcname();
  
  // optional uint32 FuncUnitType = 3;
  inline bool has_funcunittype() const;
  inline void clear_funcunittype();
  static const int kFuncUnitTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 funcunittype() const;
  inline void set_funcunittype(::google::protobuf::uint32 value);
  
  // repeated .PBConsume Consume = 4;
  inline int consume_size() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBConsume >& consume() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBConsume >* mutable_consume();
  inline const ::PBConsume& consume(int index) const;
  inline ::PBConsume* mutable_consume(int index);
  inline ::PBConsume* add_consume();
  
  // optional uint32 FuncShow = 5;
  inline bool has_funcshow() const;
  inline void clear_funcshow();
  static const int kFuncShowFieldNumber = 5;
  inline ::google::protobuf::uint32 funcshow() const;
  inline void set_funcshow(::google::protobuf::uint32 value);
  
  // optional uint32 DefaultConsume = 6;
  inline bool has_defaultconsume() const;
  inline void clear_defaultconsume();
  static const int kDefaultConsumeFieldNumber = 6;
  inline ::google::protobuf::uint32 defaultconsume() const;
  inline void set_defaultconsume(::google::protobuf::uint32 value);
  
  // optional uint32 FuncUnit = 7;
  inline bool has_funcunit() const;
  inline void clear_funcunit();
  static const int kFuncUnitFieldNumber = 7;
  inline ::google::protobuf::uint32 funcunit() const;
  inline void set_funcunit(::google::protobuf::uint32 value);
  
  // optional uint32 FuncCountLimit = 8;
  inline bool has_funccountlimit() const;
  inline void clear_funccountlimit();
  static const int kFuncCountLimitFieldNumber = 8;
  inline ::google::protobuf::uint32 funccountlimit() const;
  inline void set_funccountlimit(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 funcid_;
  ::std::string* funcname_;
  static const ::std::string _default_funcname_;
  ::google::protobuf::uint32 funcunittype_;
  ::google::protobuf::RepeatedPtrField< ::PBConsume > consume_;
  ::google::protobuf::uint32 funcshow_;
  ::google::protobuf::uint32 defaultconsume_;
  ::google::protobuf::uint32 funcunit_;
  ::google::protobuf::uint32 funccountlimit_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBFuncStore* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetFuncConsumesRequest : public ::google::protobuf::Message {
 public:
  CMessageGetFuncConsumesRequest();
  virtual ~CMessageGetFuncConsumesRequest();
  
  CMessageGetFuncConsumesRequest(const CMessageGetFuncConsumesRequest& from);
  
  inline CMessageGetFuncConsumesRequest& operator=(const CMessageGetFuncConsumesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetFuncConsumesRequest& default_instance();
  void Swap(CMessageGetFuncConsumesRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetFuncConsumesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetFuncConsumesRequest& from);
  void MergeFrom(const CMessageGetFuncConsumesRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetFuncConsumesRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetFuncConsumesResponse : public ::google::protobuf::Message {
 public:
  CMessageGetFuncConsumesResponse();
  virtual ~CMessageGetFuncConsumesResponse();
  
  CMessageGetFuncConsumesResponse(const CMessageGetFuncConsumesResponse& from);
  
  inline CMessageGetFuncConsumesResponse& operator=(const CMessageGetFuncConsumesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetFuncConsumesResponse& default_instance();
  void Swap(CMessageGetFuncConsumesResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetFuncConsumesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetFuncConsumesResponse& from);
  void MergeFrom(const CMessageGetFuncConsumesResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);
  
  // repeated .PBFuncStore FuncStore = 2;
  inline int funcstore_size() const;
  inline void clear_funcstore();
  static const int kFuncStoreFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBFuncStore >& funcstore() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFuncStore >* mutable_funcstore();
  inline const ::PBFuncStore& funcstore(int index) const;
  inline ::PBFuncStore* mutable_funcstore(int index);
  inline ::PBFuncStore* add_funcstore();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 error_;
  ::google::protobuf::RepeatedPtrField< ::PBFuncStore > funcstore_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetFuncConsumesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePurchaseFuncRequest : public ::google::protobuf::Message {
 public:
  CMessagePurchaseFuncRequest();
  virtual ~CMessagePurchaseFuncRequest();
  
  CMessagePurchaseFuncRequest(const CMessagePurchaseFuncRequest& from);
  
  inline CMessagePurchaseFuncRequest& operator=(const CMessagePurchaseFuncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePurchaseFuncRequest& default_instance();
  void Swap(CMessagePurchaseFuncRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePurchaseFuncRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePurchaseFuncRequest& from);
  void MergeFrom(const CMessagePurchaseFuncRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FuncID = 1;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncIDFieldNumber = 1;
  inline ::google::protobuf::uint32 funcid() const;
  inline void set_funcid(::google::protobuf::uint32 value);
  
  // optional uint32 FuncCount = 2;
  inline bool has_funccount() const;
  inline void clear_funccount();
  static const int kFuncCountFieldNumber = 2;
  inline ::google::protobuf::uint32 funccount() const;
  inline void set_funccount(::google::protobuf::uint32 value);
  
  // optional uint32 ConsumeType = 3;
  inline bool has_consumetype() const;
  inline void clear_consumetype();
  static const int kConsumeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 consumetype() const;
  inline void set_consumetype(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraData1 = 4;
  inline bool has_extradata1() const;
  inline void clear_extradata1();
  static const int kExtraData1FieldNumber = 4;
  inline ::google::protobuf::uint32 extradata1() const;
  inline void set_extradata1(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraData2 = 5;
  inline bool has_extradata2() const;
  inline void clear_extradata2();
  static const int kExtraData2FieldNumber = 5;
  inline ::google::protobuf::uint32 extradata2() const;
  inline void set_extradata2(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 funcid_;
  ::google::protobuf::uint32 funccount_;
  ::google::protobuf::uint32 consumetype_;
  ::google::protobuf::uint32 extradata1_;
  ::google::protobuf::uint32 extradata2_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePurchaseFuncRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePurchaseFuncResponse : public ::google::protobuf::Message {
 public:
  CMessagePurchaseFuncResponse();
  virtual ~CMessagePurchaseFuncResponse();
  
  CMessagePurchaseFuncResponse(const CMessagePurchaseFuncResponse& from);
  
  inline CMessagePurchaseFuncResponse& operator=(const CMessagePurchaseFuncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePurchaseFuncResponse& default_instance();
  void Swap(CMessagePurchaseFuncResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePurchaseFuncResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePurchaseFuncResponse& from);
  void MergeFrom(const CMessagePurchaseFuncResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Error = 1;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 1;
  inline ::google::protobuf::int32 error() const;
  inline void set_error(::google::protobuf::int32 value);
  
  // optional uint32 FuncID = 2;
  inline bool has_funcid() const;
  inline void clear_funcid();
  static const int kFuncIDFieldNumber = 2;
  inline ::google::protobuf::uint32 funcid() const;
  inline void set_funcid(::google::protobuf::uint32 value);
  
  // optional uint32 FuncCount = 3;
  inline bool has_funccount() const;
  inline void clear_funccount();
  static const int kFuncCountFieldNumber = 3;
  inline ::google::protobuf::uint32 funccount() const;
  inline void set_funccount(::google::protobuf::uint32 value);
  
  // optional uint32 ConsumeType = 4;
  inline bool has_consumetype() const;
  inline void clear_consumetype();
  static const int kConsumeTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 consumetype() const;
  inline void set_consumetype(::google::protobuf::uint32 value);
  
  // optional uint32 FuncsCost = 5;
  inline bool has_funcscost() const;
  inline void clear_funcscost();
  static const int kFuncsCostFieldNumber = 5;
  inline ::google::protobuf::uint32 funcscost() const;
  inline void set_funcscost(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraData1 = 6;
  inline bool has_extradata1() const;
  inline void clear_extradata1();
  static const int kExtraData1FieldNumber = 6;
  inline ::google::protobuf::uint32 extradata1() const;
  inline void set_extradata1(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraData2 = 7;
  inline bool has_extradata2() const;
  inline void clear_extradata2();
  static const int kExtraData2FieldNumber = 7;
  inline ::google::protobuf::uint32 extradata2() const;
  inline void set_extradata2(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 error_;
  ::google::protobuf::uint32 funcid_;
  ::google::protobuf::uint32 funccount_;
  ::google::protobuf::uint32 consumetype_;
  ::google::protobuf::uint32 funcscost_;
  ::google::protobuf::uint32 extradata1_;
  ::google::protobuf::uint32 extradata2_;
  friend void  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_AssignDesc_ibstore_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_ibstore_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePurchaseFuncResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// PBLocation

// optional uint32 page = 1;
inline bool PBLocation::has_page() const {
  return _has_bit(0);
}
inline void PBLocation::clear_page() {
  page_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBLocation::page() const {
  return page_;
}
inline void PBLocation::set_page(::google::protobuf::uint32 value) {
  _set_bit(0);
  page_ = value;
}

// optional uint32 row = 2;
inline bool PBLocation::has_row() const {
  return _has_bit(1);
}
inline void PBLocation::clear_row() {
  row_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBLocation::row() const {
  return row_;
}
inline void PBLocation::set_row(::google::protobuf::uint32 value) {
  _set_bit(1);
  row_ = value;
}

// optional uint32 col = 3;
inline bool PBLocation::has_col() const {
  return _has_bit(2);
}
inline void PBLocation::clear_col() {
  col_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBLocation::col() const {
  return col_;
}
inline void PBLocation::set_col(::google::protobuf::uint32 value) {
  _set_bit(2);
  col_ = value;
}

// -------------------------------------------------------------------

// PBIbMoney

// optional uint32 unit = 1;
inline bool PBIbMoney::has_unit() const {
  return _has_bit(0);
}
inline void PBIbMoney::clear_unit() {
  unit_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBIbMoney::unit() const {
  return unit_;
}
inline void PBIbMoney::set_unit(::google::protobuf::uint32 value) {
  _set_bit(0);
  unit_ = value;
}

// optional int32 value = 2;
inline bool PBIbMoney::has_value() const {
  return _has_bit(1);
}
inline void PBIbMoney::clear_value() {
  value_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBIbMoney::value() const {
  return value_;
}
inline void PBIbMoney::set_value(::google::protobuf::int32 value) {
  _set_bit(1);
  value_ = value;
}

// -------------------------------------------------------------------

// PBIbItemOnSale

// optional uint32 GoodsID = 1;
inline bool PBIbItemOnSale::has_goodsid() const {
  return _has_bit(0);
}
inline void PBIbItemOnSale::clear_goodsid() {
  goodsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBIbItemOnSale::goodsid() const {
  return goodsid_;
}
inline void PBIbItemOnSale::set_goodsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  goodsid_ = value;
}

// optional uint32 ItemID = 2;
inline bool PBIbItemOnSale::has_itemid() const {
  return _has_bit(1);
}
inline void PBIbItemOnSale::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBIbItemOnSale::itemid() const {
  return itemid_;
}
inline void PBIbItemOnSale::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemid_ = value;
}

// optional uint32 ItemCount = 3;
inline bool PBIbItemOnSale::has_itemcount() const {
  return _has_bit(2);
}
inline void PBIbItemOnSale::clear_itemcount() {
  itemcount_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBIbItemOnSale::itemcount() const {
  return itemcount_;
}
inline void PBIbItemOnSale::set_itemcount(::google::protobuf::uint32 value) {
  _set_bit(2);
  itemcount_ = value;
}

// optional int32 GoodsCount = 4;
inline bool PBIbItemOnSale::has_goodscount() const {
  return _has_bit(3);
}
inline void PBIbItemOnSale::clear_goodscount() {
  goodscount_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PBIbItemOnSale::goodscount() const {
  return goodscount_;
}
inline void PBIbItemOnSale::set_goodscount(::google::protobuf::int32 value) {
  _set_bit(3);
  goodscount_ = value;
}

// optional .PBIbMoney GoodsPrice = 5;
inline bool PBIbItemOnSale::has_goodsprice() const {
  return _has_bit(4);
}
inline void PBIbItemOnSale::clear_goodsprice() {
  if (goodsprice_ != NULL) goodsprice_->::PBIbMoney::Clear();
  _clear_bit(4);
}
inline const ::PBIbMoney& PBIbItemOnSale::goodsprice() const {
  return goodsprice_ != NULL ? *goodsprice_ : *default_instance_->goodsprice_;
}
inline ::PBIbMoney* PBIbItemOnSale::mutable_goodsprice() {
  _set_bit(4);
  if (goodsprice_ == NULL) goodsprice_ = new ::PBIbMoney;
  return goodsprice_;
}

// optional .PBIbMoney Discount = 6;
inline bool PBIbItemOnSale::has_discount() const {
  return _has_bit(5);
}
inline void PBIbItemOnSale::clear_discount() {
  if (discount_ != NULL) discount_->::PBIbMoney::Clear();
  _clear_bit(5);
}
inline const ::PBIbMoney& PBIbItemOnSale::discount() const {
  return discount_ != NULL ? *discount_ : *default_instance_->discount_;
}
inline ::PBIbMoney* PBIbItemOnSale::mutable_discount() {
  _set_bit(5);
  if (discount_ == NULL) discount_ = new ::PBIbMoney;
  return discount_;
}

// optional int32 ExpiryTime = 7;
inline bool PBIbItemOnSale::has_expirytime() const {
  return _has_bit(6);
}
inline void PBIbItemOnSale::clear_expirytime() {
  expirytime_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 PBIbItemOnSale::expirytime() const {
  return expirytime_;
}
inline void PBIbItemOnSale::set_expirytime(::google::protobuf::int32 value) {
  _set_bit(6);
  expirytime_ = value;
}

// optional int32 ColdTime = 8;
inline bool PBIbItemOnSale::has_coldtime() const {
  return _has_bit(7);
}
inline void PBIbItemOnSale::clear_coldtime() {
  coldtime_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 PBIbItemOnSale::coldtime() const {
  return coldtime_;
}
inline void PBIbItemOnSale::set_coldtime(::google::protobuf::int32 value) {
  _set_bit(7);
  coldtime_ = value;
}

// optional int32 ElapsedTime = 9;
inline bool PBIbItemOnSale::has_elapsedtime() const {
  return _has_bit(8);
}
inline void PBIbItemOnSale::clear_elapsedtime() {
  elapsedtime_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 PBIbItemOnSale::elapsedtime() const {
  return elapsedtime_;
}
inline void PBIbItemOnSale::set_elapsedtime(::google::protobuf::int32 value) {
  _set_bit(8);
  elapsedtime_ = value;
}

// optional uint32 Active = 10;
inline bool PBIbItemOnSale::has_active() const {
  return _has_bit(9);
}
inline void PBIbItemOnSale::clear_active() {
  active_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBIbItemOnSale::active() const {
  return active_;
}
inline void PBIbItemOnSale::set_active(::google::protobuf::uint32 value) {
  _set_bit(9);
  active_ = value;
}

// optional string GoodsName = 11;
inline bool PBIbItemOnSale::has_goodsname() const {
  return _has_bit(10);
}
inline void PBIbItemOnSale::clear_goodsname() {
  if (goodsname_ != &_default_goodsname_) {
    goodsname_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& PBIbItemOnSale::goodsname() const {
  return *goodsname_;
}
inline void PBIbItemOnSale::set_goodsname(const ::std::string& value) {
  _set_bit(10);
  if (goodsname_ == &_default_goodsname_) {
    goodsname_ = new ::std::string;
  }
  goodsname_->assign(value);
}
inline void PBIbItemOnSale::set_goodsname(const char* value) {
  _set_bit(10);
  if (goodsname_ == &_default_goodsname_) {
    goodsname_ = new ::std::string;
  }
  goodsname_->assign(value);
}
inline void PBIbItemOnSale::set_goodsname(const char* value, size_t size) {
  _set_bit(10);
  if (goodsname_ == &_default_goodsname_) {
    goodsname_ = new ::std::string;
  }
  goodsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBIbItemOnSale::mutable_goodsname() {
  _set_bit(10);
  if (goodsname_ == &_default_goodsname_) {
    goodsname_ = new ::std::string;
  }
  return goodsname_;
}

// optional string GoodsDesc = 12;
inline bool PBIbItemOnSale::has_goodsdesc() const {
  return _has_bit(11);
}
inline void PBIbItemOnSale::clear_goodsdesc() {
  if (goodsdesc_ != &_default_goodsdesc_) {
    goodsdesc_->clear();
  }
  _clear_bit(11);
}
inline const ::std::string& PBIbItemOnSale::goodsdesc() const {
  return *goodsdesc_;
}
inline void PBIbItemOnSale::set_goodsdesc(const ::std::string& value) {
  _set_bit(11);
  if (goodsdesc_ == &_default_goodsdesc_) {
    goodsdesc_ = new ::std::string;
  }
  goodsdesc_->assign(value);
}
inline void PBIbItemOnSale::set_goodsdesc(const char* value) {
  _set_bit(11);
  if (goodsdesc_ == &_default_goodsdesc_) {
    goodsdesc_ = new ::std::string;
  }
  goodsdesc_->assign(value);
}
inline void PBIbItemOnSale::set_goodsdesc(const char* value, size_t size) {
  _set_bit(11);
  if (goodsdesc_ == &_default_goodsdesc_) {
    goodsdesc_ = new ::std::string;
  }
  goodsdesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBIbItemOnSale::mutable_goodsdesc() {
  _set_bit(11);
  if (goodsdesc_ == &_default_goodsdesc_) {
    goodsdesc_ = new ::std::string;
  }
  return goodsdesc_;
}

// optional int32 IsPack = 13;
inline bool PBIbItemOnSale::has_ispack() const {
  return _has_bit(12);
}
inline void PBIbItemOnSale::clear_ispack() {
  ispack_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 PBIbItemOnSale::ispack() const {
  return ispack_;
}
inline void PBIbItemOnSale::set_ispack(::google::protobuf::int32 value) {
  _set_bit(12);
  ispack_ = value;
}

// optional int32 Flag = 14;
inline bool PBIbItemOnSale::has_flag() const {
  return _has_bit(13);
}
inline void PBIbItemOnSale::clear_flag() {
  flag_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 PBIbItemOnSale::flag() const {
  return flag_;
}
inline void PBIbItemOnSale::set_flag(::google::protobuf::int32 value) {
  _set_bit(13);
  flag_ = value;
}

// optional int32 LimitPerChar = 15;
inline bool PBIbItemOnSale::has_limitperchar() const {
  return _has_bit(14);
}
inline void PBIbItemOnSale::clear_limitperchar() {
  limitperchar_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 PBIbItemOnSale::limitperchar() const {
  return limitperchar_;
}
inline void PBIbItemOnSale::set_limitperchar(::google::protobuf::int32 value) {
  _set_bit(14);
  limitperchar_ = value;
}

// optional int32 LimitType = 16;
inline bool PBIbItemOnSale::has_limittype() const {
  return _has_bit(15);
}
inline void PBIbItemOnSale::clear_limittype() {
  limittype_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 PBIbItemOnSale::limittype() const {
  return limittype_;
}
inline void PBIbItemOnSale::set_limittype(::google::protobuf::int32 value) {
  _set_bit(15);
  limittype_ = value;
}

// -------------------------------------------------------------------

// CMessageListIbItemsRequest

// optional uint32 Version = 1;
inline bool CMessageListIbItemsRequest::has_version() const {
  return _has_bit(0);
}
inline void CMessageListIbItemsRequest::clear_version() {
  version_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageListIbItemsRequest::version() const {
  return version_;
}
inline void CMessageListIbItemsRequest::set_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  version_ = value;
}

// optional uint32 IsOpenRMBShopUI = 2;
inline bool CMessageListIbItemsRequest::has_isopenrmbshopui() const {
  return _has_bit(1);
}
inline void CMessageListIbItemsRequest::clear_isopenrmbshopui() {
  isopenrmbshopui_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageListIbItemsRequest::isopenrmbshopui() const {
  return isopenrmbshopui_;
}
inline void CMessageListIbItemsRequest::set_isopenrmbshopui(::google::protobuf::uint32 value) {
  _set_bit(1);
  isopenrmbshopui_ = value;
}

// -------------------------------------------------------------------

// CMessageListIbItemsResponse

// optional int32 Error = 1;
inline bool CMessageListIbItemsResponse::has_error() const {
  return _has_bit(0);
}
inline void CMessageListIbItemsResponse::clear_error() {
  error_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageListIbItemsResponse::error() const {
  return error_;
}
inline void CMessageListIbItemsResponse::set_error(::google::protobuf::int32 value) {
  _set_bit(0);
  error_ = value;
}

// optional uint32 Version = 2;
inline bool CMessageListIbItemsResponse::has_version() const {
  return _has_bit(1);
}
inline void CMessageListIbItemsResponse::clear_version() {
  version_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageListIbItemsResponse::version() const {
  return version_;
}
inline void CMessageListIbItemsResponse::set_version(::google::protobuf::uint32 value) {
  _set_bit(1);
  version_ = value;
}

// repeated .PBIbMoney RemainMoneys = 3;
inline int CMessageListIbItemsResponse::remainmoneys_size() const {
  return remainmoneys_.size();
}
inline void CMessageListIbItemsResponse::clear_remainmoneys() {
  remainmoneys_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbMoney >&
CMessageListIbItemsResponse::remainmoneys() const {
  return remainmoneys_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbMoney >*
CMessageListIbItemsResponse::mutable_remainmoneys() {
  return &remainmoneys_;
}
inline const ::PBIbMoney& CMessageListIbItemsResponse::remainmoneys(int index) const {
  return remainmoneys_.Get(index);
}
inline ::PBIbMoney* CMessageListIbItemsResponse::mutable_remainmoneys(int index) {
  return remainmoneys_.Mutable(index);
}
inline ::PBIbMoney* CMessageListIbItemsResponse::add_remainmoneys() {
  return remainmoneys_.Add();
}

// repeated .PBIbItemOnSale Goods = 4;
inline int CMessageListIbItemsResponse::goods_size() const {
  return goods_.size();
}
inline void CMessageListIbItemsResponse::clear_goods() {
  goods_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale >&
CMessageListIbItemsResponse::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbItemOnSale >*
CMessageListIbItemsResponse::mutable_goods() {
  return &goods_;
}
inline const ::PBIbItemOnSale& CMessageListIbItemsResponse::goods(int index) const {
  return goods_.Get(index);
}
inline ::PBIbItemOnSale* CMessageListIbItemsResponse::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::PBIbItemOnSale* CMessageListIbItemsResponse::add_goods() {
  return goods_.Add();
}

// repeated .PBIbStore IbStore = 5;
inline int CMessageListIbItemsResponse::ibstore_size() const {
  return ibstore_.size();
}
inline void CMessageListIbItemsResponse::clear_ibstore() {
  ibstore_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbStore >&
CMessageListIbItemsResponse::ibstore() const {
  return ibstore_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbStore >*
CMessageListIbItemsResponse::mutable_ibstore() {
  return &ibstore_;
}
inline const ::PBIbStore& CMessageListIbItemsResponse::ibstore(int index) const {
  return ibstore_.Get(index);
}
inline ::PBIbStore* CMessageListIbItemsResponse::mutable_ibstore(int index) {
  return ibstore_.Mutable(index);
}
inline ::PBIbStore* CMessageListIbItemsResponse::add_ibstore() {
  return ibstore_.Add();
}

// optional string Bulletin = 6;
inline bool CMessageListIbItemsResponse::has_bulletin() const {
  return _has_bit(5);
}
inline void CMessageListIbItemsResponse::clear_bulletin() {
  if (bulletin_ != &_default_bulletin_) {
    bulletin_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageListIbItemsResponse::bulletin() const {
  return *bulletin_;
}
inline void CMessageListIbItemsResponse::set_bulletin(const ::std::string& value) {
  _set_bit(5);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageListIbItemsResponse::set_bulletin(const char* value) {
  _set_bit(5);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageListIbItemsResponse::set_bulletin(const char* value, size_t size) {
  _set_bit(5);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageListIbItemsResponse::mutable_bulletin() {
  _set_bit(5);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  return bulletin_;
}

// repeated .PBIbSubTab FocusTab = 7;
inline int CMessageListIbItemsResponse::focustab_size() const {
  return focustab_.size();
}
inline void CMessageListIbItemsResponse::clear_focustab() {
  focustab_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >&
CMessageListIbItemsResponse::focustab() const {
  return focustab_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >*
CMessageListIbItemsResponse::mutable_focustab() {
  return &focustab_;
}
inline const ::PBIbSubTab& CMessageListIbItemsResponse::focustab(int index) const {
  return focustab_.Get(index);
}
inline ::PBIbSubTab* CMessageListIbItemsResponse::mutable_focustab(int index) {
  return focustab_.Mutable(index);
}
inline ::PBIbSubTab* CMessageListIbItemsResponse::add_focustab() {
  return focustab_.Add();
}

// optional uint32 IsOpenRMBShopUI = 8;
inline bool CMessageListIbItemsResponse::has_isopenrmbshopui() const {
  return _has_bit(7);
}
inline void CMessageListIbItemsResponse::clear_isopenrmbshopui() {
  isopenrmbshopui_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageListIbItemsResponse::isopenrmbshopui() const {
  return isopenrmbshopui_;
}
inline void CMessageListIbItemsResponse::set_isopenrmbshopui(::google::protobuf::uint32 value) {
  _set_bit(7);
  isopenrmbshopui_ = value;
}

// -------------------------------------------------------------------

// CMessagePurchaseIbItemRequest

// optional uint32 GoodsID = 1;
inline bool CMessagePurchaseIbItemRequest::has_goodsid() const {
  return _has_bit(0);
}
inline void CMessagePurchaseIbItemRequest::clear_goodsid() {
  goodsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePurchaseIbItemRequest::goodsid() const {
  return goodsid_;
}
inline void CMessagePurchaseIbItemRequest::set_goodsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  goodsid_ = value;
}

// optional uint32 GoodsCount = 2;
inline bool CMessagePurchaseIbItemRequest::has_goodscount() const {
  return _has_bit(1);
}
inline void CMessagePurchaseIbItemRequest::clear_goodscount() {
  goodscount_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePurchaseIbItemRequest::goodscount() const {
  return goodscount_;
}
inline void CMessagePurchaseIbItemRequest::set_goodscount(::google::protobuf::uint32 value) {
  _set_bit(1);
  goodscount_ = value;
}

// -------------------------------------------------------------------

// CMessagePurchaseIbItemResponse

// optional int32 Error = 1;
inline bool CMessagePurchaseIbItemResponse::has_error() const {
  return _has_bit(0);
}
inline void CMessagePurchaseIbItemResponse::clear_error() {
  error_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessagePurchaseIbItemResponse::error() const {
  return error_;
}
inline void CMessagePurchaseIbItemResponse::set_error(::google::protobuf::int32 value) {
  _set_bit(0);
  error_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessagePurchaseIbItemResponse::has_roleid() const {
  return _has_bit(1);
}
inline void CMessagePurchaseIbItemResponse::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePurchaseIbItemResponse::roleid() const {
  return roleid_;
}
inline void CMessagePurchaseIbItemResponse::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional int32 TransID = 3;
inline bool CMessagePurchaseIbItemResponse::has_transid() const {
  return _has_bit(2);
}
inline void CMessagePurchaseIbItemResponse::clear_transid() {
  transid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessagePurchaseIbItemResponse::transid() const {
  return transid_;
}
inline void CMessagePurchaseIbItemResponse::set_transid(::google::protobuf::int32 value) {
  _set_bit(2);
  transid_ = value;
}

// optional uint32 GoodsID = 4;
inline bool CMessagePurchaseIbItemResponse::has_goodsid() const {
  return _has_bit(3);
}
inline void CMessagePurchaseIbItemResponse::clear_goodsid() {
  goodsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePurchaseIbItemResponse::goodsid() const {
  return goodsid_;
}
inline void CMessagePurchaseIbItemResponse::set_goodsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  goodsid_ = value;
}

// optional uint32 GoodsCount = 5;
inline bool CMessagePurchaseIbItemResponse::has_goodscount() const {
  return _has_bit(4);
}
inline void CMessagePurchaseIbItemResponse::clear_goodscount() {
  goodscount_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePurchaseIbItemResponse::goodscount() const {
  return goodscount_;
}
inline void CMessagePurchaseIbItemResponse::set_goodscount(::google::protobuf::uint32 value) {
  _set_bit(4);
  goodscount_ = value;
}

// optional uint32 ItemID = 6;
inline bool CMessagePurchaseIbItemResponse::has_itemid() const {
  return _has_bit(5);
}
inline void CMessagePurchaseIbItemResponse::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePurchaseIbItemResponse::itemid() const {
  return itemid_;
}
inline void CMessagePurchaseIbItemResponse::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(5);
  itemid_ = value;
}

// optional uint32 ItemCount = 7;
inline bool CMessagePurchaseIbItemResponse::has_itemcount() const {
  return _has_bit(6);
}
inline void CMessagePurchaseIbItemResponse::clear_itemcount() {
  itemcount_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePurchaseIbItemResponse::itemcount() const {
  return itemcount_;
}
inline void CMessagePurchaseIbItemResponse::set_itemcount(::google::protobuf::uint32 value) {
  _set_bit(6);
  itemcount_ = value;
}

// optional .PBIbMoney GoodsCost = 8;
inline bool CMessagePurchaseIbItemResponse::has_goodscost() const {
  return _has_bit(7);
}
inline void CMessagePurchaseIbItemResponse::clear_goodscost() {
  if (goodscost_ != NULL) goodscost_->::PBIbMoney::Clear();
  _clear_bit(7);
}
inline const ::PBIbMoney& CMessagePurchaseIbItemResponse::goodscost() const {
  return goodscost_ != NULL ? *goodscost_ : *default_instance_->goodscost_;
}
inline ::PBIbMoney* CMessagePurchaseIbItemResponse::mutable_goodscost() {
  _set_bit(7);
  if (goodscost_ == NULL) goodscost_ = new ::PBIbMoney;
  return goodscost_;
}

// optional .PBIbMoney Remained = 9;
inline bool CMessagePurchaseIbItemResponse::has_remained() const {
  return _has_bit(8);
}
inline void CMessagePurchaseIbItemResponse::clear_remained() {
  if (remained_ != NULL) remained_->::PBIbMoney::Clear();
  _clear_bit(8);
}
inline const ::PBIbMoney& CMessagePurchaseIbItemResponse::remained() const {
  return remained_ != NULL ? *remained_ : *default_instance_->remained_;
}
inline ::PBIbMoney* CMessagePurchaseIbItemResponse::mutable_remained() {
  _set_bit(8);
  if (remained_ == NULL) remained_ = new ::PBIbMoney;
  return remained_;
}

// -------------------------------------------------------------------

// CMessageRoleIbTransNotify

// optional int32 TransID = 1;
inline bool CMessageRoleIbTransNotify::has_transid() const {
  return _has_bit(0);
}
inline void CMessageRoleIbTransNotify::clear_transid() {
  transid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageRoleIbTransNotify::transid() const {
  return transid_;
}
inline void CMessageRoleIbTransNotify::set_transid(::google::protobuf::int32 value) {
  _set_bit(0);
  transid_ = value;
}

// optional int32 Successful = 2;
inline bool CMessageRoleIbTransNotify::has_successful() const {
  return _has_bit(1);
}
inline void CMessageRoleIbTransNotify::clear_successful() {
  successful_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageRoleIbTransNotify::successful() const {
  return successful_;
}
inline void CMessageRoleIbTransNotify::set_successful(::google::protobuf::int32 value) {
  _set_bit(1);
  successful_ = value;
}

// -------------------------------------------------------------------

// PBIbSubTab

// optional uint32 SubTabID = 1;
inline bool PBIbSubTab::has_subtabid() const {
  return _has_bit(0);
}
inline void PBIbSubTab::clear_subtabid() {
  subtabid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBIbSubTab::subtabid() const {
  return subtabid_;
}
inline void PBIbSubTab::set_subtabid(::google::protobuf::uint32 value) {
  _set_bit(0);
  subtabid_ = value;
}

// optional string SubTabName = 2;
inline bool PBIbSubTab::has_subtabname() const {
  return _has_bit(1);
}
inline void PBIbSubTab::clear_subtabname() {
  if (subtabname_ != &_default_subtabname_) {
    subtabname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBIbSubTab::subtabname() const {
  return *subtabname_;
}
inline void PBIbSubTab::set_subtabname(const ::std::string& value) {
  _set_bit(1);
  if (subtabname_ == &_default_subtabname_) {
    subtabname_ = new ::std::string;
  }
  subtabname_->assign(value);
}
inline void PBIbSubTab::set_subtabname(const char* value) {
  _set_bit(1);
  if (subtabname_ == &_default_subtabname_) {
    subtabname_ = new ::std::string;
  }
  subtabname_->assign(value);
}
inline void PBIbSubTab::set_subtabname(const char* value, size_t size) {
  _set_bit(1);
  if (subtabname_ == &_default_subtabname_) {
    subtabname_ = new ::std::string;
  }
  subtabname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBIbSubTab::mutable_subtabname() {
  _set_bit(1);
  if (subtabname_ == &_default_subtabname_) {
    subtabname_ = new ::std::string;
  }
  return subtabname_;
}

// repeated uint32 GoodsID = 3;
inline int PBIbSubTab::goodsid_size() const {
  return goodsid_.size();
}
inline void PBIbSubTab::clear_goodsid() {
  goodsid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBIbSubTab::goodsid() const {
  return goodsid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBIbSubTab::mutable_goodsid() {
  return &goodsid_;
}
inline ::google::protobuf::uint32 PBIbSubTab::goodsid(int index) const {
  return goodsid_.Get(index);
}
inline void PBIbSubTab::set_goodsid(int index, ::google::protobuf::uint32 value) {
  goodsid_.Set(index, value);
}
inline void PBIbSubTab::add_goodsid(::google::protobuf::uint32 value) {
  goodsid_.Add(value);
}

// -------------------------------------------------------------------

// PBIbTab

// optional uint32 TabID = 1;
inline bool PBIbTab::has_tabid() const {
  return _has_bit(0);
}
inline void PBIbTab::clear_tabid() {
  tabid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBIbTab::tabid() const {
  return tabid_;
}
inline void PBIbTab::set_tabid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tabid_ = value;
}

// optional string TabName = 2;
inline bool PBIbTab::has_tabname() const {
  return _has_bit(1);
}
inline void PBIbTab::clear_tabname() {
  if (tabname_ != &_default_tabname_) {
    tabname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBIbTab::tabname() const {
  return *tabname_;
}
inline void PBIbTab::set_tabname(const ::std::string& value) {
  _set_bit(1);
  if (tabname_ == &_default_tabname_) {
    tabname_ = new ::std::string;
  }
  tabname_->assign(value);
}
inline void PBIbTab::set_tabname(const char* value) {
  _set_bit(1);
  if (tabname_ == &_default_tabname_) {
    tabname_ = new ::std::string;
  }
  tabname_->assign(value);
}
inline void PBIbTab::set_tabname(const char* value, size_t size) {
  _set_bit(1);
  if (tabname_ == &_default_tabname_) {
    tabname_ = new ::std::string;
  }
  tabname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBIbTab::mutable_tabname() {
  _set_bit(1);
  if (tabname_ == &_default_tabname_) {
    tabname_ = new ::std::string;
  }
  return tabname_;
}

// repeated .PBIbSubTab SubTab = 3;
inline int PBIbTab::subtab_size() const {
  return subtab_.size();
}
inline void PBIbTab::clear_subtab() {
  subtab_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >&
PBIbTab::subtab() const {
  return subtab_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbSubTab >*
PBIbTab::mutable_subtab() {
  return &subtab_;
}
inline const ::PBIbSubTab& PBIbTab::subtab(int index) const {
  return subtab_.Get(index);
}
inline ::PBIbSubTab* PBIbTab::mutable_subtab(int index) {
  return subtab_.Mutable(index);
}
inline ::PBIbSubTab* PBIbTab::add_subtab() {
  return subtab_.Add();
}

// -------------------------------------------------------------------

// PBIbStore

// optional uint32 PageID = 1;
inline bool PBIbStore::has_pageid() const {
  return _has_bit(0);
}
inline void PBIbStore::clear_pageid() {
  pageid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBIbStore::pageid() const {
  return pageid_;
}
inline void PBIbStore::set_pageid(::google::protobuf::uint32 value) {
  _set_bit(0);
  pageid_ = value;
}

// optional string PageName = 2;
inline bool PBIbStore::has_pagename() const {
  return _has_bit(1);
}
inline void PBIbStore::clear_pagename() {
  if (pagename_ != &_default_pagename_) {
    pagename_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBIbStore::pagename() const {
  return *pagename_;
}
inline void PBIbStore::set_pagename(const ::std::string& value) {
  _set_bit(1);
  if (pagename_ == &_default_pagename_) {
    pagename_ = new ::std::string;
  }
  pagename_->assign(value);
}
inline void PBIbStore::set_pagename(const char* value) {
  _set_bit(1);
  if (pagename_ == &_default_pagename_) {
    pagename_ = new ::std::string;
  }
  pagename_->assign(value);
}
inline void PBIbStore::set_pagename(const char* value, size_t size) {
  _set_bit(1);
  if (pagename_ == &_default_pagename_) {
    pagename_ = new ::std::string;
  }
  pagename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBIbStore::mutable_pagename() {
  _set_bit(1);
  if (pagename_ == &_default_pagename_) {
    pagename_ = new ::std::string;
  }
  return pagename_;
}

// repeated .PBIbTab Tab = 3;
inline int PBIbStore::tab_size() const {
  return tab_.size();
}
inline void PBIbStore::clear_tab() {
  tab_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIbTab >&
PBIbStore::tab() const {
  return tab_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIbTab >*
PBIbStore::mutable_tab() {
  return &tab_;
}
inline const ::PBIbTab& PBIbStore::tab(int index) const {
  return tab_.Get(index);
}
inline ::PBIbTab* PBIbStore::mutable_tab(int index) {
  return tab_.Mutable(index);
}
inline ::PBIbTab* PBIbStore::add_tab() {
  return tab_.Add();
}

// -------------------------------------------------------------------

// CMessageUserChargeNotice

// optional int64 DetailID = 1;
inline bool CMessageUserChargeNotice::has_detailid() const {
  return _has_bit(0);
}
inline void CMessageUserChargeNotice::clear_detailid() {
  detailid_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 CMessageUserChargeNotice::detailid() const {
  return detailid_;
}
inline void CMessageUserChargeNotice::set_detailid(::google::protobuf::int64 value) {
  _set_bit(0);
  detailid_ = value;
}

// optional int32 UserID = 2;
inline bool CMessageUserChargeNotice::has_userid() const {
  return _has_bit(1);
}
inline void CMessageUserChargeNotice::clear_userid() {
  userid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageUserChargeNotice::userid() const {
  return userid_;
}
inline void CMessageUserChargeNotice::set_userid(::google::protobuf::int32 value) {
  _set_bit(1);
  userid_ = value;
}

// optional int32 SubjectID = 3;
inline bool CMessageUserChargeNotice::has_subjectid() const {
  return _has_bit(2);
}
inline void CMessageUserChargeNotice::clear_subjectid() {
  subjectid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageUserChargeNotice::subjectid() const {
  return subjectid_;
}
inline void CMessageUserChargeNotice::set_subjectid(::google::protobuf::int32 value) {
  _set_bit(2);
  subjectid_ = value;
}

// optional int32 Amount = 4;
inline bool CMessageUserChargeNotice::has_amount() const {
  return _has_bit(3);
}
inline void CMessageUserChargeNotice::clear_amount() {
  amount_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageUserChargeNotice::amount() const {
  return amount_;
}
inline void CMessageUserChargeNotice::set_amount(::google::protobuf::int32 value) {
  _set_bit(3);
  amount_ = value;
}

// -------------------------------------------------------------------

// PBPromotion

// optional uint32 GoodsID = 1;
inline bool PBPromotion::has_goodsid() const {
  return _has_bit(0);
}
inline void PBPromotion::clear_goodsid() {
  goodsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPromotion::goodsid() const {
  return goodsid_;
}
inline void PBPromotion::set_goodsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  goodsid_ = value;
}

// optional int32 RemainCount = 2;
inline bool PBPromotion::has_remaincount() const {
  return _has_bit(1);
}
inline void PBPromotion::clear_remaincount() {
  remaincount_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBPromotion::remaincount() const {
  return remaincount_;
}
inline void PBPromotion::set_remaincount(::google::protobuf::int32 value) {
  _set_bit(1);
  remaincount_ = value;
}

// optional int32 BeginTime = 3;
inline bool PBPromotion::has_begintime() const {
  return _has_bit(2);
}
inline void PBPromotion::clear_begintime() {
  begintime_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBPromotion::begintime() const {
  return begintime_;
}
inline void PBPromotion::set_begintime(::google::protobuf::int32 value) {
  _set_bit(2);
  begintime_ = value;
}

// optional int32 EndTime = 4;
inline bool PBPromotion::has_endtime() const {
  return _has_bit(3);
}
inline void PBPromotion::clear_endtime() {
  endtime_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PBPromotion::endtime() const {
  return endtime_;
}
inline void PBPromotion::set_endtime(::google::protobuf::int32 value) {
  _set_bit(3);
  endtime_ = value;
}

// optional int32 MaxCount = 5;
inline bool PBPromotion::has_maxcount() const {
  return _has_bit(4);
}
inline void PBPromotion::clear_maxcount() {
  maxcount_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 PBPromotion::maxcount() const {
  return maxcount_;
}
inline void PBPromotion::set_maxcount(::google::protobuf::int32 value) {
  _set_bit(4);
  maxcount_ = value;
}

// optional int32 ColdNum = 6;
inline bool PBPromotion::has_coldnum() const {
  return _has_bit(5);
}
inline void PBPromotion::clear_coldnum() {
  coldnum_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PBPromotion::coldnum() const {
  return coldnum_;
}
inline void PBPromotion::set_coldnum(::google::protobuf::int32 value) {
  _set_bit(5);
  coldnum_ = value;
}

// optional int32 ColdTime = 7;
inline bool PBPromotion::has_coldtime() const {
  return _has_bit(6);
}
inline void PBPromotion::clear_coldtime() {
  coldtime_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 PBPromotion::coldtime() const {
  return coldtime_;
}
inline void PBPromotion::set_coldtime(::google::protobuf::int32 value) {
  _set_bit(6);
  coldtime_ = value;
}

// optional int32 ElapsedTime = 8;
inline bool PBPromotion::has_elapsedtime() const {
  return _has_bit(7);
}
inline void PBPromotion::clear_elapsedtime() {
  elapsedtime_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 PBPromotion::elapsedtime() const {
  return elapsedtime_;
}
inline void PBPromotion::set_elapsedtime(::google::protobuf::int32 value) {
  _set_bit(7);
  elapsedtime_ = value;
}

// -------------------------------------------------------------------

// CMessageIbItemRemainNotice

// repeated .PBPromotion promotion = 1;
inline int CMessageIbItemRemainNotice::promotion_size() const {
  return promotion_.size();
}
inline void CMessageIbItemRemainNotice::clear_promotion() {
  promotion_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPromotion >&
CMessageIbItemRemainNotice::promotion() const {
  return promotion_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPromotion >*
CMessageIbItemRemainNotice::mutable_promotion() {
  return &promotion_;
}
inline const ::PBPromotion& CMessageIbItemRemainNotice::promotion(int index) const {
  return promotion_.Get(index);
}
inline ::PBPromotion* CMessageIbItemRemainNotice::mutable_promotion(int index) {
  return promotion_.Mutable(index);
}
inline ::PBPromotion* CMessageIbItemRemainNotice::add_promotion() {
  return promotion_.Add();
}

// -------------------------------------------------------------------

// PBConsume

// optional uint32 ConsumeType = 1;
inline bool PBConsume::has_consumetype() const {
  return _has_bit(0);
}
inline void PBConsume::clear_consumetype() {
  consumetype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBConsume::consumetype() const {
  return consumetype_;
}
inline void PBConsume::set_consumetype(::google::protobuf::uint32 value) {
  _set_bit(0);
  consumetype_ = value;
}

// optional uint32 ConsumeSprice = 2;
inline bool PBConsume::has_consumesprice() const {
  return _has_bit(1);
}
inline void PBConsume::clear_consumesprice() {
  consumesprice_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBConsume::consumesprice() const {
  return consumesprice_;
}
inline void PBConsume::set_consumesprice(::google::protobuf::uint32 value) {
  _set_bit(1);
  consumesprice_ = value;
}

// optional uint32 TamplateRate = 3;
inline bool PBConsume::has_tamplaterate() const {
  return _has_bit(2);
}
inline void PBConsume::clear_tamplaterate() {
  tamplaterate_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBConsume::tamplaterate() const {
  return tamplaterate_;
}
inline void PBConsume::set_tamplaterate(::google::protobuf::uint32 value) {
  _set_bit(2);
  tamplaterate_ = value;
}

// -------------------------------------------------------------------

// PBFuncStore

// optional uint32 FuncID = 1;
inline bool PBFuncStore::has_funcid() const {
  return _has_bit(0);
}
inline void PBFuncStore::clear_funcid() {
  funcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBFuncStore::funcid() const {
  return funcid_;
}
inline void PBFuncStore::set_funcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  funcid_ = value;
}

// optional string FuncName = 2;
inline bool PBFuncStore::has_funcname() const {
  return _has_bit(1);
}
inline void PBFuncStore::clear_funcname() {
  if (funcname_ != &_default_funcname_) {
    funcname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBFuncStore::funcname() const {
  return *funcname_;
}
inline void PBFuncStore::set_funcname(const ::std::string& value) {
  _set_bit(1);
  if (funcname_ == &_default_funcname_) {
    funcname_ = new ::std::string;
  }
  funcname_->assign(value);
}
inline void PBFuncStore::set_funcname(const char* value) {
  _set_bit(1);
  if (funcname_ == &_default_funcname_) {
    funcname_ = new ::std::string;
  }
  funcname_->assign(value);
}
inline void PBFuncStore::set_funcname(const char* value, size_t size) {
  _set_bit(1);
  if (funcname_ == &_default_funcname_) {
    funcname_ = new ::std::string;
  }
  funcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBFuncStore::mutable_funcname() {
  _set_bit(1);
  if (funcname_ == &_default_funcname_) {
    funcname_ = new ::std::string;
  }
  return funcname_;
}

// optional uint32 FuncUnitType = 3;
inline bool PBFuncStore::has_funcunittype() const {
  return _has_bit(2);
}
inline void PBFuncStore::clear_funcunittype() {
  funcunittype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBFuncStore::funcunittype() const {
  return funcunittype_;
}
inline void PBFuncStore::set_funcunittype(::google::protobuf::uint32 value) {
  _set_bit(2);
  funcunittype_ = value;
}

// repeated .PBConsume Consume = 4;
inline int PBFuncStore::consume_size() const {
  return consume_.size();
}
inline void PBFuncStore::clear_consume() {
  consume_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBConsume >&
PBFuncStore::consume() const {
  return consume_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBConsume >*
PBFuncStore::mutable_consume() {
  return &consume_;
}
inline const ::PBConsume& PBFuncStore::consume(int index) const {
  return consume_.Get(index);
}
inline ::PBConsume* PBFuncStore::mutable_consume(int index) {
  return consume_.Mutable(index);
}
inline ::PBConsume* PBFuncStore::add_consume() {
  return consume_.Add();
}

// optional uint32 FuncShow = 5;
inline bool PBFuncStore::has_funcshow() const {
  return _has_bit(4);
}
inline void PBFuncStore::clear_funcshow() {
  funcshow_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBFuncStore::funcshow() const {
  return funcshow_;
}
inline void PBFuncStore::set_funcshow(::google::protobuf::uint32 value) {
  _set_bit(4);
  funcshow_ = value;
}

// optional uint32 DefaultConsume = 6;
inline bool PBFuncStore::has_defaultconsume() const {
  return _has_bit(5);
}
inline void PBFuncStore::clear_defaultconsume() {
  defaultconsume_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBFuncStore::defaultconsume() const {
  return defaultconsume_;
}
inline void PBFuncStore::set_defaultconsume(::google::protobuf::uint32 value) {
  _set_bit(5);
  defaultconsume_ = value;
}

// optional uint32 FuncUnit = 7;
inline bool PBFuncStore::has_funcunit() const {
  return _has_bit(6);
}
inline void PBFuncStore::clear_funcunit() {
  funcunit_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBFuncStore::funcunit() const {
  return funcunit_;
}
inline void PBFuncStore::set_funcunit(::google::protobuf::uint32 value) {
  _set_bit(6);
  funcunit_ = value;
}

// optional uint32 FuncCountLimit = 8;
inline bool PBFuncStore::has_funccountlimit() const {
  return _has_bit(7);
}
inline void PBFuncStore::clear_funccountlimit() {
  funccountlimit_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBFuncStore::funccountlimit() const {
  return funccountlimit_;
}
inline void PBFuncStore::set_funccountlimit(::google::protobuf::uint32 value) {
  _set_bit(7);
  funccountlimit_ = value;
}

// -------------------------------------------------------------------

// CMessageGetFuncConsumesRequest

// -------------------------------------------------------------------

// CMessageGetFuncConsumesResponse

// optional int32 Error = 1;
inline bool CMessageGetFuncConsumesResponse::has_error() const {
  return _has_bit(0);
}
inline void CMessageGetFuncConsumesResponse::clear_error() {
  error_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessageGetFuncConsumesResponse::error() const {
  return error_;
}
inline void CMessageGetFuncConsumesResponse::set_error(::google::protobuf::int32 value) {
  _set_bit(0);
  error_ = value;
}

// repeated .PBFuncStore FuncStore = 2;
inline int CMessageGetFuncConsumesResponse::funcstore_size() const {
  return funcstore_.size();
}
inline void CMessageGetFuncConsumesResponse::clear_funcstore() {
  funcstore_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFuncStore >&
CMessageGetFuncConsumesResponse::funcstore() const {
  return funcstore_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFuncStore >*
CMessageGetFuncConsumesResponse::mutable_funcstore() {
  return &funcstore_;
}
inline const ::PBFuncStore& CMessageGetFuncConsumesResponse::funcstore(int index) const {
  return funcstore_.Get(index);
}
inline ::PBFuncStore* CMessageGetFuncConsumesResponse::mutable_funcstore(int index) {
  return funcstore_.Mutable(index);
}
inline ::PBFuncStore* CMessageGetFuncConsumesResponse::add_funcstore() {
  return funcstore_.Add();
}

// -------------------------------------------------------------------

// CMessagePurchaseFuncRequest

// optional uint32 FuncID = 1;
inline bool CMessagePurchaseFuncRequest::has_funcid() const {
  return _has_bit(0);
}
inline void CMessagePurchaseFuncRequest::clear_funcid() {
  funcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncRequest::funcid() const {
  return funcid_;
}
inline void CMessagePurchaseFuncRequest::set_funcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  funcid_ = value;
}

// optional uint32 FuncCount = 2;
inline bool CMessagePurchaseFuncRequest::has_funccount() const {
  return _has_bit(1);
}
inline void CMessagePurchaseFuncRequest::clear_funccount() {
  funccount_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncRequest::funccount() const {
  return funccount_;
}
inline void CMessagePurchaseFuncRequest::set_funccount(::google::protobuf::uint32 value) {
  _set_bit(1);
  funccount_ = value;
}

// optional uint32 ConsumeType = 3;
inline bool CMessagePurchaseFuncRequest::has_consumetype() const {
  return _has_bit(2);
}
inline void CMessagePurchaseFuncRequest::clear_consumetype() {
  consumetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncRequest::consumetype() const {
  return consumetype_;
}
inline void CMessagePurchaseFuncRequest::set_consumetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  consumetype_ = value;
}

// optional uint32 ExtraData1 = 4;
inline bool CMessagePurchaseFuncRequest::has_extradata1() const {
  return _has_bit(3);
}
inline void CMessagePurchaseFuncRequest::clear_extradata1() {
  extradata1_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncRequest::extradata1() const {
  return extradata1_;
}
inline void CMessagePurchaseFuncRequest::set_extradata1(::google::protobuf::uint32 value) {
  _set_bit(3);
  extradata1_ = value;
}

// optional uint32 ExtraData2 = 5;
inline bool CMessagePurchaseFuncRequest::has_extradata2() const {
  return _has_bit(4);
}
inline void CMessagePurchaseFuncRequest::clear_extradata2() {
  extradata2_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncRequest::extradata2() const {
  return extradata2_;
}
inline void CMessagePurchaseFuncRequest::set_extradata2(::google::protobuf::uint32 value) {
  _set_bit(4);
  extradata2_ = value;
}

// -------------------------------------------------------------------

// CMessagePurchaseFuncResponse

// optional int32 Error = 1;
inline bool CMessagePurchaseFuncResponse::has_error() const {
  return _has_bit(0);
}
inline void CMessagePurchaseFuncResponse::clear_error() {
  error_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CMessagePurchaseFuncResponse::error() const {
  return error_;
}
inline void CMessagePurchaseFuncResponse::set_error(::google::protobuf::int32 value) {
  _set_bit(0);
  error_ = value;
}

// optional uint32 FuncID = 2;
inline bool CMessagePurchaseFuncResponse::has_funcid() const {
  return _has_bit(1);
}
inline void CMessagePurchaseFuncResponse::clear_funcid() {
  funcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncResponse::funcid() const {
  return funcid_;
}
inline void CMessagePurchaseFuncResponse::set_funcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  funcid_ = value;
}

// optional uint32 FuncCount = 3;
inline bool CMessagePurchaseFuncResponse::has_funccount() const {
  return _has_bit(2);
}
inline void CMessagePurchaseFuncResponse::clear_funccount() {
  funccount_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncResponse::funccount() const {
  return funccount_;
}
inline void CMessagePurchaseFuncResponse::set_funccount(::google::protobuf::uint32 value) {
  _set_bit(2);
  funccount_ = value;
}

// optional uint32 ConsumeType = 4;
inline bool CMessagePurchaseFuncResponse::has_consumetype() const {
  return _has_bit(3);
}
inline void CMessagePurchaseFuncResponse::clear_consumetype() {
  consumetype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncResponse::consumetype() const {
  return consumetype_;
}
inline void CMessagePurchaseFuncResponse::set_consumetype(::google::protobuf::uint32 value) {
  _set_bit(3);
  consumetype_ = value;
}

// optional uint32 FuncsCost = 5;
inline bool CMessagePurchaseFuncResponse::has_funcscost() const {
  return _has_bit(4);
}
inline void CMessagePurchaseFuncResponse::clear_funcscost() {
  funcscost_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncResponse::funcscost() const {
  return funcscost_;
}
inline void CMessagePurchaseFuncResponse::set_funcscost(::google::protobuf::uint32 value) {
  _set_bit(4);
  funcscost_ = value;
}

// optional uint32 ExtraData1 = 6;
inline bool CMessagePurchaseFuncResponse::has_extradata1() const {
  return _has_bit(5);
}
inline void CMessagePurchaseFuncResponse::clear_extradata1() {
  extradata1_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncResponse::extradata1() const {
  return extradata1_;
}
inline void CMessagePurchaseFuncResponse::set_extradata1(::google::protobuf::uint32 value) {
  _set_bit(5);
  extradata1_ = value;
}

// optional uint32 ExtraData2 = 7;
inline bool CMessagePurchaseFuncResponse::has_extradata2() const {
  return _has_bit(6);
}
inline void CMessagePurchaseFuncResponse::clear_extradata2() {
  extradata2_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessagePurchaseFuncResponse::extradata2() const {
  return extradata2_;
}
inline void CMessagePurchaseFuncResponse::set_extradata2(::google::protobuf::uint32 value) {
  _set_bit(6);
  extradata2_ = value;
}

#endif  // PROTOBUF_ibstore_5fpb_2ehxx__INCLUDED
