// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_achievemessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_achievemessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();

class CMessageAchieveReportRequest;
class CMessageAchieveReportResponse;
class PBAchieve;
class PBAchieveBuffer;
class CMessageAchieveGetSingleRequest;
class CMessageAchieveGetSingleResponse;
class CMessageAchieveGetAllRequest;
class CMessageAchieveGetAllResponse;
class CMessageAchieveFinishNotice;
class PBAchieveParam;
class PBDBAchieve;
class PBDBAchieveBuffer;
class CMessageGetAllHonorRequest;
class PBHonorData;
class CMessageGetAllHonorResponse;
class CMessageHonorFinishNotice;
class CMessageGetStageBonusRequest;
class CMessageGetStageBonusResponse;

enum AchieveMessageID {
  ID_C2S_REQUEST_REPORTACHIEVE = 20481,
  ID_S2C_RESPONSE_REPORTACHIEVE = 20482,
  ID_C2S_REQUEST_GETSINGLEACHIEVE = 20483,
  ID_S2C_RESPONSE_GETSINGLEACHIEVE = 20484,
  ID_C2S_REQUEST_GETALLACHIEVE = 20485,
  ID_S2C_RESPONSE_GETALLACHIEVE = 20486,
  ID_S2C_NOTIFY_ACHIEVENOTICE = 20487,
  ID_C2S_REQUEST_GETALLHONOR = 20488,
  ID_S2C_RESPONSE_GETALLHONOR = 20489,
  ID_S2C_NOTIFY_HONORFINSH = 20490,
  ID_C2S_REQUEST_GETSTAGEBONUS = 20491,
  ID_S2C_RESPONSE_GETSTAGEBONUS = 20492
};
const ::google::protobuf::EnumDescriptor* AchieveMessageID_descriptor();
bool AchieveMessageID_IsValid(int value);
const AchieveMessageID AchieveMessageID_MIN = ID_C2S_REQUEST_REPORTACHIEVE;
const AchieveMessageID AchieveMessageID_MAX = ID_S2C_RESPONSE_GETSTAGEBONUS;

inline const ::std::string& AchieveMessageID_Name(AchieveMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    AchieveMessageID_descriptor(), value);
}
inline bool AchieveMessageID_Parse(
    const ::std::string& name, AchieveMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AchieveMessageID>(
    AchieveMessageID_descriptor(), name, value);
}
// ===================================================================

class CMessageAchieveReportRequest : public ::google::protobuf::Message {
 public:
  CMessageAchieveReportRequest();
  virtual ~CMessageAchieveReportRequest();
  
  CMessageAchieveReportRequest(const CMessageAchieveReportRequest& from);
  
  inline CMessageAchieveReportRequest& operator=(const CMessageAchieveReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAchieveReportRequest& default_instance();
  void Swap(CMessageAchieveReportRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAchieveReportRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAchieveReportRequest& from);
  void MergeFrom(const CMessageAchieveReportRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AchieveID = 1;
  inline bool has_achieveid() const;
  inline void clear_achieveid();
  static const int kAchieveIDFieldNumber = 1;
  inline ::google::protobuf::uint32 achieveid() const;
  inline void set_achieveid(::google::protobuf::uint32 value);
  
  // optional uint32 Key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 achieveid_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAchieveReportRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAchieveReportResponse : public ::google::protobuf::Message {
 public:
  CMessageAchieveReportResponse();
  virtual ~CMessageAchieveReportResponse();
  
  CMessageAchieveReportResponse(const CMessageAchieveReportResponse& from);
  
  inline CMessageAchieveReportResponse& operator=(const CMessageAchieveReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAchieveReportResponse& default_instance();
  void Swap(CMessageAchieveReportResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAchieveReportResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAchieveReportResponse& from);
  void MergeFrom(const CMessageAchieveReportResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RtnCode = 1;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAchieveReportResponse* default_instance_;
};
// -------------------------------------------------------------------

class PBAchieve : public ::google::protobuf::Message {
 public:
  PBAchieve();
  virtual ~PBAchieve();
  
  PBAchieve(const PBAchieve& from);
  
  inline PBAchieve& operator=(const PBAchieve& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAchieve& default_instance();
  void Swap(PBAchieve* other);
  
  // implements Message ----------------------------------------------
  
  PBAchieve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAchieve& from);
  void MergeFrom(const PBAchieve& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AchieveID = 1;
  inline bool has_achieveid() const;
  inline void clear_achieveid();
  static const int kAchieveIDFieldNumber = 1;
  inline ::google::protobuf::uint32 achieveid() const;
  inline void set_achieveid(::google::protobuf::uint32 value);
  
  // optional uint32 Time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 RootType = 4;
  inline bool has_roottype() const;
  inline void clear_roottype();
  static const int kRootTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 roottype() const;
  inline void set_roottype(::google::protobuf::uint32 value);
  
  // repeated .PBAchieveParam Param = 5;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAchieveParam >& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAchieveParam >* mutable_param();
  inline const ::PBAchieveParam& param(int index) const;
  inline ::PBAchieveParam* mutable_param(int index);
  inline ::PBAchieveParam* add_param();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 achieveid_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 roottype_;
  ::google::protobuf::RepeatedPtrField< ::PBAchieveParam > param_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAchieve* default_instance_;
};
// -------------------------------------------------------------------

class PBAchieveBuffer : public ::google::protobuf::Message {
 public:
  PBAchieveBuffer();
  virtual ~PBAchieveBuffer();
  
  PBAchieveBuffer(const PBAchieveBuffer& from);
  
  inline PBAchieveBuffer& operator=(const PBAchieveBuffer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAchieveBuffer& default_instance();
  void Swap(PBAchieveBuffer* other);
  
  // implements Message ----------------------------------------------
  
  PBAchieveBuffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAchieveBuffer& from);
  void MergeFrom(const PBAchieveBuffer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBAchieve Achieve = 1;
  inline int achieve_size() const;
  inline void clear_achieve();
  static const int kAchieveFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAchieve >& achieve() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAchieve >* mutable_achieve();
  inline const ::PBAchieve& achieve(int index) const;
  inline ::PBAchieve* mutable_achieve(int index);
  inline ::PBAchieve* add_achieve();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBAchieve > achieve_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAchieveBuffer* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAchieveGetSingleRequest : public ::google::protobuf::Message {
 public:
  CMessageAchieveGetSingleRequest();
  virtual ~CMessageAchieveGetSingleRequest();
  
  CMessageAchieveGetSingleRequest(const CMessageAchieveGetSingleRequest& from);
  
  inline CMessageAchieveGetSingleRequest& operator=(const CMessageAchieveGetSingleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAchieveGetSingleRequest& default_instance();
  void Swap(CMessageAchieveGetSingleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAchieveGetSingleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAchieveGetSingleRequest& from);
  void MergeFrom(const CMessageAchieveGetSingleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AchieveID = 1;
  inline bool has_achieveid() const;
  inline void clear_achieveid();
  static const int kAchieveIDFieldNumber = 1;
  inline ::google::protobuf::uint32 achieveid() const;
  inline void set_achieveid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 achieveid_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAchieveGetSingleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAchieveGetSingleResponse : public ::google::protobuf::Message {
 public:
  CMessageAchieveGetSingleResponse();
  virtual ~CMessageAchieveGetSingleResponse();
  
  CMessageAchieveGetSingleResponse(const CMessageAchieveGetSingleResponse& from);
  
  inline CMessageAchieveGetSingleResponse& operator=(const CMessageAchieveGetSingleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAchieveGetSingleResponse& default_instance();
  void Swap(CMessageAchieveGetSingleResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAchieveGetSingleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAchieveGetSingleResponse& from);
  void MergeFrom(const CMessageAchieveGetSingleResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBAchieve Achieve = 1;
  inline bool has_achieve() const;
  inline void clear_achieve();
  static const int kAchieveFieldNumber = 1;
  inline const ::PBAchieve& achieve() const;
  inline ::PBAchieve* mutable_achieve();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBAchieve* achieve_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAchieveGetSingleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAchieveGetAllRequest : public ::google::protobuf::Message {
 public:
  CMessageAchieveGetAllRequest();
  virtual ~CMessageAchieveGetAllRequest();
  
  CMessageAchieveGetAllRequest(const CMessageAchieveGetAllRequest& from);
  
  inline CMessageAchieveGetAllRequest& operator=(const CMessageAchieveGetAllRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAchieveGetAllRequest& default_instance();
  void Swap(CMessageAchieveGetAllRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAchieveGetAllRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAchieveGetAllRequest& from);
  void MergeFrom(const CMessageAchieveGetAllRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 IsOpen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 1;
  inline ::google::protobuf::uint32 isopen() const;
  inline void set_isopen(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 isopen_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAchieveGetAllRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAchieveGetAllResponse : public ::google::protobuf::Message {
 public:
  CMessageAchieveGetAllResponse();
  virtual ~CMessageAchieveGetAllResponse();
  
  CMessageAchieveGetAllResponse(const CMessageAchieveGetAllResponse& from);
  
  inline CMessageAchieveGetAllResponse& operator=(const CMessageAchieveGetAllResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAchieveGetAllResponse& default_instance();
  void Swap(CMessageAchieveGetAllResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAchieveGetAllResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAchieveGetAllResponse& from);
  void MergeFrom(const CMessageAchieveGetAllResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TotalPoint = 1;
  inline bool has_totalpoint() const;
  inline void clear_totalpoint();
  static const int kTotalPointFieldNumber = 1;
  inline ::google::protobuf::uint32 totalpoint() const;
  inline void set_totalpoint(::google::protobuf::uint32 value);
  
  // optional .PBAchieveBuffer AchieveBuffer = 2;
  inline bool has_achievebuffer() const;
  inline void clear_achievebuffer();
  static const int kAchieveBufferFieldNumber = 2;
  inline const ::PBAchieveBuffer& achievebuffer() const;
  inline ::PBAchieveBuffer* mutable_achievebuffer();
  
  // optional uint32 Stage = 3;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 3;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);
  
  // optional uint32 IsOpen = 4;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 4;
  inline ::google::protobuf::uint32 isopen() const;
  inline void set_isopen(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 totalpoint_;
  ::PBAchieveBuffer* achievebuffer_;
  ::google::protobuf::uint32 stage_;
  ::google::protobuf::uint32 isopen_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAchieveGetAllResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAchieveFinishNotice : public ::google::protobuf::Message {
 public:
  CMessageAchieveFinishNotice();
  virtual ~CMessageAchieveFinishNotice();
  
  CMessageAchieveFinishNotice(const CMessageAchieveFinishNotice& from);
  
  inline CMessageAchieveFinishNotice& operator=(const CMessageAchieveFinishNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAchieveFinishNotice& default_instance();
  void Swap(CMessageAchieveFinishNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAchieveFinishNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAchieveFinishNotice& from);
  void MergeFrom(const CMessageAchieveFinishNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBAchieve Achieve = 1;
  inline bool has_achieve() const;
  inline void clear_achieve();
  static const int kAchieveFieldNumber = 1;
  inline const ::PBAchieve& achieve() const;
  inline ::PBAchieve* mutable_achieve();
  
  // optional uint32 TotalPoint = 2;
  inline bool has_totalpoint() const;
  inline void clear_totalpoint();
  static const int kTotalPointFieldNumber = 2;
  inline ::google::protobuf::uint32 totalpoint() const;
  inline void set_totalpoint(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBAchieve* achieve_;
  ::google::protobuf::uint32 totalpoint_;
  ::google::protobuf::uint32 charid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAchieveFinishNotice* default_instance_;
};
// -------------------------------------------------------------------

class PBAchieveParam : public ::google::protobuf::Message {
 public:
  PBAchieveParam();
  virtual ~PBAchieveParam();
  
  PBAchieveParam(const PBAchieveParam& from);
  
  inline PBAchieveParam& operator=(const PBAchieveParam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAchieveParam& default_instance();
  void Swap(PBAchieveParam* other);
  
  // implements Message ----------------------------------------------
  
  PBAchieveParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAchieveParam& from);
  void MergeFrom(const PBAchieveParam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAchieveParam* default_instance_;
};
// -------------------------------------------------------------------

class PBDBAchieve : public ::google::protobuf::Message {
 public:
  PBDBAchieve();
  virtual ~PBDBAchieve();
  
  PBDBAchieve(const PBDBAchieve& from);
  
  inline PBDBAchieve& operator=(const PBDBAchieve& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDBAchieve& default_instance();
  void Swap(PBDBAchieve* other);
  
  // implements Message ----------------------------------------------
  
  PBDBAchieve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDBAchieve& from);
  void MergeFrom(const PBDBAchieve& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AchieveID = 1;
  inline bool has_achieveid() const;
  inline void clear_achieveid();
  static const int kAchieveIDFieldNumber = 1;
  inline ::google::protobuf::uint32 achieveid() const;
  inline void set_achieveid(::google::protobuf::uint32 value);
  
  // optional uint32 Time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 RootType = 4;
  inline bool has_roottype() const;
  inline void clear_roottype();
  static const int kRootTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 roottype() const;
  inline void set_roottype(::google::protobuf::uint32 value);
  
  // repeated .PBAchieveParam Param = 5;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAchieveParam >& param() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAchieveParam >* mutable_param();
  inline const ::PBAchieveParam& param(int index) const;
  inline ::PBAchieveParam* mutable_param(int index);
  inline ::PBAchieveParam* add_param();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 achieveid_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 roottype_;
  ::google::protobuf::RepeatedPtrField< ::PBAchieveParam > param_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDBAchieve* default_instance_;
};
// -------------------------------------------------------------------

class PBDBAchieveBuffer : public ::google::protobuf::Message {
 public:
  PBDBAchieveBuffer();
  virtual ~PBDBAchieveBuffer();
  
  PBDBAchieveBuffer(const PBDBAchieveBuffer& from);
  
  inline PBDBAchieveBuffer& operator=(const PBDBAchieveBuffer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDBAchieveBuffer& default_instance();
  void Swap(PBDBAchieveBuffer* other);
  
  // implements Message ----------------------------------------------
  
  PBDBAchieveBuffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDBAchieveBuffer& from);
  void MergeFrom(const PBDBAchieveBuffer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBDBAchieve Achieve = 1;
  inline int achieve_size() const;
  inline void clear_achieve();
  static const int kAchieveFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDBAchieve >& achieve() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDBAchieve >* mutable_achieve();
  inline const ::PBDBAchieve& achieve(int index) const;
  inline ::PBDBAchieve* mutable_achieve(int index);
  inline ::PBDBAchieve* add_achieve();
  
  // repeated .PBHonorData HonorData = 2;
  inline int honordata_size() const;
  inline void clear_honordata();
  static const int kHonorDataFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBHonorData >& honordata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBHonorData >* mutable_honordata();
  inline const ::PBHonorData& honordata(int index) const;
  inline ::PBHonorData* mutable_honordata(int index);
  inline ::PBHonorData* add_honordata();
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 TotalPoint = 4;
  inline bool has_totalpoint() const;
  inline void clear_totalpoint();
  static const int kTotalPointFieldNumber = 4;
  inline ::google::protobuf::uint32 totalpoint() const;
  inline void set_totalpoint(::google::protobuf::uint32 value);
  
  // optional uint32 Stage = 5;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 5;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBDBAchieve > achieve_;
  ::google::protobuf::RepeatedPtrField< ::PBHonorData > honordata_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 totalpoint_;
  ::google::protobuf::uint32 stage_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDBAchieveBuffer* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetAllHonorRequest : public ::google::protobuf::Message {
 public:
  CMessageGetAllHonorRequest();
  virtual ~CMessageGetAllHonorRequest();
  
  CMessageGetAllHonorRequest(const CMessageGetAllHonorRequest& from);
  
  inline CMessageGetAllHonorRequest& operator=(const CMessageGetAllHonorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetAllHonorRequest& default_instance();
  void Swap(CMessageGetAllHonorRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetAllHonorRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetAllHonorRequest& from);
  void MergeFrom(const CMessageGetAllHonorRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetAllHonorRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBHonorData : public ::google::protobuf::Message {
 public:
  PBHonorData();
  virtual ~PBHonorData();
  
  PBHonorData(const PBHonorData& from);
  
  inline PBHonorData& operator=(const PBHonorData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHonorData& default_instance();
  void Swap(PBHonorData* other);
  
  // implements Message ----------------------------------------------
  
  PBHonorData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHonorData& from);
  void MergeFrom(const PBHonorData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 Param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 param_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBHonorData* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetAllHonorResponse : public ::google::protobuf::Message {
 public:
  CMessageGetAllHonorResponse();
  virtual ~CMessageGetAllHonorResponse();
  
  CMessageGetAllHonorResponse(const CMessageGetAllHonorResponse& from);
  
  inline CMessageGetAllHonorResponse& operator=(const CMessageGetAllHonorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetAllHonorResponse& default_instance();
  void Swap(CMessageGetAllHonorResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetAllHonorResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetAllHonorResponse& from);
  void MergeFrom(const CMessageGetAllHonorResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBHonorData HonorData = 1;
  inline int honordata_size() const;
  inline void clear_honordata();
  static const int kHonorDataFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBHonorData >& honordata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBHonorData >* mutable_honordata();
  inline const ::PBHonorData& honordata(int index) const;
  inline ::PBHonorData* mutable_honordata(int index);
  inline ::PBHonorData* add_honordata();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBHonorData > honordata_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetAllHonorResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageHonorFinishNotice : public ::google::protobuf::Message {
 public:
  CMessageHonorFinishNotice();
  virtual ~CMessageHonorFinishNotice();
  
  CMessageHonorFinishNotice(const CMessageHonorFinishNotice& from);
  
  inline CMessageHonorFinishNotice& operator=(const CMessageHonorFinishNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHonorFinishNotice& default_instance();
  void Swap(CMessageHonorFinishNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageHonorFinishNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageHonorFinishNotice& from);
  void MergeFrom(const CMessageHonorFinishNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBHonorData HonorData = 1;
  inline bool has_honordata() const;
  inline void clear_honordata();
  static const int kHonorDataFieldNumber = 1;
  inline const ::PBHonorData& honordata() const;
  inline ::PBHonorData* mutable_honordata();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBHonorData* honordata_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageHonorFinishNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetStageBonusRequest : public ::google::protobuf::Message {
 public:
  CMessageGetStageBonusRequest();
  virtual ~CMessageGetStageBonusRequest();
  
  CMessageGetStageBonusRequest(const CMessageGetStageBonusRequest& from);
  
  inline CMessageGetStageBonusRequest& operator=(const CMessageGetStageBonusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetStageBonusRequest& default_instance();
  void Swap(CMessageGetStageBonusRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetStageBonusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetStageBonusRequest& from);
  void MergeFrom(const CMessageGetStageBonusRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetStageBonusRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetStageBonusResponse : public ::google::protobuf::Message {
 public:
  CMessageGetStageBonusResponse();
  virtual ~CMessageGetStageBonusResponse();
  
  CMessageGetStageBonusResponse(const CMessageGetStageBonusResponse& from);
  
  inline CMessageGetStageBonusResponse& operator=(const CMessageGetStageBonusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetStageBonusResponse& default_instance();
  void Swap(CMessageGetStageBonusResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetStageBonusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetStageBonusResponse& from);
  void MergeFrom(const CMessageGetStageBonusResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 Stage = 2;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 stage_;
  friend void  protobuf_AddDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_achievemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_achievemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetStageBonusResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageAchieveReportRequest

// optional uint32 AchieveID = 1;
inline bool CMessageAchieveReportRequest::has_achieveid() const {
  return _has_bit(0);
}
inline void CMessageAchieveReportRequest::clear_achieveid() {
  achieveid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAchieveReportRequest::achieveid() const {
  return achieveid_;
}
inline void CMessageAchieveReportRequest::set_achieveid(::google::protobuf::uint32 value) {
  _set_bit(0);
  achieveid_ = value;
}

// optional uint32 Key = 2;
inline bool CMessageAchieveReportRequest::has_key() const {
  return _has_bit(1);
}
inline void CMessageAchieveReportRequest::clear_key() {
  key_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAchieveReportRequest::key() const {
  return key_;
}
inline void CMessageAchieveReportRequest::set_key(::google::protobuf::uint32 value) {
  _set_bit(1);
  key_ = value;
}

// optional uint32 Value = 3;
inline bool CMessageAchieveReportRequest::has_value() const {
  return _has_bit(2);
}
inline void CMessageAchieveReportRequest::clear_value() {
  value_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAchieveReportRequest::value() const {
  return value_;
}
inline void CMessageAchieveReportRequest::set_value(::google::protobuf::uint32 value) {
  _set_bit(2);
  value_ = value;
}

// -------------------------------------------------------------------

// CMessageAchieveReportResponse

// optional uint32 RtnCode = 1;
inline bool CMessageAchieveReportResponse::has_rtncode() const {
  return _has_bit(0);
}
inline void CMessageAchieveReportResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAchieveReportResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageAchieveReportResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(0);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// PBAchieve

// optional uint32 AchieveID = 1;
inline bool PBAchieve::has_achieveid() const {
  return _has_bit(0);
}
inline void PBAchieve::clear_achieveid() {
  achieveid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBAchieve::achieveid() const {
  return achieveid_;
}
inline void PBAchieve::set_achieveid(::google::protobuf::uint32 value) {
  _set_bit(0);
  achieveid_ = value;
}

// optional uint32 Time = 2;
inline bool PBAchieve::has_time() const {
  return _has_bit(1);
}
inline void PBAchieve::clear_time() {
  time_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBAchieve::time() const {
  return time_;
}
inline void PBAchieve::set_time(::google::protobuf::uint32 value) {
  _set_bit(1);
  time_ = value;
}

// optional uint32 Status = 3;
inline bool PBAchieve::has_status() const {
  return _has_bit(2);
}
inline void PBAchieve::clear_status() {
  status_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBAchieve::status() const {
  return status_;
}
inline void PBAchieve::set_status(::google::protobuf::uint32 value) {
  _set_bit(2);
  status_ = value;
}

// optional uint32 RootType = 4;
inline bool PBAchieve::has_roottype() const {
  return _has_bit(3);
}
inline void PBAchieve::clear_roottype() {
  roottype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBAchieve::roottype() const {
  return roottype_;
}
inline void PBAchieve::set_roottype(::google::protobuf::uint32 value) {
  _set_bit(3);
  roottype_ = value;
}

// repeated .PBAchieveParam Param = 5;
inline int PBAchieve::param_size() const {
  return param_.size();
}
inline void PBAchieve::clear_param() {
  param_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAchieveParam >&
PBAchieve::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAchieveParam >*
PBAchieve::mutable_param() {
  return &param_;
}
inline const ::PBAchieveParam& PBAchieve::param(int index) const {
  return param_.Get(index);
}
inline ::PBAchieveParam* PBAchieve::mutable_param(int index) {
  return param_.Mutable(index);
}
inline ::PBAchieveParam* PBAchieve::add_param() {
  return param_.Add();
}

// -------------------------------------------------------------------

// PBAchieveBuffer

// repeated .PBAchieve Achieve = 1;
inline int PBAchieveBuffer::achieve_size() const {
  return achieve_.size();
}
inline void PBAchieveBuffer::clear_achieve() {
  achieve_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAchieve >&
PBAchieveBuffer::achieve() const {
  return achieve_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAchieve >*
PBAchieveBuffer::mutable_achieve() {
  return &achieve_;
}
inline const ::PBAchieve& PBAchieveBuffer::achieve(int index) const {
  return achieve_.Get(index);
}
inline ::PBAchieve* PBAchieveBuffer::mutable_achieve(int index) {
  return achieve_.Mutable(index);
}
inline ::PBAchieve* PBAchieveBuffer::add_achieve() {
  return achieve_.Add();
}

// -------------------------------------------------------------------

// CMessageAchieveGetSingleRequest

// optional uint32 AchieveID = 1;
inline bool CMessageAchieveGetSingleRequest::has_achieveid() const {
  return _has_bit(0);
}
inline void CMessageAchieveGetSingleRequest::clear_achieveid() {
  achieveid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAchieveGetSingleRequest::achieveid() const {
  return achieveid_;
}
inline void CMessageAchieveGetSingleRequest::set_achieveid(::google::protobuf::uint32 value) {
  _set_bit(0);
  achieveid_ = value;
}

// -------------------------------------------------------------------

// CMessageAchieveGetSingleResponse

// optional .PBAchieve Achieve = 1;
inline bool CMessageAchieveGetSingleResponse::has_achieve() const {
  return _has_bit(0);
}
inline void CMessageAchieveGetSingleResponse::clear_achieve() {
  if (achieve_ != NULL) achieve_->::PBAchieve::Clear();
  _clear_bit(0);
}
inline const ::PBAchieve& CMessageAchieveGetSingleResponse::achieve() const {
  return achieve_ != NULL ? *achieve_ : *default_instance_->achieve_;
}
inline ::PBAchieve* CMessageAchieveGetSingleResponse::mutable_achieve() {
  _set_bit(0);
  if (achieve_ == NULL) achieve_ = new ::PBAchieve;
  return achieve_;
}

// -------------------------------------------------------------------

// CMessageAchieveGetAllRequest

// optional uint32 IsOpen = 1;
inline bool CMessageAchieveGetAllRequest::has_isopen() const {
  return _has_bit(0);
}
inline void CMessageAchieveGetAllRequest::clear_isopen() {
  isopen_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAchieveGetAllRequest::isopen() const {
  return isopen_;
}
inline void CMessageAchieveGetAllRequest::set_isopen(::google::protobuf::uint32 value) {
  _set_bit(0);
  isopen_ = value;
}

// -------------------------------------------------------------------

// CMessageAchieveGetAllResponse

// optional uint32 TotalPoint = 1;
inline bool CMessageAchieveGetAllResponse::has_totalpoint() const {
  return _has_bit(0);
}
inline void CMessageAchieveGetAllResponse::clear_totalpoint() {
  totalpoint_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAchieveGetAllResponse::totalpoint() const {
  return totalpoint_;
}
inline void CMessageAchieveGetAllResponse::set_totalpoint(::google::protobuf::uint32 value) {
  _set_bit(0);
  totalpoint_ = value;
}

// optional .PBAchieveBuffer AchieveBuffer = 2;
inline bool CMessageAchieveGetAllResponse::has_achievebuffer() const {
  return _has_bit(1);
}
inline void CMessageAchieveGetAllResponse::clear_achievebuffer() {
  if (achievebuffer_ != NULL) achievebuffer_->::PBAchieveBuffer::Clear();
  _clear_bit(1);
}
inline const ::PBAchieveBuffer& CMessageAchieveGetAllResponse::achievebuffer() const {
  return achievebuffer_ != NULL ? *achievebuffer_ : *default_instance_->achievebuffer_;
}
inline ::PBAchieveBuffer* CMessageAchieveGetAllResponse::mutable_achievebuffer() {
  _set_bit(1);
  if (achievebuffer_ == NULL) achievebuffer_ = new ::PBAchieveBuffer;
  return achievebuffer_;
}

// optional uint32 Stage = 3;
inline bool CMessageAchieveGetAllResponse::has_stage() const {
  return _has_bit(2);
}
inline void CMessageAchieveGetAllResponse::clear_stage() {
  stage_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAchieveGetAllResponse::stage() const {
  return stage_;
}
inline void CMessageAchieveGetAllResponse::set_stage(::google::protobuf::uint32 value) {
  _set_bit(2);
  stage_ = value;
}

// optional uint32 IsOpen = 4;
inline bool CMessageAchieveGetAllResponse::has_isopen() const {
  return _has_bit(3);
}
inline void CMessageAchieveGetAllResponse::clear_isopen() {
  isopen_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageAchieveGetAllResponse::isopen() const {
  return isopen_;
}
inline void CMessageAchieveGetAllResponse::set_isopen(::google::protobuf::uint32 value) {
  _set_bit(3);
  isopen_ = value;
}

// -------------------------------------------------------------------

// CMessageAchieveFinishNotice

// optional .PBAchieve Achieve = 1;
inline bool CMessageAchieveFinishNotice::has_achieve() const {
  return _has_bit(0);
}
inline void CMessageAchieveFinishNotice::clear_achieve() {
  if (achieve_ != NULL) achieve_->::PBAchieve::Clear();
  _clear_bit(0);
}
inline const ::PBAchieve& CMessageAchieveFinishNotice::achieve() const {
  return achieve_ != NULL ? *achieve_ : *default_instance_->achieve_;
}
inline ::PBAchieve* CMessageAchieveFinishNotice::mutable_achieve() {
  _set_bit(0);
  if (achieve_ == NULL) achieve_ = new ::PBAchieve;
  return achieve_;
}

// optional uint32 TotalPoint = 2;
inline bool CMessageAchieveFinishNotice::has_totalpoint() const {
  return _has_bit(1);
}
inline void CMessageAchieveFinishNotice::clear_totalpoint() {
  totalpoint_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAchieveFinishNotice::totalpoint() const {
  return totalpoint_;
}
inline void CMessageAchieveFinishNotice::set_totalpoint(::google::protobuf::uint32 value) {
  _set_bit(1);
  totalpoint_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageAchieveFinishNotice::has_charid() const {
  return _has_bit(2);
}
inline void CMessageAchieveFinishNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAchieveFinishNotice::charid() const {
  return charid_;
}
inline void CMessageAchieveFinishNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional string Name = 4;
inline bool CMessageAchieveFinishNotice::has_name() const {
  return _has_bit(3);
}
inline void CMessageAchieveFinishNotice::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageAchieveFinishNotice::name() const {
  return *name_;
}
inline void CMessageAchieveFinishNotice::set_name(const ::std::string& value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageAchieveFinishNotice::set_name(const char* value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageAchieveFinishNotice::set_name(const char* value, size_t size) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageAchieveFinishNotice::mutable_name() {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// -------------------------------------------------------------------

// PBAchieveParam

// optional uint32 Key = 1;
inline bool PBAchieveParam::has_key() const {
  return _has_bit(0);
}
inline void PBAchieveParam::clear_key() {
  key_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBAchieveParam::key() const {
  return key_;
}
inline void PBAchieveParam::set_key(::google::protobuf::uint32 value) {
  _set_bit(0);
  key_ = value;
}

// optional uint32 Value = 2;
inline bool PBAchieveParam::has_value() const {
  return _has_bit(1);
}
inline void PBAchieveParam::clear_value() {
  value_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBAchieveParam::value() const {
  return value_;
}
inline void PBAchieveParam::set_value(::google::protobuf::uint32 value) {
  _set_bit(1);
  value_ = value;
}

// -------------------------------------------------------------------

// PBDBAchieve

// optional uint32 AchieveID = 1;
inline bool PBDBAchieve::has_achieveid() const {
  return _has_bit(0);
}
inline void PBDBAchieve::clear_achieveid() {
  achieveid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDBAchieve::achieveid() const {
  return achieveid_;
}
inline void PBDBAchieve::set_achieveid(::google::protobuf::uint32 value) {
  _set_bit(0);
  achieveid_ = value;
}

// optional uint32 Time = 2;
inline bool PBDBAchieve::has_time() const {
  return _has_bit(1);
}
inline void PBDBAchieve::clear_time() {
  time_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBDBAchieve::time() const {
  return time_;
}
inline void PBDBAchieve::set_time(::google::protobuf::uint32 value) {
  _set_bit(1);
  time_ = value;
}

// optional uint32 Status = 3;
inline bool PBDBAchieve::has_status() const {
  return _has_bit(2);
}
inline void PBDBAchieve::clear_status() {
  status_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBDBAchieve::status() const {
  return status_;
}
inline void PBDBAchieve::set_status(::google::protobuf::uint32 value) {
  _set_bit(2);
  status_ = value;
}

// optional uint32 RootType = 4;
inline bool PBDBAchieve::has_roottype() const {
  return _has_bit(3);
}
inline void PBDBAchieve::clear_roottype() {
  roottype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBDBAchieve::roottype() const {
  return roottype_;
}
inline void PBDBAchieve::set_roottype(::google::protobuf::uint32 value) {
  _set_bit(3);
  roottype_ = value;
}

// repeated .PBAchieveParam Param = 5;
inline int PBDBAchieve::param_size() const {
  return param_.size();
}
inline void PBDBAchieve::clear_param() {
  param_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAchieveParam >&
PBDBAchieve::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAchieveParam >*
PBDBAchieve::mutable_param() {
  return &param_;
}
inline const ::PBAchieveParam& PBDBAchieve::param(int index) const {
  return param_.Get(index);
}
inline ::PBAchieveParam* PBDBAchieve::mutable_param(int index) {
  return param_.Mutable(index);
}
inline ::PBAchieveParam* PBDBAchieve::add_param() {
  return param_.Add();
}

// -------------------------------------------------------------------

// PBDBAchieveBuffer

// repeated .PBDBAchieve Achieve = 1;
inline int PBDBAchieveBuffer::achieve_size() const {
  return achieve_.size();
}
inline void PBDBAchieveBuffer::clear_achieve() {
  achieve_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDBAchieve >&
PBDBAchieveBuffer::achieve() const {
  return achieve_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDBAchieve >*
PBDBAchieveBuffer::mutable_achieve() {
  return &achieve_;
}
inline const ::PBDBAchieve& PBDBAchieveBuffer::achieve(int index) const {
  return achieve_.Get(index);
}
inline ::PBDBAchieve* PBDBAchieveBuffer::mutable_achieve(int index) {
  return achieve_.Mutable(index);
}
inline ::PBDBAchieve* PBDBAchieveBuffer::add_achieve() {
  return achieve_.Add();
}

// repeated .PBHonorData HonorData = 2;
inline int PBDBAchieveBuffer::honordata_size() const {
  return honordata_.size();
}
inline void PBDBAchieveBuffer::clear_honordata() {
  honordata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBHonorData >&
PBDBAchieveBuffer::honordata() const {
  return honordata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBHonorData >*
PBDBAchieveBuffer::mutable_honordata() {
  return &honordata_;
}
inline const ::PBHonorData& PBDBAchieveBuffer::honordata(int index) const {
  return honordata_.Get(index);
}
inline ::PBHonorData* PBDBAchieveBuffer::mutable_honordata(int index) {
  return honordata_.Mutable(index);
}
inline ::PBHonorData* PBDBAchieveBuffer::add_honordata() {
  return honordata_.Add();
}

// optional uint32 CharID = 3;
inline bool PBDBAchieveBuffer::has_charid() const {
  return _has_bit(2);
}
inline void PBDBAchieveBuffer::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBDBAchieveBuffer::charid() const {
  return charid_;
}
inline void PBDBAchieveBuffer::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 TotalPoint = 4;
inline bool PBDBAchieveBuffer::has_totalpoint() const {
  return _has_bit(3);
}
inline void PBDBAchieveBuffer::clear_totalpoint() {
  totalpoint_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBDBAchieveBuffer::totalpoint() const {
  return totalpoint_;
}
inline void PBDBAchieveBuffer::set_totalpoint(::google::protobuf::uint32 value) {
  _set_bit(3);
  totalpoint_ = value;
}

// optional uint32 Stage = 5;
inline bool PBDBAchieveBuffer::has_stage() const {
  return _has_bit(4);
}
inline void PBDBAchieveBuffer::clear_stage() {
  stage_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBDBAchieveBuffer::stage() const {
  return stage_;
}
inline void PBDBAchieveBuffer::set_stage(::google::protobuf::uint32 value) {
  _set_bit(4);
  stage_ = value;
}

// -------------------------------------------------------------------

// CMessageGetAllHonorRequest

// -------------------------------------------------------------------

// PBHonorData

// optional uint32 MapID = 1;
inline bool PBHonorData::has_mapid() const {
  return _has_bit(0);
}
inline void PBHonorData::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBHonorData::mapid() const {
  return mapid_;
}
inline void PBHonorData::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 Time = 2;
inline bool PBHonorData::has_time() const {
  return _has_bit(1);
}
inline void PBHonorData::clear_time() {
  time_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBHonorData::time() const {
  return time_;
}
inline void PBHonorData::set_time(::google::protobuf::uint32 value) {
  _set_bit(1);
  time_ = value;
}

// optional uint32 Param = 3;
inline bool PBHonorData::has_param() const {
  return _has_bit(2);
}
inline void PBHonorData::clear_param() {
  param_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBHonorData::param() const {
  return param_;
}
inline void PBHonorData::set_param(::google::protobuf::uint32 value) {
  _set_bit(2);
  param_ = value;
}

// -------------------------------------------------------------------

// CMessageGetAllHonorResponse

// repeated .PBHonorData HonorData = 1;
inline int CMessageGetAllHonorResponse::honordata_size() const {
  return honordata_.size();
}
inline void CMessageGetAllHonorResponse::clear_honordata() {
  honordata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBHonorData >&
CMessageGetAllHonorResponse::honordata() const {
  return honordata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBHonorData >*
CMessageGetAllHonorResponse::mutable_honordata() {
  return &honordata_;
}
inline const ::PBHonorData& CMessageGetAllHonorResponse::honordata(int index) const {
  return honordata_.Get(index);
}
inline ::PBHonorData* CMessageGetAllHonorResponse::mutable_honordata(int index) {
  return honordata_.Mutable(index);
}
inline ::PBHonorData* CMessageGetAllHonorResponse::add_honordata() {
  return honordata_.Add();
}

// -------------------------------------------------------------------

// CMessageHonorFinishNotice

// optional .PBHonorData HonorData = 1;
inline bool CMessageHonorFinishNotice::has_honordata() const {
  return _has_bit(0);
}
inline void CMessageHonorFinishNotice::clear_honordata() {
  if (honordata_ != NULL) honordata_->::PBHonorData::Clear();
  _clear_bit(0);
}
inline const ::PBHonorData& CMessageHonorFinishNotice::honordata() const {
  return honordata_ != NULL ? *honordata_ : *default_instance_->honordata_;
}
inline ::PBHonorData* CMessageHonorFinishNotice::mutable_honordata() {
  _set_bit(0);
  if (honordata_ == NULL) honordata_ = new ::PBHonorData;
  return honordata_;
}

// -------------------------------------------------------------------

// CMessageGetStageBonusRequest

// -------------------------------------------------------------------

// CMessageGetStageBonusResponse

// optional uint32 Result = 1;
inline bool CMessageGetStageBonusResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageGetStageBonusResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetStageBonusResponse::result() const {
  return result_;
}
inline void CMessageGetStageBonusResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 Stage = 2;
inline bool CMessageGetStageBonusResponse::has_stage() const {
  return _has_bit(1);
}
inline void CMessageGetStageBonusResponse::clear_stage() {
  stage_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetStageBonusResponse::stage() const {
  return stage_;
}
inline void CMessageGetStageBonusResponse::set_stage(::google::protobuf::uint32 value) {
  _set_bit(1);
  stage_ = value;
}

#endif  // PROTOBUF_achievemessage_5fpb_2ehxx__INCLUDED
