// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "mapmessage_pb.hxx.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>
#ifdef LEAK_CHK_DEBUG_NEW
#include "debug_new.h"
#endif

namespace {

const ::google::protobuf::Descriptor* CMessageDestroyEntityNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageDestroyEntityNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageYourMapDataNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageYourMapDataNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageTeleportNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageTeleportNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePlayerPathRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePlayerPathRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePlayerStopRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePlayerStopRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageEntityPathNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageEntityPathNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageEntityStopNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageEntityStopNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageEntityPosReSetCallBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageEntityPosReSetCallBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePlayerCanntMoveCallBack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePlayerCanntMoveCallBack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePetPathRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePetPathRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePetStopRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePetStopRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MAP_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mapmessage_5fpb_2ehxx() {
  protobuf_AddDesc_mapmessage_5fpb_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mapmessage_pb.hxx");
  GOOGLE_CHECK(file != NULL);
  CMessageDestroyEntityNotice_descriptor_ = file->message_type(0);
  static const int CMessageDestroyEntityNotice_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageDestroyEntityNotice, entityid_),
  };
  CMessageDestroyEntityNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageDestroyEntityNotice_descriptor_,
      CMessageDestroyEntityNotice::default_instance_,
      CMessageDestroyEntityNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageDestroyEntityNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageDestroyEntityNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageDestroyEntityNotice));
  CMessageYourMapDataNotice_descriptor_ = file->message_type(1);
  static const int CMessageYourMapDataNotice_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, motionstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, lineid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, charid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, mapname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, alivestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, countryname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, virtualmapid_),
  };
  CMessageYourMapDataNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageYourMapDataNotice_descriptor_,
      CMessageYourMapDataNotice::default_instance_,
      CMessageYourMapDataNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYourMapDataNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageYourMapDataNotice));
  CMessageTeleportNotice_descriptor_ = file->message_type(2);
  static const int CMessageTeleportNotice_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTeleportNotice, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTeleportNotice, posy_),
  };
  CMessageTeleportNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageTeleportNotice_descriptor_,
      CMessageTeleportNotice::default_instance_,
      CMessageTeleportNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTeleportNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTeleportNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageTeleportNotice));
  CMessagePlayerPathRequest_descriptor_ = file->message_type(3);
  static const int CMessagePlayerPathRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, srcposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, lineid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, srcposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, desposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, timecheck_),
  };
  CMessagePlayerPathRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePlayerPathRequest_descriptor_,
      CMessagePlayerPathRequest::default_instance_,
      CMessagePlayerPathRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerPathRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePlayerPathRequest));
  CMessagePlayerStopRequest_descriptor_ = file->message_type(4);
  static const int CMessagePlayerStopRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerStopRequest, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerStopRequest, lineid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerStopRequest, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerStopRequest, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerStopRequest, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerStopRequest, timecheck_),
  };
  CMessagePlayerStopRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePlayerStopRequest_descriptor_,
      CMessagePlayerStopRequest::default_instance_,
      CMessagePlayerStopRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerStopRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerStopRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePlayerStopRequest));
  CMessageEntityPathNotice_descriptor_ = file->message_type(5);
  static const int CMessageEntityPathNotice_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, srcposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, netspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, desposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, srcposx_),
  };
  CMessageEntityPathNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageEntityPathNotice_descriptor_,
      CMessageEntityPathNotice::default_instance_,
      CMessageEntityPathNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPathNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageEntityPathNotice));
  CMessageEntityStopNotice_descriptor_ = file->message_type(6);
  static const int CMessageEntityStopNotice_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityStopNotice, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityStopNotice, netspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityStopNotice, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityStopNotice, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityStopNotice, posy_),
  };
  CMessageEntityStopNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageEntityStopNotice_descriptor_,
      CMessageEntityStopNotice::default_instance_,
      CMessageEntityStopNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityStopNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityStopNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageEntityStopNotice));
  CMessageEntityPosReSetCallBack_descriptor_ = file->message_type(7);
  static const int CMessageEntityPosReSetCallBack_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPosReSetCallBack, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPosReSetCallBack, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPosReSetCallBack, entityid_),
  };
  CMessageEntityPosReSetCallBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageEntityPosReSetCallBack_descriptor_,
      CMessageEntityPosReSetCallBack::default_instance_,
      CMessageEntityPosReSetCallBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPosReSetCallBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityPosReSetCallBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageEntityPosReSetCallBack));
  CMessagePlayerCanntMoveCallBack_descriptor_ = file->message_type(8);
  static const int CMessagePlayerCanntMoveCallBack_offsets_[1] = {
  };
  CMessagePlayerCanntMoveCallBack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePlayerCanntMoveCallBack_descriptor_,
      CMessagePlayerCanntMoveCallBack::default_instance_,
      CMessagePlayerCanntMoveCallBack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerCanntMoveCallBack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerCanntMoveCallBack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePlayerCanntMoveCallBack));
  CMessagePetPathRequest_descriptor_ = file->message_type(9);
  static const int CMessagePetPathRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, srcposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, lineid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, srcposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, desposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, entityid_),
  };
  CMessagePetPathRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePetPathRequest_descriptor_,
      CMessagePetPathRequest::default_instance_,
      CMessagePetPathRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetPathRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePetPathRequest));
  CMessagePetStopRequest_descriptor_ = file->message_type(10);
  static const int CMessagePetStopRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetStopRequest, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetStopRequest, lineid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetStopRequest, direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetStopRequest, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetStopRequest, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetStopRequest, entityid_),
  };
  CMessagePetStopRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePetStopRequest_descriptor_,
      CMessagePetStopRequest::default_instance_,
      CMessagePetStopRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetStopRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePetStopRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePetStopRequest));
  MAP_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mapmessage_5fpb_2ehxx);
}

void protobuf_RegisterTypes() {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageDestroyEntityNotice_descriptor_, &CMessageDestroyEntityNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageYourMapDataNotice_descriptor_, &CMessageYourMapDataNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageTeleportNotice_descriptor_, &CMessageTeleportNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePlayerPathRequest_descriptor_, &CMessagePlayerPathRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePlayerStopRequest_descriptor_, &CMessagePlayerStopRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageEntityPathNotice_descriptor_, &CMessageEntityPathNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageEntityStopNotice_descriptor_, &CMessageEntityStopNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageEntityPosReSetCallBack_descriptor_, &CMessageEntityPosReSetCallBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePlayerCanntMoveCallBack_descriptor_, &CMessagePlayerCanntMoveCallBack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePetPathRequest_descriptor_, &CMessagePetPathRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePetStopRequest_descriptor_, &CMessagePetStopRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mapmessage_5fpb_2ehxx() {
  delete CMessageDestroyEntityNotice::default_instance_;
  delete CMessageDestroyEntityNotice_reflection_;
  delete CMessageYourMapDataNotice::default_instance_;
  delete CMessageYourMapDataNotice_reflection_;
  delete CMessageTeleportNotice::default_instance_;
  delete CMessageTeleportNotice_reflection_;
  delete CMessagePlayerPathRequest::default_instance_;
  delete CMessagePlayerPathRequest_reflection_;
  delete CMessagePlayerStopRequest::default_instance_;
  delete CMessagePlayerStopRequest_reflection_;
  delete CMessageEntityPathNotice::default_instance_;
  delete CMessageEntityPathNotice_reflection_;
  delete CMessageEntityStopNotice::default_instance_;
  delete CMessageEntityStopNotice_reflection_;
  delete CMessageEntityPosReSetCallBack::default_instance_;
  delete CMessageEntityPosReSetCallBack_reflection_;
  delete CMessagePlayerCanntMoveCallBack::default_instance_;
  delete CMessagePlayerCanntMoveCallBack_reflection_;
  delete CMessagePetPathRequest::default_instance_;
  delete CMessagePetPathRequest_reflection_;
  delete CMessagePetStopRequest::default_instance_;
  delete CMessagePetStopRequest_reflection_;
}

void protobuf_AddDesc_mapmessage_5fpb_2ehxx() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  #ifndef _NO_PROTOBUF_STR_
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021mapmessage_pb.hxx\"/\n\033CMessageDestroyEn"
    "tityNotice\022\020\n\010EntityID\030\001 \003(\r\"\336\001\n\031CMessag"
    "eYourMapDataNotice\022\023\n\013MotionState\030\001 \001(\r\022"
    "\r\n\005MapID\030\002 \001(\r\022\016\n\006LineID\030\003 \001(\r\022\014\n\004PosX\030\004"
    " \001(\r\022\016\n\006CharID\030\005 \001(\r\022\017\n\007MapName\030\006 \001(\t\022\022\n"
    "\nAliveState\030\007 \001(\r\022\014\n\004PosY\030\010 \001(\r\022\021\n\tDirec"
    "tion\030\t \001(\r\022\023\n\013CountryName\030\n \001(\t\022\024\n\014Virtu"
    "alMapID\030\013 \001(\r\"4\n\026CMessageTeleportNotice\022"
    "\014\n\004PosX\030\001 \001(\r\022\014\n\004PosY\030\002 \001(\r\"\244\001\n\031CMessage"
    "PlayerPathRequest\022\017\n\007SrcPosY\030\001 \001(\r\022\016\n\006Li"
    "neID\030\002 \001(\r\022\017\n\007DesPosX\030\003 \001(\r\022\021\n\tDirection"
    "\030\004 \001(\r\022\017\n\007SrcPosX\030\005 \001(\r\022\017\n\007DesPosY\030\006 \001(\r"
    "\022\r\n\005MapID\030\007 \001(\r\022\021\n\tTimeCheck\030\010 \001(\004\"|\n\031CM"
    "essagePlayerStopRequest\022\014\n\004PosY\030\001 \001(\r\022\016\n"
    "\006LineID\030\002 \001(\r\022\021\n\tDirection\030\003 \001(\r\022\014\n\004PosX"
    "\030\004 \001(\r\022\r\n\005MapID\030\005 \001(\r\022\021\n\tTimeCheck\030\006 \001(\004"
    "\"\225\001\n\030CMessageEntityPathNotice\022\020\n\010EntityI"
    "D\030\001 \001(\r\022\017\n\007SrcPosY\030\002 \001(\r\022\020\n\010NetSpeed\030\003 \001"
    "(\r\022\021\n\tDirection\030\004 \001(\r\022\017\n\007DesPosX\030\005 \001(\r\022\017"
    "\n\007DesPosY\030\006 \001(\r\022\017\n\007SrcPosX\030\007 \001(\r\"m\n\030CMes"
    "sageEntityStopNotice\022\021\n\tDirection\030\001 \001(\r\022"
    "\020\n\010NetSpeed\030\002 \001(\r\022\020\n\010EntityID\030\003 \001(\r\022\014\n\004P"
    "osX\030\004 \001(\r\022\014\n\004PosY\030\005 \001(\r\"H\n\036CMessageEntit"
    "yPosReSetCallBack\022\t\n\001Y\030\001 \001(\r\022\t\n\001X\030\002 \001(\r\022"
    "\020\n\010EntityID\030\003 \001(\r\"!\n\037CMessagePlayerCannt"
    "MoveCallBack\"\240\001\n\026CMessagePetPathRequest\022"
    "\017\n\007SrcPosY\030\001 \001(\r\022\016\n\006LineID\030\002 \001(\r\022\017\n\007DesP"
    "osX\030\003 \001(\r\022\021\n\tDirection\030\004 \001(\r\022\017\n\007SrcPosX\030"
    "\005 \001(\r\022\017\n\007DesPosY\030\006 \001(\r\022\r\n\005MapID\030\007 \001(\r\022\020\n"
    "\010EntityID\030\010 \001(\r\"x\n\026CMessagePetStopReques"
    "t\022\014\n\004PosY\030\001 \001(\r\022\016\n\006LineID\030\002 \001(\r\022\021\n\tDirec"
    "tion\030\003 \001(\r\022\014\n\004PosX\030\004 \001(\r\022\r\n\005MapID\030\005 \001(\r\022"
    "\020\n\010EntityID\030\006 \001(\r*\344\002\n\nMAP_MSG_ID\022\035\n\030ID_C"
    "2S_NOTICE_ENTITYPATH\020\201\030\022\035\n\030ID_S2C_NOTICE"
    "_ENTITYSTOP\020\202\030\022 \n\033ID_S2C_NOTICE_DESTROYE"
    "NTITY\020\203\030\022\036\n\031ID_S2C_NOTICE_YOURMAPDATA\020\204\030"
    "\022\033\n\026ID_S2C_NOTICE_TELEPORT\020\205\030\022\036\n\031ID_C2S_"
    "REQUEST_PLAYERPATH\020\206\030\022\036\n\031ID_C2S_REQUEST_"
    "PLAYERSTOP\020\207\030\022!\n\034ID_S2C_NOTICE_ENTITYPOS"
    "RESET\020\210\030\022\034\n\027ID_S2C_NOTICE_CANNTMOVE\020\211\030\022\033"
    "\n\026ID_C2S_REQUEST_PETPATH\020\212\030\022\033\n\026ID_C2S_RE"
    "QUEST_PETSTOP\020\213\030B\002H\001", 1660);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mapmessage_pb.hxx", &protobuf_RegisterTypes);
  #endif
  CMessageDestroyEntityNotice::default_instance_ = new CMessageDestroyEntityNotice();
  CMessageYourMapDataNotice::default_instance_ = new CMessageYourMapDataNotice();
  CMessageTeleportNotice::default_instance_ = new CMessageTeleportNotice();
  CMessagePlayerPathRequest::default_instance_ = new CMessagePlayerPathRequest();
  CMessagePlayerStopRequest::default_instance_ = new CMessagePlayerStopRequest();
  CMessageEntityPathNotice::default_instance_ = new CMessageEntityPathNotice();
  CMessageEntityStopNotice::default_instance_ = new CMessageEntityStopNotice();
  CMessageEntityPosReSetCallBack::default_instance_ = new CMessageEntityPosReSetCallBack();
  CMessagePlayerCanntMoveCallBack::default_instance_ = new CMessagePlayerCanntMoveCallBack();
  CMessagePetPathRequest::default_instance_ = new CMessagePetPathRequest();
  CMessagePetStopRequest::default_instance_ = new CMessagePetStopRequest();
  CMessageDestroyEntityNotice::default_instance_->InitAsDefaultInstance();
  CMessageYourMapDataNotice::default_instance_->InitAsDefaultInstance();
  CMessageTeleportNotice::default_instance_->InitAsDefaultInstance();
  CMessagePlayerPathRequest::default_instance_->InitAsDefaultInstance();
  CMessagePlayerStopRequest::default_instance_->InitAsDefaultInstance();
  CMessageEntityPathNotice::default_instance_->InitAsDefaultInstance();
  CMessageEntityStopNotice::default_instance_->InitAsDefaultInstance();
  CMessageEntityPosReSetCallBack::default_instance_->InitAsDefaultInstance();
  CMessagePlayerCanntMoveCallBack::default_instance_->InitAsDefaultInstance();
  CMessagePetPathRequest::default_instance_->InitAsDefaultInstance();
  CMessagePetStopRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mapmessage_5fpb_2ehxx);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mapmessage_5fpb_2ehxx {
  StaticDescriptorInitializer_mapmessage_5fpb_2ehxx() {
    protobuf_AddDesc_mapmessage_5fpb_2ehxx();
  }
} static_descriptor_initializer_mapmessage_5fpb_2ehxx_;

const ::google::protobuf::EnumDescriptor* MAP_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MAP_MSG_ID_descriptor_;
}
bool MAP_MSG_ID_IsValid(int value) {
  switch(value) {
    case 3073:
    case 3074:
    case 3075:
    case 3076:
    case 3077:
    case 3078:
    case 3079:
    case 3080:
    case 3081:
    case 3082:
    case 3083:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMessageDestroyEntityNotice::kEntityIDFieldNumber;
#endif  // !_MSC_VER

CMessageDestroyEntityNotice::CMessageDestroyEntityNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageDestroyEntityNotice::InitAsDefaultInstance() {}

CMessageDestroyEntityNotice::CMessageDestroyEntityNotice(const CMessageDestroyEntityNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageDestroyEntityNotice::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageDestroyEntityNotice::~CMessageDestroyEntityNotice() {
  SharedDtor();
}

void CMessageDestroyEntityNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageDestroyEntityNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageDestroyEntityNotice_descriptor_;
}

const CMessageDestroyEntityNotice& CMessageDestroyEntityNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageDestroyEntityNotice* CMessageDestroyEntityNotice::default_instance_ = NULL;

CMessageDestroyEntityNotice* CMessageDestroyEntityNotice::New() const {
  return new CMessageDestroyEntityNotice;
}

void CMessageDestroyEntityNotice::Clear() {
  entityid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageDestroyEntityNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // repeated uint32 EntityID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_EntityID:
        ::google::protobuf::uint32 value;
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(input, &value));
        add_entityid(value);
        if (input->ExpectTag(8)) goto parse_EntityID;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageDestroyEntityNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageDestroyEntityNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated uint32 EntityID = 1;
  for (int i = 0; i < this->entityid_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->entityid(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageDestroyEntityNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 EntityID = 1;
  for (int i = 0; i < this->entityid_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->entityid(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageDestroyEntityNotice::ByteSize() const {
  int total_size = 0;
  
  // repeated uint32 EntityID = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->entityid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormat::UInt32Size(
        this->entityid(i));
    }
    total_size += 1 * this->entityid_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageDestroyEntityNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageDestroyEntityNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageDestroyEntityNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageDestroyEntityNotice::MergeFrom(const CMessageDestroyEntityNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  entityid_.MergeFrom(from.entityid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageDestroyEntityNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageDestroyEntityNotice::CopyFrom(const CMessageDestroyEntityNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageDestroyEntityNotice::Swap(CMessageDestroyEntityNotice* other) {
  if (other != this) {
    entityid_.Swap(&other->entityid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageDestroyEntityNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageDestroyEntityNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageDestroyEntityNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageDestroyEntityNotice_reflection_;
}

// ===================================================================

const ::std::string CMessageYourMapDataNotice::_default_mapname_;
const ::std::string CMessageYourMapDataNotice::_default_countryname_;
#ifndef _MSC_VER
const int CMessageYourMapDataNotice::kMotionStateFieldNumber;
const int CMessageYourMapDataNotice::kMapIDFieldNumber;
const int CMessageYourMapDataNotice::kLineIDFieldNumber;
const int CMessageYourMapDataNotice::kPosXFieldNumber;
const int CMessageYourMapDataNotice::kCharIDFieldNumber;
const int CMessageYourMapDataNotice::kMapNameFieldNumber;
const int CMessageYourMapDataNotice::kAliveStateFieldNumber;
const int CMessageYourMapDataNotice::kPosYFieldNumber;
const int CMessageYourMapDataNotice::kDirectionFieldNumber;
const int CMessageYourMapDataNotice::kCountryNameFieldNumber;
const int CMessageYourMapDataNotice::kVirtualMapIDFieldNumber;
#endif  // !_MSC_VER

CMessageYourMapDataNotice::CMessageYourMapDataNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageYourMapDataNotice::InitAsDefaultInstance() {}

CMessageYourMapDataNotice::CMessageYourMapDataNotice(const CMessageYourMapDataNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageYourMapDataNotice::SharedCtor() {
  _cached_size_ = 0;
  motionstate_ = 0u;
  mapid_ = 0u;
  lineid_ = 0u;
  posx_ = 0u;
  charid_ = 0u;
  mapname_ = const_cast< ::std::string*>(&_default_mapname_);
  alivestate_ = 0u;
  posy_ = 0u;
  direction_ = 0u;
  countryname_ = const_cast< ::std::string*>(&_default_countryname_);
  virtualmapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageYourMapDataNotice::~CMessageYourMapDataNotice() {
  SharedDtor();
}

void CMessageYourMapDataNotice::SharedDtor() {
  if (mapname_ != &_default_mapname_) {
    delete mapname_;
  }
  if (countryname_ != &_default_countryname_) {
    delete countryname_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageYourMapDataNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageYourMapDataNotice_descriptor_;
}

const CMessageYourMapDataNotice& CMessageYourMapDataNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageYourMapDataNotice* CMessageYourMapDataNotice::default_instance_ = NULL;

CMessageYourMapDataNotice* CMessageYourMapDataNotice::New() const {
  return new CMessageYourMapDataNotice;
}

void CMessageYourMapDataNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    motionstate_ = 0u;
    mapid_ = 0u;
    lineid_ = 0u;
    posx_ = 0u;
    charid_ = 0u;
    if (_has_bit(5)) {
      if (mapname_ != &_default_mapname_) {
        mapname_->clear();
      }
    }
    alivestate_ = 0u;
    posy_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    direction_ = 0u;
    if (_has_bit(9)) {
      if (countryname_ != &_default_countryname_) {
        countryname_->clear();
      }
    }
    virtualmapid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageYourMapDataNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 MotionState = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &motionstate_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_MapID;
        break;
      }
      
      // optional uint32 MapID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_MapID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &mapid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_LineID;
        break;
      }
      
      // optional uint32 LineID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_LineID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &lineid_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_PosX;
        break;
      }
      
      // optional uint32 PosX = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posx_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_CharID;
        break;
      }
      
      // optional uint32 CharID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_CharID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &charid_));
        _set_bit(4);
        if (input->ExpectTag(50)) goto parse_MapName;
        break;
      }
      
      // optional string MapName = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_MapName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_mapname()));
        if (input->ExpectTag(56)) goto parse_AliveState;
        break;
      }
      
      // optional uint32 AliveState = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_AliveState:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &alivestate_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_PosY;
        break;
      }
      
      // optional uint32 PosY = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posy_));
        _set_bit(7);
        if (input->ExpectTag(72)) goto parse_Direction;
        break;
      }
      
      // optional uint32 Direction = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Direction:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &direction_));
        _set_bit(8);
        if (input->ExpectTag(82)) goto parse_CountryName;
        break;
      }
      
      // optional string CountryName = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_CountryName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_countryname()));
        if (input->ExpectTag(88)) goto parse_VirtualMapID;
        break;
      }
      
      // optional uint32 VirtualMapID = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_VirtualMapID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &virtualmapid_));
        _set_bit(10);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageYourMapDataNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageYourMapDataNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 MotionState = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->motionstate(), output);
  }
  
  // optional uint32 MapID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->mapid(), output);
  }
  
  // optional uint32 LineID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->lineid(), output);
  }
  
  // optional uint32 PosX = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->posx(), output);
  }
  
  // optional uint32 CharID = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->charid(), output);
  }
  
  // optional string MapName = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteString(6, this->mapname(), output);
  }
  
  // optional uint32 AliveState = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->alivestate(), output);
  }
  
  // optional uint32 PosY = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(8, this->posy(), output);
  }
  
  // optional uint32 Direction = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(9, this->direction(), output);
  }
  
  // optional string CountryName = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormat::WriteString(10, this->countryname(), output);
  }
  
  // optional uint32 VirtualMapID = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(11, this->virtualmapid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageYourMapDataNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 MotionState = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->motionstate(), target);
  }
  
  // optional uint32 MapID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->mapid(), target);
  }
  
  // optional uint32 LineID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->lineid(), target);
  }
  
  // optional uint32 PosX = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->posx(), target);
  }
  
  // optional uint32 CharID = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->charid(), target);
  }
  
  // optional string MapName = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(6, this->mapname(), target);
  }
  
  // optional uint32 AliveState = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->alivestate(), target);
  }
  
  // optional uint32 PosY = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(8, this->posy(), target);
  }
  
  // optional uint32 Direction = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(9, this->direction(), target);
  }
  
  // optional string CountryName = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(10, this->countryname(), target);
  }
  
  // optional uint32 VirtualMapID = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(11, this->virtualmapid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageYourMapDataNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MotionState = 1;
    if (has_motionstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->motionstate());
    }
    
    // optional uint32 MapID = 2;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->mapid());
    }
    
    // optional uint32 LineID = 3;
    if (has_lineid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->lineid());
    }
    
    // optional uint32 PosX = 4;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posx());
    }
    
    // optional uint32 CharID = 5;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->charid());
    }
    
    // optional string MapName = 6;
    if (has_mapname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->mapname());
    }
    
    // optional uint32 AliveState = 7;
    if (has_alivestate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->alivestate());
    }
    
    // optional uint32 PosY = 8;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posy());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 Direction = 9;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->direction());
    }
    
    // optional string CountryName = 10;
    if (has_countryname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->countryname());
    }
    
    // optional uint32 VirtualMapID = 11;
    if (has_virtualmapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->virtualmapid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageYourMapDataNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageYourMapDataNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageYourMapDataNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageYourMapDataNotice::MergeFrom(const CMessageYourMapDataNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_motionstate(from.motionstate());
    }
    if (from._has_bit(1)) {
      set_mapid(from.mapid());
    }
    if (from._has_bit(2)) {
      set_lineid(from.lineid());
    }
    if (from._has_bit(3)) {
      set_posx(from.posx());
    }
    if (from._has_bit(4)) {
      set_charid(from.charid());
    }
    if (from._has_bit(5)) {
      set_mapname(from.mapname());
    }
    if (from._has_bit(6)) {
      set_alivestate(from.alivestate());
    }
    if (from._has_bit(7)) {
      set_posy(from.posy());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_direction(from.direction());
    }
    if (from._has_bit(9)) {
      set_countryname(from.countryname());
    }
    if (from._has_bit(10)) {
      set_virtualmapid(from.virtualmapid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageYourMapDataNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageYourMapDataNotice::CopyFrom(const CMessageYourMapDataNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageYourMapDataNotice::Swap(CMessageYourMapDataNotice* other) {
  if (other != this) {
    std::swap(motionstate_, other->motionstate_);
    std::swap(mapid_, other->mapid_);
    std::swap(lineid_, other->lineid_);
    std::swap(posx_, other->posx_);
    std::swap(charid_, other->charid_);
    std::swap(mapname_, other->mapname_);
    std::swap(alivestate_, other->alivestate_);
    std::swap(posy_, other->posy_);
    std::swap(direction_, other->direction_);
    std::swap(countryname_, other->countryname_);
    std::swap(virtualmapid_, other->virtualmapid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageYourMapDataNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageYourMapDataNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageYourMapDataNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageYourMapDataNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageTeleportNotice::kPosXFieldNumber;
const int CMessageTeleportNotice::kPosYFieldNumber;
#endif  // !_MSC_VER

CMessageTeleportNotice::CMessageTeleportNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageTeleportNotice::InitAsDefaultInstance() {}

CMessageTeleportNotice::CMessageTeleportNotice(const CMessageTeleportNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageTeleportNotice::SharedCtor() {
  _cached_size_ = 0;
  posx_ = 0u;
  posy_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageTeleportNotice::~CMessageTeleportNotice() {
  SharedDtor();
}

void CMessageTeleportNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageTeleportNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageTeleportNotice_descriptor_;
}

const CMessageTeleportNotice& CMessageTeleportNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageTeleportNotice* CMessageTeleportNotice::default_instance_ = NULL;

CMessageTeleportNotice* CMessageTeleportNotice::New() const {
  return new CMessageTeleportNotice;
}

void CMessageTeleportNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    posx_ = 0u;
    posy_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageTeleportNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 PosX = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posx_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_PosY;
        break;
      }
      
      // optional uint32 PosY = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posy_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageTeleportNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageTeleportNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 PosX = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->posx(), output);
  }
  
  // optional uint32 PosY = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->posy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageTeleportNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 PosX = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->posx(), target);
  }
  
  // optional uint32 PosY = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->posy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageTeleportNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PosX = 1;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posx());
    }
    
    // optional uint32 PosY = 2;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageTeleportNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageTeleportNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageTeleportNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageTeleportNotice::MergeFrom(const CMessageTeleportNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_posx(from.posx());
    }
    if (from._has_bit(1)) {
      set_posy(from.posy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageTeleportNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageTeleportNotice::CopyFrom(const CMessageTeleportNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageTeleportNotice::Swap(CMessageTeleportNotice* other) {
  if (other != this) {
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageTeleportNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageTeleportNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageTeleportNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageTeleportNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePlayerPathRequest::kSrcPosYFieldNumber;
const int CMessagePlayerPathRequest::kLineIDFieldNumber;
const int CMessagePlayerPathRequest::kDesPosXFieldNumber;
const int CMessagePlayerPathRequest::kDirectionFieldNumber;
const int CMessagePlayerPathRequest::kSrcPosXFieldNumber;
const int CMessagePlayerPathRequest::kDesPosYFieldNumber;
const int CMessagePlayerPathRequest::kMapIDFieldNumber;
const int CMessagePlayerPathRequest::kTimeCheckFieldNumber;
#endif  // !_MSC_VER

CMessagePlayerPathRequest::CMessagePlayerPathRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePlayerPathRequest::InitAsDefaultInstance() {}

CMessagePlayerPathRequest::CMessagePlayerPathRequest(const CMessagePlayerPathRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePlayerPathRequest::SharedCtor() {
  _cached_size_ = 0;
  srcposy_ = 0u;
  lineid_ = 0u;
  desposx_ = 0u;
  direction_ = 0u;
  srcposx_ = 0u;
  desposy_ = 0u;
  mapid_ = 0u;
  timecheck_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePlayerPathRequest::~CMessagePlayerPathRequest() {
  SharedDtor();
}

void CMessagePlayerPathRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePlayerPathRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerPathRequest_descriptor_;
}

const CMessagePlayerPathRequest& CMessagePlayerPathRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessagePlayerPathRequest* CMessagePlayerPathRequest::default_instance_ = NULL;

CMessagePlayerPathRequest* CMessagePlayerPathRequest::New() const {
  return new CMessagePlayerPathRequest;
}

void CMessagePlayerPathRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    srcposy_ = 0u;
    lineid_ = 0u;
    desposx_ = 0u;
    direction_ = 0u;
    srcposx_ = 0u;
    desposy_ = 0u;
    mapid_ = 0u;
    timecheck_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePlayerPathRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 SrcPosY = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposy_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_LineID;
        break;
      }
      
      // optional uint32 LineID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_LineID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &lineid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_DesPosX;
        break;
      }
      
      // optional uint32 DesPosX = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposx_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_Direction;
        break;
      }
      
      // optional uint32 Direction = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Direction:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &direction_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_SrcPosX;
        break;
      }
      
      // optional uint32 SrcPosX = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SrcPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposx_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_DesPosY;
        break;
      }
      
      // optional uint32 DesPosY = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposy_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_MapID;
        break;
      }
      
      // optional uint32 MapID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_MapID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &mapid_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_TimeCheck;
        break;
      }
      
      // optional uint64 TimeCheck = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_TimeCheck:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt64(
              input, &timecheck_));
        _set_bit(7);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePlayerPathRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePlayerPathRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 SrcPosY = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->srcposy(), output);
  }
  
  // optional uint32 LineID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->lineid(), output);
  }
  
  // optional uint32 DesPosX = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->desposx(), output);
  }
  
  // optional uint32 Direction = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->direction(), output);
  }
  
  // optional uint32 SrcPosX = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->srcposx(), output);
  }
  
  // optional uint32 DesPosY = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->desposy(), output);
  }
  
  // optional uint32 MapID = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->mapid(), output);
  }
  
  // optional uint64 TimeCheck = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::WriteUInt64(8, this->timecheck(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePlayerPathRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 SrcPosY = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->srcposy(), target);
  }
  
  // optional uint32 LineID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->lineid(), target);
  }
  
  // optional uint32 DesPosX = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->desposx(), target);
  }
  
  // optional uint32 Direction = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->direction(), target);
  }
  
  // optional uint32 SrcPosX = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->srcposx(), target);
  }
  
  // optional uint32 DesPosY = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->desposy(), target);
  }
  
  // optional uint32 MapID = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->mapid(), target);
  }
  
  // optional uint64 TimeCheck = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt64ToArray(8, this->timecheck(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePlayerPathRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SrcPosY = 1;
    if (has_srcposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposy());
    }
    
    // optional uint32 LineID = 2;
    if (has_lineid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->lineid());
    }
    
    // optional uint32 DesPosX = 3;
    if (has_desposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposx());
    }
    
    // optional uint32 Direction = 4;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->direction());
    }
    
    // optional uint32 SrcPosX = 5;
    if (has_srcposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposx());
    }
    
    // optional uint32 DesPosY = 6;
    if (has_desposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposy());
    }
    
    // optional uint32 MapID = 7;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->mapid());
    }
    
    // optional uint64 TimeCheck = 8;
    if (has_timecheck()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt64Size(
          this->timecheck());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePlayerPathRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePlayerPathRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePlayerPathRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePlayerPathRequest::MergeFrom(const CMessagePlayerPathRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_srcposy(from.srcposy());
    }
    if (from._has_bit(1)) {
      set_lineid(from.lineid());
    }
    if (from._has_bit(2)) {
      set_desposx(from.desposx());
    }
    if (from._has_bit(3)) {
      set_direction(from.direction());
    }
    if (from._has_bit(4)) {
      set_srcposx(from.srcposx());
    }
    if (from._has_bit(5)) {
      set_desposy(from.desposy());
    }
    if (from._has_bit(6)) {
      set_mapid(from.mapid());
    }
    if (from._has_bit(7)) {
      set_timecheck(from.timecheck());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePlayerPathRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerPathRequest::CopyFrom(const CMessagePlayerPathRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerPathRequest::Swap(CMessagePlayerPathRequest* other) {
  if (other != this) {
    std::swap(srcposy_, other->srcposy_);
    std::swap(lineid_, other->lineid_);
    std::swap(desposx_, other->desposx_);
    std::swap(direction_, other->direction_);
    std::swap(srcposx_, other->srcposx_);
    std::swap(desposy_, other->desposy_);
    std::swap(mapid_, other->mapid_);
    std::swap(timecheck_, other->timecheck_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePlayerPathRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePlayerPathRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePlayerPathRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerPathRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePlayerStopRequest::kPosYFieldNumber;
const int CMessagePlayerStopRequest::kLineIDFieldNumber;
const int CMessagePlayerStopRequest::kDirectionFieldNumber;
const int CMessagePlayerStopRequest::kPosXFieldNumber;
const int CMessagePlayerStopRequest::kMapIDFieldNumber;
const int CMessagePlayerStopRequest::kTimeCheckFieldNumber;
#endif  // !_MSC_VER

CMessagePlayerStopRequest::CMessagePlayerStopRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePlayerStopRequest::InitAsDefaultInstance() {}

CMessagePlayerStopRequest::CMessagePlayerStopRequest(const CMessagePlayerStopRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePlayerStopRequest::SharedCtor() {
  _cached_size_ = 0;
  posy_ = 0u;
  lineid_ = 0u;
  direction_ = 0u;
  posx_ = 0u;
  mapid_ = 0u;
  timecheck_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePlayerStopRequest::~CMessagePlayerStopRequest() {
  SharedDtor();
}

void CMessagePlayerStopRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePlayerStopRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerStopRequest_descriptor_;
}

const CMessagePlayerStopRequest& CMessagePlayerStopRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessagePlayerStopRequest* CMessagePlayerStopRequest::default_instance_ = NULL;

CMessagePlayerStopRequest* CMessagePlayerStopRequest::New() const {
  return new CMessagePlayerStopRequest;
}

void CMessagePlayerStopRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    posy_ = 0u;
    lineid_ = 0u;
    direction_ = 0u;
    posx_ = 0u;
    mapid_ = 0u;
    timecheck_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePlayerStopRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 PosY = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posy_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_LineID;
        break;
      }
      
      // optional uint32 LineID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_LineID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &lineid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_Direction;
        break;
      }
      
      // optional uint32 Direction = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Direction:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &direction_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_PosX;
        break;
      }
      
      // optional uint32 PosX = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posx_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_MapID;
        break;
      }
      
      // optional uint32 MapID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_MapID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &mapid_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_TimeCheck;
        break;
      }
      
      // optional uint64 TimeCheck = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_TimeCheck:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt64(
              input, &timecheck_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePlayerStopRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePlayerStopRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 PosY = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->posy(), output);
  }
  
  // optional uint32 LineID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->lineid(), output);
  }
  
  // optional uint32 Direction = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->direction(), output);
  }
  
  // optional uint32 PosX = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->posx(), output);
  }
  
  // optional uint32 MapID = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->mapid(), output);
  }
  
  // optional uint64 TimeCheck = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt64(6, this->timecheck(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePlayerStopRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 PosY = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->posy(), target);
  }
  
  // optional uint32 LineID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->lineid(), target);
  }
  
  // optional uint32 Direction = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->direction(), target);
  }
  
  // optional uint32 PosX = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->posx(), target);
  }
  
  // optional uint32 MapID = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->mapid(), target);
  }
  
  // optional uint64 TimeCheck = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt64ToArray(6, this->timecheck(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePlayerStopRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PosY = 1;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posy());
    }
    
    // optional uint32 LineID = 2;
    if (has_lineid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->lineid());
    }
    
    // optional uint32 Direction = 3;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->direction());
    }
    
    // optional uint32 PosX = 4;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posx());
    }
    
    // optional uint32 MapID = 5;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->mapid());
    }
    
    // optional uint64 TimeCheck = 6;
    if (has_timecheck()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt64Size(
          this->timecheck());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePlayerStopRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePlayerStopRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePlayerStopRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePlayerStopRequest::MergeFrom(const CMessagePlayerStopRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_posy(from.posy());
    }
    if (from._has_bit(1)) {
      set_lineid(from.lineid());
    }
    if (from._has_bit(2)) {
      set_direction(from.direction());
    }
    if (from._has_bit(3)) {
      set_posx(from.posx());
    }
    if (from._has_bit(4)) {
      set_mapid(from.mapid());
    }
    if (from._has_bit(5)) {
      set_timecheck(from.timecheck());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePlayerStopRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerStopRequest::CopyFrom(const CMessagePlayerStopRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerStopRequest::Swap(CMessagePlayerStopRequest* other) {
  if (other != this) {
    std::swap(posy_, other->posy_);
    std::swap(lineid_, other->lineid_);
    std::swap(direction_, other->direction_);
    std::swap(posx_, other->posx_);
    std::swap(mapid_, other->mapid_);
    std::swap(timecheck_, other->timecheck_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePlayerStopRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePlayerStopRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePlayerStopRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerStopRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageEntityPathNotice::kEntityIDFieldNumber;
const int CMessageEntityPathNotice::kSrcPosYFieldNumber;
const int CMessageEntityPathNotice::kNetSpeedFieldNumber;
const int CMessageEntityPathNotice::kDirectionFieldNumber;
const int CMessageEntityPathNotice::kDesPosXFieldNumber;
const int CMessageEntityPathNotice::kDesPosYFieldNumber;
const int CMessageEntityPathNotice::kSrcPosXFieldNumber;
#endif  // !_MSC_VER

CMessageEntityPathNotice::CMessageEntityPathNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageEntityPathNotice::InitAsDefaultInstance() {}

CMessageEntityPathNotice::CMessageEntityPathNotice(const CMessageEntityPathNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageEntityPathNotice::SharedCtor() {
  _cached_size_ = 0;
  entityid_ = 0u;
  srcposy_ = 0u;
  netspeed_ = 0u;
  direction_ = 0u;
  desposx_ = 0u;
  desposy_ = 0u;
  srcposx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageEntityPathNotice::~CMessageEntityPathNotice() {
  SharedDtor();
}

void CMessageEntityPathNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageEntityPathNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageEntityPathNotice_descriptor_;
}

const CMessageEntityPathNotice& CMessageEntityPathNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageEntityPathNotice* CMessageEntityPathNotice::default_instance_ = NULL;

CMessageEntityPathNotice* CMessageEntityPathNotice::New() const {
  return new CMessageEntityPathNotice;
}

void CMessageEntityPathNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    entityid_ = 0u;
    srcposy_ = 0u;
    netspeed_ = 0u;
    direction_ = 0u;
    desposx_ = 0u;
    desposy_ = 0u;
    srcposx_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageEntityPathNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &entityid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_SrcPosY;
        break;
      }
      
      // optional uint32 SrcPosY = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SrcPosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposy_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_NetSpeed;
        break;
      }
      
      // optional uint32 NetSpeed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_NetSpeed:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &netspeed_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_Direction;
        break;
      }
      
      // optional uint32 Direction = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Direction:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &direction_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_DesPosX;
        break;
      }
      
      // optional uint32 DesPosX = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposx_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_DesPosY;
        break;
      }
      
      // optional uint32 DesPosY = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposy_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_SrcPosX;
        break;
      }
      
      // optional uint32 SrcPosX = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SrcPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposx_));
        _set_bit(6);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageEntityPathNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageEntityPathNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 EntityID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->entityid(), output);
  }
  
  // optional uint32 SrcPosY = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->srcposy(), output);
  }
  
  // optional uint32 NetSpeed = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->netspeed(), output);
  }
  
  // optional uint32 Direction = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->direction(), output);
  }
  
  // optional uint32 DesPosX = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->desposx(), output);
  }
  
  // optional uint32 DesPosY = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->desposy(), output);
  }
  
  // optional uint32 SrcPosX = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->srcposx(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageEntityPathNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 EntityID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->entityid(), target);
  }
  
  // optional uint32 SrcPosY = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->srcposy(), target);
  }
  
  // optional uint32 NetSpeed = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->netspeed(), target);
  }
  
  // optional uint32 Direction = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->direction(), target);
  }
  
  // optional uint32 DesPosX = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->desposx(), target);
  }
  
  // optional uint32 DesPosY = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->desposy(), target);
  }
  
  // optional uint32 SrcPosX = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->srcposx(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageEntityPathNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 EntityID = 1;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->entityid());
    }
    
    // optional uint32 SrcPosY = 2;
    if (has_srcposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposy());
    }
    
    // optional uint32 NetSpeed = 3;
    if (has_netspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->netspeed());
    }
    
    // optional uint32 Direction = 4;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->direction());
    }
    
    // optional uint32 DesPosX = 5;
    if (has_desposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposx());
    }
    
    // optional uint32 DesPosY = 6;
    if (has_desposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposy());
    }
    
    // optional uint32 SrcPosX = 7;
    if (has_srcposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposx());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageEntityPathNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageEntityPathNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageEntityPathNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageEntityPathNotice::MergeFrom(const CMessageEntityPathNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_entityid(from.entityid());
    }
    if (from._has_bit(1)) {
      set_srcposy(from.srcposy());
    }
    if (from._has_bit(2)) {
      set_netspeed(from.netspeed());
    }
    if (from._has_bit(3)) {
      set_direction(from.direction());
    }
    if (from._has_bit(4)) {
      set_desposx(from.desposx());
    }
    if (from._has_bit(5)) {
      set_desposy(from.desposy());
    }
    if (from._has_bit(6)) {
      set_srcposx(from.srcposx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageEntityPathNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEntityPathNotice::CopyFrom(const CMessageEntityPathNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEntityPathNotice::Swap(CMessageEntityPathNotice* other) {
  if (other != this) {
    std::swap(entityid_, other->entityid_);
    std::swap(srcposy_, other->srcposy_);
    std::swap(netspeed_, other->netspeed_);
    std::swap(direction_, other->direction_);
    std::swap(desposx_, other->desposx_);
    std::swap(desposy_, other->desposy_);
    std::swap(srcposx_, other->srcposx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageEntityPathNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageEntityPathNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageEntityPathNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageEntityPathNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageEntityStopNotice::kDirectionFieldNumber;
const int CMessageEntityStopNotice::kNetSpeedFieldNumber;
const int CMessageEntityStopNotice::kEntityIDFieldNumber;
const int CMessageEntityStopNotice::kPosXFieldNumber;
const int CMessageEntityStopNotice::kPosYFieldNumber;
#endif  // !_MSC_VER

CMessageEntityStopNotice::CMessageEntityStopNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageEntityStopNotice::InitAsDefaultInstance() {}

CMessageEntityStopNotice::CMessageEntityStopNotice(const CMessageEntityStopNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageEntityStopNotice::SharedCtor() {
  _cached_size_ = 0;
  direction_ = 0u;
  netspeed_ = 0u;
  entityid_ = 0u;
  posx_ = 0u;
  posy_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageEntityStopNotice::~CMessageEntityStopNotice() {
  SharedDtor();
}

void CMessageEntityStopNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageEntityStopNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageEntityStopNotice_descriptor_;
}

const CMessageEntityStopNotice& CMessageEntityStopNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageEntityStopNotice* CMessageEntityStopNotice::default_instance_ = NULL;

CMessageEntityStopNotice* CMessageEntityStopNotice::New() const {
  return new CMessageEntityStopNotice;
}

void CMessageEntityStopNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    direction_ = 0u;
    netspeed_ = 0u;
    entityid_ = 0u;
    posx_ = 0u;
    posy_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageEntityStopNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Direction = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &direction_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_NetSpeed;
        break;
      }
      
      // optional uint32 NetSpeed = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_NetSpeed:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &netspeed_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_EntityID;
        break;
      }
      
      // optional uint32 EntityID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_EntityID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &entityid_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_PosX;
        break;
      }
      
      // optional uint32 PosX = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posx_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_PosY;
        break;
      }
      
      // optional uint32 PosY = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posy_));
        _set_bit(4);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageEntityStopNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageEntityStopNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Direction = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->direction(), output);
  }
  
  // optional uint32 NetSpeed = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->netspeed(), output);
  }
  
  // optional uint32 EntityID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->entityid(), output);
  }
  
  // optional uint32 PosX = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->posx(), output);
  }
  
  // optional uint32 PosY = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->posy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageEntityStopNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Direction = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->direction(), target);
  }
  
  // optional uint32 NetSpeed = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->netspeed(), target);
  }
  
  // optional uint32 EntityID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->entityid(), target);
  }
  
  // optional uint32 PosX = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->posx(), target);
  }
  
  // optional uint32 PosY = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->posy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageEntityStopNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Direction = 1;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->direction());
    }
    
    // optional uint32 NetSpeed = 2;
    if (has_netspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->netspeed());
    }
    
    // optional uint32 EntityID = 3;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->entityid());
    }
    
    // optional uint32 PosX = 4;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posx());
    }
    
    // optional uint32 PosY = 5;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageEntityStopNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageEntityStopNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageEntityStopNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageEntityStopNotice::MergeFrom(const CMessageEntityStopNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_direction(from.direction());
    }
    if (from._has_bit(1)) {
      set_netspeed(from.netspeed());
    }
    if (from._has_bit(2)) {
      set_entityid(from.entityid());
    }
    if (from._has_bit(3)) {
      set_posx(from.posx());
    }
    if (from._has_bit(4)) {
      set_posy(from.posy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageEntityStopNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEntityStopNotice::CopyFrom(const CMessageEntityStopNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEntityStopNotice::Swap(CMessageEntityStopNotice* other) {
  if (other != this) {
    std::swap(direction_, other->direction_);
    std::swap(netspeed_, other->netspeed_);
    std::swap(entityid_, other->entityid_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageEntityStopNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageEntityStopNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageEntityStopNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageEntityStopNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageEntityPosReSetCallBack::kYFieldNumber;
const int CMessageEntityPosReSetCallBack::kXFieldNumber;
const int CMessageEntityPosReSetCallBack::kEntityIDFieldNumber;
#endif  // !_MSC_VER

CMessageEntityPosReSetCallBack::CMessageEntityPosReSetCallBack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageEntityPosReSetCallBack::InitAsDefaultInstance() {}

CMessageEntityPosReSetCallBack::CMessageEntityPosReSetCallBack(const CMessageEntityPosReSetCallBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageEntityPosReSetCallBack::SharedCtor() {
  _cached_size_ = 0;
  y_ = 0u;
  x_ = 0u;
  entityid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageEntityPosReSetCallBack::~CMessageEntityPosReSetCallBack() {
  SharedDtor();
}

void CMessageEntityPosReSetCallBack::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageEntityPosReSetCallBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageEntityPosReSetCallBack_descriptor_;
}

const CMessageEntityPosReSetCallBack& CMessageEntityPosReSetCallBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageEntityPosReSetCallBack* CMessageEntityPosReSetCallBack::default_instance_ = NULL;

CMessageEntityPosReSetCallBack* CMessageEntityPosReSetCallBack::New() const {
  return new CMessageEntityPosReSetCallBack;
}

void CMessageEntityPosReSetCallBack::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    y_ = 0u;
    x_ = 0u;
    entityid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageEntityPosReSetCallBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Y = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &y_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_X;
        break;
      }
      
      // optional uint32 X = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_X:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &x_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_EntityID;
        break;
      }
      
      // optional uint32 EntityID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_EntityID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &entityid_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageEntityPosReSetCallBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageEntityPosReSetCallBack::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Y = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->y(), output);
  }
  
  // optional uint32 X = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->x(), output);
  }
  
  // optional uint32 EntityID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->entityid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageEntityPosReSetCallBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Y = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->y(), target);
  }
  
  // optional uint32 X = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->x(), target);
  }
  
  // optional uint32 EntityID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->entityid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageEntityPosReSetCallBack::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Y = 1;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->y());
    }
    
    // optional uint32 X = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->x());
    }
    
    // optional uint32 EntityID = 3;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->entityid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageEntityPosReSetCallBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageEntityPosReSetCallBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageEntityPosReSetCallBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageEntityPosReSetCallBack::MergeFrom(const CMessageEntityPosReSetCallBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_y(from.y());
    }
    if (from._has_bit(1)) {
      set_x(from.x());
    }
    if (from._has_bit(2)) {
      set_entityid(from.entityid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageEntityPosReSetCallBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEntityPosReSetCallBack::CopyFrom(const CMessageEntityPosReSetCallBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEntityPosReSetCallBack::Swap(CMessageEntityPosReSetCallBack* other) {
  if (other != this) {
    std::swap(y_, other->y_);
    std::swap(x_, other->x_);
    std::swap(entityid_, other->entityid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageEntityPosReSetCallBack::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageEntityPosReSetCallBack::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageEntityPosReSetCallBack::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageEntityPosReSetCallBack_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMessagePlayerCanntMoveCallBack::CMessagePlayerCanntMoveCallBack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePlayerCanntMoveCallBack::InitAsDefaultInstance() {}

CMessagePlayerCanntMoveCallBack::CMessagePlayerCanntMoveCallBack(const CMessagePlayerCanntMoveCallBack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePlayerCanntMoveCallBack::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePlayerCanntMoveCallBack::~CMessagePlayerCanntMoveCallBack() {
  SharedDtor();
}

void CMessagePlayerCanntMoveCallBack::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePlayerCanntMoveCallBack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerCanntMoveCallBack_descriptor_;
}

const CMessagePlayerCanntMoveCallBack& CMessagePlayerCanntMoveCallBack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessagePlayerCanntMoveCallBack* CMessagePlayerCanntMoveCallBack::default_instance_ = NULL;

CMessagePlayerCanntMoveCallBack* CMessagePlayerCanntMoveCallBack::New() const {
  return new CMessagePlayerCanntMoveCallBack;
}

void CMessagePlayerCanntMoveCallBack::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePlayerCanntMoveCallBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMessagePlayerCanntMoveCallBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePlayerCanntMoveCallBack::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePlayerCanntMoveCallBack::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePlayerCanntMoveCallBack::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePlayerCanntMoveCallBack::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePlayerCanntMoveCallBack* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePlayerCanntMoveCallBack*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePlayerCanntMoveCallBack::MergeFrom(const CMessagePlayerCanntMoveCallBack& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePlayerCanntMoveCallBack::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerCanntMoveCallBack::CopyFrom(const CMessagePlayerCanntMoveCallBack& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerCanntMoveCallBack::Swap(CMessagePlayerCanntMoveCallBack* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePlayerCanntMoveCallBack::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePlayerCanntMoveCallBack::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePlayerCanntMoveCallBack::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerCanntMoveCallBack_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePetPathRequest::kSrcPosYFieldNumber;
const int CMessagePetPathRequest::kLineIDFieldNumber;
const int CMessagePetPathRequest::kDesPosXFieldNumber;
const int CMessagePetPathRequest::kDirectionFieldNumber;
const int CMessagePetPathRequest::kSrcPosXFieldNumber;
const int CMessagePetPathRequest::kDesPosYFieldNumber;
const int CMessagePetPathRequest::kMapIDFieldNumber;
const int CMessagePetPathRequest::kEntityIDFieldNumber;
#endif  // !_MSC_VER

CMessagePetPathRequest::CMessagePetPathRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePetPathRequest::InitAsDefaultInstance() {}

CMessagePetPathRequest::CMessagePetPathRequest(const CMessagePetPathRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePetPathRequest::SharedCtor() {
  _cached_size_ = 0;
  srcposy_ = 0u;
  lineid_ = 0u;
  desposx_ = 0u;
  direction_ = 0u;
  srcposx_ = 0u;
  desposy_ = 0u;
  mapid_ = 0u;
  entityid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePetPathRequest::~CMessagePetPathRequest() {
  SharedDtor();
}

void CMessagePetPathRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePetPathRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePetPathRequest_descriptor_;
}

const CMessagePetPathRequest& CMessagePetPathRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessagePetPathRequest* CMessagePetPathRequest::default_instance_ = NULL;

CMessagePetPathRequest* CMessagePetPathRequest::New() const {
  return new CMessagePetPathRequest;
}

void CMessagePetPathRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    srcposy_ = 0u;
    lineid_ = 0u;
    desposx_ = 0u;
    direction_ = 0u;
    srcposx_ = 0u;
    desposy_ = 0u;
    mapid_ = 0u;
    entityid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePetPathRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 SrcPosY = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposy_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_LineID;
        break;
      }
      
      // optional uint32 LineID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_LineID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &lineid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_DesPosX;
        break;
      }
      
      // optional uint32 DesPosX = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposx_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_Direction;
        break;
      }
      
      // optional uint32 Direction = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Direction:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &direction_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_SrcPosX;
        break;
      }
      
      // optional uint32 SrcPosX = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SrcPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposx_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_DesPosY;
        break;
      }
      
      // optional uint32 DesPosY = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposy_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_MapID;
        break;
      }
      
      // optional uint32 MapID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_MapID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &mapid_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_EntityID;
        break;
      }
      
      // optional uint32 EntityID = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_EntityID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &entityid_));
        _set_bit(7);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePetPathRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePetPathRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 SrcPosY = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->srcposy(), output);
  }
  
  // optional uint32 LineID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->lineid(), output);
  }
  
  // optional uint32 DesPosX = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->desposx(), output);
  }
  
  // optional uint32 Direction = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->direction(), output);
  }
  
  // optional uint32 SrcPosX = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->srcposx(), output);
  }
  
  // optional uint32 DesPosY = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->desposy(), output);
  }
  
  // optional uint32 MapID = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->mapid(), output);
  }
  
  // optional uint32 EntityID = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(8, this->entityid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePetPathRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 SrcPosY = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->srcposy(), target);
  }
  
  // optional uint32 LineID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->lineid(), target);
  }
  
  // optional uint32 DesPosX = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->desposx(), target);
  }
  
  // optional uint32 Direction = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->direction(), target);
  }
  
  // optional uint32 SrcPosX = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->srcposx(), target);
  }
  
  // optional uint32 DesPosY = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->desposy(), target);
  }
  
  // optional uint32 MapID = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->mapid(), target);
  }
  
  // optional uint32 EntityID = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(8, this->entityid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePetPathRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SrcPosY = 1;
    if (has_srcposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposy());
    }
    
    // optional uint32 LineID = 2;
    if (has_lineid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->lineid());
    }
    
    // optional uint32 DesPosX = 3;
    if (has_desposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposx());
    }
    
    // optional uint32 Direction = 4;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->direction());
    }
    
    // optional uint32 SrcPosX = 5;
    if (has_srcposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposx());
    }
    
    // optional uint32 DesPosY = 6;
    if (has_desposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposy());
    }
    
    // optional uint32 MapID = 7;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->mapid());
    }
    
    // optional uint32 EntityID = 8;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->entityid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePetPathRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePetPathRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePetPathRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePetPathRequest::MergeFrom(const CMessagePetPathRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_srcposy(from.srcposy());
    }
    if (from._has_bit(1)) {
      set_lineid(from.lineid());
    }
    if (from._has_bit(2)) {
      set_desposx(from.desposx());
    }
    if (from._has_bit(3)) {
      set_direction(from.direction());
    }
    if (from._has_bit(4)) {
      set_srcposx(from.srcposx());
    }
    if (from._has_bit(5)) {
      set_desposy(from.desposy());
    }
    if (from._has_bit(6)) {
      set_mapid(from.mapid());
    }
    if (from._has_bit(7)) {
      set_entityid(from.entityid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePetPathRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePetPathRequest::CopyFrom(const CMessagePetPathRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePetPathRequest::Swap(CMessagePetPathRequest* other) {
  if (other != this) {
    std::swap(srcposy_, other->srcposy_);
    std::swap(lineid_, other->lineid_);
    std::swap(desposx_, other->desposx_);
    std::swap(direction_, other->direction_);
    std::swap(srcposx_, other->srcposx_);
    std::swap(desposy_, other->desposy_);
    std::swap(mapid_, other->mapid_);
    std::swap(entityid_, other->entityid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePetPathRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePetPathRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePetPathRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePetPathRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePetStopRequest::kPosYFieldNumber;
const int CMessagePetStopRequest::kLineIDFieldNumber;
const int CMessagePetStopRequest::kDirectionFieldNumber;
const int CMessagePetStopRequest::kPosXFieldNumber;
const int CMessagePetStopRequest::kMapIDFieldNumber;
const int CMessagePetStopRequest::kEntityIDFieldNumber;
#endif  // !_MSC_VER

CMessagePetStopRequest::CMessagePetStopRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePetStopRequest::InitAsDefaultInstance() {}

CMessagePetStopRequest::CMessagePetStopRequest(const CMessagePetStopRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePetStopRequest::SharedCtor() {
  _cached_size_ = 0;
  posy_ = 0u;
  lineid_ = 0u;
  direction_ = 0u;
  posx_ = 0u;
  mapid_ = 0u;
  entityid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePetStopRequest::~CMessagePetStopRequest() {
  SharedDtor();
}

void CMessagePetStopRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePetStopRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePetStopRequest_descriptor_;
}

const CMessagePetStopRequest& CMessagePetStopRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mapmessage_5fpb_2ehxx();  return *default_instance_;
}

CMessagePetStopRequest* CMessagePetStopRequest::default_instance_ = NULL;

CMessagePetStopRequest* CMessagePetStopRequest::New() const {
  return new CMessagePetStopRequest;
}

void CMessagePetStopRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    posy_ = 0u;
    lineid_ = 0u;
    direction_ = 0u;
    posx_ = 0u;
    mapid_ = 0u;
    entityid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePetStopRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 PosY = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posy_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_LineID;
        break;
      }
      
      // optional uint32 LineID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_LineID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &lineid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_Direction;
        break;
      }
      
      // optional uint32 Direction = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Direction:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &direction_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_PosX;
        break;
      }
      
      // optional uint32 PosX = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posx_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_MapID;
        break;
      }
      
      // optional uint32 MapID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_MapID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &mapid_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_EntityID;
        break;
      }
      
      // optional uint32 EntityID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_EntityID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &entityid_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePetStopRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePetStopRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 PosY = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->posy(), output);
  }
  
  // optional uint32 LineID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->lineid(), output);
  }
  
  // optional uint32 Direction = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->direction(), output);
  }
  
  // optional uint32 PosX = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->posx(), output);
  }
  
  // optional uint32 MapID = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->mapid(), output);
  }
  
  // optional uint32 EntityID = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->entityid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePetStopRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 PosY = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->posy(), target);
  }
  
  // optional uint32 LineID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->lineid(), target);
  }
  
  // optional uint32 Direction = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->direction(), target);
  }
  
  // optional uint32 PosX = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->posx(), target);
  }
  
  // optional uint32 MapID = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->mapid(), target);
  }
  
  // optional uint32 EntityID = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->entityid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePetStopRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PosY = 1;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posy());
    }
    
    // optional uint32 LineID = 2;
    if (has_lineid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->lineid());
    }
    
    // optional uint32 Direction = 3;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->direction());
    }
    
    // optional uint32 PosX = 4;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posx());
    }
    
    // optional uint32 MapID = 5;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->mapid());
    }
    
    // optional uint32 EntityID = 6;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->entityid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePetStopRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePetStopRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePetStopRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePetStopRequest::MergeFrom(const CMessagePetStopRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_posy(from.posy());
    }
    if (from._has_bit(1)) {
      set_lineid(from.lineid());
    }
    if (from._has_bit(2)) {
      set_direction(from.direction());
    }
    if (from._has_bit(3)) {
      set_posx(from.posx());
    }
    if (from._has_bit(4)) {
      set_mapid(from.mapid());
    }
    if (from._has_bit(5)) {
      set_entityid(from.entityid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePetStopRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePetStopRequest::CopyFrom(const CMessagePetStopRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePetStopRequest::Swap(CMessagePetStopRequest* other) {
  if (other != this) {
    std::swap(posy_, other->posy_);
    std::swap(lineid_, other->lineid_);
    std::swap(direction_, other->direction_);
    std::swap(posx_, other->posx_);
    std::swap(mapid_, other->mapid_);
    std::swap(entityid_, other->entityid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePetStopRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePetStopRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePetStopRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePetStopRequest_reflection_;
}
