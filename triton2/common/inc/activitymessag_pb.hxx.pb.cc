// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "activitymessag_pb.hxx.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>
#ifdef LEAK_CHK_DEBUG_NEW
#include "debug_new.h"
#endif

namespace {

const ::google::protobuf::Descriptor* CMessageActivityYqsStart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageActivityYqsStart_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGetPlayerRankForYQSRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGetPlayerRankForYQSRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerRankForYQS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerRankForYQS_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGetPlayerRankForYQSResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGetPlayerRankForYQSResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemForHandin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemForHandin_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageHandInRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageHandInRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EncourageForHandin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EncourageForHandin_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageHandInResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageHandInResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageC2SGetCampRankForYQSRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageC2SGetCampRankForYQSRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CampRankForYQS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CampRankForYQS_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageS2CGetCampRankForYQSResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageS2CGetCampRankForYQSResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageYQSPhaseChangeNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageYQSPhaseChangeNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageYQSEncourageChangeNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageYQSEncourageChangeNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageYQSDropItemNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageYQSDropItemNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageCheckAnswerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageCheckAnswerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageCheckAnswerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageCheckAnswerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageQuestionTimeEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageQuestionTimeEnd_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageQuestionNew_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageQuestionNew_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageAnswerEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageAnswerEnd_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageUseQuestionPaper_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageUseQuestionPaper_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageIfAnswerNow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageIfAnswerNow_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageIfBeginQuest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageIfBeginQuest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageStopAnser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageStopAnser_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageUsePaperResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageUsePaperResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageInvestQuestionNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageInvestQuestionNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageInvestAnswerNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageInvestAnswerNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageThrowHydrangeaNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageThrowHydrangeaNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGrabHydrangeaEnableNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGrabHydrangeaEnableNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGrabHydrangeaRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGrabHydrangeaRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGrabHydrangeaResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGrabHydrangeaResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGrabHydrangeaResultNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGrabHydrangeaResultNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageHydrangeaResultNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageHydrangeaResultNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageStartHydrangeaNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageStartHydrangeaNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageThrowHydrangeaRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageThrowHydrangeaRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageThrowHydrangeaResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageThrowHydrangeaResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageThrowSugarNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageThrowSugarNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageSetHydrangeaStatusNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageSetHydrangeaStatusNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageStartPreliminaryNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageStartPreliminaryNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePreliminaryQuestionNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePreliminaryQuestionNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePreliminaryAnswerNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePreliminaryAnswerNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageEndPreliminaryNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageEndPreliminaryNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageSubmitPreliminaryAnswerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageSubmitPreliminaryAnswerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageSubmitPreliminaryAnswerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageSubmitPreliminaryAnswerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageViewPreliminaryListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageViewPreliminaryListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPreliminaryInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPreliminaryInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageViewPreliminaryResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageViewPreliminaryResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageQuestionVerifyNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageQuestionVerifyNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageAnswerVerifyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageAnswerVerifyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageAnswerVerifyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageAnswerVerifyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageStartGiftTimerNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageStartGiftTimerNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGetOnlineGiftRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGetOnlineGiftRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGetOnlineGiftResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGetOnlineGiftResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGetTreasureBowlInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGetTreasureBowlInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGetTreasureBowlInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGetTreasureBowlInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageStartTreasureBowlRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageStartTreasureBowlRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageStartTreasureBowlResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageStartTreasureBowlResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageTreasureBowlSuccessNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageTreasureBowlSuccessNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ACTIVITY_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_activitymessag_5fpb_2ehxx() {
  protobuf_AddDesc_activitymessag_5fpb_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "activitymessag_pb.hxx");
  GOOGLE_CHECK(file != NULL);
  CMessageActivityYqsStart_descriptor_ = file->message_type(0);
  static const int CMessageActivityYqsStart_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageActivityYqsStart, activityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageActivityYqsStart, campid_),
  };
  CMessageActivityYqsStart_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageActivityYqsStart_descriptor_,
      CMessageActivityYqsStart::default_instance_,
      CMessageActivityYqsStart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageActivityYqsStart, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageActivityYqsStart, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageActivityYqsStart));
  CMessageGetPlayerRankForYQSRequest_descriptor_ = file->message_type(1);
  static const int CMessageGetPlayerRankForYQSRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSRequest, playerid_),
  };
  CMessageGetPlayerRankForYQSRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGetPlayerRankForYQSRequest_descriptor_,
      CMessageGetPlayerRankForYQSRequest::default_instance_,
      CMessageGetPlayerRankForYQSRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGetPlayerRankForYQSRequest));
  PlayerRankForYQS_descriptor_ = file->message_type(2);
  static const int PlayerRankForYQS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRankForYQS, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRankForYQS, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRankForYQS, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRankForYQS, userlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRankForYQS, usermetie_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRankForYQS, contribute_),
  };
  PlayerRankForYQS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerRankForYQS_descriptor_,
      PlayerRankForYQS::default_instance_,
      PlayerRankForYQS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRankForYQS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRankForYQS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerRankForYQS));
  CMessageGetPlayerRankForYQSResponse_descriptor_ = file->message_type(3);
  static const int CMessageGetPlayerRankForYQSResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSResponse, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSResponse, playerhandindawnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSResponse, playercontribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSResponse, playerrankinfo_),
  };
  CMessageGetPlayerRankForYQSResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGetPlayerRankForYQSResponse_descriptor_,
      CMessageGetPlayerRankForYQSResponse::default_instance_,
      CMessageGetPlayerRankForYQSResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetPlayerRankForYQSResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGetPlayerRankForYQSResponse));
  ItemForHandin_descriptor_ = file->message_type(4);
  static const int ItemForHandin_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemForHandin, itemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemForHandin, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemForHandin, itemnum_),
  };
  ItemForHandin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemForHandin_descriptor_,
      ItemForHandin::default_instance_,
      ItemForHandin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemForHandin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemForHandin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemForHandin));
  CMessageHandInRequest_descriptor_ = file->message_type(5);
  static const int CMessageHandInRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInRequest, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInRequest, activityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInRequest, itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInRequest, items_),
  };
  CMessageHandInRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageHandInRequest_descriptor_,
      CMessageHandInRequest::default_instance_,
      CMessageHandInRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageHandInRequest));
  EncourageForHandin_descriptor_ = file->message_type(6);
  static const int EncourageForHandin_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncourageForHandin, encouragetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncourageForHandin, encourageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncourageForHandin, encouragenum_),
  };
  EncourageForHandin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EncourageForHandin_descriptor_,
      EncourageForHandin::default_instance_,
      EncourageForHandin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncourageForHandin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncourageForHandin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EncourageForHandin));
  CMessageHandInResponse_descriptor_ = file->message_type(7);
  static const int CMessageHandInResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInResponse, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInResponse, activityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInResponse, encouragenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInResponse, encourages_),
  };
  CMessageHandInResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageHandInResponse_descriptor_,
      CMessageHandInResponse::default_instance_,
      CMessageHandInResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHandInResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageHandInResponse));
  CMessageC2SGetCampRankForYQSRequest_descriptor_ = file->message_type(8);
  static const int CMessageC2SGetCampRankForYQSRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageC2SGetCampRankForYQSRequest, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageC2SGetCampRankForYQSRequest, param1_),
  };
  CMessageC2SGetCampRankForYQSRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageC2SGetCampRankForYQSRequest_descriptor_,
      CMessageC2SGetCampRankForYQSRequest::default_instance_,
      CMessageC2SGetCampRankForYQSRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageC2SGetCampRankForYQSRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageC2SGetCampRankForYQSRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageC2SGetCampRankForYQSRequest));
  CampRankForYQS_descriptor_ = file->message_type(9);
  static const int CampRankForYQS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampRankForYQS, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampRankForYQS, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampRankForYQS, growinggrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampRankForYQS, growingphase_),
  };
  CampRankForYQS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CampRankForYQS_descriptor_,
      CampRankForYQS::default_instance_,
      CampRankForYQS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampRankForYQS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CampRankForYQS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CampRankForYQS));
  CMessageS2CGetCampRankForYQSResponse_descriptor_ = file->message_type(10);
  static const int CMessageS2CGetCampRankForYQSResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, playerhandindawnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, playercontribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, campnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, camprankinfo_),
  };
  CMessageS2CGetCampRankForYQSResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageS2CGetCampRankForYQSResponse_descriptor_,
      CMessageS2CGetCampRankForYQSResponse::default_instance_,
      CMessageS2CGetCampRankForYQSResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageS2CGetCampRankForYQSResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageS2CGetCampRankForYQSResponse));
  CMessageYQSPhaseChangeNotice_descriptor_ = file->message_type(11);
  static const int CMessageYQSPhaseChangeNotice_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSPhaseChangeNotice, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSPhaseChangeNotice, isfinished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSPhaseChangeNotice, currphase_),
  };
  CMessageYQSPhaseChangeNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageYQSPhaseChangeNotice_descriptor_,
      CMessageYQSPhaseChangeNotice::default_instance_,
      CMessageYQSPhaseChangeNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSPhaseChangeNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSPhaseChangeNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageYQSPhaseChangeNotice));
  CMessageYQSEncourageChangeNotice_descriptor_ = file->message_type(12);
  static const int CMessageYQSEncourageChangeNotice_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSEncourageChangeNotice, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSEncourageChangeNotice, encourangeid_),
  };
  CMessageYQSEncourageChangeNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageYQSEncourageChangeNotice_descriptor_,
      CMessageYQSEncourageChangeNotice::default_instance_,
      CMessageYQSEncourageChangeNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSEncourageChangeNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSEncourageChangeNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageYQSEncourageChangeNotice));
  CMessageYQSDropItemNotice_descriptor_ = file->message_type(13);
  static const int CMessageYQSDropItemNotice_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSDropItemNotice, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSDropItemNotice, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSDropItemNotice, itemnum_),
  };
  CMessageYQSDropItemNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageYQSDropItemNotice_descriptor_,
      CMessageYQSDropItemNotice::default_instance_,
      CMessageYQSDropItemNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSDropItemNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageYQSDropItemNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageYQSDropItemNotice));
  CMessageCheckAnswerRequest_descriptor_ = file->message_type(14);
  static const int CMessageCheckAnswerRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerRequest, answer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerRequest, questionid_),
  };
  CMessageCheckAnswerRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageCheckAnswerRequest_descriptor_,
      CMessageCheckAnswerRequest::default_instance_,
      CMessageCheckAnswerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageCheckAnswerRequest));
  CMessageCheckAnswerResponse_descriptor_ = file->message_type(15);
  static const int CMessageCheckAnswerResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerResponse, questionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerResponse, questionindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerResponse, iflastquestion_),
  };
  CMessageCheckAnswerResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageCheckAnswerResponse_descriptor_,
      CMessageCheckAnswerResponse::default_instance_,
      CMessageCheckAnswerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCheckAnswerResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageCheckAnswerResponse));
  CMessageQuestionTimeEnd_descriptor_ = file->message_type(16);
  static const int CMessageQuestionTimeEnd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionTimeEnd, questionid_),
  };
  CMessageQuestionTimeEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageQuestionTimeEnd_descriptor_,
      CMessageQuestionTimeEnd::default_instance_,
      CMessageQuestionTimeEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionTimeEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionTimeEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageQuestionTimeEnd));
  CMessageQuestionNew_descriptor_ = file->message_type(17);
  static const int CMessageQuestionNew_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionNew, questionindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionNew, questionid_),
  };
  CMessageQuestionNew_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageQuestionNew_descriptor_,
      CMessageQuestionNew::default_instance_,
      CMessageQuestionNew_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionNew, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionNew, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageQuestionNew));
  CMessageAnswerEnd_descriptor_ = file->message_type(18);
  static const int CMessageAnswerEnd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerEnd, endtype_),
  };
  CMessageAnswerEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageAnswerEnd_descriptor_,
      CMessageAnswerEnd::default_instance_,
      CMessageAnswerEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageAnswerEnd));
  CMessageUseQuestionPaper_descriptor_ = file->message_type(19);
  static const int CMessageUseQuestionPaper_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUseQuestionPaper, itemindex_),
  };
  CMessageUseQuestionPaper_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageUseQuestionPaper_descriptor_,
      CMessageUseQuestionPaper::default_instance_,
      CMessageUseQuestionPaper_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUseQuestionPaper, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUseQuestionPaper, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageUseQuestionPaper));
  CMessageIfAnswerNow_descriptor_ = file->message_type(20);
  static const int CMessageIfAnswerNow_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIfAnswerNow, result_),
  };
  CMessageIfAnswerNow_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageIfAnswerNow_descriptor_,
      CMessageIfAnswerNow::default_instance_,
      CMessageIfAnswerNow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIfAnswerNow, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIfAnswerNow, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageIfAnswerNow));
  CMessageIfBeginQuest_descriptor_ = file->message_type(21);
  static const int CMessageIfBeginQuest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIfBeginQuest, ifbegin_),
  };
  CMessageIfBeginQuest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageIfBeginQuest_descriptor_,
      CMessageIfBeginQuest::default_instance_,
      CMessageIfBeginQuest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIfBeginQuest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIfBeginQuest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageIfBeginQuest));
  CMessageStopAnser_descriptor_ = file->message_type(22);
  static const int CMessageStopAnser_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStopAnser, endtype_),
  };
  CMessageStopAnser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageStopAnser_descriptor_,
      CMessageStopAnser::default_instance_,
      CMessageStopAnser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStopAnser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStopAnser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageStopAnser));
  CMessageUsePaperResponse_descriptor_ = file->message_type(23);
  static const int CMessageUsePaperResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUsePaperResponse, result_),
  };
  CMessageUsePaperResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageUsePaperResponse_descriptor_,
      CMessageUsePaperResponse::default_instance_,
      CMessageUsePaperResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUsePaperResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUsePaperResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageUsePaperResponse));
  CMessageInvestQuestionNotify_descriptor_ = file->message_type(24);
  static const int CMessageInvestQuestionNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageInvestQuestionNotify, questionid_),
  };
  CMessageInvestQuestionNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageInvestQuestionNotify_descriptor_,
      CMessageInvestQuestionNotify::default_instance_,
      CMessageInvestQuestionNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageInvestQuestionNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageInvestQuestionNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageInvestQuestionNotify));
  CMessageInvestAnswerNotify_descriptor_ = file->message_type(25);
  static const int CMessageInvestAnswerNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageInvestAnswerNotify, questionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageInvestAnswerNotify, questionanswer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageInvestAnswerNotify, ifanswernow_),
  };
  CMessageInvestAnswerNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageInvestAnswerNotify_descriptor_,
      CMessageInvestAnswerNotify::default_instance_,
      CMessageInvestAnswerNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageInvestAnswerNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageInvestAnswerNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageInvestAnswerNotify));
  CMessageThrowHydrangeaNotify_descriptor_ = file->message_type(26);
  static const int CMessageThrowHydrangeaNotify_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, throwtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, throwername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, receivername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, srcposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, srcposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, desposy_),
  };
  CMessageThrowHydrangeaNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageThrowHydrangeaNotify_descriptor_,
      CMessageThrowHydrangeaNotify::default_instance_,
      CMessageThrowHydrangeaNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageThrowHydrangeaNotify));
  CMessageGrabHydrangeaEnableNotify_descriptor_ = file->message_type(27);
  static const int CMessageGrabHydrangeaEnableNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaEnableNotify, hydrangeaholder_),
  };
  CMessageGrabHydrangeaEnableNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGrabHydrangeaEnableNotify_descriptor_,
      CMessageGrabHydrangeaEnableNotify::default_instance_,
      CMessageGrabHydrangeaEnableNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaEnableNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaEnableNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGrabHydrangeaEnableNotify));
  CMessageGrabHydrangeaRequest_descriptor_ = file->message_type(28);
  static const int CMessageGrabHydrangeaRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaRequest, msgcode_),
  };
  CMessageGrabHydrangeaRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGrabHydrangeaRequest_descriptor_,
      CMessageGrabHydrangeaRequest::default_instance_,
      CMessageGrabHydrangeaRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGrabHydrangeaRequest));
  CMessageGrabHydrangeaResponse_descriptor_ = file->message_type(29);
  static const int CMessageGrabHydrangeaResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResponse, errcode_),
  };
  CMessageGrabHydrangeaResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGrabHydrangeaResponse_descriptor_,
      CMessageGrabHydrangeaResponse::default_instance_,
      CMessageGrabHydrangeaResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGrabHydrangeaResponse));
  CMessageGrabHydrangeaResultNotify_descriptor_ = file->message_type(30);
  static const int CMessageGrabHydrangeaResultNotify_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResultNotify, srcname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResultNotify, desname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResultNotify, srcposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResultNotify, srcposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResultNotify, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResultNotify, desposy_),
  };
  CMessageGrabHydrangeaResultNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGrabHydrangeaResultNotify_descriptor_,
      CMessageGrabHydrangeaResultNotify::default_instance_,
      CMessageGrabHydrangeaResultNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResultNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGrabHydrangeaResultNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGrabHydrangeaResultNotify));
  CMessageHydrangeaResultNotify_descriptor_ = file->message_type(31);
  static const int CMessageHydrangeaResultNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHydrangeaResultNotify, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHydrangeaResultNotify, rolesex_),
  };
  CMessageHydrangeaResultNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageHydrangeaResultNotify_descriptor_,
      CMessageHydrangeaResultNotify::default_instance_,
      CMessageHydrangeaResultNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHydrangeaResultNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageHydrangeaResultNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageHydrangeaResultNotify));
  CMessageStartHydrangeaNotify_descriptor_ = file->message_type(32);
  static const int CMessageStartHydrangeaNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartHydrangeaNotify, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartHydrangeaNotify, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartHydrangeaNotify, posy_),
  };
  CMessageStartHydrangeaNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageStartHydrangeaNotify_descriptor_,
      CMessageStartHydrangeaNotify::default_instance_,
      CMessageStartHydrangeaNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartHydrangeaNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartHydrangeaNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageStartHydrangeaNotify));
  CMessageThrowHydrangeaRequest_descriptor_ = file->message_type(33);
  static const int CMessageThrowHydrangeaRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaRequest, msgcode_),
  };
  CMessageThrowHydrangeaRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageThrowHydrangeaRequest_descriptor_,
      CMessageThrowHydrangeaRequest::default_instance_,
      CMessageThrowHydrangeaRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageThrowHydrangeaRequest));
  CMessageThrowHydrangeaResponse_descriptor_ = file->message_type(34);
  static const int CMessageThrowHydrangeaResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaResponse, errcode_),
  };
  CMessageThrowHydrangeaResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageThrowHydrangeaResponse_descriptor_,
      CMessageThrowHydrangeaResponse::default_instance_,
      CMessageThrowHydrangeaResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowHydrangeaResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageThrowHydrangeaResponse));
  CMessageThrowSugarNotify_descriptor_ = file->message_type(35);
  static const int CMessageThrowSugarNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowSugarNotify, npcentityid_),
  };
  CMessageThrowSugarNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageThrowSugarNotify_descriptor_,
      CMessageThrowSugarNotify::default_instance_,
      CMessageThrowSugarNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowSugarNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageThrowSugarNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageThrowSugarNotify));
  CMessageSetHydrangeaStatusNotify_descriptor_ = file->message_type(36);
  static const int CMessageSetHydrangeaStatusNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSetHydrangeaStatusNotify, roleentityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSetHydrangeaStatusNotify, hydrangeastatus_),
  };
  CMessageSetHydrangeaStatusNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageSetHydrangeaStatusNotify_descriptor_,
      CMessageSetHydrangeaStatusNotify::default_instance_,
      CMessageSetHydrangeaStatusNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSetHydrangeaStatusNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSetHydrangeaStatusNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageSetHydrangeaStatusNotify));
  CMessageStartPreliminaryNotify_descriptor_ = file->message_type(37);
  static const int CMessageStartPreliminaryNotify_offsets_[1] = {
  };
  CMessageStartPreliminaryNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageStartPreliminaryNotify_descriptor_,
      CMessageStartPreliminaryNotify::default_instance_,
      CMessageStartPreliminaryNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartPreliminaryNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartPreliminaryNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageStartPreliminaryNotify));
  CMessagePreliminaryQuestionNotify_descriptor_ = file->message_type(38);
  static const int CMessagePreliminaryQuestionNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryQuestionNotify, questionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryQuestionNotify, questionindex_),
  };
  CMessagePreliminaryQuestionNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePreliminaryQuestionNotify_descriptor_,
      CMessagePreliminaryQuestionNotify::default_instance_,
      CMessagePreliminaryQuestionNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryQuestionNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryQuestionNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePreliminaryQuestionNotify));
  CMessagePreliminaryAnswerNotify_descriptor_ = file->message_type(39);
  static const int CMessagePreliminaryAnswerNotify_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryAnswerNotify, questionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryAnswerNotify, questionanswer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryAnswerNotify, playerinlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryAnswerNotify, extrascore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryAnswerNotify, questionindex_),
  };
  CMessagePreliminaryAnswerNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePreliminaryAnswerNotify_descriptor_,
      CMessagePreliminaryAnswerNotify::default_instance_,
      CMessagePreliminaryAnswerNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryAnswerNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePreliminaryAnswerNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePreliminaryAnswerNotify));
  CMessageEndPreliminaryNotify_descriptor_ = file->message_type(40);
  static const int CMessageEndPreliminaryNotify_offsets_[1] = {
  };
  CMessageEndPreliminaryNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageEndPreliminaryNotify_descriptor_,
      CMessageEndPreliminaryNotify::default_instance_,
      CMessageEndPreliminaryNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEndPreliminaryNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEndPreliminaryNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageEndPreliminaryNotify));
  CMessageSubmitPreliminaryAnswerRequest_descriptor_ = file->message_type(41);
  static const int CMessageSubmitPreliminaryAnswerRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSubmitPreliminaryAnswerRequest, questionanswer_),
  };
  CMessageSubmitPreliminaryAnswerRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageSubmitPreliminaryAnswerRequest_descriptor_,
      CMessageSubmitPreliminaryAnswerRequest::default_instance_,
      CMessageSubmitPreliminaryAnswerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSubmitPreliminaryAnswerRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSubmitPreliminaryAnswerRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageSubmitPreliminaryAnswerRequest));
  CMessageSubmitPreliminaryAnswerResponse_descriptor_ = file->message_type(42);
  static const int CMessageSubmitPreliminaryAnswerResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSubmitPreliminaryAnswerResponse, errcode_),
  };
  CMessageSubmitPreliminaryAnswerResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageSubmitPreliminaryAnswerResponse_descriptor_,
      CMessageSubmitPreliminaryAnswerResponse::default_instance_,
      CMessageSubmitPreliminaryAnswerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSubmitPreliminaryAnswerResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageSubmitPreliminaryAnswerResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageSubmitPreliminaryAnswerResponse));
  CMessageViewPreliminaryListRequest_descriptor_ = file->message_type(43);
  static const int CMessageViewPreliminaryListRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageViewPreliminaryListRequest, npcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageViewPreliminaryListRequest, type_),
  };
  CMessageViewPreliminaryListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageViewPreliminaryListRequest_descriptor_,
      CMessageViewPreliminaryListRequest::default_instance_,
      CMessageViewPreliminaryListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageViewPreliminaryListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageViewPreliminaryListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageViewPreliminaryListRequest));
  PBPreliminaryInfo_descriptor_ = file->message_type(44);
  static const int PBPreliminaryInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPreliminaryInfo, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPreliminaryInfo, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPreliminaryInfo, rightnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPreliminaryInfo, totalnum_),
  };
  PBPreliminaryInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBPreliminaryInfo_descriptor_,
      PBPreliminaryInfo::default_instance_,
      PBPreliminaryInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPreliminaryInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPreliminaryInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBPreliminaryInfo));
  CMessageViewPreliminaryResponse_descriptor_ = file->message_type(45);
  static const int CMessageViewPreliminaryResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageViewPreliminaryResponse, premilinaryinfolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageViewPreliminaryResponse, type_),
  };
  CMessageViewPreliminaryResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageViewPreliminaryResponse_descriptor_,
      CMessageViewPreliminaryResponse::default_instance_,
      CMessageViewPreliminaryResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageViewPreliminaryResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageViewPreliminaryResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageViewPreliminaryResponse));
  CMessageQuestionVerifyNotify_descriptor_ = file->message_type(46);
  static const int CMessageQuestionVerifyNotify_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionVerifyNotify, questionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionVerifyNotify, question_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionVerifyNotify, optiona_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionVerifyNotify, optionb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionVerifyNotify, optionc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionVerifyNotify, optiond_),
  };
  CMessageQuestionVerifyNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageQuestionVerifyNotify_descriptor_,
      CMessageQuestionVerifyNotify::default_instance_,
      CMessageQuestionVerifyNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionVerifyNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageQuestionVerifyNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageQuestionVerifyNotify));
  CMessageAnswerVerifyRequest_descriptor_ = file->message_type(47);
  static const int CMessageAnswerVerifyRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerVerifyRequest, questionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerVerifyRequest, answer_),
  };
  CMessageAnswerVerifyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageAnswerVerifyRequest_descriptor_,
      CMessageAnswerVerifyRequest::default_instance_,
      CMessageAnswerVerifyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerVerifyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerVerifyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageAnswerVerifyRequest));
  CMessageAnswerVerifyResponse_descriptor_ = file->message_type(48);
  static const int CMessageAnswerVerifyResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerVerifyResponse, errcode_),
  };
  CMessageAnswerVerifyResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageAnswerVerifyResponse_descriptor_,
      CMessageAnswerVerifyResponse::default_instance_,
      CMessageAnswerVerifyResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerVerifyResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageAnswerVerifyResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageAnswerVerifyResponse));
  CMessageStartGiftTimerNotify_descriptor_ = file->message_type(49);
  static const int CMessageStartGiftTimerNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartGiftTimerNotify, secs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartGiftTimerNotify, giftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartGiftTimerNotify, gifttype_),
  };
  CMessageStartGiftTimerNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageStartGiftTimerNotify_descriptor_,
      CMessageStartGiftTimerNotify::default_instance_,
      CMessageStartGiftTimerNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartGiftTimerNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartGiftTimerNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageStartGiftTimerNotify));
  CMessageGetOnlineGiftRequest_descriptor_ = file->message_type(50);
  static const int CMessageGetOnlineGiftRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetOnlineGiftRequest, gifttype_),
  };
  CMessageGetOnlineGiftRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGetOnlineGiftRequest_descriptor_,
      CMessageGetOnlineGiftRequest::default_instance_,
      CMessageGetOnlineGiftRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetOnlineGiftRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetOnlineGiftRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGetOnlineGiftRequest));
  CMessageGetOnlineGiftResponse_descriptor_ = file->message_type(51);
  static const int CMessageGetOnlineGiftResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetOnlineGiftResponse, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetOnlineGiftResponse, gifttype_),
  };
  CMessageGetOnlineGiftResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGetOnlineGiftResponse_descriptor_,
      CMessageGetOnlineGiftResponse::default_instance_,
      CMessageGetOnlineGiftResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetOnlineGiftResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetOnlineGiftResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGetOnlineGiftResponse));
  CMessageGetTreasureBowlInfoRequest_descriptor_ = file->message_type(52);
  static const int CMessageGetTreasureBowlInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoRequest, itemindex_),
  };
  CMessageGetTreasureBowlInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGetTreasureBowlInfoRequest_descriptor_,
      CMessageGetTreasureBowlInfoRequest::default_instance_,
      CMessageGetTreasureBowlInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGetTreasureBowlInfoRequest));
  CMessageGetTreasureBowlInfoResponse_descriptor_ = file->message_type(53);
  static const int CMessageGetTreasureBowlInfoResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, errcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, itemusedtimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, itemtotaltimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, allusedtimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, alltotaltimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, taxmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, index_),
  };
  CMessageGetTreasureBowlInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGetTreasureBowlInfoResponse_descriptor_,
      CMessageGetTreasureBowlInfoResponse::default_instance_,
      CMessageGetTreasureBowlInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetTreasureBowlInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGetTreasureBowlInfoResponse));
  CMessageStartTreasureBowlRequest_descriptor_ = file->message_type(54);
  static const int CMessageStartTreasureBowlRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlRequest, itemindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlRequest, entityid_),
  };
  CMessageStartTreasureBowlRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageStartTreasureBowlRequest_descriptor_,
      CMessageStartTreasureBowlRequest::default_instance_,
      CMessageStartTreasureBowlRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageStartTreasureBowlRequest));
  CMessageStartTreasureBowlResponse_descriptor_ = file->message_type(55);
  static const int CMessageStartTreasureBowlResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlResponse, errcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlResponse, itemindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlResponse, newitemid_),
  };
  CMessageStartTreasureBowlResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageStartTreasureBowlResponse_descriptor_,
      CMessageStartTreasureBowlResponse::default_instance_,
      CMessageStartTreasureBowlResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageStartTreasureBowlResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageStartTreasureBowlResponse));
  CMessageTreasureBowlSuccessNotify_descriptor_ = file->message_type(56);
  static const int CMessageTreasureBowlSuccessNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTreasureBowlSuccessNotify, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTreasureBowlSuccessNotify, olditemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTreasureBowlSuccessNotify, newitemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTreasureBowlSuccessNotify, itemnum_),
  };
  CMessageTreasureBowlSuccessNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageTreasureBowlSuccessNotify_descriptor_,
      CMessageTreasureBowlSuccessNotify::default_instance_,
      CMessageTreasureBowlSuccessNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTreasureBowlSuccessNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageTreasureBowlSuccessNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageTreasureBowlSuccessNotify));
  ACTIVITY_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_activitymessag_5fpb_2ehxx);
}

void protobuf_RegisterTypes() {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageActivityYqsStart_descriptor_, &CMessageActivityYqsStart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGetPlayerRankForYQSRequest_descriptor_, &CMessageGetPlayerRankForYQSRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerRankForYQS_descriptor_, &PlayerRankForYQS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGetPlayerRankForYQSResponse_descriptor_, &CMessageGetPlayerRankForYQSResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemForHandin_descriptor_, &ItemForHandin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageHandInRequest_descriptor_, &CMessageHandInRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EncourageForHandin_descriptor_, &EncourageForHandin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageHandInResponse_descriptor_, &CMessageHandInResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageC2SGetCampRankForYQSRequest_descriptor_, &CMessageC2SGetCampRankForYQSRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CampRankForYQS_descriptor_, &CampRankForYQS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageS2CGetCampRankForYQSResponse_descriptor_, &CMessageS2CGetCampRankForYQSResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageYQSPhaseChangeNotice_descriptor_, &CMessageYQSPhaseChangeNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageYQSEncourageChangeNotice_descriptor_, &CMessageYQSEncourageChangeNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageYQSDropItemNotice_descriptor_, &CMessageYQSDropItemNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageCheckAnswerRequest_descriptor_, &CMessageCheckAnswerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageCheckAnswerResponse_descriptor_, &CMessageCheckAnswerResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageQuestionTimeEnd_descriptor_, &CMessageQuestionTimeEnd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageQuestionNew_descriptor_, &CMessageQuestionNew::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageAnswerEnd_descriptor_, &CMessageAnswerEnd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageUseQuestionPaper_descriptor_, &CMessageUseQuestionPaper::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageIfAnswerNow_descriptor_, &CMessageIfAnswerNow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageIfBeginQuest_descriptor_, &CMessageIfBeginQuest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageStopAnser_descriptor_, &CMessageStopAnser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageUsePaperResponse_descriptor_, &CMessageUsePaperResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageInvestQuestionNotify_descriptor_, &CMessageInvestQuestionNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageInvestAnswerNotify_descriptor_, &CMessageInvestAnswerNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageThrowHydrangeaNotify_descriptor_, &CMessageThrowHydrangeaNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGrabHydrangeaEnableNotify_descriptor_, &CMessageGrabHydrangeaEnableNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGrabHydrangeaRequest_descriptor_, &CMessageGrabHydrangeaRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGrabHydrangeaResponse_descriptor_, &CMessageGrabHydrangeaResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGrabHydrangeaResultNotify_descriptor_, &CMessageGrabHydrangeaResultNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageHydrangeaResultNotify_descriptor_, &CMessageHydrangeaResultNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageStartHydrangeaNotify_descriptor_, &CMessageStartHydrangeaNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageThrowHydrangeaRequest_descriptor_, &CMessageThrowHydrangeaRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageThrowHydrangeaResponse_descriptor_, &CMessageThrowHydrangeaResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageThrowSugarNotify_descriptor_, &CMessageThrowSugarNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageSetHydrangeaStatusNotify_descriptor_, &CMessageSetHydrangeaStatusNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageStartPreliminaryNotify_descriptor_, &CMessageStartPreliminaryNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePreliminaryQuestionNotify_descriptor_, &CMessagePreliminaryQuestionNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePreliminaryAnswerNotify_descriptor_, &CMessagePreliminaryAnswerNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageEndPreliminaryNotify_descriptor_, &CMessageEndPreliminaryNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageSubmitPreliminaryAnswerRequest_descriptor_, &CMessageSubmitPreliminaryAnswerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageSubmitPreliminaryAnswerResponse_descriptor_, &CMessageSubmitPreliminaryAnswerResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageViewPreliminaryListRequest_descriptor_, &CMessageViewPreliminaryListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBPreliminaryInfo_descriptor_, &PBPreliminaryInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageViewPreliminaryResponse_descriptor_, &CMessageViewPreliminaryResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageQuestionVerifyNotify_descriptor_, &CMessageQuestionVerifyNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageAnswerVerifyRequest_descriptor_, &CMessageAnswerVerifyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageAnswerVerifyResponse_descriptor_, &CMessageAnswerVerifyResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageStartGiftTimerNotify_descriptor_, &CMessageStartGiftTimerNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGetOnlineGiftRequest_descriptor_, &CMessageGetOnlineGiftRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGetOnlineGiftResponse_descriptor_, &CMessageGetOnlineGiftResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGetTreasureBowlInfoRequest_descriptor_, &CMessageGetTreasureBowlInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGetTreasureBowlInfoResponse_descriptor_, &CMessageGetTreasureBowlInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageStartTreasureBowlRequest_descriptor_, &CMessageStartTreasureBowlRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageStartTreasureBowlResponse_descriptor_, &CMessageStartTreasureBowlResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageTreasureBowlSuccessNotify_descriptor_, &CMessageTreasureBowlSuccessNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_activitymessag_5fpb_2ehxx() {
  delete CMessageActivityYqsStart::default_instance_;
  delete CMessageActivityYqsStart_reflection_;
  delete CMessageGetPlayerRankForYQSRequest::default_instance_;
  delete CMessageGetPlayerRankForYQSRequest_reflection_;
  delete PlayerRankForYQS::default_instance_;
  delete PlayerRankForYQS_reflection_;
  delete CMessageGetPlayerRankForYQSResponse::default_instance_;
  delete CMessageGetPlayerRankForYQSResponse_reflection_;
  delete ItemForHandin::default_instance_;
  delete ItemForHandin_reflection_;
  delete CMessageHandInRequest::default_instance_;
  delete CMessageHandInRequest_reflection_;
  delete EncourageForHandin::default_instance_;
  delete EncourageForHandin_reflection_;
  delete CMessageHandInResponse::default_instance_;
  delete CMessageHandInResponse_reflection_;
  delete CMessageC2SGetCampRankForYQSRequest::default_instance_;
  delete CMessageC2SGetCampRankForYQSRequest_reflection_;
  delete CampRankForYQS::default_instance_;
  delete CampRankForYQS_reflection_;
  delete CMessageS2CGetCampRankForYQSResponse::default_instance_;
  delete CMessageS2CGetCampRankForYQSResponse_reflection_;
  delete CMessageYQSPhaseChangeNotice::default_instance_;
  delete CMessageYQSPhaseChangeNotice_reflection_;
  delete CMessageYQSEncourageChangeNotice::default_instance_;
  delete CMessageYQSEncourageChangeNotice_reflection_;
  delete CMessageYQSDropItemNotice::default_instance_;
  delete CMessageYQSDropItemNotice_reflection_;
  delete CMessageCheckAnswerRequest::default_instance_;
  delete CMessageCheckAnswerRequest_reflection_;
  delete CMessageCheckAnswerResponse::default_instance_;
  delete CMessageCheckAnswerResponse_reflection_;
  delete CMessageQuestionTimeEnd::default_instance_;
  delete CMessageQuestionTimeEnd_reflection_;
  delete CMessageQuestionNew::default_instance_;
  delete CMessageQuestionNew_reflection_;
  delete CMessageAnswerEnd::default_instance_;
  delete CMessageAnswerEnd_reflection_;
  delete CMessageUseQuestionPaper::default_instance_;
  delete CMessageUseQuestionPaper_reflection_;
  delete CMessageIfAnswerNow::default_instance_;
  delete CMessageIfAnswerNow_reflection_;
  delete CMessageIfBeginQuest::default_instance_;
  delete CMessageIfBeginQuest_reflection_;
  delete CMessageStopAnser::default_instance_;
  delete CMessageStopAnser_reflection_;
  delete CMessageUsePaperResponse::default_instance_;
  delete CMessageUsePaperResponse_reflection_;
  delete CMessageInvestQuestionNotify::default_instance_;
  delete CMessageInvestQuestionNotify_reflection_;
  delete CMessageInvestAnswerNotify::default_instance_;
  delete CMessageInvestAnswerNotify_reflection_;
  delete CMessageThrowHydrangeaNotify::default_instance_;
  delete CMessageThrowHydrangeaNotify_reflection_;
  delete CMessageGrabHydrangeaEnableNotify::default_instance_;
  delete CMessageGrabHydrangeaEnableNotify_reflection_;
  delete CMessageGrabHydrangeaRequest::default_instance_;
  delete CMessageGrabHydrangeaRequest_reflection_;
  delete CMessageGrabHydrangeaResponse::default_instance_;
  delete CMessageGrabHydrangeaResponse_reflection_;
  delete CMessageGrabHydrangeaResultNotify::default_instance_;
  delete CMessageGrabHydrangeaResultNotify_reflection_;
  delete CMessageHydrangeaResultNotify::default_instance_;
  delete CMessageHydrangeaResultNotify_reflection_;
  delete CMessageStartHydrangeaNotify::default_instance_;
  delete CMessageStartHydrangeaNotify_reflection_;
  delete CMessageThrowHydrangeaRequest::default_instance_;
  delete CMessageThrowHydrangeaRequest_reflection_;
  delete CMessageThrowHydrangeaResponse::default_instance_;
  delete CMessageThrowHydrangeaResponse_reflection_;
  delete CMessageThrowSugarNotify::default_instance_;
  delete CMessageThrowSugarNotify_reflection_;
  delete CMessageSetHydrangeaStatusNotify::default_instance_;
  delete CMessageSetHydrangeaStatusNotify_reflection_;
  delete CMessageStartPreliminaryNotify::default_instance_;
  delete CMessageStartPreliminaryNotify_reflection_;
  delete CMessagePreliminaryQuestionNotify::default_instance_;
  delete CMessagePreliminaryQuestionNotify_reflection_;
  delete CMessagePreliminaryAnswerNotify::default_instance_;
  delete CMessagePreliminaryAnswerNotify_reflection_;
  delete CMessageEndPreliminaryNotify::default_instance_;
  delete CMessageEndPreliminaryNotify_reflection_;
  delete CMessageSubmitPreliminaryAnswerRequest::default_instance_;
  delete CMessageSubmitPreliminaryAnswerRequest_reflection_;
  delete CMessageSubmitPreliminaryAnswerResponse::default_instance_;
  delete CMessageSubmitPreliminaryAnswerResponse_reflection_;
  delete CMessageViewPreliminaryListRequest::default_instance_;
  delete CMessageViewPreliminaryListRequest_reflection_;
  delete PBPreliminaryInfo::default_instance_;
  delete PBPreliminaryInfo_reflection_;
  delete CMessageViewPreliminaryResponse::default_instance_;
  delete CMessageViewPreliminaryResponse_reflection_;
  delete CMessageQuestionVerifyNotify::default_instance_;
  delete CMessageQuestionVerifyNotify_reflection_;
  delete CMessageAnswerVerifyRequest::default_instance_;
  delete CMessageAnswerVerifyRequest_reflection_;
  delete CMessageAnswerVerifyResponse::default_instance_;
  delete CMessageAnswerVerifyResponse_reflection_;
  delete CMessageStartGiftTimerNotify::default_instance_;
  delete CMessageStartGiftTimerNotify_reflection_;
  delete CMessageGetOnlineGiftRequest::default_instance_;
  delete CMessageGetOnlineGiftRequest_reflection_;
  delete CMessageGetOnlineGiftResponse::default_instance_;
  delete CMessageGetOnlineGiftResponse_reflection_;
  delete CMessageGetTreasureBowlInfoRequest::default_instance_;
  delete CMessageGetTreasureBowlInfoRequest_reflection_;
  delete CMessageGetTreasureBowlInfoResponse::default_instance_;
  delete CMessageGetTreasureBowlInfoResponse_reflection_;
  delete CMessageStartTreasureBowlRequest::default_instance_;
  delete CMessageStartTreasureBowlRequest_reflection_;
  delete CMessageStartTreasureBowlResponse::default_instance_;
  delete CMessageStartTreasureBowlResponse_reflection_;
  delete CMessageTreasureBowlSuccessNotify::default_instance_;
  delete CMessageTreasureBowlSuccessNotify_reflection_;
}

void protobuf_AddDesc_activitymessag_5fpb_2ehxx() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  #ifndef _NO_PROTOBUF_STR_
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025activitymessag_pb.hxx\">\n\030CMessageActiv"
    "ityYqsStart\022\022\n\nactivityid\030\001 \001(\r\022\016\n\006campi"
    "d\030\002 \001(\r\"6\n\"CMessageGetPlayerRankForYQSRe"
    "quest\022\020\n\010playerid\030\001 \001(\r\"|\n\020PlayerRankFor"
    "YQS\022\014\n\004rank\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r\022\020\n\010use"
    "rname\030\003 \001(\t\022\021\n\tuserlevel\030\004 \001(\r\022\021\n\tuserme"
    "tie\030\005 \001(\r\022\022\n\nContribute\030\006 \001(\r\"\230\001\n#CMessa"
    "geGetPlayerRankForYQSResponse\022\020\n\010playeri"
    "d\030\001 \001(\r\022\032\n\022playerhandindawnum\030\002 \001(\r\022\030\n\020p"
    "layercontribute\030\003 \001(\r\022)\n\016playerrankinfo\030"
    "\004 \003(\0132\021.PlayerRankForYQS\"B\n\rItemForHandi"
    "n\022\020\n\010itemtype\030\001 \001(\r\022\016\n\006itemid\030\002 \001(\r\022\017\n\007i"
    "temnum\030\003 \001(\r\"m\n\025CMessageHandInRequest\022\020\n"
    "\010playerId\030\001 \001(\r\022\022\n\nActivityId\030\002 \001(\r\022\017\n\007I"
    "temNum\030\003 \001(\r\022\035\n\005Items\030\004 \003(\0132\016.ItemForHan"
    "din\"V\n\022EncourageForHandin\022\025\n\rencouragety"
    "pe\030\001 \001(\r\022\023\n\013encourageid\030\002 \001(\r\022\024\n\014encoura"
    "genum\030\003 \001(\r\"\215\001\n\026CMessageHandInResponse\022\016"
    "\n\006result\030\001 \001(\r\022\020\n\010playerId\030\002 \001(\r\022\022\n\nacti"
    "vityId\030\003 \001(\r\022\024\n\014encouragenum\030\004 \001(\r\022\'\n\nen"
    "courages\030\005 \003(\0132\023.EncourageForHandin\"G\n#C"
    "MessageC2SGetCampRankForYQSRequest\022\020\n\010pl"
    "ayerId\030\001 \001(\r\022\016\n\006param1\030\002 \001(\r\"Z\n\016CampRank"
    "ForYQS\022\014\n\004rank\030\001 \001(\r\022\016\n\006campid\030\002 \001(\r\022\024\n\014"
    "growinggrade\030\003 \001(\r\022\024\n\014growingphase\030\004 \001(\r"
    "\"\306\001\n$CMessageS2CGetCampRankForYQSRespons"
    "e\022\016\n\006result\030\001 \001(\r\022\016\n\006param1\030\002 \001(\r\022\020\n\010pla"
    "yerId\030\003 \001(\r\022\032\n\022playerhandindawnum\030\004 \001(\r\022"
    "\030\n\020playercontribute\030\005 \001(\r\022\017\n\007campnum\030\006 \001"
    "(\r\022%\n\014camprankinfo\030\007 \003(\0132\017.CampRankForYQ"
    "S\"U\n\034CMessageYQSPhaseChangeNotice\022\016\n\006cam"
    "pid\030\001 \001(\r\022\022\n\nisfinished\030\002 \001(\r\022\021\n\tcurrpha"
    "se\030\003 \001(\r\"H\n CMessageYQSEncourageChangeNo"
    "tice\022\016\n\006campid\030\001 \001(\r\022\024\n\014encourangeid\030\002 \001"
    "(\r\"N\n\031CMessageYQSDropItemNotice\022\020\n\010playe"
    "rid\030\001 \001(\r\022\016\n\006itemid\030\002 \001(\r\022\017\n\007itemnum\030\003 \001"
    "(\r\"@\n\032CMessageCheckAnswerRequest\022\016\n\006Answ"
    "er\030\001 \001(\r\022\022\n\nQuestionID\030\002 \001(\r\"p\n\033CMessage"
    "CheckAnswerResponse\022\022\n\nQuestionID\030\001 \001(\r\022"
    "\025\n\rQuestionIndex\030\002 \001(\r\022\016\n\006Result\030\003 \001(\r\022\026"
    "\n\016IfLastQuestion\030\004 \001(\r\"-\n\027CMessageQuesti"
    "onTimeEnd\022\022\n\nQuestionID\030\001 \001(\r\"@\n\023CMessag"
    "eQuestionNew\022\025\n\rQuestionIndex\030\001 \001(\r\022\022\n\nQ"
    "uestionID\030\002 \001(\r\"$\n\021CMessageAnswerEnd\022\017\n\007"
    "EndType\030\001 \001(\r\"-\n\030CMessageUseQuestionPape"
    "r\022\021\n\tItemIndex\030\001 \001(\r\"%\n\023CMessageIfAnswer"
    "Now\022\016\n\006Result\030\001 \001(\r\"\'\n\024CMessageIfBeginQu"
    "est\022\017\n\007IfBegin\030\001 \001(\r\"$\n\021CMessageStopAnse"
    "r\022\017\n\007EndType\030\001 \001(\r\"*\n\030CMessageUsePaperRe"
    "sponse\022\016\n\006Result\030\001 \001(\r\"2\n\034CMessageInvest"
    "QuestionNotify\022\022\n\nQuestionID\030\001 \003(\r\"]\n\032CM"
    "essageInvestAnswerNotify\022\022\n\nQuestionID\030\001"
    " \003(\r\022\026\n\016QuestionAnswer\030\002 \003(\r\022\023\n\013IfAnswer"
    "Now\030\003 \001(\r\"\240\001\n\034CMessageThrowHydrangeaNoti"
    "fy\022\021\n\tThrowType\030\001 \001(\r\022\023\n\013ThrowerName\030\002 \001"
    "(\t\022\024\n\014ReceiverName\030\003 \001(\t\022\017\n\007SrcPosX\030\004 \001("
    "\r\022\017\n\007SrcPosY\030\005 \001(\r\022\017\n\007DesPosX\030\006 \001(\r\022\017\n\007D"
    "esPosY\030\007 \001(\r\"<\n!CMessageGrabHydrangeaEna"
    "bleNotify\022\027\n\017HydrangeaHolder\030\001 \001(\t\"/\n\034CM"
    "essageGrabHydrangeaRequest\022\017\n\007MsgCode\030\001 "
    "\001(\r\"0\n\035CMessageGrabHydrangeaResponse\022\017\n\007"
    "Errcode\030\001 \001(\r\"\211\001\n!CMessageGrabHydrangeaR"
    "esultNotify\022\017\n\007SrcName\030\001 \001(\t\022\017\n\007DesName\030"
    "\002 \001(\t\022\017\n\007SrcPosX\030\003 \001(\r\022\017\n\007SrcPosY\030\004 \001(\r\022"
    "\017\n\007DesPosX\030\005 \001(\r\022\017\n\007DesPosY\030\006 \001(\r\"B\n\035CMe"
    "ssageHydrangeaResultNotify\022\020\n\010RoleName\030\001"
    " \001(\t\022\017\n\007RoleSex\030\002 \001(\r\"I\n\034CMessageStartHy"
    "drangeaNotify\022\r\n\005MapID\030\001 \001(\r\022\014\n\004PosX\030\002 \001"
    "(\r\022\014\n\004PosY\030\003 \001(\r\"0\n\035CMessageThrowHydrang"
    "eaRequest\022\017\n\007MsgCode\030\001 \001(\r\"1\n\036CMessageTh"
    "rowHydrangeaResponse\022\017\n\007Errcode\030\001 \001(\r\"/\n"
    "\030CMessageThrowSugarNotify\022\023\n\013NpcEntityID"
    "\030\001 \001(\r\"Q\n CMessageSetHydrangeaStatusNoti"
    "fy\022\024\n\014RoleEntityID\030\001 \001(\r\022\027\n\017HydrangeaSta"
    "tus\030\002 \001(\r\" \n\036CMessageStartPreliminaryNot"
    "ify\"N\n!CMessagePreliminaryQuestionNotify"
    "\022\022\n\nQuestionID\030\001 \001(\r\022\025\n\rQuestionIndex\030\002 "
    "\001(\r\"\216\001\n\037CMessagePreliminaryAnswerNotify\022"
    "\022\n\nQuestionID\030\001 \001(\r\022\026\n\016QuestionAnswer\030\002 "
    "\001(\r\022\024\n\014PlayerInList\030\003 \003(\t\022\022\n\nExtraScore\030"
    "\004 \003(\r\022\025\n\rQuestionIndex\030\005 \001(\r\"\036\n\034CMessage"
    "EndPreliminaryNotify\"@\n&CMessageSubmitPr"
    "eliminaryAnswerRequest\022\026\n\016QuestionAnswer"
    "\030\001 \001(\r\":\n\'CMessageSubmitPreliminaryAnswe"
    "rResponse\022\017\n\007Errcode\030\001 \001(\r\"A\n\"CMessageVi"
    "ewPreliminaryListRequest\022\r\n\005NpcID\030\001 \001(\r\022"
    "\014\n\004Type\030\002 \001(\r\"X\n\021PBPreliminaryInfo\022\020\n\010Ro"
    "leName\030\001 \001(\t\022\r\n\005Score\030\002 \001(\r\022\020\n\010RightNum\030"
    "\003 \001(\r\022\020\n\010TotalNum\030\004 \001(\r\"`\n\037CMessageViewP"
    "reliminaryResponse\022/\n\023PremilinaryInfoLis"
    "t\030\001 \003(\0132\022.PBPreliminaryInfo\022\014\n\004Type\030\002 \001("
    "\r\"\210\001\n\034CMessageQuestionVerifyNotify\022\022\n\nQu"
    "estionId\030\001 \001(\r\022\020\n\010Question\030\002 \001(\t\022\017\n\007Opti"
    "onA\030\003 \001(\014\022\017\n\007OptionB\030\004 \001(\014\022\017\n\007OptionC\030\005 "
    "\001(\014\022\017\n\007OptionD\030\006 \001(\014\"A\n\033CMessageAnswerVe"
    "rifyRequest\022\022\n\nQuestionId\030\001 \001(\r\022\016\n\006Answe"
    "r\030\002 \001(\014\"/\n\034CMessageAnswerVerifyResponse\022"
    "\017\n\007Errcode\030\001 \001(\r\"N\n\034CMessageStartGiftTim"
    "erNotify\022\014\n\004Secs\030\001 \001(\r\022\016\n\006GiftId\030\002 \001(\r\022\020"
    "\n\010GiftType\030\003 \001(\r\"0\n\034CMessageGetOnlineGif"
    "tRequest\022\020\n\010GiftType\030\001 \001(\r\"B\n\035CMessageGe"
    "tOnlineGiftResponse\022\017\n\007RetCode\030\001 \001(\r\022\020\n\010"
    "GiftType\030\002 \001(\r\"7\n\"CMessageGetTreasureBow"
    "lInfoRequest\022\021\n\tItemIndex\030\001 \001(\r\"\263\001\n#CMes"
    "sageGetTreasureBowlInfoResponse\022\017\n\007Errco"
    "de\030\001 \001(\r\022\025\n\rItemUsedTimes\030\002 \001(\r\022\026\n\016ItemT"
    "otalTimes\030\003 \001(\r\022\024\n\014AllUsedTimes\030\004 \001(\r\022\025\n"
    "\rAllTotalTimes\030\005 \001(\r\022\020\n\010TaxMoney\030\006 \001(\r\022\r"
    "\n\005Index\030\007 \001(\r\"G\n CMessageStartTreasureBo"
    "wlRequest\022\021\n\tItemIndex\030\001 \001(\r\022\020\n\010EntityID"
    "\030\002 \001(\r\"Z\n!CMessageStartTreasureBowlRespo"
    "nse\022\017\n\007Errcode\030\001 \001(\r\022\021\n\tItemIndex\030\002 \001(\r\022"
    "\021\n\tNewItemID\030\003 \001(\r\"l\n!CMessageTreasureBo"
    "wlSuccessNotify\022\020\n\010RoleName\030\001 \001(\t\022\021\n\tOld"
    "ItemID\030\002 \001(\r\022\021\n\tNewItemID\030\003 \001(\r\022\017\n\007ItemN"
    "um\030\004 \001(\r*\343\016\n\017ACTIVITY_MSG_ID\022\037\n\032ID_C2S_R"
    "EQUEST_CHECKANSWER\020\201`\022\037\n\032ID_S2C_RESPONSE"
    "_CHECKANSER\020\202`\022#\n\036ID_C2S_NOTIFY_QUESTION"
    "TIMEREND\020\203`\022\036\n\031ID_S2C_NOTIFY_QUESTIONNEW"
    "\020\204`\022\034\n\027ID_S2C_NOTIFY_ENDANSWER\020\205`\022#\n\036ID_"
    "C2S_NOTIFY_USEQUESTIONPAPER\020\206`\022\036\n\031ID_C2S"
    "_NOTIFY_IFANSWERNOW\020\207`\022\037\n\032ID_C2S_NOTIFY_"
    "IFBEGINQUEST\020\210`\022\035\n\030ID_C2S_NOTIFY_STOPANS"
    "WER\020\211`\022$\n\037ID_S2C_RESPONSE_USEQUESIONPAPE"
    "R\020\212`\022!\n\034ID_S2C_NOIIFY_INVESTQUESTION\020\213`\022"
    "\037\n\032ID_C2S_NOTIFY_INVESTANSWER\020\214`\022!\n\034ID_S"
    "2C_NOTIFY_THROWHYDRANGEA\020\215`\022&\n!ID_S2C_NO"
    "TIFY_GRABHYDRANGEAENABLE\020\216`\022!\n\034ID_C2S_RE"
    "QUEST_GRABHYDRANGEA\020\217`\022\"\n\035ID_S2C_RESPONS"
    "E_GRABHYDRANGEA\020\220`\022&\n!ID_S2C_NOTIFY_GRAB"
    "HYDRANGEARESULT\020\221`\022#\n\036ID_S2C_NOTIFY_HYDR"
    "ANGEAREASULT\020\222`\022!\n\034ID_S2C_NOTIFY_STARTHY"
    "DRANGEA\020\223`\022\"\n\035ID_C2S_REQUEST_THROWHYDRAN"
    "GEA\020\224`\022#\n\036ID_S2C_RESPONSE_THROWHYDRANGEA"
    "\020\225`\022 \n\033ID_S2C_NOTIFY_NPCTHROWSUGAR\020\226`\022%\n"
    " ID_S2C_NOTIFY_SETHYDRANGEASTATUS\020\227`\022#\n\036"
    "ID_S2C_NOTIFY_STARTPRELIMINARY\020\230`\022&\n!ID_"
    "S2C_NOTIFY_PRELIMINARYQUESTION\020\231`\022$\n\037ID_"
    "S2C_NOTIFY_PRELIMINARYANSWER\020\240`\022!\n\034ID_S2"
    "C_NOTIFY_ENDPRELIMINARY\020\241`\022+\n&ID_C2S_REQ"
    "UEST_SUBMITPRELIMINARYANSWER\020\242`\022,\n\'ID_S2"
    "C_RESPONSE_SUBMITPRELIMINARYANSWER\020\243`\022\'\n"
    "\"ID_C2S_REQUEST_VIEWPREMILINARYLIST\020\244`\022\'"
    "\n\"ID_S2C_RESPONSE_IEWPREMILINARYLIST\020\245`\022"
    "\032\n\025ID_C2S_HANDIN_REQUEST\020\246`\022\033\n\026ID_S2C_HA"
    "NDIN_RESPONSE\020\247`\022%\n ID_C2S_GETCAMPRANKFO"
    "RYQS_REQUEST\020\250`\022&\n!ID_S2C_GETCAMPRANKFOR"
    "YQS_RESPONSE\020\251`\022!\n\034ID_S2C_YQSPHASECHANGE"
    "_NOTICE\020\260`\022\037\n\032ID_S2C_YQSENCOURAGE_NOTICE"
    "\020\261`\022\'\n\"ID_C2S_GETPLAYERRANKFORYQS_REQUES"
    "T\020\262`\022(\n#ID_S2C_GETPLAYERRANKFORYQS_RESPO"
    "NSE\020\263`\022!\n\034ID_S2C_NOTIFY_QUESTIONVERIFY\020\264"
    "`\022 \n\033ID_C2S_REQUEST_ANSWERVERIFY\020\265`\022!\n\034I"
    "D_S2C_RESPONSE_ANSWERVERIFY\020\266`\022\036\n\031ID_S2C"
    "_YQSDROPITEM_NOTICE\020\267`\022\034\n\027ID_S2C_GIFTTIM"
    "ER_NOTIFY\020\270`\022\033\n\026ID_C2S_GETGIFT_REQUEST\020\271"
    "`\022\034\n\027ID_S2C_GETGIFT_RESPONSE\020\272`\022\033\n\026ID_S2"
    "C_YQSSTART_NOTICE\020\273`\022\'\n\"ID_C2S_REQUEST_G"
    "ETTREASUREBOWLINFO\020\274`\022(\n#ID_S2C_RESPONSE"
    "_GETTREASUREBOWLINFO\020\275`\022%\n ID_C2S_REQUES"
    "T_STARTTREASUREBOWL\020\277`\022&\n!ID_S2C_RESPONS"
    "E_STARTTREASUREBOWL\020\300`\022&\n!ID_S2C_NOTIFY_"
    "TREASUREBOWLSUCCESS\020\301`B\002H\001", 6506);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "activitymessag_pb.hxx", &protobuf_RegisterTypes);
  #endif
  CMessageActivityYqsStart::default_instance_ = new CMessageActivityYqsStart();
  CMessageGetPlayerRankForYQSRequest::default_instance_ = new CMessageGetPlayerRankForYQSRequest();
  PlayerRankForYQS::default_instance_ = new PlayerRankForYQS();
  CMessageGetPlayerRankForYQSResponse::default_instance_ = new CMessageGetPlayerRankForYQSResponse();
  ItemForHandin::default_instance_ = new ItemForHandin();
  CMessageHandInRequest::default_instance_ = new CMessageHandInRequest();
  EncourageForHandin::default_instance_ = new EncourageForHandin();
  CMessageHandInResponse::default_instance_ = new CMessageHandInResponse();
  CMessageC2SGetCampRankForYQSRequest::default_instance_ = new CMessageC2SGetCampRankForYQSRequest();
  CampRankForYQS::default_instance_ = new CampRankForYQS();
  CMessageS2CGetCampRankForYQSResponse::default_instance_ = new CMessageS2CGetCampRankForYQSResponse();
  CMessageYQSPhaseChangeNotice::default_instance_ = new CMessageYQSPhaseChangeNotice();
  CMessageYQSEncourageChangeNotice::default_instance_ = new CMessageYQSEncourageChangeNotice();
  CMessageYQSDropItemNotice::default_instance_ = new CMessageYQSDropItemNotice();
  CMessageCheckAnswerRequest::default_instance_ = new CMessageCheckAnswerRequest();
  CMessageCheckAnswerResponse::default_instance_ = new CMessageCheckAnswerResponse();
  CMessageQuestionTimeEnd::default_instance_ = new CMessageQuestionTimeEnd();
  CMessageQuestionNew::default_instance_ = new CMessageQuestionNew();
  CMessageAnswerEnd::default_instance_ = new CMessageAnswerEnd();
  CMessageUseQuestionPaper::default_instance_ = new CMessageUseQuestionPaper();
  CMessageIfAnswerNow::default_instance_ = new CMessageIfAnswerNow();
  CMessageIfBeginQuest::default_instance_ = new CMessageIfBeginQuest();
  CMessageStopAnser::default_instance_ = new CMessageStopAnser();
  CMessageUsePaperResponse::default_instance_ = new CMessageUsePaperResponse();
  CMessageInvestQuestionNotify::default_instance_ = new CMessageInvestQuestionNotify();
  CMessageInvestAnswerNotify::default_instance_ = new CMessageInvestAnswerNotify();
  CMessageThrowHydrangeaNotify::default_instance_ = new CMessageThrowHydrangeaNotify();
  CMessageGrabHydrangeaEnableNotify::default_instance_ = new CMessageGrabHydrangeaEnableNotify();
  CMessageGrabHydrangeaRequest::default_instance_ = new CMessageGrabHydrangeaRequest();
  CMessageGrabHydrangeaResponse::default_instance_ = new CMessageGrabHydrangeaResponse();
  CMessageGrabHydrangeaResultNotify::default_instance_ = new CMessageGrabHydrangeaResultNotify();
  CMessageHydrangeaResultNotify::default_instance_ = new CMessageHydrangeaResultNotify();
  CMessageStartHydrangeaNotify::default_instance_ = new CMessageStartHydrangeaNotify();
  CMessageThrowHydrangeaRequest::default_instance_ = new CMessageThrowHydrangeaRequest();
  CMessageThrowHydrangeaResponse::default_instance_ = new CMessageThrowHydrangeaResponse();
  CMessageThrowSugarNotify::default_instance_ = new CMessageThrowSugarNotify();
  CMessageSetHydrangeaStatusNotify::default_instance_ = new CMessageSetHydrangeaStatusNotify();
  CMessageStartPreliminaryNotify::default_instance_ = new CMessageStartPreliminaryNotify();
  CMessagePreliminaryQuestionNotify::default_instance_ = new CMessagePreliminaryQuestionNotify();
  CMessagePreliminaryAnswerNotify::default_instance_ = new CMessagePreliminaryAnswerNotify();
  CMessageEndPreliminaryNotify::default_instance_ = new CMessageEndPreliminaryNotify();
  CMessageSubmitPreliminaryAnswerRequest::default_instance_ = new CMessageSubmitPreliminaryAnswerRequest();
  CMessageSubmitPreliminaryAnswerResponse::default_instance_ = new CMessageSubmitPreliminaryAnswerResponse();
  CMessageViewPreliminaryListRequest::default_instance_ = new CMessageViewPreliminaryListRequest();
  PBPreliminaryInfo::default_instance_ = new PBPreliminaryInfo();
  CMessageViewPreliminaryResponse::default_instance_ = new CMessageViewPreliminaryResponse();
  CMessageQuestionVerifyNotify::default_instance_ = new CMessageQuestionVerifyNotify();
  CMessageAnswerVerifyRequest::default_instance_ = new CMessageAnswerVerifyRequest();
  CMessageAnswerVerifyResponse::default_instance_ = new CMessageAnswerVerifyResponse();
  CMessageStartGiftTimerNotify::default_instance_ = new CMessageStartGiftTimerNotify();
  CMessageGetOnlineGiftRequest::default_instance_ = new CMessageGetOnlineGiftRequest();
  CMessageGetOnlineGiftResponse::default_instance_ = new CMessageGetOnlineGiftResponse();
  CMessageGetTreasureBowlInfoRequest::default_instance_ = new CMessageGetTreasureBowlInfoRequest();
  CMessageGetTreasureBowlInfoResponse::default_instance_ = new CMessageGetTreasureBowlInfoResponse();
  CMessageStartTreasureBowlRequest::default_instance_ = new CMessageStartTreasureBowlRequest();
  CMessageStartTreasureBowlResponse::default_instance_ = new CMessageStartTreasureBowlResponse();
  CMessageTreasureBowlSuccessNotify::default_instance_ = new CMessageTreasureBowlSuccessNotify();
  CMessageActivityYqsStart::default_instance_->InitAsDefaultInstance();
  CMessageGetPlayerRankForYQSRequest::default_instance_->InitAsDefaultInstance();
  PlayerRankForYQS::default_instance_->InitAsDefaultInstance();
  CMessageGetPlayerRankForYQSResponse::default_instance_->InitAsDefaultInstance();
  ItemForHandin::default_instance_->InitAsDefaultInstance();
  CMessageHandInRequest::default_instance_->InitAsDefaultInstance();
  EncourageForHandin::default_instance_->InitAsDefaultInstance();
  CMessageHandInResponse::default_instance_->InitAsDefaultInstance();
  CMessageC2SGetCampRankForYQSRequest::default_instance_->InitAsDefaultInstance();
  CampRankForYQS::default_instance_->InitAsDefaultInstance();
  CMessageS2CGetCampRankForYQSResponse::default_instance_->InitAsDefaultInstance();
  CMessageYQSPhaseChangeNotice::default_instance_->InitAsDefaultInstance();
  CMessageYQSEncourageChangeNotice::default_instance_->InitAsDefaultInstance();
  CMessageYQSDropItemNotice::default_instance_->InitAsDefaultInstance();
  CMessageCheckAnswerRequest::default_instance_->InitAsDefaultInstance();
  CMessageCheckAnswerResponse::default_instance_->InitAsDefaultInstance();
  CMessageQuestionTimeEnd::default_instance_->InitAsDefaultInstance();
  CMessageQuestionNew::default_instance_->InitAsDefaultInstance();
  CMessageAnswerEnd::default_instance_->InitAsDefaultInstance();
  CMessageUseQuestionPaper::default_instance_->InitAsDefaultInstance();
  CMessageIfAnswerNow::default_instance_->InitAsDefaultInstance();
  CMessageIfBeginQuest::default_instance_->InitAsDefaultInstance();
  CMessageStopAnser::default_instance_->InitAsDefaultInstance();
  CMessageUsePaperResponse::default_instance_->InitAsDefaultInstance();
  CMessageInvestQuestionNotify::default_instance_->InitAsDefaultInstance();
  CMessageInvestAnswerNotify::default_instance_->InitAsDefaultInstance();
  CMessageThrowHydrangeaNotify::default_instance_->InitAsDefaultInstance();
  CMessageGrabHydrangeaEnableNotify::default_instance_->InitAsDefaultInstance();
  CMessageGrabHydrangeaRequest::default_instance_->InitAsDefaultInstance();
  CMessageGrabHydrangeaResponse::default_instance_->InitAsDefaultInstance();
  CMessageGrabHydrangeaResultNotify::default_instance_->InitAsDefaultInstance();
  CMessageHydrangeaResultNotify::default_instance_->InitAsDefaultInstance();
  CMessageStartHydrangeaNotify::default_instance_->InitAsDefaultInstance();
  CMessageThrowHydrangeaRequest::default_instance_->InitAsDefaultInstance();
  CMessageThrowHydrangeaResponse::default_instance_->InitAsDefaultInstance();
  CMessageThrowSugarNotify::default_instance_->InitAsDefaultInstance();
  CMessageSetHydrangeaStatusNotify::default_instance_->InitAsDefaultInstance();
  CMessageStartPreliminaryNotify::default_instance_->InitAsDefaultInstance();
  CMessagePreliminaryQuestionNotify::default_instance_->InitAsDefaultInstance();
  CMessagePreliminaryAnswerNotify::default_instance_->InitAsDefaultInstance();
  CMessageEndPreliminaryNotify::default_instance_->InitAsDefaultInstance();
  CMessageSubmitPreliminaryAnswerRequest::default_instance_->InitAsDefaultInstance();
  CMessageSubmitPreliminaryAnswerResponse::default_instance_->InitAsDefaultInstance();
  CMessageViewPreliminaryListRequest::default_instance_->InitAsDefaultInstance();
  PBPreliminaryInfo::default_instance_->InitAsDefaultInstance();
  CMessageViewPreliminaryResponse::default_instance_->InitAsDefaultInstance();
  CMessageQuestionVerifyNotify::default_instance_->InitAsDefaultInstance();
  CMessageAnswerVerifyRequest::default_instance_->InitAsDefaultInstance();
  CMessageAnswerVerifyResponse::default_instance_->InitAsDefaultInstance();
  CMessageStartGiftTimerNotify::default_instance_->InitAsDefaultInstance();
  CMessageGetOnlineGiftRequest::default_instance_->InitAsDefaultInstance();
  CMessageGetOnlineGiftResponse::default_instance_->InitAsDefaultInstance();
  CMessageGetTreasureBowlInfoRequest::default_instance_->InitAsDefaultInstance();
  CMessageGetTreasureBowlInfoResponse::default_instance_->InitAsDefaultInstance();
  CMessageStartTreasureBowlRequest::default_instance_->InitAsDefaultInstance();
  CMessageStartTreasureBowlResponse::default_instance_->InitAsDefaultInstance();
  CMessageTreasureBowlSuccessNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_activitymessag_5fpb_2ehxx);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_activitymessag_5fpb_2ehxx {
  StaticDescriptorInitializer_activitymessag_5fpb_2ehxx() {
    protobuf_AddDesc_activitymessag_5fpb_2ehxx();
  }
} static_descriptor_initializer_activitymessag_5fpb_2ehxx_;

const ::google::protobuf::EnumDescriptor* ACTIVITY_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ACTIVITY_MSG_ID_descriptor_;
}
bool ACTIVITY_MSG_ID_IsValid(int value) {
  switch(value) {
    case 12289:
    case 12290:
    case 12291:
    case 12292:
    case 12293:
    case 12294:
    case 12295:
    case 12296:
    case 12297:
    case 12298:
    case 12299:
    case 12300:
    case 12301:
    case 12302:
    case 12303:
    case 12304:
    case 12305:
    case 12306:
    case 12307:
    case 12308:
    case 12309:
    case 12310:
    case 12311:
    case 12312:
    case 12313:
    case 12320:
    case 12321:
    case 12322:
    case 12323:
    case 12324:
    case 12325:
    case 12326:
    case 12327:
    case 12328:
    case 12329:
    case 12336:
    case 12337:
    case 12338:
    case 12339:
    case 12340:
    case 12341:
    case 12342:
    case 12343:
    case 12344:
    case 12345:
    case 12346:
    case 12347:
    case 12348:
    case 12349:
    case 12351:
    case 12352:
    case 12353:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMessageActivityYqsStart::kActivityidFieldNumber;
const int CMessageActivityYqsStart::kCampidFieldNumber;
#endif  // !_MSC_VER

CMessageActivityYqsStart::CMessageActivityYqsStart()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageActivityYqsStart::InitAsDefaultInstance() {}

CMessageActivityYqsStart::CMessageActivityYqsStart(const CMessageActivityYqsStart& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageActivityYqsStart::SharedCtor() {
  _cached_size_ = 0;
  activityid_ = 0u;
  campid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageActivityYqsStart::~CMessageActivityYqsStart() {
  SharedDtor();
}

void CMessageActivityYqsStart::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageActivityYqsStart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageActivityYqsStart_descriptor_;
}

const CMessageActivityYqsStart& CMessageActivityYqsStart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageActivityYqsStart* CMessageActivityYqsStart::default_instance_ = NULL;

CMessageActivityYqsStart* CMessageActivityYqsStart::New() const {
  return new CMessageActivityYqsStart;
}

void CMessageActivityYqsStart::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activityid_ = 0u;
    campid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageActivityYqsStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 activityid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &activityid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_campid;
        break;
      }
      
      // optional uint32 campid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_campid:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &campid_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageActivityYqsStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageActivityYqsStart::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 activityid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->activityid(), output);
  }
  
  // optional uint32 campid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->campid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageActivityYqsStart::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 activityid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->activityid(), target);
  }
  
  // optional uint32 campid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->campid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageActivityYqsStart::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 activityid = 1;
    if (has_activityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->activityid());
    }
    
    // optional uint32 campid = 2;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->campid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageActivityYqsStart::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageActivityYqsStart* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageActivityYqsStart*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageActivityYqsStart::MergeFrom(const CMessageActivityYqsStart& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_activityid(from.activityid());
    }
    if (from._has_bit(1)) {
      set_campid(from.campid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageActivityYqsStart::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageActivityYqsStart::CopyFrom(const CMessageActivityYqsStart& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageActivityYqsStart::Swap(CMessageActivityYqsStart* other) {
  if (other != this) {
    std::swap(activityid_, other->activityid_);
    std::swap(campid_, other->campid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageActivityYqsStart::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageActivityYqsStart::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageActivityYqsStart::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageActivityYqsStart_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGetPlayerRankForYQSRequest::kPlayeridFieldNumber;
#endif  // !_MSC_VER

CMessageGetPlayerRankForYQSRequest::CMessageGetPlayerRankForYQSRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGetPlayerRankForYQSRequest::InitAsDefaultInstance() {}

CMessageGetPlayerRankForYQSRequest::CMessageGetPlayerRankForYQSRequest(const CMessageGetPlayerRankForYQSRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGetPlayerRankForYQSRequest::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGetPlayerRankForYQSRequest::~CMessageGetPlayerRankForYQSRequest() {
  SharedDtor();
}

void CMessageGetPlayerRankForYQSRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGetPlayerRankForYQSRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetPlayerRankForYQSRequest_descriptor_;
}

const CMessageGetPlayerRankForYQSRequest& CMessageGetPlayerRankForYQSRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGetPlayerRankForYQSRequest* CMessageGetPlayerRankForYQSRequest::default_instance_ = NULL;

CMessageGetPlayerRankForYQSRequest* CMessageGetPlayerRankForYQSRequest::New() const {
  return new CMessageGetPlayerRankForYQSRequest;
}

void CMessageGetPlayerRankForYQSRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    playerid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGetPlayerRankForYQSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 playerid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGetPlayerRankForYQSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGetPlayerRankForYQSRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 playerid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->playerid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGetPlayerRankForYQSRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 playerid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->playerid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGetPlayerRankForYQSRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 playerid = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGetPlayerRankForYQSRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGetPlayerRankForYQSRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGetPlayerRankForYQSRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGetPlayerRankForYQSRequest::MergeFrom(const CMessageGetPlayerRankForYQSRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_playerid(from.playerid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGetPlayerRankForYQSRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetPlayerRankForYQSRequest::CopyFrom(const CMessageGetPlayerRankForYQSRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetPlayerRankForYQSRequest::Swap(CMessageGetPlayerRankForYQSRequest* other) {
  if (other != this) {
    std::swap(playerid_, other->playerid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGetPlayerRankForYQSRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGetPlayerRankForYQSRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGetPlayerRankForYQSRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetPlayerRankForYQSRequest_reflection_;
}

// ===================================================================

const ::std::string PlayerRankForYQS::_default_username_;
#ifndef _MSC_VER
const int PlayerRankForYQS::kRankFieldNumber;
const int PlayerRankForYQS::kUseridFieldNumber;
const int PlayerRankForYQS::kUsernameFieldNumber;
const int PlayerRankForYQS::kUserlevelFieldNumber;
const int PlayerRankForYQS::kUsermetieFieldNumber;
const int PlayerRankForYQS::kContributeFieldNumber;
#endif  // !_MSC_VER

PlayerRankForYQS::PlayerRankForYQS()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PlayerRankForYQS::InitAsDefaultInstance() {}

PlayerRankForYQS::PlayerRankForYQS(const PlayerRankForYQS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PlayerRankForYQS::SharedCtor() {
  _cached_size_ = 0;
  rank_ = 0u;
  userid_ = 0u;
  username_ = const_cast< ::std::string*>(&_default_username_);
  userlevel_ = 0u;
  usermetie_ = 0u;
  contribute_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerRankForYQS::~PlayerRankForYQS() {
  SharedDtor();
}

void PlayerRankForYQS::SharedDtor() {
  if (username_ != &_default_username_) {
    delete username_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PlayerRankForYQS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerRankForYQS_descriptor_;
}

const PlayerRankForYQS& PlayerRankForYQS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

PlayerRankForYQS* PlayerRankForYQS::default_instance_ = NULL;

PlayerRankForYQS* PlayerRankForYQS::New() const {
  return new PlayerRankForYQS;
}

void PlayerRankForYQS::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_ = 0u;
    userid_ = 0u;
    if (_has_bit(2)) {
      if (username_ != &_default_username_) {
        username_->clear();
      }
    }
    userlevel_ = 0u;
    usermetie_ = 0u;
    contribute_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerRankForYQS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &rank_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }
      
      // optional uint32 userid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_userid:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &userid_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_username;
        break;
      }
      
      // optional string username = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_username:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_username()));
        if (input->ExpectTag(32)) goto parse_userlevel;
        break;
      }
      
      // optional uint32 userlevel = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_userlevel:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &userlevel_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_usermetie;
        break;
      }
      
      // optional uint32 usermetie = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_usermetie:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &usermetie_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_Contribute;
        break;
      }
      
      // optional uint32 Contribute = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Contribute:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &contribute_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PlayerRankForYQS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PlayerRankForYQS::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 rank = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->rank(), output);
  }
  
  // optional uint32 userid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->userid(), output);
  }
  
  // optional string username = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteString(3, this->username(), output);
  }
  
  // optional uint32 userlevel = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->userlevel(), output);
  }
  
  // optional uint32 usermetie = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->usermetie(), output);
  }
  
  // optional uint32 Contribute = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->contribute(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PlayerRankForYQS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rank = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->rank(), target);
  }
  
  // optional uint32 userid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->userid(), target);
  }
  
  // optional string username = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(3, this->username(), target);
  }
  
  // optional uint32 userlevel = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->userlevel(), target);
  }
  
  // optional uint32 usermetie = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->usermetie(), target);
  }
  
  // optional uint32 Contribute = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->contribute(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PlayerRankForYQS::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->rank());
    }
    
    // optional uint32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->userid());
    }
    
    // optional string username = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->username());
    }
    
    // optional uint32 userlevel = 4;
    if (has_userlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->userlevel());
    }
    
    // optional uint32 usermetie = 5;
    if (has_usermetie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->usermetie());
    }
    
    // optional uint32 Contribute = 6;
    if (has_contribute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->contribute());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PlayerRankForYQS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerRankForYQS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerRankForYQS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerRankForYQS::MergeFrom(const PlayerRankForYQS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_rank(from.rank());
    }
    if (from._has_bit(1)) {
      set_userid(from.userid());
    }
    if (from._has_bit(2)) {
      set_username(from.username());
    }
    if (from._has_bit(3)) {
      set_userlevel(from.userlevel());
    }
    if (from._has_bit(4)) {
      set_usermetie(from.usermetie());
    }
    if (from._has_bit(5)) {
      set_contribute(from.contribute());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerRankForYQS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRankForYQS::CopyFrom(const PlayerRankForYQS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRankForYQS::Swap(PlayerRankForYQS* other) {
  if (other != this) {
    std::swap(rank_, other->rank_);
    std::swap(userid_, other->userid_);
    std::swap(username_, other->username_);
    std::swap(userlevel_, other->userlevel_);
    std::swap(usermetie_, other->usermetie_);
    std::swap(contribute_, other->contribute_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PlayerRankForYQS::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PlayerRankForYQS::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PlayerRankForYQS::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PlayerRankForYQS_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGetPlayerRankForYQSResponse::kPlayeridFieldNumber;
const int CMessageGetPlayerRankForYQSResponse::kPlayerhandindawnumFieldNumber;
const int CMessageGetPlayerRankForYQSResponse::kPlayercontributeFieldNumber;
const int CMessageGetPlayerRankForYQSResponse::kPlayerrankinfoFieldNumber;
#endif  // !_MSC_VER

CMessageGetPlayerRankForYQSResponse::CMessageGetPlayerRankForYQSResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGetPlayerRankForYQSResponse::InitAsDefaultInstance() {}

CMessageGetPlayerRankForYQSResponse::CMessageGetPlayerRankForYQSResponse(const CMessageGetPlayerRankForYQSResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGetPlayerRankForYQSResponse::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = 0u;
  playerhandindawnum_ = 0u;
  playercontribute_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGetPlayerRankForYQSResponse::~CMessageGetPlayerRankForYQSResponse() {
  SharedDtor();
}

void CMessageGetPlayerRankForYQSResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGetPlayerRankForYQSResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetPlayerRankForYQSResponse_descriptor_;
}

const CMessageGetPlayerRankForYQSResponse& CMessageGetPlayerRankForYQSResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGetPlayerRankForYQSResponse* CMessageGetPlayerRankForYQSResponse::default_instance_ = NULL;

CMessageGetPlayerRankForYQSResponse* CMessageGetPlayerRankForYQSResponse::New() const {
  return new CMessageGetPlayerRankForYQSResponse;
}

void CMessageGetPlayerRankForYQSResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    playerid_ = 0u;
    playerhandindawnum_ = 0u;
    playercontribute_ = 0u;
  }
  playerrankinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGetPlayerRankForYQSResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 playerid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_playerhandindawnum;
        break;
      }
      
      // optional uint32 playerhandindawnum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_playerhandindawnum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerhandindawnum_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_playercontribute;
        break;
      }
      
      // optional uint32 playercontribute = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_playercontribute:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playercontribute_));
        _set_bit(2);
        if (input->ExpectTag(34)) goto parse_playerrankinfo;
        break;
      }
      
      // repeated .PlayerRankForYQS playerrankinfo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_playerrankinfo:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_playerrankinfo()));
        if (input->ExpectTag(34)) goto parse_playerrankinfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGetPlayerRankForYQSResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGetPlayerRankForYQSResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 playerid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->playerid(), output);
  }
  
  // optional uint32 playerhandindawnum = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->playerhandindawnum(), output);
  }
  
  // optional uint32 playercontribute = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->playercontribute(), output);
  }
  
  // repeated .PlayerRankForYQS playerrankinfo = 4;
  for (int i = 0; i < this->playerrankinfo_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(4, this->playerrankinfo(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGetPlayerRankForYQSResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 playerid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->playerid(), target);
  }
  
  // optional uint32 playerhandindawnum = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->playerhandindawnum(), target);
  }
  
  // optional uint32 playercontribute = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->playercontribute(), target);
  }
  
  // repeated .PlayerRankForYQS playerrankinfo = 4;
  for (int i = 0; i < this->playerrankinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(4, this->playerrankinfo(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGetPlayerRankForYQSResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 playerid = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerid());
    }
    
    // optional uint32 playerhandindawnum = 2;
    if (has_playerhandindawnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerhandindawnum());
    }
    
    // optional uint32 playercontribute = 3;
    if (has_playercontribute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playercontribute());
    }
    
  }
  // repeated .PlayerRankForYQS playerrankinfo = 4;
  total_size += 1 * this->playerrankinfo_size();
  for (int i = 0; i < this->playerrankinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->playerrankinfo(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGetPlayerRankForYQSResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGetPlayerRankForYQSResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGetPlayerRankForYQSResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGetPlayerRankForYQSResponse::MergeFrom(const CMessageGetPlayerRankForYQSResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  playerrankinfo_.MergeFrom(from.playerrankinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_playerid(from.playerid());
    }
    if (from._has_bit(1)) {
      set_playerhandindawnum(from.playerhandindawnum());
    }
    if (from._has_bit(2)) {
      set_playercontribute(from.playercontribute());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGetPlayerRankForYQSResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetPlayerRankForYQSResponse::CopyFrom(const CMessageGetPlayerRankForYQSResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetPlayerRankForYQSResponse::Swap(CMessageGetPlayerRankForYQSResponse* other) {
  if (other != this) {
    std::swap(playerid_, other->playerid_);
    std::swap(playerhandindawnum_, other->playerhandindawnum_);
    std::swap(playercontribute_, other->playercontribute_);
    playerrankinfo_.Swap(&other->playerrankinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGetPlayerRankForYQSResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGetPlayerRankForYQSResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGetPlayerRankForYQSResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetPlayerRankForYQSResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int ItemForHandin::kItemtypeFieldNumber;
const int ItemForHandin::kItemidFieldNumber;
const int ItemForHandin::kItemnumFieldNumber;
#endif  // !_MSC_VER

ItemForHandin::ItemForHandin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemForHandin::InitAsDefaultInstance() {}

ItemForHandin::ItemForHandin(const ItemForHandin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemForHandin::SharedCtor() {
  _cached_size_ = 0;
  itemtype_ = 0u;
  itemid_ = 0u;
  itemnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemForHandin::~ItemForHandin() {
  SharedDtor();
}

void ItemForHandin::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* ItemForHandin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemForHandin_descriptor_;
}

const ItemForHandin& ItemForHandin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

ItemForHandin* ItemForHandin::default_instance_ = NULL;

ItemForHandin* ItemForHandin::New() const {
  return new ItemForHandin;
}

void ItemForHandin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemtype_ = 0u;
    itemid_ = 0u;
    itemnum_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemForHandin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 itemtype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemtype_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_itemid;
        break;
      }
      
      // optional uint32 itemid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_itemid:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_itemnum;
        break;
      }
      
      // optional uint32 itemnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_itemnum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemnum_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemForHandin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    ItemForHandin::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 itemtype = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->itemtype(), output);
  }
  
  // optional uint32 itemid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->itemid(), output);
  }
  
  // optional uint32 itemnum = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->itemnum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemForHandin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 itemtype = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->itemtype(), target);
  }
  
  // optional uint32 itemid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->itemid(), target);
  }
  
  // optional uint32 itemnum = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->itemnum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemForHandin::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 itemtype = 1;
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemtype());
    }
    
    // optional uint32 itemid = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemid());
    }
    
    // optional uint32 itemnum = 3;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemnum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void ItemForHandin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemForHandin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemForHandin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemForHandin::MergeFrom(const ItemForHandin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_itemtype(from.itemtype());
    }
    if (from._has_bit(1)) {
      set_itemid(from.itemid());
    }
    if (from._has_bit(2)) {
      set_itemnum(from.itemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemForHandin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemForHandin::CopyFrom(const ItemForHandin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemForHandin::Swap(ItemForHandin* other) {
  if (other != this) {
    std::swap(itemtype_, other->itemtype_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemnum_, other->itemnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool ItemForHandin::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* ItemForHandin::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* ItemForHandin::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return ItemForHandin_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageHandInRequest::kPlayerIdFieldNumber;
const int CMessageHandInRequest::kActivityIdFieldNumber;
const int CMessageHandInRequest::kItemNumFieldNumber;
const int CMessageHandInRequest::kItemsFieldNumber;
#endif  // !_MSC_VER

CMessageHandInRequest::CMessageHandInRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageHandInRequest::InitAsDefaultInstance() {}

CMessageHandInRequest::CMessageHandInRequest(const CMessageHandInRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageHandInRequest::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = 0u;
  activityid_ = 0u;
  itemnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageHandInRequest::~CMessageHandInRequest() {
  SharedDtor();
}

void CMessageHandInRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageHandInRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageHandInRequest_descriptor_;
}

const CMessageHandInRequest& CMessageHandInRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageHandInRequest* CMessageHandInRequest::default_instance_ = NULL;

CMessageHandInRequest* CMessageHandInRequest::New() const {
  return new CMessageHandInRequest;
}

void CMessageHandInRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    playerid_ = 0u;
    activityid_ = 0u;
    itemnum_ = 0u;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageHandInRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 playerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_ActivityId;
        break;
      }
      
      // optional uint32 ActivityId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ActivityId:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &activityid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_ItemNum;
        break;
      }
      
      // optional uint32 ItemNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemNum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemnum_));
        _set_bit(2);
        if (input->ExpectTag(34)) goto parse_Items;
        break;
      }
      
      // repeated .ItemForHandin Items = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Items:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_items()));
        if (input->ExpectTag(34)) goto parse_Items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageHandInRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageHandInRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 playerId = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->playerid(), output);
  }
  
  // optional uint32 ActivityId = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->activityid(), output);
  }
  
  // optional uint32 ItemNum = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->itemnum(), output);
  }
  
  // repeated .ItemForHandin Items = 4;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(4, this->items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageHandInRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 playerId = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->playerid(), target);
  }
  
  // optional uint32 ActivityId = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->activityid(), target);
  }
  
  // optional uint32 ItemNum = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->itemnum(), target);
  }
  
  // repeated .ItemForHandin Items = 4;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(4, this->items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageHandInRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 playerId = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerid());
    }
    
    // optional uint32 ActivityId = 2;
    if (has_activityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->activityid());
    }
    
    // optional uint32 ItemNum = 3;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemnum());
    }
    
  }
  // repeated .ItemForHandin Items = 4;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageHandInRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageHandInRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageHandInRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageHandInRequest::MergeFrom(const CMessageHandInRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_playerid(from.playerid());
    }
    if (from._has_bit(1)) {
      set_activityid(from.activityid());
    }
    if (from._has_bit(2)) {
      set_itemnum(from.itemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageHandInRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHandInRequest::CopyFrom(const CMessageHandInRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHandInRequest::Swap(CMessageHandInRequest* other) {
  if (other != this) {
    std::swap(playerid_, other->playerid_);
    std::swap(activityid_, other->activityid_);
    std::swap(itemnum_, other->itemnum_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageHandInRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageHandInRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageHandInRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageHandInRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int EncourageForHandin::kEncouragetypeFieldNumber;
const int EncourageForHandin::kEncourageidFieldNumber;
const int EncourageForHandin::kEncouragenumFieldNumber;
#endif  // !_MSC_VER

EncourageForHandin::EncourageForHandin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EncourageForHandin::InitAsDefaultInstance() {}

EncourageForHandin::EncourageForHandin(const EncourageForHandin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EncourageForHandin::SharedCtor() {
  _cached_size_ = 0;
  encouragetype_ = 0u;
  encourageid_ = 0u;
  encouragenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EncourageForHandin::~EncourageForHandin() {
  SharedDtor();
}

void EncourageForHandin::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* EncourageForHandin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncourageForHandin_descriptor_;
}

const EncourageForHandin& EncourageForHandin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

EncourageForHandin* EncourageForHandin::default_instance_ = NULL;

EncourageForHandin* EncourageForHandin::New() const {
  return new EncourageForHandin;
}

void EncourageForHandin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    encouragetype_ = 0u;
    encourageid_ = 0u;
    encouragenum_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EncourageForHandin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 encouragetype = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &encouragetype_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_encourageid;
        break;
      }
      
      // optional uint32 encourageid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_encourageid:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &encourageid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_encouragenum;
        break;
      }
      
      // optional uint32 encouragenum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_encouragenum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &encouragenum_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EncourageForHandin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    EncourageForHandin::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 encouragetype = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->encouragetype(), output);
  }
  
  // optional uint32 encourageid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->encourageid(), output);
  }
  
  // optional uint32 encouragenum = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->encouragenum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EncourageForHandin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 encouragetype = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->encouragetype(), target);
  }
  
  // optional uint32 encourageid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->encourageid(), target);
  }
  
  // optional uint32 encouragenum = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->encouragenum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EncourageForHandin::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 encouragetype = 1;
    if (has_encouragetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->encouragetype());
    }
    
    // optional uint32 encourageid = 2;
    if (has_encourageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->encourageid());
    }
    
    // optional uint32 encouragenum = 3;
    if (has_encouragenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->encouragenum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void EncourageForHandin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EncourageForHandin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EncourageForHandin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EncourageForHandin::MergeFrom(const EncourageForHandin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_encouragetype(from.encouragetype());
    }
    if (from._has_bit(1)) {
      set_encourageid(from.encourageid());
    }
    if (from._has_bit(2)) {
      set_encouragenum(from.encouragenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EncourageForHandin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncourageForHandin::CopyFrom(const EncourageForHandin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncourageForHandin::Swap(EncourageForHandin* other) {
  if (other != this) {
    std::swap(encouragetype_, other->encouragetype_);
    std::swap(encourageid_, other->encourageid_);
    std::swap(encouragenum_, other->encouragenum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool EncourageForHandin::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* EncourageForHandin::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* EncourageForHandin::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return EncourageForHandin_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageHandInResponse::kResultFieldNumber;
const int CMessageHandInResponse::kPlayerIdFieldNumber;
const int CMessageHandInResponse::kActivityIdFieldNumber;
const int CMessageHandInResponse::kEncouragenumFieldNumber;
const int CMessageHandInResponse::kEncouragesFieldNumber;
#endif  // !_MSC_VER

CMessageHandInResponse::CMessageHandInResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageHandInResponse::InitAsDefaultInstance() {}

CMessageHandInResponse::CMessageHandInResponse(const CMessageHandInResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageHandInResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  playerid_ = 0u;
  activityid_ = 0u;
  encouragenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageHandInResponse::~CMessageHandInResponse() {
  SharedDtor();
}

void CMessageHandInResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageHandInResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageHandInResponse_descriptor_;
}

const CMessageHandInResponse& CMessageHandInResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageHandInResponse* CMessageHandInResponse::default_instance_ = NULL;

CMessageHandInResponse* CMessageHandInResponse::New() const {
  return new CMessageHandInResponse;
}

void CMessageHandInResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0u;
    playerid_ = 0u;
    activityid_ = 0u;
    encouragenum_ = 0u;
  }
  encourages_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageHandInResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_playerId;
        break;
      }
      
      // optional uint32 playerId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_playerId:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_activityId;
        break;
      }
      
      // optional uint32 activityId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_activityId:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &activityid_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_encouragenum;
        break;
      }
      
      // optional uint32 encouragenum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_encouragenum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &encouragenum_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_encourages;
        break;
      }
      
      // repeated .EncourageForHandin encourages = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_encourages:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_encourages()));
        if (input->ExpectTag(42)) goto parse_encourages;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageHandInResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageHandInResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 result = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->result(), output);
  }
  
  // optional uint32 playerId = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->playerid(), output);
  }
  
  // optional uint32 activityId = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->activityid(), output);
  }
  
  // optional uint32 encouragenum = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->encouragenum(), output);
  }
  
  // repeated .EncourageForHandin encourages = 5;
  for (int i = 0; i < this->encourages_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(5, this->encourages(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageHandInResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 result = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->result(), target);
  }
  
  // optional uint32 playerId = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->playerid(), target);
  }
  
  // optional uint32 activityId = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->activityid(), target);
  }
  
  // optional uint32 encouragenum = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->encouragenum(), target);
  }
  
  // repeated .EncourageForHandin encourages = 5;
  for (int i = 0; i < this->encourages_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(5, this->encourages(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageHandInResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->result());
    }
    
    // optional uint32 playerId = 2;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerid());
    }
    
    // optional uint32 activityId = 3;
    if (has_activityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->activityid());
    }
    
    // optional uint32 encouragenum = 4;
    if (has_encouragenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->encouragenum());
    }
    
  }
  // repeated .EncourageForHandin encourages = 5;
  total_size += 1 * this->encourages_size();
  for (int i = 0; i < this->encourages_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->encourages(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageHandInResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageHandInResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageHandInResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageHandInResponse::MergeFrom(const CMessageHandInResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  encourages_.MergeFrom(from.encourages_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      set_playerid(from.playerid());
    }
    if (from._has_bit(2)) {
      set_activityid(from.activityid());
    }
    if (from._has_bit(3)) {
      set_encouragenum(from.encouragenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageHandInResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHandInResponse::CopyFrom(const CMessageHandInResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHandInResponse::Swap(CMessageHandInResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(playerid_, other->playerid_);
    std::swap(activityid_, other->activityid_);
    std::swap(encouragenum_, other->encouragenum_);
    encourages_.Swap(&other->encourages_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageHandInResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageHandInResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageHandInResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageHandInResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageC2SGetCampRankForYQSRequest::kPlayerIdFieldNumber;
const int CMessageC2SGetCampRankForYQSRequest::kParam1FieldNumber;
#endif  // !_MSC_VER

CMessageC2SGetCampRankForYQSRequest::CMessageC2SGetCampRankForYQSRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageC2SGetCampRankForYQSRequest::InitAsDefaultInstance() {}

CMessageC2SGetCampRankForYQSRequest::CMessageC2SGetCampRankForYQSRequest(const CMessageC2SGetCampRankForYQSRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageC2SGetCampRankForYQSRequest::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = 0u;
  param1_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageC2SGetCampRankForYQSRequest::~CMessageC2SGetCampRankForYQSRequest() {
  SharedDtor();
}

void CMessageC2SGetCampRankForYQSRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageC2SGetCampRankForYQSRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageC2SGetCampRankForYQSRequest_descriptor_;
}

const CMessageC2SGetCampRankForYQSRequest& CMessageC2SGetCampRankForYQSRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageC2SGetCampRankForYQSRequest* CMessageC2SGetCampRankForYQSRequest::default_instance_ = NULL;

CMessageC2SGetCampRankForYQSRequest* CMessageC2SGetCampRankForYQSRequest::New() const {
  return new CMessageC2SGetCampRankForYQSRequest;
}

void CMessageC2SGetCampRankForYQSRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    playerid_ = 0u;
    param1_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageC2SGetCampRankForYQSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 playerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_param1;
        break;
      }
      
      // optional uint32 param1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_param1:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &param1_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageC2SGetCampRankForYQSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageC2SGetCampRankForYQSRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 playerId = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->playerid(), output);
  }
  
  // optional uint32 param1 = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->param1(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageC2SGetCampRankForYQSRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 playerId = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->playerid(), target);
  }
  
  // optional uint32 param1 = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->param1(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageC2SGetCampRankForYQSRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 playerId = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerid());
    }
    
    // optional uint32 param1 = 2;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->param1());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageC2SGetCampRankForYQSRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageC2SGetCampRankForYQSRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageC2SGetCampRankForYQSRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageC2SGetCampRankForYQSRequest::MergeFrom(const CMessageC2SGetCampRankForYQSRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_playerid(from.playerid());
    }
    if (from._has_bit(1)) {
      set_param1(from.param1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageC2SGetCampRankForYQSRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageC2SGetCampRankForYQSRequest::CopyFrom(const CMessageC2SGetCampRankForYQSRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageC2SGetCampRankForYQSRequest::Swap(CMessageC2SGetCampRankForYQSRequest* other) {
  if (other != this) {
    std::swap(playerid_, other->playerid_);
    std::swap(param1_, other->param1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageC2SGetCampRankForYQSRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageC2SGetCampRankForYQSRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageC2SGetCampRankForYQSRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageC2SGetCampRankForYQSRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CampRankForYQS::kRankFieldNumber;
const int CampRankForYQS::kCampidFieldNumber;
const int CampRankForYQS::kGrowinggradeFieldNumber;
const int CampRankForYQS::kGrowingphaseFieldNumber;
#endif  // !_MSC_VER

CampRankForYQS::CampRankForYQS()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CampRankForYQS::InitAsDefaultInstance() {}

CampRankForYQS::CampRankForYQS(const CampRankForYQS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CampRankForYQS::SharedCtor() {
  _cached_size_ = 0;
  rank_ = 0u;
  campid_ = 0u;
  growinggrade_ = 0u;
  growingphase_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CampRankForYQS::~CampRankForYQS() {
  SharedDtor();
}

void CampRankForYQS::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CampRankForYQS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CampRankForYQS_descriptor_;
}

const CampRankForYQS& CampRankForYQS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CampRankForYQS* CampRankForYQS::default_instance_ = NULL;

CampRankForYQS* CampRankForYQS::New() const {
  return new CampRankForYQS;
}

void CampRankForYQS::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_ = 0u;
    campid_ = 0u;
    growinggrade_ = 0u;
    growingphase_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CampRankForYQS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &rank_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_campid;
        break;
      }
      
      // optional uint32 campid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_campid:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &campid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_growinggrade;
        break;
      }
      
      // optional uint32 growinggrade = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_growinggrade:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &growinggrade_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_growingphase;
        break;
      }
      
      // optional uint32 growingphase = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_growingphase:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &growingphase_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CampRankForYQS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CampRankForYQS::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 rank = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->rank(), output);
  }
  
  // optional uint32 campid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->campid(), output);
  }
  
  // optional uint32 growinggrade = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->growinggrade(), output);
  }
  
  // optional uint32 growingphase = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->growingphase(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CampRankForYQS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 rank = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->rank(), target);
  }
  
  // optional uint32 campid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->campid(), target);
  }
  
  // optional uint32 growinggrade = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->growinggrade(), target);
  }
  
  // optional uint32 growingphase = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->growingphase(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CampRankForYQS::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->rank());
    }
    
    // optional uint32 campid = 2;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->campid());
    }
    
    // optional uint32 growinggrade = 3;
    if (has_growinggrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->growinggrade());
    }
    
    // optional uint32 growingphase = 4;
    if (has_growingphase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->growingphase());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CampRankForYQS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CampRankForYQS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CampRankForYQS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CampRankForYQS::MergeFrom(const CampRankForYQS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_rank(from.rank());
    }
    if (from._has_bit(1)) {
      set_campid(from.campid());
    }
    if (from._has_bit(2)) {
      set_growinggrade(from.growinggrade());
    }
    if (from._has_bit(3)) {
      set_growingphase(from.growingphase());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CampRankForYQS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampRankForYQS::CopyFrom(const CampRankForYQS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CampRankForYQS::Swap(CampRankForYQS* other) {
  if (other != this) {
    std::swap(rank_, other->rank_);
    std::swap(campid_, other->campid_);
    std::swap(growinggrade_, other->growinggrade_);
    std::swap(growingphase_, other->growingphase_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CampRankForYQS::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CampRankForYQS::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CampRankForYQS::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CampRankForYQS_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageS2CGetCampRankForYQSResponse::kResultFieldNumber;
const int CMessageS2CGetCampRankForYQSResponse::kParam1FieldNumber;
const int CMessageS2CGetCampRankForYQSResponse::kPlayerIdFieldNumber;
const int CMessageS2CGetCampRankForYQSResponse::kPlayerhandindawnumFieldNumber;
const int CMessageS2CGetCampRankForYQSResponse::kPlayercontributeFieldNumber;
const int CMessageS2CGetCampRankForYQSResponse::kCampnumFieldNumber;
const int CMessageS2CGetCampRankForYQSResponse::kCamprankinfoFieldNumber;
#endif  // !_MSC_VER

CMessageS2CGetCampRankForYQSResponse::CMessageS2CGetCampRankForYQSResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageS2CGetCampRankForYQSResponse::InitAsDefaultInstance() {}

CMessageS2CGetCampRankForYQSResponse::CMessageS2CGetCampRankForYQSResponse(const CMessageS2CGetCampRankForYQSResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageS2CGetCampRankForYQSResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  param1_ = 0u;
  playerid_ = 0u;
  playerhandindawnum_ = 0u;
  playercontribute_ = 0u;
  campnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageS2CGetCampRankForYQSResponse::~CMessageS2CGetCampRankForYQSResponse() {
  SharedDtor();
}

void CMessageS2CGetCampRankForYQSResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageS2CGetCampRankForYQSResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageS2CGetCampRankForYQSResponse_descriptor_;
}

const CMessageS2CGetCampRankForYQSResponse& CMessageS2CGetCampRankForYQSResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageS2CGetCampRankForYQSResponse* CMessageS2CGetCampRankForYQSResponse::default_instance_ = NULL;

CMessageS2CGetCampRankForYQSResponse* CMessageS2CGetCampRankForYQSResponse::New() const {
  return new CMessageS2CGetCampRankForYQSResponse;
}

void CMessageS2CGetCampRankForYQSResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0u;
    param1_ = 0u;
    playerid_ = 0u;
    playerhandindawnum_ = 0u;
    playercontribute_ = 0u;
    campnum_ = 0u;
  }
  camprankinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageS2CGetCampRankForYQSResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_param1;
        break;
      }
      
      // optional uint32 param1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_param1:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &param1_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_playerId;
        break;
      }
      
      // optional uint32 playerId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_playerId:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerid_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_playerhandindawnum;
        break;
      }
      
      // optional uint32 playerhandindawnum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_playerhandindawnum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerhandindawnum_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_playercontribute;
        break;
      }
      
      // optional uint32 playercontribute = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_playercontribute:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playercontribute_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_campnum;
        break;
      }
      
      // optional uint32 campnum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_campnum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &campnum_));
        _set_bit(5);
        if (input->ExpectTag(58)) goto parse_camprankinfo;
        break;
      }
      
      // repeated .CampRankForYQS camprankinfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_camprankinfo:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_camprankinfo()));
        if (input->ExpectTag(58)) goto parse_camprankinfo;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageS2CGetCampRankForYQSResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageS2CGetCampRankForYQSResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 result = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->result(), output);
  }
  
  // optional uint32 param1 = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->param1(), output);
  }
  
  // optional uint32 playerId = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->playerid(), output);
  }
  
  // optional uint32 playerhandindawnum = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->playerhandindawnum(), output);
  }
  
  // optional uint32 playercontribute = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->playercontribute(), output);
  }
  
  // optional uint32 campnum = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->campnum(), output);
  }
  
  // repeated .CampRankForYQS camprankinfo = 7;
  for (int i = 0; i < this->camprankinfo_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(7, this->camprankinfo(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageS2CGetCampRankForYQSResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 result = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->result(), target);
  }
  
  // optional uint32 param1 = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->param1(), target);
  }
  
  // optional uint32 playerId = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->playerid(), target);
  }
  
  // optional uint32 playerhandindawnum = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->playerhandindawnum(), target);
  }
  
  // optional uint32 playercontribute = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->playercontribute(), target);
  }
  
  // optional uint32 campnum = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->campnum(), target);
  }
  
  // repeated .CampRankForYQS camprankinfo = 7;
  for (int i = 0; i < this->camprankinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(7, this->camprankinfo(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageS2CGetCampRankForYQSResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->result());
    }
    
    // optional uint32 param1 = 2;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->param1());
    }
    
    // optional uint32 playerId = 3;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerid());
    }
    
    // optional uint32 playerhandindawnum = 4;
    if (has_playerhandindawnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerhandindawnum());
    }
    
    // optional uint32 playercontribute = 5;
    if (has_playercontribute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playercontribute());
    }
    
    // optional uint32 campnum = 6;
    if (has_campnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->campnum());
    }
    
  }
  // repeated .CampRankForYQS camprankinfo = 7;
  total_size += 1 * this->camprankinfo_size();
  for (int i = 0; i < this->camprankinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->camprankinfo(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageS2CGetCampRankForYQSResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageS2CGetCampRankForYQSResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageS2CGetCampRankForYQSResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageS2CGetCampRankForYQSResponse::MergeFrom(const CMessageS2CGetCampRankForYQSResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  camprankinfo_.MergeFrom(from.camprankinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
    if (from._has_bit(1)) {
      set_param1(from.param1());
    }
    if (from._has_bit(2)) {
      set_playerid(from.playerid());
    }
    if (from._has_bit(3)) {
      set_playerhandindawnum(from.playerhandindawnum());
    }
    if (from._has_bit(4)) {
      set_playercontribute(from.playercontribute());
    }
    if (from._has_bit(5)) {
      set_campnum(from.campnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageS2CGetCampRankForYQSResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageS2CGetCampRankForYQSResponse::CopyFrom(const CMessageS2CGetCampRankForYQSResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageS2CGetCampRankForYQSResponse::Swap(CMessageS2CGetCampRankForYQSResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(param1_, other->param1_);
    std::swap(playerid_, other->playerid_);
    std::swap(playerhandindawnum_, other->playerhandindawnum_);
    std::swap(playercontribute_, other->playercontribute_);
    std::swap(campnum_, other->campnum_);
    camprankinfo_.Swap(&other->camprankinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageS2CGetCampRankForYQSResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageS2CGetCampRankForYQSResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageS2CGetCampRankForYQSResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageS2CGetCampRankForYQSResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageYQSPhaseChangeNotice::kCampidFieldNumber;
const int CMessageYQSPhaseChangeNotice::kIsfinishedFieldNumber;
const int CMessageYQSPhaseChangeNotice::kCurrphaseFieldNumber;
#endif  // !_MSC_VER

CMessageYQSPhaseChangeNotice::CMessageYQSPhaseChangeNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageYQSPhaseChangeNotice::InitAsDefaultInstance() {}

CMessageYQSPhaseChangeNotice::CMessageYQSPhaseChangeNotice(const CMessageYQSPhaseChangeNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageYQSPhaseChangeNotice::SharedCtor() {
  _cached_size_ = 0;
  campid_ = 0u;
  isfinished_ = 0u;
  currphase_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageYQSPhaseChangeNotice::~CMessageYQSPhaseChangeNotice() {
  SharedDtor();
}

void CMessageYQSPhaseChangeNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageYQSPhaseChangeNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageYQSPhaseChangeNotice_descriptor_;
}

const CMessageYQSPhaseChangeNotice& CMessageYQSPhaseChangeNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageYQSPhaseChangeNotice* CMessageYQSPhaseChangeNotice::default_instance_ = NULL;

CMessageYQSPhaseChangeNotice* CMessageYQSPhaseChangeNotice::New() const {
  return new CMessageYQSPhaseChangeNotice;
}

void CMessageYQSPhaseChangeNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    campid_ = 0u;
    isfinished_ = 0u;
    currphase_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageYQSPhaseChangeNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 campid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &campid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_isfinished;
        break;
      }
      
      // optional uint32 isfinished = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_isfinished:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &isfinished_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_currphase;
        break;
      }
      
      // optional uint32 currphase = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_currphase:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &currphase_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageYQSPhaseChangeNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageYQSPhaseChangeNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 campid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->campid(), output);
  }
  
  // optional uint32 isfinished = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->isfinished(), output);
  }
  
  // optional uint32 currphase = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->currphase(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageYQSPhaseChangeNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 campid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->campid(), target);
  }
  
  // optional uint32 isfinished = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->isfinished(), target);
  }
  
  // optional uint32 currphase = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->currphase(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageYQSPhaseChangeNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 campid = 1;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->campid());
    }
    
    // optional uint32 isfinished = 2;
    if (has_isfinished()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->isfinished());
    }
    
    // optional uint32 currphase = 3;
    if (has_currphase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->currphase());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageYQSPhaseChangeNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageYQSPhaseChangeNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageYQSPhaseChangeNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageYQSPhaseChangeNotice::MergeFrom(const CMessageYQSPhaseChangeNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_campid(from.campid());
    }
    if (from._has_bit(1)) {
      set_isfinished(from.isfinished());
    }
    if (from._has_bit(2)) {
      set_currphase(from.currphase());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageYQSPhaseChangeNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageYQSPhaseChangeNotice::CopyFrom(const CMessageYQSPhaseChangeNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageYQSPhaseChangeNotice::Swap(CMessageYQSPhaseChangeNotice* other) {
  if (other != this) {
    std::swap(campid_, other->campid_);
    std::swap(isfinished_, other->isfinished_);
    std::swap(currphase_, other->currphase_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageYQSPhaseChangeNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageYQSPhaseChangeNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageYQSPhaseChangeNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageYQSPhaseChangeNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageYQSEncourageChangeNotice::kCampidFieldNumber;
const int CMessageYQSEncourageChangeNotice::kEncourangeidFieldNumber;
#endif  // !_MSC_VER

CMessageYQSEncourageChangeNotice::CMessageYQSEncourageChangeNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageYQSEncourageChangeNotice::InitAsDefaultInstance() {}

CMessageYQSEncourageChangeNotice::CMessageYQSEncourageChangeNotice(const CMessageYQSEncourageChangeNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageYQSEncourageChangeNotice::SharedCtor() {
  _cached_size_ = 0;
  campid_ = 0u;
  encourangeid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageYQSEncourageChangeNotice::~CMessageYQSEncourageChangeNotice() {
  SharedDtor();
}

void CMessageYQSEncourageChangeNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageYQSEncourageChangeNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageYQSEncourageChangeNotice_descriptor_;
}

const CMessageYQSEncourageChangeNotice& CMessageYQSEncourageChangeNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageYQSEncourageChangeNotice* CMessageYQSEncourageChangeNotice::default_instance_ = NULL;

CMessageYQSEncourageChangeNotice* CMessageYQSEncourageChangeNotice::New() const {
  return new CMessageYQSEncourageChangeNotice;
}

void CMessageYQSEncourageChangeNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    campid_ = 0u;
    encourangeid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageYQSEncourageChangeNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 campid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &campid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_encourangeid;
        break;
      }
      
      // optional uint32 encourangeid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_encourangeid:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &encourangeid_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageYQSEncourageChangeNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageYQSEncourageChangeNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 campid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->campid(), output);
  }
  
  // optional uint32 encourangeid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->encourangeid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageYQSEncourageChangeNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 campid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->campid(), target);
  }
  
  // optional uint32 encourangeid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->encourangeid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageYQSEncourageChangeNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 campid = 1;
    if (has_campid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->campid());
    }
    
    // optional uint32 encourangeid = 2;
    if (has_encourangeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->encourangeid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageYQSEncourageChangeNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageYQSEncourageChangeNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageYQSEncourageChangeNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageYQSEncourageChangeNotice::MergeFrom(const CMessageYQSEncourageChangeNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_campid(from.campid());
    }
    if (from._has_bit(1)) {
      set_encourangeid(from.encourangeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageYQSEncourageChangeNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageYQSEncourageChangeNotice::CopyFrom(const CMessageYQSEncourageChangeNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageYQSEncourageChangeNotice::Swap(CMessageYQSEncourageChangeNotice* other) {
  if (other != this) {
    std::swap(campid_, other->campid_);
    std::swap(encourangeid_, other->encourangeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageYQSEncourageChangeNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageYQSEncourageChangeNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageYQSEncourageChangeNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageYQSEncourageChangeNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageYQSDropItemNotice::kPlayeridFieldNumber;
const int CMessageYQSDropItemNotice::kItemidFieldNumber;
const int CMessageYQSDropItemNotice::kItemnumFieldNumber;
#endif  // !_MSC_VER

CMessageYQSDropItemNotice::CMessageYQSDropItemNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageYQSDropItemNotice::InitAsDefaultInstance() {}

CMessageYQSDropItemNotice::CMessageYQSDropItemNotice(const CMessageYQSDropItemNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageYQSDropItemNotice::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = 0u;
  itemid_ = 0u;
  itemnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageYQSDropItemNotice::~CMessageYQSDropItemNotice() {
  SharedDtor();
}

void CMessageYQSDropItemNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageYQSDropItemNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageYQSDropItemNotice_descriptor_;
}

const CMessageYQSDropItemNotice& CMessageYQSDropItemNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageYQSDropItemNotice* CMessageYQSDropItemNotice::default_instance_ = NULL;

CMessageYQSDropItemNotice* CMessageYQSDropItemNotice::New() const {
  return new CMessageYQSDropItemNotice;
}

void CMessageYQSDropItemNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    playerid_ = 0u;
    itemid_ = 0u;
    itemnum_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageYQSDropItemNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 playerid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &playerid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_itemid;
        break;
      }
      
      // optional uint32 itemid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_itemid:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_itemnum;
        break;
      }
      
      // optional uint32 itemnum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_itemnum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemnum_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageYQSDropItemNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageYQSDropItemNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 playerid = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->playerid(), output);
  }
  
  // optional uint32 itemid = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->itemid(), output);
  }
  
  // optional uint32 itemnum = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->itemnum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageYQSDropItemNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 playerid = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->playerid(), target);
  }
  
  // optional uint32 itemid = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->itemid(), target);
  }
  
  // optional uint32 itemnum = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->itemnum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageYQSDropItemNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 playerid = 1;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->playerid());
    }
    
    // optional uint32 itemid = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemid());
    }
    
    // optional uint32 itemnum = 3;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemnum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageYQSDropItemNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageYQSDropItemNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageYQSDropItemNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageYQSDropItemNotice::MergeFrom(const CMessageYQSDropItemNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_playerid(from.playerid());
    }
    if (from._has_bit(1)) {
      set_itemid(from.itemid());
    }
    if (from._has_bit(2)) {
      set_itemnum(from.itemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageYQSDropItemNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageYQSDropItemNotice::CopyFrom(const CMessageYQSDropItemNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageYQSDropItemNotice::Swap(CMessageYQSDropItemNotice* other) {
  if (other != this) {
    std::swap(playerid_, other->playerid_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemnum_, other->itemnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageYQSDropItemNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageYQSDropItemNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageYQSDropItemNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageYQSDropItemNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageCheckAnswerRequest::kAnswerFieldNumber;
const int CMessageCheckAnswerRequest::kQuestionIDFieldNumber;
#endif  // !_MSC_VER

CMessageCheckAnswerRequest::CMessageCheckAnswerRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageCheckAnswerRequest::InitAsDefaultInstance() {}

CMessageCheckAnswerRequest::CMessageCheckAnswerRequest(const CMessageCheckAnswerRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageCheckAnswerRequest::SharedCtor() {
  _cached_size_ = 0;
  answer_ = 0u;
  questionid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageCheckAnswerRequest::~CMessageCheckAnswerRequest() {
  SharedDtor();
}

void CMessageCheckAnswerRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageCheckAnswerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageCheckAnswerRequest_descriptor_;
}

const CMessageCheckAnswerRequest& CMessageCheckAnswerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageCheckAnswerRequest* CMessageCheckAnswerRequest::default_instance_ = NULL;

CMessageCheckAnswerRequest* CMessageCheckAnswerRequest::New() const {
  return new CMessageCheckAnswerRequest;
}

void CMessageCheckAnswerRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    answer_ = 0u;
    questionid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageCheckAnswerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Answer = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &answer_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_QuestionID;
        break;
      }
      
      // optional uint32 QuestionID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionid_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageCheckAnswerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageCheckAnswerRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Answer = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->answer(), output);
  }
  
  // optional uint32 QuestionID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->questionid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageCheckAnswerRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Answer = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->answer(), target);
  }
  
  // optional uint32 QuestionID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->questionid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageCheckAnswerRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Answer = 1;
    if (has_answer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->answer());
    }
    
    // optional uint32 QuestionID = 2;
    if (has_questionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageCheckAnswerRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageCheckAnswerRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageCheckAnswerRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageCheckAnswerRequest::MergeFrom(const CMessageCheckAnswerRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_answer(from.answer());
    }
    if (from._has_bit(1)) {
      set_questionid(from.questionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageCheckAnswerRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageCheckAnswerRequest::CopyFrom(const CMessageCheckAnswerRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageCheckAnswerRequest::Swap(CMessageCheckAnswerRequest* other) {
  if (other != this) {
    std::swap(answer_, other->answer_);
    std::swap(questionid_, other->questionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageCheckAnswerRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageCheckAnswerRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageCheckAnswerRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageCheckAnswerRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageCheckAnswerResponse::kQuestionIDFieldNumber;
const int CMessageCheckAnswerResponse::kQuestionIndexFieldNumber;
const int CMessageCheckAnswerResponse::kResultFieldNumber;
const int CMessageCheckAnswerResponse::kIfLastQuestionFieldNumber;
#endif  // !_MSC_VER

CMessageCheckAnswerResponse::CMessageCheckAnswerResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageCheckAnswerResponse::InitAsDefaultInstance() {}

CMessageCheckAnswerResponse::CMessageCheckAnswerResponse(const CMessageCheckAnswerResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageCheckAnswerResponse::SharedCtor() {
  _cached_size_ = 0;
  questionid_ = 0u;
  questionindex_ = 0u;
  result_ = 0u;
  iflastquestion_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageCheckAnswerResponse::~CMessageCheckAnswerResponse() {
  SharedDtor();
}

void CMessageCheckAnswerResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageCheckAnswerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageCheckAnswerResponse_descriptor_;
}

const CMessageCheckAnswerResponse& CMessageCheckAnswerResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageCheckAnswerResponse* CMessageCheckAnswerResponse::default_instance_ = NULL;

CMessageCheckAnswerResponse* CMessageCheckAnswerResponse::New() const {
  return new CMessageCheckAnswerResponse;
}

void CMessageCheckAnswerResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    questionid_ = 0u;
    questionindex_ = 0u;
    result_ = 0u;
    iflastquestion_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageCheckAnswerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 QuestionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_QuestionIndex;
        break;
      }
      
      // optional uint32 QuestionIndex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionIndex:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionindex_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }
      
      // optional uint32 Result = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Result:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &result_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_IfLastQuestion;
        break;
      }
      
      // optional uint32 IfLastQuestion = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IfLastQuestion:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &iflastquestion_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageCheckAnswerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageCheckAnswerResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 QuestionID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionid(), output);
  }
  
  // optional uint32 QuestionIndex = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->questionindex(), output);
  }
  
  // optional uint32 Result = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->result(), output);
  }
  
  // optional uint32 IfLastQuestion = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->iflastquestion(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageCheckAnswerResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 QuestionID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionid(), target);
  }
  
  // optional uint32 QuestionIndex = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->questionindex(), target);
  }
  
  // optional uint32 Result = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->result(), target);
  }
  
  // optional uint32 IfLastQuestion = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->iflastquestion(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageCheckAnswerResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 QuestionID = 1;
    if (has_questionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionid());
    }
    
    // optional uint32 QuestionIndex = 2;
    if (has_questionindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionindex());
    }
    
    // optional uint32 Result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->result());
    }
    
    // optional uint32 IfLastQuestion = 4;
    if (has_iflastquestion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->iflastquestion());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageCheckAnswerResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageCheckAnswerResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageCheckAnswerResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageCheckAnswerResponse::MergeFrom(const CMessageCheckAnswerResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_questionid(from.questionid());
    }
    if (from._has_bit(1)) {
      set_questionindex(from.questionindex());
    }
    if (from._has_bit(2)) {
      set_result(from.result());
    }
    if (from._has_bit(3)) {
      set_iflastquestion(from.iflastquestion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageCheckAnswerResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageCheckAnswerResponse::CopyFrom(const CMessageCheckAnswerResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageCheckAnswerResponse::Swap(CMessageCheckAnswerResponse* other) {
  if (other != this) {
    std::swap(questionid_, other->questionid_);
    std::swap(questionindex_, other->questionindex_);
    std::swap(result_, other->result_);
    std::swap(iflastquestion_, other->iflastquestion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageCheckAnswerResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageCheckAnswerResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageCheckAnswerResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageCheckAnswerResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageQuestionTimeEnd::kQuestionIDFieldNumber;
#endif  // !_MSC_VER

CMessageQuestionTimeEnd::CMessageQuestionTimeEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageQuestionTimeEnd::InitAsDefaultInstance() {}

CMessageQuestionTimeEnd::CMessageQuestionTimeEnd(const CMessageQuestionTimeEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageQuestionTimeEnd::SharedCtor() {
  _cached_size_ = 0;
  questionid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageQuestionTimeEnd::~CMessageQuestionTimeEnd() {
  SharedDtor();
}

void CMessageQuestionTimeEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageQuestionTimeEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageQuestionTimeEnd_descriptor_;
}

const CMessageQuestionTimeEnd& CMessageQuestionTimeEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageQuestionTimeEnd* CMessageQuestionTimeEnd::default_instance_ = NULL;

CMessageQuestionTimeEnd* CMessageQuestionTimeEnd::New() const {
  return new CMessageQuestionTimeEnd;
}

void CMessageQuestionTimeEnd::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    questionid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageQuestionTimeEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 QuestionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageQuestionTimeEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageQuestionTimeEnd::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 QuestionID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageQuestionTimeEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 QuestionID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageQuestionTimeEnd::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 QuestionID = 1;
    if (has_questionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageQuestionTimeEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageQuestionTimeEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageQuestionTimeEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageQuestionTimeEnd::MergeFrom(const CMessageQuestionTimeEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_questionid(from.questionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageQuestionTimeEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageQuestionTimeEnd::CopyFrom(const CMessageQuestionTimeEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageQuestionTimeEnd::Swap(CMessageQuestionTimeEnd* other) {
  if (other != this) {
    std::swap(questionid_, other->questionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageQuestionTimeEnd::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageQuestionTimeEnd::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageQuestionTimeEnd::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageQuestionTimeEnd_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageQuestionNew::kQuestionIndexFieldNumber;
const int CMessageQuestionNew::kQuestionIDFieldNumber;
#endif  // !_MSC_VER

CMessageQuestionNew::CMessageQuestionNew()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageQuestionNew::InitAsDefaultInstance() {}

CMessageQuestionNew::CMessageQuestionNew(const CMessageQuestionNew& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageQuestionNew::SharedCtor() {
  _cached_size_ = 0;
  questionindex_ = 0u;
  questionid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageQuestionNew::~CMessageQuestionNew() {
  SharedDtor();
}

void CMessageQuestionNew::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageQuestionNew::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageQuestionNew_descriptor_;
}

const CMessageQuestionNew& CMessageQuestionNew::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageQuestionNew* CMessageQuestionNew::default_instance_ = NULL;

CMessageQuestionNew* CMessageQuestionNew::New() const {
  return new CMessageQuestionNew;
}

void CMessageQuestionNew::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    questionindex_ = 0u;
    questionid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageQuestionNew::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 QuestionIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionindex_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_QuestionID;
        break;
      }
      
      // optional uint32 QuestionID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionid_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageQuestionNew::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageQuestionNew::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 QuestionIndex = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionindex(), output);
  }
  
  // optional uint32 QuestionID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->questionid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageQuestionNew::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 QuestionIndex = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionindex(), target);
  }
  
  // optional uint32 QuestionID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->questionid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageQuestionNew::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 QuestionIndex = 1;
    if (has_questionindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionindex());
    }
    
    // optional uint32 QuestionID = 2;
    if (has_questionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageQuestionNew::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageQuestionNew* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageQuestionNew*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageQuestionNew::MergeFrom(const CMessageQuestionNew& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_questionindex(from.questionindex());
    }
    if (from._has_bit(1)) {
      set_questionid(from.questionid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageQuestionNew::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageQuestionNew::CopyFrom(const CMessageQuestionNew& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageQuestionNew::Swap(CMessageQuestionNew* other) {
  if (other != this) {
    std::swap(questionindex_, other->questionindex_);
    std::swap(questionid_, other->questionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageQuestionNew::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageQuestionNew::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageQuestionNew::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageQuestionNew_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageAnswerEnd::kEndTypeFieldNumber;
#endif  // !_MSC_VER

CMessageAnswerEnd::CMessageAnswerEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageAnswerEnd::InitAsDefaultInstance() {}

CMessageAnswerEnd::CMessageAnswerEnd(const CMessageAnswerEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageAnswerEnd::SharedCtor() {
  _cached_size_ = 0;
  endtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageAnswerEnd::~CMessageAnswerEnd() {
  SharedDtor();
}

void CMessageAnswerEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageAnswerEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageAnswerEnd_descriptor_;
}

const CMessageAnswerEnd& CMessageAnswerEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageAnswerEnd* CMessageAnswerEnd::default_instance_ = NULL;

CMessageAnswerEnd* CMessageAnswerEnd::New() const {
  return new CMessageAnswerEnd;
}

void CMessageAnswerEnd::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    endtype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageAnswerEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 EndType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &endtype_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageAnswerEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageAnswerEnd::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 EndType = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->endtype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageAnswerEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 EndType = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->endtype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageAnswerEnd::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 EndType = 1;
    if (has_endtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->endtype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageAnswerEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageAnswerEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageAnswerEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageAnswerEnd::MergeFrom(const CMessageAnswerEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_endtype(from.endtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageAnswerEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAnswerEnd::CopyFrom(const CMessageAnswerEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAnswerEnd::Swap(CMessageAnswerEnd* other) {
  if (other != this) {
    std::swap(endtype_, other->endtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageAnswerEnd::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageAnswerEnd::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageAnswerEnd::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageAnswerEnd_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageUseQuestionPaper::kItemIndexFieldNumber;
#endif  // !_MSC_VER

CMessageUseQuestionPaper::CMessageUseQuestionPaper()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageUseQuestionPaper::InitAsDefaultInstance() {}

CMessageUseQuestionPaper::CMessageUseQuestionPaper(const CMessageUseQuestionPaper& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageUseQuestionPaper::SharedCtor() {
  _cached_size_ = 0;
  itemindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageUseQuestionPaper::~CMessageUseQuestionPaper() {
  SharedDtor();
}

void CMessageUseQuestionPaper::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageUseQuestionPaper::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageUseQuestionPaper_descriptor_;
}

const CMessageUseQuestionPaper& CMessageUseQuestionPaper::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageUseQuestionPaper* CMessageUseQuestionPaper::default_instance_ = NULL;

CMessageUseQuestionPaper* CMessageUseQuestionPaper::New() const {
  return new CMessageUseQuestionPaper;
}

void CMessageUseQuestionPaper::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemindex_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageUseQuestionPaper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 ItemIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemindex_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageUseQuestionPaper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageUseQuestionPaper::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 ItemIndex = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->itemindex(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageUseQuestionPaper::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 ItemIndex = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->itemindex(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageUseQuestionPaper::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemIndex = 1;
    if (has_itemindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemindex());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageUseQuestionPaper::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageUseQuestionPaper* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageUseQuestionPaper*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageUseQuestionPaper::MergeFrom(const CMessageUseQuestionPaper& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_itemindex(from.itemindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageUseQuestionPaper::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageUseQuestionPaper::CopyFrom(const CMessageUseQuestionPaper& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageUseQuestionPaper::Swap(CMessageUseQuestionPaper* other) {
  if (other != this) {
    std::swap(itemindex_, other->itemindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageUseQuestionPaper::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageUseQuestionPaper::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageUseQuestionPaper::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageUseQuestionPaper_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageIfAnswerNow::kResultFieldNumber;
#endif  // !_MSC_VER

CMessageIfAnswerNow::CMessageIfAnswerNow()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageIfAnswerNow::InitAsDefaultInstance() {}

CMessageIfAnswerNow::CMessageIfAnswerNow(const CMessageIfAnswerNow& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageIfAnswerNow::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageIfAnswerNow::~CMessageIfAnswerNow() {
  SharedDtor();
}

void CMessageIfAnswerNow::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageIfAnswerNow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageIfAnswerNow_descriptor_;
}

const CMessageIfAnswerNow& CMessageIfAnswerNow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageIfAnswerNow* CMessageIfAnswerNow::default_instance_ = NULL;

CMessageIfAnswerNow* CMessageIfAnswerNow::New() const {
  return new CMessageIfAnswerNow;
}

void CMessageIfAnswerNow::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageIfAnswerNow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageIfAnswerNow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageIfAnswerNow::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Result = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageIfAnswerNow::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Result = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageIfAnswerNow::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageIfAnswerNow::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageIfAnswerNow* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageIfAnswerNow*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageIfAnswerNow::MergeFrom(const CMessageIfAnswerNow& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageIfAnswerNow::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageIfAnswerNow::CopyFrom(const CMessageIfAnswerNow& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageIfAnswerNow::Swap(CMessageIfAnswerNow* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageIfAnswerNow::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageIfAnswerNow::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageIfAnswerNow::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageIfAnswerNow_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageIfBeginQuest::kIfBeginFieldNumber;
#endif  // !_MSC_VER

CMessageIfBeginQuest::CMessageIfBeginQuest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageIfBeginQuest::InitAsDefaultInstance() {}

CMessageIfBeginQuest::CMessageIfBeginQuest(const CMessageIfBeginQuest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageIfBeginQuest::SharedCtor() {
  _cached_size_ = 0;
  ifbegin_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageIfBeginQuest::~CMessageIfBeginQuest() {
  SharedDtor();
}

void CMessageIfBeginQuest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageIfBeginQuest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageIfBeginQuest_descriptor_;
}

const CMessageIfBeginQuest& CMessageIfBeginQuest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageIfBeginQuest* CMessageIfBeginQuest::default_instance_ = NULL;

CMessageIfBeginQuest* CMessageIfBeginQuest::New() const {
  return new CMessageIfBeginQuest;
}

void CMessageIfBeginQuest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ifbegin_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageIfBeginQuest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 IfBegin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &ifbegin_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageIfBeginQuest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageIfBeginQuest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 IfBegin = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->ifbegin(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageIfBeginQuest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 IfBegin = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->ifbegin(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageIfBeginQuest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 IfBegin = 1;
    if (has_ifbegin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->ifbegin());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageIfBeginQuest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageIfBeginQuest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageIfBeginQuest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageIfBeginQuest::MergeFrom(const CMessageIfBeginQuest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_ifbegin(from.ifbegin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageIfBeginQuest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageIfBeginQuest::CopyFrom(const CMessageIfBeginQuest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageIfBeginQuest::Swap(CMessageIfBeginQuest* other) {
  if (other != this) {
    std::swap(ifbegin_, other->ifbegin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageIfBeginQuest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageIfBeginQuest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageIfBeginQuest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageIfBeginQuest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageStopAnser::kEndTypeFieldNumber;
#endif  // !_MSC_VER

CMessageStopAnser::CMessageStopAnser()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageStopAnser::InitAsDefaultInstance() {}

CMessageStopAnser::CMessageStopAnser(const CMessageStopAnser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageStopAnser::SharedCtor() {
  _cached_size_ = 0;
  endtype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageStopAnser::~CMessageStopAnser() {
  SharedDtor();
}

void CMessageStopAnser::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageStopAnser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageStopAnser_descriptor_;
}

const CMessageStopAnser& CMessageStopAnser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageStopAnser* CMessageStopAnser::default_instance_ = NULL;

CMessageStopAnser* CMessageStopAnser::New() const {
  return new CMessageStopAnser;
}

void CMessageStopAnser::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    endtype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageStopAnser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 EndType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &endtype_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageStopAnser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageStopAnser::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 EndType = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->endtype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageStopAnser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 EndType = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->endtype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageStopAnser::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 EndType = 1;
    if (has_endtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->endtype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageStopAnser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageStopAnser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageStopAnser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageStopAnser::MergeFrom(const CMessageStopAnser& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_endtype(from.endtype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageStopAnser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStopAnser::CopyFrom(const CMessageStopAnser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStopAnser::Swap(CMessageStopAnser* other) {
  if (other != this) {
    std::swap(endtype_, other->endtype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageStopAnser::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageStopAnser::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageStopAnser::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageStopAnser_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageUsePaperResponse::kResultFieldNumber;
#endif  // !_MSC_VER

CMessageUsePaperResponse::CMessageUsePaperResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageUsePaperResponse::InitAsDefaultInstance() {}

CMessageUsePaperResponse::CMessageUsePaperResponse(const CMessageUsePaperResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageUsePaperResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageUsePaperResponse::~CMessageUsePaperResponse() {
  SharedDtor();
}

void CMessageUsePaperResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageUsePaperResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageUsePaperResponse_descriptor_;
}

const CMessageUsePaperResponse& CMessageUsePaperResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageUsePaperResponse* CMessageUsePaperResponse::default_instance_ = NULL;

CMessageUsePaperResponse* CMessageUsePaperResponse::New() const {
  return new CMessageUsePaperResponse;
}

void CMessageUsePaperResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageUsePaperResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &result_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageUsePaperResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageUsePaperResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Result = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageUsePaperResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Result = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageUsePaperResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageUsePaperResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageUsePaperResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageUsePaperResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageUsePaperResponse::MergeFrom(const CMessageUsePaperResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageUsePaperResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageUsePaperResponse::CopyFrom(const CMessageUsePaperResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageUsePaperResponse::Swap(CMessageUsePaperResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageUsePaperResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageUsePaperResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageUsePaperResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageUsePaperResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageInvestQuestionNotify::kQuestionIDFieldNumber;
#endif  // !_MSC_VER

CMessageInvestQuestionNotify::CMessageInvestQuestionNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageInvestQuestionNotify::InitAsDefaultInstance() {}

CMessageInvestQuestionNotify::CMessageInvestQuestionNotify(const CMessageInvestQuestionNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageInvestQuestionNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageInvestQuestionNotify::~CMessageInvestQuestionNotify() {
  SharedDtor();
}

void CMessageInvestQuestionNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageInvestQuestionNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageInvestQuestionNotify_descriptor_;
}

const CMessageInvestQuestionNotify& CMessageInvestQuestionNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageInvestQuestionNotify* CMessageInvestQuestionNotify::default_instance_ = NULL;

CMessageInvestQuestionNotify* CMessageInvestQuestionNotify::New() const {
  return new CMessageInvestQuestionNotify;
}

void CMessageInvestQuestionNotify::Clear() {
  questionid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageInvestQuestionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // repeated uint32 QuestionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionID:
        ::google::protobuf::uint32 value;
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(input, &value));
        add_questionid(value);
        if (input->ExpectTag(8)) goto parse_QuestionID;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageInvestQuestionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageInvestQuestionNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated uint32 QuestionID = 1;
  for (int i = 0; i < this->questionid_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionid(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageInvestQuestionNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 QuestionID = 1;
  for (int i = 0; i < this->questionid_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionid(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageInvestQuestionNotify::ByteSize() const {
  int total_size = 0;
  
  // repeated uint32 QuestionID = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->questionid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormat::UInt32Size(
        this->questionid(i));
    }
    total_size += 1 * this->questionid_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageInvestQuestionNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageInvestQuestionNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageInvestQuestionNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageInvestQuestionNotify::MergeFrom(const CMessageInvestQuestionNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  questionid_.MergeFrom(from.questionid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageInvestQuestionNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageInvestQuestionNotify::CopyFrom(const CMessageInvestQuestionNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageInvestQuestionNotify::Swap(CMessageInvestQuestionNotify* other) {
  if (other != this) {
    questionid_.Swap(&other->questionid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageInvestQuestionNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageInvestQuestionNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageInvestQuestionNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageInvestQuestionNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageInvestAnswerNotify::kQuestionIDFieldNumber;
const int CMessageInvestAnswerNotify::kQuestionAnswerFieldNumber;
const int CMessageInvestAnswerNotify::kIfAnswerNowFieldNumber;
#endif  // !_MSC_VER

CMessageInvestAnswerNotify::CMessageInvestAnswerNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageInvestAnswerNotify::InitAsDefaultInstance() {}

CMessageInvestAnswerNotify::CMessageInvestAnswerNotify(const CMessageInvestAnswerNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageInvestAnswerNotify::SharedCtor() {
  _cached_size_ = 0;
  ifanswernow_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageInvestAnswerNotify::~CMessageInvestAnswerNotify() {
  SharedDtor();
}

void CMessageInvestAnswerNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageInvestAnswerNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageInvestAnswerNotify_descriptor_;
}

const CMessageInvestAnswerNotify& CMessageInvestAnswerNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageInvestAnswerNotify* CMessageInvestAnswerNotify::default_instance_ = NULL;

CMessageInvestAnswerNotify* CMessageInvestAnswerNotify::New() const {
  return new CMessageInvestAnswerNotify;
}

void CMessageInvestAnswerNotify::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    ifanswernow_ = 0u;
  }
  questionid_.Clear();
  questionanswer_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageInvestAnswerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // repeated uint32 QuestionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionID:
        ::google::protobuf::uint32 value;
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(input, &value));
        add_questionid(value);
        if (input->ExpectTag(8)) goto parse_QuestionID;
        if (input->ExpectTag(16)) goto parse_QuestionAnswer;
        break;
      }
      
      // repeated uint32 QuestionAnswer = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionAnswer:
        ::google::protobuf::uint32 value;
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(input, &value));
        add_questionanswer(value);
        if (input->ExpectTag(16)) goto parse_QuestionAnswer;
        if (input->ExpectTag(24)) goto parse_IfAnswerNow;
        break;
      }
      
      // optional uint32 IfAnswerNow = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IfAnswerNow:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &ifanswernow_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageInvestAnswerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageInvestAnswerNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated uint32 QuestionID = 1;
  for (int i = 0; i < this->questionid_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionid(i), output);
  }
  
  // repeated uint32 QuestionAnswer = 2;
  for (int i = 0; i < this->questionanswer_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->questionanswer(i), output);
  }
  
  // optional uint32 IfAnswerNow = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->ifanswernow(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageInvestAnswerNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 QuestionID = 1;
  for (int i = 0; i < this->questionid_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionid(i), target);
  }
  
  // repeated uint32 QuestionAnswer = 2;
  for (int i = 0; i < this->questionanswer_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->questionanswer(i), target);
  }
  
  // optional uint32 IfAnswerNow = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->ifanswernow(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageInvestAnswerNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional uint32 IfAnswerNow = 3;
    if (has_ifanswernow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->ifanswernow());
    }
    
  }
  // repeated uint32 QuestionID = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->questionid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormat::UInt32Size(
        this->questionid(i));
    }
    total_size += 1 * this->questionid_size() + data_size;
  }
  
  // repeated uint32 QuestionAnswer = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->questionanswer_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormat::UInt32Size(
        this->questionanswer(i));
    }
    total_size += 1 * this->questionanswer_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageInvestAnswerNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageInvestAnswerNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageInvestAnswerNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageInvestAnswerNotify::MergeFrom(const CMessageInvestAnswerNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  questionid_.MergeFrom(from.questionid_);
  questionanswer_.MergeFrom(from.questionanswer_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from._has_bit(2)) {
      set_ifanswernow(from.ifanswernow());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageInvestAnswerNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageInvestAnswerNotify::CopyFrom(const CMessageInvestAnswerNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageInvestAnswerNotify::Swap(CMessageInvestAnswerNotify* other) {
  if (other != this) {
    questionid_.Swap(&other->questionid_);
    questionanswer_.Swap(&other->questionanswer_);
    std::swap(ifanswernow_, other->ifanswernow_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageInvestAnswerNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageInvestAnswerNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageInvestAnswerNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageInvestAnswerNotify_reflection_;
}

// ===================================================================

const ::std::string CMessageThrowHydrangeaNotify::_default_throwername_;
const ::std::string CMessageThrowHydrangeaNotify::_default_receivername_;
#ifndef _MSC_VER
const int CMessageThrowHydrangeaNotify::kThrowTypeFieldNumber;
const int CMessageThrowHydrangeaNotify::kThrowerNameFieldNumber;
const int CMessageThrowHydrangeaNotify::kReceiverNameFieldNumber;
const int CMessageThrowHydrangeaNotify::kSrcPosXFieldNumber;
const int CMessageThrowHydrangeaNotify::kSrcPosYFieldNumber;
const int CMessageThrowHydrangeaNotify::kDesPosXFieldNumber;
const int CMessageThrowHydrangeaNotify::kDesPosYFieldNumber;
#endif  // !_MSC_VER

CMessageThrowHydrangeaNotify::CMessageThrowHydrangeaNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageThrowHydrangeaNotify::InitAsDefaultInstance() {}

CMessageThrowHydrangeaNotify::CMessageThrowHydrangeaNotify(const CMessageThrowHydrangeaNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageThrowHydrangeaNotify::SharedCtor() {
  _cached_size_ = 0;
  throwtype_ = 0u;
  throwername_ = const_cast< ::std::string*>(&_default_throwername_);
  receivername_ = const_cast< ::std::string*>(&_default_receivername_);
  srcposx_ = 0u;
  srcposy_ = 0u;
  desposx_ = 0u;
  desposy_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageThrowHydrangeaNotify::~CMessageThrowHydrangeaNotify() {
  SharedDtor();
}

void CMessageThrowHydrangeaNotify::SharedDtor() {
  if (throwername_ != &_default_throwername_) {
    delete throwername_;
  }
  if (receivername_ != &_default_receivername_) {
    delete receivername_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageThrowHydrangeaNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageThrowHydrangeaNotify_descriptor_;
}

const CMessageThrowHydrangeaNotify& CMessageThrowHydrangeaNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageThrowHydrangeaNotify* CMessageThrowHydrangeaNotify::default_instance_ = NULL;

CMessageThrowHydrangeaNotify* CMessageThrowHydrangeaNotify::New() const {
  return new CMessageThrowHydrangeaNotify;
}

void CMessageThrowHydrangeaNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    throwtype_ = 0u;
    if (_has_bit(1)) {
      if (throwername_ != &_default_throwername_) {
        throwername_->clear();
      }
    }
    if (_has_bit(2)) {
      if (receivername_ != &_default_receivername_) {
        receivername_->clear();
      }
    }
    srcposx_ = 0u;
    srcposy_ = 0u;
    desposx_ = 0u;
    desposy_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageThrowHydrangeaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 ThrowType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &throwtype_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_ThrowerName;
        break;
      }
      
      // optional string ThrowerName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ThrowerName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_throwername()));
        if (input->ExpectTag(26)) goto parse_ReceiverName;
        break;
      }
      
      // optional string ReceiverName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_ReceiverName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_receivername()));
        if (input->ExpectTag(32)) goto parse_SrcPosX;
        break;
      }
      
      // optional uint32 SrcPosX = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SrcPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposx_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_SrcPosY;
        break;
      }
      
      // optional uint32 SrcPosY = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SrcPosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposy_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_DesPosX;
        break;
      }
      
      // optional uint32 DesPosX = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposx_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_DesPosY;
        break;
      }
      
      // optional uint32 DesPosY = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposy_));
        _set_bit(6);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageThrowHydrangeaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageThrowHydrangeaNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 ThrowType = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->throwtype(), output);
  }
  
  // optional string ThrowerName = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteString(2, this->throwername(), output);
  }
  
  // optional string ReceiverName = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteString(3, this->receivername(), output);
  }
  
  // optional uint32 SrcPosX = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->srcposx(), output);
  }
  
  // optional uint32 SrcPosY = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->srcposy(), output);
  }
  
  // optional uint32 DesPosX = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->desposx(), output);
  }
  
  // optional uint32 DesPosY = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->desposy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageThrowHydrangeaNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 ThrowType = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->throwtype(), target);
  }
  
  // optional string ThrowerName = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(2, this->throwername(), target);
  }
  
  // optional string ReceiverName = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(3, this->receivername(), target);
  }
  
  // optional uint32 SrcPosX = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->srcposx(), target);
  }
  
  // optional uint32 SrcPosY = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->srcposy(), target);
  }
  
  // optional uint32 DesPosX = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->desposx(), target);
  }
  
  // optional uint32 DesPosY = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->desposy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageThrowHydrangeaNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ThrowType = 1;
    if (has_throwtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->throwtype());
    }
    
    // optional string ThrowerName = 2;
    if (has_throwername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->throwername());
    }
    
    // optional string ReceiverName = 3;
    if (has_receivername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->receivername());
    }
    
    // optional uint32 SrcPosX = 4;
    if (has_srcposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposx());
    }
    
    // optional uint32 SrcPosY = 5;
    if (has_srcposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposy());
    }
    
    // optional uint32 DesPosX = 6;
    if (has_desposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposx());
    }
    
    // optional uint32 DesPosY = 7;
    if (has_desposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageThrowHydrangeaNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageThrowHydrangeaNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageThrowHydrangeaNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageThrowHydrangeaNotify::MergeFrom(const CMessageThrowHydrangeaNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_throwtype(from.throwtype());
    }
    if (from._has_bit(1)) {
      set_throwername(from.throwername());
    }
    if (from._has_bit(2)) {
      set_receivername(from.receivername());
    }
    if (from._has_bit(3)) {
      set_srcposx(from.srcposx());
    }
    if (from._has_bit(4)) {
      set_srcposy(from.srcposy());
    }
    if (from._has_bit(5)) {
      set_desposx(from.desposx());
    }
    if (from._has_bit(6)) {
      set_desposy(from.desposy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageThrowHydrangeaNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageThrowHydrangeaNotify::CopyFrom(const CMessageThrowHydrangeaNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageThrowHydrangeaNotify::Swap(CMessageThrowHydrangeaNotify* other) {
  if (other != this) {
    std::swap(throwtype_, other->throwtype_);
    std::swap(throwername_, other->throwername_);
    std::swap(receivername_, other->receivername_);
    std::swap(srcposx_, other->srcposx_);
    std::swap(srcposy_, other->srcposy_);
    std::swap(desposx_, other->desposx_);
    std::swap(desposy_, other->desposy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageThrowHydrangeaNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageThrowHydrangeaNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageThrowHydrangeaNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageThrowHydrangeaNotify_reflection_;
}

// ===================================================================

const ::std::string CMessageGrabHydrangeaEnableNotify::_default_hydrangeaholder_;
#ifndef _MSC_VER
const int CMessageGrabHydrangeaEnableNotify::kHydrangeaHolderFieldNumber;
#endif  // !_MSC_VER

CMessageGrabHydrangeaEnableNotify::CMessageGrabHydrangeaEnableNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGrabHydrangeaEnableNotify::InitAsDefaultInstance() {}

CMessageGrabHydrangeaEnableNotify::CMessageGrabHydrangeaEnableNotify(const CMessageGrabHydrangeaEnableNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGrabHydrangeaEnableNotify::SharedCtor() {
  _cached_size_ = 0;
  hydrangeaholder_ = const_cast< ::std::string*>(&_default_hydrangeaholder_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGrabHydrangeaEnableNotify::~CMessageGrabHydrangeaEnableNotify() {
  SharedDtor();
}

void CMessageGrabHydrangeaEnableNotify::SharedDtor() {
  if (hydrangeaholder_ != &_default_hydrangeaholder_) {
    delete hydrangeaholder_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGrabHydrangeaEnableNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGrabHydrangeaEnableNotify_descriptor_;
}

const CMessageGrabHydrangeaEnableNotify& CMessageGrabHydrangeaEnableNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGrabHydrangeaEnableNotify* CMessageGrabHydrangeaEnableNotify::default_instance_ = NULL;

CMessageGrabHydrangeaEnableNotify* CMessageGrabHydrangeaEnableNotify::New() const {
  return new CMessageGrabHydrangeaEnableNotify;
}

void CMessageGrabHydrangeaEnableNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (hydrangeaholder_ != &_default_hydrangeaholder_) {
        hydrangeaholder_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGrabHydrangeaEnableNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional string HydrangeaHolder = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_hydrangeaholder()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGrabHydrangeaEnableNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGrabHydrangeaEnableNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string HydrangeaHolder = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteString(1, this->hydrangeaholder(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGrabHydrangeaEnableNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string HydrangeaHolder = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(1, this->hydrangeaholder(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGrabHydrangeaEnableNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string HydrangeaHolder = 1;
    if (has_hydrangeaholder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->hydrangeaholder());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGrabHydrangeaEnableNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGrabHydrangeaEnableNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGrabHydrangeaEnableNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGrabHydrangeaEnableNotify::MergeFrom(const CMessageGrabHydrangeaEnableNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_hydrangeaholder(from.hydrangeaholder());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGrabHydrangeaEnableNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGrabHydrangeaEnableNotify::CopyFrom(const CMessageGrabHydrangeaEnableNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGrabHydrangeaEnableNotify::Swap(CMessageGrabHydrangeaEnableNotify* other) {
  if (other != this) {
    std::swap(hydrangeaholder_, other->hydrangeaholder_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGrabHydrangeaEnableNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGrabHydrangeaEnableNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGrabHydrangeaEnableNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGrabHydrangeaEnableNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGrabHydrangeaRequest::kMsgCodeFieldNumber;
#endif  // !_MSC_VER

CMessageGrabHydrangeaRequest::CMessageGrabHydrangeaRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGrabHydrangeaRequest::InitAsDefaultInstance() {}

CMessageGrabHydrangeaRequest::CMessageGrabHydrangeaRequest(const CMessageGrabHydrangeaRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGrabHydrangeaRequest::SharedCtor() {
  _cached_size_ = 0;
  msgcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGrabHydrangeaRequest::~CMessageGrabHydrangeaRequest() {
  SharedDtor();
}

void CMessageGrabHydrangeaRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGrabHydrangeaRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGrabHydrangeaRequest_descriptor_;
}

const CMessageGrabHydrangeaRequest& CMessageGrabHydrangeaRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGrabHydrangeaRequest* CMessageGrabHydrangeaRequest::default_instance_ = NULL;

CMessageGrabHydrangeaRequest* CMessageGrabHydrangeaRequest::New() const {
  return new CMessageGrabHydrangeaRequest;
}

void CMessageGrabHydrangeaRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGrabHydrangeaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 MsgCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &msgcode_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGrabHydrangeaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGrabHydrangeaRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 MsgCode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->msgcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGrabHydrangeaRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 MsgCode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->msgcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGrabHydrangeaRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MsgCode = 1;
    if (has_msgcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->msgcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGrabHydrangeaRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGrabHydrangeaRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGrabHydrangeaRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGrabHydrangeaRequest::MergeFrom(const CMessageGrabHydrangeaRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_msgcode(from.msgcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGrabHydrangeaRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGrabHydrangeaRequest::CopyFrom(const CMessageGrabHydrangeaRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGrabHydrangeaRequest::Swap(CMessageGrabHydrangeaRequest* other) {
  if (other != this) {
    std::swap(msgcode_, other->msgcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGrabHydrangeaRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGrabHydrangeaRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGrabHydrangeaRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGrabHydrangeaRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGrabHydrangeaResponse::kErrcodeFieldNumber;
#endif  // !_MSC_VER

CMessageGrabHydrangeaResponse::CMessageGrabHydrangeaResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGrabHydrangeaResponse::InitAsDefaultInstance() {}

CMessageGrabHydrangeaResponse::CMessageGrabHydrangeaResponse(const CMessageGrabHydrangeaResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGrabHydrangeaResponse::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGrabHydrangeaResponse::~CMessageGrabHydrangeaResponse() {
  SharedDtor();
}

void CMessageGrabHydrangeaResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGrabHydrangeaResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGrabHydrangeaResponse_descriptor_;
}

const CMessageGrabHydrangeaResponse& CMessageGrabHydrangeaResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGrabHydrangeaResponse* CMessageGrabHydrangeaResponse::default_instance_ = NULL;

CMessageGrabHydrangeaResponse* CMessageGrabHydrangeaResponse::New() const {
  return new CMessageGrabHydrangeaResponse;
}

void CMessageGrabHydrangeaResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGrabHydrangeaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &errcode_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGrabHydrangeaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGrabHydrangeaResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->errcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGrabHydrangeaResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->errcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGrabHydrangeaResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->errcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGrabHydrangeaResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGrabHydrangeaResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGrabHydrangeaResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGrabHydrangeaResponse::MergeFrom(const CMessageGrabHydrangeaResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGrabHydrangeaResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGrabHydrangeaResponse::CopyFrom(const CMessageGrabHydrangeaResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGrabHydrangeaResponse::Swap(CMessageGrabHydrangeaResponse* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGrabHydrangeaResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGrabHydrangeaResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGrabHydrangeaResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGrabHydrangeaResponse_reflection_;
}

// ===================================================================

const ::std::string CMessageGrabHydrangeaResultNotify::_default_srcname_;
const ::std::string CMessageGrabHydrangeaResultNotify::_default_desname_;
#ifndef _MSC_VER
const int CMessageGrabHydrangeaResultNotify::kSrcNameFieldNumber;
const int CMessageGrabHydrangeaResultNotify::kDesNameFieldNumber;
const int CMessageGrabHydrangeaResultNotify::kSrcPosXFieldNumber;
const int CMessageGrabHydrangeaResultNotify::kSrcPosYFieldNumber;
const int CMessageGrabHydrangeaResultNotify::kDesPosXFieldNumber;
const int CMessageGrabHydrangeaResultNotify::kDesPosYFieldNumber;
#endif  // !_MSC_VER

CMessageGrabHydrangeaResultNotify::CMessageGrabHydrangeaResultNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGrabHydrangeaResultNotify::InitAsDefaultInstance() {}

CMessageGrabHydrangeaResultNotify::CMessageGrabHydrangeaResultNotify(const CMessageGrabHydrangeaResultNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGrabHydrangeaResultNotify::SharedCtor() {
  _cached_size_ = 0;
  srcname_ = const_cast< ::std::string*>(&_default_srcname_);
  desname_ = const_cast< ::std::string*>(&_default_desname_);
  srcposx_ = 0u;
  srcposy_ = 0u;
  desposx_ = 0u;
  desposy_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGrabHydrangeaResultNotify::~CMessageGrabHydrangeaResultNotify() {
  SharedDtor();
}

void CMessageGrabHydrangeaResultNotify::SharedDtor() {
  if (srcname_ != &_default_srcname_) {
    delete srcname_;
  }
  if (desname_ != &_default_desname_) {
    delete desname_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGrabHydrangeaResultNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGrabHydrangeaResultNotify_descriptor_;
}

const CMessageGrabHydrangeaResultNotify& CMessageGrabHydrangeaResultNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGrabHydrangeaResultNotify* CMessageGrabHydrangeaResultNotify::default_instance_ = NULL;

CMessageGrabHydrangeaResultNotify* CMessageGrabHydrangeaResultNotify::New() const {
  return new CMessageGrabHydrangeaResultNotify;
}

void CMessageGrabHydrangeaResultNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (srcname_ != &_default_srcname_) {
        srcname_->clear();
      }
    }
    if (_has_bit(1)) {
      if (desname_ != &_default_desname_) {
        desname_->clear();
      }
    }
    srcposx_ = 0u;
    srcposy_ = 0u;
    desposx_ = 0u;
    desposy_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGrabHydrangeaResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional string SrcName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_srcname()));
        if (input->ExpectTag(18)) goto parse_DesName;
        break;
      }
      
      // optional string DesName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_DesName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_desname()));
        if (input->ExpectTag(24)) goto parse_SrcPosX;
        break;
      }
      
      // optional uint32 SrcPosX = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SrcPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposx_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_SrcPosY;
        break;
      }
      
      // optional uint32 SrcPosY = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SrcPosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &srcposy_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_DesPosX;
        break;
      }
      
      // optional uint32 DesPosX = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposx_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_DesPosY;
        break;
      }
      
      // optional uint32 DesPosY = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DesPosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &desposy_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGrabHydrangeaResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGrabHydrangeaResultNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string SrcName = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteString(1, this->srcname(), output);
  }
  
  // optional string DesName = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteString(2, this->desname(), output);
  }
  
  // optional uint32 SrcPosX = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->srcposx(), output);
  }
  
  // optional uint32 SrcPosY = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->srcposy(), output);
  }
  
  // optional uint32 DesPosX = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->desposx(), output);
  }
  
  // optional uint32 DesPosY = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->desposy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGrabHydrangeaResultNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string SrcName = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(1, this->srcname(), target);
  }
  
  // optional string DesName = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(2, this->desname(), target);
  }
  
  // optional uint32 SrcPosX = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->srcposx(), target);
  }
  
  // optional uint32 SrcPosY = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->srcposy(), target);
  }
  
  // optional uint32 DesPosX = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->desposx(), target);
  }
  
  // optional uint32 DesPosY = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->desposy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGrabHydrangeaResultNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string SrcName = 1;
    if (has_srcname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->srcname());
    }
    
    // optional string DesName = 2;
    if (has_desname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->desname());
    }
    
    // optional uint32 SrcPosX = 3;
    if (has_srcposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposx());
    }
    
    // optional uint32 SrcPosY = 4;
    if (has_srcposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->srcposy());
    }
    
    // optional uint32 DesPosX = 5;
    if (has_desposx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposx());
    }
    
    // optional uint32 DesPosY = 6;
    if (has_desposy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->desposy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGrabHydrangeaResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGrabHydrangeaResultNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGrabHydrangeaResultNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGrabHydrangeaResultNotify::MergeFrom(const CMessageGrabHydrangeaResultNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_srcname(from.srcname());
    }
    if (from._has_bit(1)) {
      set_desname(from.desname());
    }
    if (from._has_bit(2)) {
      set_srcposx(from.srcposx());
    }
    if (from._has_bit(3)) {
      set_srcposy(from.srcposy());
    }
    if (from._has_bit(4)) {
      set_desposx(from.desposx());
    }
    if (from._has_bit(5)) {
      set_desposy(from.desposy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGrabHydrangeaResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGrabHydrangeaResultNotify::CopyFrom(const CMessageGrabHydrangeaResultNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGrabHydrangeaResultNotify::Swap(CMessageGrabHydrangeaResultNotify* other) {
  if (other != this) {
    std::swap(srcname_, other->srcname_);
    std::swap(desname_, other->desname_);
    std::swap(srcposx_, other->srcposx_);
    std::swap(srcposy_, other->srcposy_);
    std::swap(desposx_, other->desposx_);
    std::swap(desposy_, other->desposy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGrabHydrangeaResultNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGrabHydrangeaResultNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGrabHydrangeaResultNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGrabHydrangeaResultNotify_reflection_;
}

// ===================================================================

const ::std::string CMessageHydrangeaResultNotify::_default_rolename_;
#ifndef _MSC_VER
const int CMessageHydrangeaResultNotify::kRoleNameFieldNumber;
const int CMessageHydrangeaResultNotify::kRoleSexFieldNumber;
#endif  // !_MSC_VER

CMessageHydrangeaResultNotify::CMessageHydrangeaResultNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageHydrangeaResultNotify::InitAsDefaultInstance() {}

CMessageHydrangeaResultNotify::CMessageHydrangeaResultNotify(const CMessageHydrangeaResultNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageHydrangeaResultNotify::SharedCtor() {
  _cached_size_ = 0;
  rolename_ = const_cast< ::std::string*>(&_default_rolename_);
  rolesex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageHydrangeaResultNotify::~CMessageHydrangeaResultNotify() {
  SharedDtor();
}

void CMessageHydrangeaResultNotify::SharedDtor() {
  if (rolename_ != &_default_rolename_) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageHydrangeaResultNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageHydrangeaResultNotify_descriptor_;
}

const CMessageHydrangeaResultNotify& CMessageHydrangeaResultNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageHydrangeaResultNotify* CMessageHydrangeaResultNotify::default_instance_ = NULL;

CMessageHydrangeaResultNotify* CMessageHydrangeaResultNotify::New() const {
  return new CMessageHydrangeaResultNotify;
}

void CMessageHydrangeaResultNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (rolename_ != &_default_rolename_) {
        rolename_->clear();
      }
    }
    rolesex_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageHydrangeaResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional string RoleName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_rolename()));
        if (input->ExpectTag(16)) goto parse_RoleSex;
        break;
      }
      
      // optional uint32 RoleSex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_RoleSex:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &rolesex_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageHydrangeaResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageHydrangeaResultNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string RoleName = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteString(1, this->rolename(), output);
  }
  
  // optional uint32 RoleSex = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->rolesex(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageHydrangeaResultNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RoleName = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(1, this->rolename(), target);
  }
  
  // optional uint32 RoleSex = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->rolesex(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageHydrangeaResultNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RoleName = 1;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->rolename());
    }
    
    // optional uint32 RoleSex = 2;
    if (has_rolesex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->rolesex());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageHydrangeaResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageHydrangeaResultNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageHydrangeaResultNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageHydrangeaResultNotify::MergeFrom(const CMessageHydrangeaResultNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_rolename(from.rolename());
    }
    if (from._has_bit(1)) {
      set_rolesex(from.rolesex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageHydrangeaResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHydrangeaResultNotify::CopyFrom(const CMessageHydrangeaResultNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageHydrangeaResultNotify::Swap(CMessageHydrangeaResultNotify* other) {
  if (other != this) {
    std::swap(rolename_, other->rolename_);
    std::swap(rolesex_, other->rolesex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageHydrangeaResultNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageHydrangeaResultNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageHydrangeaResultNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageHydrangeaResultNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageStartHydrangeaNotify::kMapIDFieldNumber;
const int CMessageStartHydrangeaNotify::kPosXFieldNumber;
const int CMessageStartHydrangeaNotify::kPosYFieldNumber;
#endif  // !_MSC_VER

CMessageStartHydrangeaNotify::CMessageStartHydrangeaNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageStartHydrangeaNotify::InitAsDefaultInstance() {}

CMessageStartHydrangeaNotify::CMessageStartHydrangeaNotify(const CMessageStartHydrangeaNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageStartHydrangeaNotify::SharedCtor() {
  _cached_size_ = 0;
  mapid_ = 0u;
  posx_ = 0u;
  posy_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageStartHydrangeaNotify::~CMessageStartHydrangeaNotify() {
  SharedDtor();
}

void CMessageStartHydrangeaNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageStartHydrangeaNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartHydrangeaNotify_descriptor_;
}

const CMessageStartHydrangeaNotify& CMessageStartHydrangeaNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageStartHydrangeaNotify* CMessageStartHydrangeaNotify::default_instance_ = NULL;

CMessageStartHydrangeaNotify* CMessageStartHydrangeaNotify::New() const {
  return new CMessageStartHydrangeaNotify;
}

void CMessageStartHydrangeaNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mapid_ = 0u;
    posx_ = 0u;
    posy_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageStartHydrangeaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 MapID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &mapid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_PosX;
        break;
      }
      
      // optional uint32 PosX = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosX:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posx_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_PosY;
        break;
      }
      
      // optional uint32 PosY = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_PosY:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &posy_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageStartHydrangeaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageStartHydrangeaNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 MapID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->mapid(), output);
  }
  
  // optional uint32 PosX = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->posx(), output);
  }
  
  // optional uint32 PosY = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->posy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageStartHydrangeaNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 MapID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->mapid(), target);
  }
  
  // optional uint32 PosX = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->posx(), target);
  }
  
  // optional uint32 PosY = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->posy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageStartHydrangeaNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MapID = 1;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->mapid());
    }
    
    // optional uint32 PosX = 2;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posx());
    }
    
    // optional uint32 PosY = 3;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->posy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageStartHydrangeaNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageStartHydrangeaNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageStartHydrangeaNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageStartHydrangeaNotify::MergeFrom(const CMessageStartHydrangeaNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_mapid(from.mapid());
    }
    if (from._has_bit(1)) {
      set_posx(from.posx());
    }
    if (from._has_bit(2)) {
      set_posy(from.posy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageStartHydrangeaNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartHydrangeaNotify::CopyFrom(const CMessageStartHydrangeaNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartHydrangeaNotify::Swap(CMessageStartHydrangeaNotify* other) {
  if (other != this) {
    std::swap(mapid_, other->mapid_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageStartHydrangeaNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageStartHydrangeaNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageStartHydrangeaNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartHydrangeaNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageThrowHydrangeaRequest::kMsgCodeFieldNumber;
#endif  // !_MSC_VER

CMessageThrowHydrangeaRequest::CMessageThrowHydrangeaRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageThrowHydrangeaRequest::InitAsDefaultInstance() {}

CMessageThrowHydrangeaRequest::CMessageThrowHydrangeaRequest(const CMessageThrowHydrangeaRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageThrowHydrangeaRequest::SharedCtor() {
  _cached_size_ = 0;
  msgcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageThrowHydrangeaRequest::~CMessageThrowHydrangeaRequest() {
  SharedDtor();
}

void CMessageThrowHydrangeaRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageThrowHydrangeaRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageThrowHydrangeaRequest_descriptor_;
}

const CMessageThrowHydrangeaRequest& CMessageThrowHydrangeaRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageThrowHydrangeaRequest* CMessageThrowHydrangeaRequest::default_instance_ = NULL;

CMessageThrowHydrangeaRequest* CMessageThrowHydrangeaRequest::New() const {
  return new CMessageThrowHydrangeaRequest;
}

void CMessageThrowHydrangeaRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msgcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageThrowHydrangeaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 MsgCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &msgcode_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageThrowHydrangeaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageThrowHydrangeaRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 MsgCode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->msgcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageThrowHydrangeaRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 MsgCode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->msgcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageThrowHydrangeaRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 MsgCode = 1;
    if (has_msgcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->msgcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageThrowHydrangeaRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageThrowHydrangeaRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageThrowHydrangeaRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageThrowHydrangeaRequest::MergeFrom(const CMessageThrowHydrangeaRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_msgcode(from.msgcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageThrowHydrangeaRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageThrowHydrangeaRequest::CopyFrom(const CMessageThrowHydrangeaRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageThrowHydrangeaRequest::Swap(CMessageThrowHydrangeaRequest* other) {
  if (other != this) {
    std::swap(msgcode_, other->msgcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageThrowHydrangeaRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageThrowHydrangeaRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageThrowHydrangeaRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageThrowHydrangeaRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageThrowHydrangeaResponse::kErrcodeFieldNumber;
#endif  // !_MSC_VER

CMessageThrowHydrangeaResponse::CMessageThrowHydrangeaResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageThrowHydrangeaResponse::InitAsDefaultInstance() {}

CMessageThrowHydrangeaResponse::CMessageThrowHydrangeaResponse(const CMessageThrowHydrangeaResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageThrowHydrangeaResponse::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageThrowHydrangeaResponse::~CMessageThrowHydrangeaResponse() {
  SharedDtor();
}

void CMessageThrowHydrangeaResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageThrowHydrangeaResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageThrowHydrangeaResponse_descriptor_;
}

const CMessageThrowHydrangeaResponse& CMessageThrowHydrangeaResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageThrowHydrangeaResponse* CMessageThrowHydrangeaResponse::default_instance_ = NULL;

CMessageThrowHydrangeaResponse* CMessageThrowHydrangeaResponse::New() const {
  return new CMessageThrowHydrangeaResponse;
}

void CMessageThrowHydrangeaResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageThrowHydrangeaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &errcode_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageThrowHydrangeaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageThrowHydrangeaResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->errcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageThrowHydrangeaResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->errcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageThrowHydrangeaResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->errcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageThrowHydrangeaResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageThrowHydrangeaResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageThrowHydrangeaResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageThrowHydrangeaResponse::MergeFrom(const CMessageThrowHydrangeaResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageThrowHydrangeaResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageThrowHydrangeaResponse::CopyFrom(const CMessageThrowHydrangeaResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageThrowHydrangeaResponse::Swap(CMessageThrowHydrangeaResponse* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageThrowHydrangeaResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageThrowHydrangeaResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageThrowHydrangeaResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageThrowHydrangeaResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageThrowSugarNotify::kNpcEntityIDFieldNumber;
#endif  // !_MSC_VER

CMessageThrowSugarNotify::CMessageThrowSugarNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageThrowSugarNotify::InitAsDefaultInstance() {}

CMessageThrowSugarNotify::CMessageThrowSugarNotify(const CMessageThrowSugarNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageThrowSugarNotify::SharedCtor() {
  _cached_size_ = 0;
  npcentityid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageThrowSugarNotify::~CMessageThrowSugarNotify() {
  SharedDtor();
}

void CMessageThrowSugarNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageThrowSugarNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageThrowSugarNotify_descriptor_;
}

const CMessageThrowSugarNotify& CMessageThrowSugarNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageThrowSugarNotify* CMessageThrowSugarNotify::default_instance_ = NULL;

CMessageThrowSugarNotify* CMessageThrowSugarNotify::New() const {
  return new CMessageThrowSugarNotify;
}

void CMessageThrowSugarNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    npcentityid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageThrowSugarNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 NpcEntityID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &npcentityid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageThrowSugarNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageThrowSugarNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 NpcEntityID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->npcentityid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageThrowSugarNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 NpcEntityID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->npcentityid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageThrowSugarNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 NpcEntityID = 1;
    if (has_npcentityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->npcentityid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageThrowSugarNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageThrowSugarNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageThrowSugarNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageThrowSugarNotify::MergeFrom(const CMessageThrowSugarNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_npcentityid(from.npcentityid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageThrowSugarNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageThrowSugarNotify::CopyFrom(const CMessageThrowSugarNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageThrowSugarNotify::Swap(CMessageThrowSugarNotify* other) {
  if (other != this) {
    std::swap(npcentityid_, other->npcentityid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageThrowSugarNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageThrowSugarNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageThrowSugarNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageThrowSugarNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageSetHydrangeaStatusNotify::kRoleEntityIDFieldNumber;
const int CMessageSetHydrangeaStatusNotify::kHydrangeaStatusFieldNumber;
#endif  // !_MSC_VER

CMessageSetHydrangeaStatusNotify::CMessageSetHydrangeaStatusNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageSetHydrangeaStatusNotify::InitAsDefaultInstance() {}

CMessageSetHydrangeaStatusNotify::CMessageSetHydrangeaStatusNotify(const CMessageSetHydrangeaStatusNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageSetHydrangeaStatusNotify::SharedCtor() {
  _cached_size_ = 0;
  roleentityid_ = 0u;
  hydrangeastatus_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageSetHydrangeaStatusNotify::~CMessageSetHydrangeaStatusNotify() {
  SharedDtor();
}

void CMessageSetHydrangeaStatusNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageSetHydrangeaStatusNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageSetHydrangeaStatusNotify_descriptor_;
}

const CMessageSetHydrangeaStatusNotify& CMessageSetHydrangeaStatusNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageSetHydrangeaStatusNotify* CMessageSetHydrangeaStatusNotify::default_instance_ = NULL;

CMessageSetHydrangeaStatusNotify* CMessageSetHydrangeaStatusNotify::New() const {
  return new CMessageSetHydrangeaStatusNotify;
}

void CMessageSetHydrangeaStatusNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleentityid_ = 0u;
    hydrangeastatus_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageSetHydrangeaStatusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 RoleEntityID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &roleentityid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_HydrangeaStatus;
        break;
      }
      
      // optional uint32 HydrangeaStatus = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_HydrangeaStatus:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &hydrangeastatus_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageSetHydrangeaStatusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageSetHydrangeaStatusNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 RoleEntityID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->roleentityid(), output);
  }
  
  // optional uint32 HydrangeaStatus = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->hydrangeastatus(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageSetHydrangeaStatusNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 RoleEntityID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->roleentityid(), target);
  }
  
  // optional uint32 HydrangeaStatus = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->hydrangeastatus(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageSetHydrangeaStatusNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RoleEntityID = 1;
    if (has_roleentityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->roleentityid());
    }
    
    // optional uint32 HydrangeaStatus = 2;
    if (has_hydrangeastatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->hydrangeastatus());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageSetHydrangeaStatusNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageSetHydrangeaStatusNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageSetHydrangeaStatusNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageSetHydrangeaStatusNotify::MergeFrom(const CMessageSetHydrangeaStatusNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_roleentityid(from.roleentityid());
    }
    if (from._has_bit(1)) {
      set_hydrangeastatus(from.hydrangeastatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageSetHydrangeaStatusNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageSetHydrangeaStatusNotify::CopyFrom(const CMessageSetHydrangeaStatusNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageSetHydrangeaStatusNotify::Swap(CMessageSetHydrangeaStatusNotify* other) {
  if (other != this) {
    std::swap(roleentityid_, other->roleentityid_);
    std::swap(hydrangeastatus_, other->hydrangeastatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageSetHydrangeaStatusNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageSetHydrangeaStatusNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageSetHydrangeaStatusNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageSetHydrangeaStatusNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMessageStartPreliminaryNotify::CMessageStartPreliminaryNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageStartPreliminaryNotify::InitAsDefaultInstance() {}

CMessageStartPreliminaryNotify::CMessageStartPreliminaryNotify(const CMessageStartPreliminaryNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageStartPreliminaryNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageStartPreliminaryNotify::~CMessageStartPreliminaryNotify() {
  SharedDtor();
}

void CMessageStartPreliminaryNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageStartPreliminaryNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartPreliminaryNotify_descriptor_;
}

const CMessageStartPreliminaryNotify& CMessageStartPreliminaryNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageStartPreliminaryNotify* CMessageStartPreliminaryNotify::default_instance_ = NULL;

CMessageStartPreliminaryNotify* CMessageStartPreliminaryNotify::New() const {
  return new CMessageStartPreliminaryNotify;
}

void CMessageStartPreliminaryNotify::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageStartPreliminaryNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMessageStartPreliminaryNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageStartPreliminaryNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageStartPreliminaryNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageStartPreliminaryNotify::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageStartPreliminaryNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageStartPreliminaryNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageStartPreliminaryNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageStartPreliminaryNotify::MergeFrom(const CMessageStartPreliminaryNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageStartPreliminaryNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartPreliminaryNotify::CopyFrom(const CMessageStartPreliminaryNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartPreliminaryNotify::Swap(CMessageStartPreliminaryNotify* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageStartPreliminaryNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageStartPreliminaryNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageStartPreliminaryNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartPreliminaryNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePreliminaryQuestionNotify::kQuestionIDFieldNumber;
const int CMessagePreliminaryQuestionNotify::kQuestionIndexFieldNumber;
#endif  // !_MSC_VER

CMessagePreliminaryQuestionNotify::CMessagePreliminaryQuestionNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePreliminaryQuestionNotify::InitAsDefaultInstance() {}

CMessagePreliminaryQuestionNotify::CMessagePreliminaryQuestionNotify(const CMessagePreliminaryQuestionNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePreliminaryQuestionNotify::SharedCtor() {
  _cached_size_ = 0;
  questionid_ = 0u;
  questionindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePreliminaryQuestionNotify::~CMessagePreliminaryQuestionNotify() {
  SharedDtor();
}

void CMessagePreliminaryQuestionNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePreliminaryQuestionNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePreliminaryQuestionNotify_descriptor_;
}

const CMessagePreliminaryQuestionNotify& CMessagePreliminaryQuestionNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessagePreliminaryQuestionNotify* CMessagePreliminaryQuestionNotify::default_instance_ = NULL;

CMessagePreliminaryQuestionNotify* CMessagePreliminaryQuestionNotify::New() const {
  return new CMessagePreliminaryQuestionNotify;
}

void CMessagePreliminaryQuestionNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    questionid_ = 0u;
    questionindex_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePreliminaryQuestionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 QuestionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_QuestionIndex;
        break;
      }
      
      // optional uint32 QuestionIndex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionIndex:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionindex_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePreliminaryQuestionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePreliminaryQuestionNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 QuestionID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionid(), output);
  }
  
  // optional uint32 QuestionIndex = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->questionindex(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePreliminaryQuestionNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 QuestionID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionid(), target);
  }
  
  // optional uint32 QuestionIndex = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->questionindex(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePreliminaryQuestionNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 QuestionID = 1;
    if (has_questionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionid());
    }
    
    // optional uint32 QuestionIndex = 2;
    if (has_questionindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionindex());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePreliminaryQuestionNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePreliminaryQuestionNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePreliminaryQuestionNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePreliminaryQuestionNotify::MergeFrom(const CMessagePreliminaryQuestionNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_questionid(from.questionid());
    }
    if (from._has_bit(1)) {
      set_questionindex(from.questionindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePreliminaryQuestionNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePreliminaryQuestionNotify::CopyFrom(const CMessagePreliminaryQuestionNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePreliminaryQuestionNotify::Swap(CMessagePreliminaryQuestionNotify* other) {
  if (other != this) {
    std::swap(questionid_, other->questionid_);
    std::swap(questionindex_, other->questionindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePreliminaryQuestionNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePreliminaryQuestionNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePreliminaryQuestionNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePreliminaryQuestionNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePreliminaryAnswerNotify::kQuestionIDFieldNumber;
const int CMessagePreliminaryAnswerNotify::kQuestionAnswerFieldNumber;
const int CMessagePreliminaryAnswerNotify::kPlayerInListFieldNumber;
const int CMessagePreliminaryAnswerNotify::kExtraScoreFieldNumber;
const int CMessagePreliminaryAnswerNotify::kQuestionIndexFieldNumber;
#endif  // !_MSC_VER

CMessagePreliminaryAnswerNotify::CMessagePreliminaryAnswerNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePreliminaryAnswerNotify::InitAsDefaultInstance() {}

CMessagePreliminaryAnswerNotify::CMessagePreliminaryAnswerNotify(const CMessagePreliminaryAnswerNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePreliminaryAnswerNotify::SharedCtor() {
  _cached_size_ = 0;
  questionid_ = 0u;
  questionanswer_ = 0u;
  questionindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePreliminaryAnswerNotify::~CMessagePreliminaryAnswerNotify() {
  SharedDtor();
}

void CMessagePreliminaryAnswerNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePreliminaryAnswerNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePreliminaryAnswerNotify_descriptor_;
}

const CMessagePreliminaryAnswerNotify& CMessagePreliminaryAnswerNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessagePreliminaryAnswerNotify* CMessagePreliminaryAnswerNotify::default_instance_ = NULL;

CMessagePreliminaryAnswerNotify* CMessagePreliminaryAnswerNotify::New() const {
  return new CMessagePreliminaryAnswerNotify;
}

void CMessagePreliminaryAnswerNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    questionid_ = 0u;
    questionanswer_ = 0u;
    questionindex_ = 0u;
  }
  playerinlist_.Clear();
  extrascore_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePreliminaryAnswerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 QuestionID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_QuestionAnswer;
        break;
      }
      
      // optional uint32 QuestionAnswer = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionAnswer:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionanswer_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_PlayerInList;
        break;
      }
      
      // repeated string PlayerInList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_PlayerInList:
        DO_(::google::protobuf::internal::WireFormat::ReadString(
             input, add_playerinlist()));
        if (input->ExpectTag(26)) goto parse_PlayerInList;
        if (input->ExpectTag(32)) goto parse_ExtraScore;
        break;
      }
      
      // repeated uint32 ExtraScore = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ExtraScore:
        ::google::protobuf::uint32 value;
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(input, &value));
        add_extrascore(value);
        if (input->ExpectTag(32)) goto parse_ExtraScore;
        if (input->ExpectTag(40)) goto parse_QuestionIndex;
        break;
      }
      
      // optional uint32 QuestionIndex = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_QuestionIndex:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionindex_));
        _set_bit(4);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePreliminaryAnswerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePreliminaryAnswerNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 QuestionID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionid(), output);
  }
  
  // optional uint32 QuestionAnswer = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->questionanswer(), output);
  }
  
  // repeated string PlayerInList = 3;
  for (int i = 0; i < this->playerinlist_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteString(3, this->playerinlist(i), output);
  }
  
  // repeated uint32 ExtraScore = 4;
  for (int i = 0; i < this->extrascore_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->extrascore(i), output);
  }
  
  // optional uint32 QuestionIndex = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->questionindex(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePreliminaryAnswerNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 QuestionID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionid(), target);
  }
  
  // optional uint32 QuestionAnswer = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->questionanswer(), target);
  }
  
  // repeated string PlayerInList = 3;
  for (int i = 0; i < this->playerinlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(3, this->playerinlist(i), target);
  }
  
  // repeated uint32 ExtraScore = 4;
  for (int i = 0; i < this->extrascore_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->extrascore(i), target);
  }
  
  // optional uint32 QuestionIndex = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->questionindex(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePreliminaryAnswerNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 QuestionID = 1;
    if (has_questionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionid());
    }
    
    // optional uint32 QuestionAnswer = 2;
    if (has_questionanswer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionanswer());
    }
    
    // optional uint32 QuestionIndex = 5;
    if (has_questionindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionindex());
    }
    
  }
  // repeated string PlayerInList = 3;
  total_size += 1 * this->playerinlist_size();
  for (int i = 0; i < this->playerinlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormat::StringSize(
      this->playerinlist(i));
  }
  
  // repeated uint32 ExtraScore = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->extrascore_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormat::UInt32Size(
        this->extrascore(i));
    }
    total_size += 1 * this->extrascore_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePreliminaryAnswerNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePreliminaryAnswerNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePreliminaryAnswerNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePreliminaryAnswerNotify::MergeFrom(const CMessagePreliminaryAnswerNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  playerinlist_.MergeFrom(from.playerinlist_);
  extrascore_.MergeFrom(from.extrascore_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_questionid(from.questionid());
    }
    if (from._has_bit(1)) {
      set_questionanswer(from.questionanswer());
    }
    if (from._has_bit(4)) {
      set_questionindex(from.questionindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePreliminaryAnswerNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePreliminaryAnswerNotify::CopyFrom(const CMessagePreliminaryAnswerNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePreliminaryAnswerNotify::Swap(CMessagePreliminaryAnswerNotify* other) {
  if (other != this) {
    std::swap(questionid_, other->questionid_);
    std::swap(questionanswer_, other->questionanswer_);
    playerinlist_.Swap(&other->playerinlist_);
    extrascore_.Swap(&other->extrascore_);
    std::swap(questionindex_, other->questionindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePreliminaryAnswerNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePreliminaryAnswerNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePreliminaryAnswerNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePreliminaryAnswerNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMessageEndPreliminaryNotify::CMessageEndPreliminaryNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageEndPreliminaryNotify::InitAsDefaultInstance() {}

CMessageEndPreliminaryNotify::CMessageEndPreliminaryNotify(const CMessageEndPreliminaryNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageEndPreliminaryNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageEndPreliminaryNotify::~CMessageEndPreliminaryNotify() {
  SharedDtor();
}

void CMessageEndPreliminaryNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageEndPreliminaryNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageEndPreliminaryNotify_descriptor_;
}

const CMessageEndPreliminaryNotify& CMessageEndPreliminaryNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageEndPreliminaryNotify* CMessageEndPreliminaryNotify::default_instance_ = NULL;

CMessageEndPreliminaryNotify* CMessageEndPreliminaryNotify::New() const {
  return new CMessageEndPreliminaryNotify;
}

void CMessageEndPreliminaryNotify::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageEndPreliminaryNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMessageEndPreliminaryNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageEndPreliminaryNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageEndPreliminaryNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageEndPreliminaryNotify::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageEndPreliminaryNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageEndPreliminaryNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageEndPreliminaryNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageEndPreliminaryNotify::MergeFrom(const CMessageEndPreliminaryNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageEndPreliminaryNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEndPreliminaryNotify::CopyFrom(const CMessageEndPreliminaryNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEndPreliminaryNotify::Swap(CMessageEndPreliminaryNotify* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageEndPreliminaryNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageEndPreliminaryNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageEndPreliminaryNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageEndPreliminaryNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageSubmitPreliminaryAnswerRequest::kQuestionAnswerFieldNumber;
#endif  // !_MSC_VER

CMessageSubmitPreliminaryAnswerRequest::CMessageSubmitPreliminaryAnswerRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageSubmitPreliminaryAnswerRequest::InitAsDefaultInstance() {}

CMessageSubmitPreliminaryAnswerRequest::CMessageSubmitPreliminaryAnswerRequest(const CMessageSubmitPreliminaryAnswerRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageSubmitPreliminaryAnswerRequest::SharedCtor() {
  _cached_size_ = 0;
  questionanswer_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageSubmitPreliminaryAnswerRequest::~CMessageSubmitPreliminaryAnswerRequest() {
  SharedDtor();
}

void CMessageSubmitPreliminaryAnswerRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageSubmitPreliminaryAnswerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageSubmitPreliminaryAnswerRequest_descriptor_;
}

const CMessageSubmitPreliminaryAnswerRequest& CMessageSubmitPreliminaryAnswerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageSubmitPreliminaryAnswerRequest* CMessageSubmitPreliminaryAnswerRequest::default_instance_ = NULL;

CMessageSubmitPreliminaryAnswerRequest* CMessageSubmitPreliminaryAnswerRequest::New() const {
  return new CMessageSubmitPreliminaryAnswerRequest;
}

void CMessageSubmitPreliminaryAnswerRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    questionanswer_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageSubmitPreliminaryAnswerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 QuestionAnswer = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionanswer_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageSubmitPreliminaryAnswerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageSubmitPreliminaryAnswerRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 QuestionAnswer = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionanswer(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageSubmitPreliminaryAnswerRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 QuestionAnswer = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionanswer(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageSubmitPreliminaryAnswerRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 QuestionAnswer = 1;
    if (has_questionanswer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionanswer());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageSubmitPreliminaryAnswerRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageSubmitPreliminaryAnswerRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageSubmitPreliminaryAnswerRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageSubmitPreliminaryAnswerRequest::MergeFrom(const CMessageSubmitPreliminaryAnswerRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_questionanswer(from.questionanswer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageSubmitPreliminaryAnswerRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageSubmitPreliminaryAnswerRequest::CopyFrom(const CMessageSubmitPreliminaryAnswerRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageSubmitPreliminaryAnswerRequest::Swap(CMessageSubmitPreliminaryAnswerRequest* other) {
  if (other != this) {
    std::swap(questionanswer_, other->questionanswer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageSubmitPreliminaryAnswerRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageSubmitPreliminaryAnswerRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageSubmitPreliminaryAnswerRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageSubmitPreliminaryAnswerRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageSubmitPreliminaryAnswerResponse::kErrcodeFieldNumber;
#endif  // !_MSC_VER

CMessageSubmitPreliminaryAnswerResponse::CMessageSubmitPreliminaryAnswerResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageSubmitPreliminaryAnswerResponse::InitAsDefaultInstance() {}

CMessageSubmitPreliminaryAnswerResponse::CMessageSubmitPreliminaryAnswerResponse(const CMessageSubmitPreliminaryAnswerResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageSubmitPreliminaryAnswerResponse::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageSubmitPreliminaryAnswerResponse::~CMessageSubmitPreliminaryAnswerResponse() {
  SharedDtor();
}

void CMessageSubmitPreliminaryAnswerResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageSubmitPreliminaryAnswerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageSubmitPreliminaryAnswerResponse_descriptor_;
}

const CMessageSubmitPreliminaryAnswerResponse& CMessageSubmitPreliminaryAnswerResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageSubmitPreliminaryAnswerResponse* CMessageSubmitPreliminaryAnswerResponse::default_instance_ = NULL;

CMessageSubmitPreliminaryAnswerResponse* CMessageSubmitPreliminaryAnswerResponse::New() const {
  return new CMessageSubmitPreliminaryAnswerResponse;
}

void CMessageSubmitPreliminaryAnswerResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageSubmitPreliminaryAnswerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &errcode_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageSubmitPreliminaryAnswerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageSubmitPreliminaryAnswerResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->errcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageSubmitPreliminaryAnswerResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->errcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageSubmitPreliminaryAnswerResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->errcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageSubmitPreliminaryAnswerResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageSubmitPreliminaryAnswerResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageSubmitPreliminaryAnswerResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageSubmitPreliminaryAnswerResponse::MergeFrom(const CMessageSubmitPreliminaryAnswerResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageSubmitPreliminaryAnswerResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageSubmitPreliminaryAnswerResponse::CopyFrom(const CMessageSubmitPreliminaryAnswerResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageSubmitPreliminaryAnswerResponse::Swap(CMessageSubmitPreliminaryAnswerResponse* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageSubmitPreliminaryAnswerResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageSubmitPreliminaryAnswerResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageSubmitPreliminaryAnswerResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageSubmitPreliminaryAnswerResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageViewPreliminaryListRequest::kNpcIDFieldNumber;
const int CMessageViewPreliminaryListRequest::kTypeFieldNumber;
#endif  // !_MSC_VER

CMessageViewPreliminaryListRequest::CMessageViewPreliminaryListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageViewPreliminaryListRequest::InitAsDefaultInstance() {}

CMessageViewPreliminaryListRequest::CMessageViewPreliminaryListRequest(const CMessageViewPreliminaryListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageViewPreliminaryListRequest::SharedCtor() {
  _cached_size_ = 0;
  npcid_ = 0u;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageViewPreliminaryListRequest::~CMessageViewPreliminaryListRequest() {
  SharedDtor();
}

void CMessageViewPreliminaryListRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageViewPreliminaryListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageViewPreliminaryListRequest_descriptor_;
}

const CMessageViewPreliminaryListRequest& CMessageViewPreliminaryListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageViewPreliminaryListRequest* CMessageViewPreliminaryListRequest::default_instance_ = NULL;

CMessageViewPreliminaryListRequest* CMessageViewPreliminaryListRequest::New() const {
  return new CMessageViewPreliminaryListRequest;
}

void CMessageViewPreliminaryListRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    npcid_ = 0u;
    type_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageViewPreliminaryListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 NpcID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &npcid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_Type;
        break;
      }
      
      // optional uint32 Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Type:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &type_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageViewPreliminaryListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageViewPreliminaryListRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 NpcID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->npcid(), output);
  }
  
  // optional uint32 Type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageViewPreliminaryListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 NpcID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->npcid(), target);
  }
  
  // optional uint32 Type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageViewPreliminaryListRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 NpcID = 1;
    if (has_npcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->npcid());
    }
    
    // optional uint32 Type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageViewPreliminaryListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageViewPreliminaryListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageViewPreliminaryListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageViewPreliminaryListRequest::MergeFrom(const CMessageViewPreliminaryListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_npcid(from.npcid());
    }
    if (from._has_bit(1)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageViewPreliminaryListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageViewPreliminaryListRequest::CopyFrom(const CMessageViewPreliminaryListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageViewPreliminaryListRequest::Swap(CMessageViewPreliminaryListRequest* other) {
  if (other != this) {
    std::swap(npcid_, other->npcid_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageViewPreliminaryListRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageViewPreliminaryListRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageViewPreliminaryListRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageViewPreliminaryListRequest_reflection_;
}

// ===================================================================

const ::std::string PBPreliminaryInfo::_default_rolename_;
#ifndef _MSC_VER
const int PBPreliminaryInfo::kRoleNameFieldNumber;
const int PBPreliminaryInfo::kScoreFieldNumber;
const int PBPreliminaryInfo::kRightNumFieldNumber;
const int PBPreliminaryInfo::kTotalNumFieldNumber;
#endif  // !_MSC_VER

PBPreliminaryInfo::PBPreliminaryInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBPreliminaryInfo::InitAsDefaultInstance() {}

PBPreliminaryInfo::PBPreliminaryInfo(const PBPreliminaryInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBPreliminaryInfo::SharedCtor() {
  _cached_size_ = 0;
  rolename_ = const_cast< ::std::string*>(&_default_rolename_);
  score_ = 0u;
  rightnum_ = 0u;
  totalnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBPreliminaryInfo::~PBPreliminaryInfo() {
  SharedDtor();
}

void PBPreliminaryInfo::SharedDtor() {
  if (rolename_ != &_default_rolename_) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBPreliminaryInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPreliminaryInfo_descriptor_;
}

const PBPreliminaryInfo& PBPreliminaryInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

PBPreliminaryInfo* PBPreliminaryInfo::default_instance_ = NULL;

PBPreliminaryInfo* PBPreliminaryInfo::New() const {
  return new PBPreliminaryInfo;
}

void PBPreliminaryInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (rolename_ != &_default_rolename_) {
        rolename_->clear();
      }
    }
    score_ = 0u;
    rightnum_ = 0u;
    totalnum_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBPreliminaryInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional string RoleName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_rolename()));
        if (input->ExpectTag(16)) goto parse_Score;
        break;
      }
      
      // optional uint32 Score = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Score:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &score_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_RightNum;
        break;
      }
      
      // optional uint32 RightNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_RightNum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &rightnum_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_TotalNum;
        break;
      }
      
      // optional uint32 TotalNum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_TotalNum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &totalnum_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBPreliminaryInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBPreliminaryInfo::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string RoleName = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteString(1, this->rolename(), output);
  }
  
  // optional uint32 Score = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->score(), output);
  }
  
  // optional uint32 RightNum = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->rightnum(), output);
  }
  
  // optional uint32 TotalNum = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->totalnum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBPreliminaryInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RoleName = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(1, this->rolename(), target);
  }
  
  // optional uint32 Score = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->score(), target);
  }
  
  // optional uint32 RightNum = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->rightnum(), target);
  }
  
  // optional uint32 TotalNum = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->totalnum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBPreliminaryInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RoleName = 1;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->rolename());
    }
    
    // optional uint32 Score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->score());
    }
    
    // optional uint32 RightNum = 3;
    if (has_rightnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->rightnum());
    }
    
    // optional uint32 TotalNum = 4;
    if (has_totalnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->totalnum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBPreliminaryInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBPreliminaryInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBPreliminaryInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBPreliminaryInfo::MergeFrom(const PBPreliminaryInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_rolename(from.rolename());
    }
    if (from._has_bit(1)) {
      set_score(from.score());
    }
    if (from._has_bit(2)) {
      set_rightnum(from.rightnum());
    }
    if (from._has_bit(3)) {
      set_totalnum(from.totalnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBPreliminaryInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPreliminaryInfo::CopyFrom(const PBPreliminaryInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPreliminaryInfo::Swap(PBPreliminaryInfo* other) {
  if (other != this) {
    std::swap(rolename_, other->rolename_);
    std::swap(score_, other->score_);
    std::swap(rightnum_, other->rightnum_);
    std::swap(totalnum_, other->totalnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBPreliminaryInfo::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBPreliminaryInfo::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBPreliminaryInfo::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBPreliminaryInfo_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageViewPreliminaryResponse::kPremilinaryInfoListFieldNumber;
const int CMessageViewPreliminaryResponse::kTypeFieldNumber;
#endif  // !_MSC_VER

CMessageViewPreliminaryResponse::CMessageViewPreliminaryResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageViewPreliminaryResponse::InitAsDefaultInstance() {}

CMessageViewPreliminaryResponse::CMessageViewPreliminaryResponse(const CMessageViewPreliminaryResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageViewPreliminaryResponse::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageViewPreliminaryResponse::~CMessageViewPreliminaryResponse() {
  SharedDtor();
}

void CMessageViewPreliminaryResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageViewPreliminaryResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageViewPreliminaryResponse_descriptor_;
}

const CMessageViewPreliminaryResponse& CMessageViewPreliminaryResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageViewPreliminaryResponse* CMessageViewPreliminaryResponse::default_instance_ = NULL;

CMessageViewPreliminaryResponse* CMessageViewPreliminaryResponse::New() const {
  return new CMessageViewPreliminaryResponse;
}

void CMessageViewPreliminaryResponse::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    type_ = 0u;
  }
  premilinaryinfolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageViewPreliminaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // repeated .PBPreliminaryInfo PremilinaryInfoList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_PremilinaryInfoList:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_premilinaryinfolist()));
        if (input->ExpectTag(10)) goto parse_PremilinaryInfoList;
        if (input->ExpectTag(16)) goto parse_Type;
        break;
      }
      
      // optional uint32 Type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Type:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &type_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageViewPreliminaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageViewPreliminaryResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .PBPreliminaryInfo PremilinaryInfoList = 1;
  for (int i = 0; i < this->premilinaryinfolist_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->premilinaryinfolist(i), output);
  }
  
  // optional uint32 Type = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageViewPreliminaryResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBPreliminaryInfo PremilinaryInfoList = 1;
  for (int i = 0; i < this->premilinaryinfolist_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->premilinaryinfolist(i), target);
  }
  
  // optional uint32 Type = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageViewPreliminaryResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 Type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->type());
    }
    
  }
  // repeated .PBPreliminaryInfo PremilinaryInfoList = 1;
  total_size += 1 * this->premilinaryinfolist_size();
  for (int i = 0; i < this->premilinaryinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->premilinaryinfolist(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageViewPreliminaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageViewPreliminaryResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageViewPreliminaryResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageViewPreliminaryResponse::MergeFrom(const CMessageViewPreliminaryResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  premilinaryinfolist_.MergeFrom(from.premilinaryinfolist_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from._has_bit(1)) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageViewPreliminaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageViewPreliminaryResponse::CopyFrom(const CMessageViewPreliminaryResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageViewPreliminaryResponse::Swap(CMessageViewPreliminaryResponse* other) {
  if (other != this) {
    premilinaryinfolist_.Swap(&other->premilinaryinfolist_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageViewPreliminaryResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageViewPreliminaryResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageViewPreliminaryResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageViewPreliminaryResponse_reflection_;
}

// ===================================================================

const ::std::string CMessageQuestionVerifyNotify::_default_question_;
const ::std::string CMessageQuestionVerifyNotify::_default_optiona_;
const ::std::string CMessageQuestionVerifyNotify::_default_optionb_;
const ::std::string CMessageQuestionVerifyNotify::_default_optionc_;
const ::std::string CMessageQuestionVerifyNotify::_default_optiond_;
#ifndef _MSC_VER
const int CMessageQuestionVerifyNotify::kQuestionIdFieldNumber;
const int CMessageQuestionVerifyNotify::kQuestionFieldNumber;
const int CMessageQuestionVerifyNotify::kOptionAFieldNumber;
const int CMessageQuestionVerifyNotify::kOptionBFieldNumber;
const int CMessageQuestionVerifyNotify::kOptionCFieldNumber;
const int CMessageQuestionVerifyNotify::kOptionDFieldNumber;
#endif  // !_MSC_VER

CMessageQuestionVerifyNotify::CMessageQuestionVerifyNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageQuestionVerifyNotify::InitAsDefaultInstance() {}

CMessageQuestionVerifyNotify::CMessageQuestionVerifyNotify(const CMessageQuestionVerifyNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageQuestionVerifyNotify::SharedCtor() {
  _cached_size_ = 0;
  questionid_ = 0u;
  question_ = const_cast< ::std::string*>(&_default_question_);
  optiona_ = const_cast< ::std::string*>(&_default_optiona_);
  optionb_ = const_cast< ::std::string*>(&_default_optionb_);
  optionc_ = const_cast< ::std::string*>(&_default_optionc_);
  optiond_ = const_cast< ::std::string*>(&_default_optiond_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageQuestionVerifyNotify::~CMessageQuestionVerifyNotify() {
  SharedDtor();
}

void CMessageQuestionVerifyNotify::SharedDtor() {
  if (question_ != &_default_question_) {
    delete question_;
  }
  if (optiona_ != &_default_optiona_) {
    delete optiona_;
  }
  if (optionb_ != &_default_optionb_) {
    delete optionb_;
  }
  if (optionc_ != &_default_optionc_) {
    delete optionc_;
  }
  if (optiond_ != &_default_optiond_) {
    delete optiond_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageQuestionVerifyNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageQuestionVerifyNotify_descriptor_;
}

const CMessageQuestionVerifyNotify& CMessageQuestionVerifyNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageQuestionVerifyNotify* CMessageQuestionVerifyNotify::default_instance_ = NULL;

CMessageQuestionVerifyNotify* CMessageQuestionVerifyNotify::New() const {
  return new CMessageQuestionVerifyNotify;
}

void CMessageQuestionVerifyNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    questionid_ = 0u;
    if (_has_bit(1)) {
      if (question_ != &_default_question_) {
        question_->clear();
      }
    }
    if (_has_bit(2)) {
      if (optiona_ != &_default_optiona_) {
        optiona_->clear();
      }
    }
    if (_has_bit(3)) {
      if (optionb_ != &_default_optionb_) {
        optionb_->clear();
      }
    }
    if (_has_bit(4)) {
      if (optionc_ != &_default_optionc_) {
        optionc_->clear();
      }
    }
    if (_has_bit(5)) {
      if (optiond_ != &_default_optiond_) {
        optiond_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageQuestionVerifyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 QuestionId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_Question;
        break;
      }
      
      // optional string Question = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Question:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_question()));
        if (input->ExpectTag(26)) goto parse_OptionA;
        break;
      }
      
      // optional bytes OptionA = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_OptionA:
        DO_(::google::protobuf::internal::WireFormat::ReadBytes(input, mutable_optiona()));
        if (input->ExpectTag(34)) goto parse_OptionB;
        break;
      }
      
      // optional bytes OptionB = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_OptionB:
        DO_(::google::protobuf::internal::WireFormat::ReadBytes(input, mutable_optionb()));
        if (input->ExpectTag(42)) goto parse_OptionC;
        break;
      }
      
      // optional bytes OptionC = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_OptionC:
        DO_(::google::protobuf::internal::WireFormat::ReadBytes(input, mutable_optionc()));
        if (input->ExpectTag(50)) goto parse_OptionD;
        break;
      }
      
      // optional bytes OptionD = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_OptionD:
        DO_(::google::protobuf::internal::WireFormat::ReadBytes(input, mutable_optiond()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageQuestionVerifyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageQuestionVerifyNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 QuestionId = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionid(), output);
  }
  
  // optional string Question = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteString(2, this->question(), output);
  }
  
  // optional bytes OptionA = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteBytes(3, this->optiona(), output);
  }
  
  // optional bytes OptionB = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteBytes(4, this->optionb(), output);
  }
  
  // optional bytes OptionC = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteBytes(5, this->optionc(), output);
  }
  
  // optional bytes OptionD = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteBytes(6, this->optiond(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageQuestionVerifyNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 QuestionId = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionid(), target);
  }
  
  // optional string Question = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(2, this->question(), target);
  }
  
  // optional bytes OptionA = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteBytesToArray(3, this->optiona(), target);
  }
  
  // optional bytes OptionB = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteBytesToArray(4, this->optionb(), target);
  }
  
  // optional bytes OptionC = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteBytesToArray(5, this->optionc(), target);
  }
  
  // optional bytes OptionD = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteBytesToArray(6, this->optiond(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageQuestionVerifyNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 QuestionId = 1;
    if (has_questionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionid());
    }
    
    // optional string Question = 2;
    if (has_question()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->question());
    }
    
    // optional bytes OptionA = 3;
    if (has_optiona()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::BytesSize(this->optiona());
    }
    
    // optional bytes OptionB = 4;
    if (has_optionb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::BytesSize(this->optionb());
    }
    
    // optional bytes OptionC = 5;
    if (has_optionc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::BytesSize(this->optionc());
    }
    
    // optional bytes OptionD = 6;
    if (has_optiond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::BytesSize(this->optiond());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageQuestionVerifyNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageQuestionVerifyNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageQuestionVerifyNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageQuestionVerifyNotify::MergeFrom(const CMessageQuestionVerifyNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_questionid(from.questionid());
    }
    if (from._has_bit(1)) {
      set_question(from.question());
    }
    if (from._has_bit(2)) {
      set_optiona(from.optiona());
    }
    if (from._has_bit(3)) {
      set_optionb(from.optionb());
    }
    if (from._has_bit(4)) {
      set_optionc(from.optionc());
    }
    if (from._has_bit(5)) {
      set_optiond(from.optiond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageQuestionVerifyNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageQuestionVerifyNotify::CopyFrom(const CMessageQuestionVerifyNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageQuestionVerifyNotify::Swap(CMessageQuestionVerifyNotify* other) {
  if (other != this) {
    std::swap(questionid_, other->questionid_);
    std::swap(question_, other->question_);
    std::swap(optiona_, other->optiona_);
    std::swap(optionb_, other->optionb_);
    std::swap(optionc_, other->optionc_);
    std::swap(optiond_, other->optiond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageQuestionVerifyNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageQuestionVerifyNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageQuestionVerifyNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageQuestionVerifyNotify_reflection_;
}

// ===================================================================

const ::std::string CMessageAnswerVerifyRequest::_default_answer_;
#ifndef _MSC_VER
const int CMessageAnswerVerifyRequest::kQuestionIdFieldNumber;
const int CMessageAnswerVerifyRequest::kAnswerFieldNumber;
#endif  // !_MSC_VER

CMessageAnswerVerifyRequest::CMessageAnswerVerifyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageAnswerVerifyRequest::InitAsDefaultInstance() {}

CMessageAnswerVerifyRequest::CMessageAnswerVerifyRequest(const CMessageAnswerVerifyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageAnswerVerifyRequest::SharedCtor() {
  _cached_size_ = 0;
  questionid_ = 0u;
  answer_ = const_cast< ::std::string*>(&_default_answer_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageAnswerVerifyRequest::~CMessageAnswerVerifyRequest() {
  SharedDtor();
}

void CMessageAnswerVerifyRequest::SharedDtor() {
  if (answer_ != &_default_answer_) {
    delete answer_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageAnswerVerifyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageAnswerVerifyRequest_descriptor_;
}

const CMessageAnswerVerifyRequest& CMessageAnswerVerifyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageAnswerVerifyRequest* CMessageAnswerVerifyRequest::default_instance_ = NULL;

CMessageAnswerVerifyRequest* CMessageAnswerVerifyRequest::New() const {
  return new CMessageAnswerVerifyRequest;
}

void CMessageAnswerVerifyRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    questionid_ = 0u;
    if (_has_bit(1)) {
      if (answer_ != &_default_answer_) {
        answer_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageAnswerVerifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 QuestionId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &questionid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_Answer;
        break;
      }
      
      // optional bytes Answer = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Answer:
        DO_(::google::protobuf::internal::WireFormat::ReadBytes(input, mutable_answer()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageAnswerVerifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageAnswerVerifyRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 QuestionId = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->questionid(), output);
  }
  
  // optional bytes Answer = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteBytes(2, this->answer(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageAnswerVerifyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 QuestionId = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->questionid(), target);
  }
  
  // optional bytes Answer = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteBytesToArray(2, this->answer(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageAnswerVerifyRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 QuestionId = 1;
    if (has_questionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->questionid());
    }
    
    // optional bytes Answer = 2;
    if (has_answer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::BytesSize(this->answer());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageAnswerVerifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageAnswerVerifyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageAnswerVerifyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageAnswerVerifyRequest::MergeFrom(const CMessageAnswerVerifyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_questionid(from.questionid());
    }
    if (from._has_bit(1)) {
      set_answer(from.answer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageAnswerVerifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAnswerVerifyRequest::CopyFrom(const CMessageAnswerVerifyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAnswerVerifyRequest::Swap(CMessageAnswerVerifyRequest* other) {
  if (other != this) {
    std::swap(questionid_, other->questionid_);
    std::swap(answer_, other->answer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageAnswerVerifyRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageAnswerVerifyRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageAnswerVerifyRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageAnswerVerifyRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageAnswerVerifyResponse::kErrcodeFieldNumber;
#endif  // !_MSC_VER

CMessageAnswerVerifyResponse::CMessageAnswerVerifyResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageAnswerVerifyResponse::InitAsDefaultInstance() {}

CMessageAnswerVerifyResponse::CMessageAnswerVerifyResponse(const CMessageAnswerVerifyResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageAnswerVerifyResponse::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageAnswerVerifyResponse::~CMessageAnswerVerifyResponse() {
  SharedDtor();
}

void CMessageAnswerVerifyResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageAnswerVerifyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageAnswerVerifyResponse_descriptor_;
}

const CMessageAnswerVerifyResponse& CMessageAnswerVerifyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageAnswerVerifyResponse* CMessageAnswerVerifyResponse::default_instance_ = NULL;

CMessageAnswerVerifyResponse* CMessageAnswerVerifyResponse::New() const {
  return new CMessageAnswerVerifyResponse;
}

void CMessageAnswerVerifyResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageAnswerVerifyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &errcode_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageAnswerVerifyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageAnswerVerifyResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->errcode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageAnswerVerifyResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->errcode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageAnswerVerifyResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->errcode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageAnswerVerifyResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageAnswerVerifyResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageAnswerVerifyResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageAnswerVerifyResponse::MergeFrom(const CMessageAnswerVerifyResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_errcode(from.errcode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageAnswerVerifyResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAnswerVerifyResponse::CopyFrom(const CMessageAnswerVerifyResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageAnswerVerifyResponse::Swap(CMessageAnswerVerifyResponse* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageAnswerVerifyResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageAnswerVerifyResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageAnswerVerifyResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageAnswerVerifyResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageStartGiftTimerNotify::kSecsFieldNumber;
const int CMessageStartGiftTimerNotify::kGiftIdFieldNumber;
const int CMessageStartGiftTimerNotify::kGiftTypeFieldNumber;
#endif  // !_MSC_VER

CMessageStartGiftTimerNotify::CMessageStartGiftTimerNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageStartGiftTimerNotify::InitAsDefaultInstance() {}

CMessageStartGiftTimerNotify::CMessageStartGiftTimerNotify(const CMessageStartGiftTimerNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageStartGiftTimerNotify::SharedCtor() {
  _cached_size_ = 0;
  secs_ = 0u;
  giftid_ = 0u;
  gifttype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageStartGiftTimerNotify::~CMessageStartGiftTimerNotify() {
  SharedDtor();
}

void CMessageStartGiftTimerNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageStartGiftTimerNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartGiftTimerNotify_descriptor_;
}

const CMessageStartGiftTimerNotify& CMessageStartGiftTimerNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageStartGiftTimerNotify* CMessageStartGiftTimerNotify::default_instance_ = NULL;

CMessageStartGiftTimerNotify* CMessageStartGiftTimerNotify::New() const {
  return new CMessageStartGiftTimerNotify;
}

void CMessageStartGiftTimerNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    secs_ = 0u;
    giftid_ = 0u;
    gifttype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageStartGiftTimerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Secs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &secs_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_GiftId;
        break;
      }
      
      // optional uint32 GiftId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GiftId:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &giftid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_GiftType;
        break;
      }
      
      // optional uint32 GiftType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GiftType:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &gifttype_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageStartGiftTimerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageStartGiftTimerNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Secs = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->secs(), output);
  }
  
  // optional uint32 GiftId = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->giftid(), output);
  }
  
  // optional uint32 GiftType = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->gifttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageStartGiftTimerNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Secs = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->secs(), target);
  }
  
  // optional uint32 GiftId = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->giftid(), target);
  }
  
  // optional uint32 GiftType = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->gifttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageStartGiftTimerNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Secs = 1;
    if (has_secs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->secs());
    }
    
    // optional uint32 GiftId = 2;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->giftid());
    }
    
    // optional uint32 GiftType = 3;
    if (has_gifttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->gifttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageStartGiftTimerNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageStartGiftTimerNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageStartGiftTimerNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageStartGiftTimerNotify::MergeFrom(const CMessageStartGiftTimerNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_secs(from.secs());
    }
    if (from._has_bit(1)) {
      set_giftid(from.giftid());
    }
    if (from._has_bit(2)) {
      set_gifttype(from.gifttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageStartGiftTimerNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartGiftTimerNotify::CopyFrom(const CMessageStartGiftTimerNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartGiftTimerNotify::Swap(CMessageStartGiftTimerNotify* other) {
  if (other != this) {
    std::swap(secs_, other->secs_);
    std::swap(giftid_, other->giftid_);
    std::swap(gifttype_, other->gifttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageStartGiftTimerNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageStartGiftTimerNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageStartGiftTimerNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartGiftTimerNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGetOnlineGiftRequest::kGiftTypeFieldNumber;
#endif  // !_MSC_VER

CMessageGetOnlineGiftRequest::CMessageGetOnlineGiftRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGetOnlineGiftRequest::InitAsDefaultInstance() {}

CMessageGetOnlineGiftRequest::CMessageGetOnlineGiftRequest(const CMessageGetOnlineGiftRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGetOnlineGiftRequest::SharedCtor() {
  _cached_size_ = 0;
  gifttype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGetOnlineGiftRequest::~CMessageGetOnlineGiftRequest() {
  SharedDtor();
}

void CMessageGetOnlineGiftRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGetOnlineGiftRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetOnlineGiftRequest_descriptor_;
}

const CMessageGetOnlineGiftRequest& CMessageGetOnlineGiftRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGetOnlineGiftRequest* CMessageGetOnlineGiftRequest::default_instance_ = NULL;

CMessageGetOnlineGiftRequest* CMessageGetOnlineGiftRequest::New() const {
  return new CMessageGetOnlineGiftRequest;
}

void CMessageGetOnlineGiftRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gifttype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGetOnlineGiftRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 GiftType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &gifttype_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGetOnlineGiftRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGetOnlineGiftRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 GiftType = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->gifttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGetOnlineGiftRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 GiftType = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->gifttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGetOnlineGiftRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GiftType = 1;
    if (has_gifttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->gifttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGetOnlineGiftRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGetOnlineGiftRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGetOnlineGiftRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGetOnlineGiftRequest::MergeFrom(const CMessageGetOnlineGiftRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_gifttype(from.gifttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGetOnlineGiftRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetOnlineGiftRequest::CopyFrom(const CMessageGetOnlineGiftRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetOnlineGiftRequest::Swap(CMessageGetOnlineGiftRequest* other) {
  if (other != this) {
    std::swap(gifttype_, other->gifttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGetOnlineGiftRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGetOnlineGiftRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGetOnlineGiftRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetOnlineGiftRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGetOnlineGiftResponse::kRetCodeFieldNumber;
const int CMessageGetOnlineGiftResponse::kGiftTypeFieldNumber;
#endif  // !_MSC_VER

CMessageGetOnlineGiftResponse::CMessageGetOnlineGiftResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGetOnlineGiftResponse::InitAsDefaultInstance() {}

CMessageGetOnlineGiftResponse::CMessageGetOnlineGiftResponse(const CMessageGetOnlineGiftResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGetOnlineGiftResponse::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0u;
  gifttype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGetOnlineGiftResponse::~CMessageGetOnlineGiftResponse() {
  SharedDtor();
}

void CMessageGetOnlineGiftResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGetOnlineGiftResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetOnlineGiftResponse_descriptor_;
}

const CMessageGetOnlineGiftResponse& CMessageGetOnlineGiftResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGetOnlineGiftResponse* CMessageGetOnlineGiftResponse::default_instance_ = NULL;

CMessageGetOnlineGiftResponse* CMessageGetOnlineGiftResponse::New() const {
  return new CMessageGetOnlineGiftResponse;
}

void CMessageGetOnlineGiftResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    retcode_ = 0u;
    gifttype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGetOnlineGiftResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &retcode_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_GiftType;
        break;
      }
      
      // optional uint32 GiftType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GiftType:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &gifttype_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGetOnlineGiftResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGetOnlineGiftResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 RetCode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->retcode(), output);
  }
  
  // optional uint32 GiftType = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->gifttype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGetOnlineGiftResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 RetCode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->retcode(), target);
  }
  
  // optional uint32 GiftType = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->gifttype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGetOnlineGiftResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 RetCode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->retcode());
    }
    
    // optional uint32 GiftType = 2;
    if (has_gifttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->gifttype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGetOnlineGiftResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGetOnlineGiftResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGetOnlineGiftResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGetOnlineGiftResponse::MergeFrom(const CMessageGetOnlineGiftResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_retcode(from.retcode());
    }
    if (from._has_bit(1)) {
      set_gifttype(from.gifttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGetOnlineGiftResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetOnlineGiftResponse::CopyFrom(const CMessageGetOnlineGiftResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetOnlineGiftResponse::Swap(CMessageGetOnlineGiftResponse* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(gifttype_, other->gifttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGetOnlineGiftResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGetOnlineGiftResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGetOnlineGiftResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetOnlineGiftResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGetTreasureBowlInfoRequest::kItemIndexFieldNumber;
#endif  // !_MSC_VER

CMessageGetTreasureBowlInfoRequest::CMessageGetTreasureBowlInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGetTreasureBowlInfoRequest::InitAsDefaultInstance() {}

CMessageGetTreasureBowlInfoRequest::CMessageGetTreasureBowlInfoRequest(const CMessageGetTreasureBowlInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGetTreasureBowlInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  itemindex_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGetTreasureBowlInfoRequest::~CMessageGetTreasureBowlInfoRequest() {
  SharedDtor();
}

void CMessageGetTreasureBowlInfoRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGetTreasureBowlInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetTreasureBowlInfoRequest_descriptor_;
}

const CMessageGetTreasureBowlInfoRequest& CMessageGetTreasureBowlInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGetTreasureBowlInfoRequest* CMessageGetTreasureBowlInfoRequest::default_instance_ = NULL;

CMessageGetTreasureBowlInfoRequest* CMessageGetTreasureBowlInfoRequest::New() const {
  return new CMessageGetTreasureBowlInfoRequest;
}

void CMessageGetTreasureBowlInfoRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemindex_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGetTreasureBowlInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 ItemIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemindex_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGetTreasureBowlInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGetTreasureBowlInfoRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 ItemIndex = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->itemindex(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGetTreasureBowlInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 ItemIndex = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->itemindex(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGetTreasureBowlInfoRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemIndex = 1;
    if (has_itemindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemindex());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGetTreasureBowlInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGetTreasureBowlInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGetTreasureBowlInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGetTreasureBowlInfoRequest::MergeFrom(const CMessageGetTreasureBowlInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_itemindex(from.itemindex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGetTreasureBowlInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetTreasureBowlInfoRequest::CopyFrom(const CMessageGetTreasureBowlInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetTreasureBowlInfoRequest::Swap(CMessageGetTreasureBowlInfoRequest* other) {
  if (other != this) {
    std::swap(itemindex_, other->itemindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGetTreasureBowlInfoRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGetTreasureBowlInfoRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGetTreasureBowlInfoRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetTreasureBowlInfoRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGetTreasureBowlInfoResponse::kErrcodeFieldNumber;
const int CMessageGetTreasureBowlInfoResponse::kItemUsedTimesFieldNumber;
const int CMessageGetTreasureBowlInfoResponse::kItemTotalTimesFieldNumber;
const int CMessageGetTreasureBowlInfoResponse::kAllUsedTimesFieldNumber;
const int CMessageGetTreasureBowlInfoResponse::kAllTotalTimesFieldNumber;
const int CMessageGetTreasureBowlInfoResponse::kTaxMoneyFieldNumber;
const int CMessageGetTreasureBowlInfoResponse::kIndexFieldNumber;
#endif  // !_MSC_VER

CMessageGetTreasureBowlInfoResponse::CMessageGetTreasureBowlInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGetTreasureBowlInfoResponse::InitAsDefaultInstance() {}

CMessageGetTreasureBowlInfoResponse::CMessageGetTreasureBowlInfoResponse(const CMessageGetTreasureBowlInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGetTreasureBowlInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  itemusedtimes_ = 0u;
  itemtotaltimes_ = 0u;
  allusedtimes_ = 0u;
  alltotaltimes_ = 0u;
  taxmoney_ = 0u;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGetTreasureBowlInfoResponse::~CMessageGetTreasureBowlInfoResponse() {
  SharedDtor();
}

void CMessageGetTreasureBowlInfoResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGetTreasureBowlInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetTreasureBowlInfoResponse_descriptor_;
}

const CMessageGetTreasureBowlInfoResponse& CMessageGetTreasureBowlInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageGetTreasureBowlInfoResponse* CMessageGetTreasureBowlInfoResponse::default_instance_ = NULL;

CMessageGetTreasureBowlInfoResponse* CMessageGetTreasureBowlInfoResponse::New() const {
  return new CMessageGetTreasureBowlInfoResponse;
}

void CMessageGetTreasureBowlInfoResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
    itemusedtimes_ = 0u;
    itemtotaltimes_ = 0u;
    allusedtimes_ = 0u;
    alltotaltimes_ = 0u;
    taxmoney_ = 0u;
    index_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGetTreasureBowlInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &errcode_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_ItemUsedTimes;
        break;
      }
      
      // optional uint32 ItemUsedTimes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemUsedTimes:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemusedtimes_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_ItemTotalTimes;
        break;
      }
      
      // optional uint32 ItemTotalTimes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemTotalTimes:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemtotaltimes_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_AllUsedTimes;
        break;
      }
      
      // optional uint32 AllUsedTimes = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_AllUsedTimes:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &allusedtimes_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_AllTotalTimes;
        break;
      }
      
      // optional uint32 AllTotalTimes = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_AllTotalTimes:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &alltotaltimes_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_TaxMoney;
        break;
      }
      
      // optional uint32 TaxMoney = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_TaxMoney:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &taxmoney_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_Index;
        break;
      }
      
      // optional uint32 Index = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Index:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &index_));
        _set_bit(6);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGetTreasureBowlInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGetTreasureBowlInfoResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->errcode(), output);
  }
  
  // optional uint32 ItemUsedTimes = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->itemusedtimes(), output);
  }
  
  // optional uint32 ItemTotalTimes = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->itemtotaltimes(), output);
  }
  
  // optional uint32 AllUsedTimes = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->allusedtimes(), output);
  }
  
  // optional uint32 AllTotalTimes = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->alltotaltimes(), output);
  }
  
  // optional uint32 TaxMoney = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->taxmoney(), output);
  }
  
  // optional uint32 Index = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGetTreasureBowlInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->errcode(), target);
  }
  
  // optional uint32 ItemUsedTimes = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->itemusedtimes(), target);
  }
  
  // optional uint32 ItemTotalTimes = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->itemtotaltimes(), target);
  }
  
  // optional uint32 AllUsedTimes = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->allusedtimes(), target);
  }
  
  // optional uint32 AllTotalTimes = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->alltotaltimes(), target);
  }
  
  // optional uint32 TaxMoney = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->taxmoney(), target);
  }
  
  // optional uint32 Index = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGetTreasureBowlInfoResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->errcode());
    }
    
    // optional uint32 ItemUsedTimes = 2;
    if (has_itemusedtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemusedtimes());
    }
    
    // optional uint32 ItemTotalTimes = 3;
    if (has_itemtotaltimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemtotaltimes());
    }
    
    // optional uint32 AllUsedTimes = 4;
    if (has_allusedtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->allusedtimes());
    }
    
    // optional uint32 AllTotalTimes = 5;
    if (has_alltotaltimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->alltotaltimes());
    }
    
    // optional uint32 TaxMoney = 6;
    if (has_taxmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->taxmoney());
    }
    
    // optional uint32 Index = 7;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGetTreasureBowlInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGetTreasureBowlInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGetTreasureBowlInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGetTreasureBowlInfoResponse::MergeFrom(const CMessageGetTreasureBowlInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_errcode(from.errcode());
    }
    if (from._has_bit(1)) {
      set_itemusedtimes(from.itemusedtimes());
    }
    if (from._has_bit(2)) {
      set_itemtotaltimes(from.itemtotaltimes());
    }
    if (from._has_bit(3)) {
      set_allusedtimes(from.allusedtimes());
    }
    if (from._has_bit(4)) {
      set_alltotaltimes(from.alltotaltimes());
    }
    if (from._has_bit(5)) {
      set_taxmoney(from.taxmoney());
    }
    if (from._has_bit(6)) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGetTreasureBowlInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetTreasureBowlInfoResponse::CopyFrom(const CMessageGetTreasureBowlInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetTreasureBowlInfoResponse::Swap(CMessageGetTreasureBowlInfoResponse* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(itemusedtimes_, other->itemusedtimes_);
    std::swap(itemtotaltimes_, other->itemtotaltimes_);
    std::swap(allusedtimes_, other->allusedtimes_);
    std::swap(alltotaltimes_, other->alltotaltimes_);
    std::swap(taxmoney_, other->taxmoney_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGetTreasureBowlInfoResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGetTreasureBowlInfoResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGetTreasureBowlInfoResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetTreasureBowlInfoResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageStartTreasureBowlRequest::kItemIndexFieldNumber;
const int CMessageStartTreasureBowlRequest::kEntityIDFieldNumber;
#endif  // !_MSC_VER

CMessageStartTreasureBowlRequest::CMessageStartTreasureBowlRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageStartTreasureBowlRequest::InitAsDefaultInstance() {}

CMessageStartTreasureBowlRequest::CMessageStartTreasureBowlRequest(const CMessageStartTreasureBowlRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageStartTreasureBowlRequest::SharedCtor() {
  _cached_size_ = 0;
  itemindex_ = 0u;
  entityid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageStartTreasureBowlRequest::~CMessageStartTreasureBowlRequest() {
  SharedDtor();
}

void CMessageStartTreasureBowlRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageStartTreasureBowlRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartTreasureBowlRequest_descriptor_;
}

const CMessageStartTreasureBowlRequest& CMessageStartTreasureBowlRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageStartTreasureBowlRequest* CMessageStartTreasureBowlRequest::default_instance_ = NULL;

CMessageStartTreasureBowlRequest* CMessageStartTreasureBowlRequest::New() const {
  return new CMessageStartTreasureBowlRequest;
}

void CMessageStartTreasureBowlRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemindex_ = 0u;
    entityid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageStartTreasureBowlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 ItemIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemindex_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_EntityID;
        break;
      }
      
      // optional uint32 EntityID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_EntityID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &entityid_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageStartTreasureBowlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageStartTreasureBowlRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 ItemIndex = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->itemindex(), output);
  }
  
  // optional uint32 EntityID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->entityid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageStartTreasureBowlRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 ItemIndex = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->itemindex(), target);
  }
  
  // optional uint32 EntityID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->entityid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageStartTreasureBowlRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ItemIndex = 1;
    if (has_itemindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemindex());
    }
    
    // optional uint32 EntityID = 2;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->entityid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageStartTreasureBowlRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageStartTreasureBowlRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageStartTreasureBowlRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageStartTreasureBowlRequest::MergeFrom(const CMessageStartTreasureBowlRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_itemindex(from.itemindex());
    }
    if (from._has_bit(1)) {
      set_entityid(from.entityid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageStartTreasureBowlRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartTreasureBowlRequest::CopyFrom(const CMessageStartTreasureBowlRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartTreasureBowlRequest::Swap(CMessageStartTreasureBowlRequest* other) {
  if (other != this) {
    std::swap(itemindex_, other->itemindex_);
    std::swap(entityid_, other->entityid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageStartTreasureBowlRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageStartTreasureBowlRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageStartTreasureBowlRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartTreasureBowlRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageStartTreasureBowlResponse::kErrcodeFieldNumber;
const int CMessageStartTreasureBowlResponse::kItemIndexFieldNumber;
const int CMessageStartTreasureBowlResponse::kNewItemIDFieldNumber;
#endif  // !_MSC_VER

CMessageStartTreasureBowlResponse::CMessageStartTreasureBowlResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageStartTreasureBowlResponse::InitAsDefaultInstance() {}

CMessageStartTreasureBowlResponse::CMessageStartTreasureBowlResponse(const CMessageStartTreasureBowlResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageStartTreasureBowlResponse::SharedCtor() {
  _cached_size_ = 0;
  errcode_ = 0u;
  itemindex_ = 0u;
  newitemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageStartTreasureBowlResponse::~CMessageStartTreasureBowlResponse() {
  SharedDtor();
}

void CMessageStartTreasureBowlResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageStartTreasureBowlResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartTreasureBowlResponse_descriptor_;
}

const CMessageStartTreasureBowlResponse& CMessageStartTreasureBowlResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageStartTreasureBowlResponse* CMessageStartTreasureBowlResponse::default_instance_ = NULL;

CMessageStartTreasureBowlResponse* CMessageStartTreasureBowlResponse::New() const {
  return new CMessageStartTreasureBowlResponse;
}

void CMessageStartTreasureBowlResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    errcode_ = 0u;
    itemindex_ = 0u;
    newitemid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageStartTreasureBowlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Errcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &errcode_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_ItemIndex;
        break;
      }
      
      // optional uint32 ItemIndex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemIndex:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemindex_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_NewItemID;
        break;
      }
      
      // optional uint32 NewItemID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_NewItemID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &newitemid_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageStartTreasureBowlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageStartTreasureBowlResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->errcode(), output);
  }
  
  // optional uint32 ItemIndex = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->itemindex(), output);
  }
  
  // optional uint32 NewItemID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->newitemid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageStartTreasureBowlResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Errcode = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->errcode(), target);
  }
  
  // optional uint32 ItemIndex = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->itemindex(), target);
  }
  
  // optional uint32 NewItemID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->newitemid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageStartTreasureBowlResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Errcode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->errcode());
    }
    
    // optional uint32 ItemIndex = 2;
    if (has_itemindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemindex());
    }
    
    // optional uint32 NewItemID = 3;
    if (has_newitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->newitemid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageStartTreasureBowlResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageStartTreasureBowlResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageStartTreasureBowlResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageStartTreasureBowlResponse::MergeFrom(const CMessageStartTreasureBowlResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_errcode(from.errcode());
    }
    if (from._has_bit(1)) {
      set_itemindex(from.itemindex());
    }
    if (from._has_bit(2)) {
      set_newitemid(from.newitemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageStartTreasureBowlResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartTreasureBowlResponse::CopyFrom(const CMessageStartTreasureBowlResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageStartTreasureBowlResponse::Swap(CMessageStartTreasureBowlResponse* other) {
  if (other != this) {
    std::swap(errcode_, other->errcode_);
    std::swap(itemindex_, other->itemindex_);
    std::swap(newitemid_, other->newitemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageStartTreasureBowlResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageStartTreasureBowlResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageStartTreasureBowlResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageStartTreasureBowlResponse_reflection_;
}

// ===================================================================

const ::std::string CMessageTreasureBowlSuccessNotify::_default_rolename_;
#ifndef _MSC_VER
const int CMessageTreasureBowlSuccessNotify::kRoleNameFieldNumber;
const int CMessageTreasureBowlSuccessNotify::kOldItemIDFieldNumber;
const int CMessageTreasureBowlSuccessNotify::kNewItemIDFieldNumber;
const int CMessageTreasureBowlSuccessNotify::kItemNumFieldNumber;
#endif  // !_MSC_VER

CMessageTreasureBowlSuccessNotify::CMessageTreasureBowlSuccessNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageTreasureBowlSuccessNotify::InitAsDefaultInstance() {}

CMessageTreasureBowlSuccessNotify::CMessageTreasureBowlSuccessNotify(const CMessageTreasureBowlSuccessNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageTreasureBowlSuccessNotify::SharedCtor() {
  _cached_size_ = 0;
  rolename_ = const_cast< ::std::string*>(&_default_rolename_);
  olditemid_ = 0u;
  newitemid_ = 0u;
  itemnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageTreasureBowlSuccessNotify::~CMessageTreasureBowlSuccessNotify() {
  SharedDtor();
}

void CMessageTreasureBowlSuccessNotify::SharedDtor() {
  if (rolename_ != &_default_rolename_) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageTreasureBowlSuccessNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageTreasureBowlSuccessNotify_descriptor_;
}

const CMessageTreasureBowlSuccessNotify& CMessageTreasureBowlSuccessNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_activitymessag_5fpb_2ehxx();  return *default_instance_;
}

CMessageTreasureBowlSuccessNotify* CMessageTreasureBowlSuccessNotify::default_instance_ = NULL;

CMessageTreasureBowlSuccessNotify* CMessageTreasureBowlSuccessNotify::New() const {
  return new CMessageTreasureBowlSuccessNotify;
}

void CMessageTreasureBowlSuccessNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (rolename_ != &_default_rolename_) {
        rolename_->clear();
      }
    }
    olditemid_ = 0u;
    newitemid_ = 0u;
    itemnum_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageTreasureBowlSuccessNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional string RoleName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_rolename()));
        if (input->ExpectTag(16)) goto parse_OldItemID;
        break;
      }
      
      // optional uint32 OldItemID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_OldItemID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &olditemid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_NewItemID;
        break;
      }
      
      // optional uint32 NewItemID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_NewItemID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &newitemid_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_ItemNum;
        break;
      }
      
      // optional uint32 ItemNum = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemNum:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemnum_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageTreasureBowlSuccessNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageTreasureBowlSuccessNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional string RoleName = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteString(1, this->rolename(), output);
  }
  
  // optional uint32 OldItemID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->olditemid(), output);
  }
  
  // optional uint32 NewItemID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->newitemid(), output);
  }
  
  // optional uint32 ItemNum = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->itemnum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageTreasureBowlSuccessNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string RoleName = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(1, this->rolename(), target);
  }
  
  // optional uint32 OldItemID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->olditemid(), target);
  }
  
  // optional uint32 NewItemID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->newitemid(), target);
  }
  
  // optional uint32 ItemNum = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->itemnum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageTreasureBowlSuccessNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string RoleName = 1;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->rolename());
    }
    
    // optional uint32 OldItemID = 2;
    if (has_olditemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->olditemid());
    }
    
    // optional uint32 NewItemID = 3;
    if (has_newitemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->newitemid());
    }
    
    // optional uint32 ItemNum = 4;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemnum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageTreasureBowlSuccessNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageTreasureBowlSuccessNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageTreasureBowlSuccessNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageTreasureBowlSuccessNotify::MergeFrom(const CMessageTreasureBowlSuccessNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_rolename(from.rolename());
    }
    if (from._has_bit(1)) {
      set_olditemid(from.olditemid());
    }
    if (from._has_bit(2)) {
      set_newitemid(from.newitemid());
    }
    if (from._has_bit(3)) {
      set_itemnum(from.itemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageTreasureBowlSuccessNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageTreasureBowlSuccessNotify::CopyFrom(const CMessageTreasureBowlSuccessNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageTreasureBowlSuccessNotify::Swap(CMessageTreasureBowlSuccessNotify* other) {
  if (other != this) {
    std::swap(rolename_, other->rolename_);
    std::swap(olditemid_, other->olditemid_);
    std::swap(newitemid_, other->newitemid_);
    std::swap(itemnum_, other->itemnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageTreasureBowlSuccessNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageTreasureBowlSuccessNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageTreasureBowlSuccessNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageTreasureBowlSuccessNotify_reflection_;
}
