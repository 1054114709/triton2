// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "boursemessage_pb.hxx.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>
#ifdef LEAK_CHK_DEBUG_NEW
#include "debug_new.h"
#endif

namespace {

const ::google::protobuf::Descriptor* PBBourseAccountInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBourseAccountInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBBourseDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBourseDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBBourseDetailList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBourseDetailList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseAccountNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseAccountNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseCode_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseIncAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseIncAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseDecAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseDecAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseAccountLoad_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseAccountLoad_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseAccountAddBuy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseAccountAddBuy_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseAccountAddSell_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseAccountAddSell_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseLoadSelfList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseLoadSelfList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseSelfListNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseSelfListNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseListNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseListNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseLoadList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseLoadList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseTradeBuyNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseTradeBuyNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseTradeSellNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseTradeSellNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseDecBuyDoc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseDecBuyDoc_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseDecSellDoc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseDecSellDoc_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseTradeLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseTradeLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageBourseTradeLogQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageBourseTradeLogQuery_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BOURSE_MSG_ID_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BOURSE_ACCOUNT_NOTIFY_CODE_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_boursemessage_5fpb_2ehxx() {
  protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "boursemessage_pb.hxx");
  GOOGLE_CHECK(file != NULL);
  PBBourseAccountInfo_descriptor_ = file->message_type(0);
  static const int PBBourseAccountInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseAccountInfo, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseAccountInfo, yb_),
  };
  PBBourseAccountInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBBourseAccountInfo_descriptor_,
      PBBourseAccountInfo::default_instance_,
      PBBourseAccountInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseAccountInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseAccountInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBBourseAccountInfo));
  PBBourseDetail_descriptor_ = file->message_type(1);
  static const int PBBourseDetail_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, bourse_doc_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, account_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, yb_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, bourse_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, bourse_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, role_id_),
  };
  PBBourseDetail_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBBourseDetail_descriptor_,
      PBBourseDetail::default_instance_,
      PBBourseDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetail, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBBourseDetail));
  PBBourseDetailList_descriptor_ = file->message_type(2);
  static const int PBBourseDetailList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetailList, list_),
  };
  PBBourseDetailList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBBourseDetailList_descriptor_,
      PBBourseDetailList::default_instance_,
      PBBourseDetailList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetailList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBourseDetailList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBBourseDetailList));
  CMessageBourseAccountNotify_descriptor_ = file->message_type(3);
  static const int CMessageBourseAccountNotify_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountNotify, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountNotify, yb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountNotify, notifycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountNotify, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountNotify, param2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountNotify, param3_),
  };
  CMessageBourseAccountNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseAccountNotify_descriptor_,
      CMessageBourseAccountNotify::default_instance_,
      CMessageBourseAccountNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseAccountNotify));
  CMessageBourseCode_descriptor_ = file->message_type(4);
  static const int CMessageBourseCode_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseCode, code_),
  };
  CMessageBourseCode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseCode_descriptor_,
      CMessageBourseCode::default_instance_,
      CMessageBourseCode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseCode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseCode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseCode));
  CMessageBourseIncAccount_descriptor_ = file->message_type(5);
  static const int CMessageBourseIncAccount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseIncAccount, accountinc_),
  };
  CMessageBourseIncAccount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseIncAccount_descriptor_,
      CMessageBourseIncAccount::default_instance_,
      CMessageBourseIncAccount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseIncAccount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseIncAccount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseIncAccount));
  CMessageBourseDecAccount_descriptor_ = file->message_type(6);
  static const int CMessageBourseDecAccount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecAccount, accountdec_),
  };
  CMessageBourseDecAccount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseDecAccount_descriptor_,
      CMessageBourseDecAccount::default_instance_,
      CMessageBourseDecAccount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecAccount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecAccount, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseDecAccount));
  CMessageBourseAccountLoad_descriptor_ = file->message_type(7);
  static const int CMessageBourseAccountLoad_offsets_[1] = {
  };
  CMessageBourseAccountLoad_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseAccountLoad_descriptor_,
      CMessageBourseAccountLoad::default_instance_,
      CMessageBourseAccountLoad_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountLoad, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountLoad, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseAccountLoad));
  CMessageBourseAccountAddBuy_descriptor_ = file->message_type(8);
  static const int CMessageBourseAccountAddBuy_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountAddBuy, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountAddBuy, yb_count_),
  };
  CMessageBourseAccountAddBuy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseAccountAddBuy_descriptor_,
      CMessageBourseAccountAddBuy::default_instance_,
      CMessageBourseAccountAddBuy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountAddBuy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountAddBuy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseAccountAddBuy));
  CMessageBourseAccountAddSell_descriptor_ = file->message_type(9);
  static const int CMessageBourseAccountAddSell_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountAddSell, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountAddSell, yb_count_),
  };
  CMessageBourseAccountAddSell_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseAccountAddSell_descriptor_,
      CMessageBourseAccountAddSell::default_instance_,
      CMessageBourseAccountAddSell_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountAddSell, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseAccountAddSell, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseAccountAddSell));
  CMessageBourseLoadSelfList_descriptor_ = file->message_type(10);
  static const int CMessageBourseLoadSelfList_offsets_[1] = {
  };
  CMessageBourseLoadSelfList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseLoadSelfList_descriptor_,
      CMessageBourseLoadSelfList::default_instance_,
      CMessageBourseLoadSelfList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseLoadSelfList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseLoadSelfList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseLoadSelfList));
  CMessageBourseSelfListNotice_descriptor_ = file->message_type(11);
  static const int CMessageBourseSelfListNotice_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseSelfListNotice, buylist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseSelfListNotice, selllist_),
  };
  CMessageBourseSelfListNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseSelfListNotice_descriptor_,
      CMessageBourseSelfListNotice::default_instance_,
      CMessageBourseSelfListNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseSelfListNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseSelfListNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseSelfListNotice));
  CMessageBourseListNotice_descriptor_ = file->message_type(12);
  static const int CMessageBourseListNotice_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseListNotice, buylist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseListNotice, selllist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseListNotice, listid_),
  };
  CMessageBourseListNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseListNotice_descriptor_,
      CMessageBourseListNotice::default_instance_,
      CMessageBourseListNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseListNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseListNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseListNotice));
  CMessageBourseLoadList_descriptor_ = file->message_type(13);
  static const int CMessageBourseLoadList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseLoadList, listid_),
  };
  CMessageBourseLoadList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseLoadList_descriptor_,
      CMessageBourseLoadList::default_instance_,
      CMessageBourseLoadList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseLoadList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseLoadList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseLoadList));
  CMessageBourseTradeBuyNotice_descriptor_ = file->message_type(14);
  static const int CMessageBourseTradeBuyNotice_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeBuyNotice, detail_),
  };
  CMessageBourseTradeBuyNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseTradeBuyNotice_descriptor_,
      CMessageBourseTradeBuyNotice::default_instance_,
      CMessageBourseTradeBuyNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeBuyNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeBuyNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseTradeBuyNotice));
  CMessageBourseTradeSellNotice_descriptor_ = file->message_type(15);
  static const int CMessageBourseTradeSellNotice_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeSellNotice, detail_),
  };
  CMessageBourseTradeSellNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseTradeSellNotice_descriptor_,
      CMessageBourseTradeSellNotice::default_instance_,
      CMessageBourseTradeSellNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeSellNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeSellNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseTradeSellNotice));
  CMessageBourseDecBuyDoc_descriptor_ = file->message_type(16);
  static const int CMessageBourseDecBuyDoc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecBuyDoc, doc_),
  };
  CMessageBourseDecBuyDoc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseDecBuyDoc_descriptor_,
      CMessageBourseDecBuyDoc::default_instance_,
      CMessageBourseDecBuyDoc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecBuyDoc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecBuyDoc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseDecBuyDoc));
  CMessageBourseDecSellDoc_descriptor_ = file->message_type(17);
  static const int CMessageBourseDecSellDoc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecSellDoc, doc_),
  };
  CMessageBourseDecSellDoc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseDecSellDoc_descriptor_,
      CMessageBourseDecSellDoc::default_instance_,
      CMessageBourseDecSellDoc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecSellDoc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseDecSellDoc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseDecSellDoc));
  CMessageBourseTradeLog_descriptor_ = file->message_type(18);
  static const int CMessageBourseTradeLog_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeLog, buy_log_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeLog, sell_log_),
  };
  CMessageBourseTradeLog_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseTradeLog_descriptor_,
      CMessageBourseTradeLog::default_instance_,
      CMessageBourseTradeLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeLog, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeLog, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseTradeLog));
  CMessageBourseTradeLogQuery_descriptor_ = file->message_type(19);
  static const int CMessageBourseTradeLogQuery_offsets_[1] = {
  };
  CMessageBourseTradeLogQuery_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageBourseTradeLogQuery_descriptor_,
      CMessageBourseTradeLogQuery::default_instance_,
      CMessageBourseTradeLogQuery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeLogQuery, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageBourseTradeLogQuery, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageBourseTradeLogQuery));
  BOURSE_MSG_ID_descriptor_ = file->enum_type(0);
  BOURSE_ACCOUNT_NOTIFY_CODE_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_boursemessage_5fpb_2ehxx);
}

void protobuf_RegisterTypes() {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBBourseAccountInfo_descriptor_, &PBBourseAccountInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBBourseDetail_descriptor_, &PBBourseDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBBourseDetailList_descriptor_, &PBBourseDetailList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseAccountNotify_descriptor_, &CMessageBourseAccountNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseCode_descriptor_, &CMessageBourseCode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseIncAccount_descriptor_, &CMessageBourseIncAccount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseDecAccount_descriptor_, &CMessageBourseDecAccount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseAccountLoad_descriptor_, &CMessageBourseAccountLoad::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseAccountAddBuy_descriptor_, &CMessageBourseAccountAddBuy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseAccountAddSell_descriptor_, &CMessageBourseAccountAddSell::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseLoadSelfList_descriptor_, &CMessageBourseLoadSelfList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseSelfListNotice_descriptor_, &CMessageBourseSelfListNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseListNotice_descriptor_, &CMessageBourseListNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseLoadList_descriptor_, &CMessageBourseLoadList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseTradeBuyNotice_descriptor_, &CMessageBourseTradeBuyNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseTradeSellNotice_descriptor_, &CMessageBourseTradeSellNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseDecBuyDoc_descriptor_, &CMessageBourseDecBuyDoc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseDecSellDoc_descriptor_, &CMessageBourseDecSellDoc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseTradeLog_descriptor_, &CMessageBourseTradeLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageBourseTradeLogQuery_descriptor_, &CMessageBourseTradeLogQuery::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_boursemessage_5fpb_2ehxx() {
  delete PBBourseAccountInfo::default_instance_;
  delete PBBourseAccountInfo_reflection_;
  delete PBBourseDetail::default_instance_;
  delete PBBourseDetail_reflection_;
  delete PBBourseDetailList::default_instance_;
  delete PBBourseDetailList_reflection_;
  delete CMessageBourseAccountNotify::default_instance_;
  delete CMessageBourseAccountNotify_reflection_;
  delete CMessageBourseCode::default_instance_;
  delete CMessageBourseCode_reflection_;
  delete CMessageBourseIncAccount::default_instance_;
  delete CMessageBourseIncAccount_reflection_;
  delete CMessageBourseDecAccount::default_instance_;
  delete CMessageBourseDecAccount_reflection_;
  delete CMessageBourseAccountLoad::default_instance_;
  delete CMessageBourseAccountLoad_reflection_;
  delete CMessageBourseAccountAddBuy::default_instance_;
  delete CMessageBourseAccountAddBuy_reflection_;
  delete CMessageBourseAccountAddSell::default_instance_;
  delete CMessageBourseAccountAddSell_reflection_;
  delete CMessageBourseLoadSelfList::default_instance_;
  delete CMessageBourseLoadSelfList_reflection_;
  delete CMessageBourseSelfListNotice::default_instance_;
  delete CMessageBourseSelfListNotice_reflection_;
  delete CMessageBourseListNotice::default_instance_;
  delete CMessageBourseListNotice_reflection_;
  delete CMessageBourseLoadList::default_instance_;
  delete CMessageBourseLoadList_reflection_;
  delete CMessageBourseTradeBuyNotice::default_instance_;
  delete CMessageBourseTradeBuyNotice_reflection_;
  delete CMessageBourseTradeSellNotice::default_instance_;
  delete CMessageBourseTradeSellNotice_reflection_;
  delete CMessageBourseDecBuyDoc::default_instance_;
  delete CMessageBourseDecBuyDoc_reflection_;
  delete CMessageBourseDecSellDoc::default_instance_;
  delete CMessageBourseDecSellDoc_reflection_;
  delete CMessageBourseTradeLog::default_instance_;
  delete CMessageBourseTradeLog_reflection_;
  delete CMessageBourseTradeLogQuery::default_instance_;
  delete CMessageBourseTradeLogQuery_reflection_;
}

void protobuf_AddDesc_boursemessage_5fpb_2ehxx() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  #ifndef _NO_PROTOBUF_STR_
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024boursemessage_pb.hxx\"0\n\023PBBourseAccoun"
    "tInfo\022\r\n\005Money\030\001 \001(\r\022\n\n\002Yb\030\002 \001(\r\"\231\001\n\016PBB"
    "ourseDetail\022\025\n\rbourse_doc_no\030\001 \001(\r\022\022\n\nac"
    "count_id\030\002 \001(\r\022\r\n\005price\030\003 \001(\r\022\020\n\010yb_coun"
    "t\030\004 \001(\r\022\023\n\013bourse_date\030\005 \001(\r\022\025\n\rbourse_d"
    "etail\030\006 \001(\004\022\017\n\007role_id\030\007 \001(\r\"3\n\022PBBourse"
    "DetailList\022\035\n\004list\030\001 \003(\0132\017.PBBourseDetai"
    "l\"\224\001\n\033CMessageBourseAccountNotify\022%\n\007Acc"
    "ount\030\001 \001(\0132\024.PBBourseAccountInfo\022\n\n\002YB\030\002"
    " \001(\r\022\022\n\nNotifyCode\030\003 \001(\r\022\016\n\006Param1\030\004 \001(\r"
    "\022\016\n\006Param2\030\005 \001(\r\022\016\n\006Param3\030\006 \001(\r\"\"\n\022CMes"
    "sageBourseCode\022\014\n\004Code\030\001 \001(\r\"D\n\030CMessage"
    "BourseIncAccount\022(\n\nAccountInc\030\001 \001(\0132\024.P"
    "BBourseAccountInfo\"D\n\030CMessageBourseDecA"
    "ccount\022(\n\nAccountDec\030\001 \001(\0132\024.PBBourseAcc"
    "ountInfo\"\033\n\031CMessageBourseAccountLoad\">\n"
    "\033CMessageBourseAccountAddBuy\022\r\n\005price\030\001 "
    "\001(\r\022\020\n\010yb_count\030\002 \001(\r\"?\n\034CMessageBourseA"
    "ccountAddSell\022\r\n\005price\030\001 \001(\r\022\020\n\010yb_count"
    "\030\002 \001(\r\"\034\n\032CMessageBourseLoadSelfList\"k\n\034"
    "CMessageBourseSelfListNotice\022$\n\007BuyList\030"
    "\001 \001(\0132\023.PBBourseDetailList\022%\n\010SellList\030\002"
    " \001(\0132\023.PBBourseDetailList\"w\n\030CMessageBou"
    "rseListNotice\022$\n\007BuyList\030\001 \001(\0132\023.PBBours"
    "eDetailList\022%\n\010SellList\030\002 \001(\0132\023.PBBourse"
    "DetailList\022\016\n\006ListID\030\003 \001(\r\"(\n\026CMessageBo"
    "urseLoadList\022\016\n\006ListID\030\001 \001(\r\"?\n\034CMessage"
    "BourseTradeBuyNotice\022\037\n\006Detail\030\001 \001(\0132\017.P"
    "BBourseDetail\"@\n\035CMessageBourseTradeSell"
    "Notice\022\037\n\006Detail\030\001 \001(\0132\017.PBBourseDetail\""
    "&\n\027CMessageBourseDecBuyDoc\022\013\n\003Doc\030\001 \001(\r\""
    "\'\n\030CMessageBourseDecSellDoc\022\013\n\003Doc\030\001 \001(\r"
    "\"e\n\026CMessageBourseTradeLog\022$\n\007buy_log\030\001 "
    "\001(\0132\023.PBBourseDetailList\022%\n\010sell_log\030\002 \001"
    "(\0132\023.PBBourseDetailList\"\035\n\033CMessageBours"
    "eTradeLogQuery*\264\004\n\rBOURSE_MSG_ID\022\"\n\034ID_S"
    "2C_BOURSE_NOTIFY_ACCOUNT\020\201\260\001\022\037\n\031ID_C2S_B"
    "OURSE_INC_ACCOUNT\020\202\260\001\022\037\n\031ID_C2S_BOURSE_D"
    "EC_ACCOUNT\020\203\260\001\022 \n\032ID_C2S_BOURSE_LOAD_ACC"
    "OUNT\020\204\260\001\022\033\n\025ID_C2S_BOURSE_ADD_BUY\020\205\260\001\022\034\n"
    "\026ID_C2S_BOURSE_ADD_SELL\020\206\260\001\022\"\n\034ID_C2S_BO"
    "URSE_LOAD_SELF_LIST\020\207\260\001\022$\n\036ID_S2C_BOURSE"
    "_NOTIFY_SELF_LIST\020\210\260\001\022\035\n\027ID_C2S_BOURSE_L"
    "OAD_LIST\020\211\260\001\022\037\n\031ID_S2C_BOURSE_LIST_NOTIC"
    "E\020\212\260\001\022\030\n\022ID_S2C_BOURSE_CODE\020\213\260\001\022\035\n\027ID_S2"
    "C_BOURSE_TRADE_BUY\020\214\260\001\022\036\n\030ID_S2C_BOURSE_"
    "TRADE_SELL\020\215\260\001\022\033\n\025ID_C2S_BOURSE_BUY_DOC\020"
    "\216\260\001\022\034\n\026ID_C2S_BOURSE_SELL_DOC\020\220\260\001\022#\n\035ID_"
    "C2S_BOURSE_TRADE_LOG_QUERY\020\221\260\001\022\035\n\027ID_S2C"
    "_BOURSE_TRADE_LOG\020\222\260\001*\251\002\n\032BOURSE_ACCOUNT"
    "_NOTIFY_CODE\022\027\n\023BOURSE_ACCOUNT_LOAD\020\000\022\026\n"
    "\022BOURSE_ACCOUNT_INC\020\001\022\026\n\022BOURSE_ACCOUNT_"
    "DEC\020\002\022\030\n\024BOURSE_ACCOUNT_TRADE\020\004\022\"\n\036BOURS"
    "E_ACCOUNT_NOTENOUGH_MONEY\020\020\022\037\n\033BOURSE_AC"
    "COUNT_NOTENOUGH_YB\020 \022\026\n\022BOURSE_ADD_DOC_B"
    "UY\020@\022\030\n\023BOURSE_ADD_DOC_SELL\020\200\001\022\027\n\022BOURSE"
    "_DEC_DOC_BUY\020\200\002\022\030\n\023BOURSE_DEC_DOC_SELL\020\200"
    "\004B\002H\001", 2285);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "boursemessage_pb.hxx", &protobuf_RegisterTypes);
  #endif
  PBBourseAccountInfo::default_instance_ = new PBBourseAccountInfo();
  PBBourseDetail::default_instance_ = new PBBourseDetail();
  PBBourseDetailList::default_instance_ = new PBBourseDetailList();
  CMessageBourseAccountNotify::default_instance_ = new CMessageBourseAccountNotify();
  CMessageBourseCode::default_instance_ = new CMessageBourseCode();
  CMessageBourseIncAccount::default_instance_ = new CMessageBourseIncAccount();
  CMessageBourseDecAccount::default_instance_ = new CMessageBourseDecAccount();
  CMessageBourseAccountLoad::default_instance_ = new CMessageBourseAccountLoad();
  CMessageBourseAccountAddBuy::default_instance_ = new CMessageBourseAccountAddBuy();
  CMessageBourseAccountAddSell::default_instance_ = new CMessageBourseAccountAddSell();
  CMessageBourseLoadSelfList::default_instance_ = new CMessageBourseLoadSelfList();
  CMessageBourseSelfListNotice::default_instance_ = new CMessageBourseSelfListNotice();
  CMessageBourseListNotice::default_instance_ = new CMessageBourseListNotice();
  CMessageBourseLoadList::default_instance_ = new CMessageBourseLoadList();
  CMessageBourseTradeBuyNotice::default_instance_ = new CMessageBourseTradeBuyNotice();
  CMessageBourseTradeSellNotice::default_instance_ = new CMessageBourseTradeSellNotice();
  CMessageBourseDecBuyDoc::default_instance_ = new CMessageBourseDecBuyDoc();
  CMessageBourseDecSellDoc::default_instance_ = new CMessageBourseDecSellDoc();
  CMessageBourseTradeLog::default_instance_ = new CMessageBourseTradeLog();
  CMessageBourseTradeLogQuery::default_instance_ = new CMessageBourseTradeLogQuery();
  PBBourseAccountInfo::default_instance_->InitAsDefaultInstance();
  PBBourseDetail::default_instance_->InitAsDefaultInstance();
  PBBourseDetailList::default_instance_->InitAsDefaultInstance();
  CMessageBourseAccountNotify::default_instance_->InitAsDefaultInstance();
  CMessageBourseCode::default_instance_->InitAsDefaultInstance();
  CMessageBourseIncAccount::default_instance_->InitAsDefaultInstance();
  CMessageBourseDecAccount::default_instance_->InitAsDefaultInstance();
  CMessageBourseAccountLoad::default_instance_->InitAsDefaultInstance();
  CMessageBourseAccountAddBuy::default_instance_->InitAsDefaultInstance();
  CMessageBourseAccountAddSell::default_instance_->InitAsDefaultInstance();
  CMessageBourseLoadSelfList::default_instance_->InitAsDefaultInstance();
  CMessageBourseSelfListNotice::default_instance_->InitAsDefaultInstance();
  CMessageBourseListNotice::default_instance_->InitAsDefaultInstance();
  CMessageBourseLoadList::default_instance_->InitAsDefaultInstance();
  CMessageBourseTradeBuyNotice::default_instance_->InitAsDefaultInstance();
  CMessageBourseTradeSellNotice::default_instance_->InitAsDefaultInstance();
  CMessageBourseDecBuyDoc::default_instance_->InitAsDefaultInstance();
  CMessageBourseDecSellDoc::default_instance_->InitAsDefaultInstance();
  CMessageBourseTradeLog::default_instance_->InitAsDefaultInstance();
  CMessageBourseTradeLogQuery::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_boursemessage_5fpb_2ehxx);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_boursemessage_5fpb_2ehxx {
  StaticDescriptorInitializer_boursemessage_5fpb_2ehxx() {
    protobuf_AddDesc_boursemessage_5fpb_2ehxx();
  }
} static_descriptor_initializer_boursemessage_5fpb_2ehxx_;

const ::google::protobuf::EnumDescriptor* BOURSE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BOURSE_MSG_ID_descriptor_;
}
bool BOURSE_MSG_ID_IsValid(int value) {
  switch(value) {
    case 22529:
    case 22530:
    case 22531:
    case 22532:
    case 22533:
    case 22534:
    case 22535:
    case 22536:
    case 22537:
    case 22538:
    case 22539:
    case 22540:
    case 22541:
    case 22542:
    case 22544:
    case 22545:
    case 22546:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BOURSE_ACCOUNT_NOTIFY_CODE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BOURSE_ACCOUNT_NOTIFY_CODE_descriptor_;
}
bool BOURSE_ACCOUNT_NOTIFY_CODE_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int PBBourseAccountInfo::kMoneyFieldNumber;
const int PBBourseAccountInfo::kYbFieldNumber;
#endif  // !_MSC_VER

PBBourseAccountInfo::PBBourseAccountInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBBourseAccountInfo::InitAsDefaultInstance() {}

PBBourseAccountInfo::PBBourseAccountInfo(const PBBourseAccountInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBBourseAccountInfo::SharedCtor() {
  _cached_size_ = 0;
  money_ = 0u;
  yb_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBBourseAccountInfo::~PBBourseAccountInfo() {
  SharedDtor();
}

void PBBourseAccountInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBBourseAccountInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBourseAccountInfo_descriptor_;
}

const PBBourseAccountInfo& PBBourseAccountInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

PBBourseAccountInfo* PBBourseAccountInfo::default_instance_ = NULL;

PBBourseAccountInfo* PBBourseAccountInfo::New() const {
  return new PBBourseAccountInfo;
}

void PBBourseAccountInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    money_ = 0u;
    yb_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBBourseAccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &money_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_Yb;
        break;
      }
      
      // optional uint32 Yb = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Yb:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &yb_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBBourseAccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBBourseAccountInfo::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Money = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->money(), output);
  }
  
  // optional uint32 Yb = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->yb(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBBourseAccountInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Money = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->money(), target);
  }
  
  // optional uint32 Yb = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->yb(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBBourseAccountInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->money());
    }
    
    // optional uint32 Yb = 2;
    if (has_yb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->yb());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBBourseAccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBBourseAccountInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBBourseAccountInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBBourseAccountInfo::MergeFrom(const PBBourseAccountInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_money(from.money());
    }
    if (from._has_bit(1)) {
      set_yb(from.yb());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBBourseAccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBourseAccountInfo::CopyFrom(const PBBourseAccountInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBourseAccountInfo::Swap(PBBourseAccountInfo* other) {
  if (other != this) {
    std::swap(money_, other->money_);
    std::swap(yb_, other->yb_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBBourseAccountInfo::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBBourseAccountInfo::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBBourseAccountInfo::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBBourseAccountInfo_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int PBBourseDetail::kBourseDocNoFieldNumber;
const int PBBourseDetail::kAccountIdFieldNumber;
const int PBBourseDetail::kPriceFieldNumber;
const int PBBourseDetail::kYbCountFieldNumber;
const int PBBourseDetail::kBourseDateFieldNumber;
const int PBBourseDetail::kBourseDetailFieldNumber;
const int PBBourseDetail::kRoleIdFieldNumber;
#endif  // !_MSC_VER

PBBourseDetail::PBBourseDetail()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBBourseDetail::InitAsDefaultInstance() {}

PBBourseDetail::PBBourseDetail(const PBBourseDetail& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBBourseDetail::SharedCtor() {
  _cached_size_ = 0;
  bourse_doc_no_ = 0u;
  account_id_ = 0u;
  price_ = 0u;
  yb_count_ = 0u;
  bourse_date_ = 0u;
  bourse_detail_ = GOOGLE_ULONGLONG(0);
  role_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBBourseDetail::~PBBourseDetail() {
  SharedDtor();
}

void PBBourseDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBBourseDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBourseDetail_descriptor_;
}

const PBBourseDetail& PBBourseDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

PBBourseDetail* PBBourseDetail::default_instance_ = NULL;

PBBourseDetail* PBBourseDetail::New() const {
  return new PBBourseDetail;
}

void PBBourseDetail::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bourse_doc_no_ = 0u;
    account_id_ = 0u;
    price_ = 0u;
    yb_count_ = 0u;
    bourse_date_ = 0u;
    bourse_detail_ = GOOGLE_ULONGLONG(0);
    role_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBBourseDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 bourse_doc_no = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &bourse_doc_no_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_account_id;
        break;
      }
      
      // optional uint32 account_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_account_id:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &account_id_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_price;
        break;
      }
      
      // optional uint32 price = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_price:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &price_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_yb_count;
        break;
      }
      
      // optional uint32 yb_count = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_yb_count:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &yb_count_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_bourse_date;
        break;
      }
      
      // optional uint32 bourse_date = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_bourse_date:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &bourse_date_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_bourse_detail;
        break;
      }
      
      // optional uint64 bourse_detail = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_bourse_detail:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt64(
              input, &bourse_detail_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_role_id;
        break;
      }
      
      // optional uint32 role_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_role_id:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &role_id_));
        _set_bit(6);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBBourseDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBBourseDetail::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 bourse_doc_no = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->bourse_doc_no(), output);
  }
  
  // optional uint32 account_id = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->account_id(), output);
  }
  
  // optional uint32 price = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->price(), output);
  }
  
  // optional uint32 yb_count = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->yb_count(), output);
  }
  
  // optional uint32 bourse_date = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->bourse_date(), output);
  }
  
  // optional uint64 bourse_detail = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt64(6, this->bourse_detail(), output);
  }
  
  // optional uint32 role_id = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBBourseDetail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 bourse_doc_no = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->bourse_doc_no(), target);
  }
  
  // optional uint32 account_id = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->account_id(), target);
  }
  
  // optional uint32 price = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->price(), target);
  }
  
  // optional uint32 yb_count = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->yb_count(), target);
  }
  
  // optional uint32 bourse_date = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->bourse_date(), target);
  }
  
  // optional uint64 bourse_detail = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt64ToArray(6, this->bourse_detail(), target);
  }
  
  // optional uint32 role_id = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBBourseDetail::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 bourse_doc_no = 1;
    if (has_bourse_doc_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->bourse_doc_no());
    }
    
    // optional uint32 account_id = 2;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->account_id());
    }
    
    // optional uint32 price = 3;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->price());
    }
    
    // optional uint32 yb_count = 4;
    if (has_yb_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->yb_count());
    }
    
    // optional uint32 bourse_date = 5;
    if (has_bourse_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->bourse_date());
    }
    
    // optional uint64 bourse_detail = 6;
    if (has_bourse_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt64Size(
          this->bourse_detail());
    }
    
    // optional uint32 role_id = 7;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBBourseDetail::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBBourseDetail* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBBourseDetail*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBBourseDetail::MergeFrom(const PBBourseDetail& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_bourse_doc_no(from.bourse_doc_no());
    }
    if (from._has_bit(1)) {
      set_account_id(from.account_id());
    }
    if (from._has_bit(2)) {
      set_price(from.price());
    }
    if (from._has_bit(3)) {
      set_yb_count(from.yb_count());
    }
    if (from._has_bit(4)) {
      set_bourse_date(from.bourse_date());
    }
    if (from._has_bit(5)) {
      set_bourse_detail(from.bourse_detail());
    }
    if (from._has_bit(6)) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBBourseDetail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBourseDetail::CopyFrom(const PBBourseDetail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBourseDetail::Swap(PBBourseDetail* other) {
  if (other != this) {
    std::swap(bourse_doc_no_, other->bourse_doc_no_);
    std::swap(account_id_, other->account_id_);
    std::swap(price_, other->price_);
    std::swap(yb_count_, other->yb_count_);
    std::swap(bourse_date_, other->bourse_date_);
    std::swap(bourse_detail_, other->bourse_detail_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBBourseDetail::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBBourseDetail::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBBourseDetail::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBBourseDetail_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int PBBourseDetailList::kListFieldNumber;
#endif  // !_MSC_VER

PBBourseDetailList::PBBourseDetailList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBBourseDetailList::InitAsDefaultInstance() {}

PBBourseDetailList::PBBourseDetailList(const PBBourseDetailList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBBourseDetailList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBBourseDetailList::~PBBourseDetailList() {
  SharedDtor();
}

void PBBourseDetailList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBBourseDetailList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBourseDetailList_descriptor_;
}

const PBBourseDetailList& PBBourseDetailList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

PBBourseDetailList* PBBourseDetailList::default_instance_ = NULL;

PBBourseDetailList* PBBourseDetailList::New() const {
  return new PBBourseDetailList;
}

void PBBourseDetailList::Clear() {
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBBourseDetailList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // repeated .PBBourseDetail list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_list:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_list()));
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBBourseDetailList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBBourseDetailList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .PBBourseDetail list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBBourseDetailList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBBourseDetail list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBBourseDetailList::ByteSize() const {
  int total_size = 0;
  
  // repeated .PBBourseDetail list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBBourseDetailList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBBourseDetailList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBBourseDetailList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBBourseDetailList::MergeFrom(const PBBourseDetailList& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBBourseDetailList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBourseDetailList::CopyFrom(const PBBourseDetailList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBourseDetailList::Swap(PBBourseDetailList* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBBourseDetailList::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBBourseDetailList::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBBourseDetailList::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBBourseDetailList_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseAccountNotify::kAccountFieldNumber;
const int CMessageBourseAccountNotify::kYBFieldNumber;
const int CMessageBourseAccountNotify::kNotifyCodeFieldNumber;
const int CMessageBourseAccountNotify::kParam1FieldNumber;
const int CMessageBourseAccountNotify::kParam2FieldNumber;
const int CMessageBourseAccountNotify::kParam3FieldNumber;
#endif  // !_MSC_VER

CMessageBourseAccountNotify::CMessageBourseAccountNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseAccountNotify::InitAsDefaultInstance() {  account_ = const_cast< ::PBBourseAccountInfo*>(&::PBBourseAccountInfo::default_instance());
}

CMessageBourseAccountNotify::CMessageBourseAccountNotify(const CMessageBourseAccountNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseAccountNotify::SharedCtor() {
  _cached_size_ = 0;
  account_ = NULL;
  yb_ = 0u;
  notifycode_ = 0u;
  param1_ = 0u;
  param2_ = 0u;
  param3_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseAccountNotify::~CMessageBourseAccountNotify() {
  SharedDtor();
}

void CMessageBourseAccountNotify::SharedDtor() {
  if (this != default_instance_) {
    delete account_;
  }
}

const ::google::protobuf::Descriptor* CMessageBourseAccountNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseAccountNotify_descriptor_;
}

const CMessageBourseAccountNotify& CMessageBourseAccountNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseAccountNotify* CMessageBourseAccountNotify::default_instance_ = NULL;

CMessageBourseAccountNotify* CMessageBourseAccountNotify::New() const {
  return new CMessageBourseAccountNotify;
}

void CMessageBourseAccountNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (account_ != NULL) account_->::PBBourseAccountInfo::Clear();
    }
    yb_ = 0u;
    notifycode_ = 0u;
    param1_ = 0u;
    param2_ = 0u;
    param3_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseAccountNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .PBBourseAccountInfo Account = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_account()));
        if (input->ExpectTag(16)) goto parse_YB;
        break;
      }
      
      // optional uint32 YB = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_YB:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &yb_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_NotifyCode;
        break;
      }
      
      // optional uint32 NotifyCode = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_NotifyCode:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &notifycode_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_Param1;
        break;
      }
      
      // optional uint32 Param1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Param1:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &param1_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_Param2;
        break;
      }
      
      // optional uint32 Param2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Param2:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &param2_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_Param3;
        break;
      }
      
      // optional uint32 Param3 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Param3:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &param3_));
        _set_bit(5);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseAccountNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseAccountNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .PBBourseAccountInfo Account = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->account(), output);
  }
  
  // optional uint32 YB = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->yb(), output);
  }
  
  // optional uint32 NotifyCode = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->notifycode(), output);
  }
  
  // optional uint32 Param1 = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->param1(), output);
  }
  
  // optional uint32 Param2 = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->param2(), output);
  }
  
  // optional uint32 Param3 = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->param3(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseAccountNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBBourseAccountInfo Account = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->account(), target);
  }
  
  // optional uint32 YB = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->yb(), target);
  }
  
  // optional uint32 NotifyCode = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->notifycode(), target);
  }
  
  // optional uint32 Param1 = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->param1(), target);
  }
  
  // optional uint32 Param2 = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->param2(), target);
  }
  
  // optional uint32 Param3 = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->param3(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseAccountNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBBourseAccountInfo Account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->account());
    }
    
    // optional uint32 YB = 2;
    if (has_yb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->yb());
    }
    
    // optional uint32 NotifyCode = 3;
    if (has_notifycode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->notifycode());
    }
    
    // optional uint32 Param1 = 4;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->param1());
    }
    
    // optional uint32 Param2 = 5;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->param2());
    }
    
    // optional uint32 Param3 = 6;
    if (has_param3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->param3());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseAccountNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseAccountNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseAccountNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseAccountNotify::MergeFrom(const CMessageBourseAccountNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_account()->::PBBourseAccountInfo::MergeFrom(from.account());
    }
    if (from._has_bit(1)) {
      set_yb(from.yb());
    }
    if (from._has_bit(2)) {
      set_notifycode(from.notifycode());
    }
    if (from._has_bit(3)) {
      set_param1(from.param1());
    }
    if (from._has_bit(4)) {
      set_param2(from.param2());
    }
    if (from._has_bit(5)) {
      set_param3(from.param3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseAccountNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseAccountNotify::CopyFrom(const CMessageBourseAccountNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseAccountNotify::Swap(CMessageBourseAccountNotify* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(yb_, other->yb_);
    std::swap(notifycode_, other->notifycode_);
    std::swap(param1_, other->param1_);
    std::swap(param2_, other->param2_);
    std::swap(param3_, other->param3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseAccountNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseAccountNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseAccountNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseAccountNotify_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseCode::kCodeFieldNumber;
#endif  // !_MSC_VER

CMessageBourseCode::CMessageBourseCode()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseCode::InitAsDefaultInstance() {}

CMessageBourseCode::CMessageBourseCode(const CMessageBourseCode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseCode::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseCode::~CMessageBourseCode() {
  SharedDtor();
}

void CMessageBourseCode::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseCode_descriptor_;
}

const CMessageBourseCode& CMessageBourseCode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseCode* CMessageBourseCode::default_instance_ = NULL;

CMessageBourseCode* CMessageBourseCode::New() const {
  return new CMessageBourseCode;
}

void CMessageBourseCode::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    code_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &code_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseCode::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Code = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseCode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Code = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseCode::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseCode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseCode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseCode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseCode::MergeFrom(const CMessageBourseCode& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseCode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseCode::CopyFrom(const CMessageBourseCode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseCode::Swap(CMessageBourseCode* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseCode::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseCode::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseCode::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseCode_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseIncAccount::kAccountIncFieldNumber;
#endif  // !_MSC_VER

CMessageBourseIncAccount::CMessageBourseIncAccount()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseIncAccount::InitAsDefaultInstance() {  accountinc_ = const_cast< ::PBBourseAccountInfo*>(&::PBBourseAccountInfo::default_instance());
}

CMessageBourseIncAccount::CMessageBourseIncAccount(const CMessageBourseIncAccount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseIncAccount::SharedCtor() {
  _cached_size_ = 0;
  accountinc_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseIncAccount::~CMessageBourseIncAccount() {
  SharedDtor();
}

void CMessageBourseIncAccount::SharedDtor() {
  if (this != default_instance_) {
    delete accountinc_;
  }
}

const ::google::protobuf::Descriptor* CMessageBourseIncAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseIncAccount_descriptor_;
}

const CMessageBourseIncAccount& CMessageBourseIncAccount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseIncAccount* CMessageBourseIncAccount::default_instance_ = NULL;

CMessageBourseIncAccount* CMessageBourseIncAccount::New() const {
  return new CMessageBourseIncAccount;
}

void CMessageBourseIncAccount::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (accountinc_ != NULL) accountinc_->::PBBourseAccountInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseIncAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .PBBourseAccountInfo AccountInc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_accountinc()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseIncAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseIncAccount::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .PBBourseAccountInfo AccountInc = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->accountinc(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseIncAccount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBBourseAccountInfo AccountInc = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->accountinc(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseIncAccount::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBBourseAccountInfo AccountInc = 1;
    if (has_accountinc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->accountinc());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseIncAccount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseIncAccount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseIncAccount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseIncAccount::MergeFrom(const CMessageBourseIncAccount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_accountinc()->::PBBourseAccountInfo::MergeFrom(from.accountinc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseIncAccount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseIncAccount::CopyFrom(const CMessageBourseIncAccount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseIncAccount::Swap(CMessageBourseIncAccount* other) {
  if (other != this) {
    std::swap(accountinc_, other->accountinc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseIncAccount::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseIncAccount::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseIncAccount::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseIncAccount_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseDecAccount::kAccountDecFieldNumber;
#endif  // !_MSC_VER

CMessageBourseDecAccount::CMessageBourseDecAccount()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseDecAccount::InitAsDefaultInstance() {  accountdec_ = const_cast< ::PBBourseAccountInfo*>(&::PBBourseAccountInfo::default_instance());
}

CMessageBourseDecAccount::CMessageBourseDecAccount(const CMessageBourseDecAccount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseDecAccount::SharedCtor() {
  _cached_size_ = 0;
  accountdec_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseDecAccount::~CMessageBourseDecAccount() {
  SharedDtor();
}

void CMessageBourseDecAccount::SharedDtor() {
  if (this != default_instance_) {
    delete accountdec_;
  }
}

const ::google::protobuf::Descriptor* CMessageBourseDecAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseDecAccount_descriptor_;
}

const CMessageBourseDecAccount& CMessageBourseDecAccount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseDecAccount* CMessageBourseDecAccount::default_instance_ = NULL;

CMessageBourseDecAccount* CMessageBourseDecAccount::New() const {
  return new CMessageBourseDecAccount;
}

void CMessageBourseDecAccount::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (accountdec_ != NULL) accountdec_->::PBBourseAccountInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseDecAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .PBBourseAccountInfo AccountDec = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_accountdec()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseDecAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseDecAccount::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .PBBourseAccountInfo AccountDec = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->accountdec(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseDecAccount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBBourseAccountInfo AccountDec = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->accountdec(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseDecAccount::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBBourseAccountInfo AccountDec = 1;
    if (has_accountdec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->accountdec());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseDecAccount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseDecAccount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseDecAccount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseDecAccount::MergeFrom(const CMessageBourseDecAccount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_accountdec()->::PBBourseAccountInfo::MergeFrom(from.accountdec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseDecAccount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseDecAccount::CopyFrom(const CMessageBourseDecAccount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseDecAccount::Swap(CMessageBourseDecAccount* other) {
  if (other != this) {
    std::swap(accountdec_, other->accountdec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseDecAccount::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseDecAccount::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseDecAccount::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseDecAccount_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMessageBourseAccountLoad::CMessageBourseAccountLoad()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseAccountLoad::InitAsDefaultInstance() {}

CMessageBourseAccountLoad::CMessageBourseAccountLoad(const CMessageBourseAccountLoad& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseAccountLoad::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseAccountLoad::~CMessageBourseAccountLoad() {
  SharedDtor();
}

void CMessageBourseAccountLoad::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseAccountLoad::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseAccountLoad_descriptor_;
}

const CMessageBourseAccountLoad& CMessageBourseAccountLoad::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseAccountLoad* CMessageBourseAccountLoad::default_instance_ = NULL;

CMessageBourseAccountLoad* CMessageBourseAccountLoad::New() const {
  return new CMessageBourseAccountLoad;
}

void CMessageBourseAccountLoad::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseAccountLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMessageBourseAccountLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseAccountLoad::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseAccountLoad::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseAccountLoad::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseAccountLoad::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseAccountLoad* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseAccountLoad*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseAccountLoad::MergeFrom(const CMessageBourseAccountLoad& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseAccountLoad::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseAccountLoad::CopyFrom(const CMessageBourseAccountLoad& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseAccountLoad::Swap(CMessageBourseAccountLoad* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseAccountLoad::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseAccountLoad::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseAccountLoad::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseAccountLoad_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseAccountAddBuy::kPriceFieldNumber;
const int CMessageBourseAccountAddBuy::kYbCountFieldNumber;
#endif  // !_MSC_VER

CMessageBourseAccountAddBuy::CMessageBourseAccountAddBuy()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseAccountAddBuy::InitAsDefaultInstance() {}

CMessageBourseAccountAddBuy::CMessageBourseAccountAddBuy(const CMessageBourseAccountAddBuy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseAccountAddBuy::SharedCtor() {
  _cached_size_ = 0;
  price_ = 0u;
  yb_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseAccountAddBuy::~CMessageBourseAccountAddBuy() {
  SharedDtor();
}

void CMessageBourseAccountAddBuy::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseAccountAddBuy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseAccountAddBuy_descriptor_;
}

const CMessageBourseAccountAddBuy& CMessageBourseAccountAddBuy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseAccountAddBuy* CMessageBourseAccountAddBuy::default_instance_ = NULL;

CMessageBourseAccountAddBuy* CMessageBourseAccountAddBuy::New() const {
  return new CMessageBourseAccountAddBuy;
}

void CMessageBourseAccountAddBuy::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    price_ = 0u;
    yb_count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseAccountAddBuy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 price = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &price_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_yb_count;
        break;
      }
      
      // optional uint32 yb_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_yb_count:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &yb_count_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseAccountAddBuy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseAccountAddBuy::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 price = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->price(), output);
  }
  
  // optional uint32 yb_count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->yb_count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseAccountAddBuy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 price = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->price(), target);
  }
  
  // optional uint32 yb_count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->yb_count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseAccountAddBuy::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 price = 1;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->price());
    }
    
    // optional uint32 yb_count = 2;
    if (has_yb_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->yb_count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseAccountAddBuy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseAccountAddBuy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseAccountAddBuy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseAccountAddBuy::MergeFrom(const CMessageBourseAccountAddBuy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_price(from.price());
    }
    if (from._has_bit(1)) {
      set_yb_count(from.yb_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseAccountAddBuy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseAccountAddBuy::CopyFrom(const CMessageBourseAccountAddBuy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseAccountAddBuy::Swap(CMessageBourseAccountAddBuy* other) {
  if (other != this) {
    std::swap(price_, other->price_);
    std::swap(yb_count_, other->yb_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseAccountAddBuy::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseAccountAddBuy::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseAccountAddBuy::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseAccountAddBuy_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseAccountAddSell::kPriceFieldNumber;
const int CMessageBourseAccountAddSell::kYbCountFieldNumber;
#endif  // !_MSC_VER

CMessageBourseAccountAddSell::CMessageBourseAccountAddSell()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseAccountAddSell::InitAsDefaultInstance() {}

CMessageBourseAccountAddSell::CMessageBourseAccountAddSell(const CMessageBourseAccountAddSell& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseAccountAddSell::SharedCtor() {
  _cached_size_ = 0;
  price_ = 0u;
  yb_count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseAccountAddSell::~CMessageBourseAccountAddSell() {
  SharedDtor();
}

void CMessageBourseAccountAddSell::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseAccountAddSell::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseAccountAddSell_descriptor_;
}

const CMessageBourseAccountAddSell& CMessageBourseAccountAddSell::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseAccountAddSell* CMessageBourseAccountAddSell::default_instance_ = NULL;

CMessageBourseAccountAddSell* CMessageBourseAccountAddSell::New() const {
  return new CMessageBourseAccountAddSell;
}

void CMessageBourseAccountAddSell::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    price_ = 0u;
    yb_count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseAccountAddSell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 price = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &price_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_yb_count;
        break;
      }
      
      // optional uint32 yb_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_yb_count:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &yb_count_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseAccountAddSell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseAccountAddSell::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 price = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->price(), output);
  }
  
  // optional uint32 yb_count = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->yb_count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseAccountAddSell::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 price = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->price(), target);
  }
  
  // optional uint32 yb_count = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->yb_count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseAccountAddSell::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 price = 1;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->price());
    }
    
    // optional uint32 yb_count = 2;
    if (has_yb_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->yb_count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseAccountAddSell::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseAccountAddSell* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseAccountAddSell*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseAccountAddSell::MergeFrom(const CMessageBourseAccountAddSell& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_price(from.price());
    }
    if (from._has_bit(1)) {
      set_yb_count(from.yb_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseAccountAddSell::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseAccountAddSell::CopyFrom(const CMessageBourseAccountAddSell& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseAccountAddSell::Swap(CMessageBourseAccountAddSell* other) {
  if (other != this) {
    std::swap(price_, other->price_);
    std::swap(yb_count_, other->yb_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseAccountAddSell::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseAccountAddSell::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseAccountAddSell::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseAccountAddSell_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMessageBourseLoadSelfList::CMessageBourseLoadSelfList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseLoadSelfList::InitAsDefaultInstance() {}

CMessageBourseLoadSelfList::CMessageBourseLoadSelfList(const CMessageBourseLoadSelfList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseLoadSelfList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseLoadSelfList::~CMessageBourseLoadSelfList() {
  SharedDtor();
}

void CMessageBourseLoadSelfList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseLoadSelfList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseLoadSelfList_descriptor_;
}

const CMessageBourseLoadSelfList& CMessageBourseLoadSelfList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseLoadSelfList* CMessageBourseLoadSelfList::default_instance_ = NULL;

CMessageBourseLoadSelfList* CMessageBourseLoadSelfList::New() const {
  return new CMessageBourseLoadSelfList;
}

void CMessageBourseLoadSelfList::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseLoadSelfList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMessageBourseLoadSelfList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseLoadSelfList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseLoadSelfList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseLoadSelfList::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseLoadSelfList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseLoadSelfList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseLoadSelfList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseLoadSelfList::MergeFrom(const CMessageBourseLoadSelfList& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseLoadSelfList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseLoadSelfList::CopyFrom(const CMessageBourseLoadSelfList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseLoadSelfList::Swap(CMessageBourseLoadSelfList* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseLoadSelfList::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseLoadSelfList::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseLoadSelfList::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseLoadSelfList_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseSelfListNotice::kBuyListFieldNumber;
const int CMessageBourseSelfListNotice::kSellListFieldNumber;
#endif  // !_MSC_VER

CMessageBourseSelfListNotice::CMessageBourseSelfListNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseSelfListNotice::InitAsDefaultInstance() {  buylist_ = const_cast< ::PBBourseDetailList*>(&::PBBourseDetailList::default_instance());
  selllist_ = const_cast< ::PBBourseDetailList*>(&::PBBourseDetailList::default_instance());
}

CMessageBourseSelfListNotice::CMessageBourseSelfListNotice(const CMessageBourseSelfListNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseSelfListNotice::SharedCtor() {
  _cached_size_ = 0;
  buylist_ = NULL;
  selllist_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseSelfListNotice::~CMessageBourseSelfListNotice() {
  SharedDtor();
}

void CMessageBourseSelfListNotice::SharedDtor() {
  if (this != default_instance_) {
    delete buylist_;
    delete selllist_;
  }
}

const ::google::protobuf::Descriptor* CMessageBourseSelfListNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseSelfListNotice_descriptor_;
}

const CMessageBourseSelfListNotice& CMessageBourseSelfListNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseSelfListNotice* CMessageBourseSelfListNotice::default_instance_ = NULL;

CMessageBourseSelfListNotice* CMessageBourseSelfListNotice::New() const {
  return new CMessageBourseSelfListNotice;
}

void CMessageBourseSelfListNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (buylist_ != NULL) buylist_->::PBBourseDetailList::Clear();
    }
    if (_has_bit(1)) {
      if (selllist_ != NULL) selllist_->::PBBourseDetailList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseSelfListNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .PBBourseDetailList BuyList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_buylist()));
        if (input->ExpectTag(18)) goto parse_SellList;
        break;
      }
      
      // optional .PBBourseDetailList SellList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_SellList:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_selllist()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseSelfListNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseSelfListNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .PBBourseDetailList BuyList = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->buylist(), output);
  }
  
  // optional .PBBourseDetailList SellList = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(2, this->selllist(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseSelfListNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBBourseDetailList BuyList = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->buylist(), target);
  }
  
  // optional .PBBourseDetailList SellList = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(2, this->selllist(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseSelfListNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBBourseDetailList BuyList = 1;
    if (has_buylist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->buylist());
    }
    
    // optional .PBBourseDetailList SellList = 2;
    if (has_selllist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->selllist());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseSelfListNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseSelfListNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseSelfListNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseSelfListNotice::MergeFrom(const CMessageBourseSelfListNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_buylist()->::PBBourseDetailList::MergeFrom(from.buylist());
    }
    if (from._has_bit(1)) {
      mutable_selllist()->::PBBourseDetailList::MergeFrom(from.selllist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseSelfListNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseSelfListNotice::CopyFrom(const CMessageBourseSelfListNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseSelfListNotice::Swap(CMessageBourseSelfListNotice* other) {
  if (other != this) {
    std::swap(buylist_, other->buylist_);
    std::swap(selllist_, other->selllist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseSelfListNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseSelfListNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseSelfListNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseSelfListNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseListNotice::kBuyListFieldNumber;
const int CMessageBourseListNotice::kSellListFieldNumber;
const int CMessageBourseListNotice::kListIDFieldNumber;
#endif  // !_MSC_VER

CMessageBourseListNotice::CMessageBourseListNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseListNotice::InitAsDefaultInstance() {  buylist_ = const_cast< ::PBBourseDetailList*>(&::PBBourseDetailList::default_instance());
  selllist_ = const_cast< ::PBBourseDetailList*>(&::PBBourseDetailList::default_instance());
}

CMessageBourseListNotice::CMessageBourseListNotice(const CMessageBourseListNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseListNotice::SharedCtor() {
  _cached_size_ = 0;
  buylist_ = NULL;
  selllist_ = NULL;
  listid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseListNotice::~CMessageBourseListNotice() {
  SharedDtor();
}

void CMessageBourseListNotice::SharedDtor() {
  if (this != default_instance_) {
    delete buylist_;
    delete selllist_;
  }
}

const ::google::protobuf::Descriptor* CMessageBourseListNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseListNotice_descriptor_;
}

const CMessageBourseListNotice& CMessageBourseListNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseListNotice* CMessageBourseListNotice::default_instance_ = NULL;

CMessageBourseListNotice* CMessageBourseListNotice::New() const {
  return new CMessageBourseListNotice;
}

void CMessageBourseListNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (buylist_ != NULL) buylist_->::PBBourseDetailList::Clear();
    }
    if (_has_bit(1)) {
      if (selllist_ != NULL) selllist_->::PBBourseDetailList::Clear();
    }
    listid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseListNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .PBBourseDetailList BuyList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_buylist()));
        if (input->ExpectTag(18)) goto parse_SellList;
        break;
      }
      
      // optional .PBBourseDetailList SellList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_SellList:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_selllist()));
        if (input->ExpectTag(24)) goto parse_ListID;
        break;
      }
      
      // optional uint32 ListID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ListID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &listid_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseListNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseListNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .PBBourseDetailList BuyList = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->buylist(), output);
  }
  
  // optional .PBBourseDetailList SellList = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(2, this->selllist(), output);
  }
  
  // optional uint32 ListID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->listid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseListNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBBourseDetailList BuyList = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->buylist(), target);
  }
  
  // optional .PBBourseDetailList SellList = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(2, this->selllist(), target);
  }
  
  // optional uint32 ListID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->listid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseListNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBBourseDetailList BuyList = 1;
    if (has_buylist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->buylist());
    }
    
    // optional .PBBourseDetailList SellList = 2;
    if (has_selllist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->selllist());
    }
    
    // optional uint32 ListID = 3;
    if (has_listid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->listid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseListNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseListNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseListNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseListNotice::MergeFrom(const CMessageBourseListNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_buylist()->::PBBourseDetailList::MergeFrom(from.buylist());
    }
    if (from._has_bit(1)) {
      mutable_selllist()->::PBBourseDetailList::MergeFrom(from.selllist());
    }
    if (from._has_bit(2)) {
      set_listid(from.listid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseListNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseListNotice::CopyFrom(const CMessageBourseListNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseListNotice::Swap(CMessageBourseListNotice* other) {
  if (other != this) {
    std::swap(buylist_, other->buylist_);
    std::swap(selllist_, other->selllist_);
    std::swap(listid_, other->listid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseListNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseListNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseListNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseListNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseLoadList::kListIDFieldNumber;
#endif  // !_MSC_VER

CMessageBourseLoadList::CMessageBourseLoadList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseLoadList::InitAsDefaultInstance() {}

CMessageBourseLoadList::CMessageBourseLoadList(const CMessageBourseLoadList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseLoadList::SharedCtor() {
  _cached_size_ = 0;
  listid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseLoadList::~CMessageBourseLoadList() {
  SharedDtor();
}

void CMessageBourseLoadList::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseLoadList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseLoadList_descriptor_;
}

const CMessageBourseLoadList& CMessageBourseLoadList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseLoadList* CMessageBourseLoadList::default_instance_ = NULL;

CMessageBourseLoadList* CMessageBourseLoadList::New() const {
  return new CMessageBourseLoadList;
}

void CMessageBourseLoadList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    listid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseLoadList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 ListID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &listid_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseLoadList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseLoadList::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 ListID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->listid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseLoadList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 ListID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->listid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseLoadList::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ListID = 1;
    if (has_listid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->listid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseLoadList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseLoadList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseLoadList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseLoadList::MergeFrom(const CMessageBourseLoadList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_listid(from.listid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseLoadList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseLoadList::CopyFrom(const CMessageBourseLoadList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseLoadList::Swap(CMessageBourseLoadList* other) {
  if (other != this) {
    std::swap(listid_, other->listid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseLoadList::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseLoadList::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseLoadList::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseLoadList_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseTradeBuyNotice::kDetailFieldNumber;
#endif  // !_MSC_VER

CMessageBourseTradeBuyNotice::CMessageBourseTradeBuyNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseTradeBuyNotice::InitAsDefaultInstance() {  detail_ = const_cast< ::PBBourseDetail*>(&::PBBourseDetail::default_instance());
}

CMessageBourseTradeBuyNotice::CMessageBourseTradeBuyNotice(const CMessageBourseTradeBuyNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseTradeBuyNotice::SharedCtor() {
  _cached_size_ = 0;
  detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseTradeBuyNotice::~CMessageBourseTradeBuyNotice() {
  SharedDtor();
}

void CMessageBourseTradeBuyNotice::SharedDtor() {
  if (this != default_instance_) {
    delete detail_;
  }
}

const ::google::protobuf::Descriptor* CMessageBourseTradeBuyNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseTradeBuyNotice_descriptor_;
}

const CMessageBourseTradeBuyNotice& CMessageBourseTradeBuyNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseTradeBuyNotice* CMessageBourseTradeBuyNotice::default_instance_ = NULL;

CMessageBourseTradeBuyNotice* CMessageBourseTradeBuyNotice::New() const {
  return new CMessageBourseTradeBuyNotice;
}

void CMessageBourseTradeBuyNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (detail_ != NULL) detail_->::PBBourseDetail::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseTradeBuyNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .PBBourseDetail Detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_detail()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseTradeBuyNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseTradeBuyNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .PBBourseDetail Detail = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->detail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseTradeBuyNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBBourseDetail Detail = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->detail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseTradeBuyNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBBourseDetail Detail = 1;
    if (has_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->detail());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseTradeBuyNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseTradeBuyNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseTradeBuyNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseTradeBuyNotice::MergeFrom(const CMessageBourseTradeBuyNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_detail()->::PBBourseDetail::MergeFrom(from.detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseTradeBuyNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseTradeBuyNotice::CopyFrom(const CMessageBourseTradeBuyNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseTradeBuyNotice::Swap(CMessageBourseTradeBuyNotice* other) {
  if (other != this) {
    std::swap(detail_, other->detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseTradeBuyNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseTradeBuyNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseTradeBuyNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseTradeBuyNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseTradeSellNotice::kDetailFieldNumber;
#endif  // !_MSC_VER

CMessageBourseTradeSellNotice::CMessageBourseTradeSellNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseTradeSellNotice::InitAsDefaultInstance() {  detail_ = const_cast< ::PBBourseDetail*>(&::PBBourseDetail::default_instance());
}

CMessageBourseTradeSellNotice::CMessageBourseTradeSellNotice(const CMessageBourseTradeSellNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseTradeSellNotice::SharedCtor() {
  _cached_size_ = 0;
  detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseTradeSellNotice::~CMessageBourseTradeSellNotice() {
  SharedDtor();
}

void CMessageBourseTradeSellNotice::SharedDtor() {
  if (this != default_instance_) {
    delete detail_;
  }
}

const ::google::protobuf::Descriptor* CMessageBourseTradeSellNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseTradeSellNotice_descriptor_;
}

const CMessageBourseTradeSellNotice& CMessageBourseTradeSellNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseTradeSellNotice* CMessageBourseTradeSellNotice::default_instance_ = NULL;

CMessageBourseTradeSellNotice* CMessageBourseTradeSellNotice::New() const {
  return new CMessageBourseTradeSellNotice;
}

void CMessageBourseTradeSellNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (detail_ != NULL) detail_->::PBBourseDetail::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseTradeSellNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .PBBourseDetail Detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_detail()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseTradeSellNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseTradeSellNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .PBBourseDetail Detail = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->detail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseTradeSellNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBBourseDetail Detail = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->detail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseTradeSellNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBBourseDetail Detail = 1;
    if (has_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->detail());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseTradeSellNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseTradeSellNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseTradeSellNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseTradeSellNotice::MergeFrom(const CMessageBourseTradeSellNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_detail()->::PBBourseDetail::MergeFrom(from.detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseTradeSellNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseTradeSellNotice::CopyFrom(const CMessageBourseTradeSellNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseTradeSellNotice::Swap(CMessageBourseTradeSellNotice* other) {
  if (other != this) {
    std::swap(detail_, other->detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseTradeSellNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseTradeSellNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseTradeSellNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseTradeSellNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseDecBuyDoc::kDocFieldNumber;
#endif  // !_MSC_VER

CMessageBourseDecBuyDoc::CMessageBourseDecBuyDoc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseDecBuyDoc::InitAsDefaultInstance() {}

CMessageBourseDecBuyDoc::CMessageBourseDecBuyDoc(const CMessageBourseDecBuyDoc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseDecBuyDoc::SharedCtor() {
  _cached_size_ = 0;
  doc_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseDecBuyDoc::~CMessageBourseDecBuyDoc() {
  SharedDtor();
}

void CMessageBourseDecBuyDoc::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseDecBuyDoc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseDecBuyDoc_descriptor_;
}

const CMessageBourseDecBuyDoc& CMessageBourseDecBuyDoc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseDecBuyDoc* CMessageBourseDecBuyDoc::default_instance_ = NULL;

CMessageBourseDecBuyDoc* CMessageBourseDecBuyDoc::New() const {
  return new CMessageBourseDecBuyDoc;
}

void CMessageBourseDecBuyDoc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    doc_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseDecBuyDoc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Doc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &doc_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseDecBuyDoc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseDecBuyDoc::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Doc = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->doc(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseDecBuyDoc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Doc = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->doc(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseDecBuyDoc::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Doc = 1;
    if (has_doc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->doc());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseDecBuyDoc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseDecBuyDoc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseDecBuyDoc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseDecBuyDoc::MergeFrom(const CMessageBourseDecBuyDoc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_doc(from.doc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseDecBuyDoc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseDecBuyDoc::CopyFrom(const CMessageBourseDecBuyDoc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseDecBuyDoc::Swap(CMessageBourseDecBuyDoc* other) {
  if (other != this) {
    std::swap(doc_, other->doc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseDecBuyDoc::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseDecBuyDoc::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseDecBuyDoc::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseDecBuyDoc_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseDecSellDoc::kDocFieldNumber;
#endif  // !_MSC_VER

CMessageBourseDecSellDoc::CMessageBourseDecSellDoc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseDecSellDoc::InitAsDefaultInstance() {}

CMessageBourseDecSellDoc::CMessageBourseDecSellDoc(const CMessageBourseDecSellDoc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseDecSellDoc::SharedCtor() {
  _cached_size_ = 0;
  doc_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseDecSellDoc::~CMessageBourseDecSellDoc() {
  SharedDtor();
}

void CMessageBourseDecSellDoc::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseDecSellDoc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseDecSellDoc_descriptor_;
}

const CMessageBourseDecSellDoc& CMessageBourseDecSellDoc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseDecSellDoc* CMessageBourseDecSellDoc::default_instance_ = NULL;

CMessageBourseDecSellDoc* CMessageBourseDecSellDoc::New() const {
  return new CMessageBourseDecSellDoc;
}

void CMessageBourseDecSellDoc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    doc_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseDecSellDoc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Doc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &doc_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseDecSellDoc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseDecSellDoc::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Doc = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->doc(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseDecSellDoc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Doc = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->doc(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseDecSellDoc::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Doc = 1;
    if (has_doc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->doc());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseDecSellDoc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseDecSellDoc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseDecSellDoc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseDecSellDoc::MergeFrom(const CMessageBourseDecSellDoc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_doc(from.doc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseDecSellDoc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseDecSellDoc::CopyFrom(const CMessageBourseDecSellDoc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseDecSellDoc::Swap(CMessageBourseDecSellDoc* other) {
  if (other != this) {
    std::swap(doc_, other->doc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseDecSellDoc::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseDecSellDoc::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseDecSellDoc::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseDecSellDoc_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageBourseTradeLog::kBuyLogFieldNumber;
const int CMessageBourseTradeLog::kSellLogFieldNumber;
#endif  // !_MSC_VER

CMessageBourseTradeLog::CMessageBourseTradeLog()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseTradeLog::InitAsDefaultInstance() {  buy_log_ = const_cast< ::PBBourseDetailList*>(&::PBBourseDetailList::default_instance());
  sell_log_ = const_cast< ::PBBourseDetailList*>(&::PBBourseDetailList::default_instance());
}

CMessageBourseTradeLog::CMessageBourseTradeLog(const CMessageBourseTradeLog& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseTradeLog::SharedCtor() {
  _cached_size_ = 0;
  buy_log_ = NULL;
  sell_log_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseTradeLog::~CMessageBourseTradeLog() {
  SharedDtor();
}

void CMessageBourseTradeLog::SharedDtor() {
  if (this != default_instance_) {
    delete buy_log_;
    delete sell_log_;
  }
}

const ::google::protobuf::Descriptor* CMessageBourseTradeLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseTradeLog_descriptor_;
}

const CMessageBourseTradeLog& CMessageBourseTradeLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseTradeLog* CMessageBourseTradeLog::default_instance_ = NULL;

CMessageBourseTradeLog* CMessageBourseTradeLog::New() const {
  return new CMessageBourseTradeLog;
}

void CMessageBourseTradeLog::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (buy_log_ != NULL) buy_log_->::PBBourseDetailList::Clear();
    }
    if (_has_bit(1)) {
      if (sell_log_ != NULL) sell_log_->::PBBourseDetailList::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseTradeLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .PBBourseDetailList buy_log = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_buy_log()));
        if (input->ExpectTag(18)) goto parse_sell_log;
        break;
      }
      
      // optional .PBBourseDetailList sell_log = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_sell_log:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_sell_log()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageBourseTradeLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseTradeLog::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional .PBBourseDetailList buy_log = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->buy_log(), output);
  }
  
  // optional .PBBourseDetailList sell_log = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(2, this->sell_log(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseTradeLog::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBBourseDetailList buy_log = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->buy_log(), target);
  }
  
  // optional .PBBourseDetailList sell_log = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(2, this->sell_log(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseTradeLog::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBBourseDetailList buy_log = 1;
    if (has_buy_log()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->buy_log());
    }
    
    // optional .PBBourseDetailList sell_log = 2;
    if (has_sell_log()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->sell_log());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseTradeLog::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseTradeLog* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseTradeLog*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseTradeLog::MergeFrom(const CMessageBourseTradeLog& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_buy_log()->::PBBourseDetailList::MergeFrom(from.buy_log());
    }
    if (from._has_bit(1)) {
      mutable_sell_log()->::PBBourseDetailList::MergeFrom(from.sell_log());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseTradeLog::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseTradeLog::CopyFrom(const CMessageBourseTradeLog& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseTradeLog::Swap(CMessageBourseTradeLog* other) {
  if (other != this) {
    std::swap(buy_log_, other->buy_log_);
    std::swap(sell_log_, other->sell_log_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseTradeLog::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseTradeLog::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseTradeLog::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseTradeLog_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMessageBourseTradeLogQuery::CMessageBourseTradeLogQuery()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageBourseTradeLogQuery::InitAsDefaultInstance() {}

CMessageBourseTradeLogQuery::CMessageBourseTradeLogQuery(const CMessageBourseTradeLogQuery& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageBourseTradeLogQuery::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageBourseTradeLogQuery::~CMessageBourseTradeLogQuery() {
  SharedDtor();
}

void CMessageBourseTradeLogQuery::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageBourseTradeLogQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseTradeLogQuery_descriptor_;
}

const CMessageBourseTradeLogQuery& CMessageBourseTradeLogQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_boursemessage_5fpb_2ehxx();  return *default_instance_;
}

CMessageBourseTradeLogQuery* CMessageBourseTradeLogQuery::default_instance_ = NULL;

CMessageBourseTradeLogQuery* CMessageBourseTradeLogQuery::New() const {
  return new CMessageBourseTradeLogQuery;
}

void CMessageBourseTradeLogQuery::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageBourseTradeLogQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMessageBourseTradeLogQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageBourseTradeLogQuery::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageBourseTradeLogQuery::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageBourseTradeLogQuery::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageBourseTradeLogQuery::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageBourseTradeLogQuery* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageBourseTradeLogQuery*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageBourseTradeLogQuery::MergeFrom(const CMessageBourseTradeLogQuery& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageBourseTradeLogQuery::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseTradeLogQuery::CopyFrom(const CMessageBourseTradeLogQuery& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageBourseTradeLogQuery::Swap(CMessageBourseTradeLogQuery* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageBourseTradeLogQuery::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageBourseTradeLogQuery::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageBourseTradeLogQuery::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageBourseTradeLogQuery_reflection_;
}
