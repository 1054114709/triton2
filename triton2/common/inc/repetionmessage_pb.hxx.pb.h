// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_repetionmessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_repetionmessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "coremessage_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();

class CMessageRepetionTeamIn;
class CMessageRepetionErrCode;
class CMessageRepetionNpcAdventNotice;
class CMessageRepetionEventNotic;
class CMessageS2CBattleJoinNotice;
class CMessageBattleWaitResponse;
class CMessageC2SBattleJoin;
class CMessageC2SBattleJoinRandomPlace;
class CMessageBattleTeamWaitRequest;
class CMessageBattleSingleWaitRequest;
class CMessageC2SBattleWaitLeaveRequest;
class CMessageS2CBattleWaitLeaveResponse;
class CMessageC2SRepetionLeave;
class CMessageRepetionIndexNotice;
class CMessageRepetionUseItemIntoNotice;
class CMessageRepetionUseItemIntoResponse;
class CMessageRepetionFuncPlayerClick;
class CMessageBattleTeamFixWaitRequest;
class CMessageBattleSingleFixWaitRequest;
class CMessageHaveSignUpBattle;
class CMessageBattleOnTimeOpenNotice;
class CMessageC2SJoinOnTimeOpenBattleRequest;
class CMessageC2SGetRandomTeleChargeRequest;
class CMessageS2CGetRandomTeleChargeResponse;
class CMessageC2SRrandomTeleRequest;
class CMessageApplyGlobalWarRequest;
class CMessageApplyGlobalWarResponse;
class CMessageEnterGlobalWarRequest;
class CMessageEnterGlobalWarResponse;
class CMessageCanEnterGlobalWarNotify;
class CMessagePlayerLeaveGlobalWarRequest;
class CMessagePlayerLeaveGlobalWarResponse;
class CMessageKickCampPlayerRequest;
class CMessageKickCampPlayerResponse;
class CMessageKickCampPlayerNotify;
class CMessageVoteToKickPlayerRequest;
class CMessageVoteToKickPlayerResponse;
class CMesssageKickResultNoitfy;
class CMessageIntoCorpsBossRepetionRequest;
class CMessageEnterLastReptionRequest;
class CMessageEnterLastReptionResponse;

enum RepetionMessageID {
  REPETIONMSG = 11264,
  ID_S2S_REPETION_TEAM_IN = 11777,
  ID_S2C_REPETION_ERR = 11778,
  ID_S2C_REPETION_ADVENT = 11267,
  ID_S2C_REPETION_EVENT = 11268,
  ID_S2C_BATTLE_JOIN_NOTICE = 11269,
  ID_C2S_BATTLE_JOIN = 11270,
  ID_S2C_BATTLE_WAIT_RESPONSE = 11271,
  ID_C2S_BATTLE_TEAM_WAIT_REQUEST = 11272,
  ID_S2C_BATTLE_WAIT_LEAVE_RESPONSE = 11273,
  ID_C2S_BATTLE_WAIT_LEAVE_REQUEST = 11274,
  ID_C2S_REPETION_LEAVE = 11275,
  ID_C2S_BATTLE_SINGLE_WAIT_REQUEST = 11276,
  ID_S2C_REPETIONINDEX_NOTICE = 11277,
  ID_S2C_USEITEM_INTO_NOTICE = 11278,
  ID_C2S_USEITEM_INTO_RESPINSE = 11280,
  ID_C2S_REPETION_FUNC = 11281,
  ID_C2S_BATTLE_TEAM_FIX_WAIT_REQUEST = 11282,
  ID_C2S_BATTLE_SINGLE_FIX_WAIT_REQUEST = 11283,
  ID_C2S_BATTLE_JOIN_RANDOM_PLACE = 11284,
  ID_S2C_HAVE_SIGN_UP_BATTLE = 11285,
  ID_S2C_BATTLE_ON_TIME_OPEN = 11286,
  ID_C2S_JOIN_ON_TIME_OPEN_BATTLE_REQUEST = 11287,
  ID_C2S_GET_RANDOM_TELE_CHARGE_REQUEST = 11288,
  ID_S2C_GET_RANDOM_TELE_CHARGE_RESPONSE = 11289,
  ID_C2S_RANDOM_TELE_REQUEST = 11290,
  ID_C2S_REQUEST_APPLYGLOBALWAR = 11291,
  ID_S2C_RESPONSE_APPLYGLOBALWAR = 11292,
  ID_C2S_REQUEST_ENTERGLOBALWAR = 11293,
  ID_S2C_RESPONSE_ENTERGLOBALWAR = 11294,
  ID_S2C_NOTIFY_CANENTERGLOBALWAR = 11295,
  ID_C2S_REQUEST_LEAVEGLOBALWAR = 11296,
  ID_S2C_RESPONSE_LEAVEGLOBALWAR = 11297,
  ID_C2S_REQUEST_KICKCAMPPLAYER = 11298,
  ID_S2C_RESPONSE_KICKCAMPPLAYER = 11299,
  ID_S2C_NOTIFY_KICKCAMPPLAYER = 11300,
  ID_C2S_REQUEST_VOTETOKICKPLAYER = 11301,
  ID_S2C_RESPONSE_VOTETOKICKPLAYER = 11302,
  ID_S2C_NOTIFY_KICKRESULT = 11303,
  ID_C2S_INTO_CORPSBOSSREPETION_REQUEST = 11304,
  ID_C2S_REQUEST_ENTERLASTREPETION = 11305,
  ID_S2C_RESPONSE_ENTERLASTREPETION = 11306
};
const ::google::protobuf::EnumDescriptor* RepetionMessageID_descriptor();
bool RepetionMessageID_IsValid(int value);
const RepetionMessageID RepetionMessageID_MIN = REPETIONMSG;
const RepetionMessageID RepetionMessageID_MAX = ID_S2C_REPETION_ERR;

inline const ::std::string& RepetionMessageID_Name(RepetionMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    RepetionMessageID_descriptor(), value);
}
inline bool RepetionMessageID_Parse(
    const ::std::string& name, RepetionMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RepetionMessageID>(
    RepetionMessageID_descriptor(), name, value);
}
// ===================================================================

class CMessageRepetionTeamIn : public ::google::protobuf::Message {
 public:
  CMessageRepetionTeamIn();
  virtual ~CMessageRepetionTeamIn();
  
  CMessageRepetionTeamIn(const CMessageRepetionTeamIn& from);
  
  inline CMessageRepetionTeamIn& operator=(const CMessageRepetionTeamIn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRepetionTeamIn& default_instance();
  void Swap(CMessageRepetionTeamIn* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRepetionTeamIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRepetionTeamIn& from);
  void MergeFrom(const CMessageRepetionTeamIn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 mapid = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 destcharid = 3;
  inline bool has_destcharid() const;
  inline void clear_destcharid();
  static const int kDestcharidFieldNumber = 3;
  inline ::google::protobuf::uint32 destcharid() const;
  inline void set_destcharid(::google::protobuf::uint32 value);
  
  // optional uint32 srccharid = 4;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrccharidFieldNumber = 4;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 destcharid_;
  ::google::protobuf::uint32 srccharid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRepetionTeamIn* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRepetionErrCode : public ::google::protobuf::Message {
 public:
  CMessageRepetionErrCode();
  virtual ~CMessageRepetionErrCode();
  
  CMessageRepetionErrCode(const CMessageRepetionErrCode& from);
  
  inline CMessageRepetionErrCode& operator=(const CMessageRepetionErrCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRepetionErrCode& default_instance();
  void Swap(CMessageRepetionErrCode* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRepetionErrCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRepetionErrCode& from);
  void MergeFrom(const CMessageRepetionErrCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 code() const;
  inline void set_code(::google::protobuf::uint32 value);
  
  // optional uint32 Parame1 = 3;
  inline bool has_parame1() const;
  inline void clear_parame1();
  static const int kParame1FieldNumber = 3;
  inline ::google::protobuf::uint32 parame1() const;
  inline void set_parame1(::google::protobuf::uint32 value);
  
  // optional uint32 Parame2 = 4;
  inline bool has_parame2() const;
  inline void clear_parame2();
  static const int kParame2FieldNumber = 4;
  inline ::google::protobuf::uint32 parame2() const;
  inline void set_parame2(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 5;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 code_;
  ::google::protobuf::uint32 parame1_;
  ::google::protobuf::uint32 parame2_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRepetionErrCode* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRepetionNpcAdventNotice : public ::google::protobuf::Message {
 public:
  CMessageRepetionNpcAdventNotice();
  virtual ~CMessageRepetionNpcAdventNotice();
  
  CMessageRepetionNpcAdventNotice(const CMessageRepetionNpcAdventNotice& from);
  
  inline CMessageRepetionNpcAdventNotice& operator=(const CMessageRepetionNpcAdventNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRepetionNpcAdventNotice& default_instance();
  void Swap(CMessageRepetionNpcAdventNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRepetionNpcAdventNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRepetionNpcAdventNotice& from);
  void MergeFrom(const CMessageRepetionNpcAdventNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TemplateID = 1;
  inline bool has_templateid() const;
  inline void clear_templateid();
  static const int kTemplateIDFieldNumber = 1;
  inline ::google::protobuf::uint32 templateid() const;
  inline void set_templateid(::google::protobuf::uint32 value);
  
  // optional uint32 Time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 templateid_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRepetionNpcAdventNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRepetionEventNotic : public ::google::protobuf::Message {
 public:
  CMessageRepetionEventNotic();
  virtual ~CMessageRepetionEventNotic();
  
  CMessageRepetionEventNotic(const CMessageRepetionEventNotic& from);
  
  inline CMessageRepetionEventNotic& operator=(const CMessageRepetionEventNotic& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRepetionEventNotic& default_instance();
  void Swap(CMessageRepetionEventNotic* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRepetionEventNotic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRepetionEventNotic& from);
  void MergeFrom(const CMessageRepetionEventNotic& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EventID = 1;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventIDFieldNumber = 1;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Parame1 = 3;
  inline bool has_parame1() const;
  inline void clear_parame1();
  static const int kParame1FieldNumber = 3;
  inline ::google::protobuf::uint32 parame1() const;
  inline void set_parame1(::google::protobuf::uint32 value);
  
  // optional uint32 Parame2 = 4;
  inline bool has_parame2() const;
  inline void clear_parame2();
  static const int kParame2FieldNumber = 4;
  inline ::google::protobuf::uint32 parame2() const;
  inline void set_parame2(::google::protobuf::uint32 value);
  
  // optional string Parame3 = 5;
  inline bool has_parame3() const;
  inline void clear_parame3();
  static const int kParame3FieldNumber = 5;
  inline const ::std::string& parame3() const;
  inline void set_parame3(const ::std::string& value);
  inline void set_parame3(const char* value);
  inline void set_parame3(const char* value, size_t size);
  inline ::std::string* mutable_parame3();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 parame1_;
  ::google::protobuf::uint32 parame2_;
  ::std::string* parame3_;
  static const ::std::string _default_parame3_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRepetionEventNotic* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2CBattleJoinNotice : public ::google::protobuf::Message {
 public:
  CMessageS2CBattleJoinNotice();
  virtual ~CMessageS2CBattleJoinNotice();
  
  CMessageS2CBattleJoinNotice(const CMessageS2CBattleJoinNotice& from);
  
  inline CMessageS2CBattleJoinNotice& operator=(const CMessageS2CBattleJoinNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2CBattleJoinNotice& default_instance();
  void Swap(CMessageS2CBattleJoinNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2CBattleJoinNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2CBattleJoinNotice& from);
  void MergeFrom(const CMessageS2CBattleJoinNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Key = 4;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 4;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 key_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2CBattleJoinNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleWaitResponse : public ::google::protobuf::Message {
 public:
  CMessageBattleWaitResponse();
  virtual ~CMessageBattleWaitResponse();
  
  CMessageBattleWaitResponse(const CMessageBattleWaitResponse& from);
  
  inline CMessageBattleWaitResponse& operator=(const CMessageBattleWaitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleWaitResponse& default_instance();
  void Swap(CMessageBattleWaitResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleWaitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleWaitResponse& from);
  void MergeFrom(const CMessageBattleWaitResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleWaitResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageC2SBattleJoin : public ::google::protobuf::Message {
 public:
  CMessageC2SBattleJoin();
  virtual ~CMessageC2SBattleJoin();
  
  CMessageC2SBattleJoin(const CMessageC2SBattleJoin& from);
  
  inline CMessageC2SBattleJoin& operator=(const CMessageC2SBattleJoin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageC2SBattleJoin& default_instance();
  void Swap(CMessageC2SBattleJoin* other);
  
  // implements Message ----------------------------------------------
  
  CMessageC2SBattleJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageC2SBattleJoin& from);
  void MergeFrom(const CMessageC2SBattleJoin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageC2SBattleJoin* default_instance_;
};
// -------------------------------------------------------------------

class CMessageC2SBattleJoinRandomPlace : public ::google::protobuf::Message {
 public:
  CMessageC2SBattleJoinRandomPlace();
  virtual ~CMessageC2SBattleJoinRandomPlace();
  
  CMessageC2SBattleJoinRandomPlace(const CMessageC2SBattleJoinRandomPlace& from);
  
  inline CMessageC2SBattleJoinRandomPlace& operator=(const CMessageC2SBattleJoinRandomPlace& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageC2SBattleJoinRandomPlace& default_instance();
  void Swap(CMessageC2SBattleJoinRandomPlace* other);
  
  // implements Message ----------------------------------------------
  
  CMessageC2SBattleJoinRandomPlace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageC2SBattleJoinRandomPlace& from);
  void MergeFrom(const CMessageC2SBattleJoinRandomPlace& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 key_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageC2SBattleJoinRandomPlace* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleTeamWaitRequest : public ::google::protobuf::Message {
 public:
  CMessageBattleTeamWaitRequest();
  virtual ~CMessageBattleTeamWaitRequest();
  
  CMessageBattleTeamWaitRequest(const CMessageBattleTeamWaitRequest& from);
  
  inline CMessageBattleTeamWaitRequest& operator=(const CMessageBattleTeamWaitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleTeamWaitRequest& default_instance();
  void Swap(CMessageBattleTeamWaitRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleTeamWaitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleTeamWaitRequest& from);
  void MergeFrom(const CMessageBattleTeamWaitRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleTeamWaitRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleSingleWaitRequest : public ::google::protobuf::Message {
 public:
  CMessageBattleSingleWaitRequest();
  virtual ~CMessageBattleSingleWaitRequest();
  
  CMessageBattleSingleWaitRequest(const CMessageBattleSingleWaitRequest& from);
  
  inline CMessageBattleSingleWaitRequest& operator=(const CMessageBattleSingleWaitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleSingleWaitRequest& default_instance();
  void Swap(CMessageBattleSingleWaitRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleSingleWaitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleSingleWaitRequest& from);
  void MergeFrom(const CMessageBattleSingleWaitRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleSingleWaitRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageC2SBattleWaitLeaveRequest : public ::google::protobuf::Message {
 public:
  CMessageC2SBattleWaitLeaveRequest();
  virtual ~CMessageC2SBattleWaitLeaveRequest();
  
  CMessageC2SBattleWaitLeaveRequest(const CMessageC2SBattleWaitLeaveRequest& from);
  
  inline CMessageC2SBattleWaitLeaveRequest& operator=(const CMessageC2SBattleWaitLeaveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageC2SBattleWaitLeaveRequest& default_instance();
  void Swap(CMessageC2SBattleWaitLeaveRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageC2SBattleWaitLeaveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageC2SBattleWaitLeaveRequest& from);
  void MergeFrom(const CMessageC2SBattleWaitLeaveRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageC2SBattleWaitLeaveRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2CBattleWaitLeaveResponse : public ::google::protobuf::Message {
 public:
  CMessageS2CBattleWaitLeaveResponse();
  virtual ~CMessageS2CBattleWaitLeaveResponse();
  
  CMessageS2CBattleWaitLeaveResponse(const CMessageS2CBattleWaitLeaveResponse& from);
  
  inline CMessageS2CBattleWaitLeaveResponse& operator=(const CMessageS2CBattleWaitLeaveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2CBattleWaitLeaveResponse& default_instance();
  void Swap(CMessageS2CBattleWaitLeaveResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2CBattleWaitLeaveResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2CBattleWaitLeaveResponse& from);
  void MergeFrom(const CMessageS2CBattleWaitLeaveResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2CBattleWaitLeaveResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageC2SRepetionLeave : public ::google::protobuf::Message {
 public:
  CMessageC2SRepetionLeave();
  virtual ~CMessageC2SRepetionLeave();
  
  CMessageC2SRepetionLeave(const CMessageC2SRepetionLeave& from);
  
  inline CMessageC2SRepetionLeave& operator=(const CMessageC2SRepetionLeave& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageC2SRepetionLeave& default_instance();
  void Swap(CMessageC2SRepetionLeave* other);
  
  // implements Message ----------------------------------------------
  
  CMessageC2SRepetionLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageC2SRepetionLeave& from);
  void MergeFrom(const CMessageC2SRepetionLeave& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageC2SRepetionLeave* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRepetionIndexNotice : public ::google::protobuf::Message {
 public:
  CMessageRepetionIndexNotice();
  virtual ~CMessageRepetionIndexNotice();
  
  CMessageRepetionIndexNotice(const CMessageRepetionIndexNotice& from);
  
  inline CMessageRepetionIndexNotice& operator=(const CMessageRepetionIndexNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRepetionIndexNotice& default_instance();
  void Swap(CMessageRepetionIndexNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRepetionIndexNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRepetionIndexNotice& from);
  void MergeFrom(const CMessageRepetionIndexNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRepetionIndexNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRepetionUseItemIntoNotice : public ::google::protobuf::Message {
 public:
  CMessageRepetionUseItemIntoNotice();
  virtual ~CMessageRepetionUseItemIntoNotice();
  
  CMessageRepetionUseItemIntoNotice(const CMessageRepetionUseItemIntoNotice& from);
  
  inline CMessageRepetionUseItemIntoNotice& operator=(const CMessageRepetionUseItemIntoNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRepetionUseItemIntoNotice& default_instance();
  void Swap(CMessageRepetionUseItemIntoNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRepetionUseItemIntoNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRepetionUseItemIntoNotice& from);
  void MergeFrom(const CMessageRepetionUseItemIntoNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  ::google::protobuf::uint32 itemid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRepetionUseItemIntoNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRepetionUseItemIntoResponse : public ::google::protobuf::Message {
 public:
  CMessageRepetionUseItemIntoResponse();
  virtual ~CMessageRepetionUseItemIntoResponse();
  
  CMessageRepetionUseItemIntoResponse(const CMessageRepetionUseItemIntoResponse& from);
  
  inline CMessageRepetionUseItemIntoResponse& operator=(const CMessageRepetionUseItemIntoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRepetionUseItemIntoResponse& default_instance();
  void Swap(CMessageRepetionUseItemIntoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRepetionUseItemIntoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRepetionUseItemIntoResponse& from);
  void MergeFrom(const CMessageRepetionUseItemIntoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRepetionUseItemIntoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRepetionFuncPlayerClick : public ::google::protobuf::Message {
 public:
  CMessageRepetionFuncPlayerClick();
  virtual ~CMessageRepetionFuncPlayerClick();
  
  CMessageRepetionFuncPlayerClick(const CMessageRepetionFuncPlayerClick& from);
  
  inline CMessageRepetionFuncPlayerClick& operator=(const CMessageRepetionFuncPlayerClick& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRepetionFuncPlayerClick& default_instance();
  void Swap(CMessageRepetionFuncPlayerClick* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRepetionFuncPlayerClick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRepetionFuncPlayerClick& from);
  void MergeFrom(const CMessageRepetionFuncPlayerClick& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRepetionFuncPlayerClick* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleTeamFixWaitRequest : public ::google::protobuf::Message {
 public:
  CMessageBattleTeamFixWaitRequest();
  virtual ~CMessageBattleTeamFixWaitRequest();
  
  CMessageBattleTeamFixWaitRequest(const CMessageBattleTeamFixWaitRequest& from);
  
  inline CMessageBattleTeamFixWaitRequest& operator=(const CMessageBattleTeamFixWaitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleTeamFixWaitRequest& default_instance();
  void Swap(CMessageBattleTeamFixWaitRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleTeamFixWaitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleTeamFixWaitRequest& from);
  void MergeFrom(const CMessageBattleTeamFixWaitRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleTeamFixWaitRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleSingleFixWaitRequest : public ::google::protobuf::Message {
 public:
  CMessageBattleSingleFixWaitRequest();
  virtual ~CMessageBattleSingleFixWaitRequest();
  
  CMessageBattleSingleFixWaitRequest(const CMessageBattleSingleFixWaitRequest& from);
  
  inline CMessageBattleSingleFixWaitRequest& operator=(const CMessageBattleSingleFixWaitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleSingleFixWaitRequest& default_instance();
  void Swap(CMessageBattleSingleFixWaitRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleSingleFixWaitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleSingleFixWaitRequest& from);
  void MergeFrom(const CMessageBattleSingleFixWaitRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleSingleFixWaitRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageHaveSignUpBattle : public ::google::protobuf::Message {
 public:
  CMessageHaveSignUpBattle();
  virtual ~CMessageHaveSignUpBattle();
  
  CMessageHaveSignUpBattle(const CMessageHaveSignUpBattle& from);
  
  inline CMessageHaveSignUpBattle& operator=(const CMessageHaveSignUpBattle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageHaveSignUpBattle& default_instance();
  void Swap(CMessageHaveSignUpBattle* other);
  
  // implements Message ----------------------------------------------
  
  CMessageHaveSignUpBattle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageHaveSignUpBattle& from);
  void MergeFrom(const CMessageHaveSignUpBattle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageHaveSignUpBattle* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBattleOnTimeOpenNotice : public ::google::protobuf::Message {
 public:
  CMessageBattleOnTimeOpenNotice();
  virtual ~CMessageBattleOnTimeOpenNotice();
  
  CMessageBattleOnTimeOpenNotice(const CMessageBattleOnTimeOpenNotice& from);
  
  inline CMessageBattleOnTimeOpenNotice& operator=(const CMessageBattleOnTimeOpenNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBattleOnTimeOpenNotice& default_instance();
  void Swap(CMessageBattleOnTimeOpenNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBattleOnTimeOpenNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBattleOnTimeOpenNotice& from);
  void MergeFrom(const CMessageBattleOnTimeOpenNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBattleOnTimeOpenNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageC2SJoinOnTimeOpenBattleRequest : public ::google::protobuf::Message {
 public:
  CMessageC2SJoinOnTimeOpenBattleRequest();
  virtual ~CMessageC2SJoinOnTimeOpenBattleRequest();
  
  CMessageC2SJoinOnTimeOpenBattleRequest(const CMessageC2SJoinOnTimeOpenBattleRequest& from);
  
  inline CMessageC2SJoinOnTimeOpenBattleRequest& operator=(const CMessageC2SJoinOnTimeOpenBattleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageC2SJoinOnTimeOpenBattleRequest& default_instance();
  void Swap(CMessageC2SJoinOnTimeOpenBattleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageC2SJoinOnTimeOpenBattleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageC2SJoinOnTimeOpenBattleRequest& from);
  void MergeFrom(const CMessageC2SJoinOnTimeOpenBattleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageC2SJoinOnTimeOpenBattleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageC2SGetRandomTeleChargeRequest : public ::google::protobuf::Message {
 public:
  CMessageC2SGetRandomTeleChargeRequest();
  virtual ~CMessageC2SGetRandomTeleChargeRequest();
  
  CMessageC2SGetRandomTeleChargeRequest(const CMessageC2SGetRandomTeleChargeRequest& from);
  
  inline CMessageC2SGetRandomTeleChargeRequest& operator=(const CMessageC2SGetRandomTeleChargeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageC2SGetRandomTeleChargeRequest& default_instance();
  void Swap(CMessageC2SGetRandomTeleChargeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageC2SGetRandomTeleChargeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageC2SGetRandomTeleChargeRequest& from);
  void MergeFrom(const CMessageC2SGetRandomTeleChargeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 Order = 3;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 3;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 order_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageC2SGetRandomTeleChargeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageS2CGetRandomTeleChargeResponse : public ::google::protobuf::Message {
 public:
  CMessageS2CGetRandomTeleChargeResponse();
  virtual ~CMessageS2CGetRandomTeleChargeResponse();
  
  CMessageS2CGetRandomTeleChargeResponse(const CMessageS2CGetRandomTeleChargeResponse& from);
  
  inline CMessageS2CGetRandomTeleChargeResponse& operator=(const CMessageS2CGetRandomTeleChargeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageS2CGetRandomTeleChargeResponse& default_instance();
  void Swap(CMessageS2CGetRandomTeleChargeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageS2CGetRandomTeleChargeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageS2CGetRandomTeleChargeResponse& from);
  void MergeFrom(const CMessageS2CGetRandomTeleChargeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 Charge = 2;
  inline bool has_charge() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 2;
  inline ::google::protobuf::uint32 charge() const;
  inline void set_charge(::google::protobuf::uint32 value);
  
  // optional uint32 DieTimes = 3;
  inline bool has_dietimes() const;
  inline void clear_dietimes();
  static const int kDieTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 dietimes() const;
  inline void set_dietimes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 charge_;
  ::google::protobuf::uint32 dietimes_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageS2CGetRandomTeleChargeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageC2SRrandomTeleRequest : public ::google::protobuf::Message {
 public:
  CMessageC2SRrandomTeleRequest();
  virtual ~CMessageC2SRrandomTeleRequest();
  
  CMessageC2SRrandomTeleRequest(const CMessageC2SRrandomTeleRequest& from);
  
  inline CMessageC2SRrandomTeleRequest& operator=(const CMessageC2SRrandomTeleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageC2SRrandomTeleRequest& default_instance();
  void Swap(CMessageC2SRrandomTeleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageC2SRrandomTeleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageC2SRrandomTeleRequest& from);
  void MergeFrom(const CMessageC2SRrandomTeleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleID = 2;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
  // optional uint32 Order = 3;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 3;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 battleid_;
  ::google::protobuf::uint32 order_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageC2SRrandomTeleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageApplyGlobalWarRequest : public ::google::protobuf::Message {
 public:
  CMessageApplyGlobalWarRequest();
  virtual ~CMessageApplyGlobalWarRequest();
  
  CMessageApplyGlobalWarRequest(const CMessageApplyGlobalWarRequest& from);
  
  inline CMessageApplyGlobalWarRequest& operator=(const CMessageApplyGlobalWarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageApplyGlobalWarRequest& default_instance();
  void Swap(CMessageApplyGlobalWarRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageApplyGlobalWarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageApplyGlobalWarRequest& from);
  void MergeFrom(const CMessageApplyGlobalWarRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageApplyGlobalWarRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageApplyGlobalWarResponse : public ::google::protobuf::Message {
 public:
  CMessageApplyGlobalWarResponse();
  virtual ~CMessageApplyGlobalWarResponse();
  
  CMessageApplyGlobalWarResponse(const CMessageApplyGlobalWarResponse& from);
  
  inline CMessageApplyGlobalWarResponse& operator=(const CMessageApplyGlobalWarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageApplyGlobalWarResponse& default_instance();
  void Swap(CMessageApplyGlobalWarResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageApplyGlobalWarResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageApplyGlobalWarResponse& from);
  void MergeFrom(const CMessageApplyGlobalWarResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 MinLevel = 2;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 3;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 minlevel_;
  ::google::protobuf::uint32 maxlevel_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageApplyGlobalWarResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEnterGlobalWarRequest : public ::google::protobuf::Message {
 public:
  CMessageEnterGlobalWarRequest();
  virtual ~CMessageEnterGlobalWarRequest();
  
  CMessageEnterGlobalWarRequest(const CMessageEnterGlobalWarRequest& from);
  
  inline CMessageEnterGlobalWarRequest& operator=(const CMessageEnterGlobalWarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEnterGlobalWarRequest& default_instance();
  void Swap(CMessageEnterGlobalWarRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEnterGlobalWarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEnterGlobalWarRequest& from);
  void MergeFrom(const CMessageEnterGlobalWarRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEnterGlobalWarRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEnterGlobalWarResponse : public ::google::protobuf::Message {
 public:
  CMessageEnterGlobalWarResponse();
  virtual ~CMessageEnterGlobalWarResponse();
  
  CMessageEnterGlobalWarResponse(const CMessageEnterGlobalWarResponse& from);
  
  inline CMessageEnterGlobalWarResponse& operator=(const CMessageEnterGlobalWarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEnterGlobalWarResponse& default_instance();
  void Swap(CMessageEnterGlobalWarResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEnterGlobalWarResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEnterGlobalWarResponse& from);
  void MergeFrom(const CMessageEnterGlobalWarResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEnterGlobalWarResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCanEnterGlobalWarNotify : public ::google::protobuf::Message {
 public:
  CMessageCanEnterGlobalWarNotify();
  virtual ~CMessageCanEnterGlobalWarNotify();
  
  CMessageCanEnterGlobalWarNotify(const CMessageCanEnterGlobalWarNotify& from);
  
  inline CMessageCanEnterGlobalWarNotify& operator=(const CMessageCanEnterGlobalWarNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCanEnterGlobalWarNotify& default_instance();
  void Swap(CMessageCanEnterGlobalWarNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCanEnterGlobalWarNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCanEnterGlobalWarNotify& from);
  void MergeFrom(const CMessageCanEnterGlobalWarNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCanEnterGlobalWarNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerLeaveGlobalWarRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerLeaveGlobalWarRequest();
  virtual ~CMessagePlayerLeaveGlobalWarRequest();
  
  CMessagePlayerLeaveGlobalWarRequest(const CMessagePlayerLeaveGlobalWarRequest& from);
  
  inline CMessagePlayerLeaveGlobalWarRequest& operator=(const CMessagePlayerLeaveGlobalWarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerLeaveGlobalWarRequest& default_instance();
  void Swap(CMessagePlayerLeaveGlobalWarRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerLeaveGlobalWarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerLeaveGlobalWarRequest& from);
  void MergeFrom(const CMessagePlayerLeaveGlobalWarRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RepetionIndex = 1;
  inline bool has_repetionindex() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 repetionindex() const;
  inline void set_repetionindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 repetionindex_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerLeaveGlobalWarRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerLeaveGlobalWarResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerLeaveGlobalWarResponse();
  virtual ~CMessagePlayerLeaveGlobalWarResponse();
  
  CMessagePlayerLeaveGlobalWarResponse(const CMessagePlayerLeaveGlobalWarResponse& from);
  
  inline CMessagePlayerLeaveGlobalWarResponse& operator=(const CMessagePlayerLeaveGlobalWarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerLeaveGlobalWarResponse& default_instance();
  void Swap(CMessagePlayerLeaveGlobalWarResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerLeaveGlobalWarResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerLeaveGlobalWarResponse& from);
  void MergeFrom(const CMessagePlayerLeaveGlobalWarResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ErrCode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerLeaveGlobalWarResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickCampPlayerRequest : public ::google::protobuf::Message {
 public:
  CMessageKickCampPlayerRequest();
  virtual ~CMessageKickCampPlayerRequest();
  
  CMessageKickCampPlayerRequest(const CMessageKickCampPlayerRequest& from);
  
  inline CMessageKickCampPlayerRequest& operator=(const CMessageKickCampPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickCampPlayerRequest& default_instance();
  void Swap(CMessageKickCampPlayerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickCampPlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickCampPlayerRequest& from);
  void MergeFrom(const CMessageKickCampPlayerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickCampPlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickCampPlayerResponse : public ::google::protobuf::Message {
 public:
  CMessageKickCampPlayerResponse();
  virtual ~CMessageKickCampPlayerResponse();
  
  CMessageKickCampPlayerResponse(const CMessageKickCampPlayerResponse& from);
  
  inline CMessageKickCampPlayerResponse& operator=(const CMessageKickCampPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickCampPlayerResponse& default_instance();
  void Swap(CMessageKickCampPlayerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickCampPlayerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickCampPlayerResponse& from);
  void MergeFrom(const CMessageKickCampPlayerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ErrCode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickCampPlayerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickCampPlayerNotify : public ::google::protobuf::Message {
 public:
  CMessageKickCampPlayerNotify();
  virtual ~CMessageKickCampPlayerNotify();
  
  CMessageKickCampPlayerNotify(const CMessageKickCampPlayerNotify& from);
  
  inline CMessageKickCampPlayerNotify& operator=(const CMessageKickCampPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickCampPlayerNotify& default_instance();
  void Swap(CMessageKickCampPlayerNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickCampPlayerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickCampPlayerNotify& from);
  void MergeFrom(const CMessageKickCampPlayerNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SponsorRoleName = 1;
  inline bool has_sponsorrolename() const;
  inline void clear_sponsorrolename();
  static const int kSponsorRoleNameFieldNumber = 1;
  inline const ::std::string& sponsorrolename() const;
  inline void set_sponsorrolename(const ::std::string& value);
  inline void set_sponsorrolename(const char* value);
  inline void set_sponsorrolename(const char* value, size_t size);
  inline ::std::string* mutable_sponsorrolename();
  
  // optional string RoleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* sponsorrolename_;
  static const ::std::string _default_sponsorrolename_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickCampPlayerNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageVoteToKickPlayerRequest : public ::google::protobuf::Message {
 public:
  CMessageVoteToKickPlayerRequest();
  virtual ~CMessageVoteToKickPlayerRequest();
  
  CMessageVoteToKickPlayerRequest(const CMessageVoteToKickPlayerRequest& from);
  
  inline CMessageVoteToKickPlayerRequest& operator=(const CMessageVoteToKickPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageVoteToKickPlayerRequest& default_instance();
  void Swap(CMessageVoteToKickPlayerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageVoteToKickPlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageVoteToKickPlayerRequest& from);
  void MergeFrom(const CMessageVoteToKickPlayerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageVoteToKickPlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageVoteToKickPlayerResponse : public ::google::protobuf::Message {
 public:
  CMessageVoteToKickPlayerResponse();
  virtual ~CMessageVoteToKickPlayerResponse();
  
  CMessageVoteToKickPlayerResponse(const CMessageVoteToKickPlayerResponse& from);
  
  inline CMessageVoteToKickPlayerResponse& operator=(const CMessageVoteToKickPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageVoteToKickPlayerResponse& default_instance();
  void Swap(CMessageVoteToKickPlayerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageVoteToKickPlayerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageVoteToKickPlayerResponse& from);
  void MergeFrom(const CMessageVoteToKickPlayerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageVoteToKickPlayerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMesssageKickResultNoitfy : public ::google::protobuf::Message {
 public:
  CMesssageKickResultNoitfy();
  virtual ~CMesssageKickResultNoitfy();
  
  CMesssageKickResultNoitfy(const CMesssageKickResultNoitfy& from);
  
  inline CMesssageKickResultNoitfy& operator=(const CMesssageKickResultNoitfy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMesssageKickResultNoitfy& default_instance();
  void Swap(CMesssageKickResultNoitfy* other);
  
  // implements Message ----------------------------------------------
  
  CMesssageKickResultNoitfy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMesssageKickResultNoitfy& from);
  void MergeFrom(const CMesssageKickResultNoitfy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SponsorRoleID = 1;
  inline bool has_sponsorroleid() const;
  inline void clear_sponsorroleid();
  static const int kSponsorRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sponsorroleid() const;
  inline void set_sponsorroleid(::google::protobuf::uint32 value);
  
  // optional uint32 KickedRoleID = 2;
  inline bool has_kickedroleid() const;
  inline void clear_kickedroleid();
  static const int kKickedRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 kickedroleid() const;
  inline void set_kickedroleid(::google::protobuf::uint32 value);
  
  // optional string KickedRoleName = 3;
  inline bool has_kickedrolename() const;
  inline void clear_kickedrolename();
  static const int kKickedRoleNameFieldNumber = 3;
  inline const ::std::string& kickedrolename() const;
  inline void set_kickedrolename(const ::std::string& value);
  inline void set_kickedrolename(const char* value);
  inline void set_kickedrolename(const char* value, size_t size);
  inline ::std::string* mutable_kickedrolename();
  
  // optional uint32 Result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sponsorroleid_;
  ::google::protobuf::uint32 kickedroleid_;
  ::std::string* kickedrolename_;
  static const ::std::string _default_kickedrolename_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMesssageKickResultNoitfy* default_instance_;
};
// -------------------------------------------------------------------

class CMessageIntoCorpsBossRepetionRequest : public ::google::protobuf::Message {
 public:
  CMessageIntoCorpsBossRepetionRequest();
  virtual ~CMessageIntoCorpsBossRepetionRequest();
  
  CMessageIntoCorpsBossRepetionRequest(const CMessageIntoCorpsBossRepetionRequest& from);
  
  inline CMessageIntoCorpsBossRepetionRequest& operator=(const CMessageIntoCorpsBossRepetionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageIntoCorpsBossRepetionRequest& default_instance();
  void Swap(CMessageIntoCorpsBossRepetionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageIntoCorpsBossRepetionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageIntoCorpsBossRepetionRequest& from);
  void MergeFrom(const CMessageIntoCorpsBossRepetionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BattleID = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 battleid() const;
  inline void set_battleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 battleid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageIntoCorpsBossRepetionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEnterLastReptionRequest : public ::google::protobuf::Message {
 public:
  CMessageEnterLastReptionRequest();
  virtual ~CMessageEnterLastReptionRequest();
  
  CMessageEnterLastReptionRequest(const CMessageEnterLastReptionRequest& from);
  
  inline CMessageEnterLastReptionRequest& operator=(const CMessageEnterLastReptionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEnterLastReptionRequest& default_instance();
  void Swap(CMessageEnterLastReptionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEnterLastReptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEnterLastReptionRequest& from);
  void MergeFrom(const CMessageEnterLastReptionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEnterLastReptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEnterLastReptionResponse : public ::google::protobuf::Message {
 public:
  CMessageEnterLastReptionResponse();
  virtual ~CMessageEnterLastReptionResponse();
  
  CMessageEnterLastReptionResponse(const CMessageEnterLastReptionResponse& from);
  
  inline CMessageEnterLastReptionResponse& operator=(const CMessageEnterLastReptionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEnterLastReptionResponse& default_instance();
  void Swap(CMessageEnterLastReptionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEnterLastReptionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEnterLastReptionResponse& from);
  void MergeFrom(const CMessageEnterLastReptionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_repetionmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_repetionmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEnterLastReptionResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageRepetionTeamIn

// optional .CMessageRouter Router = 1;
inline bool CMessageRepetionTeamIn::has_router() const {
  return _has_bit(0);
}
inline void CMessageRepetionTeamIn::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageRepetionTeamIn::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageRepetionTeamIn::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 mapid = 2;
inline bool CMessageRepetionTeamIn::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageRepetionTeamIn::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRepetionTeamIn::mapid() const {
  return mapid_;
}
inline void CMessageRepetionTeamIn::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 destcharid = 3;
inline bool CMessageRepetionTeamIn::has_destcharid() const {
  return _has_bit(2);
}
inline void CMessageRepetionTeamIn::clear_destcharid() {
  destcharid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRepetionTeamIn::destcharid() const {
  return destcharid_;
}
inline void CMessageRepetionTeamIn::set_destcharid(::google::protobuf::uint32 value) {
  _set_bit(2);
  destcharid_ = value;
}

// optional uint32 srccharid = 4;
inline bool CMessageRepetionTeamIn::has_srccharid() const {
  return _has_bit(3);
}
inline void CMessageRepetionTeamIn::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRepetionTeamIn::srccharid() const {
  return srccharid_;
}
inline void CMessageRepetionTeamIn::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(3);
  srccharid_ = value;
}

// -------------------------------------------------------------------

// CMessageRepetionErrCode

// optional uint32 MapID = 1;
inline bool CMessageRepetionErrCode::has_mapid() const {
  return _has_bit(0);
}
inline void CMessageRepetionErrCode::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRepetionErrCode::mapid() const {
  return mapid_;
}
inline void CMessageRepetionErrCode::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 Code = 2;
inline bool CMessageRepetionErrCode::has_code() const {
  return _has_bit(1);
}
inline void CMessageRepetionErrCode::clear_code() {
  code_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRepetionErrCode::code() const {
  return code_;
}
inline void CMessageRepetionErrCode::set_code(::google::protobuf::uint32 value) {
  _set_bit(1);
  code_ = value;
}

// optional uint32 Parame1 = 3;
inline bool CMessageRepetionErrCode::has_parame1() const {
  return _has_bit(2);
}
inline void CMessageRepetionErrCode::clear_parame1() {
  parame1_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRepetionErrCode::parame1() const {
  return parame1_;
}
inline void CMessageRepetionErrCode::set_parame1(::google::protobuf::uint32 value) {
  _set_bit(2);
  parame1_ = value;
}

// optional uint32 Parame2 = 4;
inline bool CMessageRepetionErrCode::has_parame2() const {
  return _has_bit(3);
}
inline void CMessageRepetionErrCode::clear_parame2() {
  parame2_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRepetionErrCode::parame2() const {
  return parame2_;
}
inline void CMessageRepetionErrCode::set_parame2(::google::protobuf::uint32 value) {
  _set_bit(3);
  parame2_ = value;
}

// optional uint32 CharID = 5;
inline bool CMessageRepetionErrCode::has_charid() const {
  return _has_bit(4);
}
inline void CMessageRepetionErrCode::clear_charid() {
  charid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageRepetionErrCode::charid() const {
  return charid_;
}
inline void CMessageRepetionErrCode::set_charid(::google::protobuf::uint32 value) {
  _set_bit(4);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageRepetionNpcAdventNotice

// optional uint32 TemplateID = 1;
inline bool CMessageRepetionNpcAdventNotice::has_templateid() const {
  return _has_bit(0);
}
inline void CMessageRepetionNpcAdventNotice::clear_templateid() {
  templateid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRepetionNpcAdventNotice::templateid() const {
  return templateid_;
}
inline void CMessageRepetionNpcAdventNotice::set_templateid(::google::protobuf::uint32 value) {
  _set_bit(0);
  templateid_ = value;
}

// optional uint32 Time = 2;
inline bool CMessageRepetionNpcAdventNotice::has_time() const {
  return _has_bit(1);
}
inline void CMessageRepetionNpcAdventNotice::clear_time() {
  time_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRepetionNpcAdventNotice::time() const {
  return time_;
}
inline void CMessageRepetionNpcAdventNotice::set_time(::google::protobuf::uint32 value) {
  _set_bit(1);
  time_ = value;
}

// -------------------------------------------------------------------

// CMessageRepetionEventNotic

// optional uint32 EventID = 1;
inline bool CMessageRepetionEventNotic::has_eventid() const {
  return _has_bit(0);
}
inline void CMessageRepetionEventNotic::clear_eventid() {
  eventid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRepetionEventNotic::eventid() const {
  return eventid_;
}
inline void CMessageRepetionEventNotic::set_eventid(::google::protobuf::uint32 value) {
  _set_bit(0);
  eventid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageRepetionEventNotic::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageRepetionEventNotic::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRepetionEventNotic::mapid() const {
  return mapid_;
}
inline void CMessageRepetionEventNotic::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 Parame1 = 3;
inline bool CMessageRepetionEventNotic::has_parame1() const {
  return _has_bit(2);
}
inline void CMessageRepetionEventNotic::clear_parame1() {
  parame1_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRepetionEventNotic::parame1() const {
  return parame1_;
}
inline void CMessageRepetionEventNotic::set_parame1(::google::protobuf::uint32 value) {
  _set_bit(2);
  parame1_ = value;
}

// optional uint32 Parame2 = 4;
inline bool CMessageRepetionEventNotic::has_parame2() const {
  return _has_bit(3);
}
inline void CMessageRepetionEventNotic::clear_parame2() {
  parame2_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRepetionEventNotic::parame2() const {
  return parame2_;
}
inline void CMessageRepetionEventNotic::set_parame2(::google::protobuf::uint32 value) {
  _set_bit(3);
  parame2_ = value;
}

// optional string Parame3 = 5;
inline bool CMessageRepetionEventNotic::has_parame3() const {
  return _has_bit(4);
}
inline void CMessageRepetionEventNotic::clear_parame3() {
  if (parame3_ != &_default_parame3_) {
    parame3_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageRepetionEventNotic::parame3() const {
  return *parame3_;
}
inline void CMessageRepetionEventNotic::set_parame3(const ::std::string& value) {
  _set_bit(4);
  if (parame3_ == &_default_parame3_) {
    parame3_ = new ::std::string;
  }
  parame3_->assign(value);
}
inline void CMessageRepetionEventNotic::set_parame3(const char* value) {
  _set_bit(4);
  if (parame3_ == &_default_parame3_) {
    parame3_ = new ::std::string;
  }
  parame3_->assign(value);
}
inline void CMessageRepetionEventNotic::set_parame3(const char* value, size_t size) {
  _set_bit(4);
  if (parame3_ == &_default_parame3_) {
    parame3_ = new ::std::string;
  }
  parame3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRepetionEventNotic::mutable_parame3() {
  _set_bit(4);
  if (parame3_ == &_default_parame3_) {
    parame3_ = new ::std::string;
  }
  return parame3_;
}

// -------------------------------------------------------------------

// CMessageS2CBattleJoinNotice

// optional uint32 BattleID = 1;
inline bool CMessageS2CBattleJoinNotice::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageS2CBattleJoinNotice::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2CBattleJoinNotice::battleid() const {
  return battleid_;
}
inline void CMessageS2CBattleJoinNotice::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageS2CBattleJoinNotice::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageS2CBattleJoinNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2CBattleJoinNotice::mapid() const {
  return mapid_;
}
inline void CMessageS2CBattleJoinNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 Type = 3;
inline bool CMessageS2CBattleJoinNotice::has_type() const {
  return _has_bit(2);
}
inline void CMessageS2CBattleJoinNotice::clear_type() {
  type_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageS2CBattleJoinNotice::type() const {
  return type_;
}
inline void CMessageS2CBattleJoinNotice::set_type(::google::protobuf::uint32 value) {
  _set_bit(2);
  type_ = value;
}

// optional uint32 Key = 4;
inline bool CMessageS2CBattleJoinNotice::has_key() const {
  return _has_bit(3);
}
inline void CMessageS2CBattleJoinNotice::clear_key() {
  key_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageS2CBattleJoinNotice::key() const {
  return key_;
}
inline void CMessageS2CBattleJoinNotice::set_key(::google::protobuf::uint32 value) {
  _set_bit(3);
  key_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleWaitResponse

// optional uint32 BattleID = 1;
inline bool CMessageBattleWaitResponse::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageBattleWaitResponse::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleWaitResponse::battleid() const {
  return battleid_;
}
inline void CMessageBattleWaitResponse::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageBattleWaitResponse::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageBattleWaitResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleWaitResponse::mapid() const {
  return mapid_;
}
inline void CMessageBattleWaitResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageC2SBattleJoin

// optional uint32 BattleID = 1;
inline bool CMessageC2SBattleJoin::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageC2SBattleJoin::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageC2SBattleJoin::battleid() const {
  return battleid_;
}
inline void CMessageC2SBattleJoin::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageC2SBattleJoin::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageC2SBattleJoin::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageC2SBattleJoin::mapid() const {
  return mapid_;
}
inline void CMessageC2SBattleJoin::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageC2SBattleJoinRandomPlace

// optional uint32 BattleID = 1;
inline bool CMessageC2SBattleJoinRandomPlace::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageC2SBattleJoinRandomPlace::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageC2SBattleJoinRandomPlace::battleid() const {
  return battleid_;
}
inline void CMessageC2SBattleJoinRandomPlace::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageC2SBattleJoinRandomPlace::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageC2SBattleJoinRandomPlace::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageC2SBattleJoinRandomPlace::mapid() const {
  return mapid_;
}
inline void CMessageC2SBattleJoinRandomPlace::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 Key = 3;
inline bool CMessageC2SBattleJoinRandomPlace::has_key() const {
  return _has_bit(2);
}
inline void CMessageC2SBattleJoinRandomPlace::clear_key() {
  key_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageC2SBattleJoinRandomPlace::key() const {
  return key_;
}
inline void CMessageC2SBattleJoinRandomPlace::set_key(::google::protobuf::uint32 value) {
  _set_bit(2);
  key_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleTeamWaitRequest

// optional uint32 BattleID = 1;
inline bool CMessageBattleTeamWaitRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageBattleTeamWaitRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleTeamWaitRequest::battleid() const {
  return battleid_;
}
inline void CMessageBattleTeamWaitRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageBattleTeamWaitRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageBattleTeamWaitRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleTeamWaitRequest::charid() const {
  return charid_;
}
inline void CMessageBattleTeamWaitRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleTeamWaitRequest::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleTeamWaitRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleTeamWaitRequest::mapid() const {
  return mapid_;
}
inline void CMessageBattleTeamWaitRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleSingleWaitRequest

// optional uint32 BattleID = 1;
inline bool CMessageBattleSingleWaitRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageBattleSingleWaitRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleSingleWaitRequest::battleid() const {
  return battleid_;
}
inline void CMessageBattleSingleWaitRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageBattleSingleWaitRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageBattleSingleWaitRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleSingleWaitRequest::charid() const {
  return charid_;
}
inline void CMessageBattleSingleWaitRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleSingleWaitRequest::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleSingleWaitRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleSingleWaitRequest::mapid() const {
  return mapid_;
}
inline void CMessageBattleSingleWaitRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageC2SBattleWaitLeaveRequest

// optional uint32 BattleID = 1;
inline bool CMessageC2SBattleWaitLeaveRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageC2SBattleWaitLeaveRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageC2SBattleWaitLeaveRequest::battleid() const {
  return battleid_;
}
inline void CMessageC2SBattleWaitLeaveRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageC2SBattleWaitLeaveRequest::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageC2SBattleWaitLeaveRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageC2SBattleWaitLeaveRequest::mapid() const {
  return mapid_;
}
inline void CMessageC2SBattleWaitLeaveRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageS2CBattleWaitLeaveResponse

// optional uint32 BattleID = 1;
inline bool CMessageS2CBattleWaitLeaveResponse::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageS2CBattleWaitLeaveResponse::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2CBattleWaitLeaveResponse::battleid() const {
  return battleid_;
}
inline void CMessageS2CBattleWaitLeaveResponse::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageS2CBattleWaitLeaveResponse::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageS2CBattleWaitLeaveResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2CBattleWaitLeaveResponse::mapid() const {
  return mapid_;
}
inline void CMessageS2CBattleWaitLeaveResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageC2SRepetionLeave

// -------------------------------------------------------------------

// CMessageRepetionIndexNotice

// optional uint32 RepetionIndex = 1;
inline bool CMessageRepetionIndexNotice::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessageRepetionIndexNotice::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRepetionIndexNotice::repetionindex() const {
  return repetionindex_;
}
inline void CMessageRepetionIndexNotice::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// optional uint32 Type = 2;
inline bool CMessageRepetionIndexNotice::has_type() const {
  return _has_bit(1);
}
inline void CMessageRepetionIndexNotice::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRepetionIndexNotice::type() const {
  return type_;
}
inline void CMessageRepetionIndexNotice::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageRepetionIndexNotice::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageRepetionIndexNotice::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRepetionIndexNotice::roleid() const {
  return roleid_;
}
inline void CMessageRepetionIndexNotice::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageRepetionUseItemIntoNotice

// optional uint32 RepetionIndex = 1;
inline bool CMessageRepetionUseItemIntoNotice::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessageRepetionUseItemIntoNotice::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRepetionUseItemIntoNotice::repetionindex() const {
  return repetionindex_;
}
inline void CMessageRepetionUseItemIntoNotice::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// optional uint32 ItemID = 2;
inline bool CMessageRepetionUseItemIntoNotice::has_itemid() const {
  return _has_bit(1);
}
inline void CMessageRepetionUseItemIntoNotice::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRepetionUseItemIntoNotice::itemid() const {
  return itemid_;
}
inline void CMessageRepetionUseItemIntoNotice::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemid_ = value;
}

// -------------------------------------------------------------------

// CMessageRepetionUseItemIntoResponse

// -------------------------------------------------------------------

// CMessageRepetionFuncPlayerClick

// optional uint32 NpcID = 1;
inline bool CMessageRepetionFuncPlayerClick::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageRepetionFuncPlayerClick::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRepetionFuncPlayerClick::npcid() const {
  return npcid_;
}
inline void CMessageRepetionFuncPlayerClick::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleTeamFixWaitRequest

// optional uint32 BattleID = 1;
inline bool CMessageBattleTeamFixWaitRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageBattleTeamFixWaitRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleTeamFixWaitRequest::battleid() const {
  return battleid_;
}
inline void CMessageBattleTeamFixWaitRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageBattleTeamFixWaitRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageBattleTeamFixWaitRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleTeamFixWaitRequest::charid() const {
  return charid_;
}
inline void CMessageBattleTeamFixWaitRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleTeamFixWaitRequest::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleTeamFixWaitRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleTeamFixWaitRequest::mapid() const {
  return mapid_;
}
inline void CMessageBattleTeamFixWaitRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleSingleFixWaitRequest

// optional uint32 BattleID = 1;
inline bool CMessageBattleSingleFixWaitRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageBattleSingleFixWaitRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleSingleFixWaitRequest::battleid() const {
  return battleid_;
}
inline void CMessageBattleSingleFixWaitRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageBattleSingleFixWaitRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageBattleSingleFixWaitRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleSingleFixWaitRequest::charid() const {
  return charid_;
}
inline void CMessageBattleSingleFixWaitRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageBattleSingleFixWaitRequest::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageBattleSingleFixWaitRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBattleSingleFixWaitRequest::mapid() const {
  return mapid_;
}
inline void CMessageBattleSingleFixWaitRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageHaveSignUpBattle

// optional uint32 BattleID = 1;
inline bool CMessageHaveSignUpBattle::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageHaveSignUpBattle::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageHaveSignUpBattle::battleid() const {
  return battleid_;
}
inline void CMessageHaveSignUpBattle::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// -------------------------------------------------------------------

// CMessageBattleOnTimeOpenNotice

// optional uint32 BattleID = 1;
inline bool CMessageBattleOnTimeOpenNotice::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageBattleOnTimeOpenNotice::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBattleOnTimeOpenNotice::battleid() const {
  return battleid_;
}
inline void CMessageBattleOnTimeOpenNotice::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageBattleOnTimeOpenNotice::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageBattleOnTimeOpenNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBattleOnTimeOpenNotice::mapid() const {
  return mapid_;
}
inline void CMessageBattleOnTimeOpenNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageC2SJoinOnTimeOpenBattleRequest

// optional uint32 BattleID = 1;
inline bool CMessageC2SJoinOnTimeOpenBattleRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageC2SJoinOnTimeOpenBattleRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageC2SJoinOnTimeOpenBattleRequest::battleid() const {
  return battleid_;
}
inline void CMessageC2SJoinOnTimeOpenBattleRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageC2SJoinOnTimeOpenBattleRequest::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageC2SJoinOnTimeOpenBattleRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageC2SJoinOnTimeOpenBattleRequest::mapid() const {
  return mapid_;
}
inline void CMessageC2SJoinOnTimeOpenBattleRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageC2SGetRandomTeleChargeRequest

// optional uint32 NpcID = 1;
inline bool CMessageC2SGetRandomTeleChargeRequest::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageC2SGetRandomTeleChargeRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageC2SGetRandomTeleChargeRequest::npcid() const {
  return npcid_;
}
inline void CMessageC2SGetRandomTeleChargeRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageC2SGetRandomTeleChargeRequest::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageC2SGetRandomTeleChargeRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageC2SGetRandomTeleChargeRequest::battleid() const {
  return battleid_;
}
inline void CMessageC2SGetRandomTeleChargeRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// optional uint32 Order = 3;
inline bool CMessageC2SGetRandomTeleChargeRequest::has_order() const {
  return _has_bit(2);
}
inline void CMessageC2SGetRandomTeleChargeRequest::clear_order() {
  order_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageC2SGetRandomTeleChargeRequest::order() const {
  return order_;
}
inline void CMessageC2SGetRandomTeleChargeRequest::set_order(::google::protobuf::uint32 value) {
  _set_bit(2);
  order_ = value;
}

// -------------------------------------------------------------------

// CMessageS2CGetRandomTeleChargeResponse

// optional uint32 BattleID = 1;
inline bool CMessageS2CGetRandomTeleChargeResponse::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageS2CGetRandomTeleChargeResponse::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageS2CGetRandomTeleChargeResponse::battleid() const {
  return battleid_;
}
inline void CMessageS2CGetRandomTeleChargeResponse::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// optional uint32 Charge = 2;
inline bool CMessageS2CGetRandomTeleChargeResponse::has_charge() const {
  return _has_bit(1);
}
inline void CMessageS2CGetRandomTeleChargeResponse::clear_charge() {
  charge_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageS2CGetRandomTeleChargeResponse::charge() const {
  return charge_;
}
inline void CMessageS2CGetRandomTeleChargeResponse::set_charge(::google::protobuf::uint32 value) {
  _set_bit(1);
  charge_ = value;
}

// optional uint32 DieTimes = 3;
inline bool CMessageS2CGetRandomTeleChargeResponse::has_dietimes() const {
  return _has_bit(2);
}
inline void CMessageS2CGetRandomTeleChargeResponse::clear_dietimes() {
  dietimes_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageS2CGetRandomTeleChargeResponse::dietimes() const {
  return dietimes_;
}
inline void CMessageS2CGetRandomTeleChargeResponse::set_dietimes(::google::protobuf::uint32 value) {
  _set_bit(2);
  dietimes_ = value;
}

// -------------------------------------------------------------------

// CMessageC2SRrandomTeleRequest

// optional uint32 NpcID = 1;
inline bool CMessageC2SRrandomTeleRequest::has_npcid() const {
  return _has_bit(0);
}
inline void CMessageC2SRrandomTeleRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageC2SRrandomTeleRequest::npcid() const {
  return npcid_;
}
inline void CMessageC2SRrandomTeleRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// optional uint32 BattleID = 2;
inline bool CMessageC2SRrandomTeleRequest::has_battleid() const {
  return _has_bit(1);
}
inline void CMessageC2SRrandomTeleRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageC2SRrandomTeleRequest::battleid() const {
  return battleid_;
}
inline void CMessageC2SRrandomTeleRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  battleid_ = value;
}

// optional uint32 Order = 3;
inline bool CMessageC2SRrandomTeleRequest::has_order() const {
  return _has_bit(2);
}
inline void CMessageC2SRrandomTeleRequest::clear_order() {
  order_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageC2SRrandomTeleRequest::order() const {
  return order_;
}
inline void CMessageC2SRrandomTeleRequest::set_order(::google::protobuf::uint32 value) {
  _set_bit(2);
  order_ = value;
}

// -------------------------------------------------------------------

// CMessageApplyGlobalWarRequest

// optional uint32 RepetionIndex = 1;
inline bool CMessageApplyGlobalWarRequest::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessageApplyGlobalWarRequest::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageApplyGlobalWarRequest::repetionindex() const {
  return repetionindex_;
}
inline void CMessageApplyGlobalWarRequest::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// -------------------------------------------------------------------

// CMessageApplyGlobalWarResponse

// optional uint32 Errcode = 1;
inline bool CMessageApplyGlobalWarResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageApplyGlobalWarResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageApplyGlobalWarResponse::errcode() const {
  return errcode_;
}
inline void CMessageApplyGlobalWarResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// optional uint32 MinLevel = 2;
inline bool CMessageApplyGlobalWarResponse::has_minlevel() const {
  return _has_bit(1);
}
inline void CMessageApplyGlobalWarResponse::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageApplyGlobalWarResponse::minlevel() const {
  return minlevel_;
}
inline void CMessageApplyGlobalWarResponse::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  minlevel_ = value;
}

// optional uint32 MaxLevel = 3;
inline bool CMessageApplyGlobalWarResponse::has_maxlevel() const {
  return _has_bit(2);
}
inline void CMessageApplyGlobalWarResponse::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageApplyGlobalWarResponse::maxlevel() const {
  return maxlevel_;
}
inline void CMessageApplyGlobalWarResponse::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  maxlevel_ = value;
}

// -------------------------------------------------------------------

// CMessageEnterGlobalWarRequest

// optional uint32 RepetionIndex = 1;
inline bool CMessageEnterGlobalWarRequest::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessageEnterGlobalWarRequest::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEnterGlobalWarRequest::repetionindex() const {
  return repetionindex_;
}
inline void CMessageEnterGlobalWarRequest::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// -------------------------------------------------------------------

// CMessageEnterGlobalWarResponse

// optional uint32 Errcode = 1;
inline bool CMessageEnterGlobalWarResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageEnterGlobalWarResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEnterGlobalWarResponse::errcode() const {
  return errcode_;
}
inline void CMessageEnterGlobalWarResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCanEnterGlobalWarNotify

// optional uint32 RepetionIndex = 1;
inline bool CMessageCanEnterGlobalWarNotify::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessageCanEnterGlobalWarNotify::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCanEnterGlobalWarNotify::repetionindex() const {
  return repetionindex_;
}
inline void CMessageCanEnterGlobalWarNotify::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerLeaveGlobalWarRequest

// optional uint32 RepetionIndex = 1;
inline bool CMessagePlayerLeaveGlobalWarRequest::has_repetionindex() const {
  return _has_bit(0);
}
inline void CMessagePlayerLeaveGlobalWarRequest::clear_repetionindex() {
  repetionindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveGlobalWarRequest::repetionindex() const {
  return repetionindex_;
}
inline void CMessagePlayerLeaveGlobalWarRequest::set_repetionindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  repetionindex_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerLeaveGlobalWarResponse

// optional uint32 ErrCode = 1;
inline bool CMessagePlayerLeaveGlobalWarResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessagePlayerLeaveGlobalWarResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerLeaveGlobalWarResponse::errcode() const {
  return errcode_;
}
inline void CMessagePlayerLeaveGlobalWarResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageKickCampPlayerRequest

// optional uint32 EntityID = 1;
inline bool CMessageKickCampPlayerRequest::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageKickCampPlayerRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickCampPlayerRequest::entityid() const {
  return entityid_;
}
inline void CMessageKickCampPlayerRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickCampPlayerResponse

// optional uint32 ErrCode = 1;
inline bool CMessageKickCampPlayerResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageKickCampPlayerResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickCampPlayerResponse::errcode() const {
  return errcode_;
}
inline void CMessageKickCampPlayerResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageKickCampPlayerNotify

// optional string SponsorRoleName = 1;
inline bool CMessageKickCampPlayerNotify::has_sponsorrolename() const {
  return _has_bit(0);
}
inline void CMessageKickCampPlayerNotify::clear_sponsorrolename() {
  if (sponsorrolename_ != &_default_sponsorrolename_) {
    sponsorrolename_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageKickCampPlayerNotify::sponsorrolename() const {
  return *sponsorrolename_;
}
inline void CMessageKickCampPlayerNotify::set_sponsorrolename(const ::std::string& value) {
  _set_bit(0);
  if (sponsorrolename_ == &_default_sponsorrolename_) {
    sponsorrolename_ = new ::std::string;
  }
  sponsorrolename_->assign(value);
}
inline void CMessageKickCampPlayerNotify::set_sponsorrolename(const char* value) {
  _set_bit(0);
  if (sponsorrolename_ == &_default_sponsorrolename_) {
    sponsorrolename_ = new ::std::string;
  }
  sponsorrolename_->assign(value);
}
inline void CMessageKickCampPlayerNotify::set_sponsorrolename(const char* value, size_t size) {
  _set_bit(0);
  if (sponsorrolename_ == &_default_sponsorrolename_) {
    sponsorrolename_ = new ::std::string;
  }
  sponsorrolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageKickCampPlayerNotify::mutable_sponsorrolename() {
  _set_bit(0);
  if (sponsorrolename_ == &_default_sponsorrolename_) {
    sponsorrolename_ = new ::std::string;
  }
  return sponsorrolename_;
}

// optional string RoleName = 2;
inline bool CMessageKickCampPlayerNotify::has_rolename() const {
  return _has_bit(1);
}
inline void CMessageKickCampPlayerNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageKickCampPlayerNotify::rolename() const {
  return *rolename_;
}
inline void CMessageKickCampPlayerNotify::set_rolename(const ::std::string& value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageKickCampPlayerNotify::set_rolename(const char* value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageKickCampPlayerNotify::set_rolename(const char* value, size_t size) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageKickCampPlayerNotify::mutable_rolename() {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional uint32 EntityID = 3;
inline bool CMessageKickCampPlayerNotify::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageKickCampPlayerNotify::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageKickCampPlayerNotify::entityid() const {
  return entityid_;
}
inline void CMessageKickCampPlayerNotify::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageVoteToKickPlayerRequest

// optional uint32 EntityID = 1;
inline bool CMessageVoteToKickPlayerRequest::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageVoteToKickPlayerRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageVoteToKickPlayerRequest::entityid() const {
  return entityid_;
}
inline void CMessageVoteToKickPlayerRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageVoteToKickPlayerRequest::has_result() const {
  return _has_bit(1);
}
inline void CMessageVoteToKickPlayerRequest::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageVoteToKickPlayerRequest::result() const {
  return result_;
}
inline void CMessageVoteToKickPlayerRequest::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// -------------------------------------------------------------------

// CMessageVoteToKickPlayerResponse

// optional uint32 Errcode = 1;
inline bool CMessageVoteToKickPlayerResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageVoteToKickPlayerResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageVoteToKickPlayerResponse::errcode() const {
  return errcode_;
}
inline void CMessageVoteToKickPlayerResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMesssageKickResultNoitfy

// optional uint32 SponsorRoleID = 1;
inline bool CMesssageKickResultNoitfy::has_sponsorroleid() const {
  return _has_bit(0);
}
inline void CMesssageKickResultNoitfy::clear_sponsorroleid() {
  sponsorroleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMesssageKickResultNoitfy::sponsorroleid() const {
  return sponsorroleid_;
}
inline void CMesssageKickResultNoitfy::set_sponsorroleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sponsorroleid_ = value;
}

// optional uint32 KickedRoleID = 2;
inline bool CMesssageKickResultNoitfy::has_kickedroleid() const {
  return _has_bit(1);
}
inline void CMesssageKickResultNoitfy::clear_kickedroleid() {
  kickedroleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMesssageKickResultNoitfy::kickedroleid() const {
  return kickedroleid_;
}
inline void CMesssageKickResultNoitfy::set_kickedroleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  kickedroleid_ = value;
}

// optional string KickedRoleName = 3;
inline bool CMesssageKickResultNoitfy::has_kickedrolename() const {
  return _has_bit(2);
}
inline void CMesssageKickResultNoitfy::clear_kickedrolename() {
  if (kickedrolename_ != &_default_kickedrolename_) {
    kickedrolename_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMesssageKickResultNoitfy::kickedrolename() const {
  return *kickedrolename_;
}
inline void CMesssageKickResultNoitfy::set_kickedrolename(const ::std::string& value) {
  _set_bit(2);
  if (kickedrolename_ == &_default_kickedrolename_) {
    kickedrolename_ = new ::std::string;
  }
  kickedrolename_->assign(value);
}
inline void CMesssageKickResultNoitfy::set_kickedrolename(const char* value) {
  _set_bit(2);
  if (kickedrolename_ == &_default_kickedrolename_) {
    kickedrolename_ = new ::std::string;
  }
  kickedrolename_->assign(value);
}
inline void CMesssageKickResultNoitfy::set_kickedrolename(const char* value, size_t size) {
  _set_bit(2);
  if (kickedrolename_ == &_default_kickedrolename_) {
    kickedrolename_ = new ::std::string;
  }
  kickedrolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMesssageKickResultNoitfy::mutable_kickedrolename() {
  _set_bit(2);
  if (kickedrolename_ == &_default_kickedrolename_) {
    kickedrolename_ = new ::std::string;
  }
  return kickedrolename_;
}

// optional uint32 Result = 4;
inline bool CMesssageKickResultNoitfy::has_result() const {
  return _has_bit(3);
}
inline void CMesssageKickResultNoitfy::clear_result() {
  result_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMesssageKickResultNoitfy::result() const {
  return result_;
}
inline void CMesssageKickResultNoitfy::set_result(::google::protobuf::uint32 value) {
  _set_bit(3);
  result_ = value;
}

// -------------------------------------------------------------------

// CMessageIntoCorpsBossRepetionRequest

// optional uint32 BattleID = 1;
inline bool CMessageIntoCorpsBossRepetionRequest::has_battleid() const {
  return _has_bit(0);
}
inline void CMessageIntoCorpsBossRepetionRequest::clear_battleid() {
  battleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageIntoCorpsBossRepetionRequest::battleid() const {
  return battleid_;
}
inline void CMessageIntoCorpsBossRepetionRequest::set_battleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  battleid_ = value;
}

// -------------------------------------------------------------------

// CMessageEnterLastReptionRequest

// optional uint32 Index = 1;
inline bool CMessageEnterLastReptionRequest::has_index() const {
  return _has_bit(0);
}
inline void CMessageEnterLastReptionRequest::clear_index() {
  index_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEnterLastReptionRequest::index() const {
  return index_;
}
inline void CMessageEnterLastReptionRequest::set_index(::google::protobuf::uint32 value) {
  _set_bit(0);
  index_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageEnterLastReptionRequest::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageEnterLastReptionRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageEnterLastReptionRequest::roleid() const {
  return roleid_;
}
inline void CMessageEnterLastReptionRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageEnterLastReptionResponse

// optional uint32 Errcode = 1;
inline bool CMessageEnterLastReptionResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageEnterLastReptionResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEnterLastReptionResponse::errcode() const {
  return errcode_;
}
inline void CMessageEnterLastReptionResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

#endif  // PROTOBUF_repetionmessage_5fpb_2ehxx__INCLUDED
