// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_taskmessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_taskmessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "coremessage_pb.hxx.pb.h"
#include "property_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();

class TaskStruct;
class CMessageObtainTaskRequest;
class CMessageTaskEndRequest;
class CMessageTaskRefreshRequest;
class LoopTaskStruct;
class StorageTaskStruct;
class CMessageObtainTaskNotice;
class CMessageTaskCompleteNotice;
class CMessageTaskEndNotice;
class CMessageUpdateTaskNotice;
class CMessageResetTaskNotice;
class CMessageAbortTaskRequest;
class CMessageTaskListNotice;
class NpcTaskList;
class CMessageNpcTaskListNotice;
class CMessageNpcTaskTipNotice;
class CMessagePlayerSearchRequest;
class CMessagePlayerSearchResponse;
class CMessagePlayerInviteTaskRequest;
class CMessagePlayerInviteTaskNotice;
class CMessagePlayerInviteTaskResponseRequest;
class CMessagePlayerInviteTaskResponseNotice;
class CMessageDoPlayerInviteTaskMsg;
class CMessagePlayerInviteTaskErrorMsg;
class CMessageAbortTaskNotice;
class CMessageTaskFailNotice;
class CMessageUnFinishTaskTime;
class CMessageTaskOprFailNotice;
class CMessageTaskUnRefreshNotice;
class CMessageTaskRefreshResult;
class CMessageRmoveTaskColor;
class CMessageTaskRefreshFailNotice;
class CMessageUnReaccpetTask;
class CMessageNpcStorageTaskListNotice;
class CMessageObtainScrollTaskRequest;
class CMessageTragedyTaskUpdateNotice;
class CMessageGetTipRequest;
class CMessageEndTalkRequest;
class CMessageNpcTalkStateChangeNotice;
class CMessageLockBaggageRequest;
class CMessageLockBaggageResponse;
class TaskCondition;
class CMessageUpdateTaskConditions;
class CMessageClearTaskNotify;
class CMessageTakeOffItemRequest;
class CMessageGetFamilyTaskRequest;
class SingleFamilyTaskResponse;
class CMessageGetFamilyTaskResponse;
class CMessageGetCorpsTaskRequest;
class CMessageGetCorpsTaskResponse;
class CMessageGetCountryTaskRequest;
class CMessageGetCountryTaskResponse;
class CMessageGetCampTaskRequest;
class CMessageGetCampTaskResponse;
class CMessageGetChairManTaskRequest;
class CMessageGetChairManTaskResponse;
class CMessageGetTeamLoopErrNotify;
class PBPubslishList;
class CMessageCheckGroupPublishRequest;
class CMessagePublishGroupTaskRequest;
class CMessageCheckGroupPublishResponse;
class CMessagePublishGroupTaskResponse;
class CMessagePlayerCheckSinglePublish;
class CMessagePlayerSinglePublishTask;
class CMessageRefreshSingleTaskRequest;
class CMessagePlayerGetPublishTaskRequest;
class CMessagePlayerGetAwardsRequest;
class PBSingleColorRank;
class CMessageCheckSinglePublishResponse;
class CMessagePlayerSinglePublishResponse;
class CMessageRefreshSingleTaskResponse;

enum TASK_MSG_ID {
  ID_C2S_REQUEST_OBTAINTASK = 4096,
  ID_C2S_REQUEST_ENDTASK = 4097,
  ID_S2C_NOTICE_OBTAINTASK = 4098,
  ID_S2C_NOTICE_COMPLETE = 4099,
  ID_S2C_NOTICE_TASKEND = 4100,
  ID_S2C_NOTICE_UPDATE = 4101,
  ID_S2C_NOTICE_RESET = 4102,
  ID_C2S_REQUEST_ABORTTASK = 4103,
  ID_S2C_NOTICE_TASKLIST = 4104,
  ID_S2C_NOTICE_NPCTASKLIST = 4105,
  ID_S2C_NOTICE_NPCTASKTIP = 4106,
  ID_C2S_REQUEST_TASK_SEARCH = 4107,
  ID_S2C_NOTICE_TASK_SEARCH = 4108,
  ID_C2S_INVITE_TASK_REQUEST = 4109,
  ID_S2C_INVITE_TASK_NOTICE = 4110,
  ID_C2S_INVITE_TASK_RESPONSE_REQUEST = 4111,
  ID_S2C_INVITE_TASK_RESPONSE_NOTICE = 4624,
  ID_S2S_DOPLAYER_INVITE_TASK_MSG = 4625,
  ID_S2C_PLAYER_INVITE_TASK_ERROR_MSG = 4626,
  ID_S2C_NOTICE_ABORT_TASK = 4116,
  ID_S2C_NOTICE_TASKFAIL = 4117,
  ID_S2C_NOTICE_TASKOPRFAIL = 4118,
  ID_S2C_NOTICE_NPCSTORAGETASKLIST = 4119,
  ID_C2S_REQUEST_OBTAINSCROLLTASK = 4120,
  ID_S2C_NOTICE_TRAGEDYTASKUPDATE = 4121,
  ID_C2S_REQUEST_GETTIP = 4122,
  ID_C2S_REQUEST_ENDTALK = 4123,
  ID_S2C_NOTICE_NPCTALKCHANGE = 4124,
  ID_C2S_REQUEST_LOCKBAG = 4125,
  ID_S2C_LOCKBAG_RESPONSE = 4126,
  ID_S2C_UPDATE_CONDITIONS = 4127,
  ID_S2C_CLEARTASKNOTIFY = 4128,
  ID_C2S_REQUEST_TAKEOFFITEM = 4129,
  ID_C2S_REQUEST_GETFAMILYTASK = 4130,
  ID_S2C_RESPONSE_GETFAMILYTASK = 4131,
  ID_C2S_REQUEST_GETCORPSTASK = 4132,
  ID_S2C_RESPONSE_GETCORPSTASK = 4133,
  ID_C2S_REQUEST_GETCOUNTRYTASK = 4134,
  ID_S2C_RESPONSE_GETCOUNTRYTASK = 4135,
  ID_C2S_REQUEST_GETCAMPTASK = 4136,
  ID_S2C_RESPONSE_GETCAMPTASK = 4137,
  ID_C2S_REQUEST_GETCHAIRMANTASK = 4138,
  ID_S2C_RESPONSE_GETCHAIRMANTASK = 4139,
  ID_S2C_NOTIFY_GETTEAMLOOPERR = 4140,
  ID_S2C_NOTIFY_UNFINISHTIMEERR = 4141,
  ID_C2S_REQUEST_REFRESHTASK = 4142,
  ID_S2C_NOTICE_TASKREFRESHFAIL = 4143,
  ID_S2C_NOTICE_TASKUNREFRESHED = 4144,
  ID_S2C_NOTICE_TASKREFRESHRESULT = 4145,
  ID_S2C_NOTICE_REMOVETASKCOLOR = 4146,
  ID_S2C_NOTICE_TASKUNREACCEPT = 4147,
  ID_C2S_REQUEST_CHECK_GROUPPUBLISH = 4148,
  ID_C2S_REQUEST_PLAYERPUBLISHTASK = 4149,
  ID_S2C_RESPONSE_CHECK_GROUPPUBLISH = 4150,
  ID_S2C_RESPONSE_PLAYERPUBLISHTASK = 4151,
  ID_C2S_REQUEST_CHECK_SINGLEPUBLISH = 4152,
  ID_C2S_REQUEST_SINGLEPUBLISHTASK = 4153,
  ID_C2S_REQUEST_REFRESHSINGLETASK = 4154,
  ID_C2S_REQUEST_OBTAINSINGLETASK = 4155,
  ID_C2S_REQUEST_RECVSINGLEAWARDS = 4156,
  ID_S2C_RESPONSE_CHECK_SINGLEPUBLISH = 4157,
  ID_S2C_RESPONSE_SINGLEPUBLISHTASK = 4158,
  ID_S2C_RESPONSE_REFRESHRESULT = 4159
};
const ::google::protobuf::EnumDescriptor* TASK_MSG_ID_descriptor();
bool TASK_MSG_ID_IsValid(int value);
const TASK_MSG_ID TASK_MSG_ID_MIN = ID_C2S_REQUEST_OBTAINTASK;
const TASK_MSG_ID TASK_MSG_ID_MAX = ID_S2C_PLAYER_INVITE_TASK_ERROR_MSG;

inline const ::std::string& TASK_MSG_ID_Name(TASK_MSG_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    TASK_MSG_ID_descriptor(), value);
}
inline bool TASK_MSG_ID_Parse(
    const ::std::string& name, TASK_MSG_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TASK_MSG_ID>(
    TASK_MSG_ID_descriptor(), name, value);
}
// ===================================================================

class TaskStruct : public ::google::protobuf::Message {
 public:
  TaskStruct();
  virtual ~TaskStruct();
  
  TaskStruct(const TaskStruct& from);
  
  inline TaskStruct& operator=(const TaskStruct& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskStruct& default_instance();
  void Swap(TaskStruct* other);
  
  // implements Message ----------------------------------------------
  
  TaskStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskStruct& from);
  void MergeFrom(const TaskStruct& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Timer = 1;
  inline bool has_timer() const;
  inline void clear_timer();
  static const int kTimerFieldNumber = 1;
  inline ::google::protobuf::int32 timer() const;
  inline void set_timer(::google::protobuf::int32 value);
  
  // repeated uint32 TaskData = 2;
  inline int taskdata_size() const;
  inline void clear_taskdata();
  static const int kTaskDataFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& taskdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_taskdata();
  inline ::google::protobuf::uint32 taskdata(int index) const;
  inline void set_taskdata(int index, ::google::protobuf::uint32 value);
  inline void add_taskdata(::google::protobuf::uint32 value);
  
  // optional uint32 TaskProgress = 3;
  inline bool has_taskprogress() const;
  inline void clear_taskprogress();
  static const int kTaskProgressFieldNumber = 3;
  inline ::google::protobuf::uint32 taskprogress() const;
  inline void set_taskprogress(::google::protobuf::uint32 value);
  
  // repeated uint32 TalkedNpcs = 4;
  inline int talkednpcs_size() const;
  inline void clear_talkednpcs();
  static const int kTalkedNpcsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& talkednpcs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_talkednpcs();
  inline ::google::protobuf::uint32 talkednpcs(int index) const;
  inline void set_talkednpcs(int index, ::google::protobuf::uint32 value);
  inline void add_talkednpcs(::google::protobuf::uint32 value);
  
  // optional uint32 TaskID = 5;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 5;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 timer_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > taskdata_;
  ::google::protobuf::uint32 taskprogress_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > talkednpcs_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TaskStruct* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageObtainTaskRequest();
  virtual ~CMessageObtainTaskRequest();
  
  CMessageObtainTaskRequest(const CMessageObtainTaskRequest& from);
  
  inline CMessageObtainTaskRequest& operator=(const CMessageObtainTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainTaskRequest& default_instance();
  void Swap(CMessageObtainTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainTaskRequest& from);
  void MergeFrom(const CMessageObtainTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcEntityID = 1;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskEndRequest : public ::google::protobuf::Message {
 public:
  CMessageTaskEndRequest();
  virtual ~CMessageTaskEndRequest();
  
  CMessageTaskEndRequest(const CMessageTaskEndRequest& from);
  
  inline CMessageTaskEndRequest& operator=(const CMessageTaskEndRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskEndRequest& default_instance();
  void Swap(CMessageTaskEndRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskEndRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskEndRequest& from);
  void MergeFrom(const CMessageTaskEndRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 SelectID = 3;
  inline bool has_selectid() const;
  inline void clear_selectid();
  static const int kSelectIDFieldNumber = 3;
  inline ::google::protobuf::uint32 selectid() const;
  inline void set_selectid(::google::protobuf::uint32 value);
  
  // optional uint32 BagIndex = 4;
  inline bool has_bagindex() const;
  inline void clear_bagindex();
  static const int kBagIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 bagindex() const;
  inline void set_bagindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 selectid_;
  ::google::protobuf::uint32 bagindex_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskEndRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskRefreshRequest : public ::google::protobuf::Message {
 public:
  CMessageTaskRefreshRequest();
  virtual ~CMessageTaskRefreshRequest();
  
  CMessageTaskRefreshRequest(const CMessageTaskRefreshRequest& from);
  
  inline CMessageTaskRefreshRequest& operator=(const CMessageTaskRefreshRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskRefreshRequest& default_instance();
  void Swap(CMessageTaskRefreshRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskRefreshRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskRefreshRequest& from);
  void MergeFrom(const CMessageTaskRefreshRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 SelectID = 3;
  inline bool has_selectid() const;
  inline void clear_selectid();
  static const int kSelectIDFieldNumber = 3;
  inline ::google::protobuf::uint32 selectid() const;
  inline void set_selectid(::google::protobuf::uint32 value);
  
  // optional uint32 RefreshItemIndex = 4;
  inline bool has_refreshitemindex() const;
  inline void clear_refreshitemindex();
  static const int kRefreshItemIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 refreshitemindex() const;
  inline void set_refreshitemindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 selectid_;
  ::google::protobuf::uint32 refreshitemindex_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskRefreshRequest* default_instance_;
};
// -------------------------------------------------------------------

class LoopTaskStruct : public ::google::protobuf::Message {
 public:
  LoopTaskStruct();
  virtual ~LoopTaskStruct();
  
  LoopTaskStruct(const LoopTaskStruct& from);
  
  inline LoopTaskStruct& operator=(const LoopTaskStruct& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoopTaskStruct& default_instance();
  void Swap(LoopTaskStruct* other);
  
  // implements Message ----------------------------------------------
  
  LoopTaskStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoopTaskStruct& from);
  void MergeFrom(const LoopTaskStruct& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TodayMultiLoops = 1;
  inline bool has_todaymultiloops() const;
  inline void clear_todaymultiloops();
  static const int kTodayMultiLoopsFieldNumber = 1;
  inline ::google::protobuf::uint32 todaymultiloops() const;
  inline void set_todaymultiloops(::google::protobuf::uint32 value);
  
  // optional uint32 WeekMultiLoops = 2;
  inline bool has_weekmultiloops() const;
  inline void clear_weekmultiloops();
  static const int kWeekMultiLoopsFieldNumber = 2;
  inline ::google::protobuf::uint32 weekmultiloops() const;
  inline void set_weekmultiloops(::google::protobuf::uint32 value);
  
  // optional uint32 TotalMultiLoops = 3;
  inline bool has_totalmultiloops() const;
  inline void clear_totalmultiloops();
  static const int kTotalMultiLoopsFieldNumber = 3;
  inline ::google::protobuf::uint32 totalmultiloops() const;
  inline void set_totalmultiloops(::google::protobuf::uint32 value);
  
  // optional uint32 LoopTaskID = 4;
  inline bool has_looptaskid() const;
  inline void clear_looptaskid();
  static const int kLoopTaskIDFieldNumber = 4;
  inline ::google::protobuf::uint32 looptaskid() const;
  inline void set_looptaskid(::google::protobuf::uint32 value);
  
  // optional uint32 CompletedLoops = 5;
  inline bool has_completedloops() const;
  inline void clear_completedloops();
  static const int kCompletedLoopsFieldNumber = 5;
  inline ::google::protobuf::uint32 completedloops() const;
  inline void set_completedloops(::google::protobuf::uint32 value);
  
  // optional uint32 NextLoopID = 6;
  inline bool has_nextloopid() const;
  inline void clear_nextloopid();
  static const int kNextLoopIDFieldNumber = 6;
  inline ::google::protobuf::uint32 nextloopid() const;
  inline void set_nextloopid(::google::protobuf::uint32 value);
  
  // optional uint32 LoopID = 7;
  inline bool has_loopid() const;
  inline void clear_loopid();
  static const int kLoopIDFieldNumber = 7;
  inline ::google::protobuf::uint32 loopid() const;
  inline void set_loopid(::google::protobuf::uint32 value);
  
  // optional uint32 WeekTotalMultiLoops = 8;
  inline bool has_weektotalmultiloops() const;
  inline void clear_weektotalmultiloops();
  static const int kWeekTotalMultiLoopsFieldNumber = 8;
  inline ::google::protobuf::uint32 weektotalmultiloops() const;
  inline void set_weektotalmultiloops(::google::protobuf::uint32 value);
  
  // optional uint32 AwardMultipleToday = 9;
  inline bool has_awardmultipletoday() const;
  inline void clear_awardmultipletoday();
  static const int kAwardMultipleTodayFieldNumber = 9;
  inline ::google::protobuf::uint32 awardmultipletoday() const;
  inline void set_awardmultipletoday(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 todaymultiloops_;
  ::google::protobuf::uint32 weekmultiloops_;
  ::google::protobuf::uint32 totalmultiloops_;
  ::google::protobuf::uint32 looptaskid_;
  ::google::protobuf::uint32 completedloops_;
  ::google::protobuf::uint32 nextloopid_;
  ::google::protobuf::uint32 loopid_;
  ::google::protobuf::uint32 weektotalmultiloops_;
  ::google::protobuf::uint32 awardmultipletoday_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static LoopTaskStruct* default_instance_;
};
// -------------------------------------------------------------------

class StorageTaskStruct : public ::google::protobuf::Message {
 public:
  StorageTaskStruct();
  virtual ~StorageTaskStruct();
  
  StorageTaskStruct(const StorageTaskStruct& from);
  
  inline StorageTaskStruct& operator=(const StorageTaskStruct& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StorageTaskStruct& default_instance();
  void Swap(StorageTaskStruct* other);
  
  // implements Message ----------------------------------------------
  
  StorageTaskStruct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StorageTaskStruct& from);
  void MergeFrom(const StorageTaskStruct& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TodayCompletes = 1;
  inline bool has_todaycompletes() const;
  inline void clear_todaycompletes();
  static const int kTodayCompletesFieldNumber = 1;
  inline ::google::protobuf::uint32 todaycompletes() const;
  inline void set_todaycompletes(::google::protobuf::uint32 value);
  
  // optional uint32 TotalMultiLoops = 2;
  inline bool has_totalmultiloops() const;
  inline void clear_totalmultiloops();
  static const int kTotalMultiLoopsFieldNumber = 2;
  inline ::google::protobuf::uint32 totalmultiloops() const;
  inline void set_totalmultiloops(::google::protobuf::uint32 value);
  
  // optional uint32 AwardMultipleToday = 3;
  inline bool has_awardmultipletoday() const;
  inline void clear_awardmultipletoday();
  static const int kAwardMultipleTodayFieldNumber = 3;
  inline ::google::protobuf::uint32 awardmultipletoday() const;
  inline void set_awardmultipletoday(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 todaycompletes_;
  ::google::protobuf::uint32 totalmultiloops_;
  ::google::protobuf::uint32 awardmultipletoday_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StorageTaskStruct* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainTaskNotice : public ::google::protobuf::Message {
 public:
  CMessageObtainTaskNotice();
  virtual ~CMessageObtainTaskNotice();
  
  CMessageObtainTaskNotice(const CMessageObtainTaskNotice& from);
  
  inline CMessageObtainTaskNotice& operator=(const CMessageObtainTaskNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainTaskNotice& default_instance();
  void Swap(CMessageObtainTaskNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainTaskNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainTaskNotice& from);
  void MergeFrom(const CMessageObtainTaskNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .TaskStruct Task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::TaskStruct& task() const;
  inline ::TaskStruct* mutable_task();
  
  // optional .LoopTaskStruct LoopTask = 2;
  inline bool has_looptask() const;
  inline void clear_looptask();
  static const int kLoopTaskFieldNumber = 2;
  inline const ::LoopTaskStruct& looptask() const;
  inline ::LoopTaskStruct* mutable_looptask();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::TaskStruct* task_;
  ::LoopTaskStruct* looptask_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainTaskNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskCompleteNotice : public ::google::protobuf::Message {
 public:
  CMessageTaskCompleteNotice();
  virtual ~CMessageTaskCompleteNotice();
  
  CMessageTaskCompleteNotice(const CMessageTaskCompleteNotice& from);
  
  inline CMessageTaskCompleteNotice& operator=(const CMessageTaskCompleteNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskCompleteNotice& default_instance();
  void Swap(CMessageTaskCompleteNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskCompleteNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskCompleteNotice& from);
  void MergeFrom(const CMessageTaskCompleteNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskCompleteNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskEndNotice : public ::google::protobuf::Message {
 public:
  CMessageTaskEndNotice();
  virtual ~CMessageTaskEndNotice();
  
  CMessageTaskEndNotice(const CMessageTaskEndNotice& from);
  
  inline CMessageTaskEndNotice& operator=(const CMessageTaskEndNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskEndNotice& default_instance();
  void Swap(CMessageTaskEndNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskEndNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskEndNotice& from);
  void MergeFrom(const CMessageTaskEndNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional .StorageTaskStruct StorageTask = 2;
  inline bool has_storagetask() const;
  inline void clear_storagetask();
  static const int kStorageTaskFieldNumber = 2;
  inline const ::StorageTaskStruct& storagetask() const;
  inline ::StorageTaskStruct* mutable_storagetask();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::StorageTaskStruct* storagetask_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskEndNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateTaskNotice : public ::google::protobuf::Message {
 public:
  CMessageUpdateTaskNotice();
  virtual ~CMessageUpdateTaskNotice();
  
  CMessageUpdateTaskNotice(const CMessageUpdateTaskNotice& from);
  
  inline CMessageUpdateTaskNotice& operator=(const CMessageUpdateTaskNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateTaskNotice& default_instance();
  void Swap(CMessageUpdateTaskNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateTaskNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateTaskNotice& from);
  void MergeFrom(const CMessageUpdateTaskNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .TaskStruct Task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::TaskStruct& task() const;
  inline ::TaskStruct* mutable_task();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::TaskStruct* task_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateTaskNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageResetTaskNotice : public ::google::protobuf::Message {
 public:
  CMessageResetTaskNotice();
  virtual ~CMessageResetTaskNotice();
  
  CMessageResetTaskNotice(const CMessageResetTaskNotice& from);
  
  inline CMessageResetTaskNotice& operator=(const CMessageResetTaskNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageResetTaskNotice& default_instance();
  void Swap(CMessageResetTaskNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageResetTaskNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageResetTaskNotice& from);
  void MergeFrom(const CMessageResetTaskNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageResetTaskNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAbortTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageAbortTaskRequest();
  virtual ~CMessageAbortTaskRequest();
  
  CMessageAbortTaskRequest(const CMessageAbortTaskRequest& from);
  
  inline CMessageAbortTaskRequest& operator=(const CMessageAbortTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAbortTaskRequest& default_instance();
  void Swap(CMessageAbortTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAbortTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAbortTaskRequest& from);
  void MergeFrom(const CMessageAbortTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAbortTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskListNotice : public ::google::protobuf::Message {
 public:
  CMessageTaskListNotice();
  virtual ~CMessageTaskListNotice();
  
  CMessageTaskListNotice(const CMessageTaskListNotice& from);
  
  inline CMessageTaskListNotice& operator=(const CMessageTaskListNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskListNotice& default_instance();
  void Swap(CMessageTaskListNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskListNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskListNotice& from);
  void MergeFrom(const CMessageTaskListNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes CompletedBuf = 1;
  inline bool has_completedbuf() const;
  inline void clear_completedbuf();
  static const int kCompletedBufFieldNumber = 1;
  inline const ::std::string& completedbuf() const;
  inline void set_completedbuf(const ::std::string& value);
  inline void set_completedbuf(const char* value);
  inline void set_completedbuf(const void* value, size_t size);
  inline ::std::string* mutable_completedbuf();
  
  // optional uint32 TaskNum = 2;
  inline bool has_tasknum() const;
  inline void clear_tasknum();
  static const int kTaskNumFieldNumber = 2;
  inline ::google::protobuf::uint32 tasknum() const;
  inline void set_tasknum(::google::protobuf::uint32 value);
  
  // optional .LoopTaskStruct LoopTask = 3;
  inline bool has_looptask() const;
  inline void clear_looptask();
  static const int kLoopTaskFieldNumber = 3;
  inline const ::LoopTaskStruct& looptask() const;
  inline ::LoopTaskStruct* mutable_looptask();
  
  // repeated .TaskStruct Tasks = 4;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::TaskStruct >& tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskStruct >* mutable_tasks();
  inline const ::TaskStruct& tasks(int index) const;
  inline ::TaskStruct* mutable_tasks(int index);
  inline ::TaskStruct* add_tasks();
  
  // repeated uint32 CompletedTasks = 5;
  inline int completedtasks_size() const;
  inline void clear_completedtasks();
  static const int kCompletedTasksFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& completedtasks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_completedtasks();
  inline ::google::protobuf::uint32 completedtasks(int index) const;
  inline void set_completedtasks(int index, ::google::protobuf::uint32 value);
  inline void add_completedtasks(::google::protobuf::uint32 value);
  
  // optional .StorageTaskStruct StorageTask = 6;
  inline bool has_storagetask() const;
  inline void clear_storagetask();
  static const int kStorageTaskFieldNumber = 6;
  inline const ::StorageTaskStruct& storagetask() const;
  inline ::StorageTaskStruct* mutable_storagetask();
  
  // repeated uint32 ChairManSectionIDs = 7;
  inline int chairmansectionids_size() const;
  inline void clear_chairmansectionids();
  static const int kChairManSectionIDsFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& chairmansectionids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_chairmansectionids();
  inline ::google::protobuf::uint32 chairmansectionids(int index) const;
  inline void set_chairmansectionids(int index, ::google::protobuf::uint32 value);
  inline void add_chairmansectionids(::google::protobuf::uint32 value);
  
  // repeated uint32 RepeateTasks = 8;
  inline int repeatetasks_size() const;
  inline void clear_repeatetasks();
  static const int kRepeateTasksFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& repeatetasks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_repeatetasks();
  inline ::google::protobuf::uint32 repeatetasks(int index) const;
  inline void set_repeatetasks(int index, ::google::protobuf::uint32 value);
  inline void add_repeatetasks(::google::protobuf::uint32 value);
  
  // repeated uint32 EndTime = 9;
  inline int endtime_size() const;
  inline void clear_endtime();
  static const int kEndTimeFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& endtime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_endtime();
  inline ::google::protobuf::uint32 endtime(int index) const;
  inline void set_endtime(int index, ::google::protobuf::uint32 value);
  inline void add_endtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* completedbuf_;
  static const ::std::string _default_completedbuf_;
  ::google::protobuf::uint32 tasknum_;
  ::LoopTaskStruct* looptask_;
  ::google::protobuf::RepeatedPtrField< ::TaskStruct > tasks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > completedtasks_;
  ::StorageTaskStruct* storagetask_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > chairmansectionids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > repeatetasks_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > endtime_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskListNotice* default_instance_;
};
// -------------------------------------------------------------------

class NpcTaskList : public ::google::protobuf::Message {
 public:
  NpcTaskList();
  virtual ~NpcTaskList();
  
  NpcTaskList(const NpcTaskList& from);
  
  inline NpcTaskList& operator=(const NpcTaskList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcTaskList& default_instance();
  void Swap(NpcTaskList* other);
  
  // implements Message ----------------------------------------------
  
  NpcTaskList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcTaskList& from);
  void MergeFrom(const NpcTaskList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 ExtendTaskID = 1;
  inline int extendtaskid_size() const;
  inline void clear_extendtaskid();
  static const int kExtendTaskIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& extendtaskid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_extendtaskid();
  inline ::google::protobuf::uint32 extendtaskid(int index) const;
  inline void set_extendtaskid(int index, ::google::protobuf::uint32 value);
  inline void add_extendtaskid(::google::protobuf::uint32 value);
  
  // optional uint32 CallbackNumber = 2;
  inline bool has_callbacknumber() const;
  inline void clear_callbacknumber();
  static const int kCallbackNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 callbacknumber() const;
  inline void set_callbacknumber(::google::protobuf::uint32 value);
  
  // optional uint32 ExtendNumber = 3;
  inline bool has_extendnumber() const;
  inline void clear_extendnumber();
  static const int kExtendNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 extendnumber() const;
  inline void set_extendnumber(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 4;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 4;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // repeated uint32 CallbackTaskID = 5;
  inline int callbacktaskid_size() const;
  inline void clear_callbacktaskid();
  static const int kCallbackTaskIDFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& callbacktaskid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_callbacktaskid();
  inline ::google::protobuf::uint32 callbacktaskid(int index) const;
  inline void set_callbacktaskid(int index, ::google::protobuf::uint32 value);
  inline void add_callbacktaskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > extendtaskid_;
  ::google::protobuf::uint32 callbacknumber_;
  ::google::protobuf::uint32 extendnumber_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > callbacktaskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static NpcTaskList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNpcTaskListNotice : public ::google::protobuf::Message {
 public:
  CMessageNpcTaskListNotice();
  virtual ~CMessageNpcTaskListNotice();
  
  CMessageNpcTaskListNotice(const CMessageNpcTaskListNotice& from);
  
  inline CMessageNpcTaskListNotice& operator=(const CMessageNpcTaskListNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNpcTaskListNotice& default_instance();
  void Swap(CMessageNpcTaskListNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNpcTaskListNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNpcTaskListNotice& from);
  void MergeFrom(const CMessageNpcTaskListNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .NpcTaskList List = 1;
  inline bool has_list() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::NpcTaskList& list() const;
  inline ::NpcTaskList* mutable_list();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::NpcTaskList* list_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNpcTaskListNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNpcTaskTipNotice : public ::google::protobuf::Message {
 public:
  CMessageNpcTaskTipNotice();
  virtual ~CMessageNpcTaskTipNotice();
  
  CMessageNpcTaskTipNotice(const CMessageNpcTaskTipNotice& from);
  
  inline CMessageNpcTaskTipNotice& operator=(const CMessageNpcTaskTipNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNpcTaskTipNotice& default_instance();
  void Swap(CMessageNpcTaskTipNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNpcTaskTipNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNpcTaskTipNotice& from);
  void MergeFrom(const CMessageNpcTaskTipNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 NpcEntityID = 1;
  inline int npcentityid_size() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& npcentityid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_npcentityid();
  inline ::google::protobuf::uint32 npcentityid(int index) const;
  inline void set_npcentityid(int index, ::google::protobuf::uint32 value);
  inline void add_npcentityid(::google::protobuf::uint32 value);
  
  // repeated uint32 Tip = 2;
  inline int tip_size() const;
  inline void clear_tip();
  static const int kTipFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& tip() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_tip();
  inline ::google::protobuf::uint32 tip(int index) const;
  inline void set_tip(int index, ::google::protobuf::uint32 value);
  inline void add_tip(::google::protobuf::uint32 value);
  
  // optional uint32 IdType = 3;
  inline bool has_idtype() const;
  inline void clear_idtype();
  static const int kIdTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 idtype() const;
  inline void set_idtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > npcentityid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tip_;
  ::google::protobuf::uint32 idtype_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNpcTaskTipNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerSearchRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerSearchRequest();
  virtual ~CMessagePlayerSearchRequest();
  
  CMessagePlayerSearchRequest(const CMessagePlayerSearchRequest& from);
  
  inline CMessagePlayerSearchRequest& operator=(const CMessagePlayerSearchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerSearchRequest& default_instance();
  void Swap(CMessagePlayerSearchRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerSearchRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerSearchRequest& from);
  void MergeFrom(const CMessagePlayerSearchRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerSearchRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerSearchResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerSearchResponse();
  virtual ~CMessagePlayerSearchResponse();
  
  CMessagePlayerSearchResponse(const CMessagePlayerSearchResponse& from);
  
  inline CMessagePlayerSearchResponse& operator=(const CMessagePlayerSearchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerSearchResponse& default_instance();
  void Swap(CMessagePlayerSearchResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerSearchResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerSearchResponse& from);
  void MergeFrom(const CMessagePlayerSearchResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 TaskIDs = 1;
  inline int taskids_size() const;
  inline void clear_taskids();
  static const int kTaskIDsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& taskids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_taskids();
  inline ::google::protobuf::uint32 taskids(int index) const;
  inline void set_taskids(int index, ::google::protobuf::uint32 value);
  inline void add_taskids(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > taskids_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerSearchResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerInviteTaskRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerInviteTaskRequest();
  virtual ~CMessagePlayerInviteTaskRequest();
  
  CMessagePlayerInviteTaskRequest(const CMessagePlayerInviteTaskRequest& from);
  
  inline CMessagePlayerInviteTaskRequest& operator=(const CMessagePlayerInviteTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerInviteTaskRequest& default_instance();
  void Swap(CMessagePlayerInviteTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerInviteTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerInviteTaskRequest& from);
  void MergeFrom(const CMessagePlayerInviteTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string PlayerNames = 1;
  inline int playernames_size() const;
  inline void clear_playernames();
  static const int kPlayerNamesFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& playernames() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_playernames();
  inline const ::std::string& playernames(int index) const;
  inline ::std::string* mutable_playernames(int index);
  inline void set_playernames(int index, const ::std::string& value);
  inline void set_playernames(int index, const char* value);
  inline void set_playernames(int index, const char* value, size_t size);
  inline ::std::string* add_playernames();
  inline void add_playernames(const ::std::string& value);
  inline void add_playernames(const char* value);
  inline void add_playernames(const char* value, size_t size);
  
  // optional uint32 TaskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> playernames_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerInviteTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerInviteTaskNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerInviteTaskNotice();
  virtual ~CMessagePlayerInviteTaskNotice();
  
  CMessagePlayerInviteTaskNotice(const CMessagePlayerInviteTaskNotice& from);
  
  inline CMessagePlayerInviteTaskNotice& operator=(const CMessagePlayerInviteTaskNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerInviteTaskNotice& default_instance();
  void Swap(CMessagePlayerInviteTaskNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerInviteTaskNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerInviteTaskNotice& from);
  void MergeFrom(const CMessagePlayerInviteTaskNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional string SrcPlayerName = 2;
  inline bool has_srcplayername() const;
  inline void clear_srcplayername();
  static const int kSrcPlayerNameFieldNumber = 2;
  inline const ::std::string& srcplayername() const;
  inline void set_srcplayername(const ::std::string& value);
  inline void set_srcplayername(const char* value);
  inline void set_srcplayername(const char* value, size_t size);
  inline ::std::string* mutable_srcplayername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::std::string* srcplayername_;
  static const ::std::string _default_srcplayername_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerInviteTaskNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerInviteTaskResponseRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerInviteTaskResponseRequest();
  virtual ~CMessagePlayerInviteTaskResponseRequest();
  
  CMessagePlayerInviteTaskResponseRequest(const CMessagePlayerInviteTaskResponseRequest& from);
  
  inline CMessagePlayerInviteTaskResponseRequest& operator=(const CMessagePlayerInviteTaskResponseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerInviteTaskResponseRequest& default_instance();
  void Swap(CMessagePlayerInviteTaskResponseRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerInviteTaskResponseRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerInviteTaskResponseRequest& from);
  void MergeFrom(const CMessagePlayerInviteTaskResponseRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 AgreeFlag = 2;
  inline bool has_agreeflag() const;
  inline void clear_agreeflag();
  static const int kAgreeFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 agreeflag() const;
  inline void set_agreeflag(::google::protobuf::uint32 value);
  
  // optional string SrcPlayerName = 3;
  inline bool has_srcplayername() const;
  inline void clear_srcplayername();
  static const int kSrcPlayerNameFieldNumber = 3;
  inline const ::std::string& srcplayername() const;
  inline void set_srcplayername(const ::std::string& value);
  inline void set_srcplayername(const char* value);
  inline void set_srcplayername(const char* value, size_t size);
  inline ::std::string* mutable_srcplayername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 agreeflag_;
  ::std::string* srcplayername_;
  static const ::std::string _default_srcplayername_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerInviteTaskResponseRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerInviteTaskResponseNotice : public ::google::protobuf::Message {
 public:
  CMessagePlayerInviteTaskResponseNotice();
  virtual ~CMessagePlayerInviteTaskResponseNotice();
  
  CMessagePlayerInviteTaskResponseNotice(const CMessagePlayerInviteTaskResponseNotice& from);
  
  inline CMessagePlayerInviteTaskResponseNotice& operator=(const CMessagePlayerInviteTaskResponseNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerInviteTaskResponseNotice& default_instance();
  void Swap(CMessagePlayerInviteTaskResponseNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerInviteTaskResponseNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerInviteTaskResponseNotice& from);
  void MergeFrom(const CMessagePlayerInviteTaskResponseNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional string SrcPlayerName = 2;
  inline bool has_srcplayername() const;
  inline void clear_srcplayername();
  static const int kSrcPlayerNameFieldNumber = 2;
  inline const ::std::string& srcplayername() const;
  inline void set_srcplayername(const ::std::string& value);
  inline void set_srcplayername(const char* value);
  inline void set_srcplayername(const char* value, size_t size);
  inline ::std::string* mutable_srcplayername();
  
  // optional uint32 TaskID = 3;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 3;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 AgreeFlag = 4;
  inline bool has_agreeflag() const;
  inline void clear_agreeflag();
  static const int kAgreeFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 agreeflag() const;
  inline void set_agreeflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::std::string* srcplayername_;
  static const ::std::string _default_srcplayername_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 agreeflag_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerInviteTaskResponseNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDoPlayerInviteTaskMsg : public ::google::protobuf::Message {
 public:
  CMessageDoPlayerInviteTaskMsg();
  virtual ~CMessageDoPlayerInviteTaskMsg();
  
  CMessageDoPlayerInviteTaskMsg(const CMessageDoPlayerInviteTaskMsg& from);
  
  inline CMessageDoPlayerInviteTaskMsg& operator=(const CMessageDoPlayerInviteTaskMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDoPlayerInviteTaskMsg& default_instance();
  void Swap(CMessageDoPlayerInviteTaskMsg* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDoPlayerInviteTaskMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDoPlayerInviteTaskMsg& from);
  void MergeFrom(const CMessageDoPlayerInviteTaskMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 TaskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDoPlayerInviteTaskMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerInviteTaskErrorMsg : public ::google::protobuf::Message {
 public:
  CMessagePlayerInviteTaskErrorMsg();
  virtual ~CMessagePlayerInviteTaskErrorMsg();
  
  CMessagePlayerInviteTaskErrorMsg(const CMessagePlayerInviteTaskErrorMsg& from);
  
  inline CMessagePlayerInviteTaskErrorMsg& operator=(const CMessagePlayerInviteTaskErrorMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerInviteTaskErrorMsg& default_instance();
  void Swap(CMessagePlayerInviteTaskErrorMsg* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerInviteTaskErrorMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerInviteTaskErrorMsg& from);
  void MergeFrom(const CMessagePlayerInviteTaskErrorMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 TaskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TypeID = 3;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIDFieldNumber = 3;
  inline ::google::protobuf::uint32 typeid_() const;
  inline void set_typeid_(::google::protobuf::uint32 value);
  
  // optional string MyName = 4;
  inline bool has_myname() const;
  inline void clear_myname();
  static const int kMyNameFieldNumber = 4;
  inline const ::std::string& myname() const;
  inline void set_myname(const ::std::string& value);
  inline void set_myname(const char* value);
  inline void set_myname(const char* value, size_t size);
  inline ::std::string* mutable_myname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 typeid__;
  ::std::string* myname_;
  static const ::std::string _default_myname_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerInviteTaskErrorMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAbortTaskNotice : public ::google::protobuf::Message {
 public:
  CMessageAbortTaskNotice();
  virtual ~CMessageAbortTaskNotice();
  
  CMessageAbortTaskNotice(const CMessageAbortTaskNotice& from);
  
  inline CMessageAbortTaskNotice& operator=(const CMessageAbortTaskNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAbortTaskNotice& default_instance();
  void Swap(CMessageAbortTaskNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAbortTaskNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAbortTaskNotice& from);
  void MergeFrom(const CMessageAbortTaskNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAbortTaskNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskFailNotice : public ::google::protobuf::Message {
 public:
  CMessageTaskFailNotice();
  virtual ~CMessageTaskFailNotice();
  
  CMessageTaskFailNotice(const CMessageTaskFailNotice& from);
  
  inline CMessageTaskFailNotice& operator=(const CMessageTaskFailNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskFailNotice& default_instance();
  void Swap(CMessageTaskFailNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskFailNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskFailNotice& from);
  void MergeFrom(const CMessageTaskFailNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskFailNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnFinishTaskTime : public ::google::protobuf::Message {
 public:
  CMessageUnFinishTaskTime();
  virtual ~CMessageUnFinishTaskTime();
  
  CMessageUnFinishTaskTime(const CMessageUnFinishTaskTime& from);
  
  inline CMessageUnFinishTaskTime& operator=(const CMessageUnFinishTaskTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnFinishTaskTime& default_instance();
  void Swap(CMessageUnFinishTaskTime* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnFinishTaskTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnFinishTaskTime& from);
  void MergeFrom(const CMessageUnFinishTaskTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedTime = 2;
  inline bool has_needtime() const;
  inline void clear_needtime();
  static const int kNeedTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 needtime() const;
  inline void set_needtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 needtime_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnFinishTaskTime* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskOprFailNotice : public ::google::protobuf::Message {
 public:
  CMessageTaskOprFailNotice();
  virtual ~CMessageTaskOprFailNotice();
  
  CMessageTaskOprFailNotice(const CMessageTaskOprFailNotice& from);
  
  inline CMessageTaskOprFailNotice& operator=(const CMessageTaskOprFailNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskOprFailNotice& default_instance();
  void Swap(CMessageTaskOprFailNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskOprFailNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskOprFailNotice& from);
  void MergeFrom(const CMessageTaskOprFailNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskOprFailNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskUnRefreshNotice : public ::google::protobuf::Message {
 public:
  CMessageTaskUnRefreshNotice();
  virtual ~CMessageTaskUnRefreshNotice();
  
  CMessageTaskUnRefreshNotice(const CMessageTaskUnRefreshNotice& from);
  
  inline CMessageTaskUnRefreshNotice& operator=(const CMessageTaskUnRefreshNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskUnRefreshNotice& default_instance();
  void Swap(CMessageTaskUnRefreshNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskUnRefreshNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskUnRefreshNotice& from);
  void MergeFrom(const CMessageTaskUnRefreshNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskUnRefreshNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskRefreshResult : public ::google::protobuf::Message {
 public:
  CMessageTaskRefreshResult();
  virtual ~CMessageTaskRefreshResult();
  
  CMessageTaskRefreshResult(const CMessageTaskRefreshResult& from);
  
  inline CMessageTaskRefreshResult& operator=(const CMessageTaskRefreshResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskRefreshResult& default_instance();
  void Swap(CMessageTaskRefreshResult* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskRefreshResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskRefreshResult& from);
  void MergeFrom(const CMessageTaskRefreshResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskColor = 2;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 2;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
  // optional uint32 TaskNumber = 3;
  inline bool has_tasknumber() const;
  inline void clear_tasknumber();
  static const int kTaskNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 tasknumber() const;
  inline void set_tasknumber(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskcolor_;
  ::google::protobuf::uint32 tasknumber_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskRefreshResult* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRmoveTaskColor : public ::google::protobuf::Message {
 public:
  CMessageRmoveTaskColor();
  virtual ~CMessageRmoveTaskColor();
  
  CMessageRmoveTaskColor(const CMessageRmoveTaskColor& from);
  
  inline CMessageRmoveTaskColor& operator=(const CMessageRmoveTaskColor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRmoveTaskColor& default_instance();
  void Swap(CMessageRmoveTaskColor* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRmoveTaskColor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRmoveTaskColor& from);
  void MergeFrom(const CMessageRmoveTaskColor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskColor = 2;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 2;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskcolor_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRmoveTaskColor* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTaskRefreshFailNotice : public ::google::protobuf::Message {
 public:
  CMessageTaskRefreshFailNotice();
  virtual ~CMessageTaskRefreshFailNotice();
  
  CMessageTaskRefreshFailNotice(const CMessageTaskRefreshFailNotice& from);
  
  inline CMessageTaskRefreshFailNotice& operator=(const CMessageTaskRefreshFailNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTaskRefreshFailNotice& default_instance();
  void Swap(CMessageTaskRefreshFailNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTaskRefreshFailNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTaskRefreshFailNotice& from);
  void MergeFrom(const CMessageTaskRefreshFailNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTaskRefreshFailNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnReaccpetTask : public ::google::protobuf::Message {
 public:
  CMessageUnReaccpetTask();
  virtual ~CMessageUnReaccpetTask();
  
  CMessageUnReaccpetTask(const CMessageUnReaccpetTask& from);
  
  inline CMessageUnReaccpetTask& operator=(const CMessageUnReaccpetTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnReaccpetTask& default_instance();
  void Swap(CMessageUnReaccpetTask* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnReaccpetTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnReaccpetTask& from);
  void MergeFrom(const CMessageUnReaccpetTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedTime = 2;
  inline bool has_needtime() const;
  inline void clear_needtime();
  static const int kNeedTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 needtime() const;
  inline void set_needtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 needtime_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnReaccpetTask* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNpcStorageTaskListNotice : public ::google::protobuf::Message {
 public:
  CMessageNpcStorageTaskListNotice();
  virtual ~CMessageNpcStorageTaskListNotice();
  
  CMessageNpcStorageTaskListNotice(const CMessageNpcStorageTaskListNotice& from);
  
  inline CMessageNpcStorageTaskListNotice& operator=(const CMessageNpcStorageTaskListNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNpcStorageTaskListNotice& default_instance();
  void Swap(CMessageNpcStorageTaskListNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNpcStorageTaskListNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNpcStorageTaskListNotice& from);
  void MergeFrom(const CMessageNpcStorageTaskListNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .NpcTaskList List = 1;
  inline bool has_list() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::NpcTaskList& list() const;
  inline ::NpcTaskList* mutable_list();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::NpcTaskList* list_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNpcStorageTaskListNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainScrollTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageObtainScrollTaskRequest();
  virtual ~CMessageObtainScrollTaskRequest();
  
  CMessageObtainScrollTaskRequest(const CMessageObtainScrollTaskRequest& from);
  
  inline CMessageObtainScrollTaskRequest& operator=(const CMessageObtainScrollTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainScrollTaskRequest& default_instance();
  void Swap(CMessageObtainScrollTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainScrollTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainScrollTaskRequest& from);
  void MergeFrom(const CMessageObtainScrollTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ScrollID = 1;
  inline bool has_scrollid() const;
  inline void clear_scrollid();
  static const int kScrollIDFieldNumber = 1;
  inline ::google::protobuf::uint32 scrollid() const;
  inline void set_scrollid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 scrollid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainScrollTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTragedyTaskUpdateNotice : public ::google::protobuf::Message {
 public:
  CMessageTragedyTaskUpdateNotice();
  virtual ~CMessageTragedyTaskUpdateNotice();
  
  CMessageTragedyTaskUpdateNotice(const CMessageTragedyTaskUpdateNotice& from);
  
  inline CMessageTragedyTaskUpdateNotice& operator=(const CMessageTragedyTaskUpdateNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTragedyTaskUpdateNotice& default_instance();
  void Swap(CMessageTragedyTaskUpdateNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTragedyTaskUpdateNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTragedyTaskUpdateNotice& from);
  void MergeFrom(const CMessageTragedyTaskUpdateNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .TragedyStruct TragedyInfo = 1;
  inline int tragedyinfo_size() const;
  inline void clear_tragedyinfo();
  static const int kTragedyInfoFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::TragedyStruct >& tragedyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::TragedyStruct >* mutable_tragedyinfo();
  inline const ::TragedyStruct& tragedyinfo(int index) const;
  inline ::TragedyStruct* mutable_tragedyinfo(int index);
  inline ::TragedyStruct* add_tragedyinfo();
  
  // optional uint32 IsLogin = 2;
  inline bool has_islogin() const;
  inline void clear_islogin();
  static const int kIsLoginFieldNumber = 2;
  inline ::google::protobuf::uint32 islogin() const;
  inline void set_islogin(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::TragedyStruct > tragedyinfo_;
  ::google::protobuf::uint32 islogin_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTragedyTaskUpdateNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetTipRequest : public ::google::protobuf::Message {
 public:
  CMessageGetTipRequest();
  virtual ~CMessageGetTipRequest();
  
  CMessageGetTipRequest(const CMessageGetTipRequest& from);
  
  inline CMessageGetTipRequest& operator=(const CMessageGetTipRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetTipRequest& default_instance();
  void Swap(CMessageGetTipRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetTipRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetTipRequest& from);
  void MergeFrom(const CMessageGetTipRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 NpcEntityID = 1;
  inline int npcentityid_size() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& npcentityid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_npcentityid();
  inline ::google::protobuf::uint32 npcentityid(int index) const;
  inline void set_npcentityid(int index, ::google::protobuf::uint32 value);
  inline void add_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 IdType = 2;
  inline bool has_idtype() const;
  inline void clear_idtype();
  static const int kIdTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 idtype() const;
  inline void set_idtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > npcentityid_;
  ::google::protobuf::uint32 idtype_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetTipRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEndTalkRequest : public ::google::protobuf::Message {
 public:
  CMessageEndTalkRequest();
  virtual ~CMessageEndTalkRequest();
  
  CMessageEndTalkRequest(const CMessageEndTalkRequest& from);
  
  inline CMessageEndTalkRequest& operator=(const CMessageEndTalkRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEndTalkRequest& default_instance();
  void Swap(CMessageEndTalkRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEndTalkRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEndTalkRequest& from);
  void MergeFrom(const CMessageEndTalkRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcEntityID = 1;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEndTalkRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageNpcTalkStateChangeNotice : public ::google::protobuf::Message {
 public:
  CMessageNpcTalkStateChangeNotice();
  virtual ~CMessageNpcTalkStateChangeNotice();
  
  CMessageNpcTalkStateChangeNotice(const CMessageNpcTalkStateChangeNotice& from);
  
  inline CMessageNpcTalkStateChangeNotice& operator=(const CMessageNpcTalkStateChangeNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageNpcTalkStateChangeNotice& default_instance();
  void Swap(CMessageNpcTalkStateChangeNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageNpcTalkStateChangeNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageNpcTalkStateChangeNotice& from);
  void MergeFrom(const CMessageNpcTalkStateChangeNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 State = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTempID = 3;
  inline bool has_npctempid() const;
  inline void clear_npctempid();
  static const int kNpcTempIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npctempid() const;
  inline void set_npctempid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 npctempid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageNpcTalkStateChangeNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLockBaggageRequest : public ::google::protobuf::Message {
 public:
  CMessageLockBaggageRequest();
  virtual ~CMessageLockBaggageRequest();
  
  CMessageLockBaggageRequest(const CMessageLockBaggageRequest& from);
  
  inline CMessageLockBaggageRequest& operator=(const CMessageLockBaggageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLockBaggageRequest& default_instance();
  void Swap(CMessageLockBaggageRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLockBaggageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLockBaggageRequest& from);
  void MergeFrom(const CMessageLockBaggageRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemIndex = 1;
  inline bool has_itemindex() const;
  inline void clear_itemindex();
  static const int kItemIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 itemindex() const;
  inline void set_itemindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemindex_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLockBaggageRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLockBaggageResponse : public ::google::protobuf::Message {
 public:
  CMessageLockBaggageResponse();
  virtual ~CMessageLockBaggageResponse();
  
  CMessageLockBaggageResponse(const CMessageLockBaggageResponse& from);
  
  inline CMessageLockBaggageResponse& operator=(const CMessageLockBaggageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLockBaggageResponse& default_instance();
  void Swap(CMessageLockBaggageResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLockBaggageResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLockBaggageResponse& from);
  void MergeFrom(const CMessageLockBaggageResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemIndex = 1;
  inline bool has_itemindex() const;
  inline void clear_itemindex();
  static const int kItemIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 itemindex() const;
  inline void set_itemindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemindex_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLockBaggageResponse* default_instance_;
};
// -------------------------------------------------------------------

class TaskCondition : public ::google::protobuf::Message {
 public:
  TaskCondition();
  virtual ~TaskCondition();
  
  TaskCondition(const TaskCondition& from);
  
  inline TaskCondition& operator=(const TaskCondition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskCondition& default_instance();
  void Swap(TaskCondition* other);
  
  // implements Message ----------------------------------------------
  
  TaskCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskCondition& from);
  void MergeFrom(const TaskCondition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional fixed32 Condition = 2;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 2;
  inline ::google::protobuf::uint32 condition() const;
  inline void set_condition(::google::protobuf::uint32 value);
  
  // optional fixed32 TempID = 3;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 3;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 Num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 condition_;
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TaskCondition* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateTaskConditions : public ::google::protobuf::Message {
 public:
  CMessageUpdateTaskConditions();
  virtual ~CMessageUpdateTaskConditions();
  
  CMessageUpdateTaskConditions(const CMessageUpdateTaskConditions& from);
  
  inline CMessageUpdateTaskConditions& operator=(const CMessageUpdateTaskConditions& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateTaskConditions& default_instance();
  void Swap(CMessageUpdateTaskConditions* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateTaskConditions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateTaskConditions& from);
  void MergeFrom(const CMessageUpdateTaskConditions& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .TaskCondition Contions = 1;
  inline int contions_size() const;
  inline void clear_contions();
  static const int kContionsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::TaskCondition >& contions() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskCondition >* mutable_contions();
  inline const ::TaskCondition& contions(int index) const;
  inline ::TaskCondition* mutable_contions(int index);
  inline ::TaskCondition* add_contions();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::TaskCondition > contions_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateTaskConditions* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClearTaskNotify : public ::google::protobuf::Message {
 public:
  CMessageClearTaskNotify();
  virtual ~CMessageClearTaskNotify();
  
  CMessageClearTaskNotify(const CMessageClearTaskNotify& from);
  
  inline CMessageClearTaskNotify& operator=(const CMessageClearTaskNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClearTaskNotify& default_instance();
  void Swap(CMessageClearTaskNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClearTaskNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClearTaskNotify& from);
  void MergeFrom(const CMessageClearTaskNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClearTaskNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageTakeOffItemRequest : public ::google::protobuf::Message {
 public:
  CMessageTakeOffItemRequest();
  virtual ~CMessageTakeOffItemRequest();
  
  CMessageTakeOffItemRequest(const CMessageTakeOffItemRequest& from);
  
  inline CMessageTakeOffItemRequest& operator=(const CMessageTakeOffItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageTakeOffItemRequest& default_instance();
  void Swap(CMessageTakeOffItemRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageTakeOffItemRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageTakeOffItemRequest& from);
  void MergeFrom(const CMessageTakeOffItemRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageTakeOffItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetFamilyTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageGetFamilyTaskRequest();
  virtual ~CMessageGetFamilyTaskRequest();
  
  CMessageGetFamilyTaskRequest(const CMessageGetFamilyTaskRequest& from);
  
  inline CMessageGetFamilyTaskRequest& operator=(const CMessageGetFamilyTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetFamilyTaskRequest& default_instance();
  void Swap(CMessageGetFamilyTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetFamilyTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetFamilyTaskRequest& from);
  void MergeFrom(const CMessageGetFamilyTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 TaskTypes = 1;
  inline int tasktypes_size() const;
  inline void clear_tasktypes();
  static const int kTaskTypesFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& tasktypes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_tasktypes();
  inline ::google::protobuf::uint32 tasktypes(int index) const;
  inline void set_tasktypes(int index, ::google::protobuf::uint32 value);
  inline void add_tasktypes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tasktypes_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetFamilyTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class SingleFamilyTaskResponse : public ::google::protobuf::Message {
 public:
  SingleFamilyTaskResponse();
  virtual ~SingleFamilyTaskResponse();
  
  SingleFamilyTaskResponse(const SingleFamilyTaskResponse& from);
  
  inline SingleFamilyTaskResponse& operator=(const SingleFamilyTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFamilyTaskResponse& default_instance();
  void Swap(SingleFamilyTaskResponse* other);
  
  // implements Message ----------------------------------------------
  
  SingleFamilyTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleFamilyTaskResponse& from);
  void MergeFrom(const SingleFamilyTaskResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskIDs = 1;
  inline bool has_taskids() const;
  inline void clear_taskids();
  static const int kTaskIDsFieldNumber = 1;
  inline ::google::protobuf::uint32 taskids() const;
  inline void set_taskids(::google::protobuf::uint32 value);
  
  // optional uint32 TodayTimes = 2;
  inline bool has_todaytimes() const;
  inline void clear_todaytimes();
  static const int kTodayTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 todaytimes() const;
  inline void set_todaytimes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskids_;
  ::google::protobuf::uint32 todaytimes_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleFamilyTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetFamilyTaskResponse : public ::google::protobuf::Message {
 public:
  CMessageGetFamilyTaskResponse();
  virtual ~CMessageGetFamilyTaskResponse();
  
  CMessageGetFamilyTaskResponse(const CMessageGetFamilyTaskResponse& from);
  
  inline CMessageGetFamilyTaskResponse& operator=(const CMessageGetFamilyTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetFamilyTaskResponse& default_instance();
  void Swap(CMessageGetFamilyTaskResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetFamilyTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetFamilyTaskResponse& from);
  void MergeFrom(const CMessageGetFamilyTaskResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleFamilyTaskResponse Tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >& tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >* mutable_tasks();
  inline const ::SingleFamilyTaskResponse& tasks(int index) const;
  inline ::SingleFamilyTaskResponse* mutable_tasks(int index);
  inline ::SingleFamilyTaskResponse* add_tasks();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse > tasks_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetFamilyTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsTaskRequest();
  virtual ~CMessageGetCorpsTaskRequest();
  
  CMessageGetCorpsTaskRequest(const CMessageGetCorpsTaskRequest& from);
  
  inline CMessageGetCorpsTaskRequest& operator=(const CMessageGetCorpsTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsTaskRequest& default_instance();
  void Swap(CMessageGetCorpsTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsTaskRequest& from);
  void MergeFrom(const CMessageGetCorpsTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsTaskResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsTaskResponse();
  virtual ~CMessageGetCorpsTaskResponse();
  
  CMessageGetCorpsTaskResponse(const CMessageGetCorpsTaskResponse& from);
  
  inline CMessageGetCorpsTaskResponse& operator=(const CMessageGetCorpsTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsTaskResponse& default_instance();
  void Swap(CMessageGetCorpsTaskResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsTaskResponse& from);
  void MergeFrom(const CMessageGetCorpsTaskResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleFamilyTaskResponse Tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >& tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >* mutable_tasks();
  inline const ::SingleFamilyTaskResponse& tasks(int index) const;
  inline ::SingleFamilyTaskResponse* mutable_tasks(int index);
  inline ::SingleFamilyTaskResponse* add_tasks();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse > tasks_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCountryTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCountryTaskRequest();
  virtual ~CMessageGetCountryTaskRequest();
  
  CMessageGetCountryTaskRequest(const CMessageGetCountryTaskRequest& from);
  
  inline CMessageGetCountryTaskRequest& operator=(const CMessageGetCountryTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCountryTaskRequest& default_instance();
  void Swap(CMessageGetCountryTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCountryTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCountryTaskRequest& from);
  void MergeFrom(const CMessageGetCountryTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCountryTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCountryTaskResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCountryTaskResponse();
  virtual ~CMessageGetCountryTaskResponse();
  
  CMessageGetCountryTaskResponse(const CMessageGetCountryTaskResponse& from);
  
  inline CMessageGetCountryTaskResponse& operator=(const CMessageGetCountryTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCountryTaskResponse& default_instance();
  void Swap(CMessageGetCountryTaskResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCountryTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCountryTaskResponse& from);
  void MergeFrom(const CMessageGetCountryTaskResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleFamilyTaskResponse Tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >& tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >* mutable_tasks();
  inline const ::SingleFamilyTaskResponse& tasks(int index) const;
  inline ::SingleFamilyTaskResponse* mutable_tasks(int index);
  inline ::SingleFamilyTaskResponse* add_tasks();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse > tasks_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCountryTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCampTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCampTaskRequest();
  virtual ~CMessageGetCampTaskRequest();
  
  CMessageGetCampTaskRequest(const CMessageGetCampTaskRequest& from);
  
  inline CMessageGetCampTaskRequest& operator=(const CMessageGetCampTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCampTaskRequest& default_instance();
  void Swap(CMessageGetCampTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCampTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCampTaskRequest& from);
  void MergeFrom(const CMessageGetCampTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCampTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCampTaskResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCampTaskResponse();
  virtual ~CMessageGetCampTaskResponse();
  
  CMessageGetCampTaskResponse(const CMessageGetCampTaskResponse& from);
  
  inline CMessageGetCampTaskResponse& operator=(const CMessageGetCampTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCampTaskResponse& default_instance();
  void Swap(CMessageGetCampTaskResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCampTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCampTaskResponse& from);
  void MergeFrom(const CMessageGetCampTaskResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleFamilyTaskResponse Tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >& tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >* mutable_tasks();
  inline const ::SingleFamilyTaskResponse& tasks(int index) const;
  inline ::SingleFamilyTaskResponse* mutable_tasks(int index);
  inline ::SingleFamilyTaskResponse* add_tasks();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse > tasks_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCampTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetChairManTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageGetChairManTaskRequest();
  virtual ~CMessageGetChairManTaskRequest();
  
  CMessageGetChairManTaskRequest(const CMessageGetChairManTaskRequest& from);
  
  inline CMessageGetChairManTaskRequest& operator=(const CMessageGetChairManTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetChairManTaskRequest& default_instance();
  void Swap(CMessageGetChairManTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetChairManTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetChairManTaskRequest& from);
  void MergeFrom(const CMessageGetChairManTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcEntityID = 1;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetChairManTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetChairManTaskResponse : public ::google::protobuf::Message {
 public:
  CMessageGetChairManTaskResponse();
  virtual ~CMessageGetChairManTaskResponse();
  
  CMessageGetChairManTaskResponse(const CMessageGetChairManTaskResponse& from);
  
  inline CMessageGetChairManTaskResponse& operator=(const CMessageGetChairManTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetChairManTaskResponse& default_instance();
  void Swap(CMessageGetChairManTaskResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetChairManTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetChairManTaskResponse& from);
  void MergeFrom(const CMessageGetChairManTaskResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleChairManTask TaskIDs = 1;
  inline int taskids_size() const;
  inline void clear_taskids();
  static const int kTaskIDsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleChairManTask >& taskids() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleChairManTask >* mutable_taskids();
  inline const ::SingleChairManTask& taskids(int index) const;
  inline ::SingleChairManTask* mutable_taskids(int index);
  inline ::SingleChairManTask* add_taskids();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleChairManTask > taskids_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetChairManTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetTeamLoopErrNotify : public ::google::protobuf::Message {
 public:
  CMessageGetTeamLoopErrNotify();
  virtual ~CMessageGetTeamLoopErrNotify();
  
  CMessageGetTeamLoopErrNotify(const CMessageGetTeamLoopErrNotify& from);
  
  inline CMessageGetTeamLoopErrNotify& operator=(const CMessageGetTeamLoopErrNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetTeamLoopErrNotify& default_instance();
  void Swap(CMessageGetTeamLoopErrNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetTeamLoopErrNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetTeamLoopErrNotify& from);
  void MergeFrom(const CMessageGetTeamLoopErrNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string CharName = 1;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 1;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 ErrCode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetTeamLoopErrNotify* default_instance_;
};
// -------------------------------------------------------------------

class PBPubslishList : public ::google::protobuf::Message {
 public:
  PBPubslishList();
  virtual ~PBPubslishList();
  
  PBPubslishList(const PBPubslishList& from);
  
  inline PBPubslishList& operator=(const PBPubslishList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPubslishList& default_instance();
  void Swap(PBPubslishList* other);
  
  // implements Message ----------------------------------------------
  
  PBPubslishList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPubslishList& from);
  void MergeFrom(const PBPubslishList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 TaskState = 2;
  inline bool has_taskstate() const;
  inline void clear_taskstate();
  static const int kTaskStateFieldNumber = 2;
  inline ::google::protobuf::uint32 taskstate() const;
  inline void set_taskstate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskstate_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPubslishList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCheckGroupPublishRequest : public ::google::protobuf::Message {
 public:
  CMessageCheckGroupPublishRequest();
  virtual ~CMessageCheckGroupPublishRequest();
  
  CMessageCheckGroupPublishRequest(const CMessageCheckGroupPublishRequest& from);
  
  inline CMessageCheckGroupPublishRequest& operator=(const CMessageCheckGroupPublishRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCheckGroupPublishRequest& default_instance();
  void Swap(CMessageCheckGroupPublishRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCheckGroupPublishRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCheckGroupPublishRequest& from);
  void MergeFrom(const CMessageCheckGroupPublishRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PublishType = 1;
  inline bool has_publishtype() const;
  inline void clear_publishtype();
  static const int kPublishTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 publishtype() const;
  inline void set_publishtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 publishtype_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCheckGroupPublishRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePublishGroupTaskRequest : public ::google::protobuf::Message {
 public:
  CMessagePublishGroupTaskRequest();
  virtual ~CMessagePublishGroupTaskRequest();
  
  CMessagePublishGroupTaskRequest(const CMessagePublishGroupTaskRequest& from);
  
  inline CMessagePublishGroupTaskRequest& operator=(const CMessagePublishGroupTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePublishGroupTaskRequest& default_instance();
  void Swap(CMessagePublishGroupTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePublishGroupTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePublishGroupTaskRequest& from);
  void MergeFrom(const CMessagePublishGroupTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 PublishType = 2;
  inline bool has_publishtype() const;
  inline void clear_publishtype();
  static const int kPublishTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 publishtype() const;
  inline void set_publishtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 publishtype_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePublishGroupTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCheckGroupPublishResponse : public ::google::protobuf::Message {
 public:
  CMessageCheckGroupPublishResponse();
  virtual ~CMessageCheckGroupPublishResponse();
  
  CMessageCheckGroupPublishResponse(const CMessageCheckGroupPublishResponse& from);
  
  inline CMessageCheckGroupPublishResponse& operator=(const CMessageCheckGroupPublishResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCheckGroupPublishResponse& default_instance();
  void Swap(CMessageCheckGroupPublishResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCheckGroupPublishResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCheckGroupPublishResponse& from);
  void MergeFrom(const CMessageCheckGroupPublishResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PublishType = 1;
  inline bool has_publishtype() const;
  inline void clear_publishtype();
  static const int kPublishTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 publishtype() const;
  inline void set_publishtype(::google::protobuf::uint32 value);
  
  // repeated .PBPubslishList Tasks = 2;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPubslishList >& tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPubslishList >* mutable_tasks();
  inline const ::PBPubslishList& tasks(int index) const;
  inline ::PBPubslishList* mutable_tasks(int index);
  inline ::PBPubslishList* add_tasks();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 publishtype_;
  ::google::protobuf::RepeatedPtrField< ::PBPubslishList > tasks_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCheckGroupPublishResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePublishGroupTaskResponse : public ::google::protobuf::Message {
 public:
  CMessagePublishGroupTaskResponse();
  virtual ~CMessagePublishGroupTaskResponse();
  
  CMessagePublishGroupTaskResponse(const CMessagePublishGroupTaskResponse& from);
  
  inline CMessagePublishGroupTaskResponse& operator=(const CMessagePublishGroupTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePublishGroupTaskResponse& default_instance();
  void Swap(CMessagePublishGroupTaskResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePublishGroupTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePublishGroupTaskResponse& from);
  void MergeFrom(const CMessagePublishGroupTaskResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 PublishType = 2;
  inline bool has_publishtype() const;
  inline void clear_publishtype();
  static const int kPublishTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 publishtype() const;
  inline void set_publishtype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 publishtype_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePublishGroupTaskResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerCheckSinglePublish : public ::google::protobuf::Message {
 public:
  CMessagePlayerCheckSinglePublish();
  virtual ~CMessagePlayerCheckSinglePublish();
  
  CMessagePlayerCheckSinglePublish(const CMessagePlayerCheckSinglePublish& from);
  
  inline CMessagePlayerCheckSinglePublish& operator=(const CMessagePlayerCheckSinglePublish& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerCheckSinglePublish& default_instance();
  void Swap(CMessagePlayerCheckSinglePublish* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerCheckSinglePublish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerCheckSinglePublish& from);
  void MergeFrom(const CMessagePlayerCheckSinglePublish& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerCheckSinglePublish* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerSinglePublishTask : public ::google::protobuf::Message {
 public:
  CMessagePlayerSinglePublishTask();
  virtual ~CMessagePlayerSinglePublishTask();
  
  CMessagePlayerSinglePublishTask(const CMessagePlayerSinglePublishTask& from);
  
  inline CMessagePlayerSinglePublishTask& operator=(const CMessagePlayerSinglePublishTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerSinglePublishTask& default_instance();
  void Swap(CMessagePlayerSinglePublishTask* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerSinglePublishTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerSinglePublishTask& from);
  void MergeFrom(const CMessagePlayerSinglePublishTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskColor = 1;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 1;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
  // optional uint32 ItemIndex = 2;
  inline bool has_itemindex() const;
  inline void clear_itemindex();
  static const int kItemIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 itemindex() const;
  inline void set_itemindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskcolor_;
  ::google::protobuf::uint32 itemindex_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerSinglePublishTask* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRefreshSingleTaskRequest : public ::google::protobuf::Message {
 public:
  CMessageRefreshSingleTaskRequest();
  virtual ~CMessageRefreshSingleTaskRequest();
  
  CMessageRefreshSingleTaskRequest(const CMessageRefreshSingleTaskRequest& from);
  
  inline CMessageRefreshSingleTaskRequest& operator=(const CMessageRefreshSingleTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRefreshSingleTaskRequest& default_instance();
  void Swap(CMessageRefreshSingleTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRefreshSingleTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRefreshSingleTaskRequest& from);
  void MergeFrom(const CMessageRefreshSingleTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskColor = 1;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 1;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
  // optional uint32 ItemIndex = 2;
  inline bool has_itemindex() const;
  inline void clear_itemindex();
  static const int kItemIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 itemindex() const;
  inline void set_itemindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskcolor_;
  ::google::protobuf::uint32 itemindex_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRefreshSingleTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerGetPublishTaskRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerGetPublishTaskRequest();
  virtual ~CMessagePlayerGetPublishTaskRequest();
  
  CMessagePlayerGetPublishTaskRequest(const CMessagePlayerGetPublishTaskRequest& from);
  
  inline CMessagePlayerGetPublishTaskRequest& operator=(const CMessagePlayerGetPublishTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerGetPublishTaskRequest& default_instance();
  void Swap(CMessagePlayerGetPublishTaskRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerGetPublishTaskRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerGetPublishTaskRequest& from);
  void MergeFrom(const CMessagePlayerGetPublishTaskRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskColor = 1;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 1;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskcolor_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerGetPublishTaskRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerGetAwardsRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerGetAwardsRequest();
  virtual ~CMessagePlayerGetAwardsRequest();
  
  CMessagePlayerGetAwardsRequest(const CMessagePlayerGetAwardsRequest& from);
  
  inline CMessagePlayerGetAwardsRequest& operator=(const CMessagePlayerGetAwardsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerGetAwardsRequest& default_instance();
  void Swap(CMessagePlayerGetAwardsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerGetAwardsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerGetAwardsRequest& from);
  void MergeFrom(const CMessagePlayerGetAwardsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskColor = 1;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 1;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskcolor_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerGetAwardsRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBSingleColorRank : public ::google::protobuf::Message {
 public:
  PBSingleColorRank();
  virtual ~PBSingleColorRank();
  
  PBSingleColorRank(const PBSingleColorRank& from);
  
  inline PBSingleColorRank& operator=(const PBSingleColorRank& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSingleColorRank& default_instance();
  void Swap(PBSingleColorRank* other);
  
  // implements Message ----------------------------------------------
  
  PBSingleColorRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSingleColorRank& from);
  void MergeFrom(const PBSingleColorRank& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PubNumber = 1;
  inline bool has_pubnumber() const;
  inline void clear_pubnumber();
  static const int kPubNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 pubnumber() const;
  inline void set_pubnumber(::google::protobuf::uint32 value);
  
  // optional uint32 RecvTasks = 2;
  inline bool has_recvtasks() const;
  inline void clear_recvtasks();
  static const int kRecvTasksFieldNumber = 2;
  inline ::google::protobuf::uint32 recvtasks() const;
  inline void set_recvtasks(::google::protobuf::uint32 value);
  
  // optional uint32 RecvAwards = 3;
  inline bool has_recvawards() const;
  inline void clear_recvawards();
  static const int kRecvAwardsFieldNumber = 3;
  inline ::google::protobuf::uint32 recvawards() const;
  inline void set_recvawards(::google::protobuf::uint32 value);
  
  // optional uint32 CurrentTask = 4;
  inline bool has_currenttask() const;
  inline void clear_currenttask();
  static const int kCurrentTaskFieldNumber = 4;
  inline ::google::protobuf::uint32 currenttask() const;
  inline void set_currenttask(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 pubnumber_;
  ::google::protobuf::uint32 recvtasks_;
  ::google::protobuf::uint32 recvawards_;
  ::google::protobuf::uint32 currenttask_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSingleColorRank* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCheckSinglePublishResponse : public ::google::protobuf::Message {
 public:
  CMessageCheckSinglePublishResponse();
  virtual ~CMessageCheckSinglePublishResponse();
  
  CMessageCheckSinglePublishResponse(const CMessageCheckSinglePublishResponse& from);
  
  inline CMessageCheckSinglePublishResponse& operator=(const CMessageCheckSinglePublishResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCheckSinglePublishResponse& default_instance();
  void Swap(CMessageCheckSinglePublishResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCheckSinglePublishResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCheckSinglePublishResponse& from);
  void MergeFrom(const CMessageCheckSinglePublishResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TodayPublish = 1;
  inline bool has_todaypublish() const;
  inline void clear_todaypublish();
  static const int kTodayPublishFieldNumber = 1;
  inline ::google::protobuf::uint32 todaypublish() const;
  inline void set_todaypublish(::google::protobuf::uint32 value);
  
  // optional uint32 OncePublish = 2;
  inline bool has_oncepublish() const;
  inline void clear_oncepublish();
  static const int kOncePublishFieldNumber = 2;
  inline ::google::protobuf::uint32 oncepublish() const;
  inline void set_oncepublish(::google::protobuf::uint32 value);
  
  // optional uint32 TotalFinish = 3;
  inline bool has_totalfinish() const;
  inline void clear_totalfinish();
  static const int kTotalFinishFieldNumber = 3;
  inline ::google::protobuf::uint32 totalfinish() const;
  inline void set_totalfinish(::google::protobuf::uint32 value);
  
  // repeated .PBSingleColorRank SingleRank = 4;
  inline int singlerank_size() const;
  inline void clear_singlerank();
  static const int kSingleRankFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSingleColorRank >& singlerank() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSingleColorRank >* mutable_singlerank();
  inline const ::PBSingleColorRank& singlerank(int index) const;
  inline ::PBSingleColorRank* mutable_singlerank(int index);
  inline ::PBSingleColorRank* add_singlerank();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 todaypublish_;
  ::google::protobuf::uint32 oncepublish_;
  ::google::protobuf::uint32 totalfinish_;
  ::google::protobuf::RepeatedPtrField< ::PBSingleColorRank > singlerank_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCheckSinglePublishResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerSinglePublishResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerSinglePublishResponse();
  virtual ~CMessagePlayerSinglePublishResponse();
  
  CMessagePlayerSinglePublishResponse(const CMessagePlayerSinglePublishResponse& from);
  
  inline CMessagePlayerSinglePublishResponse& operator=(const CMessagePlayerSinglePublishResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerSinglePublishResponse& default_instance();
  void Swap(CMessagePlayerSinglePublishResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerSinglePublishResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerSinglePublishResponse& from);
  void MergeFrom(const CMessagePlayerSinglePublishResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskColor = 1;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 1;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskcolor_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerSinglePublishResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRefreshSingleTaskResponse : public ::google::protobuf::Message {
 public:
  CMessageRefreshSingleTaskResponse();
  virtual ~CMessageRefreshSingleTaskResponse();
  
  CMessageRefreshSingleTaskResponse(const CMessageRefreshSingleTaskResponse& from);
  
  inline CMessageRefreshSingleTaskResponse& operator=(const CMessageRefreshSingleTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRefreshSingleTaskResponse& default_instance();
  void Swap(CMessageRefreshSingleTaskResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRefreshSingleTaskResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRefreshSingleTaskResponse& from);
  void MergeFrom(const CMessageRefreshSingleTaskResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaskColor = 1;
  inline bool has_taskcolor() const;
  inline void clear_taskcolor();
  static const int kTaskColorFieldNumber = 1;
  inline ::google::protobuf::uint32 taskcolor() const;
  inline void set_taskcolor(::google::protobuf::uint32 value);
  
  // optional uint32 TaskID = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskcolor_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_taskmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_taskmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRefreshSingleTaskResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// TaskStruct

// optional int32 Timer = 1;
inline bool TaskStruct::has_timer() const {
  return _has_bit(0);
}
inline void TaskStruct::clear_timer() {
  timer_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 TaskStruct::timer() const {
  return timer_;
}
inline void TaskStruct::set_timer(::google::protobuf::int32 value) {
  _set_bit(0);
  timer_ = value;
}

// repeated uint32 TaskData = 2;
inline int TaskStruct::taskdata_size() const {
  return taskdata_.size();
}
inline void TaskStruct::clear_taskdata() {
  taskdata_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TaskStruct::taskdata() const {
  return taskdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TaskStruct::mutable_taskdata() {
  return &taskdata_;
}
inline ::google::protobuf::uint32 TaskStruct::taskdata(int index) const {
  return taskdata_.Get(index);
}
inline void TaskStruct::set_taskdata(int index, ::google::protobuf::uint32 value) {
  taskdata_.Set(index, value);
}
inline void TaskStruct::add_taskdata(::google::protobuf::uint32 value) {
  taskdata_.Add(value);
}

// optional uint32 TaskProgress = 3;
inline bool TaskStruct::has_taskprogress() const {
  return _has_bit(2);
}
inline void TaskStruct::clear_taskprogress() {
  taskprogress_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 TaskStruct::taskprogress() const {
  return taskprogress_;
}
inline void TaskStruct::set_taskprogress(::google::protobuf::uint32 value) {
  _set_bit(2);
  taskprogress_ = value;
}

// repeated uint32 TalkedNpcs = 4;
inline int TaskStruct::talkednpcs_size() const {
  return talkednpcs_.size();
}
inline void TaskStruct::clear_talkednpcs() {
  talkednpcs_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TaskStruct::talkednpcs() const {
  return talkednpcs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TaskStruct::mutable_talkednpcs() {
  return &talkednpcs_;
}
inline ::google::protobuf::uint32 TaskStruct::talkednpcs(int index) const {
  return talkednpcs_.Get(index);
}
inline void TaskStruct::set_talkednpcs(int index, ::google::protobuf::uint32 value) {
  talkednpcs_.Set(index, value);
}
inline void TaskStruct::add_talkednpcs(::google::protobuf::uint32 value) {
  talkednpcs_.Add(value);
}

// optional uint32 TaskID = 5;
inline bool TaskStruct::has_taskid() const {
  return _has_bit(4);
}
inline void TaskStruct::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 TaskStruct::taskid() const {
  return taskid_;
}
inline void TaskStruct::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(4);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainTaskRequest

// optional uint32 NpcEntityID = 1;
inline bool CMessageObtainTaskRequest::has_npcentityid() const {
  return _has_bit(0);
}
inline void CMessageObtainTaskRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageObtainTaskRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageObtainTaskRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcentityid_ = value;
}

// optional uint32 TaskID = 2;
inline bool CMessageObtainTaskRequest::has_taskid() const {
  return _has_bit(1);
}
inline void CMessageObtainTaskRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageObtainTaskRequest::taskid() const {
  return taskid_;
}
inline void CMessageObtainTaskRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageTaskEndRequest

// optional uint32 TaskID = 1;
inline bool CMessageTaskEndRequest::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageTaskEndRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTaskEndRequest::taskid() const {
  return taskid_;
}
inline void CMessageTaskEndRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 NpcEntityID = 2;
inline bool CMessageTaskEndRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageTaskEndRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTaskEndRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageTaskEndRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// optional uint32 SelectID = 3;
inline bool CMessageTaskEndRequest::has_selectid() const {
  return _has_bit(2);
}
inline void CMessageTaskEndRequest::clear_selectid() {
  selectid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTaskEndRequest::selectid() const {
  return selectid_;
}
inline void CMessageTaskEndRequest::set_selectid(::google::protobuf::uint32 value) {
  _set_bit(2);
  selectid_ = value;
}

// optional uint32 BagIndex = 4;
inline bool CMessageTaskEndRequest::has_bagindex() const {
  return _has_bit(3);
}
inline void CMessageTaskEndRequest::clear_bagindex() {
  bagindex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTaskEndRequest::bagindex() const {
  return bagindex_;
}
inline void CMessageTaskEndRequest::set_bagindex(::google::protobuf::uint32 value) {
  _set_bit(3);
  bagindex_ = value;
}

// -------------------------------------------------------------------

// CMessageTaskRefreshRequest

// optional uint32 TaskID = 1;
inline bool CMessageTaskRefreshRequest::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageTaskRefreshRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTaskRefreshRequest::taskid() const {
  return taskid_;
}
inline void CMessageTaskRefreshRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 NpcEntityID = 2;
inline bool CMessageTaskRefreshRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageTaskRefreshRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTaskRefreshRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageTaskRefreshRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// optional uint32 SelectID = 3;
inline bool CMessageTaskRefreshRequest::has_selectid() const {
  return _has_bit(2);
}
inline void CMessageTaskRefreshRequest::clear_selectid() {
  selectid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTaskRefreshRequest::selectid() const {
  return selectid_;
}
inline void CMessageTaskRefreshRequest::set_selectid(::google::protobuf::uint32 value) {
  _set_bit(2);
  selectid_ = value;
}

// optional uint32 RefreshItemIndex = 4;
inline bool CMessageTaskRefreshRequest::has_refreshitemindex() const {
  return _has_bit(3);
}
inline void CMessageTaskRefreshRequest::clear_refreshitemindex() {
  refreshitemindex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageTaskRefreshRequest::refreshitemindex() const {
  return refreshitemindex_;
}
inline void CMessageTaskRefreshRequest::set_refreshitemindex(::google::protobuf::uint32 value) {
  _set_bit(3);
  refreshitemindex_ = value;
}

// -------------------------------------------------------------------

// LoopTaskStruct

// optional uint32 TodayMultiLoops = 1;
inline bool LoopTaskStruct::has_todaymultiloops() const {
  return _has_bit(0);
}
inline void LoopTaskStruct::clear_todaymultiloops() {
  todaymultiloops_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 LoopTaskStruct::todaymultiloops() const {
  return todaymultiloops_;
}
inline void LoopTaskStruct::set_todaymultiloops(::google::protobuf::uint32 value) {
  _set_bit(0);
  todaymultiloops_ = value;
}

// optional uint32 WeekMultiLoops = 2;
inline bool LoopTaskStruct::has_weekmultiloops() const {
  return _has_bit(1);
}
inline void LoopTaskStruct::clear_weekmultiloops() {
  weekmultiloops_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 LoopTaskStruct::weekmultiloops() const {
  return weekmultiloops_;
}
inline void LoopTaskStruct::set_weekmultiloops(::google::protobuf::uint32 value) {
  _set_bit(1);
  weekmultiloops_ = value;
}

// optional uint32 TotalMultiLoops = 3;
inline bool LoopTaskStruct::has_totalmultiloops() const {
  return _has_bit(2);
}
inline void LoopTaskStruct::clear_totalmultiloops() {
  totalmultiloops_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 LoopTaskStruct::totalmultiloops() const {
  return totalmultiloops_;
}
inline void LoopTaskStruct::set_totalmultiloops(::google::protobuf::uint32 value) {
  _set_bit(2);
  totalmultiloops_ = value;
}

// optional uint32 LoopTaskID = 4;
inline bool LoopTaskStruct::has_looptaskid() const {
  return _has_bit(3);
}
inline void LoopTaskStruct::clear_looptaskid() {
  looptaskid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 LoopTaskStruct::looptaskid() const {
  return looptaskid_;
}
inline void LoopTaskStruct::set_looptaskid(::google::protobuf::uint32 value) {
  _set_bit(3);
  looptaskid_ = value;
}

// optional uint32 CompletedLoops = 5;
inline bool LoopTaskStruct::has_completedloops() const {
  return _has_bit(4);
}
inline void LoopTaskStruct::clear_completedloops() {
  completedloops_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 LoopTaskStruct::completedloops() const {
  return completedloops_;
}
inline void LoopTaskStruct::set_completedloops(::google::protobuf::uint32 value) {
  _set_bit(4);
  completedloops_ = value;
}

// optional uint32 NextLoopID = 6;
inline bool LoopTaskStruct::has_nextloopid() const {
  return _has_bit(5);
}
inline void LoopTaskStruct::clear_nextloopid() {
  nextloopid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 LoopTaskStruct::nextloopid() const {
  return nextloopid_;
}
inline void LoopTaskStruct::set_nextloopid(::google::protobuf::uint32 value) {
  _set_bit(5);
  nextloopid_ = value;
}

// optional uint32 LoopID = 7;
inline bool LoopTaskStruct::has_loopid() const {
  return _has_bit(6);
}
inline void LoopTaskStruct::clear_loopid() {
  loopid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 LoopTaskStruct::loopid() const {
  return loopid_;
}
inline void LoopTaskStruct::set_loopid(::google::protobuf::uint32 value) {
  _set_bit(6);
  loopid_ = value;
}

// optional uint32 WeekTotalMultiLoops = 8;
inline bool LoopTaskStruct::has_weektotalmultiloops() const {
  return _has_bit(7);
}
inline void LoopTaskStruct::clear_weektotalmultiloops() {
  weektotalmultiloops_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 LoopTaskStruct::weektotalmultiloops() const {
  return weektotalmultiloops_;
}
inline void LoopTaskStruct::set_weektotalmultiloops(::google::protobuf::uint32 value) {
  _set_bit(7);
  weektotalmultiloops_ = value;
}

// optional uint32 AwardMultipleToday = 9;
inline bool LoopTaskStruct::has_awardmultipletoday() const {
  return _has_bit(8);
}
inline void LoopTaskStruct::clear_awardmultipletoday() {
  awardmultipletoday_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 LoopTaskStruct::awardmultipletoday() const {
  return awardmultipletoday_;
}
inline void LoopTaskStruct::set_awardmultipletoday(::google::protobuf::uint32 value) {
  _set_bit(8);
  awardmultipletoday_ = value;
}

// -------------------------------------------------------------------

// StorageTaskStruct

// optional uint32 TodayCompletes = 1;
inline bool StorageTaskStruct::has_todaycompletes() const {
  return _has_bit(0);
}
inline void StorageTaskStruct::clear_todaycompletes() {
  todaycompletes_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 StorageTaskStruct::todaycompletes() const {
  return todaycompletes_;
}
inline void StorageTaskStruct::set_todaycompletes(::google::protobuf::uint32 value) {
  _set_bit(0);
  todaycompletes_ = value;
}

// optional uint32 TotalMultiLoops = 2;
inline bool StorageTaskStruct::has_totalmultiloops() const {
  return _has_bit(1);
}
inline void StorageTaskStruct::clear_totalmultiloops() {
  totalmultiloops_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 StorageTaskStruct::totalmultiloops() const {
  return totalmultiloops_;
}
inline void StorageTaskStruct::set_totalmultiloops(::google::protobuf::uint32 value) {
  _set_bit(1);
  totalmultiloops_ = value;
}

// optional uint32 AwardMultipleToday = 3;
inline bool StorageTaskStruct::has_awardmultipletoday() const {
  return _has_bit(2);
}
inline void StorageTaskStruct::clear_awardmultipletoday() {
  awardmultipletoday_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 StorageTaskStruct::awardmultipletoday() const {
  return awardmultipletoday_;
}
inline void StorageTaskStruct::set_awardmultipletoday(::google::protobuf::uint32 value) {
  _set_bit(2);
  awardmultipletoday_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainTaskNotice

// optional .TaskStruct Task = 1;
inline bool CMessageObtainTaskNotice::has_task() const {
  return _has_bit(0);
}
inline void CMessageObtainTaskNotice::clear_task() {
  if (task_ != NULL) task_->::TaskStruct::Clear();
  _clear_bit(0);
}
inline const ::TaskStruct& CMessageObtainTaskNotice::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::TaskStruct* CMessageObtainTaskNotice::mutable_task() {
  _set_bit(0);
  if (task_ == NULL) task_ = new ::TaskStruct;
  return task_;
}

// optional .LoopTaskStruct LoopTask = 2;
inline bool CMessageObtainTaskNotice::has_looptask() const {
  return _has_bit(1);
}
inline void CMessageObtainTaskNotice::clear_looptask() {
  if (looptask_ != NULL) looptask_->::LoopTaskStruct::Clear();
  _clear_bit(1);
}
inline const ::LoopTaskStruct& CMessageObtainTaskNotice::looptask() const {
  return looptask_ != NULL ? *looptask_ : *default_instance_->looptask_;
}
inline ::LoopTaskStruct* CMessageObtainTaskNotice::mutable_looptask() {
  _set_bit(1);
  if (looptask_ == NULL) looptask_ = new ::LoopTaskStruct;
  return looptask_;
}

// -------------------------------------------------------------------

// CMessageTaskCompleteNotice

// optional uint32 TaskID = 1;
inline bool CMessageTaskCompleteNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageTaskCompleteNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTaskCompleteNotice::taskid() const {
  return taskid_;
}
inline void CMessageTaskCompleteNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageTaskEndNotice

// optional uint32 TaskID = 1;
inline bool CMessageTaskEndNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageTaskEndNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTaskEndNotice::taskid() const {
  return taskid_;
}
inline void CMessageTaskEndNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional .StorageTaskStruct StorageTask = 2;
inline bool CMessageTaskEndNotice::has_storagetask() const {
  return _has_bit(1);
}
inline void CMessageTaskEndNotice::clear_storagetask() {
  if (storagetask_ != NULL) storagetask_->::StorageTaskStruct::Clear();
  _clear_bit(1);
}
inline const ::StorageTaskStruct& CMessageTaskEndNotice::storagetask() const {
  return storagetask_ != NULL ? *storagetask_ : *default_instance_->storagetask_;
}
inline ::StorageTaskStruct* CMessageTaskEndNotice::mutable_storagetask() {
  _set_bit(1);
  if (storagetask_ == NULL) storagetask_ = new ::StorageTaskStruct;
  return storagetask_;
}

// -------------------------------------------------------------------

// CMessageUpdateTaskNotice

// optional .TaskStruct Task = 1;
inline bool CMessageUpdateTaskNotice::has_task() const {
  return _has_bit(0);
}
inline void CMessageUpdateTaskNotice::clear_task() {
  if (task_ != NULL) task_->::TaskStruct::Clear();
  _clear_bit(0);
}
inline const ::TaskStruct& CMessageUpdateTaskNotice::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::TaskStruct* CMessageUpdateTaskNotice::mutable_task() {
  _set_bit(0);
  if (task_ == NULL) task_ = new ::TaskStruct;
  return task_;
}

// -------------------------------------------------------------------

// CMessageResetTaskNotice

// optional uint32 TaskID = 1;
inline bool CMessageResetTaskNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageResetTaskNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageResetTaskNotice::taskid() const {
  return taskid_;
}
inline void CMessageResetTaskNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageAbortTaskRequest

// optional uint32 TaskID = 1;
inline bool CMessageAbortTaskRequest::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageAbortTaskRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAbortTaskRequest::taskid() const {
  return taskid_;
}
inline void CMessageAbortTaskRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 NpcEntityID = 2;
inline bool CMessageAbortTaskRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageAbortTaskRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAbortTaskRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageAbortTaskRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageTaskListNotice

// optional bytes CompletedBuf = 1;
inline bool CMessageTaskListNotice::has_completedbuf() const {
  return _has_bit(0);
}
inline void CMessageTaskListNotice::clear_completedbuf() {
  if (completedbuf_ != &_default_completedbuf_) {
    completedbuf_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageTaskListNotice::completedbuf() const {
  return *completedbuf_;
}
inline void CMessageTaskListNotice::set_completedbuf(const ::std::string& value) {
  _set_bit(0);
  if (completedbuf_ == &_default_completedbuf_) {
    completedbuf_ = new ::std::string;
  }
  completedbuf_->assign(value);
}
inline void CMessageTaskListNotice::set_completedbuf(const char* value) {
  _set_bit(0);
  if (completedbuf_ == &_default_completedbuf_) {
    completedbuf_ = new ::std::string;
  }
  completedbuf_->assign(value);
}
inline void CMessageTaskListNotice::set_completedbuf(const void* value, size_t size) {
  _set_bit(0);
  if (completedbuf_ == &_default_completedbuf_) {
    completedbuf_ = new ::std::string;
  }
  completedbuf_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageTaskListNotice::mutable_completedbuf() {
  _set_bit(0);
  if (completedbuf_ == &_default_completedbuf_) {
    completedbuf_ = new ::std::string;
  }
  return completedbuf_;
}

// optional uint32 TaskNum = 2;
inline bool CMessageTaskListNotice::has_tasknum() const {
  return _has_bit(1);
}
inline void CMessageTaskListNotice::clear_tasknum() {
  tasknum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTaskListNotice::tasknum() const {
  return tasknum_;
}
inline void CMessageTaskListNotice::set_tasknum(::google::protobuf::uint32 value) {
  _set_bit(1);
  tasknum_ = value;
}

// optional .LoopTaskStruct LoopTask = 3;
inline bool CMessageTaskListNotice::has_looptask() const {
  return _has_bit(2);
}
inline void CMessageTaskListNotice::clear_looptask() {
  if (looptask_ != NULL) looptask_->::LoopTaskStruct::Clear();
  _clear_bit(2);
}
inline const ::LoopTaskStruct& CMessageTaskListNotice::looptask() const {
  return looptask_ != NULL ? *looptask_ : *default_instance_->looptask_;
}
inline ::LoopTaskStruct* CMessageTaskListNotice::mutable_looptask() {
  _set_bit(2);
  if (looptask_ == NULL) looptask_ = new ::LoopTaskStruct;
  return looptask_;
}

// repeated .TaskStruct Tasks = 4;
inline int CMessageTaskListNotice::tasks_size() const {
  return tasks_.size();
}
inline void CMessageTaskListNotice::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskStruct >&
CMessageTaskListNotice::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskStruct >*
CMessageTaskListNotice::mutable_tasks() {
  return &tasks_;
}
inline const ::TaskStruct& CMessageTaskListNotice::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::TaskStruct* CMessageTaskListNotice::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::TaskStruct* CMessageTaskListNotice::add_tasks() {
  return tasks_.Add();
}

// repeated uint32 CompletedTasks = 5;
inline int CMessageTaskListNotice::completedtasks_size() const {
  return completedtasks_.size();
}
inline void CMessageTaskListNotice::clear_completedtasks() {
  completedtasks_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageTaskListNotice::completedtasks() const {
  return completedtasks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageTaskListNotice::mutable_completedtasks() {
  return &completedtasks_;
}
inline ::google::protobuf::uint32 CMessageTaskListNotice::completedtasks(int index) const {
  return completedtasks_.Get(index);
}
inline void CMessageTaskListNotice::set_completedtasks(int index, ::google::protobuf::uint32 value) {
  completedtasks_.Set(index, value);
}
inline void CMessageTaskListNotice::add_completedtasks(::google::protobuf::uint32 value) {
  completedtasks_.Add(value);
}

// optional .StorageTaskStruct StorageTask = 6;
inline bool CMessageTaskListNotice::has_storagetask() const {
  return _has_bit(5);
}
inline void CMessageTaskListNotice::clear_storagetask() {
  if (storagetask_ != NULL) storagetask_->::StorageTaskStruct::Clear();
  _clear_bit(5);
}
inline const ::StorageTaskStruct& CMessageTaskListNotice::storagetask() const {
  return storagetask_ != NULL ? *storagetask_ : *default_instance_->storagetask_;
}
inline ::StorageTaskStruct* CMessageTaskListNotice::mutable_storagetask() {
  _set_bit(5);
  if (storagetask_ == NULL) storagetask_ = new ::StorageTaskStruct;
  return storagetask_;
}

// repeated uint32 ChairManSectionIDs = 7;
inline int CMessageTaskListNotice::chairmansectionids_size() const {
  return chairmansectionids_.size();
}
inline void CMessageTaskListNotice::clear_chairmansectionids() {
  chairmansectionids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageTaskListNotice::chairmansectionids() const {
  return chairmansectionids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageTaskListNotice::mutable_chairmansectionids() {
  return &chairmansectionids_;
}
inline ::google::protobuf::uint32 CMessageTaskListNotice::chairmansectionids(int index) const {
  return chairmansectionids_.Get(index);
}
inline void CMessageTaskListNotice::set_chairmansectionids(int index, ::google::protobuf::uint32 value) {
  chairmansectionids_.Set(index, value);
}
inline void CMessageTaskListNotice::add_chairmansectionids(::google::protobuf::uint32 value) {
  chairmansectionids_.Add(value);
}

// repeated uint32 RepeateTasks = 8;
inline int CMessageTaskListNotice::repeatetasks_size() const {
  return repeatetasks_.size();
}
inline void CMessageTaskListNotice::clear_repeatetasks() {
  repeatetasks_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageTaskListNotice::repeatetasks() const {
  return repeatetasks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageTaskListNotice::mutable_repeatetasks() {
  return &repeatetasks_;
}
inline ::google::protobuf::uint32 CMessageTaskListNotice::repeatetasks(int index) const {
  return repeatetasks_.Get(index);
}
inline void CMessageTaskListNotice::set_repeatetasks(int index, ::google::protobuf::uint32 value) {
  repeatetasks_.Set(index, value);
}
inline void CMessageTaskListNotice::add_repeatetasks(::google::protobuf::uint32 value) {
  repeatetasks_.Add(value);
}

// repeated uint32 EndTime = 9;
inline int CMessageTaskListNotice::endtime_size() const {
  return endtime_.size();
}
inline void CMessageTaskListNotice::clear_endtime() {
  endtime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageTaskListNotice::endtime() const {
  return endtime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageTaskListNotice::mutable_endtime() {
  return &endtime_;
}
inline ::google::protobuf::uint32 CMessageTaskListNotice::endtime(int index) const {
  return endtime_.Get(index);
}
inline void CMessageTaskListNotice::set_endtime(int index, ::google::protobuf::uint32 value) {
  endtime_.Set(index, value);
}
inline void CMessageTaskListNotice::add_endtime(::google::protobuf::uint32 value) {
  endtime_.Add(value);
}

// -------------------------------------------------------------------

// NpcTaskList

// repeated uint32 ExtendTaskID = 1;
inline int NpcTaskList::extendtaskid_size() const {
  return extendtaskid_.size();
}
inline void NpcTaskList::clear_extendtaskid() {
  extendtaskid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NpcTaskList::extendtaskid() const {
  return extendtaskid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NpcTaskList::mutable_extendtaskid() {
  return &extendtaskid_;
}
inline ::google::protobuf::uint32 NpcTaskList::extendtaskid(int index) const {
  return extendtaskid_.Get(index);
}
inline void NpcTaskList::set_extendtaskid(int index, ::google::protobuf::uint32 value) {
  extendtaskid_.Set(index, value);
}
inline void NpcTaskList::add_extendtaskid(::google::protobuf::uint32 value) {
  extendtaskid_.Add(value);
}

// optional uint32 CallbackNumber = 2;
inline bool NpcTaskList::has_callbacknumber() const {
  return _has_bit(1);
}
inline void NpcTaskList::clear_callbacknumber() {
  callbacknumber_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 NpcTaskList::callbacknumber() const {
  return callbacknumber_;
}
inline void NpcTaskList::set_callbacknumber(::google::protobuf::uint32 value) {
  _set_bit(1);
  callbacknumber_ = value;
}

// optional uint32 ExtendNumber = 3;
inline bool NpcTaskList::has_extendnumber() const {
  return _has_bit(2);
}
inline void NpcTaskList::clear_extendnumber() {
  extendnumber_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 NpcTaskList::extendnumber() const {
  return extendnumber_;
}
inline void NpcTaskList::set_extendnumber(::google::protobuf::uint32 value) {
  _set_bit(2);
  extendnumber_ = value;
}

// optional uint32 NpcID = 4;
inline bool NpcTaskList::has_npcid() const {
  return _has_bit(3);
}
inline void NpcTaskList::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 NpcTaskList::npcid() const {
  return npcid_;
}
inline void NpcTaskList::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(3);
  npcid_ = value;
}

// repeated uint32 CallbackTaskID = 5;
inline int NpcTaskList::callbacktaskid_size() const {
  return callbacktaskid_.size();
}
inline void NpcTaskList::clear_callbacktaskid() {
  callbacktaskid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NpcTaskList::callbacktaskid() const {
  return callbacktaskid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NpcTaskList::mutable_callbacktaskid() {
  return &callbacktaskid_;
}
inline ::google::protobuf::uint32 NpcTaskList::callbacktaskid(int index) const {
  return callbacktaskid_.Get(index);
}
inline void NpcTaskList::set_callbacktaskid(int index, ::google::protobuf::uint32 value) {
  callbacktaskid_.Set(index, value);
}
inline void NpcTaskList::add_callbacktaskid(::google::protobuf::uint32 value) {
  callbacktaskid_.Add(value);
}

// -------------------------------------------------------------------

// CMessageNpcTaskListNotice

// optional .NpcTaskList List = 1;
inline bool CMessageNpcTaskListNotice::has_list() const {
  return _has_bit(0);
}
inline void CMessageNpcTaskListNotice::clear_list() {
  if (list_ != NULL) list_->::NpcTaskList::Clear();
  _clear_bit(0);
}
inline const ::NpcTaskList& CMessageNpcTaskListNotice::list() const {
  return list_ != NULL ? *list_ : *default_instance_->list_;
}
inline ::NpcTaskList* CMessageNpcTaskListNotice::mutable_list() {
  _set_bit(0);
  if (list_ == NULL) list_ = new ::NpcTaskList;
  return list_;
}

// -------------------------------------------------------------------

// CMessageNpcTaskTipNotice

// repeated uint32 NpcEntityID = 1;
inline int CMessageNpcTaskTipNotice::npcentityid_size() const {
  return npcentityid_.size();
}
inline void CMessageNpcTaskTipNotice::clear_npcentityid() {
  npcentityid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageNpcTaskTipNotice::npcentityid() const {
  return npcentityid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageNpcTaskTipNotice::mutable_npcentityid() {
  return &npcentityid_;
}
inline ::google::protobuf::uint32 CMessageNpcTaskTipNotice::npcentityid(int index) const {
  return npcentityid_.Get(index);
}
inline void CMessageNpcTaskTipNotice::set_npcentityid(int index, ::google::protobuf::uint32 value) {
  npcentityid_.Set(index, value);
}
inline void CMessageNpcTaskTipNotice::add_npcentityid(::google::protobuf::uint32 value) {
  npcentityid_.Add(value);
}

// repeated uint32 Tip = 2;
inline int CMessageNpcTaskTipNotice::tip_size() const {
  return tip_.size();
}
inline void CMessageNpcTaskTipNotice::clear_tip() {
  tip_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageNpcTaskTipNotice::tip() const {
  return tip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageNpcTaskTipNotice::mutable_tip() {
  return &tip_;
}
inline ::google::protobuf::uint32 CMessageNpcTaskTipNotice::tip(int index) const {
  return tip_.Get(index);
}
inline void CMessageNpcTaskTipNotice::set_tip(int index, ::google::protobuf::uint32 value) {
  tip_.Set(index, value);
}
inline void CMessageNpcTaskTipNotice::add_tip(::google::protobuf::uint32 value) {
  tip_.Add(value);
}

// optional uint32 IdType = 3;
inline bool CMessageNpcTaskTipNotice::has_idtype() const {
  return _has_bit(2);
}
inline void CMessageNpcTaskTipNotice::clear_idtype() {
  idtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageNpcTaskTipNotice::idtype() const {
  return idtype_;
}
inline void CMessageNpcTaskTipNotice::set_idtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  idtype_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerSearchRequest

// -------------------------------------------------------------------

// CMessagePlayerSearchResponse

// repeated uint32 TaskIDs = 1;
inline int CMessagePlayerSearchResponse::taskids_size() const {
  return taskids_.size();
}
inline void CMessagePlayerSearchResponse::clear_taskids() {
  taskids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessagePlayerSearchResponse::taskids() const {
  return taskids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessagePlayerSearchResponse::mutable_taskids() {
  return &taskids_;
}
inline ::google::protobuf::uint32 CMessagePlayerSearchResponse::taskids(int index) const {
  return taskids_.Get(index);
}
inline void CMessagePlayerSearchResponse::set_taskids(int index, ::google::protobuf::uint32 value) {
  taskids_.Set(index, value);
}
inline void CMessagePlayerSearchResponse::add_taskids(::google::protobuf::uint32 value) {
  taskids_.Add(value);
}

// -------------------------------------------------------------------

// CMessagePlayerInviteTaskRequest

// repeated string PlayerNames = 1;
inline int CMessagePlayerInviteTaskRequest::playernames_size() const {
  return playernames_.size();
}
inline void CMessagePlayerInviteTaskRequest::clear_playernames() {
  playernames_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessagePlayerInviteTaskRequest::playernames() const {
  return playernames_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessagePlayerInviteTaskRequest::mutable_playernames() {
  return &playernames_;
}
inline const ::std::string& CMessagePlayerInviteTaskRequest::playernames(int index) const {
  return playernames_.Get(index);
}
inline ::std::string* CMessagePlayerInviteTaskRequest::mutable_playernames(int index) {
  return playernames_.Mutable(index);
}
inline void CMessagePlayerInviteTaskRequest::set_playernames(int index, const ::std::string& value) {
  playernames_.Mutable(index)->assign(value);
}
inline void CMessagePlayerInviteTaskRequest::set_playernames(int index, const char* value) {
  playernames_.Mutable(index)->assign(value);
}
inline void CMessagePlayerInviteTaskRequest::set_playernames(int index, const char* value, size_t size) {
  playernames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerInviteTaskRequest::add_playernames() {
  return playernames_.Add();
}
inline void CMessagePlayerInviteTaskRequest::add_playernames(const ::std::string& value) {
  playernames_.Add()->assign(value);
}
inline void CMessagePlayerInviteTaskRequest::add_playernames(const char* value) {
  playernames_.Add()->assign(value);
}
inline void CMessagePlayerInviteTaskRequest::add_playernames(const char* value, size_t size) {
  playernames_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional uint32 TaskID = 2;
inline bool CMessagePlayerInviteTaskRequest::has_taskid() const {
  return _has_bit(1);
}
inline void CMessagePlayerInviteTaskRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerInviteTaskRequest::taskid() const {
  return taskid_;
}
inline void CMessagePlayerInviteTaskRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerInviteTaskNotice

// optional uint32 TaskID = 1;
inline bool CMessagePlayerInviteTaskNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessagePlayerInviteTaskNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerInviteTaskNotice::taskid() const {
  return taskid_;
}
inline void CMessagePlayerInviteTaskNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional string SrcPlayerName = 2;
inline bool CMessagePlayerInviteTaskNotice::has_srcplayername() const {
  return _has_bit(1);
}
inline void CMessagePlayerInviteTaskNotice::clear_srcplayername() {
  if (srcplayername_ != &_default_srcplayername_) {
    srcplayername_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessagePlayerInviteTaskNotice::srcplayername() const {
  return *srcplayername_;
}
inline void CMessagePlayerInviteTaskNotice::set_srcplayername(const ::std::string& value) {
  _set_bit(1);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(value);
}
inline void CMessagePlayerInviteTaskNotice::set_srcplayername(const char* value) {
  _set_bit(1);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(value);
}
inline void CMessagePlayerInviteTaskNotice::set_srcplayername(const char* value, size_t size) {
  _set_bit(1);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerInviteTaskNotice::mutable_srcplayername() {
  _set_bit(1);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  return srcplayername_;
}

// -------------------------------------------------------------------

// CMessagePlayerInviteTaskResponseRequest

// optional uint32 TaskID = 1;
inline bool CMessagePlayerInviteTaskResponseRequest::has_taskid() const {
  return _has_bit(0);
}
inline void CMessagePlayerInviteTaskResponseRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerInviteTaskResponseRequest::taskid() const {
  return taskid_;
}
inline void CMessagePlayerInviteTaskResponseRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 AgreeFlag = 2;
inline bool CMessagePlayerInviteTaskResponseRequest::has_agreeflag() const {
  return _has_bit(1);
}
inline void CMessagePlayerInviteTaskResponseRequest::clear_agreeflag() {
  agreeflag_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerInviteTaskResponseRequest::agreeflag() const {
  return agreeflag_;
}
inline void CMessagePlayerInviteTaskResponseRequest::set_agreeflag(::google::protobuf::uint32 value) {
  _set_bit(1);
  agreeflag_ = value;
}

// optional string SrcPlayerName = 3;
inline bool CMessagePlayerInviteTaskResponseRequest::has_srcplayername() const {
  return _has_bit(2);
}
inline void CMessagePlayerInviteTaskResponseRequest::clear_srcplayername() {
  if (srcplayername_ != &_default_srcplayername_) {
    srcplayername_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessagePlayerInviteTaskResponseRequest::srcplayername() const {
  return *srcplayername_;
}
inline void CMessagePlayerInviteTaskResponseRequest::set_srcplayername(const ::std::string& value) {
  _set_bit(2);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(value);
}
inline void CMessagePlayerInviteTaskResponseRequest::set_srcplayername(const char* value) {
  _set_bit(2);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(value);
}
inline void CMessagePlayerInviteTaskResponseRequest::set_srcplayername(const char* value, size_t size) {
  _set_bit(2);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerInviteTaskResponseRequest::mutable_srcplayername() {
  _set_bit(2);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  return srcplayername_;
}

// -------------------------------------------------------------------

// CMessagePlayerInviteTaskResponseNotice

// optional .CMessageRouter Router = 1;
inline bool CMessagePlayerInviteTaskResponseNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessagePlayerInviteTaskResponseNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessagePlayerInviteTaskResponseNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessagePlayerInviteTaskResponseNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional string SrcPlayerName = 2;
inline bool CMessagePlayerInviteTaskResponseNotice::has_srcplayername() const {
  return _has_bit(1);
}
inline void CMessagePlayerInviteTaskResponseNotice::clear_srcplayername() {
  if (srcplayername_ != &_default_srcplayername_) {
    srcplayername_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessagePlayerInviteTaskResponseNotice::srcplayername() const {
  return *srcplayername_;
}
inline void CMessagePlayerInviteTaskResponseNotice::set_srcplayername(const ::std::string& value) {
  _set_bit(1);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(value);
}
inline void CMessagePlayerInviteTaskResponseNotice::set_srcplayername(const char* value) {
  _set_bit(1);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(value);
}
inline void CMessagePlayerInviteTaskResponseNotice::set_srcplayername(const char* value, size_t size) {
  _set_bit(1);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  srcplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerInviteTaskResponseNotice::mutable_srcplayername() {
  _set_bit(1);
  if (srcplayername_ == &_default_srcplayername_) {
    srcplayername_ = new ::std::string;
  }
  return srcplayername_;
}

// optional uint32 TaskID = 3;
inline bool CMessagePlayerInviteTaskResponseNotice::has_taskid() const {
  return _has_bit(2);
}
inline void CMessagePlayerInviteTaskResponseNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerInviteTaskResponseNotice::taskid() const {
  return taskid_;
}
inline void CMessagePlayerInviteTaskResponseNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(2);
  taskid_ = value;
}

// optional uint32 AgreeFlag = 4;
inline bool CMessagePlayerInviteTaskResponseNotice::has_agreeflag() const {
  return _has_bit(3);
}
inline void CMessagePlayerInviteTaskResponseNotice::clear_agreeflag() {
  agreeflag_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerInviteTaskResponseNotice::agreeflag() const {
  return agreeflag_;
}
inline void CMessagePlayerInviteTaskResponseNotice::set_agreeflag(::google::protobuf::uint32 value) {
  _set_bit(3);
  agreeflag_ = value;
}

// -------------------------------------------------------------------

// CMessageDoPlayerInviteTaskMsg

// optional .CMessageRouter Router = 1;
inline bool CMessageDoPlayerInviteTaskMsg::has_router() const {
  return _has_bit(0);
}
inline void CMessageDoPlayerInviteTaskMsg::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageDoPlayerInviteTaskMsg::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageDoPlayerInviteTaskMsg::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 TaskID = 2;
inline bool CMessageDoPlayerInviteTaskMsg::has_taskid() const {
  return _has_bit(1);
}
inline void CMessageDoPlayerInviteTaskMsg::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDoPlayerInviteTaskMsg::taskid() const {
  return taskid_;
}
inline void CMessageDoPlayerInviteTaskMsg::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerInviteTaskErrorMsg

// optional .CMessageRouter Router = 1;
inline bool CMessagePlayerInviteTaskErrorMsg::has_router() const {
  return _has_bit(0);
}
inline void CMessagePlayerInviteTaskErrorMsg::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessagePlayerInviteTaskErrorMsg::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessagePlayerInviteTaskErrorMsg::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 TaskID = 2;
inline bool CMessagePlayerInviteTaskErrorMsg::has_taskid() const {
  return _has_bit(1);
}
inline void CMessagePlayerInviteTaskErrorMsg::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerInviteTaskErrorMsg::taskid() const {
  return taskid_;
}
inline void CMessagePlayerInviteTaskErrorMsg::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskid_ = value;
}

// optional uint32 TypeID = 3;
inline bool CMessagePlayerInviteTaskErrorMsg::has_typeid_() const {
  return _has_bit(2);
}
inline void CMessagePlayerInviteTaskErrorMsg::clear_typeid_() {
  typeid__ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePlayerInviteTaskErrorMsg::typeid_() const {
  return typeid__;
}
inline void CMessagePlayerInviteTaskErrorMsg::set_typeid_(::google::protobuf::uint32 value) {
  _set_bit(2);
  typeid__ = value;
}

// optional string MyName = 4;
inline bool CMessagePlayerInviteTaskErrorMsg::has_myname() const {
  return _has_bit(3);
}
inline void CMessagePlayerInviteTaskErrorMsg::clear_myname() {
  if (myname_ != &_default_myname_) {
    myname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessagePlayerInviteTaskErrorMsg::myname() const {
  return *myname_;
}
inline void CMessagePlayerInviteTaskErrorMsg::set_myname(const ::std::string& value) {
  _set_bit(3);
  if (myname_ == &_default_myname_) {
    myname_ = new ::std::string;
  }
  myname_->assign(value);
}
inline void CMessagePlayerInviteTaskErrorMsg::set_myname(const char* value) {
  _set_bit(3);
  if (myname_ == &_default_myname_) {
    myname_ = new ::std::string;
  }
  myname_->assign(value);
}
inline void CMessagePlayerInviteTaskErrorMsg::set_myname(const char* value, size_t size) {
  _set_bit(3);
  if (myname_ == &_default_myname_) {
    myname_ = new ::std::string;
  }
  myname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessagePlayerInviteTaskErrorMsg::mutable_myname() {
  _set_bit(3);
  if (myname_ == &_default_myname_) {
    myname_ = new ::std::string;
  }
  return myname_;
}

// -------------------------------------------------------------------

// CMessageAbortTaskNotice

// optional uint32 TaskID = 1;
inline bool CMessageAbortTaskNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageAbortTaskNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAbortTaskNotice::taskid() const {
  return taskid_;
}
inline void CMessageAbortTaskNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageTaskFailNotice

// optional uint32 TaskID = 1;
inline bool CMessageTaskFailNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageTaskFailNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTaskFailNotice::taskid() const {
  return taskid_;
}
inline void CMessageTaskFailNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageUnFinishTaskTime

// optional uint32 TaskID = 1;
inline bool CMessageUnFinishTaskTime::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageUnFinishTaskTime::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUnFinishTaskTime::taskid() const {
  return taskid_;
}
inline void CMessageUnFinishTaskTime::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 NeedTime = 2;
inline bool CMessageUnFinishTaskTime::has_needtime() const {
  return _has_bit(1);
}
inline void CMessageUnFinishTaskTime::clear_needtime() {
  needtime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUnFinishTaskTime::needtime() const {
  return needtime_;
}
inline void CMessageUnFinishTaskTime::set_needtime(::google::protobuf::uint32 value) {
  _set_bit(1);
  needtime_ = value;
}

// -------------------------------------------------------------------

// CMessageTaskOprFailNotice

// -------------------------------------------------------------------

// CMessageTaskUnRefreshNotice

// optional uint32 TaskID = 1;
inline bool CMessageTaskUnRefreshNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageTaskUnRefreshNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTaskUnRefreshNotice::taskid() const {
  return taskid_;
}
inline void CMessageTaskUnRefreshNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageTaskRefreshResult

// optional uint32 TaskID = 1;
inline bool CMessageTaskRefreshResult::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageTaskRefreshResult::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTaskRefreshResult::taskid() const {
  return taskid_;
}
inline void CMessageTaskRefreshResult::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 TaskColor = 2;
inline bool CMessageTaskRefreshResult::has_taskcolor() const {
  return _has_bit(1);
}
inline void CMessageTaskRefreshResult::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTaskRefreshResult::taskcolor() const {
  return taskcolor_;
}
inline void CMessageTaskRefreshResult::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskcolor_ = value;
}

// optional uint32 TaskNumber = 3;
inline bool CMessageTaskRefreshResult::has_tasknumber() const {
  return _has_bit(2);
}
inline void CMessageTaskRefreshResult::clear_tasknumber() {
  tasknumber_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageTaskRefreshResult::tasknumber() const {
  return tasknumber_;
}
inline void CMessageTaskRefreshResult::set_tasknumber(::google::protobuf::uint32 value) {
  _set_bit(2);
  tasknumber_ = value;
}

// -------------------------------------------------------------------

// CMessageRmoveTaskColor

// optional uint32 TaskID = 1;
inline bool CMessageRmoveTaskColor::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageRmoveTaskColor::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRmoveTaskColor::taskid() const {
  return taskid_;
}
inline void CMessageRmoveTaskColor::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 TaskColor = 2;
inline bool CMessageRmoveTaskColor::has_taskcolor() const {
  return _has_bit(1);
}
inline void CMessageRmoveTaskColor::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRmoveTaskColor::taskcolor() const {
  return taskcolor_;
}
inline void CMessageRmoveTaskColor::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskcolor_ = value;
}

// -------------------------------------------------------------------

// CMessageTaskRefreshFailNotice

// optional uint32 TaskID = 1;
inline bool CMessageTaskRefreshFailNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageTaskRefreshFailNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageTaskRefreshFailNotice::taskid() const {
  return taskid_;
}
inline void CMessageTaskRefreshFailNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageUnReaccpetTask

// optional uint32 TaskID = 1;
inline bool CMessageUnReaccpetTask::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageUnReaccpetTask::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUnReaccpetTask::taskid() const {
  return taskid_;
}
inline void CMessageUnReaccpetTask::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 NeedTime = 2;
inline bool CMessageUnReaccpetTask::has_needtime() const {
  return _has_bit(1);
}
inline void CMessageUnReaccpetTask::clear_needtime() {
  needtime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUnReaccpetTask::needtime() const {
  return needtime_;
}
inline void CMessageUnReaccpetTask::set_needtime(::google::protobuf::uint32 value) {
  _set_bit(1);
  needtime_ = value;
}

// -------------------------------------------------------------------

// CMessageNpcStorageTaskListNotice

// optional .NpcTaskList List = 1;
inline bool CMessageNpcStorageTaskListNotice::has_list() const {
  return _has_bit(0);
}
inline void CMessageNpcStorageTaskListNotice::clear_list() {
  if (list_ != NULL) list_->::NpcTaskList::Clear();
  _clear_bit(0);
}
inline const ::NpcTaskList& CMessageNpcStorageTaskListNotice::list() const {
  return list_ != NULL ? *list_ : *default_instance_->list_;
}
inline ::NpcTaskList* CMessageNpcStorageTaskListNotice::mutable_list() {
  _set_bit(0);
  if (list_ == NULL) list_ = new ::NpcTaskList;
  return list_;
}

// -------------------------------------------------------------------

// CMessageObtainScrollTaskRequest

// optional uint32 ScrollID = 1;
inline bool CMessageObtainScrollTaskRequest::has_scrollid() const {
  return _has_bit(0);
}
inline void CMessageObtainScrollTaskRequest::clear_scrollid() {
  scrollid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageObtainScrollTaskRequest::scrollid() const {
  return scrollid_;
}
inline void CMessageObtainScrollTaskRequest::set_scrollid(::google::protobuf::uint32 value) {
  _set_bit(0);
  scrollid_ = value;
}

// -------------------------------------------------------------------

// CMessageTragedyTaskUpdateNotice

// repeated .TragedyStruct TragedyInfo = 1;
inline int CMessageTragedyTaskUpdateNotice::tragedyinfo_size() const {
  return tragedyinfo_.size();
}
inline void CMessageTragedyTaskUpdateNotice::clear_tragedyinfo() {
  tragedyinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::TragedyStruct >&
CMessageTragedyTaskUpdateNotice::tragedyinfo() const {
  return tragedyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::TragedyStruct >*
CMessageTragedyTaskUpdateNotice::mutable_tragedyinfo() {
  return &tragedyinfo_;
}
inline const ::TragedyStruct& CMessageTragedyTaskUpdateNotice::tragedyinfo(int index) const {
  return tragedyinfo_.Get(index);
}
inline ::TragedyStruct* CMessageTragedyTaskUpdateNotice::mutable_tragedyinfo(int index) {
  return tragedyinfo_.Mutable(index);
}
inline ::TragedyStruct* CMessageTragedyTaskUpdateNotice::add_tragedyinfo() {
  return tragedyinfo_.Add();
}

// optional uint32 IsLogin = 2;
inline bool CMessageTragedyTaskUpdateNotice::has_islogin() const {
  return _has_bit(1);
}
inline void CMessageTragedyTaskUpdateNotice::clear_islogin() {
  islogin_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageTragedyTaskUpdateNotice::islogin() const {
  return islogin_;
}
inline void CMessageTragedyTaskUpdateNotice::set_islogin(::google::protobuf::uint32 value) {
  _set_bit(1);
  islogin_ = value;
}

// -------------------------------------------------------------------

// CMessageGetTipRequest

// repeated uint32 NpcEntityID = 1;
inline int CMessageGetTipRequest::npcentityid_size() const {
  return npcentityid_.size();
}
inline void CMessageGetTipRequest::clear_npcentityid() {
  npcentityid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGetTipRequest::npcentityid() const {
  return npcentityid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGetTipRequest::mutable_npcentityid() {
  return &npcentityid_;
}
inline ::google::protobuf::uint32 CMessageGetTipRequest::npcentityid(int index) const {
  return npcentityid_.Get(index);
}
inline void CMessageGetTipRequest::set_npcentityid(int index, ::google::protobuf::uint32 value) {
  npcentityid_.Set(index, value);
}
inline void CMessageGetTipRequest::add_npcentityid(::google::protobuf::uint32 value) {
  npcentityid_.Add(value);
}

// optional uint32 IdType = 2;
inline bool CMessageGetTipRequest::has_idtype() const {
  return _has_bit(1);
}
inline void CMessageGetTipRequest::clear_idtype() {
  idtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetTipRequest::idtype() const {
  return idtype_;
}
inline void CMessageGetTipRequest::set_idtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  idtype_ = value;
}

// -------------------------------------------------------------------

// CMessageEndTalkRequest

// optional uint32 NpcEntityID = 1;
inline bool CMessageEndTalkRequest::has_npcentityid() const {
  return _has_bit(0);
}
inline void CMessageEndTalkRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEndTalkRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageEndTalkRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcentityid_ = value;
}

// optional uint32 TaskID = 2;
inline bool CMessageEndTalkRequest::has_taskid() const {
  return _has_bit(1);
}
inline void CMessageEndTalkRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageEndTalkRequest::taskid() const {
  return taskid_;
}
inline void CMessageEndTalkRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskid_ = value;
}

// -------------------------------------------------------------------

// CMessageNpcTalkStateChangeNotice

// optional uint32 TaskID = 1;
inline bool CMessageNpcTalkStateChangeNotice::has_taskid() const {
  return _has_bit(0);
}
inline void CMessageNpcTalkStateChangeNotice::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageNpcTalkStateChangeNotice::taskid() const {
  return taskid_;
}
inline void CMessageNpcTalkStateChangeNotice::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 State = 2;
inline bool CMessageNpcTalkStateChangeNotice::has_state() const {
  return _has_bit(1);
}
inline void CMessageNpcTalkStateChangeNotice::clear_state() {
  state_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageNpcTalkStateChangeNotice::state() const {
  return state_;
}
inline void CMessageNpcTalkStateChangeNotice::set_state(::google::protobuf::uint32 value) {
  _set_bit(1);
  state_ = value;
}

// optional uint32 NpcTempID = 3;
inline bool CMessageNpcTalkStateChangeNotice::has_npctempid() const {
  return _has_bit(2);
}
inline void CMessageNpcTalkStateChangeNotice::clear_npctempid() {
  npctempid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageNpcTalkStateChangeNotice::npctempid() const {
  return npctempid_;
}
inline void CMessageNpcTalkStateChangeNotice::set_npctempid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npctempid_ = value;
}

// -------------------------------------------------------------------

// CMessageLockBaggageRequest

// optional uint32 ItemIndex = 1;
inline bool CMessageLockBaggageRequest::has_itemindex() const {
  return _has_bit(0);
}
inline void CMessageLockBaggageRequest::clear_itemindex() {
  itemindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLockBaggageRequest::itemindex() const {
  return itemindex_;
}
inline void CMessageLockBaggageRequest::set_itemindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemindex_ = value;
}

// -------------------------------------------------------------------

// CMessageLockBaggageResponse

// optional uint32 ItemIndex = 1;
inline bool CMessageLockBaggageResponse::has_itemindex() const {
  return _has_bit(0);
}
inline void CMessageLockBaggageResponse::clear_itemindex() {
  itemindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLockBaggageResponse::itemindex() const {
  return itemindex_;
}
inline void CMessageLockBaggageResponse::set_itemindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemindex_ = value;
}

// -------------------------------------------------------------------

// TaskCondition

// optional fixed32 TaskID = 1;
inline bool TaskCondition::has_taskid() const {
  return _has_bit(0);
}
inline void TaskCondition::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 TaskCondition::taskid() const {
  return taskid_;
}
inline void TaskCondition::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional fixed32 Condition = 2;
inline bool TaskCondition::has_condition() const {
  return _has_bit(1);
}
inline void TaskCondition::clear_condition() {
  condition_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 TaskCondition::condition() const {
  return condition_;
}
inline void TaskCondition::set_condition(::google::protobuf::uint32 value) {
  _set_bit(1);
  condition_ = value;
}

// optional fixed32 TempID = 3;
inline bool TaskCondition::has_tempid() const {
  return _has_bit(2);
}
inline void TaskCondition::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 TaskCondition::tempid() const {
  return tempid_;
}
inline void TaskCondition::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(2);
  tempid_ = value;
}

// optional uint32 Num = 4;
inline bool TaskCondition::has_num() const {
  return _has_bit(3);
}
inline void TaskCondition::clear_num() {
  num_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 TaskCondition::num() const {
  return num_;
}
inline void TaskCondition::set_num(::google::protobuf::uint32 value) {
  _set_bit(3);
  num_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdateTaskConditions

// repeated .TaskCondition Contions = 1;
inline int CMessageUpdateTaskConditions::contions_size() const {
  return contions_.size();
}
inline void CMessageUpdateTaskConditions::clear_contions() {
  contions_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskCondition >&
CMessageUpdateTaskConditions::contions() const {
  return contions_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskCondition >*
CMessageUpdateTaskConditions::mutable_contions() {
  return &contions_;
}
inline const ::TaskCondition& CMessageUpdateTaskConditions::contions(int index) const {
  return contions_.Get(index);
}
inline ::TaskCondition* CMessageUpdateTaskConditions::mutable_contions(int index) {
  return contions_.Mutable(index);
}
inline ::TaskCondition* CMessageUpdateTaskConditions::add_contions() {
  return contions_.Add();
}

// -------------------------------------------------------------------

// CMessageClearTaskNotify

// -------------------------------------------------------------------

// CMessageTakeOffItemRequest

// -------------------------------------------------------------------

// CMessageGetFamilyTaskRequest

// repeated uint32 TaskTypes = 1;
inline int CMessageGetFamilyTaskRequest::tasktypes_size() const {
  return tasktypes_.size();
}
inline void CMessageGetFamilyTaskRequest::clear_tasktypes() {
  tasktypes_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGetFamilyTaskRequest::tasktypes() const {
  return tasktypes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGetFamilyTaskRequest::mutable_tasktypes() {
  return &tasktypes_;
}
inline ::google::protobuf::uint32 CMessageGetFamilyTaskRequest::tasktypes(int index) const {
  return tasktypes_.Get(index);
}
inline void CMessageGetFamilyTaskRequest::set_tasktypes(int index, ::google::protobuf::uint32 value) {
  tasktypes_.Set(index, value);
}
inline void CMessageGetFamilyTaskRequest::add_tasktypes(::google::protobuf::uint32 value) {
  tasktypes_.Add(value);
}

// -------------------------------------------------------------------

// SingleFamilyTaskResponse

// optional uint32 TaskIDs = 1;
inline bool SingleFamilyTaskResponse::has_taskids() const {
  return _has_bit(0);
}
inline void SingleFamilyTaskResponse::clear_taskids() {
  taskids_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SingleFamilyTaskResponse::taskids() const {
  return taskids_;
}
inline void SingleFamilyTaskResponse::set_taskids(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskids_ = value;
}

// optional uint32 TodayTimes = 2;
inline bool SingleFamilyTaskResponse::has_todaytimes() const {
  return _has_bit(1);
}
inline void SingleFamilyTaskResponse::clear_todaytimes() {
  todaytimes_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SingleFamilyTaskResponse::todaytimes() const {
  return todaytimes_;
}
inline void SingleFamilyTaskResponse::set_todaytimes(::google::protobuf::uint32 value) {
  _set_bit(1);
  todaytimes_ = value;
}

// -------------------------------------------------------------------

// CMessageGetFamilyTaskResponse

// repeated .SingleFamilyTaskResponse Tasks = 1;
inline int CMessageGetFamilyTaskResponse::tasks_size() const {
  return tasks_.size();
}
inline void CMessageGetFamilyTaskResponse::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >&
CMessageGetFamilyTaskResponse::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >*
CMessageGetFamilyTaskResponse::mutable_tasks() {
  return &tasks_;
}
inline const ::SingleFamilyTaskResponse& CMessageGetFamilyTaskResponse::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::SingleFamilyTaskResponse* CMessageGetFamilyTaskResponse::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::SingleFamilyTaskResponse* CMessageGetFamilyTaskResponse::add_tasks() {
  return tasks_.Add();
}

// -------------------------------------------------------------------

// CMessageGetCorpsTaskRequest

// -------------------------------------------------------------------

// CMessageGetCorpsTaskResponse

// repeated .SingleFamilyTaskResponse Tasks = 1;
inline int CMessageGetCorpsTaskResponse::tasks_size() const {
  return tasks_.size();
}
inline void CMessageGetCorpsTaskResponse::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >&
CMessageGetCorpsTaskResponse::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >*
CMessageGetCorpsTaskResponse::mutable_tasks() {
  return &tasks_;
}
inline const ::SingleFamilyTaskResponse& CMessageGetCorpsTaskResponse::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::SingleFamilyTaskResponse* CMessageGetCorpsTaskResponse::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::SingleFamilyTaskResponse* CMessageGetCorpsTaskResponse::add_tasks() {
  return tasks_.Add();
}

// -------------------------------------------------------------------

// CMessageGetCountryTaskRequest

// -------------------------------------------------------------------

// CMessageGetCountryTaskResponse

// repeated .SingleFamilyTaskResponse Tasks = 1;
inline int CMessageGetCountryTaskResponse::tasks_size() const {
  return tasks_.size();
}
inline void CMessageGetCountryTaskResponse::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >&
CMessageGetCountryTaskResponse::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >*
CMessageGetCountryTaskResponse::mutable_tasks() {
  return &tasks_;
}
inline const ::SingleFamilyTaskResponse& CMessageGetCountryTaskResponse::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::SingleFamilyTaskResponse* CMessageGetCountryTaskResponse::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::SingleFamilyTaskResponse* CMessageGetCountryTaskResponse::add_tasks() {
  return tasks_.Add();
}

// -------------------------------------------------------------------

// CMessageGetCampTaskRequest

// -------------------------------------------------------------------

// CMessageGetCampTaskResponse

// repeated .SingleFamilyTaskResponse Tasks = 1;
inline int CMessageGetCampTaskResponse::tasks_size() const {
  return tasks_.size();
}
inline void CMessageGetCampTaskResponse::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >&
CMessageGetCampTaskResponse::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleFamilyTaskResponse >*
CMessageGetCampTaskResponse::mutable_tasks() {
  return &tasks_;
}
inline const ::SingleFamilyTaskResponse& CMessageGetCampTaskResponse::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::SingleFamilyTaskResponse* CMessageGetCampTaskResponse::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::SingleFamilyTaskResponse* CMessageGetCampTaskResponse::add_tasks() {
  return tasks_.Add();
}

// -------------------------------------------------------------------

// CMessageGetChairManTaskRequest

// optional uint32 NpcEntityID = 1;
inline bool CMessageGetChairManTaskRequest::has_npcentityid() const {
  return _has_bit(0);
}
inline void CMessageGetChairManTaskRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetChairManTaskRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageGetChairManTaskRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetChairManTaskResponse

// repeated .SingleChairManTask TaskIDs = 1;
inline int CMessageGetChairManTaskResponse::taskids_size() const {
  return taskids_.size();
}
inline void CMessageGetChairManTaskResponse::clear_taskids() {
  taskids_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleChairManTask >&
CMessageGetChairManTaskResponse::taskids() const {
  return taskids_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleChairManTask >*
CMessageGetChairManTaskResponse::mutable_taskids() {
  return &taskids_;
}
inline const ::SingleChairManTask& CMessageGetChairManTaskResponse::taskids(int index) const {
  return taskids_.Get(index);
}
inline ::SingleChairManTask* CMessageGetChairManTaskResponse::mutable_taskids(int index) {
  return taskids_.Mutable(index);
}
inline ::SingleChairManTask* CMessageGetChairManTaskResponse::add_taskids() {
  return taskids_.Add();
}

// -------------------------------------------------------------------

// CMessageGetTeamLoopErrNotify

// optional string CharName = 1;
inline bool CMessageGetTeamLoopErrNotify::has_charname() const {
  return _has_bit(0);
}
inline void CMessageGetTeamLoopErrNotify::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageGetTeamLoopErrNotify::charname() const {
  return *charname_;
}
inline void CMessageGetTeamLoopErrNotify::set_charname(const ::std::string& value) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageGetTeamLoopErrNotify::set_charname(const char* value) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageGetTeamLoopErrNotify::set_charname(const char* value, size_t size) {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGetTeamLoopErrNotify::mutable_charname() {
  _set_bit(0);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 ErrCode = 2;
inline bool CMessageGetTeamLoopErrNotify::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageGetTeamLoopErrNotify::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetTeamLoopErrNotify::errcode() const {
  return errcode_;
}
inline void CMessageGetTeamLoopErrNotify::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// -------------------------------------------------------------------

// PBPubslishList

// optional uint32 TaskID = 1;
inline bool PBPubslishList::has_taskid() const {
  return _has_bit(0);
}
inline void PBPubslishList::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPubslishList::taskid() const {
  return taskid_;
}
inline void PBPubslishList::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 TaskState = 2;
inline bool PBPubslishList::has_taskstate() const {
  return _has_bit(1);
}
inline void PBPubslishList::clear_taskstate() {
  taskstate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPubslishList::taskstate() const {
  return taskstate_;
}
inline void PBPubslishList::set_taskstate(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskstate_ = value;
}

// -------------------------------------------------------------------

// CMessageCheckGroupPublishRequest

// optional uint32 PublishType = 1;
inline bool CMessageCheckGroupPublishRequest::has_publishtype() const {
  return _has_bit(0);
}
inline void CMessageCheckGroupPublishRequest::clear_publishtype() {
  publishtype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCheckGroupPublishRequest::publishtype() const {
  return publishtype_;
}
inline void CMessageCheckGroupPublishRequest::set_publishtype(::google::protobuf::uint32 value) {
  _set_bit(0);
  publishtype_ = value;
}

// -------------------------------------------------------------------

// CMessagePublishGroupTaskRequest

// optional uint32 TaskID = 1;
inline bool CMessagePublishGroupTaskRequest::has_taskid() const {
  return _has_bit(0);
}
inline void CMessagePublishGroupTaskRequest::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePublishGroupTaskRequest::taskid() const {
  return taskid_;
}
inline void CMessagePublishGroupTaskRequest::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 PublishType = 2;
inline bool CMessagePublishGroupTaskRequest::has_publishtype() const {
  return _has_bit(1);
}
inline void CMessagePublishGroupTaskRequest::clear_publishtype() {
  publishtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePublishGroupTaskRequest::publishtype() const {
  return publishtype_;
}
inline void CMessagePublishGroupTaskRequest::set_publishtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  publishtype_ = value;
}

// -------------------------------------------------------------------

// CMessageCheckGroupPublishResponse

// optional uint32 PublishType = 1;
inline bool CMessageCheckGroupPublishResponse::has_publishtype() const {
  return _has_bit(0);
}
inline void CMessageCheckGroupPublishResponse::clear_publishtype() {
  publishtype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCheckGroupPublishResponse::publishtype() const {
  return publishtype_;
}
inline void CMessageCheckGroupPublishResponse::set_publishtype(::google::protobuf::uint32 value) {
  _set_bit(0);
  publishtype_ = value;
}

// repeated .PBPubslishList Tasks = 2;
inline int CMessageCheckGroupPublishResponse::tasks_size() const {
  return tasks_.size();
}
inline void CMessageCheckGroupPublishResponse::clear_tasks() {
  tasks_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPubslishList >&
CMessageCheckGroupPublishResponse::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPubslishList >*
CMessageCheckGroupPublishResponse::mutable_tasks() {
  return &tasks_;
}
inline const ::PBPubslishList& CMessageCheckGroupPublishResponse::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::PBPubslishList* CMessageCheckGroupPublishResponse::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::PBPubslishList* CMessageCheckGroupPublishResponse::add_tasks() {
  return tasks_.Add();
}

// -------------------------------------------------------------------

// CMessagePublishGroupTaskResponse

// optional uint32 TaskID = 1;
inline bool CMessagePublishGroupTaskResponse::has_taskid() const {
  return _has_bit(0);
}
inline void CMessagePublishGroupTaskResponse::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePublishGroupTaskResponse::taskid() const {
  return taskid_;
}
inline void CMessagePublishGroupTaskResponse::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 PublishType = 2;
inline bool CMessagePublishGroupTaskResponse::has_publishtype() const {
  return _has_bit(1);
}
inline void CMessagePublishGroupTaskResponse::clear_publishtype() {
  publishtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePublishGroupTaskResponse::publishtype() const {
  return publishtype_;
}
inline void CMessagePublishGroupTaskResponse::set_publishtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  publishtype_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerCheckSinglePublish

// -------------------------------------------------------------------

// CMessagePlayerSinglePublishTask

// optional uint32 TaskColor = 1;
inline bool CMessagePlayerSinglePublishTask::has_taskcolor() const {
  return _has_bit(0);
}
inline void CMessagePlayerSinglePublishTask::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerSinglePublishTask::taskcolor() const {
  return taskcolor_;
}
inline void CMessagePlayerSinglePublishTask::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskcolor_ = value;
}

// optional uint32 ItemIndex = 2;
inline bool CMessagePlayerSinglePublishTask::has_itemindex() const {
  return _has_bit(1);
}
inline void CMessagePlayerSinglePublishTask::clear_itemindex() {
  itemindex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePlayerSinglePublishTask::itemindex() const {
  return itemindex_;
}
inline void CMessagePlayerSinglePublishTask::set_itemindex(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemindex_ = value;
}

// -------------------------------------------------------------------

// CMessageRefreshSingleTaskRequest

// optional uint32 TaskColor = 1;
inline bool CMessageRefreshSingleTaskRequest::has_taskcolor() const {
  return _has_bit(0);
}
inline void CMessageRefreshSingleTaskRequest::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRefreshSingleTaskRequest::taskcolor() const {
  return taskcolor_;
}
inline void CMessageRefreshSingleTaskRequest::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskcolor_ = value;
}

// optional uint32 ItemIndex = 2;
inline bool CMessageRefreshSingleTaskRequest::has_itemindex() const {
  return _has_bit(1);
}
inline void CMessageRefreshSingleTaskRequest::clear_itemindex() {
  itemindex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRefreshSingleTaskRequest::itemindex() const {
  return itemindex_;
}
inline void CMessageRefreshSingleTaskRequest::set_itemindex(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemindex_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerGetPublishTaskRequest

// optional uint32 TaskColor = 1;
inline bool CMessagePlayerGetPublishTaskRequest::has_taskcolor() const {
  return _has_bit(0);
}
inline void CMessagePlayerGetPublishTaskRequest::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerGetPublishTaskRequest::taskcolor() const {
  return taskcolor_;
}
inline void CMessagePlayerGetPublishTaskRequest::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskcolor_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerGetAwardsRequest

// optional uint32 TaskColor = 1;
inline bool CMessagePlayerGetAwardsRequest::has_taskcolor() const {
  return _has_bit(0);
}
inline void CMessagePlayerGetAwardsRequest::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerGetAwardsRequest::taskcolor() const {
  return taskcolor_;
}
inline void CMessagePlayerGetAwardsRequest::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskcolor_ = value;
}

// -------------------------------------------------------------------

// PBSingleColorRank

// optional uint32 PubNumber = 1;
inline bool PBSingleColorRank::has_pubnumber() const {
  return _has_bit(0);
}
inline void PBSingleColorRank::clear_pubnumber() {
  pubnumber_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSingleColorRank::pubnumber() const {
  return pubnumber_;
}
inline void PBSingleColorRank::set_pubnumber(::google::protobuf::uint32 value) {
  _set_bit(0);
  pubnumber_ = value;
}

// optional uint32 RecvTasks = 2;
inline bool PBSingleColorRank::has_recvtasks() const {
  return _has_bit(1);
}
inline void PBSingleColorRank::clear_recvtasks() {
  recvtasks_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSingleColorRank::recvtasks() const {
  return recvtasks_;
}
inline void PBSingleColorRank::set_recvtasks(::google::protobuf::uint32 value) {
  _set_bit(1);
  recvtasks_ = value;
}

// optional uint32 RecvAwards = 3;
inline bool PBSingleColorRank::has_recvawards() const {
  return _has_bit(2);
}
inline void PBSingleColorRank::clear_recvawards() {
  recvawards_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSingleColorRank::recvawards() const {
  return recvawards_;
}
inline void PBSingleColorRank::set_recvawards(::google::protobuf::uint32 value) {
  _set_bit(2);
  recvawards_ = value;
}

// optional uint32 CurrentTask = 4;
inline bool PBSingleColorRank::has_currenttask() const {
  return _has_bit(3);
}
inline void PBSingleColorRank::clear_currenttask() {
  currenttask_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSingleColorRank::currenttask() const {
  return currenttask_;
}
inline void PBSingleColorRank::set_currenttask(::google::protobuf::uint32 value) {
  _set_bit(3);
  currenttask_ = value;
}

// -------------------------------------------------------------------

// CMessageCheckSinglePublishResponse

// optional uint32 TodayPublish = 1;
inline bool CMessageCheckSinglePublishResponse::has_todaypublish() const {
  return _has_bit(0);
}
inline void CMessageCheckSinglePublishResponse::clear_todaypublish() {
  todaypublish_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCheckSinglePublishResponse::todaypublish() const {
  return todaypublish_;
}
inline void CMessageCheckSinglePublishResponse::set_todaypublish(::google::protobuf::uint32 value) {
  _set_bit(0);
  todaypublish_ = value;
}

// optional uint32 OncePublish = 2;
inline bool CMessageCheckSinglePublishResponse::has_oncepublish() const {
  return _has_bit(1);
}
inline void CMessageCheckSinglePublishResponse::clear_oncepublish() {
  oncepublish_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCheckSinglePublishResponse::oncepublish() const {
  return oncepublish_;
}
inline void CMessageCheckSinglePublishResponse::set_oncepublish(::google::protobuf::uint32 value) {
  _set_bit(1);
  oncepublish_ = value;
}

// optional uint32 TotalFinish = 3;
inline bool CMessageCheckSinglePublishResponse::has_totalfinish() const {
  return _has_bit(2);
}
inline void CMessageCheckSinglePublishResponse::clear_totalfinish() {
  totalfinish_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCheckSinglePublishResponse::totalfinish() const {
  return totalfinish_;
}
inline void CMessageCheckSinglePublishResponse::set_totalfinish(::google::protobuf::uint32 value) {
  _set_bit(2);
  totalfinish_ = value;
}

// repeated .PBSingleColorRank SingleRank = 4;
inline int CMessageCheckSinglePublishResponse::singlerank_size() const {
  return singlerank_.size();
}
inline void CMessageCheckSinglePublishResponse::clear_singlerank() {
  singlerank_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSingleColorRank >&
CMessageCheckSinglePublishResponse::singlerank() const {
  return singlerank_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSingleColorRank >*
CMessageCheckSinglePublishResponse::mutable_singlerank() {
  return &singlerank_;
}
inline const ::PBSingleColorRank& CMessageCheckSinglePublishResponse::singlerank(int index) const {
  return singlerank_.Get(index);
}
inline ::PBSingleColorRank* CMessageCheckSinglePublishResponse::mutable_singlerank(int index) {
  return singlerank_.Mutable(index);
}
inline ::PBSingleColorRank* CMessageCheckSinglePublishResponse::add_singlerank() {
  return singlerank_.Add();
}

// -------------------------------------------------------------------

// CMessagePlayerSinglePublishResponse

// optional uint32 TaskColor = 1;
inline bool CMessagePlayerSinglePublishResponse::has_taskcolor() const {
  return _has_bit(0);
}
inline void CMessagePlayerSinglePublishResponse::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerSinglePublishResponse::taskcolor() const {
  return taskcolor_;
}
inline void CMessagePlayerSinglePublishResponse::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskcolor_ = value;
}

// -------------------------------------------------------------------

// CMessageRefreshSingleTaskResponse

// optional uint32 TaskColor = 1;
inline bool CMessageRefreshSingleTaskResponse::has_taskcolor() const {
  return _has_bit(0);
}
inline void CMessageRefreshSingleTaskResponse::clear_taskcolor() {
  taskcolor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRefreshSingleTaskResponse::taskcolor() const {
  return taskcolor_;
}
inline void CMessageRefreshSingleTaskResponse::set_taskcolor(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskcolor_ = value;
}

// optional uint32 TaskID = 2;
inline bool CMessageRefreshSingleTaskResponse::has_taskid() const {
  return _has_bit(1);
}
inline void CMessageRefreshSingleTaskResponse::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRefreshSingleTaskResponse::taskid() const {
  return taskid_;
}
inline void CMessageRefreshSingleTaskResponse::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskid_ = value;
}

#endif  // PROTOBUF_taskmessage_5fpb_2ehxx__INCLUDED
