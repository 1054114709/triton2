// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_corpsmessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_corpsmessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "familydbinfo_pb.hxx.pb.h"
#include "corpsinfo_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();

class CorpsHead;
class CMessageCreatCorpsRequest;
class CMessageCreatCorpsResponse;
class CMessageApplyCorpsRequest;
class CMessageApplyCorpsResponse;
class CMessageCorpsMemberApplyNotify;
class CMessageReplyCorpsMemberApplyRequest;
class CMessageReplyCorpsMemberApplyResponse;
class CMessageApplyCorpsResultNotify;
class CMessageInviteCorpsMemberRequest;
class CMessageInviteCorpsMemberResponse;
class CMessageCorpsInviteNotify;
class CMessageReplyCorpsInviteRequest;
class CMessageReplyCorpsInviteResponse;
class CMessageCorpsInviteResultNotify;
class CMessageFamilyJoinCorpsNotify;
class CMessageFamilyLeaveCorpsRequest;
class CMessageFamilyLeaveCorpsResponse;
class CMessageFamilyLeaveCorpsNotify;
class CMessageKickFamilyRequest;
class CMessageKickFamilyResponse;
class CMessageKickFamilyNotify;
class CMessageGetCorpsFamilyInfoRequest;
class CMessageGetCorpsFamilyInfoResponse;
class CMessageGetCorpsPropertyRequest;
class CMessageGetCorpsPropertyResponse;
class CMessageGetCorpsFamilyMemberRequest;
class CMessageGetCorpsFamilyMemberResponse;
class CMessageChangeCorpsBulletinRequest;
class CMessageChangeCorpsBulletinResponse;
class CMessageChangeCorpsBulletinNotify;
class CMessageChangeCorpsHeaderRequest;
class CMessageChangeCorpsHeaderResponse;
class CMessageChangeCorpsHeaderNotify;
class CMessageGetCorpsApplyListRequest;
class CMessageGetCorpsApplyListResponse;
class CMessageDisbandCorpsRequest;
class CMessageDisbandCorpsResponse;
class CMessageDisbandCorpsNotify;
class CMessageCancelCorpsDisbandRequest;
class CMessageCancelCorpsDisbandResponse;
class CMessageClearCorpsApplyRequest;
class CMessageClearCorpsApplyResponse;
class CMessageRefreshCorpsInfoRequest;
class CMessageRefreshCorpsInfoResponse;
class CMessageGetCorpsListRequest;
class CMessageGetCorpsListResponse;
class CMessageSetCorpsPostRequest;
class CMessageSetCorpsPostResponse;
class CMessageLevelUPCorpsRequest;
class CMessageLevelUPCorpsResponse;
class CMessageContributeCorpsMoneyRequest;
class CMessageContributeCorpsMoneyResponse;
class CMessageFamilyContributeMoneyRequest;
class CMessageFamilyContributeMoneyResponse;
class CMessageSetMemberNameRequest;
class CMessageSetMemberNameResponse;
class CMessageSetCorpsPostNotify;
class CMessageCorpsLevelUPNotify;
class CMessageCorpsBattleBidRequest;
class CMessageCorpsBattleBidResponse;
class CMessageCorpsQueryBidRankRequest;
class PBBidRank;
class CMessageCorpsQueryBidRankResponse;
class CMessageCorpsSelectFamilyBattleRequest;
class CMessageCorpsSelectFamilyBattleResponse;
class CMessageCorpsPvPStarLevelUpNotify;
class CMessageCorpsBattleRightsNotify;
class CMessageCorpsRecBattleRightsNotify;
class CMessageCorpsSelectMemberBattleRequest;
class CMessageCorpsSelectMemberBattleResponse;
class CMessageCorpsMemberBattleRightsNotify;
class CMessageCorpsMoneyChangedNotify;
class CMessageCorpsGloryChangedNotify;
class CMessageCorpsContributeChangedNotify;
class CMessageCorpsBossTimesChangedNotify;
class CMessageCorpsBossRefineValueNotify;
class CMessageCorpsCollectActiveChangeNotify;
class CMessageMendShengHuoTaiRequest;
class CMessageCorpsPropertyNotice;
class CMessageCorpsOperateRoomRequest;
class CMessageCorpsOperateRoomResponse;
class CMessageCorpsRoomNotice;
class CMessageCorpsChallegeRequest;
class CMessageCorpsChallegeResponse;
class CMessageCorpsChallegeNotice;
class CMessageCorpsReplyChallegeRequest;
class CMessageCorpsReplyChallegeResponse;
class CMessageCorpsQueryChallegeListRequest;
class CMessageCorpsQueryChallegeListResponse;
class PBChallege;
class CMessageCorpsQueryRecChallegeListRequest;
class CMessageCorpsQueryRecChallegeListResponse;
class CMessageCorpsQueryRoomListRequest;
class PBCorpsRoom;
class CMessageCorpsQueryRoomListResponse;
class CMessageQueryCorpsWelfareRequest;
class CMessageQueryCorpsWelfareResponse;
class CMessageObtainCorpsWelfareRequest;
class CMessageObtainCorpsWelfareResponse;
class CMessageGetCorpsMoneyRequest;
class CMessageGetCorpsMoneyResponse;
class CMessageCorpsAbortBattleCityRequest;
class CMessageCorpsAbortBattleCityResponse;
class CMessageCorpsAbortBattleCityNotice;
class CMessageCorpsCanLevelUPNotify;
class CMessageCorpsPublishTaskNotify;
class CMessageCorpsBattleResultNotice;
class CMessageCorpsNpcOwnerNotice;
class CMessageCorpsNameChangedNotify;
class CMessageCreateUnionRequest;
class CMessageCreateUnionResponse;
class CMessageCreateUnionNotify;
class CMessageApplyUnionRequest;
class CMessageApplyUnionResponse;
class CMessageUnionMemberApplyNotify;
class CMessageReplyUnionMemberApplyRequest;
class CMessageReplyUnionMemberApplyResponse;
class CMessageApplyUnionResultNotify;
class CMessageInviteUnionMemberRequest;
class CMessageInviteUnionMemberResponse;
class CMessageUnionInviteNotify;
class CMessageReplyUnionInviteRequest;
class CMessageReplyUnionInviteResponse;
class CMessageUnionInviteResultNotify;
class CMessageCorpsJoinUnionNotify;
class CMessageCorpsLeaveUnionRequest;
class CMessageCorpsLeaveUnionResponse;
class CMessageCorpsLeaveUnionNotify;
class CMessageKickCorpsRequest;
class CMessageKickCorpsResponse;
class CMessageKickCorpsNotify;
class CMessageMakeUnionRequest;
class CMessageMakeUnionResponse;
class CMessageMakeUnionNotify;
class CMessageGetUnionInfoRequest;
class CMessageGetUnionInfoResponse;
class CMessageDismissUnionRequest;
class CMessageDismissUnionResponse;
class CMessageDismissUnionNotify;
class CMessageUnionApplyListRequest;
class CMessageUnionApplyListResponse;
class CMessageAllUnionListRequest;
class CMessageAllUnionListResponse;
class CMessageCorpsGetOtherMemberRequest;
class PBBattleMember;
class CMessageCorpsGetOtherMemberResponse;
class CMessageUnionJoinBattleListRequest;
class CMessageUnionJoinBattleListResponse;
class CMessageCorpsGetAllMapRequest;
class PBMapOwner;
class CMessageCorpsGetAllMapResponse;
class CMessageCorpsAppointPrinceRequest;
class CMessageCorspAppointPrinceResponse;
class CMessageCorpsAppointPrinceNotice;
class CMessageCorpsMoveCapitalRequest;
class CMesssageCorpsMoveCapitalResponse;
class CMessageCorpsSelectColorRequest;
class CMessageCorpsSelectColorResponse;
class CorpsGoodItem;
class CMessageGetCorpsGoodsListRequest;
class CMessageGetCorpsGoodsListResponse;
class CMessageGetCorpsExchangeGoodsListRequest;
class CMessageGetCorpsExchangeGoodsListResponse;
class CMessageChangeUnionNameRequest;
class CMessageChangeUnionNameResponse;
class CMessageChangeUnionNameNotify;
class CMessageChangeCorpsGoodsListNotify;
class CMessageChangeCorpsExchangeGoodsListNotify;
class CMessageUseCorpsLeagueItemNotify;
class CMessageCorpsLoginBattleRequest;
class CMessageCorpsLoginBattleResponse;
class CMessageSummonCorpsBossRequest;
class CMessageSummonCorpsBossResponse;
class CMessageCorpsBossRepetionOpenNotify;
class CMessageIntoCorpsBossRepetionResponse;
class CMessageCorpsBossRepetionEndNotify;

enum CorpsMessageID {
  ID_C2S_REQUEST_CREATCORPS = 14336,
  ID_S2C_RESPONSE_CREATCORPS = 14337,
  ID_C2S_REQUEST_APPLYCORPS = 14338,
  ID_S2C_RESPONSE_APPLYCORPS = 14339,
  ID_S2C_NOTIFY_CORPSMEMBERAPPLY = 14340,
  ID_C2S_REQUEST_REPLYCORPSMEMBERAPPLY = 14341,
  ID_S2C_RESPONSE_REPLYCORPSMEMBERAPPLY = 14342,
  ID_S2C_NOTIFY_APPLYCORPSRESULT = 14343,
  ID_C2S_REQUEST_INVITECORPSMEMBER = 14344,
  ID_S2C_RESPONSE_INVITECORPSMEMBER = 14345,
  ID_S2C_NOTIFY_CORPSINVITE = 14346,
  ID_C2S_REQUEST_REPLYCORPSINVITE = 14347,
  ID_S2C_RESPONSE_REPLYCORPSINVITE = 14348,
  ID_S2C_NOTIFY_CORPSINVITERESULT = 14349,
  ID_S2C_NOTIFY_FAMILYJOINCORPS = 14350,
  ID_C2S_REQUEST_LEAVECORPS = 14351,
  ID_S2C_RESPONSE_LEAVECORPS = 14352,
  ID_S2C_NOTIFY_FAMILYLEAVED = 14353,
  ID_C2S_REQUEST_KICKFAMILY = 14354,
  ID_S2C_RESPONSE_KICKFAMILY = 14355,
  ID_S2C_NOTIFY_FAMILYKICKED = 14356,
  ID_C2S_REQUEST_GETCORPSFAMILYINFO = 14357,
  ID_S2C_RESPONSE_GETCORPSFAMILYINFO = 14358,
  ID_C2S_REQUEST_GETCORPSPROPERTYINFO = 14359,
  ID_S2C_RESPONSE_GETCORPSPROPERTYINFO = 14360,
  ID_C2S_REQUEST_GETCOPRSFAMILYMEMBER = 14361,
  ID_S2C_RESPONE_GETCOPRSFAMILYMEMBER = 14362,
  ID_C2S_REQUEST_CHANGECORPSBULLETIN = 14363,
  ID_S2C_RESPONSE_CHANGECORPSBULLETIN = 14364,
  ID_S2C_NOTIFY_CHANGECORPSBULLETIN = 14365,
  ID_C2S_REQUEST_CHANGECORPSHEADER = 14366,
  ID_S2C_RESPONSE_CHANGECORPSHEADER = 14367,
  ID_S2C_NOTIFY_CHANGECORPSHEADER = 14368,
  ID_C2S_REQUEST_GETCORPSAPPLYLIST = 14369,
  ID_S2C_RESPONSE_GETCORPSAPPLYLIST = 14370,
  ID_C2S_REQUEST_DISBANDCORPS = 14371,
  ID_S2C_RESPONSE_DISBANDCORPS = 14372,
  ID_S2C_NOTIFY_DISBANDCORPS = 14373,
  ID_C2S_REQUEST_CANCELCORPSDISBAND = 14374,
  ID_S2C_RESPONSE_CANCELCORPSDISBAND = 14375,
  ID_C2S_REQUEST_CLEARCORPSAPPLY = 14376,
  ID_S2C_RESPONSE_CLEARCORPSAPPLY = 14377,
  ID_C2S_REQUEST_REFRESHCORPSINFO = 14378,
  ID_S2C_RESPONSE_REFRESHCORPSINFO = 14379,
  ID_C2S_REQUEST_GETCOPRSLIST = 14380,
  ID_S2C_RESPONSE_GETCORPSLIST = 14381,
  ID_C2S_REQUEST_BATTLEBID = 14382,
  ID_S2C_RESPONSE_BATTLEBID = 14383,
  ID_C2S_REQUEST_QUERYBIDRANK = 14384,
  ID_S2C_RESPONSE_QUERYBIDRANK = 14385,
  ID_C2S_REQUEST_SELECTFAMILY = 14386,
  ID_S2C_RESPONSE_SELECTFAMILY = 14387,
  ID_C2S_REQUEST_SETCORPSPOST = 14388,
  ID_S2C_RESPONSE_SETCORPSPOST = 14389,
  ID_C2S_REQUEST_LEVELUPCORPS = 14390,
  ID_S2C_RESPONSE_LEVELUPCORPS = 14391,
  ID_C2S_REQUEST_CONTRIBUTECORPSMONEY = 14392,
  ID_S2C_RESPONSE_CONTRIBUTECORPSMONEY = 14393,
  ID_C2S_REQUEST_FAMILYCONTRIBUTEMONEY = 14394,
  ID_S2C_RESPONSE_FAMILYCONTRIBUTEMONEY = 14395,
  ID_C2S_REQUEST_SETMEMBERNAME = 14396,
  ID_S2C_RESPONSE_SETMEMBERNAME = 14397,
  ID_S2C_NOTIFY_SETCORPSPOST = 14398,
  ID_S2C_NOTIFY_CORPSLEVELUP = 14399,
  ID_S2C_NOTIFY_CORPSPVPSTARLEVELUP = 14400,
  ID_S2C_NOTIFY_CORPSBATTLERIGHTS = 14401,
  ID_S2C_NOTIFY_RECBATTLERIGHTS = 14402,
  ID_C2S_REQUEST_SELECTBATTLE = 14403,
  ID_S2C_RESPONSE_SELECTBATTLE = 14404,
  ID_S2C_NOTIFY_MEMBERBATTLERIGHTS = 14405,
  ID_S2C_NOTIFY_CORPSMONEYCHANGED = 14406,
  ID_S2C_NOTIFY_CORPSGLORYCHANGED = 14407,
  ID_S2C_NOTIFY_CORPSCONTRIBUTECHANGED = 14408,
  ID_C2S_REQUEST_MENDSHENGHUOTAI = 14409,
  ID_S2C_NOTIFY_CORPSPROPERTY = 14410,
  ID_C2S_REQUEST_CHALLEGE = 14411,
  ID_S2C_RESPONSE_CHALLEGE = 14412,
  ID_S2C_NOTIFY_CHALLEGE = 14413,
  ID_C2S_REQUEST_ROOMOPERATION = 14414,
  ID_S2C_RESPONSE_ROOMOPERATION = 14415,
  ID_S2C_NOTIFY_ROOM = 14416,
  ID_C2S_REQUEST_REPLYCHALLEGE = 14417,
  ID_S2C_RESPONSE_REPLYCHALLEGE = 14418,
  ID_C2S_REQUEST_QUERYROOM = 14419,
  ID_S2C_RESPONSE_QUERYROOM = 14420,
  ID_C2S_REQUEST_QUERYCHALLEGELIST = 14421,
  ID_S2C_RESPONSE_QUERYCHALLEGELIST = 14422,
  ID_C2S_REQUEST_QUERYRECCHALLEGE = 14423,
  ID_S2C_RESPONSE_QUERYRECCHALLEGE = 14424,
  ID_C2S_REQUEST_QUERYCORPSWELFARE = 14425,
  ID_S2C_RESPONSE_QUERYCORPSWELFARE = 14426,
  ID_C2S_REQUEST_OBTAINCORPSWELFARE = 14427,
  ID_S2C_RESPONSE_OBTAINCORPSWELFARE = 14428,
  ID_C2S_REQUEST_GETCORPSMONEY = 14429,
  ID_S2C_RESPONSE_GETCORPSMONEY = 14430,
  ID_C2S_REQUEST_ABORTBATTLECITY = 14431,
  ID_S2C_RESPONSE_ABORTBATTLECITY = 14432,
  ID_S2C_NOTIFY_ABORTBATTLECITY = 14433,
  ID_S2C_NOTIFY_CORPSCANLEVELUP = 14434,
  ID_S2C_NOTIFY_CORPSBATTLERESULT = 14435,
  ID_S2C_NOTIFY_NPCOWNERUPDATE = 14436,
  ID_S2C_NOTIFY_CORPSNAMECHANGED = 14437,
  ID_C2S_REQUEST_CREATEUNION = 14446,
  ID_S2C_RESPONSE_CREATEUNION = 14447,
  ID_S2C_NOTIFY_CREATEUNION = 14448,
  ID_C2S_REQUEST_APPLYUNION = 14449,
  ID_S2C_RESPONSE_APPLYUNION = 14450,
  ID_S2C_NOTIFY_UNIONMEMBERAPPLY = 14451,
  ID_C2S_REQUEST_REPLYUNIONMEMBERAPPLY = 14452,
  ID_S2C_RESPONSE_REPLYUNIONMEMBERAPPLY = 14453,
  ID_S2C_NOTIFY_APPLYUNIONRESULT = 14454,
  ID_C2S_REQUEST_INVITEUNIONMEMBER = 14455,
  ID_S2C_RESPONSE_INVITEUNIONMEMBER = 14456,
  ID_S2C_NOTIFY_UNIONINVITE = 14457,
  ID_C2S_REQUEST_REPLYUNIONINVITE = 14458,
  ID_S2C_RESPONSE_REPLYUNIONINVITE = 14459,
  ID_S2C_NOTIFY_UNIONINVITERESULT = 14460,
  ID_S2C_NOTIFY_CORPSJOINUNION = 14461,
  ID_C2S_REQUEST_LEAVEUNION = 14462,
  ID_S2C_RESPONSE_LEAVEUNION = 14463,
  ID_S2C_NOTIFY_CORPSLEAVED = 14464,
  ID_C2S_REQUEST_KICKCORPS = 14465,
  ID_S2C_RESPONSE_KICKCORPS = 14466,
  ID_S2C_NOTIFY_CORPSKICKED = 14467,
  ID_C2S_REQUEST_MAKEUNION = 14468,
  ID_S2C_RESPONSE_MAKEUNION = 14469,
  ID_S2C_NOTIFY_MAKEUNION = 14470,
  ID_C2S_REQUEST_UNIONINFO = 14471,
  ID_S2C_RESPONSE_UNIONINFO = 14472,
  ID_C2S_REQUEST_DISMISSUNION = 14473,
  ID_S2C_RESPONSE_DISMISSUNION = 14474,
  ID_S2C_NOTIFY_DISMISSUNION = 14475,
  ID_C2S_REQUEST_UNIONAPPLYLIST = 14476,
  ID_S2C_RESPONSE_UNIONAPPLYLIST = 14477,
  ID_C2S_REQUEST_ALLUNIONLIST = 14478,
  ID_S2C_RESPONSE_ALLUNIONLIST = 14479,
  ID_C2S_REQUEST_GETOTHERMEMBER = 14480,
  ID_S2C_RESPONSE_GETOTHERMEMBER = 14481,
  ID_C2S_REQUEST_UNIONSUBMIT = 14482,
  ID_S2C_RESPONSE_UNIONSUBMIT = 14483,
  ID_C2S_REQUEST_GETALLMAP = 14484,
  ID_S2C_RESPONSE_GETALLMAP = 14485,
  ID_C2S_REQUEST_APPOINTPRINCE = 14486,
  ID_S2C_RESPONSE_APPOINTPRINCE = 14487,
  ID_S2C_NOTIFY_APPOINTPRINCE = 14488,
  ID_C2S_REQUEST_MOVECAPITAL = 14489,
  ID_S2C_RESPONSE_MOVECAPITAL = 14490,
  ID_C2S_REQUEST_SELECTCOLOR = 14491,
  ID_S2C_RESPONSE_SELECTCOLOR = 14492,
  ID_C2S_REQUEST_GETCORPSGOODSLIST = 14495,
  ID_S2C_RESPONSE_GETCORPSGOODSLIST = 14496,
  ID_C2S_REQUEST_GETCORPSEXCHANGEGOODSLIST = 14497,
  ID_S2C_RESPONSE_GETCORPSEXCHANGEGOODSLIST = 14498,
  ID_S2C_NOTIFY_CHANGECORPSGOODSLIST = 14499,
  ID_S2C_NOTIFY_CHANGEXCHANGEECORPSGOODSLIST = 14500,
  ID_C2S_REQUEST_CHANGEUNIONNAME = 14501,
  ID_S2C_RESPONSE_CHANGEUNIONNAME = 14502,
  ID_S2C_NOTIFY_CHANGEUNIONNAME = 14503,
  ID_S2C_NOTIFY_USECORPSLEAGUEITEM = 14504,
  ID_C2S_REQUEST_LOGINBATTLE = 14505,
  ID_S2C_RESPONSE_LOGINBATTLE = 14506,
  ID_S2C_CORPSBOSSTIMES_CHANGED_NOTIFY = 14507,
  ID_S2C_CORPSBOSSREFINEVALUE_CHANGED_NOTIFY = 14508,
  ID_C2S_SUMMON_CORPSBOSS_REQUEST = 14509,
  ID_S2C_SUMMON_CORPSBOSS_RESPONSE = 14510,
  ID_S2C_CORPSBOSSREPETION_OPEN_NOTIFY = 14511,
  ID_S2C_INTO_CORPSBOSS_REPETION_RESPONSE = 14512,
  ID_S2C_CORPSBOSSREPETION_END_NOTIFY = 14513,
  ID_S2C_NOTIFY_CORPSCOLLECTACTIVECHANGED = 14514,
  ID_S2C_NOTIFY_CORPSPUBLISHTASK = 14515
};
const ::google::protobuf::EnumDescriptor* CorpsMessageID_descriptor();
bool CorpsMessageID_IsValid(int value);
const CorpsMessageID CorpsMessageID_MIN = ID_C2S_REQUEST_CREATCORPS;
const CorpsMessageID CorpsMessageID_MAX = ID_S2C_NOTIFY_CORPSPUBLISHTASK;

inline const ::std::string& CorpsMessageID_Name(CorpsMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CorpsMessageID_descriptor(), value);
}
inline bool CorpsMessageID_Parse(
    const ::std::string& name, CorpsMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CorpsMessageID>(
    CorpsMessageID_descriptor(), name, value);
}
// ===================================================================

class CorpsHead : public ::google::protobuf::Message {
 public:
  CorpsHead();
  virtual ~CorpsHead();
  
  CorpsHead(const CorpsHead& from);
  
  inline CorpsHead& operator=(const CorpsHead& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CorpsHead& default_instance();
  void Swap(CorpsHead* other);
  
  // implements Message ----------------------------------------------
  
  CorpsHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CorpsHead& from);
  void MergeFrom(const CorpsHead& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 MsgID = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CorpsHead* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreatCorpsRequest : public ::google::protobuf::Message {
 public:
  CMessageCreatCorpsRequest();
  virtual ~CMessageCreatCorpsRequest();
  
  CMessageCreatCorpsRequest(const CMessageCreatCorpsRequest& from);
  
  inline CMessageCreatCorpsRequest& operator=(const CMessageCreatCorpsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreatCorpsRequest& default_instance();
  void Swap(CMessageCreatCorpsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreatCorpsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreatCorpsRequest& from);
  void MergeFrom(const CMessageCreatCorpsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string CorpsName = 2;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 2;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 NpcEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsColor = 4;
  inline bool has_corpscolor() const;
  inline void clear_corpscolor();
  static const int kCorpsColorFieldNumber = 4;
  inline ::google::protobuf::uint32 corpscolor() const;
  inline void set_corpscolor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 corpscolor_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreatCorpsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreatCorpsResponse : public ::google::protobuf::Message {
 public:
  CMessageCreatCorpsResponse();
  virtual ~CMessageCreatCorpsResponse();
  
  CMessageCreatCorpsResponse(const CMessageCreatCorpsResponse& from);
  
  inline CMessageCreatCorpsResponse& operator=(const CMessageCreatCorpsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreatCorpsResponse& default_instance();
  void Swap(CMessageCreatCorpsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreatCorpsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreatCorpsResponse& from);
  void MergeFrom(const CMessageCreatCorpsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 CorpsID = 4;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsColor = 5;
  inline bool has_corpscolor() const;
  inline void clear_corpscolor();
  static const int kCorpsColorFieldNumber = 5;
  inline ::google::protobuf::uint32 corpscolor() const;
  inline void set_corpscolor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 corpscolor_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreatCorpsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageApplyCorpsRequest : public ::google::protobuf::Message {
 public:
  CMessageApplyCorpsRequest();
  virtual ~CMessageApplyCorpsRequest();
  
  CMessageApplyCorpsRequest(const CMessageApplyCorpsRequest& from);
  
  inline CMessageApplyCorpsRequest& operator=(const CMessageApplyCorpsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageApplyCorpsRequest& default_instance();
  void Swap(CMessageApplyCorpsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageApplyCorpsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageApplyCorpsRequest& from);
  void MergeFrom(const CMessageApplyCorpsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string CorpsName = 2;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 2;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 CorpsID = 3;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageApplyCorpsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageApplyCorpsResponse : public ::google::protobuf::Message {
 public:
  CMessageApplyCorpsResponse();
  virtual ~CMessageApplyCorpsResponse();
  
  CMessageApplyCorpsResponse(const CMessageApplyCorpsResponse& from);
  
  inline CMessageApplyCorpsResponse& operator=(const CMessageApplyCorpsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageApplyCorpsResponse& default_instance();
  void Swap(CMessageApplyCorpsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageApplyCorpsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageApplyCorpsResponse& from);
  void MergeFrom(const CMessageApplyCorpsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageApplyCorpsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsMemberApplyNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsMemberApplyNotify();
  virtual ~CMessageCorpsMemberApplyNotify();
  
  CMessageCorpsMemberApplyNotify(const CMessageCorpsMemberApplyNotify& from);
  
  inline CMessageCorpsMemberApplyNotify& operator=(const CMessageCorpsMemberApplyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsMemberApplyNotify& default_instance();
  void Swap(CMessageCorpsMemberApplyNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsMemberApplyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsMemberApplyNotify& from);
  void MergeFrom(const CMessageCorpsMemberApplyNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional .FamilyData FamilyInfo = 2;
  inline bool has_familyinfo() const;
  inline void clear_familyinfo();
  static const int kFamilyInfoFieldNumber = 2;
  inline const ::FamilyData& familyinfo() const;
  inline ::FamilyData* mutable_familyinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::FamilyData* familyinfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsMemberApplyNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReplyCorpsMemberApplyRequest : public ::google::protobuf::Message {
 public:
  CMessageReplyCorpsMemberApplyRequest();
  virtual ~CMessageReplyCorpsMemberApplyRequest();
  
  CMessageReplyCorpsMemberApplyRequest(const CMessageReplyCorpsMemberApplyRequest& from);
  
  inline CMessageReplyCorpsMemberApplyRequest& operator=(const CMessageReplyCorpsMemberApplyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReplyCorpsMemberApplyRequest& default_instance();
  void Swap(CMessageReplyCorpsMemberApplyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReplyCorpsMemberApplyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReplyCorpsMemberApplyRequest& from);
  void MergeFrom(const CMessageReplyCorpsMemberApplyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 3;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 3;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 familyid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReplyCorpsMemberApplyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReplyCorpsMemberApplyResponse : public ::google::protobuf::Message {
 public:
  CMessageReplyCorpsMemberApplyResponse();
  virtual ~CMessageReplyCorpsMemberApplyResponse();
  
  CMessageReplyCorpsMemberApplyResponse(const CMessageReplyCorpsMemberApplyResponse& from);
  
  inline CMessageReplyCorpsMemberApplyResponse& operator=(const CMessageReplyCorpsMemberApplyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReplyCorpsMemberApplyResponse& default_instance();
  void Swap(CMessageReplyCorpsMemberApplyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReplyCorpsMemberApplyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReplyCorpsMemberApplyResponse& from);
  void MergeFrom(const CMessageReplyCorpsMemberApplyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 4;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 4;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 familyid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReplyCorpsMemberApplyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageApplyCorpsResultNotify : public ::google::protobuf::Message {
 public:
  CMessageApplyCorpsResultNotify();
  virtual ~CMessageApplyCorpsResultNotify();
  
  CMessageApplyCorpsResultNotify(const CMessageApplyCorpsResultNotify& from);
  
  inline CMessageApplyCorpsResultNotify& operator=(const CMessageApplyCorpsResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageApplyCorpsResultNotify& default_instance();
  void Swap(CMessageApplyCorpsResultNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageApplyCorpsResultNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageApplyCorpsResultNotify& from);
  void MergeFrom(const CMessageApplyCorpsResultNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ResultCode = 2;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 3;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 4;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 4;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 UnionID = 5;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 5;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 6;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 6;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 resultcode_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageApplyCorpsResultNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteCorpsMemberRequest : public ::google::protobuf::Message {
 public:
  CMessageInviteCorpsMemberRequest();
  virtual ~CMessageInviteCorpsMemberRequest();
  
  CMessageInviteCorpsMemberRequest(const CMessageInviteCorpsMemberRequest& from);
  
  inline CMessageInviteCorpsMemberRequest& operator=(const CMessageInviteCorpsMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteCorpsMemberRequest& default_instance();
  void Swap(CMessageInviteCorpsMemberRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteCorpsMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteCorpsMemberRequest& from);
  void MergeFrom(const CMessageInviteCorpsMemberRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string FamilyName = 2;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 2;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
  // optional uint32 FamilyID = 3;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 3;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional uint32 MemberID = 4;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 4;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  ::google::protobuf::uint32 familyid_;
  ::google::protobuf::uint32 memberid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteCorpsMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteCorpsMemberResponse : public ::google::protobuf::Message {
 public:
  CMessageInviteCorpsMemberResponse();
  virtual ~CMessageInviteCorpsMemberResponse();
  
  CMessageInviteCorpsMemberResponse(const CMessageInviteCorpsMemberResponse& from);
  
  inline CMessageInviteCorpsMemberResponse& operator=(const CMessageInviteCorpsMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteCorpsMemberResponse& default_instance();
  void Swap(CMessageInviteCorpsMemberResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteCorpsMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteCorpsMemberResponse& from);
  void MergeFrom(const CMessageInviteCorpsMemberResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 3;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 3;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteCorpsMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsInviteNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsInviteNotify();
  virtual ~CMessageCorpsInviteNotify();
  
  CMessageCorpsInviteNotify(const CMessageCorpsInviteNotify& from);
  
  inline CMessageCorpsInviteNotify& operator=(const CMessageCorpsInviteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsInviteNotify& default_instance();
  void Swap(CMessageCorpsInviteNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsInviteNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsInviteNotify& from);
  void MergeFrom(const CMessageCorpsInviteNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string InvitingName = 2;
  inline bool has_invitingname() const;
  inline void clear_invitingname();
  static const int kInvitingNameFieldNumber = 2;
  inline const ::std::string& invitingname() const;
  inline void set_invitingname(const ::std::string& value);
  inline void set_invitingname(const char* value);
  inline void set_invitingname(const char* value, size_t size);
  inline ::std::string* mutable_invitingname();
  
  // optional uint32 InvitingID = 3;
  inline bool has_invitingid() const;
  inline void clear_invitingid();
  static const int kInvitingIDFieldNumber = 3;
  inline ::google::protobuf::uint32 invitingid() const;
  inline void set_invitingid(::google::protobuf::uint32 value);
  
  // optional .PBCorpsBasicInfo CorpsInfo = 4;
  inline bool has_corpsinfo() const;
  inline void clear_corpsinfo();
  static const int kCorpsInfoFieldNumber = 4;
  inline const ::PBCorpsBasicInfo& corpsinfo() const;
  inline ::PBCorpsBasicInfo* mutable_corpsinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* invitingname_;
  static const ::std::string _default_invitingname_;
  ::google::protobuf::uint32 invitingid_;
  ::PBCorpsBasicInfo* corpsinfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsInviteNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReplyCorpsInviteRequest : public ::google::protobuf::Message {
 public:
  CMessageReplyCorpsInviteRequest();
  virtual ~CMessageReplyCorpsInviteRequest();
  
  CMessageReplyCorpsInviteRequest(const CMessageReplyCorpsInviteRequest& from);
  
  inline CMessageReplyCorpsInviteRequest& operator=(const CMessageReplyCorpsInviteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReplyCorpsInviteRequest& default_instance();
  void Swap(CMessageReplyCorpsInviteRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReplyCorpsInviteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReplyCorpsInviteRequest& from);
  void MergeFrom(const CMessageReplyCorpsInviteRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 3;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 InvitingID = 4;
  inline bool has_invitingid() const;
  inline void clear_invitingid();
  static const int kInvitingIDFieldNumber = 4;
  inline ::google::protobuf::uint32 invitingid() const;
  inline void set_invitingid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 invitingid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReplyCorpsInviteRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReplyCorpsInviteResponse : public ::google::protobuf::Message {
 public:
  CMessageReplyCorpsInviteResponse();
  virtual ~CMessageReplyCorpsInviteResponse();
  
  CMessageReplyCorpsInviteResponse(const CMessageReplyCorpsInviteResponse& from);
  
  inline CMessageReplyCorpsInviteResponse& operator=(const CMessageReplyCorpsInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReplyCorpsInviteResponse& default_instance();
  void Swap(CMessageReplyCorpsInviteResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReplyCorpsInviteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReplyCorpsInviteResponse& from);
  void MergeFrom(const CMessageReplyCorpsInviteResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 4;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 4;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 CorpsID = 5;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 5;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 UnionID = 6;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 6;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 7;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 7;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 result_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReplyCorpsInviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsInviteResultNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsInviteResultNotify();
  virtual ~CMessageCorpsInviteResultNotify();
  
  CMessageCorpsInviteResultNotify(const CMessageCorpsInviteResultNotify& from);
  
  inline CMessageCorpsInviteResultNotify& operator=(const CMessageCorpsInviteResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsInviteResultNotify& default_instance();
  void Swap(CMessageCorpsInviteResultNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsInviteResultNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsInviteResultNotify& from);
  void MergeFrom(const CMessageCorpsInviteResultNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 3;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 3;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 result_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsInviteResultNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyJoinCorpsNotify : public ::google::protobuf::Message {
 public:
  CMessageFamilyJoinCorpsNotify();
  virtual ~CMessageFamilyJoinCorpsNotify();
  
  CMessageFamilyJoinCorpsNotify(const CMessageFamilyJoinCorpsNotify& from);
  
  inline CMessageFamilyJoinCorpsNotify& operator=(const CMessageFamilyJoinCorpsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyJoinCorpsNotify& default_instance();
  void Swap(CMessageFamilyJoinCorpsNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyJoinCorpsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyJoinCorpsNotify& from);
  void MergeFrom(const CMessageFamilyJoinCorpsNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional .PBCorpsMember FamilyInfo = 2;
  inline bool has_familyinfo() const;
  inline void clear_familyinfo();
  static const int kFamilyInfoFieldNumber = 2;
  inline const ::PBCorpsMember& familyinfo() const;
  inline ::PBCorpsMember* mutable_familyinfo();
  
  // optional uint32 UnionID = 3;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 3;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 4;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 4;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::PBCorpsMember* familyinfo_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyJoinCorpsNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyLeaveCorpsRequest : public ::google::protobuf::Message {
 public:
  CMessageFamilyLeaveCorpsRequest();
  virtual ~CMessageFamilyLeaveCorpsRequest();
  
  CMessageFamilyLeaveCorpsRequest(const CMessageFamilyLeaveCorpsRequest& from);
  
  inline CMessageFamilyLeaveCorpsRequest& operator=(const CMessageFamilyLeaveCorpsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyLeaveCorpsRequest& default_instance();
  void Swap(CMessageFamilyLeaveCorpsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyLeaveCorpsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyLeaveCorpsRequest& from);
  void MergeFrom(const CMessageFamilyLeaveCorpsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Msgcode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyLeaveCorpsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyLeaveCorpsResponse : public ::google::protobuf::Message {
 public:
  CMessageFamilyLeaveCorpsResponse();
  virtual ~CMessageFamilyLeaveCorpsResponse();
  
  CMessageFamilyLeaveCorpsResponse(const CMessageFamilyLeaveCorpsResponse& from);
  
  inline CMessageFamilyLeaveCorpsResponse& operator=(const CMessageFamilyLeaveCorpsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyLeaveCorpsResponse& default_instance();
  void Swap(CMessageFamilyLeaveCorpsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyLeaveCorpsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyLeaveCorpsResponse& from);
  void MergeFrom(const CMessageFamilyLeaveCorpsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyLeaveCorpsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyLeaveCorpsNotify : public ::google::protobuf::Message {
 public:
  CMessageFamilyLeaveCorpsNotify();
  virtual ~CMessageFamilyLeaveCorpsNotify();
  
  CMessageFamilyLeaveCorpsNotify(const CMessageFamilyLeaveCorpsNotify& from);
  
  inline CMessageFamilyLeaveCorpsNotify& operator=(const CMessageFamilyLeaveCorpsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyLeaveCorpsNotify& default_instance();
  void Swap(CMessageFamilyLeaveCorpsNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyLeaveCorpsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyLeaveCorpsNotify& from);
  void MergeFrom(const CMessageFamilyLeaveCorpsNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 FamilyID = 2;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 3;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 3;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 familyid_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyLeaveCorpsNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickFamilyRequest : public ::google::protobuf::Message {
 public:
  CMessageKickFamilyRequest();
  virtual ~CMessageKickFamilyRequest();
  
  CMessageKickFamilyRequest(const CMessageKickFamilyRequest& from);
  
  inline CMessageKickFamilyRequest& operator=(const CMessageKickFamilyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickFamilyRequest& default_instance();
  void Swap(CMessageKickFamilyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickFamilyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickFamilyRequest& from);
  void MergeFrom(const CMessageKickFamilyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 FamilyID = 2;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 familyid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickFamilyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickFamilyResponse : public ::google::protobuf::Message {
 public:
  CMessageKickFamilyResponse();
  virtual ~CMessageKickFamilyResponse();
  
  CMessageKickFamilyResponse(const CMessageKickFamilyResponse& from);
  
  inline CMessageKickFamilyResponse& operator=(const CMessageKickFamilyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickFamilyResponse& default_instance();
  void Swap(CMessageKickFamilyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickFamilyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickFamilyResponse& from);
  void MergeFrom(const CMessageKickFamilyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 3;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 3;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
  // optional uint32 FamilyID = 4;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 4;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  ::google::protobuf::uint32 familyid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickFamilyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickFamilyNotify : public ::google::protobuf::Message {
 public:
  CMessageKickFamilyNotify();
  virtual ~CMessageKickFamilyNotify();
  
  CMessageKickFamilyNotify(const CMessageKickFamilyNotify& from);
  
  inline CMessageKickFamilyNotify& operator=(const CMessageKickFamilyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickFamilyNotify& default_instance();
  void Swap(CMessageKickFamilyNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickFamilyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickFamilyNotify& from);
  void MergeFrom(const CMessageKickFamilyNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 FamilyID = 2;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 3;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 3;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 familyid_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickFamilyNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsFamilyInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsFamilyInfoRequest();
  virtual ~CMessageGetCorpsFamilyInfoRequest();
  
  CMessageGetCorpsFamilyInfoRequest(const CMessageGetCorpsFamilyInfoRequest& from);
  
  inline CMessageGetCorpsFamilyInfoRequest& operator=(const CMessageGetCorpsFamilyInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsFamilyInfoRequest& default_instance();
  void Swap(CMessageGetCorpsFamilyInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsFamilyInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsFamilyInfoRequest& from);
  void MergeFrom(const CMessageGetCorpsFamilyInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsFamilyInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsFamilyInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsFamilyInfoResponse();
  virtual ~CMessageGetCorpsFamilyInfoResponse();
  
  CMessageGetCorpsFamilyInfoResponse(const CMessageGetCorpsFamilyInfoResponse& from);
  
  inline CMessageGetCorpsFamilyInfoResponse& operator=(const CMessageGetCorpsFamilyInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsFamilyInfoResponse& default_instance();
  void Swap(CMessageGetCorpsFamilyInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsFamilyInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsFamilyInfoResponse& from);
  void MergeFrom(const CMessageGetCorpsFamilyInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated .PBCorpsMember CorpsMemberInfo = 2;
  inline int corpsmemberinfo_size() const;
  inline void clear_corpsmemberinfo();
  static const int kCorpsMemberInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsMember >& corpsmemberinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsMember >* mutable_corpsmemberinfo();
  inline const ::PBCorpsMember& corpsmemberinfo(int index) const;
  inline ::PBCorpsMember* mutable_corpsmemberinfo(int index);
  inline ::PBCorpsMember* add_corpsmemberinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedPtrField< ::PBCorpsMember > corpsmemberinfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsFamilyInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsPropertyRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsPropertyRequest();
  virtual ~CMessageGetCorpsPropertyRequest();
  
  CMessageGetCorpsPropertyRequest(const CMessageGetCorpsPropertyRequest& from);
  
  inline CMessageGetCorpsPropertyRequest& operator=(const CMessageGetCorpsPropertyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsPropertyRequest& default_instance();
  void Swap(CMessageGetCorpsPropertyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsPropertyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsPropertyRequest& from);
  void MergeFrom(const CMessageGetCorpsPropertyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsPropertyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsPropertyResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsPropertyResponse();
  virtual ~CMessageGetCorpsPropertyResponse();
  
  CMessageGetCorpsPropertyResponse(const CMessageGetCorpsPropertyResponse& from);
  
  inline CMessageGetCorpsPropertyResponse& operator=(const CMessageGetCorpsPropertyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsPropertyResponse& default_instance();
  void Swap(CMessageGetCorpsPropertyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsPropertyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsPropertyResponse& from);
  void MergeFrom(const CMessageGetCorpsPropertyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional .CorpsProperty CorpProperty = 2;
  inline bool has_corpproperty() const;
  inline void clear_corpproperty();
  static const int kCorpPropertyFieldNumber = 2;
  inline const ::CorpsProperty& corpproperty() const;
  inline ::CorpsProperty* mutable_corpproperty();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::CorpsProperty* corpproperty_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsPropertyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsFamilyMemberRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsFamilyMemberRequest();
  virtual ~CMessageGetCorpsFamilyMemberRequest();
  
  CMessageGetCorpsFamilyMemberRequest(const CMessageGetCorpsFamilyMemberRequest& from);
  
  inline CMessageGetCorpsFamilyMemberRequest& operator=(const CMessageGetCorpsFamilyMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsFamilyMemberRequest& default_instance();
  void Swap(CMessageGetCorpsFamilyMemberRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsFamilyMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsFamilyMemberRequest& from);
  void MergeFrom(const CMessageGetCorpsFamilyMemberRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 FamilyID = 2;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 familyid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsFamilyMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsFamilyMemberResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsFamilyMemberResponse();
  virtual ~CMessageGetCorpsFamilyMemberResponse();
  
  CMessageGetCorpsFamilyMemberResponse(const CMessageGetCorpsFamilyMemberResponse& from);
  
  inline CMessageGetCorpsFamilyMemberResponse& operator=(const CMessageGetCorpsFamilyMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsFamilyMemberResponse& default_instance();
  void Swap(CMessageGetCorpsFamilyMemberResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsFamilyMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsFamilyMemberResponse& from);
  void MergeFrom(const CMessageGetCorpsFamilyMemberResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 FamilyID = 2;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 3;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 3;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
  // optional .PBFamilyMemberList MemberList = 4;
  inline bool has_memberlist() const;
  inline void clear_memberlist();
  static const int kMemberListFieldNumber = 4;
  inline const ::PBFamilyMemberList& memberlist() const;
  inline ::PBFamilyMemberList* mutable_memberlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 familyid_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  ::PBFamilyMemberList* memberlist_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsFamilyMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsBulletinRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsBulletinRequest();
  virtual ~CMessageChangeCorpsBulletinRequest();
  
  CMessageChangeCorpsBulletinRequest(const CMessageChangeCorpsBulletinRequest& from);
  
  inline CMessageChangeCorpsBulletinRequest& operator=(const CMessageChangeCorpsBulletinRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsBulletinRequest& default_instance();
  void Swap(CMessageChangeCorpsBulletinRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsBulletinRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsBulletinRequest& from);
  void MergeFrom(const CMessageChangeCorpsBulletinRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string Bulletin = 2;
  inline bool has_bulletin() const;
  inline void clear_bulletin();
  static const int kBulletinFieldNumber = 2;
  inline const ::std::string& bulletin() const;
  inline void set_bulletin(const ::std::string& value);
  inline void set_bulletin(const char* value);
  inline void set_bulletin(const char* value, size_t size);
  inline ::std::string* mutable_bulletin();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* bulletin_;
  static const ::std::string _default_bulletin_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsBulletinRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsBulletinResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsBulletinResponse();
  virtual ~CMessageChangeCorpsBulletinResponse();
  
  CMessageChangeCorpsBulletinResponse(const CMessageChangeCorpsBulletinResponse& from);
  
  inline CMessageChangeCorpsBulletinResponse& operator=(const CMessageChangeCorpsBulletinResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsBulletinResponse& default_instance();
  void Swap(CMessageChangeCorpsBulletinResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsBulletinResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsBulletinResponse& from);
  void MergeFrom(const CMessageChangeCorpsBulletinResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string Bulletin = 3;
  inline bool has_bulletin() const;
  inline void clear_bulletin();
  static const int kBulletinFieldNumber = 3;
  inline const ::std::string& bulletin() const;
  inline void set_bulletin(const ::std::string& value);
  inline void set_bulletin(const char* value);
  inline void set_bulletin(const char* value, size_t size);
  inline ::std::string* mutable_bulletin();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::std::string* bulletin_;
  static const ::std::string _default_bulletin_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsBulletinResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsBulletinNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsBulletinNotify();
  virtual ~CMessageChangeCorpsBulletinNotify();
  
  CMessageChangeCorpsBulletinNotify(const CMessageChangeCorpsBulletinNotify& from);
  
  inline CMessageChangeCorpsBulletinNotify& operator=(const CMessageChangeCorpsBulletinNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsBulletinNotify& default_instance();
  void Swap(CMessageChangeCorpsBulletinNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsBulletinNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsBulletinNotify& from);
  void MergeFrom(const CMessageChangeCorpsBulletinNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string Bulletin = 2;
  inline bool has_bulletin() const;
  inline void clear_bulletin();
  static const int kBulletinFieldNumber = 2;
  inline const ::std::string& bulletin() const;
  inline void set_bulletin(const ::std::string& value);
  inline void set_bulletin(const char* value);
  inline void set_bulletin(const char* value, size_t size);
  inline ::std::string* mutable_bulletin();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* bulletin_;
  static const ::std::string _default_bulletin_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsBulletinNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsHeaderRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsHeaderRequest();
  virtual ~CMessageChangeCorpsHeaderRequest();
  
  CMessageChangeCorpsHeaderRequest(const CMessageChangeCorpsHeaderRequest& from);
  
  inline CMessageChangeCorpsHeaderRequest& operator=(const CMessageChangeCorpsHeaderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsHeaderRequest& default_instance();
  void Swap(CMessageChangeCorpsHeaderRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsHeaderRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsHeaderRequest& from);
  void MergeFrom(const CMessageChangeCorpsHeaderRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MemberID = 2;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 2;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 memberid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsHeaderRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsHeaderResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsHeaderResponse();
  virtual ~CMessageChangeCorpsHeaderResponse();
  
  CMessageChangeCorpsHeaderResponse(const CMessageChangeCorpsHeaderResponse& from);
  
  inline CMessageChangeCorpsHeaderResponse& operator=(const CMessageChangeCorpsHeaderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsHeaderResponse& default_instance();
  void Swap(CMessageChangeCorpsHeaderResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsHeaderResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsHeaderResponse& from);
  void MergeFrom(const CMessageChangeCorpsHeaderResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 MemberID = 3;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 3;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
  // optional string MemberName = 4;
  inline bool has_membername() const;
  inline void clear_membername();
  static const int kMemberNameFieldNumber = 4;
  inline const ::std::string& membername() const;
  inline void set_membername(const ::std::string& value);
  inline void set_membername(const char* value);
  inline void set_membername(const char* value, size_t size);
  inline ::std::string* mutable_membername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 memberid_;
  ::std::string* membername_;
  static const ::std::string _default_membername_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsHeaderResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsHeaderNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsHeaderNotify();
  virtual ~CMessageChangeCorpsHeaderNotify();
  
  CMessageChangeCorpsHeaderNotify(const CMessageChangeCorpsHeaderNotify& from);
  
  inline CMessageChangeCorpsHeaderNotify& operator=(const CMessageChangeCorpsHeaderNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsHeaderNotify& default_instance();
  void Swap(CMessageChangeCorpsHeaderNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsHeaderNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsHeaderNotify& from);
  void MergeFrom(const CMessageChangeCorpsHeaderNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 HeaderRoleID = 2;
  inline bool has_headerroleid() const;
  inline void clear_headerroleid();
  static const int kHeaderRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 headerroleid() const;
  inline void set_headerroleid(::google::protobuf::uint32 value);
  
  // optional string HeaderRoleName = 3;
  inline bool has_headerrolename() const;
  inline void clear_headerrolename();
  static const int kHeaderRoleNameFieldNumber = 3;
  inline const ::std::string& headerrolename() const;
  inline void set_headerrolename(const ::std::string& value);
  inline void set_headerrolename(const char* value);
  inline void set_headerrolename(const char* value, size_t size);
  inline ::std::string* mutable_headerrolename();
  
  // optional uint32 MemberRoleID = 4;
  inline bool has_memberroleid() const;
  inline void clear_memberroleid();
  static const int kMemberRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 memberroleid() const;
  inline void set_memberroleid(::google::protobuf::uint32 value);
  
  // optional string MemberRoleName = 5;
  inline bool has_memberrolename() const;
  inline void clear_memberrolename();
  static const int kMemberRoleNameFieldNumber = 5;
  inline const ::std::string& memberrolename() const;
  inline void set_memberrolename(const ::std::string& value);
  inline void set_memberrolename(const char* value);
  inline void set_memberrolename(const char* value, size_t size);
  inline ::std::string* mutable_memberrolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 headerroleid_;
  ::std::string* headerrolename_;
  static const ::std::string _default_headerrolename_;
  ::google::protobuf::uint32 memberroleid_;
  ::std::string* memberrolename_;
  static const ::std::string _default_memberrolename_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsHeaderNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsApplyListRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsApplyListRequest();
  virtual ~CMessageGetCorpsApplyListRequest();
  
  CMessageGetCorpsApplyListRequest(const CMessageGetCorpsApplyListRequest& from);
  
  inline CMessageGetCorpsApplyListRequest& operator=(const CMessageGetCorpsApplyListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsApplyListRequest& default_instance();
  void Swap(CMessageGetCorpsApplyListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsApplyListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsApplyListRequest& from);
  void MergeFrom(const CMessageGetCorpsApplyListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsApplyListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsApplyListResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsApplyListResponse();
  virtual ~CMessageGetCorpsApplyListResponse();
  
  CMessageGetCorpsApplyListResponse(const CMessageGetCorpsApplyListResponse& from);
  
  inline CMessageGetCorpsApplyListResponse& operator=(const CMessageGetCorpsApplyListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsApplyListResponse& default_instance();
  void Swap(CMessageGetCorpsApplyListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsApplyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsApplyListResponse& from);
  void MergeFrom(const CMessageGetCorpsApplyListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
  // optional .PBCorpsApplyList CorpsApply = 3;
  inline bool has_corpsapply() const;
  inline void clear_corpsapply();
  static const int kCorpsApplyFieldNumber = 3;
  inline const ::PBCorpsApplyList& corpsapply() const;
  inline ::PBCorpsApplyList* mutable_corpsapply();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  ::PBCorpsApplyList* corpsapply_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsApplyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDisbandCorpsRequest : public ::google::protobuf::Message {
 public:
  CMessageDisbandCorpsRequest();
  virtual ~CMessageDisbandCorpsRequest();
  
  CMessageDisbandCorpsRequest(const CMessageDisbandCorpsRequest& from);
  
  inline CMessageDisbandCorpsRequest& operator=(const CMessageDisbandCorpsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDisbandCorpsRequest& default_instance();
  void Swap(CMessageDisbandCorpsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDisbandCorpsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDisbandCorpsRequest& from);
  void MergeFrom(const CMessageDisbandCorpsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDisbandCorpsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDisbandCorpsResponse : public ::google::protobuf::Message {
 public:
  CMessageDisbandCorpsResponse();
  virtual ~CMessageDisbandCorpsResponse();
  
  CMessageDisbandCorpsResponse(const CMessageDisbandCorpsResponse& from);
  
  inline CMessageDisbandCorpsResponse& operator=(const CMessageDisbandCorpsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDisbandCorpsResponse& default_instance();
  void Swap(CMessageDisbandCorpsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDisbandCorpsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDisbandCorpsResponse& from);
  void MergeFrom(const CMessageDisbandCorpsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDisbandCorpsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDisbandCorpsNotify : public ::google::protobuf::Message {
 public:
  CMessageDisbandCorpsNotify();
  virtual ~CMessageDisbandCorpsNotify();
  
  CMessageDisbandCorpsNotify(const CMessageDisbandCorpsNotify& from);
  
  inline CMessageDisbandCorpsNotify& operator=(const CMessageDisbandCorpsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDisbandCorpsNotify& default_instance();
  void Swap(CMessageDisbandCorpsNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDisbandCorpsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDisbandCorpsNotify& from);
  void MergeFrom(const CMessageDisbandCorpsNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDisbandCorpsNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCancelCorpsDisbandRequest : public ::google::protobuf::Message {
 public:
  CMessageCancelCorpsDisbandRequest();
  virtual ~CMessageCancelCorpsDisbandRequest();
  
  CMessageCancelCorpsDisbandRequest(const CMessageCancelCorpsDisbandRequest& from);
  
  inline CMessageCancelCorpsDisbandRequest& operator=(const CMessageCancelCorpsDisbandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCancelCorpsDisbandRequest& default_instance();
  void Swap(CMessageCancelCorpsDisbandRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCancelCorpsDisbandRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCancelCorpsDisbandRequest& from);
  void MergeFrom(const CMessageCancelCorpsDisbandRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCancelCorpsDisbandRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCancelCorpsDisbandResponse : public ::google::protobuf::Message {
 public:
  CMessageCancelCorpsDisbandResponse();
  virtual ~CMessageCancelCorpsDisbandResponse();
  
  CMessageCancelCorpsDisbandResponse(const CMessageCancelCorpsDisbandResponse& from);
  
  inline CMessageCancelCorpsDisbandResponse& operator=(const CMessageCancelCorpsDisbandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCancelCorpsDisbandResponse& default_instance();
  void Swap(CMessageCancelCorpsDisbandResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCancelCorpsDisbandResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCancelCorpsDisbandResponse& from);
  void MergeFrom(const CMessageCancelCorpsDisbandResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ErrCode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCancelCorpsDisbandResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClearCorpsApplyRequest : public ::google::protobuf::Message {
 public:
  CMessageClearCorpsApplyRequest();
  virtual ~CMessageClearCorpsApplyRequest();
  
  CMessageClearCorpsApplyRequest(const CMessageClearCorpsApplyRequest& from);
  
  inline CMessageClearCorpsApplyRequest& operator=(const CMessageClearCorpsApplyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClearCorpsApplyRequest& default_instance();
  void Swap(CMessageClearCorpsApplyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClearCorpsApplyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClearCorpsApplyRequest& from);
  void MergeFrom(const CMessageClearCorpsApplyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClearCorpsApplyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClearCorpsApplyResponse : public ::google::protobuf::Message {
 public:
  CMessageClearCorpsApplyResponse();
  virtual ~CMessageClearCorpsApplyResponse();
  
  CMessageClearCorpsApplyResponse(const CMessageClearCorpsApplyResponse& from);
  
  inline CMessageClearCorpsApplyResponse& operator=(const CMessageClearCorpsApplyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClearCorpsApplyResponse& default_instance();
  void Swap(CMessageClearCorpsApplyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClearCorpsApplyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClearCorpsApplyResponse& from);
  void MergeFrom(const CMessageClearCorpsApplyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ErrCode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClearCorpsApplyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRefreshCorpsInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageRefreshCorpsInfoRequest();
  virtual ~CMessageRefreshCorpsInfoRequest();
  
  CMessageRefreshCorpsInfoRequest(const CMessageRefreshCorpsInfoRequest& from);
  
  inline CMessageRefreshCorpsInfoRequest& operator=(const CMessageRefreshCorpsInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRefreshCorpsInfoRequest& default_instance();
  void Swap(CMessageRefreshCorpsInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRefreshCorpsInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRefreshCorpsInfoRequest& from);
  void MergeFrom(const CMessageRefreshCorpsInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRefreshCorpsInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRefreshCorpsInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageRefreshCorpsInfoResponse();
  virtual ~CMessageRefreshCorpsInfoResponse();
  
  CMessageRefreshCorpsInfoResponse(const CMessageRefreshCorpsInfoResponse& from);
  
  inline CMessageRefreshCorpsInfoResponse& operator=(const CMessageRefreshCorpsInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRefreshCorpsInfoResponse& default_instance();
  void Swap(CMessageRefreshCorpsInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRefreshCorpsInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRefreshCorpsInfoResponse& from);
  void MergeFrom(const CMessageRefreshCorpsInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated .PBCorpsMember CorpsMember = 2;
  inline int corpsmember_size() const;
  inline void clear_corpsmember();
  static const int kCorpsMemberFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsMember >& corpsmember() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsMember >* mutable_corpsmember();
  inline const ::PBCorpsMember& corpsmember(int index) const;
  inline ::PBCorpsMember* mutable_corpsmember(int index);
  inline ::PBCorpsMember* add_corpsmember();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedPtrField< ::PBCorpsMember > corpsmember_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRefreshCorpsInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsListRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsListRequest();
  virtual ~CMessageGetCorpsListRequest();
  
  CMessageGetCorpsListRequest(const CMessageGetCorpsListRequest& from);
  
  inline CMessageGetCorpsListRequest& operator=(const CMessageGetCorpsListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsListRequest& default_instance();
  void Swap(CMessageGetCorpsListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsListRequest& from);
  void MergeFrom(const CMessageGetCorpsListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CurPage = 2;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurPageFieldNumber = 2;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 curpage_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsListResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsListResponse();
  virtual ~CMessageGetCorpsListResponse();
  
  CMessageGetCorpsListResponse(const CMessageGetCorpsListResponse& from);
  
  inline CMessageGetCorpsListResponse& operator=(const CMessageGetCorpsListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsListResponse& default_instance();
  void Swap(CMessageGetCorpsListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsListResponse& from);
  void MergeFrom(const CMessageGetCorpsListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional .CorpsInfoList CorpsList = 2;
  inline bool has_corpslist() const;
  inline void clear_corpslist();
  static const int kCorpsListFieldNumber = 2;
  inline const ::CorpsInfoList& corpslist() const;
  inline ::CorpsInfoList* mutable_corpslist();
  
  // optional uint32 CurPage = 3;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurPageFieldNumber = 3;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);
  
  // optional uint32 TotalPage = 4;
  inline bool has_totalpage() const;
  inline void clear_totalpage();
  static const int kTotalPageFieldNumber = 4;
  inline ::google::protobuf::uint32 totalpage() const;
  inline void set_totalpage(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::CorpsInfoList* corpslist_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 totalpage_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSetCorpsPostRequest : public ::google::protobuf::Message {
 public:
  CMessageSetCorpsPostRequest();
  virtual ~CMessageSetCorpsPostRequest();
  
  CMessageSetCorpsPostRequest(const CMessageSetCorpsPostRequest& from);
  
  inline CMessageSetCorpsPostRequest& operator=(const CMessageSetCorpsPostRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSetCorpsPostRequest& default_instance();
  void Swap(CMessageSetCorpsPostRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSetCorpsPostRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSetCorpsPostRequest& from);
  void MergeFrom(const CMessageSetCorpsPostRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MemberID = 2;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 2;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
  // optional uint32 Post = 3;
  inline bool has_post() const;
  inline void clear_post();
  static const int kPostFieldNumber = 3;
  inline ::google::protobuf::uint32 post() const;
  inline void set_post(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 memberid_;
  ::google::protobuf::uint32 post_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSetCorpsPostRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSetCorpsPostResponse : public ::google::protobuf::Message {
 public:
  CMessageSetCorpsPostResponse();
  virtual ~CMessageSetCorpsPostResponse();
  
  CMessageSetCorpsPostResponse(const CMessageSetCorpsPostResponse& from);
  
  inline CMessageSetCorpsPostResponse& operator=(const CMessageSetCorpsPostResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSetCorpsPostResponse& default_instance();
  void Swap(CMessageSetCorpsPostResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSetCorpsPostResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSetCorpsPostResponse& from);
  void MergeFrom(const CMessageSetCorpsPostResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MemberID = 2;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 2;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
  // optional uint32 Post = 3;
  inline bool has_post() const;
  inline void clear_post();
  static const int kPostFieldNumber = 3;
  inline ::google::protobuf::uint32 post() const;
  inline void set_post(::google::protobuf::uint32 value);
  
  // optional uint32 Errcode = 4;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 4;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 memberid_;
  ::google::protobuf::uint32 post_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSetCorpsPostResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLevelUPCorpsRequest : public ::google::protobuf::Message {
 public:
  CMessageLevelUPCorpsRequest();
  virtual ~CMessageLevelUPCorpsRequest();
  
  CMessageLevelUPCorpsRequest(const CMessageLevelUPCorpsRequest& from);
  
  inline CMessageLevelUPCorpsRequest& operator=(const CMessageLevelUPCorpsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLevelUPCorpsRequest& default_instance();
  void Swap(CMessageLevelUPCorpsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLevelUPCorpsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLevelUPCorpsRequest& from);
  void MergeFrom(const CMessageLevelUPCorpsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MsgCode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLevelUPCorpsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLevelUPCorpsResponse : public ::google::protobuf::Message {
 public:
  CMessageLevelUPCorpsResponse();
  virtual ~CMessageLevelUPCorpsResponse();
  
  CMessageLevelUPCorpsResponse(const CMessageLevelUPCorpsResponse& from);
  
  inline CMessageLevelUPCorpsResponse& operator=(const CMessageLevelUPCorpsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLevelUPCorpsResponse& default_instance();
  void Swap(CMessageLevelUPCorpsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLevelUPCorpsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLevelUPCorpsResponse& from);
  void MergeFrom(const CMessageLevelUPCorpsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLevelUPCorpsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageContributeCorpsMoneyRequest : public ::google::protobuf::Message {
 public:
  CMessageContributeCorpsMoneyRequest();
  virtual ~CMessageContributeCorpsMoneyRequest();
  
  CMessageContributeCorpsMoneyRequest(const CMessageContributeCorpsMoneyRequest& from);
  
  inline CMessageContributeCorpsMoneyRequest& operator=(const CMessageContributeCorpsMoneyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageContributeCorpsMoneyRequest& default_instance();
  void Swap(CMessageContributeCorpsMoneyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageContributeCorpsMoneyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageContributeCorpsMoneyRequest& from);
  void MergeFrom(const CMessageContributeCorpsMoneyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageContributeCorpsMoneyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageContributeCorpsMoneyResponse : public ::google::protobuf::Message {
 public:
  CMessageContributeCorpsMoneyResponse();
  virtual ~CMessageContributeCorpsMoneyResponse();
  
  CMessageContributeCorpsMoneyResponse(const CMessageContributeCorpsMoneyResponse& from);
  
  inline CMessageContributeCorpsMoneyResponse& operator=(const CMessageContributeCorpsMoneyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageContributeCorpsMoneyResponse& default_instance();
  void Swap(CMessageContributeCorpsMoneyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageContributeCorpsMoneyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageContributeCorpsMoneyResponse& from);
  void MergeFrom(const CMessageContributeCorpsMoneyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageContributeCorpsMoneyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyContributeMoneyRequest : public ::google::protobuf::Message {
 public:
  CMessageFamilyContributeMoneyRequest();
  virtual ~CMessageFamilyContributeMoneyRequest();
  
  CMessageFamilyContributeMoneyRequest(const CMessageFamilyContributeMoneyRequest& from);
  
  inline CMessageFamilyContributeMoneyRequest& operator=(const CMessageFamilyContributeMoneyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyContributeMoneyRequest& default_instance();
  void Swap(CMessageFamilyContributeMoneyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyContributeMoneyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyContributeMoneyRequest& from);
  void MergeFrom(const CMessageFamilyContributeMoneyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyContributeMoneyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFamilyContributeMoneyResponse : public ::google::protobuf::Message {
 public:
  CMessageFamilyContributeMoneyResponse();
  virtual ~CMessageFamilyContributeMoneyResponse();
  
  CMessageFamilyContributeMoneyResponse(const CMessageFamilyContributeMoneyResponse& from);
  
  inline CMessageFamilyContributeMoneyResponse& operator=(const CMessageFamilyContributeMoneyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFamilyContributeMoneyResponse& default_instance();
  void Swap(CMessageFamilyContributeMoneyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFamilyContributeMoneyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFamilyContributeMoneyResponse& from);
  void MergeFrom(const CMessageFamilyContributeMoneyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFamilyContributeMoneyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSetMemberNameRequest : public ::google::protobuf::Message {
 public:
  CMessageSetMemberNameRequest();
  virtual ~CMessageSetMemberNameRequest();
  
  CMessageSetMemberNameRequest(const CMessageSetMemberNameRequest& from);
  
  inline CMessageSetMemberNameRequest& operator=(const CMessageSetMemberNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSetMemberNameRequest& default_instance();
  void Swap(CMessageSetMemberNameRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSetMemberNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSetMemberNameRequest& from);
  void MergeFrom(const CMessageSetMemberNameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MemberID = 2;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 2;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 memberid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSetMemberNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSetMemberNameResponse : public ::google::protobuf::Message {
 public:
  CMessageSetMemberNameResponse();
  virtual ~CMessageSetMemberNameResponse();
  
  CMessageSetMemberNameResponse(const CMessageSetMemberNameResponse& from);
  
  inline CMessageSetMemberNameResponse& operator=(const CMessageSetMemberNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSetMemberNameResponse& default_instance();
  void Swap(CMessageSetMemberNameResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSetMemberNameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSetMemberNameResponse& from);
  void MergeFrom(const CMessageSetMemberNameResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 MemberID = 3;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 3;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 memberid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSetMemberNameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSetCorpsPostNotify : public ::google::protobuf::Message {
 public:
  CMessageSetCorpsPostNotify();
  virtual ~CMessageSetCorpsPostNotify();
  
  CMessageSetCorpsPostNotify(const CMessageSetCorpsPostNotify& from);
  
  inline CMessageSetCorpsPostNotify& operator=(const CMessageSetCorpsPostNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSetCorpsPostNotify& default_instance();
  void Swap(CMessageSetCorpsPostNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSetCorpsPostNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSetCorpsPostNotify& from);
  void MergeFrom(const CMessageSetCorpsPostNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ManagerID = 2;
  inline bool has_managerid() const;
  inline void clear_managerid();
  static const int kManagerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 managerid() const;
  inline void set_managerid(::google::protobuf::uint32 value);
  
  // optional string ManagerName = 3;
  inline bool has_managername() const;
  inline void clear_managername();
  static const int kManagerNameFieldNumber = 3;
  inline const ::std::string& managername() const;
  inline void set_managername(const ::std::string& value);
  inline void set_managername(const char* value);
  inline void set_managername(const char* value, size_t size);
  inline ::std::string* mutable_managername();
  
  // optional uint32 MemberID = 4;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 4;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
  // optional string MemberName = 5;
  inline bool has_membername() const;
  inline void clear_membername();
  static const int kMemberNameFieldNumber = 5;
  inline const ::std::string& membername() const;
  inline void set_membername(const ::std::string& value);
  inline void set_membername(const char* value);
  inline void set_membername(const char* value, size_t size);
  inline ::std::string* mutable_membername();
  
  // optional uint32 OriginalPost = 6;
  inline bool has_originalpost() const;
  inline void clear_originalpost();
  static const int kOriginalPostFieldNumber = 6;
  inline ::google::protobuf::uint32 originalpost() const;
  inline void set_originalpost(::google::protobuf::uint32 value);
  
  // optional uint32 NewPost = 7;
  inline bool has_newpost() const;
  inline void clear_newpost();
  static const int kNewPostFieldNumber = 7;
  inline ::google::protobuf::uint32 newpost() const;
  inline void set_newpost(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 managerid_;
  ::std::string* managername_;
  static const ::std::string _default_managername_;
  ::google::protobuf::uint32 memberid_;
  ::std::string* membername_;
  static const ::std::string _default_membername_;
  ::google::protobuf::uint32 originalpost_;
  ::google::protobuf::uint32 newpost_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSetCorpsPostNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsLevelUPNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsLevelUPNotify();
  virtual ~CMessageCorpsLevelUPNotify();
  
  CMessageCorpsLevelUPNotify(const CMessageCorpsLevelUPNotify& from);
  
  inline CMessageCorpsLevelUPNotify& operator=(const CMessageCorpsLevelUPNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsLevelUPNotify& default_instance();
  void Swap(CMessageCorpsLevelUPNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsLevelUPNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsLevelUPNotify& from);
  void MergeFrom(const CMessageCorpsLevelUPNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 Glory = 4;
  inline bool has_glory() const;
  inline void clear_glory();
  static const int kGloryFieldNumber = 4;
  inline ::google::protobuf::uint32 glory() const;
  inline void set_glory(::google::protobuf::uint32 value);
  
  // optional uint32 MaxFamilyNum = 5;
  inline bool has_maxfamilynum() const;
  inline void clear_maxfamilynum();
  static const int kMaxFamilyNumFieldNumber = 5;
  inline ::google::protobuf::uint32 maxfamilynum() const;
  inline void set_maxfamilynum(::google::protobuf::uint32 value);
  
  // optional uint32 MaxGeneralNum = 6;
  inline bool has_maxgeneralnum() const;
  inline void clear_maxgeneralnum();
  static const int kMaxGeneralNumFieldNumber = 6;
  inline ::google::protobuf::uint32 maxgeneralnum() const;
  inline void set_maxgeneralnum(::google::protobuf::uint32 value);
  
  // optional uint32 MaxCounsellorNum = 7;
  inline bool has_maxcounsellornum() const;
  inline void clear_maxcounsellornum();
  static const int kMaxCounsellorNumFieldNumber = 7;
  inline ::google::protobuf::uint32 maxcounsellornum() const;
  inline void set_maxcounsellornum(::google::protobuf::uint32 value);
  
  // optional uint32 LevelMoney = 8;
  inline bool has_levelmoney() const;
  inline void clear_levelmoney();
  static const int kLevelMoneyFieldNumber = 8;
  inline ::google::protobuf::uint32 levelmoney() const;
  inline void set_levelmoney(::google::protobuf::uint32 value);
  
  // optional uint32 LevelGlory = 9;
  inline bool has_levelglory() const;
  inline void clear_levelglory();
  static const int kLevelGloryFieldNumber = 9;
  inline ::google::protobuf::uint32 levelglory() const;
  inline void set_levelglory(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 glory_;
  ::google::protobuf::uint32 maxfamilynum_;
  ::google::protobuf::uint32 maxgeneralnum_;
  ::google::protobuf::uint32 maxcounsellornum_;
  ::google::protobuf::uint32 levelmoney_;
  ::google::protobuf::uint32 levelglory_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsLevelUPNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBattleBidRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsBattleBidRequest();
  virtual ~CMessageCorpsBattleBidRequest();
  
  CMessageCorpsBattleBidRequest(const CMessageCorpsBattleBidRequest& from);
  
  inline CMessageCorpsBattleBidRequest& operator=(const CMessageCorpsBattleBidRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBattleBidRequest& default_instance();
  void Swap(CMessageCorpsBattleBidRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBattleBidRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBattleBidRequest& from);
  void MergeFrom(const CMessageCorpsBattleBidRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 MinIncMoney = 4;
  inline bool has_minincmoney() const;
  inline void clear_minincmoney();
  static const int kMinIncMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 minincmoney() const;
  inline void set_minincmoney(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 minincmoney_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBattleBidRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBattleBidResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsBattleBidResponse();
  virtual ~CMessageCorpsBattleBidResponse();
  
  CMessageCorpsBattleBidResponse(const CMessageCorpsBattleBidResponse& from);
  
  inline CMessageCorpsBattleBidResponse& operator=(const CMessageCorpsBattleBidResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBattleBidResponse& default_instance();
  void Swap(CMessageCorpsBattleBidResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBattleBidResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBattleBidResponse& from);
  void MergeFrom(const CMessageCorpsBattleBidResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBattleBidResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsQueryBidRankRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsQueryBidRankRequest();
  virtual ~CMessageCorpsQueryBidRankRequest();
  
  CMessageCorpsQueryBidRankRequest(const CMessageCorpsQueryBidRankRequest& from);
  
  inline CMessageCorpsQueryBidRankRequest& operator=(const CMessageCorpsQueryBidRankRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsQueryBidRankRequest& default_instance();
  void Swap(CMessageCorpsQueryBidRankRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsQueryBidRankRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsQueryBidRankRequest& from);
  void MergeFrom(const CMessageCorpsQueryBidRankRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleCity = 3;
  inline bool has_battlecity() const;
  inline void clear_battlecity();
  static const int kBattleCityFieldNumber = 3;
  inline ::google::protobuf::uint32 battlecity() const;
  inline void set_battlecity(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 battlecity_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsQueryBidRankRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBBidRank : public ::google::protobuf::Message {
 public:
  PBBidRank();
  virtual ~PBBidRank();
  
  PBBidRank(const PBBidRank& from);
  
  inline PBBidRank& operator=(const PBBidRank& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBidRank& default_instance();
  void Swap(PBBidRank* other);
  
  // implements Message ----------------------------------------------
  
  PBBidRank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBidRank& from);
  void MergeFrom(const PBBidRank& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string CorpsName = 1;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 1;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 Money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 Nationality = 3;
  inline bool has_nationality() const;
  inline void clear_nationality();
  static const int kNationalityFieldNumber = 3;
  inline ::google::protobuf::uint32 nationality() const;
  inline void set_nationality(::google::protobuf::uint32 value);
  
  // optional uint32 Victory = 4;
  inline bool has_victory() const;
  inline void clear_victory();
  static const int kVictoryFieldNumber = 4;
  inline ::google::protobuf::uint32 victory() const;
  inline void set_victory(::google::protobuf::uint32 value);
  
  // optional uint32 Loser = 5;
  inline bool has_loser() const;
  inline void clear_loser();
  static const int kLoserFieldNumber = 5;
  inline ::google::protobuf::uint32 loser() const;
  inline void set_loser(::google::protobuf::uint32 value);
  
  // optional uint32 StarLevel = 6;
  inline bool has_starlevel() const;
  inline void clear_starlevel();
  static const int kStarLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 starlevel() const;
  inline void set_starlevel(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 7;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 7;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 nationality_;
  ::google::protobuf::uint32 victory_;
  ::google::protobuf::uint32 loser_;
  ::google::protobuf::uint32 starlevel_;
  ::google::protobuf::uint32 corpsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBidRank* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsQueryBidRankResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsQueryBidRankResponse();
  virtual ~CMessageCorpsQueryBidRankResponse();
  
  CMessageCorpsQueryBidRankResponse(const CMessageCorpsQueryBidRankResponse& from);
  
  inline CMessageCorpsQueryBidRankResponse& operator=(const CMessageCorpsQueryBidRankResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsQueryBidRankResponse& default_instance();
  void Swap(CMessageCorpsQueryBidRankResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsQueryBidRankResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsQueryBidRankResponse& from);
  void MergeFrom(const CMessageCorpsQueryBidRankResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional string CityOwner = 3;
  inline bool has_cityowner() const;
  inline void clear_cityowner();
  static const int kCityOwnerFieldNumber = 3;
  inline const ::std::string& cityowner() const;
  inline void set_cityowner(const ::std::string& value);
  inline void set_cityowner(const char* value);
  inline void set_cityowner(const char* value, size_t size);
  inline ::std::string* mutable_cityowner();
  
  // repeated .PBBidRank RankInfo = 4;
  inline int rankinfo_size() const;
  inline void clear_rankinfo();
  static const int kRankInfoFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBidRank >& rankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBidRank >* mutable_rankinfo();
  inline const ::PBBidRank& rankinfo(int index) const;
  inline ::PBBidRank* mutable_rankinfo(int index);
  inline ::PBBidRank* add_rankinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcid_;
  ::std::string* cityowner_;
  static const ::std::string _default_cityowner_;
  ::google::protobuf::RepeatedPtrField< ::PBBidRank > rankinfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsQueryBidRankResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsSelectFamilyBattleRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsSelectFamilyBattleRequest();
  virtual ~CMessageCorpsSelectFamilyBattleRequest();
  
  CMessageCorpsSelectFamilyBattleRequest(const CMessageCorpsSelectFamilyBattleRequest& from);
  
  inline CMessageCorpsSelectFamilyBattleRequest& operator=(const CMessageCorpsSelectFamilyBattleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsSelectFamilyBattleRequest& default_instance();
  void Swap(CMessageCorpsSelectFamilyBattleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsSelectFamilyBattleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsSelectFamilyBattleRequest& from);
  void MergeFrom(const CMessageCorpsSelectFamilyBattleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated uint32 FamilyID = 2;
  inline int familyid_size() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& familyid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_familyid();
  inline ::google::protobuf::uint32 familyid(int index) const;
  inline void set_familyid(int index, ::google::protobuf::uint32 value);
  inline void add_familyid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > familyid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsSelectFamilyBattleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsSelectFamilyBattleResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsSelectFamilyBattleResponse();
  virtual ~CMessageCorpsSelectFamilyBattleResponse();
  
  CMessageCorpsSelectFamilyBattleResponse(const CMessageCorpsSelectFamilyBattleResponse& from);
  
  inline CMessageCorpsSelectFamilyBattleResponse& operator=(const CMessageCorpsSelectFamilyBattleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsSelectFamilyBattleResponse& default_instance();
  void Swap(CMessageCorpsSelectFamilyBattleResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsSelectFamilyBattleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsSelectFamilyBattleResponse& from);
  void MergeFrom(const CMessageCorpsSelectFamilyBattleResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsSelectFamilyBattleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsPvPStarLevelUpNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsPvPStarLevelUpNotify();
  virtual ~CMessageCorpsPvPStarLevelUpNotify();
  
  CMessageCorpsPvPStarLevelUpNotify(const CMessageCorpsPvPStarLevelUpNotify& from);
  
  inline CMessageCorpsPvPStarLevelUpNotify& operator=(const CMessageCorpsPvPStarLevelUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsPvPStarLevelUpNotify& default_instance();
  void Swap(CMessageCorpsPvPStarLevelUpNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsPvPStarLevelUpNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsPvPStarLevelUpNotify& from);
  void MergeFrom(const CMessageCorpsPvPStarLevelUpNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 PvPLevel = 2;
  inline bool has_pvplevel() const;
  inline void clear_pvplevel();
  static const int kPvPLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 pvplevel() const;
  inline void set_pvplevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 pvplevel_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsPvPStarLevelUpNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBattleRightsNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsBattleRightsNotify();
  virtual ~CMessageCorpsBattleRightsNotify();
  
  CMessageCorpsBattleRightsNotify(const CMessageCorpsBattleRightsNotify& from);
  
  inline CMessageCorpsBattleRightsNotify& operator=(const CMessageCorpsBattleRightsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBattleRightsNotify& default_instance();
  void Swap(CMessageCorpsBattleRightsNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBattleRightsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBattleRightsNotify& from);
  void MergeFrom(const CMessageCorpsBattleRightsNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional string DesCorpsName = 3;
  inline bool has_descorpsname() const;
  inline void clear_descorpsname();
  static const int kDesCorpsNameFieldNumber = 3;
  inline const ::std::string& descorpsname() const;
  inline void set_descorpsname(const ::std::string& value);
  inline void set_descorpsname(const char* value);
  inline void set_descorpsname(const char* value, size_t size);
  inline ::std::string* mutable_descorpsname();
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcid_;
  ::std::string* descorpsname_;
  static const ::std::string _default_descorpsname_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBattleRightsNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsRecBattleRightsNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsRecBattleRightsNotify();
  virtual ~CMessageCorpsRecBattleRightsNotify();
  
  CMessageCorpsRecBattleRightsNotify(const CMessageCorpsRecBattleRightsNotify& from);
  
  inline CMessageCorpsRecBattleRightsNotify& operator=(const CMessageCorpsRecBattleRightsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsRecBattleRightsNotify& default_instance();
  void Swap(CMessageCorpsRecBattleRightsNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsRecBattleRightsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsRecBattleRightsNotify& from);
  void MergeFrom(const CMessageCorpsRecBattleRightsNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCorpsID = 3;
  inline bool has_srccorpsid() const;
  inline void clear_srccorpsid();
  static const int kSrcCorpsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srccorpsid() const;
  inline void set_srccorpsid(::google::protobuf::uint32 value);
  
  // optional string SrcCorpsName = 4;
  inline bool has_srccorpsname() const;
  inline void clear_srccorpsname();
  static const int kSrcCorpsNameFieldNumber = 4;
  inline const ::std::string& srccorpsname() const;
  inline void set_srccorpsname(const ::std::string& value);
  inline void set_srccorpsname(const char* value);
  inline void set_srccorpsname(const char* value, size_t size);
  inline ::std::string* mutable_srccorpsname();
  
  // optional uint32 DesCorpsID = 5;
  inline bool has_descorpsid() const;
  inline void clear_descorpsid();
  static const int kDesCorpsIDFieldNumber = 5;
  inline ::google::protobuf::uint32 descorpsid() const;
  inline void set_descorpsid(::google::protobuf::uint32 value);
  
  // optional string DesCorpsName = 6;
  inline bool has_descorpsname() const;
  inline void clear_descorpsname();
  static const int kDesCorpsNameFieldNumber = 6;
  inline const ::std::string& descorpsname() const;
  inline void set_descorpsname(const ::std::string& value);
  inline void set_descorpsname(const char* value);
  inline void set_descorpsname(const char* value, size_t size);
  inline ::std::string* mutable_descorpsname();
  
  // optional uint32 Money = 7;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 7;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 srccorpsid_;
  ::std::string* srccorpsname_;
  static const ::std::string _default_srccorpsname_;
  ::google::protobuf::uint32 descorpsid_;
  ::std::string* descorpsname_;
  static const ::std::string _default_descorpsname_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsRecBattleRightsNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsSelectMemberBattleRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsSelectMemberBattleRequest();
  virtual ~CMessageCorpsSelectMemberBattleRequest();
  
  CMessageCorpsSelectMemberBattleRequest(const CMessageCorpsSelectMemberBattleRequest& from);
  
  inline CMessageCorpsSelectMemberBattleRequest& operator=(const CMessageCorpsSelectMemberBattleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsSelectMemberBattleRequest& default_instance();
  void Swap(CMessageCorpsSelectMemberBattleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsSelectMemberBattleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsSelectMemberBattleRequest& from);
  void MergeFrom(const CMessageCorpsSelectMemberBattleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated uint32 MemberList = 2;
  inline int memberlist_size() const;
  inline void clear_memberlist();
  static const int kMemberListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& memberlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_memberlist();
  inline ::google::protobuf::uint32 memberlist(int index) const;
  inline void set_memberlist(int index, ::google::protobuf::uint32 value);
  inline void add_memberlist(::google::protobuf::uint32 value);
  
  // optional uint32 BattleCity = 3;
  inline bool has_battlecity() const;
  inline void clear_battlecity();
  static const int kBattleCityFieldNumber = 3;
  inline ::google::protobuf::uint32 battlecity() const;
  inline void set_battlecity(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > memberlist_;
  ::google::protobuf::uint32 battlecity_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsSelectMemberBattleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsSelectMemberBattleResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsSelectMemberBattleResponse();
  virtual ~CMessageCorpsSelectMemberBattleResponse();
  
  CMessageCorpsSelectMemberBattleResponse(const CMessageCorpsSelectMemberBattleResponse& from);
  
  inline CMessageCorpsSelectMemberBattleResponse& operator=(const CMessageCorpsSelectMemberBattleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsSelectMemberBattleResponse& default_instance();
  void Swap(CMessageCorpsSelectMemberBattleResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsSelectMemberBattleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsSelectMemberBattleResponse& from);
  void MergeFrom(const CMessageCorpsSelectMemberBattleResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsSelectMemberBattleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsMemberBattleRightsNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsMemberBattleRightsNotify();
  virtual ~CMessageCorpsMemberBattleRightsNotify();
  
  CMessageCorpsMemberBattleRightsNotify(const CMessageCorpsMemberBattleRightsNotify& from);
  
  inline CMessageCorpsMemberBattleRightsNotify& operator=(const CMessageCorpsMemberBattleRightsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsMemberBattleRightsNotify& default_instance();
  void Swap(CMessageCorpsMemberBattleRightsNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsMemberBattleRightsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsMemberBattleRightsNotify& from);
  void MergeFrom(const CMessageCorpsMemberBattleRightsNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // repeated uint32 MemberList = 3;
  inline int memberlist_size() const;
  inline void clear_memberlist();
  static const int kMemberListFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& memberlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_memberlist();
  inline ::google::protobuf::uint32 memberlist(int index) const;
  inline void set_memberlist(int index, ::google::protobuf::uint32 value);
  inline void add_memberlist(::google::protobuf::uint32 value);
  
  // optional string DesCorpsName = 4;
  inline bool has_descorpsname() const;
  inline void clear_descorpsname();
  static const int kDesCorpsNameFieldNumber = 4;
  inline const ::std::string& descorpsname() const;
  inline void set_descorpsname(const ::std::string& value);
  inline void set_descorpsname(const char* value);
  inline void set_descorpsname(const char* value, size_t size);
  inline ::std::string* mutable_descorpsname();
  
  // optional uint32 Type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > memberlist_;
  ::std::string* descorpsname_;
  static const ::std::string _default_descorpsname_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsMemberBattleRightsNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsMoneyChangedNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsMoneyChangedNotify();
  virtual ~CMessageCorpsMoneyChangedNotify();
  
  CMessageCorpsMoneyChangedNotify(const CMessageCorpsMoneyChangedNotify& from);
  
  inline CMessageCorpsMoneyChangedNotify& operator=(const CMessageCorpsMoneyChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsMoneyChangedNotify& default_instance();
  void Swap(CMessageCorpsMoneyChangedNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsMoneyChangedNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsMoneyChangedNotify& from);
  void MergeFrom(const CMessageCorpsMoneyChangedNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 4;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 4;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional int32 Valeu = 5;
  inline bool has_valeu() const;
  inline void clear_valeu();
  static const int kValeuFieldNumber = 5;
  inline ::google::protobuf::int32 valeu() const;
  inline void set_valeu(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::int32 valeu_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsMoneyChangedNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsGloryChangedNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsGloryChangedNotify();
  virtual ~CMessageCorpsGloryChangedNotify();
  
  CMessageCorpsGloryChangedNotify(const CMessageCorpsGloryChangedNotify& from);
  
  inline CMessageCorpsGloryChangedNotify& operator=(const CMessageCorpsGloryChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsGloryChangedNotify& default_instance();
  void Swap(CMessageCorpsGloryChangedNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsGloryChangedNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsGloryChangedNotify& from);
  void MergeFrom(const CMessageCorpsGloryChangedNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Glory = 1;
  inline bool has_glory() const;
  inline void clear_glory();
  static const int kGloryFieldNumber = 1;
  inline ::google::protobuf::uint32 glory() const;
  inline void set_glory(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 4;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 4;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional int32 Value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 glory_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsGloryChangedNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsContributeChangedNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsContributeChangedNotify();
  virtual ~CMessageCorpsContributeChangedNotify();
  
  CMessageCorpsContributeChangedNotify(const CMessageCorpsContributeChangedNotify& from);
  
  inline CMessageCorpsContributeChangedNotify& operator=(const CMessageCorpsContributeChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsContributeChangedNotify& default_instance();
  void Swap(CMessageCorpsContributeChangedNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsContributeChangedNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsContributeChangedNotify& from);
  void MergeFrom(const CMessageCorpsContributeChangedNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Contribute = 2;
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 2;
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional int32 Value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsContributeChangedNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBossTimesChangedNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsBossTimesChangedNotify();
  virtual ~CMessageCorpsBossTimesChangedNotify();
  
  CMessageCorpsBossTimesChangedNotify(const CMessageCorpsBossTimesChangedNotify& from);
  
  inline CMessageCorpsBossTimesChangedNotify& operator=(const CMessageCorpsBossTimesChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBossTimesChangedNotify& default_instance();
  void Swap(CMessageCorpsBossTimesChangedNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBossTimesChangedNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBossTimesChangedNotify& from);
  void MergeFrom(const CMessageCorpsBossTimesChangedNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BossID = 1;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIDFieldNumber = 1;
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 4;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 4;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional uint32 Times = 5;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 bossid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBossTimesChangedNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBossRefineValueNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsBossRefineValueNotify();
  virtual ~CMessageCorpsBossRefineValueNotify();
  
  CMessageCorpsBossRefineValueNotify(const CMessageCorpsBossRefineValueNotify& from);
  
  inline CMessageCorpsBossRefineValueNotify& operator=(const CMessageCorpsBossRefineValueNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBossRefineValueNotify& default_instance();
  void Swap(CMessageCorpsBossRefineValueNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBossRefineValueNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBossRefineValueNotify& from);
  void MergeFrom(const CMessageCorpsBossRefineValueNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RefineValue = 1;
  inline bool has_refinevalue() const;
  inline void clear_refinevalue();
  static const int kRefineValueFieldNumber = 1;
  inline ::google::protobuf::uint32 refinevalue() const;
  inline void set_refinevalue(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // optional uint32 Reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // optional string RoleName = 5;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 5;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 refinevalue_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 reason_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBossRefineValueNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsCollectActiveChangeNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsCollectActiveChangeNotify();
  virtual ~CMessageCorpsCollectActiveChangeNotify();
  
  CMessageCorpsCollectActiveChangeNotify(const CMessageCorpsCollectActiveChangeNotify& from);
  
  inline CMessageCorpsCollectActiveChangeNotify& operator=(const CMessageCorpsCollectActiveChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsCollectActiveChangeNotify& default_instance();
  void Swap(CMessageCorpsCollectActiveChangeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsCollectActiveChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsCollectActiveChangeNotify& from);
  void MergeFrom(const CMessageCorpsCollectActiveChangeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ActiveValue = 2;
  inline bool has_activevalue() const;
  inline void clear_activevalue();
  static const int kActiveValueFieldNumber = 2;
  inline ::google::protobuf::uint32 activevalue() const;
  inline void set_activevalue(::google::protobuf::uint32 value);
  
  // optional uint32 Vaule = 3;
  inline bool has_vaule() const;
  inline void clear_vaule();
  static const int kVauleFieldNumber = 3;
  inline ::google::protobuf::uint32 vaule() const;
  inline void set_vaule(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 4;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 activevalue_;
  ::google::protobuf::uint32 vaule_;
  ::google::protobuf::uint32 changetype_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsCollectActiveChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageMendShengHuoTaiRequest : public ::google::protobuf::Message {
 public:
  CMessageMendShengHuoTaiRequest();
  virtual ~CMessageMendShengHuoTaiRequest();
  
  CMessageMendShengHuoTaiRequest(const CMessageMendShengHuoTaiRequest& from);
  
  inline CMessageMendShengHuoTaiRequest& operator=(const CMessageMendShengHuoTaiRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMendShengHuoTaiRequest& default_instance();
  void Swap(CMessageMendShengHuoTaiRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageMendShengHuoTaiRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageMendShengHuoTaiRequest& from);
  void MergeFrom(const CMessageMendShengHuoTaiRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcEntityID = 1;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageMendShengHuoTaiRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsPropertyNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsPropertyNotice();
  virtual ~CMessageCorpsPropertyNotice();
  
  CMessageCorpsPropertyNotice(const CMessageCorpsPropertyNotice& from);
  
  inline CMessageCorpsPropertyNotice& operator=(const CMessageCorpsPropertyNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsPropertyNotice& default_instance();
  void Swap(CMessageCorpsPropertyNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsPropertyNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsPropertyNotice& from);
  void MergeFrom(const CMessageCorpsPropertyNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional .CorpsProperty Property = 2;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 2;
  inline const ::CorpsProperty& property() const;
  inline ::CorpsProperty* mutable_property();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::CorpsProperty* property_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsPropertyNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsOperateRoomRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsOperateRoomRequest();
  virtual ~CMessageCorpsOperateRoomRequest();
  
  CMessageCorpsOperateRoomRequest(const CMessageCorpsOperateRoomRequest& from);
  
  inline CMessageCorpsOperateRoomRequest& operator=(const CMessageCorpsOperateRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsOperateRoomRequest& default_instance();
  void Swap(CMessageCorpsOperateRoomRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsOperateRoomRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsOperateRoomRequest& from);
  void MergeFrom(const CMessageCorpsOperateRoomRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 action_;
  ::google::protobuf::uint32 money_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsOperateRoomRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsOperateRoomResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsOperateRoomResponse();
  virtual ~CMessageCorpsOperateRoomResponse();
  
  CMessageCorpsOperateRoomResponse(const CMessageCorpsOperateRoomResponse& from);
  
  inline CMessageCorpsOperateRoomResponse& operator=(const CMessageCorpsOperateRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsOperateRoomResponse& default_instance();
  void Swap(CMessageCorpsOperateRoomResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsOperateRoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsOperateRoomResponse& from);
  void MergeFrom(const CMessageCorpsOperateRoomResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);
  
  // optional uint32 RtnCode = 3;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional string Name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 action_;
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 money_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsOperateRoomResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsRoomNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsRoomNotice();
  virtual ~CMessageCorpsRoomNotice();
  
  CMessageCorpsRoomNotice(const CMessageCorpsRoomNotice& from);
  
  inline CMessageCorpsRoomNotice& operator=(const CMessageCorpsRoomNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsRoomNotice& default_instance();
  void Swap(CMessageCorpsRoomNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsRoomNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsRoomNotice& from);
  void MergeFrom(const CMessageCorpsRoomNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);
  
  // optional string RooterName = 3;
  inline bool has_rootername() const;
  inline void clear_rootername();
  static const int kRooterNameFieldNumber = 3;
  inline const ::std::string& rootername() const;
  inline void set_rootername(const ::std::string& value);
  inline void set_rootername(const char* value);
  inline void set_rootername(const char* value, size_t size);
  inline ::std::string* mutable_rootername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 action_;
  ::std::string* rootername_;
  static const ::std::string _default_rootername_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsRoomNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsChallegeRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsChallegeRequest();
  virtual ~CMessageCorpsChallegeRequest();
  
  CMessageCorpsChallegeRequest(const CMessageCorpsChallegeRequest& from);
  
  inline CMessageCorpsChallegeRequest& operator=(const CMessageCorpsChallegeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsChallegeRequest& default_instance();
  void Swap(CMessageCorpsChallegeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsChallegeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsChallegeRequest& from);
  void MergeFrom(const CMessageCorpsChallegeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);
  
  // optional uint32 DesCropsID = 3;
  inline bool has_descropsid() const;
  inline void clear_descropsid();
  static const int kDesCropsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 descropsid() const;
  inline void set_descropsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 action_;
  ::google::protobuf::uint32 descropsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsChallegeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsChallegeResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsChallegeResponse();
  virtual ~CMessageCorpsChallegeResponse();
  
  CMessageCorpsChallegeResponse(const CMessageCorpsChallegeResponse& from);
  
  inline CMessageCorpsChallegeResponse& operator=(const CMessageCorpsChallegeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsChallegeResponse& default_instance();
  void Swap(CMessageCorpsChallegeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsChallegeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsChallegeResponse& from);
  void MergeFrom(const CMessageCorpsChallegeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 Action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);
  
  // optional uint32 DesCropsID = 4;
  inline bool has_descropsid() const;
  inline void clear_descropsid();
  static const int kDesCropsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 descropsid() const;
  inline void set_descropsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 action_;
  ::google::protobuf::uint32 descropsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsChallegeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsChallegeNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsChallegeNotice();
  virtual ~CMessageCorpsChallegeNotice();
  
  CMessageCorpsChallegeNotice(const CMessageCorpsChallegeNotice& from);
  
  inline CMessageCorpsChallegeNotice& operator=(const CMessageCorpsChallegeNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsChallegeNotice& default_instance();
  void Swap(CMessageCorpsChallegeNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsChallegeNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsChallegeNotice& from);
  void MergeFrom(const CMessageCorpsChallegeNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 SrcCorpsID = 2;
  inline bool has_srccorpsid() const;
  inline void clear_srccorpsid();
  static const int kSrcCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 srccorpsid() const;
  inline void set_srccorpsid(::google::protobuf::uint32 value);
  
  // optional string SrcCorpsName = 3;
  inline bool has_srccorpsname() const;
  inline void clear_srccorpsname();
  static const int kSrcCorpsNameFieldNumber = 3;
  inline const ::std::string& srccorpsname() const;
  inline void set_srccorpsname(const ::std::string& value);
  inline void set_srccorpsname(const char* value);
  inline void set_srccorpsname(const char* value, size_t size);
  inline ::std::string* mutable_srccorpsname();
  
  // optional uint32 DesCropsID = 4;
  inline bool has_descropsid() const;
  inline void clear_descropsid();
  static const int kDesCropsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 descropsid() const;
  inline void set_descropsid(::google::protobuf::uint32 value);
  
  // optional string DesCorpsName = 5;
  inline bool has_descorpsname() const;
  inline void clear_descorpsname();
  static const int kDesCorpsNameFieldNumber = 5;
  inline const ::std::string& descorpsname() const;
  inline void set_descorpsname(const ::std::string& value);
  inline void set_descorpsname(const char* value);
  inline void set_descorpsname(const char* value, size_t size);
  inline ::std::string* mutable_descorpsname();
  
  // optional uint32 WinTimes = 6;
  inline bool has_wintimes() const;
  inline void clear_wintimes();
  static const int kWinTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 wintimes() const;
  inline void set_wintimes(::google::protobuf::uint32 value);
  
  // optional uint32 LostTimes = 7;
  inline bool has_losttimes() const;
  inline void clear_losttimes();
  static const int kLostTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 losttimes() const;
  inline void set_losttimes(::google::protobuf::uint32 value);
  
  // optional string SrcRooterName = 8;
  inline bool has_srcrootername() const;
  inline void clear_srcrootername();
  static const int kSrcRooterNameFieldNumber = 8;
  inline const ::std::string& srcrootername() const;
  inline void set_srcrootername(const ::std::string& value);
  inline void set_srcrootername(const char* value);
  inline void set_srcrootername(const char* value, size_t size);
  inline ::std::string* mutable_srcrootername();
  
  // optional string DesRooterName = 9;
  inline bool has_desrootername() const;
  inline void clear_desrootername();
  static const int kDesRooterNameFieldNumber = 9;
  inline const ::std::string& desrootername() const;
  inline void set_desrootername(const ::std::string& value);
  inline void set_desrootername(const char* value);
  inline void set_desrootername(const char* value, size_t size);
  inline ::std::string* mutable_desrootername();
  
  // optional uint32 Action = 10;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 10;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 srccorpsid_;
  ::std::string* srccorpsname_;
  static const ::std::string _default_srccorpsname_;
  ::google::protobuf::uint32 descropsid_;
  ::std::string* descorpsname_;
  static const ::std::string _default_descorpsname_;
  ::google::protobuf::uint32 wintimes_;
  ::google::protobuf::uint32 losttimes_;
  ::std::string* srcrootername_;
  static const ::std::string _default_srcrootername_;
  ::std::string* desrootername_;
  static const ::std::string _default_desrootername_;
  ::google::protobuf::uint32 action_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsChallegeNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsReplyChallegeRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsReplyChallegeRequest();
  virtual ~CMessageCorpsReplyChallegeRequest();
  
  CMessageCorpsReplyChallegeRequest(const CMessageCorpsReplyChallegeRequest& from);
  
  inline CMessageCorpsReplyChallegeRequest& operator=(const CMessageCorpsReplyChallegeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsReplyChallegeRequest& default_instance();
  void Swap(CMessageCorpsReplyChallegeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsReplyChallegeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsReplyChallegeRequest& from);
  void MergeFrom(const CMessageCorpsReplyChallegeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 DesCorpsID = 2;
  inline bool has_descorpsid() const;
  inline void clear_descorpsid();
  static const int kDesCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descorpsid() const;
  inline void set_descorpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 descorpsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsReplyChallegeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsReplyChallegeResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsReplyChallegeResponse();
  virtual ~CMessageCorpsReplyChallegeResponse();
  
  CMessageCorpsReplyChallegeResponse(const CMessageCorpsReplyChallegeResponse& from);
  
  inline CMessageCorpsReplyChallegeResponse& operator=(const CMessageCorpsReplyChallegeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsReplyChallegeResponse& default_instance();
  void Swap(CMessageCorpsReplyChallegeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsReplyChallegeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsReplyChallegeResponse& from);
  void MergeFrom(const CMessageCorpsReplyChallegeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string DesCorpsName = 2;
  inline bool has_descorpsname() const;
  inline void clear_descorpsname();
  static const int kDesCorpsNameFieldNumber = 2;
  inline const ::std::string& descorpsname() const;
  inline void set_descorpsname(const ::std::string& value);
  inline void set_descorpsname(const char* value);
  inline void set_descorpsname(const char* value, size_t size);
  inline ::std::string* mutable_descorpsname();
  
  // optional uint32 RtnCode = 3;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* descorpsname_;
  static const ::std::string _default_descorpsname_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsReplyChallegeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsQueryChallegeListRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsQueryChallegeListRequest();
  virtual ~CMessageCorpsQueryChallegeListRequest();
  
  CMessageCorpsQueryChallegeListRequest(const CMessageCorpsQueryChallegeListRequest& from);
  
  inline CMessageCorpsQueryChallegeListRequest& operator=(const CMessageCorpsQueryChallegeListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsQueryChallegeListRequest& default_instance();
  void Swap(CMessageCorpsQueryChallegeListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsQueryChallegeListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsQueryChallegeListRequest& from);
  void MergeFrom(const CMessageCorpsQueryChallegeListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsQueryChallegeListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsQueryChallegeListResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsQueryChallegeListResponse();
  virtual ~CMessageCorpsQueryChallegeListResponse();
  
  CMessageCorpsQueryChallegeListResponse(const CMessageCorpsQueryChallegeListResponse& from);
  
  inline CMessageCorpsQueryChallegeListResponse& operator=(const CMessageCorpsQueryChallegeListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsQueryChallegeListResponse& default_instance();
  void Swap(CMessageCorpsQueryChallegeListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsQueryChallegeListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsQueryChallegeListResponse& from);
  void MergeFrom(const CMessageCorpsQueryChallegeListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated uint32 CorpsIDList = 2;
  inline int corpsidlist_size() const;
  inline void clear_corpsidlist();
  static const int kCorpsIDListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& corpsidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_corpsidlist();
  inline ::google::protobuf::uint32 corpsidlist(int index) const;
  inline void set_corpsidlist(int index, ::google::protobuf::uint32 value);
  inline void add_corpsidlist(::google::protobuf::uint32 value);
  
  // optional uint32 RtnCode = 3;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > corpsidlist_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsQueryChallegeListResponse* default_instance_;
};
// -------------------------------------------------------------------

class PBChallege : public ::google::protobuf::Message {
 public:
  PBChallege();
  virtual ~PBChallege();
  
  PBChallege(const PBChallege& from);
  
  inline PBChallege& operator=(const PBChallege& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBChallege& default_instance();
  void Swap(PBChallege* other);
  
  // implements Message ----------------------------------------------
  
  PBChallege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBChallege& from);
  void MergeFrom(const PBChallege& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CorpsID = 1;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 2;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 2;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 WinTimes = 3;
  inline bool has_wintimes() const;
  inline void clear_wintimes();
  static const int kWinTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 wintimes() const;
  inline void set_wintimes(::google::protobuf::uint32 value);
  
  // optional uint32 LostTimes = 4;
  inline bool has_losttimes() const;
  inline void clear_losttimes();
  static const int kLostTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 losttimes() const;
  inline void set_losttimes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 wintimes_;
  ::google::protobuf::uint32 losttimes_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBChallege* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsQueryRecChallegeListRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsQueryRecChallegeListRequest();
  virtual ~CMessageCorpsQueryRecChallegeListRequest();
  
  CMessageCorpsQueryRecChallegeListRequest(const CMessageCorpsQueryRecChallegeListRequest& from);
  
  inline CMessageCorpsQueryRecChallegeListRequest& operator=(const CMessageCorpsQueryRecChallegeListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsQueryRecChallegeListRequest& default_instance();
  void Swap(CMessageCorpsQueryRecChallegeListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsQueryRecChallegeListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsQueryRecChallegeListRequest& from);
  void MergeFrom(const CMessageCorpsQueryRecChallegeListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsQueryRecChallegeListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsQueryRecChallegeListResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsQueryRecChallegeListResponse();
  virtual ~CMessageCorpsQueryRecChallegeListResponse();
  
  CMessageCorpsQueryRecChallegeListResponse(const CMessageCorpsQueryRecChallegeListResponse& from);
  
  inline CMessageCorpsQueryRecChallegeListResponse& operator=(const CMessageCorpsQueryRecChallegeListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsQueryRecChallegeListResponse& default_instance();
  void Swap(CMessageCorpsQueryRecChallegeListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsQueryRecChallegeListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsQueryRecChallegeListResponse& from);
  void MergeFrom(const CMessageCorpsQueryRecChallegeListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string RoomName = 2;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 2;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 WinTimes = 4;
  inline bool has_wintimes() const;
  inline void clear_wintimes();
  static const int kWinTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 wintimes() const;
  inline void set_wintimes(::google::protobuf::uint32 value);
  
  // optional uint32 LostTimes = 5;
  inline bool has_losttimes() const;
  inline void clear_losttimes();
  static const int kLostTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 losttimes() const;
  inline void set_losttimes(::google::protobuf::uint32 value);
  
  // repeated .PBChallege ChallegeList = 6;
  inline int challegelist_size() const;
  inline void clear_challegelist();
  static const int kChallegeListFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBChallege >& challegelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBChallege >* mutable_challegelist();
  inline const ::PBChallege& challegelist(int index) const;
  inline ::PBChallege* mutable_challegelist(int index);
  inline ::PBChallege* add_challegelist();
  
  // optional uint32 RtnCode = 7;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 7;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* roomname_;
  static const ::std::string _default_roomname_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 wintimes_;
  ::google::protobuf::uint32 losttimes_;
  ::google::protobuf::RepeatedPtrField< ::PBChallege > challegelist_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsQueryRecChallegeListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsQueryRoomListRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsQueryRoomListRequest();
  virtual ~CMessageCorpsQueryRoomListRequest();
  
  CMessageCorpsQueryRoomListRequest(const CMessageCorpsQueryRoomListRequest& from);
  
  inline CMessageCorpsQueryRoomListRequest& operator=(const CMessageCorpsQueryRoomListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsQueryRoomListRequest& default_instance();
  void Swap(CMessageCorpsQueryRoomListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsQueryRoomListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsQueryRoomListRequest& from);
  void MergeFrom(const CMessageCorpsQueryRoomListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsQueryRoomListRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBCorpsRoom : public ::google::protobuf::Message {
 public:
  PBCorpsRoom();
  virtual ~PBCorpsRoom();
  
  PBCorpsRoom(const PBCorpsRoom& from);
  
  inline PBCorpsRoom& operator=(const PBCorpsRoom& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorpsRoom& default_instance();
  void Swap(PBCorpsRoom* other);
  
  // implements Message ----------------------------------------------
  
  PBCorpsRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCorpsRoom& from);
  void MergeFrom(const PBCorpsRoom& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CorpsID = 1;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 1;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 2;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 2;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional string RoomName = 3;
  inline bool has_roomname() const;
  inline void clear_roomname();
  static const int kRoomNameFieldNumber = 3;
  inline const ::std::string& roomname() const;
  inline void set_roomname(const ::std::string& value);
  inline void set_roomname(const char* value);
  inline void set_roomname(const char* value, size_t size);
  inline ::std::string* mutable_roomname();
  
  // optional uint32 RoomState = 4;
  inline bool has_roomstate() const;
  inline void clear_roomstate();
  static const int kRoomStateFieldNumber = 4;
  inline ::google::protobuf::uint32 roomstate() const;
  inline void set_roomstate(::google::protobuf::uint32 value);
  
  // optional string DesCorpsName = 5;
  inline bool has_descorpsname() const;
  inline void clear_descorpsname();
  static const int kDesCorpsNameFieldNumber = 5;
  inline const ::std::string& descorpsname() const;
  inline void set_descorpsname(const ::std::string& value);
  inline void set_descorpsname(const char* value);
  inline void set_descorpsname(const char* value, size_t size);
  inline ::std::string* mutable_descorpsname();
  
  // optional uint32 WinTimes = 6;
  inline bool has_wintimes() const;
  inline void clear_wintimes();
  static const int kWinTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 wintimes() const;
  inline void set_wintimes(::google::protobuf::uint32 value);
  
  // optional uint32 LostTimes = 7;
  inline bool has_losttimes() const;
  inline void clear_losttimes();
  static const int kLostTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 losttimes() const;
  inline void set_losttimes(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 8;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 8;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::std::string* roomname_;
  static const ::std::string _default_roomname_;
  ::google::protobuf::uint32 roomstate_;
  ::std::string* descorpsname_;
  static const ::std::string _default_descorpsname_;
  ::google::protobuf::uint32 wintimes_;
  ::google::protobuf::uint32 losttimes_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCorpsRoom* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsQueryRoomListResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsQueryRoomListResponse();
  virtual ~CMessageCorpsQueryRoomListResponse();
  
  CMessageCorpsQueryRoomListResponse(const CMessageCorpsQueryRoomListResponse& from);
  
  inline CMessageCorpsQueryRoomListResponse& operator=(const CMessageCorpsQueryRoomListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsQueryRoomListResponse& default_instance();
  void Swap(CMessageCorpsQueryRoomListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsQueryRoomListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsQueryRoomListResponse& from);
  void MergeFrom(const CMessageCorpsQueryRoomListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated .PBCorpsRoom RoomList = 2;
  inline int roomlist_size() const;
  inline void clear_roomlist();
  static const int kRoomListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsRoom >& roomlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsRoom >* mutable_roomlist();
  inline const ::PBCorpsRoom& roomlist(int index) const;
  inline ::PBCorpsRoom* mutable_roomlist(int index);
  inline ::PBCorpsRoom* add_roomlist();
  
  // optional uint32 RtnCode = 3;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedPtrField< ::PBCorpsRoom > roomlist_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsQueryRoomListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryCorpsWelfareRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryCorpsWelfareRequest();
  virtual ~CMessageQueryCorpsWelfareRequest();
  
  CMessageQueryCorpsWelfareRequest(const CMessageQueryCorpsWelfareRequest& from);
  
  inline CMessageQueryCorpsWelfareRequest& operator=(const CMessageQueryCorpsWelfareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryCorpsWelfareRequest& default_instance();
  void Swap(CMessageQueryCorpsWelfareRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryCorpsWelfareRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryCorpsWelfareRequest& from);
  void MergeFrom(const CMessageQueryCorpsWelfareRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryCorpsWelfareRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryCorpsWelfareResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryCorpsWelfareResponse();
  virtual ~CMessageQueryCorpsWelfareResponse();
  
  CMessageQueryCorpsWelfareResponse(const CMessageQueryCorpsWelfareResponse& from);
  
  inline CMessageQueryCorpsWelfareResponse& operator=(const CMessageQueryCorpsWelfareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryCorpsWelfareResponse& default_instance();
  void Swap(CMessageQueryCorpsWelfareResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryCorpsWelfareResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryCorpsWelfareResponse& from);
  void MergeFrom(const CMessageQueryCorpsWelfareResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 NpcGlory = 3;
  inline bool has_npcglory() const;
  inline void clear_npcglory();
  static const int kNpcGloryFieldNumber = 3;
  inline ::google::protobuf::uint32 npcglory() const;
  inline void set_npcglory(::google::protobuf::uint32 value);
  
  // optional uint32 NpcMoney = 4;
  inline bool has_npcmoney() const;
  inline void clear_npcmoney();
  static const int kNpcMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 npcmoney() const;
  inline void set_npcmoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 npcglory_;
  ::google::protobuf::uint32 npcmoney_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryCorpsWelfareResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainCorpsWelfareRequest : public ::google::protobuf::Message {
 public:
  CMessageObtainCorpsWelfareRequest();
  virtual ~CMessageObtainCorpsWelfareRequest();
  
  CMessageObtainCorpsWelfareRequest(const CMessageObtainCorpsWelfareRequest& from);
  
  inline CMessageObtainCorpsWelfareRequest& operator=(const CMessageObtainCorpsWelfareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainCorpsWelfareRequest& default_instance();
  void Swap(CMessageObtainCorpsWelfareRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainCorpsWelfareRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainCorpsWelfareRequest& from);
  void MergeFrom(const CMessageObtainCorpsWelfareRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainCorpsWelfareRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageObtainCorpsWelfareResponse : public ::google::protobuf::Message {
 public:
  CMessageObtainCorpsWelfareResponse();
  virtual ~CMessageObtainCorpsWelfareResponse();
  
  CMessageObtainCorpsWelfareResponse(const CMessageObtainCorpsWelfareResponse& from);
  
  inline CMessageObtainCorpsWelfareResponse& operator=(const CMessageObtainCorpsWelfareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageObtainCorpsWelfareResponse& default_instance();
  void Swap(CMessageObtainCorpsWelfareResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageObtainCorpsWelfareResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageObtainCorpsWelfareResponse& from);
  void MergeFrom(const CMessageObtainCorpsWelfareResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 NpcGlory = 3;
  inline bool has_npcglory() const;
  inline void clear_npcglory();
  static const int kNpcGloryFieldNumber = 3;
  inline ::google::protobuf::uint32 npcglory() const;
  inline void set_npcglory(::google::protobuf::uint32 value);
  
  // optional uint32 NpcMoney = 4;
  inline bool has_npcmoney() const;
  inline void clear_npcmoney();
  static const int kNpcMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 npcmoney() const;
  inline void set_npcmoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 npcglory_;
  ::google::protobuf::uint32 npcmoney_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageObtainCorpsWelfareResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsMoneyRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsMoneyRequest();
  virtual ~CMessageGetCorpsMoneyRequest();
  
  CMessageGetCorpsMoneyRequest(const CMessageGetCorpsMoneyRequest& from);
  
  inline CMessageGetCorpsMoneyRequest& operator=(const CMessageGetCorpsMoneyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsMoneyRequest& default_instance();
  void Swap(CMessageGetCorpsMoneyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsMoneyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsMoneyRequest& from);
  void MergeFrom(const CMessageGetCorpsMoneyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CorpsMoney = 2;
  inline bool has_corpsmoney() const;
  inline void clear_corpsmoney();
  static const int kCorpsMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsmoney() const;
  inline void set_corpsmoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 corpsmoney_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsMoneyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsMoneyResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsMoneyResponse();
  virtual ~CMessageGetCorpsMoneyResponse();
  
  CMessageGetCorpsMoneyResponse(const CMessageGetCorpsMoneyResponse& from);
  
  inline CMessageGetCorpsMoneyResponse& operator=(const CMessageGetCorpsMoneyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsMoneyResponse& default_instance();
  void Swap(CMessageGetCorpsMoneyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsMoneyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsMoneyResponse& from);
  void MergeFrom(const CMessageGetCorpsMoneyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsMoney = 3;
  inline bool has_corpsmoney() const;
  inline void clear_corpsmoney();
  static const int kCorpsMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 corpsmoney() const;
  inline void set_corpsmoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 corpsmoney_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsMoneyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsAbortBattleCityRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsAbortBattleCityRequest();
  virtual ~CMessageCorpsAbortBattleCityRequest();
  
  CMessageCorpsAbortBattleCityRequest(const CMessageCorpsAbortBattleCityRequest& from);
  
  inline CMessageCorpsAbortBattleCityRequest& operator=(const CMessageCorpsAbortBattleCityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsAbortBattleCityRequest& default_instance();
  void Swap(CMessageCorpsAbortBattleCityRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsAbortBattleCityRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsAbortBattleCityRequest& from);
  void MergeFrom(const CMessageCorpsAbortBattleCityRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNpcEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsAbortBattleCityRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsAbortBattleCityResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsAbortBattleCityResponse();
  virtual ~CMessageCorpsAbortBattleCityResponse();
  
  CMessageCorpsAbortBattleCityResponse(const CMessageCorpsAbortBattleCityResponse& from);
  
  inline CMessageCorpsAbortBattleCityResponse& operator=(const CMessageCorpsAbortBattleCityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsAbortBattleCityResponse& default_instance();
  void Swap(CMessageCorpsAbortBattleCityResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsAbortBattleCityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsAbortBattleCityResponse& from);
  void MergeFrom(const CMessageCorpsAbortBattleCityResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional string RooterName = 4;
  inline bool has_rootername() const;
  inline void clear_rootername();
  static const int kRooterNameFieldNumber = 4;
  inline const ::std::string& rootername() const;
  inline void set_rootername(const ::std::string& value);
  inline void set_rootername(const char* value);
  inline void set_rootername(const char* value, size_t size);
  inline ::std::string* mutable_rootername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 npcid_;
  ::std::string* rootername_;
  static const ::std::string _default_rootername_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsAbortBattleCityResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsAbortBattleCityNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsAbortBattleCityNotice();
  virtual ~CMessageCorpsAbortBattleCityNotice();
  
  CMessageCorpsAbortBattleCityNotice(const CMessageCorpsAbortBattleCityNotice& from);
  
  inline CMessageCorpsAbortBattleCityNotice& operator=(const CMessageCorpsAbortBattleCityNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsAbortBattleCityNotice& default_instance();
  void Swap(CMessageCorpsAbortBattleCityNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsAbortBattleCityNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsAbortBattleCityNotice& from);
  void MergeFrom(const CMessageCorpsAbortBattleCityNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional string RooterName = 3;
  inline bool has_rootername() const;
  inline void clear_rootername();
  static const int kRooterNameFieldNumber = 3;
  inline const ::std::string& rootername() const;
  inline void set_rootername(const ::std::string& value);
  inline void set_rootername(const char* value);
  inline void set_rootername(const char* value, size_t size);
  inline ::std::string* mutable_rootername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcid_;
  ::std::string* rootername_;
  static const ::std::string _default_rootername_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsAbortBattleCityNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsCanLevelUPNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsCanLevelUPNotify();
  virtual ~CMessageCorpsCanLevelUPNotify();
  
  CMessageCorpsCanLevelUPNotify(const CMessageCorpsCanLevelUPNotify& from);
  
  inline CMessageCorpsCanLevelUPNotify& operator=(const CMessageCorpsCanLevelUPNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsCanLevelUPNotify& default_instance();
  void Swap(CMessageCorpsCanLevelUPNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsCanLevelUPNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsCanLevelUPNotify& from);
  void MergeFrom(const CMessageCorpsCanLevelUPNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsCanLevelUPNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsPublishTaskNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsPublishTaskNotify();
  virtual ~CMessageCorpsPublishTaskNotify();
  
  CMessageCorpsPublishTaskNotify(const CMessageCorpsPublishTaskNotify& from);
  
  inline CMessageCorpsPublishTaskNotify& operator=(const CMessageCorpsPublishTaskNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsPublishTaskNotify& default_instance();
  void Swap(CMessageCorpsPublishTaskNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsPublishTaskNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsPublishTaskNotify& from);
  void MergeFrom(const CMessageCorpsPublishTaskNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead NotifyHead = 1;
  inline bool has_notifyhead() const;
  inline void clear_notifyhead();
  static const int kNotifyHeadFieldNumber = 1;
  inline const ::CorpsHead& notifyhead() const;
  inline ::CorpsHead* mutable_notifyhead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* notifyhead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsPublishTaskNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBattleResultNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsBattleResultNotice();
  virtual ~CMessageCorpsBattleResultNotice();
  
  CMessageCorpsBattleResultNotice(const CMessageCorpsBattleResultNotice& from);
  
  inline CMessageCorpsBattleResultNotice& operator=(const CMessageCorpsBattleResultNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBattleResultNotice& default_instance();
  void Swap(CMessageCorpsBattleResultNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBattleResultNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBattleResultNotice& from);
  void MergeFrom(const CMessageCorpsBattleResultNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string WinCorpsName = 2;
  inline bool has_wincorpsname() const;
  inline void clear_wincorpsname();
  static const int kWinCorpsNameFieldNumber = 2;
  inline const ::std::string& wincorpsname() const;
  inline void set_wincorpsname(const ::std::string& value);
  inline void set_wincorpsname(const char* value);
  inline void set_wincorpsname(const char* value, size_t size);
  inline ::std::string* mutable_wincorpsname();
  
  // optional string LostCorpsName = 3;
  inline bool has_lostcorpsname() const;
  inline void clear_lostcorpsname();
  static const int kLostCorpsNameFieldNumber = 3;
  inline const ::std::string& lostcorpsname() const;
  inline void set_lostcorpsname(const ::std::string& value);
  inline void set_lostcorpsname(const char* value);
  inline void set_lostcorpsname(const char* value, size_t size);
  inline ::std::string* mutable_lostcorpsname();
  
  // optional uint32 WinCampID = 4;
  inline bool has_wincampid() const;
  inline void clear_wincampid();
  static const int kWinCampIDFieldNumber = 4;
  inline ::google::protobuf::uint32 wincampid() const;
  inline void set_wincampid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 5;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 5;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 BattleType = 6;
  inline bool has_battletype() const;
  inline void clear_battletype();
  static const int kBattleTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 battletype() const;
  inline void set_battletype(::google::protobuf::uint32 value);
  
  // optional uint32 WinCorpsID = 7;
  inline bool has_wincorpsid() const;
  inline void clear_wincorpsid();
  static const int kWinCorpsIDFieldNumber = 7;
  inline ::google::protobuf::uint32 wincorpsid() const;
  inline void set_wincorpsid(::google::protobuf::uint32 value);
  
  // optional uint32 LostCorpsID = 8;
  inline bool has_lostcorpsid() const;
  inline void clear_lostcorpsid();
  static const int kLostCorpsIDFieldNumber = 8;
  inline ::google::protobuf::uint32 lostcorpsid() const;
  inline void set_lostcorpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* wincorpsname_;
  static const ::std::string _default_wincorpsname_;
  ::std::string* lostcorpsname_;
  static const ::std::string _default_lostcorpsname_;
  ::google::protobuf::uint32 wincampid_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 battletype_;
  ::google::protobuf::uint32 wincorpsid_;
  ::google::protobuf::uint32 lostcorpsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBattleResultNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsNpcOwnerNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsNpcOwnerNotice();
  virtual ~CMessageCorpsNpcOwnerNotice();
  
  CMessageCorpsNpcOwnerNotice(const CMessageCorpsNpcOwnerNotice& from);
  
  inline CMessageCorpsNpcOwnerNotice& operator=(const CMessageCorpsNpcOwnerNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsNpcOwnerNotice& default_instance();
  void Swap(CMessageCorpsNpcOwnerNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsNpcOwnerNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsNpcOwnerNotice& from);
  void MergeFrom(const CMessageCorpsNpcOwnerNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 CorpsID = 4;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 5;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 5;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
  // optional uint32 FamilyID = 6;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 6;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 npcid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  ::google::protobuf::uint32 familyid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsNpcOwnerNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsNameChangedNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsNameChangedNotify();
  virtual ~CMessageCorpsNameChangedNotify();
  
  CMessageCorpsNameChangedNotify(const CMessageCorpsNameChangedNotify& from);
  
  inline CMessageCorpsNameChangedNotify& operator=(const CMessageCorpsNameChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsNameChangedNotify& default_instance();
  void Swap(CMessageCorpsNameChangedNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsNameChangedNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsNameChangedNotify& from);
  void MergeFrom(const CMessageCorpsNameChangedNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ManagerID = 2;
  inline bool has_managerid() const;
  inline void clear_managerid();
  static const int kManagerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 managerid() const;
  inline void set_managerid(::google::protobuf::uint32 value);
  
  // optional string ManagerName = 3;
  inline bool has_managername() const;
  inline void clear_managername();
  static const int kManagerNameFieldNumber = 3;
  inline const ::std::string& managername() const;
  inline void set_managername(const ::std::string& value);
  inline void set_managername(const char* value);
  inline void set_managername(const char* value, size_t size);
  inline ::std::string* mutable_managername();
  
  // optional uint32 MemberID = 4;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 4;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 5;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 5;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 managerid_;
  ::std::string* managername_;
  static const ::std::string _default_managername_;
  ::google::protobuf::uint32 memberid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsNameChangedNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateUnionRequest : public ::google::protobuf::Message {
 public:
  CMessageCreateUnionRequest();
  virtual ~CMessageCreateUnionRequest();
  
  CMessageCreateUnionRequest(const CMessageCreateUnionRequest& from);
  
  inline CMessageCreateUnionRequest& operator=(const CMessageCreateUnionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateUnionRequest& default_instance();
  void Swap(CMessageCreateUnionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateUnionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateUnionRequest& from);
  void MergeFrom(const CMessageCreateUnionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated uint32 OtherID = 2;
  inline int otherid_size() const;
  inline void clear_otherid();
  static const int kOtherIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& otherid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_otherid();
  inline ::google::protobuf::uint32 otherid(int index) const;
  inline void set_otherid(int index, ::google::protobuf::uint32 value);
  inline void add_otherid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 3;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 3;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional string UnionNotice = 4;
  inline bool has_unionnotice() const;
  inline void clear_unionnotice();
  static const int kUnionNoticeFieldNumber = 4;
  inline const ::std::string& unionnotice() const;
  inline void set_unionnotice(const ::std::string& value);
  inline void set_unionnotice(const char* value);
  inline void set_unionnotice(const char* value, size_t size);
  inline ::std::string* mutable_unionnotice();
  
  // optional uint32 NPCEntityID = 5;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 5;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > otherid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::std::string* unionnotice_;
  static const ::std::string _default_unionnotice_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateUnionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateUnionResponse : public ::google::protobuf::Message {
 public:
  CMessageCreateUnionResponse();
  virtual ~CMessageCreateUnionResponse();
  
  CMessageCreateUnionResponse(const CMessageCreateUnionResponse& from);
  
  inline CMessageCreateUnionResponse& operator=(const CMessageCreateUnionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateUnionResponse& default_instance();
  void Swap(CMessageCreateUnionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateUnionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateUnionResponse& from);
  void MergeFrom(const CMessageCreateUnionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // repeated uint32 OtherID = 3;
  inline int otherid_size() const;
  inline void clear_otherid();
  static const int kOtherIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& otherid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_otherid();
  inline ::google::protobuf::uint32 otherid(int index) const;
  inline void set_otherid(int index, ::google::protobuf::uint32 value);
  inline void add_otherid(::google::protobuf::uint32 value);
  
  // optional uint32 UnionID = 4;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 4;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > otherid_;
  ::google::protobuf::uint32 unionid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateUnionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateUnionNotify : public ::google::protobuf::Message {
 public:
  CMessageCreateUnionNotify();
  virtual ~CMessageCreateUnionNotify();
  
  CMessageCreateUnionNotify(const CMessageCreateUnionNotify& from);
  
  inline CMessageCreateUnionNotify& operator=(const CMessageCreateUnionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateUnionNotify& default_instance();
  void Swap(CMessageCreateUnionNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateUnionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateUnionNotify& from);
  void MergeFrom(const CMessageCreateUnionNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 HeadID = 2;
  inline bool has_headid() const;
  inline void clear_headid();
  static const int kHeadIDFieldNumber = 2;
  inline ::google::protobuf::uint32 headid() const;
  inline void set_headid(::google::protobuf::uint32 value);
  
  // optional string HeadName = 3;
  inline bool has_headname() const;
  inline void clear_headname();
  static const int kHeadNameFieldNumber = 3;
  inline const ::std::string& headname() const;
  inline void set_headname(const ::std::string& value);
  inline void set_headname(const char* value);
  inline void set_headname(const char* value, size_t size);
  inline ::std::string* mutable_headname();
  
  // repeated uint32 OtherID = 4;
  inline int otherid_size() const;
  inline void clear_otherid();
  static const int kOtherIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& otherid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_otherid();
  inline ::google::protobuf::uint32 otherid(int index) const;
  inline void set_otherid(int index, ::google::protobuf::uint32 value);
  inline void add_otherid(::google::protobuf::uint32 value);
  
  // repeated string OtherName = 5;
  inline int othername_size() const;
  inline void clear_othername();
  static const int kOtherNameFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& othername() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_othername();
  inline const ::std::string& othername(int index) const;
  inline ::std::string* mutable_othername(int index);
  inline void set_othername(int index, const ::std::string& value);
  inline void set_othername(int index, const char* value);
  inline void set_othername(int index, const char* value, size_t size);
  inline ::std::string* add_othername();
  inline void add_othername(const ::std::string& value);
  inline void add_othername(const char* value);
  inline void add_othername(const char* value, size_t size);
  
  // optional uint32 UnionID = 6;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 6;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 7;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 7;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 headid_;
  ::std::string* headname_;
  static const ::std::string _default_headname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > otherid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> othername_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateUnionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageApplyUnionRequest : public ::google::protobuf::Message {
 public:
  CMessageApplyUnionRequest();
  virtual ~CMessageApplyUnionRequest();
  
  CMessageApplyUnionRequest(const CMessageApplyUnionRequest& from);
  
  inline CMessageApplyUnionRequest& operator=(const CMessageApplyUnionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageApplyUnionRequest& default_instance();
  void Swap(CMessageApplyUnionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageApplyUnionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageApplyUnionRequest& from);
  void MergeFrom(const CMessageApplyUnionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string UnionName = 2;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 2;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional uint32 UnionID = 3;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 3;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageApplyUnionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageApplyUnionResponse : public ::google::protobuf::Message {
 public:
  CMessageApplyUnionResponse();
  virtual ~CMessageApplyUnionResponse();
  
  CMessageApplyUnionResponse(const CMessageApplyUnionResponse& from);
  
  inline CMessageApplyUnionResponse& operator=(const CMessageApplyUnionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageApplyUnionResponse& default_instance();
  void Swap(CMessageApplyUnionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageApplyUnionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageApplyUnionResponse& from);
  void MergeFrom(const CMessageApplyUnionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string UnionName = 3;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 3;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageApplyUnionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnionMemberApplyNotify : public ::google::protobuf::Message {
 public:
  CMessageUnionMemberApplyNotify();
  virtual ~CMessageUnionMemberApplyNotify();
  
  CMessageUnionMemberApplyNotify(const CMessageUnionMemberApplyNotify& from);
  
  inline CMessageUnionMemberApplyNotify& operator=(const CMessageUnionMemberApplyNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnionMemberApplyNotify& default_instance();
  void Swap(CMessageUnionMemberApplyNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnionMemberApplyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnionMemberApplyNotify& from);
  void MergeFrom(const CMessageUnionMemberApplyNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional .PBCorpsBasicInfo CorpsInfo = 2;
  inline bool has_corpsinfo() const;
  inline void clear_corpsinfo();
  static const int kCorpsInfoFieldNumber = 2;
  inline const ::PBCorpsBasicInfo& corpsinfo() const;
  inline ::PBCorpsBasicInfo* mutable_corpsinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::PBCorpsBasicInfo* corpsinfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnionMemberApplyNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReplyUnionMemberApplyRequest : public ::google::protobuf::Message {
 public:
  CMessageReplyUnionMemberApplyRequest();
  virtual ~CMessageReplyUnionMemberApplyRequest();
  
  CMessageReplyUnionMemberApplyRequest(const CMessageReplyUnionMemberApplyRequest& from);
  
  inline CMessageReplyUnionMemberApplyRequest& operator=(const CMessageReplyUnionMemberApplyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReplyUnionMemberApplyRequest& default_instance();
  void Swap(CMessageReplyUnionMemberApplyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReplyUnionMemberApplyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReplyUnionMemberApplyRequest& from);
  void MergeFrom(const CMessageReplyUnionMemberApplyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 3;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 corpsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReplyUnionMemberApplyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReplyUnionMemberApplyResponse : public ::google::protobuf::Message {
 public:
  CMessageReplyUnionMemberApplyResponse();
  virtual ~CMessageReplyUnionMemberApplyResponse();
  
  CMessageReplyUnionMemberApplyResponse(const CMessageReplyUnionMemberApplyResponse& from);
  
  inline CMessageReplyUnionMemberApplyResponse& operator=(const CMessageReplyUnionMemberApplyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReplyUnionMemberApplyResponse& default_instance();
  void Swap(CMessageReplyUnionMemberApplyResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReplyUnionMemberApplyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReplyUnionMemberApplyResponse& from);
  void MergeFrom(const CMessageReplyUnionMemberApplyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 4;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 corpsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReplyUnionMemberApplyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageApplyUnionResultNotify : public ::google::protobuf::Message {
 public:
  CMessageApplyUnionResultNotify();
  virtual ~CMessageApplyUnionResultNotify();
  
  CMessageApplyUnionResultNotify(const CMessageApplyUnionResultNotify& from);
  
  inline CMessageApplyUnionResultNotify& operator=(const CMessageApplyUnionResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageApplyUnionResultNotify& default_instance();
  void Swap(CMessageApplyUnionResultNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageApplyUnionResultNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageApplyUnionResultNotify& from);
  void MergeFrom(const CMessageApplyUnionResultNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ResultCode = 2;
  inline bool has_resultcode() const;
  inline void clear_resultcode();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 resultcode() const;
  inline void set_resultcode(::google::protobuf::uint32 value);
  
  // optional uint32 UnionID = 3;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 3;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 4;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 4;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 resultcode_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageApplyUnionResultNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteUnionMemberRequest : public ::google::protobuf::Message {
 public:
  CMessageInviteUnionMemberRequest();
  virtual ~CMessageInviteUnionMemberRequest();
  
  CMessageInviteUnionMemberRequest(const CMessageInviteUnionMemberRequest& from);
  
  inline CMessageInviteUnionMemberRequest& operator=(const CMessageInviteUnionMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteUnionMemberRequest& default_instance();
  void Swap(CMessageInviteUnionMemberRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteUnionMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteUnionMemberRequest& from);
  void MergeFrom(const CMessageInviteUnionMemberRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string CorpsName = 2;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 2;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 MemberID = 3;
  inline bool has_memberid() const;
  inline void clear_memberid();
  static const int kMemberIDFieldNumber = 3;
  inline ::google::protobuf::uint32 memberid() const;
  inline void set_memberid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 memberid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteUnionMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteUnionMemberResponse : public ::google::protobuf::Message {
 public:
  CMessageInviteUnionMemberResponse();
  virtual ~CMessageInviteUnionMemberResponse();
  
  CMessageInviteUnionMemberResponse(const CMessageInviteUnionMemberResponse& from);
  
  inline CMessageInviteUnionMemberResponse& operator=(const CMessageInviteUnionMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteUnionMemberResponse& default_instance();
  void Swap(CMessageInviteUnionMemberResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteUnionMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteUnionMemberResponse& from);
  void MergeFrom(const CMessageInviteUnionMemberResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteUnionMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnionInviteNotify : public ::google::protobuf::Message {
 public:
  CMessageUnionInviteNotify();
  virtual ~CMessageUnionInviteNotify();
  
  CMessageUnionInviteNotify(const CMessageUnionInviteNotify& from);
  
  inline CMessageUnionInviteNotify& operator=(const CMessageUnionInviteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnionInviteNotify& default_instance();
  void Swap(CMessageUnionInviteNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnionInviteNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnionInviteNotify& from);
  void MergeFrom(const CMessageUnionInviteNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string InvitingName = 2;
  inline bool has_invitingname() const;
  inline void clear_invitingname();
  static const int kInvitingNameFieldNumber = 2;
  inline const ::std::string& invitingname() const;
  inline void set_invitingname(const ::std::string& value);
  inline void set_invitingname(const char* value);
  inline void set_invitingname(const char* value, size_t size);
  inline ::std::string* mutable_invitingname();
  
  // optional uint32 InvitingID = 3;
  inline bool has_invitingid() const;
  inline void clear_invitingid();
  static const int kInvitingIDFieldNumber = 3;
  inline ::google::protobuf::uint32 invitingid() const;
  inline void set_invitingid(::google::protobuf::uint32 value);
  
  // optional .PBUnionBasicInfo UnionInfo = 4;
  inline bool has_unioninfo() const;
  inline void clear_unioninfo();
  static const int kUnionInfoFieldNumber = 4;
  inline const ::PBUnionBasicInfo& unioninfo() const;
  inline ::PBUnionBasicInfo* mutable_unioninfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* invitingname_;
  static const ::std::string _default_invitingname_;
  ::google::protobuf::uint32 invitingid_;
  ::PBUnionBasicInfo* unioninfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnionInviteNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReplyUnionInviteRequest : public ::google::protobuf::Message {
 public:
  CMessageReplyUnionInviteRequest();
  virtual ~CMessageReplyUnionInviteRequest();
  
  CMessageReplyUnionInviteRequest(const CMessageReplyUnionInviteRequest& from);
  
  inline CMessageReplyUnionInviteRequest& operator=(const CMessageReplyUnionInviteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReplyUnionInviteRequest& default_instance();
  void Swap(CMessageReplyUnionInviteRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReplyUnionInviteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReplyUnionInviteRequest& from);
  void MergeFrom(const CMessageReplyUnionInviteRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 UnionID = 3;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 3;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional uint32 InvitingID = 4;
  inline bool has_invitingid() const;
  inline void clear_invitingid();
  static const int kInvitingIDFieldNumber = 4;
  inline ::google::protobuf::uint32 invitingid() const;
  inline void set_invitingid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 unionid_;
  ::google::protobuf::uint32 invitingid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReplyUnionInviteRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageReplyUnionInviteResponse : public ::google::protobuf::Message {
 public:
  CMessageReplyUnionInviteResponse();
  virtual ~CMessageReplyUnionInviteResponse();
  
  CMessageReplyUnionInviteResponse(const CMessageReplyUnionInviteResponse& from);
  
  inline CMessageReplyUnionInviteResponse& operator=(const CMessageReplyUnionInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageReplyUnionInviteResponse& default_instance();
  void Swap(CMessageReplyUnionInviteResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageReplyUnionInviteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageReplyUnionInviteResponse& from);
  void MergeFrom(const CMessageReplyUnionInviteResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional string UnionName = 4;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 4;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional uint32 UnionID = 5;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 5;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 result_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::google::protobuf::uint32 unionid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageReplyUnionInviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnionInviteResultNotify : public ::google::protobuf::Message {
 public:
  CMessageUnionInviteResultNotify();
  virtual ~CMessageUnionInviteResultNotify();
  
  CMessageUnionInviteResultNotify(const CMessageUnionInviteResultNotify& from);
  
  inline CMessageUnionInviteResultNotify& operator=(const CMessageUnionInviteResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnionInviteResultNotify& default_instance();
  void Swap(CMessageUnionInviteResultNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnionInviteResultNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnionInviteResultNotify& from);
  void MergeFrom(const CMessageUnionInviteResultNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 result_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnionInviteResultNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsJoinUnionNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsJoinUnionNotify();
  virtual ~CMessageCorpsJoinUnionNotify();
  
  CMessageCorpsJoinUnionNotify(const CMessageCorpsJoinUnionNotify& from);
  
  inline CMessageCorpsJoinUnionNotify& operator=(const CMessageCorpsJoinUnionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsJoinUnionNotify& default_instance();
  void Swap(CMessageCorpsJoinUnionNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsJoinUnionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsJoinUnionNotify& from);
  void MergeFrom(const CMessageCorpsJoinUnionNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional .PBCorpsBasicInfo CorpsInfo = 2;
  inline bool has_corpsinfo() const;
  inline void clear_corpsinfo();
  static const int kCorpsInfoFieldNumber = 2;
  inline const ::PBCorpsBasicInfo& corpsinfo() const;
  inline ::PBCorpsBasicInfo* mutable_corpsinfo();
  
  // optional uint32 UnionID = 3;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 3;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 4;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 4;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::PBCorpsBasicInfo* corpsinfo_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsJoinUnionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsLeaveUnionRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsLeaveUnionRequest();
  virtual ~CMessageCorpsLeaveUnionRequest();
  
  CMessageCorpsLeaveUnionRequest(const CMessageCorpsLeaveUnionRequest& from);
  
  inline CMessageCorpsLeaveUnionRequest& operator=(const CMessageCorpsLeaveUnionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsLeaveUnionRequest& default_instance();
  void Swap(CMessageCorpsLeaveUnionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsLeaveUnionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsLeaveUnionRequest& from);
  void MergeFrom(const CMessageCorpsLeaveUnionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Msgcode = 2;
  inline bool has_msgcode() const;
  inline void clear_msgcode();
  static const int kMsgcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgcode() const;
  inline void set_msgcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 msgcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsLeaveUnionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsLeaveUnionResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsLeaveUnionResponse();
  virtual ~CMessageCorpsLeaveUnionResponse();
  
  CMessageCorpsLeaveUnionResponse(const CMessageCorpsLeaveUnionResponse& from);
  
  inline CMessageCorpsLeaveUnionResponse& operator=(const CMessageCorpsLeaveUnionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsLeaveUnionResponse& default_instance();
  void Swap(CMessageCorpsLeaveUnionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsLeaveUnionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsLeaveUnionResponse& from);
  void MergeFrom(const CMessageCorpsLeaveUnionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsLeaveUnionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsLeaveUnionNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsLeaveUnionNotify();
  virtual ~CMessageCorpsLeaveUnionNotify();
  
  CMessageCorpsLeaveUnionNotify(const CMessageCorpsLeaveUnionNotify& from);
  
  inline CMessageCorpsLeaveUnionNotify& operator=(const CMessageCorpsLeaveUnionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsLeaveUnionNotify& default_instance();
  void Swap(CMessageCorpsLeaveUnionNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsLeaveUnionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsLeaveUnionNotify& from);
  void MergeFrom(const CMessageCorpsLeaveUnionNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsLeaveUnionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickCorpsRequest : public ::google::protobuf::Message {
 public:
  CMessageKickCorpsRequest();
  virtual ~CMessageKickCorpsRequest();
  
  CMessageKickCorpsRequest(const CMessageKickCorpsRequest& from);
  
  inline CMessageKickCorpsRequest& operator=(const CMessageKickCorpsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickCorpsRequest& default_instance();
  void Swap(CMessageKickCorpsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickCorpsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickCorpsRequest& from);
  void MergeFrom(const CMessageKickCorpsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 corpsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickCorpsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickCorpsResponse : public ::google::protobuf::Message {
 public:
  CMessageKickCorpsResponse();
  virtual ~CMessageKickCorpsResponse();
  
  CMessageKickCorpsResponse(const CMessageKickCorpsResponse& from);
  
  inline CMessageKickCorpsResponse& operator=(const CMessageKickCorpsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickCorpsResponse& default_instance();
  void Swap(CMessageKickCorpsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickCorpsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickCorpsResponse& from);
  void MergeFrom(const CMessageKickCorpsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 CorpsID = 4;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 corpsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickCorpsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickCorpsNotify : public ::google::protobuf::Message {
 public:
  CMessageKickCorpsNotify();
  virtual ~CMessageKickCorpsNotify();
  
  CMessageKickCorpsNotify(const CMessageKickCorpsNotify& from);
  
  inline CMessageKickCorpsNotify& operator=(const CMessageKickCorpsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickCorpsNotify& default_instance();
  void Swap(CMessageKickCorpsNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickCorpsNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickCorpsNotify& from);
  void MergeFrom(const CMessageKickCorpsNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickCorpsNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageMakeUnionRequest : public ::google::protobuf::Message {
 public:
  CMessageMakeUnionRequest();
  virtual ~CMessageMakeUnionRequest();
  
  CMessageMakeUnionRequest(const CMessageMakeUnionRequest& from);
  
  inline CMessageMakeUnionRequest& operator=(const CMessageMakeUnionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMakeUnionRequest& default_instance();
  void Swap(CMessageMakeUnionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageMakeUnionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageMakeUnionRequest& from);
  void MergeFrom(const CMessageMakeUnionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 OpType = 2;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
  // optional string UnionName = 3;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 3;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional string UnionNotice = 4;
  inline bool has_unionnotice() const;
  inline void clear_unionnotice();
  static const int kUnionNoticeFieldNumber = 4;
  inline const ::std::string& unionnotice() const;
  inline void set_unionnotice(const ::std::string& value);
  inline void set_unionnotice(const char* value);
  inline void set_unionnotice(const char* value, size_t size);
  inline ::std::string* mutable_unionnotice();
  
  // optional uint32 CorpsID = 5;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 5;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 TargetID = 6;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIDFieldNumber = 6;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 optype_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::std::string* unionnotice_;
  static const ::std::string _default_unionnotice_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 targetid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageMakeUnionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageMakeUnionResponse : public ::google::protobuf::Message {
 public:
  CMessageMakeUnionResponse();
  virtual ~CMessageMakeUnionResponse();
  
  CMessageMakeUnionResponse(const CMessageMakeUnionResponse& from);
  
  inline CMessageMakeUnionResponse& operator=(const CMessageMakeUnionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMakeUnionResponse& default_instance();
  void Swap(CMessageMakeUnionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageMakeUnionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageMakeUnionResponse& from);
  void MergeFrom(const CMessageMakeUnionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageMakeUnionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageMakeUnionNotify : public ::google::protobuf::Message {
 public:
  CMessageMakeUnionNotify();
  virtual ~CMessageMakeUnionNotify();
  
  CMessageMakeUnionNotify(const CMessageMakeUnionNotify& from);
  
  inline CMessageMakeUnionNotify& operator=(const CMessageMakeUnionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMakeUnionNotify& default_instance();
  void Swap(CMessageMakeUnionNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageMakeUnionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageMakeUnionNotify& from);
  void MergeFrom(const CMessageMakeUnionNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 OpType = 2;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
  // optional string UnionName = 3;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 3;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional string UnionNotice = 4;
  inline bool has_unionnotice() const;
  inline void clear_unionnotice();
  static const int kUnionNoticeFieldNumber = 4;
  inline const ::std::string& unionnotice() const;
  inline void set_unionnotice(const ::std::string& value);
  inline void set_unionnotice(const char* value);
  inline void set_unionnotice(const char* value, size_t size);
  inline ::std::string* mutable_unionnotice();
  
  // repeated uint32 CorpsID = 5;
  inline int corpsid_size() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& corpsid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_corpsid();
  inline ::google::protobuf::uint32 corpsid(int index) const;
  inline void set_corpsid(int index, ::google::protobuf::uint32 value);
  inline void add_corpsid(::google::protobuf::uint32 value);
  
  // repeated string CorpsName = 6;
  inline int corpsname_size() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& corpsname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_corpsname();
  inline const ::std::string& corpsname(int index) const;
  inline ::std::string* mutable_corpsname(int index);
  inline void set_corpsname(int index, const ::std::string& value);
  inline void set_corpsname(int index, const char* value);
  inline void set_corpsname(int index, const char* value, size_t size);
  inline ::std::string* add_corpsname();
  inline void add_corpsname(const ::std::string& value);
  inline void add_corpsname(const char* value);
  inline void add_corpsname(const char* value, size_t size);
  
  // optional string HeadCorpsName = 7;
  inline bool has_headcorpsname() const;
  inline void clear_headcorpsname();
  static const int kHeadCorpsNameFieldNumber = 7;
  inline const ::std::string& headcorpsname() const;
  inline void set_headcorpsname(const ::std::string& value);
  inline void set_headcorpsname(const char* value);
  inline void set_headcorpsname(const char* value, size_t size);
  inline ::std::string* mutable_headcorpsname();
  
  // optional uint32 HeadCharID = 8;
  inline bool has_headcharid() const;
  inline void clear_headcharid();
  static const int kHeadCharIDFieldNumber = 8;
  inline ::google::protobuf::uint32 headcharid() const;
  inline void set_headcharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 optype_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::std::string* unionnotice_;
  static const ::std::string _default_unionnotice_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > corpsid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> corpsname_;
  ::std::string* headcorpsname_;
  static const ::std::string _default_headcorpsname_;
  ::google::protobuf::uint32 headcharid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageMakeUnionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetUnionInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageGetUnionInfoRequest();
  virtual ~CMessageGetUnionInfoRequest();
  
  CMessageGetUnionInfoRequest(const CMessageGetUnionInfoRequest& from);
  
  inline CMessageGetUnionInfoRequest& operator=(const CMessageGetUnionInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetUnionInfoRequest& default_instance();
  void Swap(CMessageGetUnionInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetUnionInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetUnionInfoRequest& from);
  void MergeFrom(const CMessageGetUnionInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 UnionID = 2;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 2;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 unionid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetUnionInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetUnionInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageGetUnionInfoResponse();
  virtual ~CMessageGetUnionInfoResponse();
  
  CMessageGetUnionInfoResponse(const CMessageGetUnionInfoResponse& from);
  
  inline CMessageGetUnionInfoResponse& operator=(const CMessageGetUnionInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetUnionInfoResponse& default_instance();
  void Swap(CMessageGetUnionInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetUnionInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetUnionInfoResponse& from);
  void MergeFrom(const CMessageGetUnionInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // optional .PBUnionBasicInfo UnionInfo = 3;
  inline bool has_unioninfo() const;
  inline void clear_unioninfo();
  static const int kUnionInfoFieldNumber = 3;
  inline const ::PBUnionBasicInfo& unioninfo() const;
  inline ::PBUnionBasicInfo* mutable_unioninfo();
  
  // repeated .PBCorpsBasicInfo CorpsInfo = 4;
  inline int corpsinfo_size() const;
  inline void clear_corpsinfo();
  static const int kCorpsInfoFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo >& corpsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo >* mutable_corpsinfo();
  inline const ::PBCorpsBasicInfo& corpsinfo(int index) const;
  inline ::PBCorpsBasicInfo* mutable_corpsinfo(int index);
  inline ::PBCorpsBasicInfo* add_corpsinfo();
  
  // optional .PBCorpsBattleList BattleInfo = 5;
  inline bool has_battleinfo() const;
  inline void clear_battleinfo();
  static const int kBattleInfoFieldNumber = 5;
  inline const ::PBCorpsBattleList& battleinfo() const;
  inline ::PBCorpsBattleList* mutable_battleinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::PBUnionBasicInfo* unioninfo_;
  ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo > corpsinfo_;
  ::PBCorpsBattleList* battleinfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetUnionInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDismissUnionRequest : public ::google::protobuf::Message {
 public:
  CMessageDismissUnionRequest();
  virtual ~CMessageDismissUnionRequest();
  
  CMessageDismissUnionRequest(const CMessageDismissUnionRequest& from);
  
  inline CMessageDismissUnionRequest& operator=(const CMessageDismissUnionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDismissUnionRequest& default_instance();
  void Swap(CMessageDismissUnionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDismissUnionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDismissUnionRequest& from);
  void MergeFrom(const CMessageDismissUnionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NPCEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDismissUnionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDismissUnionResponse : public ::google::protobuf::Message {
 public:
  CMessageDismissUnionResponse();
  virtual ~CMessageDismissUnionResponse();
  
  CMessageDismissUnionResponse(const CMessageDismissUnionResponse& from);
  
  inline CMessageDismissUnionResponse& operator=(const CMessageDismissUnionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDismissUnionResponse& default_instance();
  void Swap(CMessageDismissUnionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDismissUnionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDismissUnionResponse& from);
  void MergeFrom(const CMessageDismissUnionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDismissUnionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDismissUnionNotify : public ::google::protobuf::Message {
 public:
  CMessageDismissUnionNotify();
  virtual ~CMessageDismissUnionNotify();
  
  CMessageDismissUnionNotify(const CMessageDismissUnionNotify& from);
  
  inline CMessageDismissUnionNotify& operator=(const CMessageDismissUnionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDismissUnionNotify& default_instance();
  void Swap(CMessageDismissUnionNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDismissUnionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDismissUnionNotify& from);
  void MergeFrom(const CMessageDismissUnionNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDismissUnionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnionApplyListRequest : public ::google::protobuf::Message {
 public:
  CMessageUnionApplyListRequest();
  virtual ~CMessageUnionApplyListRequest();
  
  CMessageUnionApplyListRequest(const CMessageUnionApplyListRequest& from);
  
  inline CMessageUnionApplyListRequest& operator=(const CMessageUnionApplyListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnionApplyListRequest& default_instance();
  void Swap(CMessageUnionApplyListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnionApplyListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnionApplyListRequest& from);
  void MergeFrom(const CMessageUnionApplyListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnionApplyListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnionApplyListResponse : public ::google::protobuf::Message {
 public:
  CMessageUnionApplyListResponse();
  virtual ~CMessageUnionApplyListResponse();
  
  CMessageUnionApplyListResponse(const CMessageUnionApplyListResponse& from);
  
  inline CMessageUnionApplyListResponse& operator=(const CMessageUnionApplyListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnionApplyListResponse& default_instance();
  void Swap(CMessageUnionApplyListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnionApplyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnionApplyListResponse& from);
  void MergeFrom(const CMessageUnionApplyListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // repeated .PBCorpsBasicInfo CorpsInfo = 3;
  inline int corpsinfo_size() const;
  inline void clear_corpsinfo();
  static const int kCorpsInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo >& corpsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo >* mutable_corpsinfo();
  inline const ::PBCorpsBasicInfo& corpsinfo(int index) const;
  inline ::PBCorpsBasicInfo* mutable_corpsinfo(int index);
  inline ::PBCorpsBasicInfo* add_corpsinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo > corpsinfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnionApplyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAllUnionListRequest : public ::google::protobuf::Message {
 public:
  CMessageAllUnionListRequest();
  virtual ~CMessageAllUnionListRequest();
  
  CMessageAllUnionListRequest(const CMessageAllUnionListRequest& from);
  
  inline CMessageAllUnionListRequest& operator=(const CMessageAllUnionListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAllUnionListRequest& default_instance();
  void Swap(CMessageAllUnionListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAllUnionListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAllUnionListRequest& from);
  void MergeFrom(const CMessageAllUnionListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAllUnionListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAllUnionListResponse : public ::google::protobuf::Message {
 public:
  CMessageAllUnionListResponse();
  virtual ~CMessageAllUnionListResponse();
  
  CMessageAllUnionListResponse(const CMessageAllUnionListResponse& from);
  
  inline CMessageAllUnionListResponse& operator=(const CMessageAllUnionListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAllUnionListResponse& default_instance();
  void Swap(CMessageAllUnionListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAllUnionListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAllUnionListResponse& from);
  void MergeFrom(const CMessageAllUnionListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // repeated .PBUnionBasicInfo UnionInfo = 3;
  inline int unioninfo_size() const;
  inline void clear_unioninfo();
  static const int kUnionInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBUnionBasicInfo >& unioninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBUnionBasicInfo >* mutable_unioninfo();
  inline const ::PBUnionBasicInfo& unioninfo(int index) const;
  inline ::PBUnionBasicInfo* mutable_unioninfo(int index);
  inline ::PBUnionBasicInfo* add_unioninfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::RepeatedPtrField< ::PBUnionBasicInfo > unioninfo_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAllUnionListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsGetOtherMemberRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsGetOtherMemberRequest();
  virtual ~CMessageCorpsGetOtherMemberRequest();
  
  CMessageCorpsGetOtherMemberRequest(const CMessageCorpsGetOtherMemberRequest& from);
  
  inline CMessageCorpsGetOtherMemberRequest& operator=(const CMessageCorpsGetOtherMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsGetOtherMemberRequest& default_instance();
  void Swap(CMessageCorpsGetOtherMemberRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsGetOtherMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsGetOtherMemberRequest& from);
  void MergeFrom(const CMessageCorpsGetOtherMemberRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsGetOtherMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBBattleMember : public ::google::protobuf::Message {
 public:
  PBBattleMember();
  virtual ~PBBattleMember();
  
  PBBattleMember(const PBBattleMember& from);
  
  inline PBBattleMember& operator=(const PBBattleMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBattleMember& default_instance();
  void Swap(PBBattleMember* other);
  
  // implements Message ----------------------------------------------
  
  PBBattleMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBattleMember& from);
  void MergeFrom(const PBBattleMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 4;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 4;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 5;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 5;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 IsJoinUnion = 6;
  inline bool has_isjoinunion() const;
  inline void clear_isjoinunion();
  static const int kIsJoinUnionFieldNumber = 6;
  inline ::google::protobuf::uint32 isjoinunion() const;
  inline void set_isjoinunion(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 metier_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 isjoinunion_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBattleMember* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsGetOtherMemberResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsGetOtherMemberResponse();
  virtual ~CMessageCorpsGetOtherMemberResponse();
  
  CMessageCorpsGetOtherMemberResponse(const CMessageCorpsGetOtherMemberResponse& from);
  
  inline CMessageCorpsGetOtherMemberResponse& operator=(const CMessageCorpsGetOtherMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsGetOtherMemberResponse& default_instance();
  void Swap(CMessageCorpsGetOtherMemberResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsGetOtherMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsGetOtherMemberResponse& from);
  void MergeFrom(const CMessageCorpsGetOtherMemberResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated .PBBattleMember MemberList = 2;
  inline int memberlist_size() const;
  inline void clear_memberlist();
  static const int kMemberListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBattleMember >& memberlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBattleMember >* mutable_memberlist();
  inline const ::PBBattleMember& memberlist(int index) const;
  inline ::PBBattleMember* mutable_memberlist(int index);
  inline ::PBBattleMember* add_memberlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedPtrField< ::PBBattleMember > memberlist_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsGetOtherMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnionJoinBattleListRequest : public ::google::protobuf::Message {
 public:
  CMessageUnionJoinBattleListRequest();
  virtual ~CMessageUnionJoinBattleListRequest();
  
  CMessageUnionJoinBattleListRequest(const CMessageUnionJoinBattleListRequest& from);
  
  inline CMessageUnionJoinBattleListRequest& operator=(const CMessageUnionJoinBattleListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnionJoinBattleListRequest& default_instance();
  void Swap(CMessageUnionJoinBattleListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnionJoinBattleListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnionJoinBattleListRequest& from);
  void MergeFrom(const CMessageUnionJoinBattleListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnionJoinBattleListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnionJoinBattleListResponse : public ::google::protobuf::Message {
 public:
  CMessageUnionJoinBattleListResponse();
  virtual ~CMessageUnionJoinBattleListResponse();
  
  CMessageUnionJoinBattleListResponse(const CMessageUnionJoinBattleListResponse& from);
  
  inline CMessageUnionJoinBattleListResponse& operator=(const CMessageUnionJoinBattleListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnionJoinBattleListResponse& default_instance();
  void Swap(CMessageUnionJoinBattleListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnionJoinBattleListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnionJoinBattleListResponse& from);
  void MergeFrom(const CMessageUnionJoinBattleListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // repeated .PBBattleMember MemberList = 3;
  inline int memberlist_size() const;
  inline void clear_memberlist();
  static const int kMemberListFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBattleMember >& memberlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBattleMember >* mutable_memberlist();
  inline const ::PBBattleMember& memberlist(int index) const;
  inline ::PBBattleMember* mutable_memberlist(int index);
  inline ::PBBattleMember* add_memberlist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::RepeatedPtrField< ::PBBattleMember > memberlist_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnionJoinBattleListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsGetAllMapRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsGetAllMapRequest();
  virtual ~CMessageCorpsGetAllMapRequest();
  
  CMessageCorpsGetAllMapRequest(const CMessageCorpsGetAllMapRequest& from);
  
  inline CMessageCorpsGetAllMapRequest& operator=(const CMessageCorpsGetAllMapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsGetAllMapRequest& default_instance();
  void Swap(CMessageCorpsGetAllMapRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsGetAllMapRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsGetAllMapRequest& from);
  void MergeFrom(const CMessageCorpsGetAllMapRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ServerID = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsGetAllMapRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBMapOwner : public ::google::protobuf::Message {
 public:
  PBMapOwner();
  virtual ~PBMapOwner();
  
  PBMapOwner(const PBMapOwner& from);
  
  inline PBMapOwner& operator=(const PBMapOwner& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMapOwner& default_instance();
  void Swap(PBMapOwner* other);
  
  // implements Message ----------------------------------------------
  
  PBMapOwner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMapOwner& from);
  void MergeFrom(const PBMapOwner& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 3;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 3;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 Color = 4;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 4;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
  // optional string RooterName = 5;
  inline bool has_rootername() const;
  inline void clear_rootername();
  static const int kRooterNameFieldNumber = 5;
  inline const ::std::string& rootername() const;
  inline void set_rootername(const ::std::string& value);
  inline void set_rootername(const char* value);
  inline void set_rootername(const char* value, size_t size);
  inline ::std::string* mutable_rootername();
  
  // optional uint32 CorpsPower = 6;
  inline bool has_corpspower() const;
  inline void clear_corpspower();
  static const int kCorpsPowerFieldNumber = 6;
  inline ::google::protobuf::uint32 corpspower() const;
  inline void set_corpspower(::google::protobuf::uint32 value);
  
  // optional string UnionName = 7;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 7;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional uint32 UnionPower = 8;
  inline bool has_unionpower() const;
  inline void clear_unionpower();
  static const int kUnionPowerFieldNumber = 8;
  inline ::google::protobuf::uint32 unionpower() const;
  inline void set_unionpower(::google::protobuf::uint32 value);
  
  // optional uint32 PeopleNum = 9;
  inline bool has_peoplenum() const;
  inline void clear_peoplenum();
  static const int kPeopleNumFieldNumber = 9;
  inline ::google::protobuf::uint32 peoplenum() const;
  inline void set_peoplenum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 color_;
  ::std::string* rootername_;
  static const ::std::string _default_rootername_;
  ::google::protobuf::uint32 corpspower_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::google::protobuf::uint32 unionpower_;
  ::google::protobuf::uint32 peoplenum_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMapOwner* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsGetAllMapResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsGetAllMapResponse();
  virtual ~CMessageCorpsGetAllMapResponse();
  
  CMessageCorpsGetAllMapResponse(const CMessageCorpsGetAllMapResponse& from);
  
  inline CMessageCorpsGetAllMapResponse& operator=(const CMessageCorpsGetAllMapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsGetAllMapResponse& default_instance();
  void Swap(CMessageCorpsGetAllMapResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsGetAllMapResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsGetAllMapResponse& from);
  void MergeFrom(const CMessageCorpsGetAllMapResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // repeated .PBMapOwner MapList = 2;
  inline int maplist_size() const;
  inline void clear_maplist();
  static const int kMapListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMapOwner >& maplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMapOwner >* mutable_maplist();
  inline const ::PBMapOwner& maplist(int index) const;
  inline ::PBMapOwner* mutable_maplist(int index);
  inline ::PBMapOwner* add_maplist();
  
  // optional uint32 ServerID = 3;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 3;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::RepeatedPtrField< ::PBMapOwner > maplist_;
  ::google::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsGetAllMapResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsAppointPrinceRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsAppointPrinceRequest();
  virtual ~CMessageCorpsAppointPrinceRequest();
  
  CMessageCorpsAppointPrinceRequest(const CMessageCorpsAppointPrinceRequest& from);
  
  inline CMessageCorpsAppointPrinceRequest& operator=(const CMessageCorpsAppointPrinceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsAppointPrinceRequest& default_instance();
  void Swap(CMessageCorpsAppointPrinceRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsAppointPrinceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsAppointPrinceRequest& from);
  void MergeFrom(const CMessageCorpsAppointPrinceRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsAppointPrinceRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorspAppointPrinceResponse : public ::google::protobuf::Message {
 public:
  CMessageCorspAppointPrinceResponse();
  virtual ~CMessageCorspAppointPrinceResponse();
  
  CMessageCorspAppointPrinceResponse(const CMessageCorspAppointPrinceResponse& from);
  
  inline CMessageCorspAppointPrinceResponse& operator=(const CMessageCorspAppointPrinceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorspAppointPrinceResponse& default_instance();
  void Swap(CMessageCorspAppointPrinceResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorspAppointPrinceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorspAppointPrinceResponse& from);
  void MergeFrom(const CMessageCorspAppointPrinceResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 3;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 3;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorspAppointPrinceResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsAppointPrinceNotice : public ::google::protobuf::Message {
 public:
  CMessageCorpsAppointPrinceNotice();
  virtual ~CMessageCorpsAppointPrinceNotice();
  
  CMessageCorpsAppointPrinceNotice(const CMessageCorpsAppointPrinceNotice& from);
  
  inline CMessageCorpsAppointPrinceNotice& operator=(const CMessageCorpsAppointPrinceNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsAppointPrinceNotice& default_instance();
  void Swap(CMessageCorpsAppointPrinceNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsAppointPrinceNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsAppointPrinceNotice& from);
  void MergeFrom(const CMessageCorpsAppointPrinceNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsAppointPrinceNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsMoveCapitalRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsMoveCapitalRequest();
  virtual ~CMessageCorpsMoveCapitalRequest();
  
  CMessageCorpsMoveCapitalRequest(const CMessageCorpsMoveCapitalRequest& from);
  
  inline CMessageCorpsMoveCapitalRequest& operator=(const CMessageCorpsMoveCapitalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsMoveCapitalRequest& default_instance();
  void Swap(CMessageCorpsMoveCapitalRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsMoveCapitalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsMoveCapitalRequest& from);
  void MergeFrom(const CMessageCorpsMoveCapitalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsMoveCapitalRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMesssageCorpsMoveCapitalResponse : public ::google::protobuf::Message {
 public:
  CMesssageCorpsMoveCapitalResponse();
  virtual ~CMesssageCorpsMoveCapitalResponse();
  
  CMesssageCorpsMoveCapitalResponse(const CMesssageCorpsMoveCapitalResponse& from);
  
  inline CMesssageCorpsMoveCapitalResponse& operator=(const CMesssageCorpsMoveCapitalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMesssageCorpsMoveCapitalResponse& default_instance();
  void Swap(CMesssageCorpsMoveCapitalResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMesssageCorpsMoveCapitalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMesssageCorpsMoveCapitalResponse& from);
  void MergeFrom(const CMesssageCorpsMoveCapitalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMesssageCorpsMoveCapitalResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsSelectColorRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsSelectColorRequest();
  virtual ~CMessageCorpsSelectColorRequest();
  
  CMessageCorpsSelectColorRequest(const CMessageCorpsSelectColorRequest& from);
  
  inline CMessageCorpsSelectColorRequest& operator=(const CMessageCorpsSelectColorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsSelectColorRequest& default_instance();
  void Swap(CMessageCorpsSelectColorRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsSelectColorRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsSelectColorRequest& from);
  void MergeFrom(const CMessageCorpsSelectColorRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 color_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsSelectColorRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsSelectColorResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsSelectColorResponse();
  virtual ~CMessageCorpsSelectColorResponse();
  
  CMessageCorpsSelectColorResponse(const CMessageCorpsSelectColorResponse& from);
  
  inline CMessageCorpsSelectColorResponse& operator=(const CMessageCorpsSelectColorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsSelectColorResponse& default_instance();
  void Swap(CMessageCorpsSelectColorResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsSelectColorResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsSelectColorResponse& from);
  void MergeFrom(const CMessageCorpsSelectColorResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 Color = 3;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 3;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 color_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsSelectColorResponse* default_instance_;
};
// -------------------------------------------------------------------

class CorpsGoodItem : public ::google::protobuf::Message {
 public:
  CorpsGoodItem();
  virtual ~CorpsGoodItem();
  
  CorpsGoodItem(const CorpsGoodItem& from);
  
  inline CorpsGoodItem& operator=(const CorpsGoodItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CorpsGoodItem& default_instance();
  void Swap(CorpsGoodItem* other);
  
  // implements Message ----------------------------------------------
  
  CorpsGoodItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CorpsGoodItem& from);
  void MergeFrom(const CorpsGoodItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 2;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeID = 3;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 3;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 composeid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CorpsGoodItem* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsGoodsListRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsGoodsListRequest();
  virtual ~CMessageGetCorpsGoodsListRequest();
  
  CMessageGetCorpsGoodsListRequest(const CMessageGetCorpsGoodsListRequest& from);
  
  inline CMessageGetCorpsGoodsListRequest& operator=(const CMessageGetCorpsGoodsListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsGoodsListRequest& default_instance();
  void Swap(CMessageGetCorpsGoodsListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsGoodsListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsGoodsListRequest& from);
  void MergeFrom(const CMessageGetCorpsGoodsListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTmpID = 4;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 4;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 npctmpid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsGoodsListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsGoodsListResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsGoodsListResponse();
  virtual ~CMessageGetCorpsGoodsListResponse();
  
  CMessageGetCorpsGoodsListResponse(const CMessageGetCorpsGoodsListResponse& from);
  
  inline CMessageGetCorpsGoodsListResponse& operator=(const CMessageGetCorpsGoodsListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsGoodsListResponse& default_instance();
  void Swap(CMessageGetCorpsGoodsListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsGoodsListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsGoodsListResponse& from);
  void MergeFrom(const CMessageGetCorpsGoodsListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // repeated .CorpsGoodItem GoodsList = 3;
  inline int goodslist_size() const;
  inline void clear_goodslist();
  static const int kGoodsListFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >& goodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >* mutable_goodslist();
  inline const ::CorpsGoodItem& goodslist(int index) const;
  inline ::CorpsGoodItem* mutable_goodslist(int index);
  inline ::CorpsGoodItem* add_goodslist();
  
  // optional uint32 NpcTmpID = 4;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 4;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem > goodslist_;
  ::google::protobuf::uint32 npctmpid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsGoodsListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsExchangeGoodsListRequest : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsExchangeGoodsListRequest();
  virtual ~CMessageGetCorpsExchangeGoodsListRequest();
  
  CMessageGetCorpsExchangeGoodsListRequest(const CMessageGetCorpsExchangeGoodsListRequest& from);
  
  inline CMessageGetCorpsExchangeGoodsListRequest& operator=(const CMessageGetCorpsExchangeGoodsListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsExchangeGoodsListRequest& default_instance();
  void Swap(CMessageGetCorpsExchangeGoodsListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsExchangeGoodsListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsExchangeGoodsListRequest& from);
  void MergeFrom(const CMessageGetCorpsExchangeGoodsListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 CorpsID = 2;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 2;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcTmpID = 4;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 4;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 corpsid_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 npctmpid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsExchangeGoodsListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetCorpsExchangeGoodsListResponse : public ::google::protobuf::Message {
 public:
  CMessageGetCorpsExchangeGoodsListResponse();
  virtual ~CMessageGetCorpsExchangeGoodsListResponse();
  
  CMessageGetCorpsExchangeGoodsListResponse(const CMessageGetCorpsExchangeGoodsListResponse& from);
  
  inline CMessageGetCorpsExchangeGoodsListResponse& operator=(const CMessageGetCorpsExchangeGoodsListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetCorpsExchangeGoodsListResponse& default_instance();
  void Swap(CMessageGetCorpsExchangeGoodsListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetCorpsExchangeGoodsListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetCorpsExchangeGoodsListResponse& from);
  void MergeFrom(const CMessageGetCorpsExchangeGoodsListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Errcode = 2;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // repeated .CorpsGoodItem GoodsList = 3;
  inline int goodslist_size() const;
  inline void clear_goodslist();
  static const int kGoodsListFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >& goodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >* mutable_goodslist();
  inline const ::CorpsGoodItem& goodslist(int index) const;
  inline ::CorpsGoodItem* mutable_goodslist(int index);
  inline ::CorpsGoodItem* add_goodslist();
  
  // optional uint32 NpcTmpID = 4;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 4;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem > goodslist_;
  ::google::protobuf::uint32 npctmpid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetCorpsExchangeGoodsListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeUnionNameRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeUnionNameRequest();
  virtual ~CMessageChangeUnionNameRequest();
  
  CMessageChangeUnionNameRequest(const CMessageChangeUnionNameRequest& from);
  
  inline CMessageChangeUnionNameRequest& operator=(const CMessageChangeUnionNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeUnionNameRequest& default_instance();
  void Swap(CMessageChangeUnionNameRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeUnionNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeUnionNameRequest& from);
  void MergeFrom(const CMessageChangeUnionNameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string UnionName = 2;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 2;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional string UnionNotice = 3;
  inline bool has_unionnotice() const;
  inline void clear_unionnotice();
  static const int kUnionNoticeFieldNumber = 3;
  inline const ::std::string& unionnotice() const;
  inline void set_unionnotice(const ::std::string& value);
  inline void set_unionnotice(const char* value);
  inline void set_unionnotice(const char* value, size_t size);
  inline ::std::string* mutable_unionnotice();
  
  // optional uint32 CorpsID = 4;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::std::string* unionnotice_;
  static const ::std::string _default_unionnotice_;
  ::google::protobuf::uint32 corpsid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeUnionNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeUnionNameResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeUnionNameResponse();
  virtual ~CMessageChangeUnionNameResponse();
  
  CMessageChangeUnionNameResponse(const CMessageChangeUnionNameResponse& from);
  
  inline CMessageChangeUnionNameResponse& operator=(const CMessageChangeUnionNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeUnionNameResponse& default_instance();
  void Swap(CMessageChangeUnionNameResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeUnionNameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeUnionNameResponse& from);
  void MergeFrom(const CMessageChangeUnionNameResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeUnionNameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeUnionNameNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeUnionNameNotify();
  virtual ~CMessageChangeUnionNameNotify();
  
  CMessageChangeUnionNameNotify(const CMessageChangeUnionNameNotify& from);
  
  inline CMessageChangeUnionNameNotify& operator=(const CMessageChangeUnionNameNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeUnionNameNotify& default_instance();
  void Swap(CMessageChangeUnionNameNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeUnionNameNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeUnionNameNotify& from);
  void MergeFrom(const CMessageChangeUnionNameNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional string UnionName = 2;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 2;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional string UnionNotice = 3;
  inline bool has_unionnotice() const;
  inline void clear_unionnotice();
  static const int kUnionNoticeFieldNumber = 3;
  inline const ::std::string& unionnotice() const;
  inline void set_unionnotice(const ::std::string& value);
  inline void set_unionnotice(const char* value);
  inline void set_unionnotice(const char* value, size_t size);
  inline ::std::string* mutable_unionnotice();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::std::string* unionnotice_;
  static const ::std::string _default_unionnotice_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeUnionNameNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsGoodsListNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsGoodsListNotify();
  virtual ~CMessageChangeCorpsGoodsListNotify();
  
  CMessageChangeCorpsGoodsListNotify(const CMessageChangeCorpsGoodsListNotify& from);
  
  inline CMessageChangeCorpsGoodsListNotify& operator=(const CMessageChangeCorpsGoodsListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsGoodsListNotify& default_instance();
  void Swap(CMessageChangeCorpsGoodsListNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsGoodsListNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsGoodsListNotify& from);
  void MergeFrom(const CMessageChangeCorpsGoodsListNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CorpsGoodItem GoodsList = 1;
  inline int goodslist_size() const;
  inline void clear_goodslist();
  static const int kGoodsListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >& goodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >* mutable_goodslist();
  inline const ::CorpsGoodItem& goodslist(int index) const;
  inline ::CorpsGoodItem* mutable_goodslist(int index);
  inline ::CorpsGoodItem* add_goodslist();
  
  // optional uint32 NpcTmpID = 2;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem > goodslist_;
  ::google::protobuf::uint32 npctmpid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsGoodsListNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeCorpsExchangeGoodsListNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeCorpsExchangeGoodsListNotify();
  virtual ~CMessageChangeCorpsExchangeGoodsListNotify();
  
  CMessageChangeCorpsExchangeGoodsListNotify(const CMessageChangeCorpsExchangeGoodsListNotify& from);
  
  inline CMessageChangeCorpsExchangeGoodsListNotify& operator=(const CMessageChangeCorpsExchangeGoodsListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeCorpsExchangeGoodsListNotify& default_instance();
  void Swap(CMessageChangeCorpsExchangeGoodsListNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeCorpsExchangeGoodsListNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeCorpsExchangeGoodsListNotify& from);
  void MergeFrom(const CMessageChangeCorpsExchangeGoodsListNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CorpsGoodItem GoodsList = 1;
  inline int goodslist_size() const;
  inline void clear_goodslist();
  static const int kGoodsListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >& goodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >* mutable_goodslist();
  inline const ::CorpsGoodItem& goodslist(int index) const;
  inline ::CorpsGoodItem* mutable_goodslist(int index);
  inline ::CorpsGoodItem* add_goodslist();
  
  // optional uint32 NpcTmpID = 2;
  inline bool has_npctmpid() const;
  inline void clear_npctmpid();
  static const int kNpcTmpIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npctmpid() const;
  inline void set_npctmpid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem > goodslist_;
  ::google::protobuf::uint32 npctmpid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeCorpsExchangeGoodsListNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUseCorpsLeagueItemNotify : public ::google::protobuf::Message {
 public:
  CMessageUseCorpsLeagueItemNotify();
  virtual ~CMessageUseCorpsLeagueItemNotify();
  
  CMessageUseCorpsLeagueItemNotify(const CMessageUseCorpsLeagueItemNotify& from);
  
  inline CMessageUseCorpsLeagueItemNotify& operator=(const CMessageUseCorpsLeagueItemNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUseCorpsLeagueItemNotify& default_instance();
  void Swap(CMessageUseCorpsLeagueItemNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUseCorpsLeagueItemNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUseCorpsLeagueItemNotify& from);
  void MergeFrom(const CMessageUseCorpsLeagueItemNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CorpsGoodItem GoodsList = 1;
  inline int goodslist_size() const;
  inline void clear_goodslist();
  static const int kGoodsListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >& goodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >* mutable_goodslist();
  inline const ::CorpsGoodItem& goodslist(int index) const;
  inline ::CorpsGoodItem* mutable_goodslist(int index);
  inline ::CorpsGoodItem* add_goodslist();
  
  // optional uint32 ManagerID = 2;
  inline bool has_managerid() const;
  inline void clear_managerid();
  static const int kManagerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 managerid() const;
  inline void set_managerid(::google::protobuf::uint32 value);
  
  // optional string ManagerName = 3;
  inline bool has_managername() const;
  inline void clear_managername();
  static const int kManagerNameFieldNumber = 3;
  inline const ::std::string& managername() const;
  inline void set_managername(const ::std::string& value);
  inline void set_managername(const char* value);
  inline void set_managername(const char* value, size_t size);
  inline ::std::string* mutable_managername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem > goodslist_;
  ::google::protobuf::uint32 managerid_;
  ::std::string* managername_;
  static const ::std::string _default_managername_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUseCorpsLeagueItemNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsLoginBattleRequest : public ::google::protobuf::Message {
 public:
  CMessageCorpsLoginBattleRequest();
  virtual ~CMessageCorpsLoginBattleRequest();
  
  CMessageCorpsLoginBattleRequest(const CMessageCorpsLoginBattleRequest& from);
  
  inline CMessageCorpsLoginBattleRequest& operator=(const CMessageCorpsLoginBattleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsLoginBattleRequest& default_instance();
  void Swap(CMessageCorpsLoginBattleRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsLoginBattleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsLoginBattleRequest& from);
  void MergeFrom(const CMessageCorpsLoginBattleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 NpcID = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsLoginBattleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsLoginBattleResponse : public ::google::protobuf::Message {
 public:
  CMessageCorpsLoginBattleResponse();
  virtual ~CMessageCorpsLoginBattleResponse();
  
  CMessageCorpsLoginBattleResponse(const CMessageCorpsLoginBattleResponse& from);
  
  inline CMessageCorpsLoginBattleResponse& operator=(const CMessageCorpsLoginBattleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsLoginBattleResponse& default_instance();
  void Swap(CMessageCorpsLoginBattleResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsLoginBattleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsLoginBattleResponse& from);
  void MergeFrom(const CMessageCorpsLoginBattleResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 RtnCode = 2;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsLoginBattleResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSummonCorpsBossRequest : public ::google::protobuf::Message {
 public:
  CMessageSummonCorpsBossRequest();
  virtual ~CMessageSummonCorpsBossRequest();
  
  CMessageSummonCorpsBossRequest(const CMessageSummonCorpsBossRequest& from);
  
  inline CMessageSummonCorpsBossRequest& operator=(const CMessageSummonCorpsBossRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSummonCorpsBossRequest& default_instance();
  void Swap(CMessageSummonCorpsBossRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSummonCorpsBossRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSummonCorpsBossRequest& from);
  void MergeFrom(const CMessageSummonCorpsBossRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 BossID = 2;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIDFieldNumber = 2;
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 bossid_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSummonCorpsBossRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSummonCorpsBossResponse : public ::google::protobuf::Message {
 public:
  CMessageSummonCorpsBossResponse();
  virtual ~CMessageSummonCorpsBossResponse();
  
  CMessageSummonCorpsBossResponse(const CMessageSummonCorpsBossResponse& from);
  
  inline CMessageSummonCorpsBossResponse& operator=(const CMessageSummonCorpsBossResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSummonCorpsBossResponse& default_instance();
  void Swap(CMessageSummonCorpsBossResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSummonCorpsBossResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSummonCorpsBossResponse& from);
  void MergeFrom(const CMessageSummonCorpsBossResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errorcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSummonCorpsBossResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBossRepetionOpenNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsBossRepetionOpenNotify();
  virtual ~CMessageCorpsBossRepetionOpenNotify();
  
  CMessageCorpsBossRepetionOpenNotify(const CMessageCorpsBossRepetionOpenNotify& from);
  
  inline CMessageCorpsBossRepetionOpenNotify& operator=(const CMessageCorpsBossRepetionOpenNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBossRepetionOpenNotify& default_instance();
  void Swap(CMessageCorpsBossRepetionOpenNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBossRepetionOpenNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBossRepetionOpenNotify& from);
  void MergeFrom(const CMessageCorpsBossRepetionOpenNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BossID = 1;
  inline bool has_bossid() const;
  inline void clear_bossid();
  static const int kBossIDFieldNumber = 1;
  inline ::google::protobuf::uint32 bossid() const;
  inline void set_bossid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional string RoleName = 3;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 3;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional uint32 BossCDCool = 4;
  inline bool has_bosscdcool() const;
  inline void clear_bosscdcool();
  static const int kBossCDCoolFieldNumber = 4;
  inline ::google::protobuf::uint32 bosscdcool() const;
  inline void set_bosscdcool(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 bossid_;
  ::google::protobuf::uint32 roleid_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::uint32 bosscdcool_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBossRepetionOpenNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageIntoCorpsBossRepetionResponse : public ::google::protobuf::Message {
 public:
  CMessageIntoCorpsBossRepetionResponse();
  virtual ~CMessageIntoCorpsBossRepetionResponse();
  
  CMessageIntoCorpsBossRepetionResponse(const CMessageIntoCorpsBossRepetionResponse& from);
  
  inline CMessageIntoCorpsBossRepetionResponse& operator=(const CMessageIntoCorpsBossRepetionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageIntoCorpsBossRepetionResponse& default_instance();
  void Swap(CMessageIntoCorpsBossRepetionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageIntoCorpsBossRepetionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageIntoCorpsBossRepetionResponse& from);
  void MergeFrom(const CMessageIntoCorpsBossRepetionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CorpsHead CorpHead = 1;
  inline bool has_corphead() const;
  inline void clear_corphead();
  static const int kCorpHeadFieldNumber = 1;
  inline const ::CorpsHead& corphead() const;
  inline ::CorpsHead* mutable_corphead();
  
  // optional uint32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CorpsHead* corphead_;
  ::google::protobuf::uint32 errorcode_;
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageIntoCorpsBossRepetionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCorpsBossRepetionEndNotify : public ::google::protobuf::Message {
 public:
  CMessageCorpsBossRepetionEndNotify();
  virtual ~CMessageCorpsBossRepetionEndNotify();
  
  CMessageCorpsBossRepetionEndNotify(const CMessageCorpsBossRepetionEndNotify& from);
  
  inline CMessageCorpsBossRepetionEndNotify& operator=(const CMessageCorpsBossRepetionEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCorpsBossRepetionEndNotify& default_instance();
  void Swap(CMessageCorpsBossRepetionEndNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCorpsBossRepetionEndNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCorpsBossRepetionEndNotify& from);
  void MergeFrom(const CMessageCorpsBossRepetionEndNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_corpsmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_corpsmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCorpsBossRepetionEndNotify* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CorpsHead

// optional uint32 RoleID = 1;
inline bool CorpsHead::has_roleid() const {
  return _has_bit(0);
}
inline void CorpsHead::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CorpsHead::roleid() const {
  return roleid_;
}
inline void CorpsHead::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 MsgID = 2;
inline bool CorpsHead::has_msgid() const {
  return _has_bit(1);
}
inline void CorpsHead::clear_msgid() {
  msgid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CorpsHead::msgid() const {
  return msgid_;
}
inline void CorpsHead::set_msgid(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgid_ = value;
}

// optional uint32 EntityID = 3;
inline bool CorpsHead::has_entityid() const {
  return _has_bit(2);
}
inline void CorpsHead::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CorpsHead::entityid() const {
  return entityid_;
}
inline void CorpsHead::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageCreatCorpsRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCreatCorpsRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCreatCorpsRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCreatCorpsRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCreatCorpsRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string CorpsName = 2;
inline bool CMessageCreatCorpsRequest::has_corpsname() const {
  return _has_bit(1);
}
inline void CMessageCreatCorpsRequest::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCreatCorpsRequest::corpsname() const {
  return *corpsname_;
}
inline void CMessageCreatCorpsRequest::set_corpsname(const ::std::string& value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCreatCorpsRequest::set_corpsname(const char* value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCreatCorpsRequest::set_corpsname(const char* value, size_t size) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreatCorpsRequest::mutable_corpsname() {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 NpcEntityID = 3;
inline bool CMessageCreatCorpsRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageCreatCorpsRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCreatCorpsRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageCreatCorpsRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// optional uint32 CorpsColor = 4;
inline bool CMessageCreatCorpsRequest::has_corpscolor() const {
  return _has_bit(3);
}
inline void CMessageCreatCorpsRequest::clear_corpscolor() {
  corpscolor_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCreatCorpsRequest::corpscolor() const {
  return corpscolor_;
}
inline void CMessageCreatCorpsRequest::set_corpscolor(::google::protobuf::uint32 value) {
  _set_bit(3);
  corpscolor_ = value;
}

// -------------------------------------------------------------------

// CMessageCreatCorpsResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCreatCorpsResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCreatCorpsResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCreatCorpsResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCreatCorpsResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageCreatCorpsResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageCreatCorpsResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCreatCorpsResponse::errcode() const {
  return errcode_;
}
inline void CMessageCreatCorpsResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional string CorpsName = 3;
inline bool CMessageCreatCorpsResponse::has_corpsname() const {
  return _has_bit(2);
}
inline void CMessageCreatCorpsResponse::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCreatCorpsResponse::corpsname() const {
  return *corpsname_;
}
inline void CMessageCreatCorpsResponse::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCreatCorpsResponse::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCreatCorpsResponse::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreatCorpsResponse::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 CorpsID = 4;
inline bool CMessageCreatCorpsResponse::has_corpsid() const {
  return _has_bit(3);
}
inline void CMessageCreatCorpsResponse::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCreatCorpsResponse::corpsid() const {
  return corpsid_;
}
inline void CMessageCreatCorpsResponse::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  corpsid_ = value;
}

// optional uint32 CorpsColor = 5;
inline bool CMessageCreatCorpsResponse::has_corpscolor() const {
  return _has_bit(4);
}
inline void CMessageCreatCorpsResponse::clear_corpscolor() {
  corpscolor_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCreatCorpsResponse::corpscolor() const {
  return corpscolor_;
}
inline void CMessageCreatCorpsResponse::set_corpscolor(::google::protobuf::uint32 value) {
  _set_bit(4);
  corpscolor_ = value;
}

// -------------------------------------------------------------------

// CMessageApplyCorpsRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageApplyCorpsRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageApplyCorpsRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageApplyCorpsRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageApplyCorpsRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string CorpsName = 2;
inline bool CMessageApplyCorpsRequest::has_corpsname() const {
  return _has_bit(1);
}
inline void CMessageApplyCorpsRequest::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageApplyCorpsRequest::corpsname() const {
  return *corpsname_;
}
inline void CMessageApplyCorpsRequest::set_corpsname(const ::std::string& value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageApplyCorpsRequest::set_corpsname(const char* value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageApplyCorpsRequest::set_corpsname(const char* value, size_t size) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageApplyCorpsRequest::mutable_corpsname() {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 CorpsID = 3;
inline bool CMessageApplyCorpsRequest::has_corpsid() const {
  return _has_bit(2);
}
inline void CMessageApplyCorpsRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageApplyCorpsRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageApplyCorpsRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  corpsid_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageApplyCorpsRequest::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageApplyCorpsRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageApplyCorpsRequest::roleid() const {
  return roleid_;
}
inline void CMessageApplyCorpsRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageApplyCorpsResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageApplyCorpsResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageApplyCorpsResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageApplyCorpsResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageApplyCorpsResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageApplyCorpsResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageApplyCorpsResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageApplyCorpsResponse::errcode() const {
  return errcode_;
}
inline void CMessageApplyCorpsResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional string CorpsName = 3;
inline bool CMessageApplyCorpsResponse::has_corpsname() const {
  return _has_bit(2);
}
inline void CMessageApplyCorpsResponse::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageApplyCorpsResponse::corpsname() const {
  return *corpsname_;
}
inline void CMessageApplyCorpsResponse::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageApplyCorpsResponse::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageApplyCorpsResponse::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageApplyCorpsResponse::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// -------------------------------------------------------------------

// CMessageCorpsMemberApplyNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsMemberApplyNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsMemberApplyNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsMemberApplyNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsMemberApplyNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional .FamilyData FamilyInfo = 2;
inline bool CMessageCorpsMemberApplyNotify::has_familyinfo() const {
  return _has_bit(1);
}
inline void CMessageCorpsMemberApplyNotify::clear_familyinfo() {
  if (familyinfo_ != NULL) familyinfo_->::FamilyData::Clear();
  _clear_bit(1);
}
inline const ::FamilyData& CMessageCorpsMemberApplyNotify::familyinfo() const {
  return familyinfo_ != NULL ? *familyinfo_ : *default_instance_->familyinfo_;
}
inline ::FamilyData* CMessageCorpsMemberApplyNotify::mutable_familyinfo() {
  _set_bit(1);
  if (familyinfo_ == NULL) familyinfo_ = new ::FamilyData;
  return familyinfo_;
}

// -------------------------------------------------------------------

// CMessageReplyCorpsMemberApplyRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageReplyCorpsMemberApplyRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageReplyCorpsMemberApplyRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageReplyCorpsMemberApplyRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageReplyCorpsMemberApplyRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Result = 2;
inline bool CMessageReplyCorpsMemberApplyRequest::has_result() const {
  return _has_bit(1);
}
inline void CMessageReplyCorpsMemberApplyRequest::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsMemberApplyRequest::result() const {
  return result_;
}
inline void CMessageReplyCorpsMemberApplyRequest::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 FamilyID = 3;
inline bool CMessageReplyCorpsMemberApplyRequest::has_familyid() const {
  return _has_bit(2);
}
inline void CMessageReplyCorpsMemberApplyRequest::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsMemberApplyRequest::familyid() const {
  return familyid_;
}
inline void CMessageReplyCorpsMemberApplyRequest::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(2);
  familyid_ = value;
}

// -------------------------------------------------------------------

// CMessageReplyCorpsMemberApplyResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageReplyCorpsMemberApplyResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageReplyCorpsMemberApplyResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageReplyCorpsMemberApplyResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageReplyCorpsMemberApplyResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageReplyCorpsMemberApplyResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageReplyCorpsMemberApplyResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsMemberApplyResponse::errcode() const {
  return errcode_;
}
inline void CMessageReplyCorpsMemberApplyResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 Result = 3;
inline bool CMessageReplyCorpsMemberApplyResponse::has_result() const {
  return _has_bit(2);
}
inline void CMessageReplyCorpsMemberApplyResponse::clear_result() {
  result_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsMemberApplyResponse::result() const {
  return result_;
}
inline void CMessageReplyCorpsMemberApplyResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(2);
  result_ = value;
}

// optional uint32 FamilyID = 4;
inline bool CMessageReplyCorpsMemberApplyResponse::has_familyid() const {
  return _has_bit(3);
}
inline void CMessageReplyCorpsMemberApplyResponse::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsMemberApplyResponse::familyid() const {
  return familyid_;
}
inline void CMessageReplyCorpsMemberApplyResponse::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(3);
  familyid_ = value;
}

// -------------------------------------------------------------------

// CMessageApplyCorpsResultNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageApplyCorpsResultNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageApplyCorpsResultNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageApplyCorpsResultNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageApplyCorpsResultNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ResultCode = 2;
inline bool CMessageApplyCorpsResultNotify::has_resultcode() const {
  return _has_bit(1);
}
inline void CMessageApplyCorpsResultNotify::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageApplyCorpsResultNotify::resultcode() const {
  return resultcode_;
}
inline void CMessageApplyCorpsResultNotify::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  resultcode_ = value;
}

// optional uint32 CorpsID = 3;
inline bool CMessageApplyCorpsResultNotify::has_corpsid() const {
  return _has_bit(2);
}
inline void CMessageApplyCorpsResultNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageApplyCorpsResultNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageApplyCorpsResultNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  corpsid_ = value;
}

// optional string CorpsName = 4;
inline bool CMessageApplyCorpsResultNotify::has_corpsname() const {
  return _has_bit(3);
}
inline void CMessageApplyCorpsResultNotify::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageApplyCorpsResultNotify::corpsname() const {
  return *corpsname_;
}
inline void CMessageApplyCorpsResultNotify::set_corpsname(const ::std::string& value) {
  _set_bit(3);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageApplyCorpsResultNotify::set_corpsname(const char* value) {
  _set_bit(3);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageApplyCorpsResultNotify::set_corpsname(const char* value, size_t size) {
  _set_bit(3);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageApplyCorpsResultNotify::mutable_corpsname() {
  _set_bit(3);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 UnionID = 5;
inline bool CMessageApplyCorpsResultNotify::has_unionid() const {
  return _has_bit(4);
}
inline void CMessageApplyCorpsResultNotify::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageApplyCorpsResultNotify::unionid() const {
  return unionid_;
}
inline void CMessageApplyCorpsResultNotify::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(4);
  unionid_ = value;
}

// optional string UnionName = 6;
inline bool CMessageApplyCorpsResultNotify::has_unionname() const {
  return _has_bit(5);
}
inline void CMessageApplyCorpsResultNotify::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageApplyCorpsResultNotify::unionname() const {
  return *unionname_;
}
inline void CMessageApplyCorpsResultNotify::set_unionname(const ::std::string& value) {
  _set_bit(5);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageApplyCorpsResultNotify::set_unionname(const char* value) {
  _set_bit(5);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageApplyCorpsResultNotify::set_unionname(const char* value, size_t size) {
  _set_bit(5);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageApplyCorpsResultNotify::mutable_unionname() {
  _set_bit(5);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// -------------------------------------------------------------------

// CMessageInviteCorpsMemberRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageInviteCorpsMemberRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageInviteCorpsMemberRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageInviteCorpsMemberRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageInviteCorpsMemberRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string FamilyName = 2;
inline bool CMessageInviteCorpsMemberRequest::has_familyname() const {
  return _has_bit(1);
}
inline void CMessageInviteCorpsMemberRequest::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageInviteCorpsMemberRequest::familyname() const {
  return *familyname_;
}
inline void CMessageInviteCorpsMemberRequest::set_familyname(const ::std::string& value) {
  _set_bit(1);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageInviteCorpsMemberRequest::set_familyname(const char* value) {
  _set_bit(1);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageInviteCorpsMemberRequest::set_familyname(const char* value, size_t size) {
  _set_bit(1);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageInviteCorpsMemberRequest::mutable_familyname() {
  _set_bit(1);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// optional uint32 FamilyID = 3;
inline bool CMessageInviteCorpsMemberRequest::has_familyid() const {
  return _has_bit(2);
}
inline void CMessageInviteCorpsMemberRequest::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageInviteCorpsMemberRequest::familyid() const {
  return familyid_;
}
inline void CMessageInviteCorpsMemberRequest::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(2);
  familyid_ = value;
}

// optional uint32 MemberID = 4;
inline bool CMessageInviteCorpsMemberRequest::has_memberid() const {
  return _has_bit(3);
}
inline void CMessageInviteCorpsMemberRequest::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageInviteCorpsMemberRequest::memberid() const {
  return memberid_;
}
inline void CMessageInviteCorpsMemberRequest::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(3);
  memberid_ = value;
}

// -------------------------------------------------------------------

// CMessageInviteCorpsMemberResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageInviteCorpsMemberResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageInviteCorpsMemberResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageInviteCorpsMemberResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageInviteCorpsMemberResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageInviteCorpsMemberResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageInviteCorpsMemberResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteCorpsMemberResponse::errcode() const {
  return errcode_;
}
inline void CMessageInviteCorpsMemberResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional string FamilyName = 3;
inline bool CMessageInviteCorpsMemberResponse::has_familyname() const {
  return _has_bit(2);
}
inline void CMessageInviteCorpsMemberResponse::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageInviteCorpsMemberResponse::familyname() const {
  return *familyname_;
}
inline void CMessageInviteCorpsMemberResponse::set_familyname(const ::std::string& value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageInviteCorpsMemberResponse::set_familyname(const char* value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageInviteCorpsMemberResponse::set_familyname(const char* value, size_t size) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageInviteCorpsMemberResponse::mutable_familyname() {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// -------------------------------------------------------------------

// CMessageCorpsInviteNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsInviteNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsInviteNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsInviteNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsInviteNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string InvitingName = 2;
inline bool CMessageCorpsInviteNotify::has_invitingname() const {
  return _has_bit(1);
}
inline void CMessageCorpsInviteNotify::clear_invitingname() {
  if (invitingname_ != &_default_invitingname_) {
    invitingname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCorpsInviteNotify::invitingname() const {
  return *invitingname_;
}
inline void CMessageCorpsInviteNotify::set_invitingname(const ::std::string& value) {
  _set_bit(1);
  if (invitingname_ == &_default_invitingname_) {
    invitingname_ = new ::std::string;
  }
  invitingname_->assign(value);
}
inline void CMessageCorpsInviteNotify::set_invitingname(const char* value) {
  _set_bit(1);
  if (invitingname_ == &_default_invitingname_) {
    invitingname_ = new ::std::string;
  }
  invitingname_->assign(value);
}
inline void CMessageCorpsInviteNotify::set_invitingname(const char* value, size_t size) {
  _set_bit(1);
  if (invitingname_ == &_default_invitingname_) {
    invitingname_ = new ::std::string;
  }
  invitingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsInviteNotify::mutable_invitingname() {
  _set_bit(1);
  if (invitingname_ == &_default_invitingname_) {
    invitingname_ = new ::std::string;
  }
  return invitingname_;
}

// optional uint32 InvitingID = 3;
inline bool CMessageCorpsInviteNotify::has_invitingid() const {
  return _has_bit(2);
}
inline void CMessageCorpsInviteNotify::clear_invitingid() {
  invitingid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsInviteNotify::invitingid() const {
  return invitingid_;
}
inline void CMessageCorpsInviteNotify::set_invitingid(::google::protobuf::uint32 value) {
  _set_bit(2);
  invitingid_ = value;
}

// optional .PBCorpsBasicInfo CorpsInfo = 4;
inline bool CMessageCorpsInviteNotify::has_corpsinfo() const {
  return _has_bit(3);
}
inline void CMessageCorpsInviteNotify::clear_corpsinfo() {
  if (corpsinfo_ != NULL) corpsinfo_->::PBCorpsBasicInfo::Clear();
  _clear_bit(3);
}
inline const ::PBCorpsBasicInfo& CMessageCorpsInviteNotify::corpsinfo() const {
  return corpsinfo_ != NULL ? *corpsinfo_ : *default_instance_->corpsinfo_;
}
inline ::PBCorpsBasicInfo* CMessageCorpsInviteNotify::mutable_corpsinfo() {
  _set_bit(3);
  if (corpsinfo_ == NULL) corpsinfo_ = new ::PBCorpsBasicInfo;
  return corpsinfo_;
}

// -------------------------------------------------------------------

// CMessageReplyCorpsInviteRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageReplyCorpsInviteRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageReplyCorpsInviteRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageReplyCorpsInviteRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageReplyCorpsInviteRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Result = 2;
inline bool CMessageReplyCorpsInviteRequest::has_result() const {
  return _has_bit(1);
}
inline void CMessageReplyCorpsInviteRequest::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsInviteRequest::result() const {
  return result_;
}
inline void CMessageReplyCorpsInviteRequest::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 CorpsID = 3;
inline bool CMessageReplyCorpsInviteRequest::has_corpsid() const {
  return _has_bit(2);
}
inline void CMessageReplyCorpsInviteRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsInviteRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageReplyCorpsInviteRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  corpsid_ = value;
}

// optional uint32 InvitingID = 4;
inline bool CMessageReplyCorpsInviteRequest::has_invitingid() const {
  return _has_bit(3);
}
inline void CMessageReplyCorpsInviteRequest::clear_invitingid() {
  invitingid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsInviteRequest::invitingid() const {
  return invitingid_;
}
inline void CMessageReplyCorpsInviteRequest::set_invitingid(::google::protobuf::uint32 value) {
  _set_bit(3);
  invitingid_ = value;
}

// -------------------------------------------------------------------

// CMessageReplyCorpsInviteResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageReplyCorpsInviteResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageReplyCorpsInviteResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageReplyCorpsInviteResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageReplyCorpsInviteResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageReplyCorpsInviteResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageReplyCorpsInviteResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsInviteResponse::errcode() const {
  return errcode_;
}
inline void CMessageReplyCorpsInviteResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 Result = 3;
inline bool CMessageReplyCorpsInviteResponse::has_result() const {
  return _has_bit(2);
}
inline void CMessageReplyCorpsInviteResponse::clear_result() {
  result_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsInviteResponse::result() const {
  return result_;
}
inline void CMessageReplyCorpsInviteResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(2);
  result_ = value;
}

// optional string CorpsName = 4;
inline bool CMessageReplyCorpsInviteResponse::has_corpsname() const {
  return _has_bit(3);
}
inline void CMessageReplyCorpsInviteResponse::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageReplyCorpsInviteResponse::corpsname() const {
  return *corpsname_;
}
inline void CMessageReplyCorpsInviteResponse::set_corpsname(const ::std::string& value) {
  _set_bit(3);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageReplyCorpsInviteResponse::set_corpsname(const char* value) {
  _set_bit(3);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageReplyCorpsInviteResponse::set_corpsname(const char* value, size_t size) {
  _set_bit(3);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageReplyCorpsInviteResponse::mutable_corpsname() {
  _set_bit(3);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 CorpsID = 5;
inline bool CMessageReplyCorpsInviteResponse::has_corpsid() const {
  return _has_bit(4);
}
inline void CMessageReplyCorpsInviteResponse::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsInviteResponse::corpsid() const {
  return corpsid_;
}
inline void CMessageReplyCorpsInviteResponse::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(4);
  corpsid_ = value;
}

// optional uint32 UnionID = 6;
inline bool CMessageReplyCorpsInviteResponse::has_unionid() const {
  return _has_bit(5);
}
inline void CMessageReplyCorpsInviteResponse::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageReplyCorpsInviteResponse::unionid() const {
  return unionid_;
}
inline void CMessageReplyCorpsInviteResponse::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(5);
  unionid_ = value;
}

// optional string UnionName = 7;
inline bool CMessageReplyCorpsInviteResponse::has_unionname() const {
  return _has_bit(6);
}
inline void CMessageReplyCorpsInviteResponse::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageReplyCorpsInviteResponse::unionname() const {
  return *unionname_;
}
inline void CMessageReplyCorpsInviteResponse::set_unionname(const ::std::string& value) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageReplyCorpsInviteResponse::set_unionname(const char* value) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageReplyCorpsInviteResponse::set_unionname(const char* value, size_t size) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageReplyCorpsInviteResponse::mutable_unionname() {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// -------------------------------------------------------------------

// CMessageCorpsInviteResultNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsInviteResultNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsInviteResultNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsInviteResultNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsInviteResultNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Result = 2;
inline bool CMessageCorpsInviteResultNotify::has_result() const {
  return _has_bit(1);
}
inline void CMessageCorpsInviteResultNotify::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsInviteResultNotify::result() const {
  return result_;
}
inline void CMessageCorpsInviteResultNotify::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional string FamilyName = 3;
inline bool CMessageCorpsInviteResultNotify::has_familyname() const {
  return _has_bit(2);
}
inline void CMessageCorpsInviteResultNotify::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsInviteResultNotify::familyname() const {
  return *familyname_;
}
inline void CMessageCorpsInviteResultNotify::set_familyname(const ::std::string& value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageCorpsInviteResultNotify::set_familyname(const char* value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageCorpsInviteResultNotify::set_familyname(const char* value, size_t size) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsInviteResultNotify::mutable_familyname() {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// -------------------------------------------------------------------

// CMessageFamilyJoinCorpsNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageFamilyJoinCorpsNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageFamilyJoinCorpsNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageFamilyJoinCorpsNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageFamilyJoinCorpsNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional .PBCorpsMember FamilyInfo = 2;
inline bool CMessageFamilyJoinCorpsNotify::has_familyinfo() const {
  return _has_bit(1);
}
inline void CMessageFamilyJoinCorpsNotify::clear_familyinfo() {
  if (familyinfo_ != NULL) familyinfo_->::PBCorpsMember::Clear();
  _clear_bit(1);
}
inline const ::PBCorpsMember& CMessageFamilyJoinCorpsNotify::familyinfo() const {
  return familyinfo_ != NULL ? *familyinfo_ : *default_instance_->familyinfo_;
}
inline ::PBCorpsMember* CMessageFamilyJoinCorpsNotify::mutable_familyinfo() {
  _set_bit(1);
  if (familyinfo_ == NULL) familyinfo_ = new ::PBCorpsMember;
  return familyinfo_;
}

// optional uint32 UnionID = 3;
inline bool CMessageFamilyJoinCorpsNotify::has_unionid() const {
  return _has_bit(2);
}
inline void CMessageFamilyJoinCorpsNotify::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFamilyJoinCorpsNotify::unionid() const {
  return unionid_;
}
inline void CMessageFamilyJoinCorpsNotify::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(2);
  unionid_ = value;
}

// optional string UnionName = 4;
inline bool CMessageFamilyJoinCorpsNotify::has_unionname() const {
  return _has_bit(3);
}
inline void CMessageFamilyJoinCorpsNotify::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageFamilyJoinCorpsNotify::unionname() const {
  return *unionname_;
}
inline void CMessageFamilyJoinCorpsNotify::set_unionname(const ::std::string& value) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageFamilyJoinCorpsNotify::set_unionname(const char* value) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageFamilyJoinCorpsNotify::set_unionname(const char* value, size_t size) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFamilyJoinCorpsNotify::mutable_unionname() {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// -------------------------------------------------------------------

// CMessageFamilyLeaveCorpsRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageFamilyLeaveCorpsRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageFamilyLeaveCorpsRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageFamilyLeaveCorpsRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageFamilyLeaveCorpsRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Msgcode = 2;
inline bool CMessageFamilyLeaveCorpsRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageFamilyLeaveCorpsRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFamilyLeaveCorpsRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageFamilyLeaveCorpsRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageFamilyLeaveCorpsResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageFamilyLeaveCorpsResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageFamilyLeaveCorpsResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageFamilyLeaveCorpsResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageFamilyLeaveCorpsResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageFamilyLeaveCorpsResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageFamilyLeaveCorpsResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFamilyLeaveCorpsResponse::errcode() const {
  return errcode_;
}
inline void CMessageFamilyLeaveCorpsResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageFamilyLeaveCorpsNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageFamilyLeaveCorpsNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageFamilyLeaveCorpsNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageFamilyLeaveCorpsNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageFamilyLeaveCorpsNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 FamilyID = 2;
inline bool CMessageFamilyLeaveCorpsNotify::has_familyid() const {
  return _has_bit(1);
}
inline void CMessageFamilyLeaveCorpsNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFamilyLeaveCorpsNotify::familyid() const {
  return familyid_;
}
inline void CMessageFamilyLeaveCorpsNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(1);
  familyid_ = value;
}

// optional string FamilyName = 3;
inline bool CMessageFamilyLeaveCorpsNotify::has_familyname() const {
  return _has_bit(2);
}
inline void CMessageFamilyLeaveCorpsNotify::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageFamilyLeaveCorpsNotify::familyname() const {
  return *familyname_;
}
inline void CMessageFamilyLeaveCorpsNotify::set_familyname(const ::std::string& value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageFamilyLeaveCorpsNotify::set_familyname(const char* value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageFamilyLeaveCorpsNotify::set_familyname(const char* value, size_t size) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFamilyLeaveCorpsNotify::mutable_familyname() {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// -------------------------------------------------------------------

// CMessageKickFamilyRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageKickFamilyRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageKickFamilyRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageKickFamilyRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageKickFamilyRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 FamilyID = 2;
inline bool CMessageKickFamilyRequest::has_familyid() const {
  return _has_bit(1);
}
inline void CMessageKickFamilyRequest::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickFamilyRequest::familyid() const {
  return familyid_;
}
inline void CMessageKickFamilyRequest::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(1);
  familyid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickFamilyResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageKickFamilyResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageKickFamilyResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageKickFamilyResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageKickFamilyResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageKickFamilyResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageKickFamilyResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickFamilyResponse::errcode() const {
  return errcode_;
}
inline void CMessageKickFamilyResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional string FamilyName = 3;
inline bool CMessageKickFamilyResponse::has_familyname() const {
  return _has_bit(2);
}
inline void CMessageKickFamilyResponse::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageKickFamilyResponse::familyname() const {
  return *familyname_;
}
inline void CMessageKickFamilyResponse::set_familyname(const ::std::string& value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageKickFamilyResponse::set_familyname(const char* value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageKickFamilyResponse::set_familyname(const char* value, size_t size) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageKickFamilyResponse::mutable_familyname() {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// optional uint32 FamilyID = 4;
inline bool CMessageKickFamilyResponse::has_familyid() const {
  return _has_bit(3);
}
inline void CMessageKickFamilyResponse::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageKickFamilyResponse::familyid() const {
  return familyid_;
}
inline void CMessageKickFamilyResponse::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(3);
  familyid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickFamilyNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageKickFamilyNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageKickFamilyNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageKickFamilyNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageKickFamilyNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 FamilyID = 2;
inline bool CMessageKickFamilyNotify::has_familyid() const {
  return _has_bit(1);
}
inline void CMessageKickFamilyNotify::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickFamilyNotify::familyid() const {
  return familyid_;
}
inline void CMessageKickFamilyNotify::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(1);
  familyid_ = value;
}

// optional string FamilyName = 3;
inline bool CMessageKickFamilyNotify::has_familyname() const {
  return _has_bit(2);
}
inline void CMessageKickFamilyNotify::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageKickFamilyNotify::familyname() const {
  return *familyname_;
}
inline void CMessageKickFamilyNotify::set_familyname(const ::std::string& value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageKickFamilyNotify::set_familyname(const char* value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageKickFamilyNotify::set_familyname(const char* value, size_t size) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageKickFamilyNotify::mutable_familyname() {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// -------------------------------------------------------------------

// CMessageGetCorpsFamilyInfoRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsFamilyInfoRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsFamilyInfoRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsFamilyInfoRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsFamilyInfoRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageGetCorpsFamilyInfoRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsFamilyInfoRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsFamilyInfoRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageGetCorpsFamilyInfoRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsFamilyInfoResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsFamilyInfoResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsFamilyInfoResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsFamilyInfoResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsFamilyInfoResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated .PBCorpsMember CorpsMemberInfo = 2;
inline int CMessageGetCorpsFamilyInfoResponse::corpsmemberinfo_size() const {
  return corpsmemberinfo_.size();
}
inline void CMessageGetCorpsFamilyInfoResponse::clear_corpsmemberinfo() {
  corpsmemberinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsMember >&
CMessageGetCorpsFamilyInfoResponse::corpsmemberinfo() const {
  return corpsmemberinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsMember >*
CMessageGetCorpsFamilyInfoResponse::mutable_corpsmemberinfo() {
  return &corpsmemberinfo_;
}
inline const ::PBCorpsMember& CMessageGetCorpsFamilyInfoResponse::corpsmemberinfo(int index) const {
  return corpsmemberinfo_.Get(index);
}
inline ::PBCorpsMember* CMessageGetCorpsFamilyInfoResponse::mutable_corpsmemberinfo(int index) {
  return corpsmemberinfo_.Mutable(index);
}
inline ::PBCorpsMember* CMessageGetCorpsFamilyInfoResponse::add_corpsmemberinfo() {
  return corpsmemberinfo_.Add();
}

// -------------------------------------------------------------------

// CMessageGetCorpsPropertyRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsPropertyRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsPropertyRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsPropertyRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsPropertyRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageGetCorpsPropertyRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsPropertyRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsPropertyRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageGetCorpsPropertyRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsPropertyResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsPropertyResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsPropertyResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsPropertyResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsPropertyResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional .CorpsProperty CorpProperty = 2;
inline bool CMessageGetCorpsPropertyResponse::has_corpproperty() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsPropertyResponse::clear_corpproperty() {
  if (corpproperty_ != NULL) corpproperty_->::CorpsProperty::Clear();
  _clear_bit(1);
}
inline const ::CorpsProperty& CMessageGetCorpsPropertyResponse::corpproperty() const {
  return corpproperty_ != NULL ? *corpproperty_ : *default_instance_->corpproperty_;
}
inline ::CorpsProperty* CMessageGetCorpsPropertyResponse::mutable_corpproperty() {
  _set_bit(1);
  if (corpproperty_ == NULL) corpproperty_ = new ::CorpsProperty;
  return corpproperty_;
}

// -------------------------------------------------------------------

// CMessageGetCorpsFamilyMemberRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsFamilyMemberRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsFamilyMemberRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsFamilyMemberRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsFamilyMemberRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 FamilyID = 2;
inline bool CMessageGetCorpsFamilyMemberRequest::has_familyid() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsFamilyMemberRequest::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsFamilyMemberRequest::familyid() const {
  return familyid_;
}
inline void CMessageGetCorpsFamilyMemberRequest::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(1);
  familyid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsFamilyMemberResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsFamilyMemberResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsFamilyMemberResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsFamilyMemberResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsFamilyMemberResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 FamilyID = 2;
inline bool CMessageGetCorpsFamilyMemberResponse::has_familyid() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsFamilyMemberResponse::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsFamilyMemberResponse::familyid() const {
  return familyid_;
}
inline void CMessageGetCorpsFamilyMemberResponse::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(1);
  familyid_ = value;
}

// optional string FamilyName = 3;
inline bool CMessageGetCorpsFamilyMemberResponse::has_familyname() const {
  return _has_bit(2);
}
inline void CMessageGetCorpsFamilyMemberResponse::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageGetCorpsFamilyMemberResponse::familyname() const {
  return *familyname_;
}
inline void CMessageGetCorpsFamilyMemberResponse::set_familyname(const ::std::string& value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageGetCorpsFamilyMemberResponse::set_familyname(const char* value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageGetCorpsFamilyMemberResponse::set_familyname(const char* value, size_t size) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageGetCorpsFamilyMemberResponse::mutable_familyname() {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// optional .PBFamilyMemberList MemberList = 4;
inline bool CMessageGetCorpsFamilyMemberResponse::has_memberlist() const {
  return _has_bit(3);
}
inline void CMessageGetCorpsFamilyMemberResponse::clear_memberlist() {
  if (memberlist_ != NULL) memberlist_->::PBFamilyMemberList::Clear();
  _clear_bit(3);
}
inline const ::PBFamilyMemberList& CMessageGetCorpsFamilyMemberResponse::memberlist() const {
  return memberlist_ != NULL ? *memberlist_ : *default_instance_->memberlist_;
}
inline ::PBFamilyMemberList* CMessageGetCorpsFamilyMemberResponse::mutable_memberlist() {
  _set_bit(3);
  if (memberlist_ == NULL) memberlist_ = new ::PBFamilyMemberList;
  return memberlist_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsBulletinRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeCorpsBulletinRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsBulletinRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeCorpsBulletinRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeCorpsBulletinRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string Bulletin = 2;
inline bool CMessageChangeCorpsBulletinRequest::has_bulletin() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsBulletinRequest::clear_bulletin() {
  if (bulletin_ != &_default_bulletin_) {
    bulletin_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageChangeCorpsBulletinRequest::bulletin() const {
  return *bulletin_;
}
inline void CMessageChangeCorpsBulletinRequest::set_bulletin(const ::std::string& value) {
  _set_bit(1);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageChangeCorpsBulletinRequest::set_bulletin(const char* value) {
  _set_bit(1);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageChangeCorpsBulletinRequest::set_bulletin(const char* value, size_t size) {
  _set_bit(1);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsBulletinRequest::mutable_bulletin() {
  _set_bit(1);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  return bulletin_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsBulletinResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeCorpsBulletinResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsBulletinResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeCorpsBulletinResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeCorpsBulletinResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageChangeCorpsBulletinResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsBulletinResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsBulletinResponse::errcode() const {
  return errcode_;
}
inline void CMessageChangeCorpsBulletinResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional string Bulletin = 3;
inline bool CMessageChangeCorpsBulletinResponse::has_bulletin() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsBulletinResponse::clear_bulletin() {
  if (bulletin_ != &_default_bulletin_) {
    bulletin_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageChangeCorpsBulletinResponse::bulletin() const {
  return *bulletin_;
}
inline void CMessageChangeCorpsBulletinResponse::set_bulletin(const ::std::string& value) {
  _set_bit(2);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageChangeCorpsBulletinResponse::set_bulletin(const char* value) {
  _set_bit(2);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageChangeCorpsBulletinResponse::set_bulletin(const char* value, size_t size) {
  _set_bit(2);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsBulletinResponse::mutable_bulletin() {
  _set_bit(2);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  return bulletin_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsBulletinNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeCorpsBulletinNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsBulletinNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeCorpsBulletinNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeCorpsBulletinNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string Bulletin = 2;
inline bool CMessageChangeCorpsBulletinNotify::has_bulletin() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsBulletinNotify::clear_bulletin() {
  if (bulletin_ != &_default_bulletin_) {
    bulletin_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageChangeCorpsBulletinNotify::bulletin() const {
  return *bulletin_;
}
inline void CMessageChangeCorpsBulletinNotify::set_bulletin(const ::std::string& value) {
  _set_bit(1);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageChangeCorpsBulletinNotify::set_bulletin(const char* value) {
  _set_bit(1);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(value);
}
inline void CMessageChangeCorpsBulletinNotify::set_bulletin(const char* value, size_t size) {
  _set_bit(1);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  bulletin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsBulletinNotify::mutable_bulletin() {
  _set_bit(1);
  if (bulletin_ == &_default_bulletin_) {
    bulletin_ = new ::std::string;
  }
  return bulletin_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsHeaderRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeCorpsHeaderRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsHeaderRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeCorpsHeaderRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeCorpsHeaderRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MemberID = 2;
inline bool CMessageChangeCorpsHeaderRequest::has_memberid() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsHeaderRequest::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsHeaderRequest::memberid() const {
  return memberid_;
}
inline void CMessageChangeCorpsHeaderRequest::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(1);
  memberid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsHeaderResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeCorpsHeaderResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsHeaderResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeCorpsHeaderResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeCorpsHeaderResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageChangeCorpsHeaderResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsHeaderResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsHeaderResponse::errcode() const {
  return errcode_;
}
inline void CMessageChangeCorpsHeaderResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 MemberID = 3;
inline bool CMessageChangeCorpsHeaderResponse::has_memberid() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsHeaderResponse::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsHeaderResponse::memberid() const {
  return memberid_;
}
inline void CMessageChangeCorpsHeaderResponse::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(2);
  memberid_ = value;
}

// optional string MemberName = 4;
inline bool CMessageChangeCorpsHeaderResponse::has_membername() const {
  return _has_bit(3);
}
inline void CMessageChangeCorpsHeaderResponse::clear_membername() {
  if (membername_ != &_default_membername_) {
    membername_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageChangeCorpsHeaderResponse::membername() const {
  return *membername_;
}
inline void CMessageChangeCorpsHeaderResponse::set_membername(const ::std::string& value) {
  _set_bit(3);
  if (membername_ == &_default_membername_) {
    membername_ = new ::std::string;
  }
  membername_->assign(value);
}
inline void CMessageChangeCorpsHeaderResponse::set_membername(const char* value) {
  _set_bit(3);
  if (membername_ == &_default_membername_) {
    membername_ = new ::std::string;
  }
  membername_->assign(value);
}
inline void CMessageChangeCorpsHeaderResponse::set_membername(const char* value, size_t size) {
  _set_bit(3);
  if (membername_ == &_default_membername_) {
    membername_ = new ::std::string;
  }
  membername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsHeaderResponse::mutable_membername() {
  _set_bit(3);
  if (membername_ == &_default_membername_) {
    membername_ = new ::std::string;
  }
  return membername_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsHeaderNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeCorpsHeaderNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeCorpsHeaderNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeCorpsHeaderNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeCorpsHeaderNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 HeaderRoleID = 2;
inline bool CMessageChangeCorpsHeaderNotify::has_headerroleid() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsHeaderNotify::clear_headerroleid() {
  headerroleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsHeaderNotify::headerroleid() const {
  return headerroleid_;
}
inline void CMessageChangeCorpsHeaderNotify::set_headerroleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  headerroleid_ = value;
}

// optional string HeaderRoleName = 3;
inline bool CMessageChangeCorpsHeaderNotify::has_headerrolename() const {
  return _has_bit(2);
}
inline void CMessageChangeCorpsHeaderNotify::clear_headerrolename() {
  if (headerrolename_ != &_default_headerrolename_) {
    headerrolename_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageChangeCorpsHeaderNotify::headerrolename() const {
  return *headerrolename_;
}
inline void CMessageChangeCorpsHeaderNotify::set_headerrolename(const ::std::string& value) {
  _set_bit(2);
  if (headerrolename_ == &_default_headerrolename_) {
    headerrolename_ = new ::std::string;
  }
  headerrolename_->assign(value);
}
inline void CMessageChangeCorpsHeaderNotify::set_headerrolename(const char* value) {
  _set_bit(2);
  if (headerrolename_ == &_default_headerrolename_) {
    headerrolename_ = new ::std::string;
  }
  headerrolename_->assign(value);
}
inline void CMessageChangeCorpsHeaderNotify::set_headerrolename(const char* value, size_t size) {
  _set_bit(2);
  if (headerrolename_ == &_default_headerrolename_) {
    headerrolename_ = new ::std::string;
  }
  headerrolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsHeaderNotify::mutable_headerrolename() {
  _set_bit(2);
  if (headerrolename_ == &_default_headerrolename_) {
    headerrolename_ = new ::std::string;
  }
  return headerrolename_;
}

// optional uint32 MemberRoleID = 4;
inline bool CMessageChangeCorpsHeaderNotify::has_memberroleid() const {
  return _has_bit(3);
}
inline void CMessageChangeCorpsHeaderNotify::clear_memberroleid() {
  memberroleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsHeaderNotify::memberroleid() const {
  return memberroleid_;
}
inline void CMessageChangeCorpsHeaderNotify::set_memberroleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  memberroleid_ = value;
}

// optional string MemberRoleName = 5;
inline bool CMessageChangeCorpsHeaderNotify::has_memberrolename() const {
  return _has_bit(4);
}
inline void CMessageChangeCorpsHeaderNotify::clear_memberrolename() {
  if (memberrolename_ != &_default_memberrolename_) {
    memberrolename_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageChangeCorpsHeaderNotify::memberrolename() const {
  return *memberrolename_;
}
inline void CMessageChangeCorpsHeaderNotify::set_memberrolename(const ::std::string& value) {
  _set_bit(4);
  if (memberrolename_ == &_default_memberrolename_) {
    memberrolename_ = new ::std::string;
  }
  memberrolename_->assign(value);
}
inline void CMessageChangeCorpsHeaderNotify::set_memberrolename(const char* value) {
  _set_bit(4);
  if (memberrolename_ == &_default_memberrolename_) {
    memberrolename_ = new ::std::string;
  }
  memberrolename_->assign(value);
}
inline void CMessageChangeCorpsHeaderNotify::set_memberrolename(const char* value, size_t size) {
  _set_bit(4);
  if (memberrolename_ == &_default_memberrolename_) {
    memberrolename_ = new ::std::string;
  }
  memberrolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeCorpsHeaderNotify::mutable_memberrolename() {
  _set_bit(4);
  if (memberrolename_ == &_default_memberrolename_) {
    memberrolename_ = new ::std::string;
  }
  return memberrolename_;
}

// -------------------------------------------------------------------

// CMessageGetCorpsApplyListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsApplyListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsApplyListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsApplyListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsApplyListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageGetCorpsApplyListRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsApplyListRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsApplyListRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageGetCorpsApplyListRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsApplyListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsApplyListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsApplyListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsApplyListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsApplyListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageGetCorpsApplyListResponse::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsApplyListResponse::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsApplyListResponse::msgcode() const {
  return msgcode_;
}
inline void CMessageGetCorpsApplyListResponse::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// optional .PBCorpsApplyList CorpsApply = 3;
inline bool CMessageGetCorpsApplyListResponse::has_corpsapply() const {
  return _has_bit(2);
}
inline void CMessageGetCorpsApplyListResponse::clear_corpsapply() {
  if (corpsapply_ != NULL) corpsapply_->::PBCorpsApplyList::Clear();
  _clear_bit(2);
}
inline const ::PBCorpsApplyList& CMessageGetCorpsApplyListResponse::corpsapply() const {
  return corpsapply_ != NULL ? *corpsapply_ : *default_instance_->corpsapply_;
}
inline ::PBCorpsApplyList* CMessageGetCorpsApplyListResponse::mutable_corpsapply() {
  _set_bit(2);
  if (corpsapply_ == NULL) corpsapply_ = new ::PBCorpsApplyList;
  return corpsapply_;
}

// -------------------------------------------------------------------

// CMessageDisbandCorpsRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageDisbandCorpsRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageDisbandCorpsRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageDisbandCorpsRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageDisbandCorpsRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcEntityID = 2;
inline bool CMessageDisbandCorpsRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageDisbandCorpsRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDisbandCorpsRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageDisbandCorpsRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageDisbandCorpsResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageDisbandCorpsResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageDisbandCorpsResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageDisbandCorpsResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageDisbandCorpsResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageDisbandCorpsResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageDisbandCorpsResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDisbandCorpsResponse::errcode() const {
  return errcode_;
}
inline void CMessageDisbandCorpsResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageDisbandCorpsNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageDisbandCorpsNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageDisbandCorpsNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageDisbandCorpsNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageDisbandCorpsNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageDisbandCorpsNotify::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageDisbandCorpsNotify::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDisbandCorpsNotify::msgcode() const {
  return msgcode_;
}
inline void CMessageDisbandCorpsNotify::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCancelCorpsDisbandRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCancelCorpsDisbandRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCancelCorpsDisbandRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCancelCorpsDisbandRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCancelCorpsDisbandRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageCancelCorpsDisbandRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageCancelCorpsDisbandRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCancelCorpsDisbandRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageCancelCorpsDisbandRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCancelCorpsDisbandResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCancelCorpsDisbandResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCancelCorpsDisbandResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCancelCorpsDisbandResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCancelCorpsDisbandResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ErrCode = 2;
inline bool CMessageCancelCorpsDisbandResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageCancelCorpsDisbandResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCancelCorpsDisbandResponse::errcode() const {
  return errcode_;
}
inline void CMessageCancelCorpsDisbandResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageClearCorpsApplyRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageClearCorpsApplyRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageClearCorpsApplyRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageClearCorpsApplyRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageClearCorpsApplyRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageClearCorpsApplyRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageClearCorpsApplyRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageClearCorpsApplyRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageClearCorpsApplyRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageClearCorpsApplyResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageClearCorpsApplyResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageClearCorpsApplyResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageClearCorpsApplyResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageClearCorpsApplyResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ErrCode = 2;
inline bool CMessageClearCorpsApplyResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageClearCorpsApplyResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageClearCorpsApplyResponse::errcode() const {
  return errcode_;
}
inline void CMessageClearCorpsApplyResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageRefreshCorpsInfoRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageRefreshCorpsInfoRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageRefreshCorpsInfoRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageRefreshCorpsInfoRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageRefreshCorpsInfoRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageRefreshCorpsInfoRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageRefreshCorpsInfoRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRefreshCorpsInfoRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageRefreshCorpsInfoRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageRefreshCorpsInfoResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageRefreshCorpsInfoResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageRefreshCorpsInfoResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageRefreshCorpsInfoResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageRefreshCorpsInfoResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated .PBCorpsMember CorpsMember = 2;
inline int CMessageRefreshCorpsInfoResponse::corpsmember_size() const {
  return corpsmember_.size();
}
inline void CMessageRefreshCorpsInfoResponse::clear_corpsmember() {
  corpsmember_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsMember >&
CMessageRefreshCorpsInfoResponse::corpsmember() const {
  return corpsmember_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsMember >*
CMessageRefreshCorpsInfoResponse::mutable_corpsmember() {
  return &corpsmember_;
}
inline const ::PBCorpsMember& CMessageRefreshCorpsInfoResponse::corpsmember(int index) const {
  return corpsmember_.Get(index);
}
inline ::PBCorpsMember* CMessageRefreshCorpsInfoResponse::mutable_corpsmember(int index) {
  return corpsmember_.Mutable(index);
}
inline ::PBCorpsMember* CMessageRefreshCorpsInfoResponse::add_corpsmember() {
  return corpsmember_.Add();
}

// -------------------------------------------------------------------

// CMessageGetCorpsListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CurPage = 2;
inline bool CMessageGetCorpsListRequest::has_curpage() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsListRequest::clear_curpage() {
  curpage_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsListRequest::curpage() const {
  return curpage_;
}
inline void CMessageGetCorpsListRequest::set_curpage(::google::protobuf::uint32 value) {
  _set_bit(1);
  curpage_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional .CorpsInfoList CorpsList = 2;
inline bool CMessageGetCorpsListResponse::has_corpslist() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsListResponse::clear_corpslist() {
  if (corpslist_ != NULL) corpslist_->::CorpsInfoList::Clear();
  _clear_bit(1);
}
inline const ::CorpsInfoList& CMessageGetCorpsListResponse::corpslist() const {
  return corpslist_ != NULL ? *corpslist_ : *default_instance_->corpslist_;
}
inline ::CorpsInfoList* CMessageGetCorpsListResponse::mutable_corpslist() {
  _set_bit(1);
  if (corpslist_ == NULL) corpslist_ = new ::CorpsInfoList;
  return corpslist_;
}

// optional uint32 CurPage = 3;
inline bool CMessageGetCorpsListResponse::has_curpage() const {
  return _has_bit(2);
}
inline void CMessageGetCorpsListResponse::clear_curpage() {
  curpage_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetCorpsListResponse::curpage() const {
  return curpage_;
}
inline void CMessageGetCorpsListResponse::set_curpage(::google::protobuf::uint32 value) {
  _set_bit(2);
  curpage_ = value;
}

// optional uint32 TotalPage = 4;
inline bool CMessageGetCorpsListResponse::has_totalpage() const {
  return _has_bit(3);
}
inline void CMessageGetCorpsListResponse::clear_totalpage() {
  totalpage_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetCorpsListResponse::totalpage() const {
  return totalpage_;
}
inline void CMessageGetCorpsListResponse::set_totalpage(::google::protobuf::uint32 value) {
  _set_bit(3);
  totalpage_ = value;
}

// -------------------------------------------------------------------

// CMessageSetCorpsPostRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageSetCorpsPostRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageSetCorpsPostRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageSetCorpsPostRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageSetCorpsPostRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MemberID = 2;
inline bool CMessageSetCorpsPostRequest::has_memberid() const {
  return _has_bit(1);
}
inline void CMessageSetCorpsPostRequest::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostRequest::memberid() const {
  return memberid_;
}
inline void CMessageSetCorpsPostRequest::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(1);
  memberid_ = value;
}

// optional uint32 Post = 3;
inline bool CMessageSetCorpsPostRequest::has_post() const {
  return _has_bit(2);
}
inline void CMessageSetCorpsPostRequest::clear_post() {
  post_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostRequest::post() const {
  return post_;
}
inline void CMessageSetCorpsPostRequest::set_post(::google::protobuf::uint32 value) {
  _set_bit(2);
  post_ = value;
}

// -------------------------------------------------------------------

// CMessageSetCorpsPostResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageSetCorpsPostResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageSetCorpsPostResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageSetCorpsPostResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageSetCorpsPostResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MemberID = 2;
inline bool CMessageSetCorpsPostResponse::has_memberid() const {
  return _has_bit(1);
}
inline void CMessageSetCorpsPostResponse::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostResponse::memberid() const {
  return memberid_;
}
inline void CMessageSetCorpsPostResponse::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(1);
  memberid_ = value;
}

// optional uint32 Post = 3;
inline bool CMessageSetCorpsPostResponse::has_post() const {
  return _has_bit(2);
}
inline void CMessageSetCorpsPostResponse::clear_post() {
  post_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostResponse::post() const {
  return post_;
}
inline void CMessageSetCorpsPostResponse::set_post(::google::protobuf::uint32 value) {
  _set_bit(2);
  post_ = value;
}

// optional uint32 Errcode = 4;
inline bool CMessageSetCorpsPostResponse::has_errcode() const {
  return _has_bit(3);
}
inline void CMessageSetCorpsPostResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostResponse::errcode() const {
  return errcode_;
}
inline void CMessageSetCorpsPostResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(3);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageLevelUPCorpsRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageLevelUPCorpsRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageLevelUPCorpsRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageLevelUPCorpsRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageLevelUPCorpsRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MsgCode = 2;
inline bool CMessageLevelUPCorpsRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageLevelUPCorpsRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLevelUPCorpsRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageLevelUPCorpsRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageLevelUPCorpsResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageLevelUPCorpsResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageLevelUPCorpsResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageLevelUPCorpsResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageLevelUPCorpsResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageLevelUPCorpsResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageLevelUPCorpsResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLevelUPCorpsResponse::errcode() const {
  return errcode_;
}
inline void CMessageLevelUPCorpsResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 Level = 3;
inline bool CMessageLevelUPCorpsResponse::has_level() const {
  return _has_bit(2);
}
inline void CMessageLevelUPCorpsResponse::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLevelUPCorpsResponse::level() const {
  return level_;
}
inline void CMessageLevelUPCorpsResponse::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// -------------------------------------------------------------------

// CMessageContributeCorpsMoneyRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageContributeCorpsMoneyRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageContributeCorpsMoneyRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageContributeCorpsMoneyRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageContributeCorpsMoneyRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Money = 2;
inline bool CMessageContributeCorpsMoneyRequest::has_money() const {
  return _has_bit(1);
}
inline void CMessageContributeCorpsMoneyRequest::clear_money() {
  money_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageContributeCorpsMoneyRequest::money() const {
  return money_;
}
inline void CMessageContributeCorpsMoneyRequest::set_money(::google::protobuf::uint32 value) {
  _set_bit(1);
  money_ = value;
}

// -------------------------------------------------------------------

// CMessageContributeCorpsMoneyResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageContributeCorpsMoneyResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageContributeCorpsMoneyResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageContributeCorpsMoneyResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageContributeCorpsMoneyResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageContributeCorpsMoneyResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageContributeCorpsMoneyResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageContributeCorpsMoneyResponse::errcode() const {
  return errcode_;
}
inline void CMessageContributeCorpsMoneyResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageContributeCorpsMoneyResponse::has_money() const {
  return _has_bit(2);
}
inline void CMessageContributeCorpsMoneyResponse::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageContributeCorpsMoneyResponse::money() const {
  return money_;
}
inline void CMessageContributeCorpsMoneyResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// -------------------------------------------------------------------

// CMessageFamilyContributeMoneyRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageFamilyContributeMoneyRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageFamilyContributeMoneyRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageFamilyContributeMoneyRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageFamilyContributeMoneyRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Money = 2;
inline bool CMessageFamilyContributeMoneyRequest::has_money() const {
  return _has_bit(1);
}
inline void CMessageFamilyContributeMoneyRequest::clear_money() {
  money_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFamilyContributeMoneyRequest::money() const {
  return money_;
}
inline void CMessageFamilyContributeMoneyRequest::set_money(::google::protobuf::uint32 value) {
  _set_bit(1);
  money_ = value;
}

// -------------------------------------------------------------------

// CMessageFamilyContributeMoneyResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageFamilyContributeMoneyResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageFamilyContributeMoneyResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageFamilyContributeMoneyResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageFamilyContributeMoneyResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageFamilyContributeMoneyResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageFamilyContributeMoneyResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFamilyContributeMoneyResponse::errcode() const {
  return errcode_;
}
inline void CMessageFamilyContributeMoneyResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageFamilyContributeMoneyResponse::has_money() const {
  return _has_bit(2);
}
inline void CMessageFamilyContributeMoneyResponse::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFamilyContributeMoneyResponse::money() const {
  return money_;
}
inline void CMessageFamilyContributeMoneyResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// -------------------------------------------------------------------

// CMessageSetMemberNameRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageSetMemberNameRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageSetMemberNameRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageSetMemberNameRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageSetMemberNameRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MemberID = 2;
inline bool CMessageSetMemberNameRequest::has_memberid() const {
  return _has_bit(1);
}
inline void CMessageSetMemberNameRequest::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSetMemberNameRequest::memberid() const {
  return memberid_;
}
inline void CMessageSetMemberNameRequest::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(1);
  memberid_ = value;
}

// optional string Name = 3;
inline bool CMessageSetMemberNameRequest::has_name() const {
  return _has_bit(2);
}
inline void CMessageSetMemberNameRequest::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageSetMemberNameRequest::name() const {
  return *name_;
}
inline void CMessageSetMemberNameRequest::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageSetMemberNameRequest::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageSetMemberNameRequest::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSetMemberNameRequest::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// -------------------------------------------------------------------

// CMessageSetMemberNameResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageSetMemberNameResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageSetMemberNameResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageSetMemberNameResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageSetMemberNameResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageSetMemberNameResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageSetMemberNameResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSetMemberNameResponse::errcode() const {
  return errcode_;
}
inline void CMessageSetMemberNameResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 MemberID = 3;
inline bool CMessageSetMemberNameResponse::has_memberid() const {
  return _has_bit(2);
}
inline void CMessageSetMemberNameResponse::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSetMemberNameResponse::memberid() const {
  return memberid_;
}
inline void CMessageSetMemberNameResponse::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(2);
  memberid_ = value;
}

// optional string Name = 4;
inline bool CMessageSetMemberNameResponse::has_name() const {
  return _has_bit(3);
}
inline void CMessageSetMemberNameResponse::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageSetMemberNameResponse::name() const {
  return *name_;
}
inline void CMessageSetMemberNameResponse::set_name(const ::std::string& value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageSetMemberNameResponse::set_name(const char* value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageSetMemberNameResponse::set_name(const char* value, size_t size) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSetMemberNameResponse::mutable_name() {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// -------------------------------------------------------------------

// CMessageSetCorpsPostNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageSetCorpsPostNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageSetCorpsPostNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageSetCorpsPostNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageSetCorpsPostNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ManagerID = 2;
inline bool CMessageSetCorpsPostNotify::has_managerid() const {
  return _has_bit(1);
}
inline void CMessageSetCorpsPostNotify::clear_managerid() {
  managerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostNotify::managerid() const {
  return managerid_;
}
inline void CMessageSetCorpsPostNotify::set_managerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  managerid_ = value;
}

// optional string ManagerName = 3;
inline bool CMessageSetCorpsPostNotify::has_managername() const {
  return _has_bit(2);
}
inline void CMessageSetCorpsPostNotify::clear_managername() {
  if (managername_ != &_default_managername_) {
    managername_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageSetCorpsPostNotify::managername() const {
  return *managername_;
}
inline void CMessageSetCorpsPostNotify::set_managername(const ::std::string& value) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(value);
}
inline void CMessageSetCorpsPostNotify::set_managername(const char* value) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(value);
}
inline void CMessageSetCorpsPostNotify::set_managername(const char* value, size_t size) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSetCorpsPostNotify::mutable_managername() {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  return managername_;
}

// optional uint32 MemberID = 4;
inline bool CMessageSetCorpsPostNotify::has_memberid() const {
  return _has_bit(3);
}
inline void CMessageSetCorpsPostNotify::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostNotify::memberid() const {
  return memberid_;
}
inline void CMessageSetCorpsPostNotify::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(3);
  memberid_ = value;
}

// optional string MemberName = 5;
inline bool CMessageSetCorpsPostNotify::has_membername() const {
  return _has_bit(4);
}
inline void CMessageSetCorpsPostNotify::clear_membername() {
  if (membername_ != &_default_membername_) {
    membername_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageSetCorpsPostNotify::membername() const {
  return *membername_;
}
inline void CMessageSetCorpsPostNotify::set_membername(const ::std::string& value) {
  _set_bit(4);
  if (membername_ == &_default_membername_) {
    membername_ = new ::std::string;
  }
  membername_->assign(value);
}
inline void CMessageSetCorpsPostNotify::set_membername(const char* value) {
  _set_bit(4);
  if (membername_ == &_default_membername_) {
    membername_ = new ::std::string;
  }
  membername_->assign(value);
}
inline void CMessageSetCorpsPostNotify::set_membername(const char* value, size_t size) {
  _set_bit(4);
  if (membername_ == &_default_membername_) {
    membername_ = new ::std::string;
  }
  membername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSetCorpsPostNotify::mutable_membername() {
  _set_bit(4);
  if (membername_ == &_default_membername_) {
    membername_ = new ::std::string;
  }
  return membername_;
}

// optional uint32 OriginalPost = 6;
inline bool CMessageSetCorpsPostNotify::has_originalpost() const {
  return _has_bit(5);
}
inline void CMessageSetCorpsPostNotify::clear_originalpost() {
  originalpost_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostNotify::originalpost() const {
  return originalpost_;
}
inline void CMessageSetCorpsPostNotify::set_originalpost(::google::protobuf::uint32 value) {
  _set_bit(5);
  originalpost_ = value;
}

// optional uint32 NewPost = 7;
inline bool CMessageSetCorpsPostNotify::has_newpost() const {
  return _has_bit(6);
}
inline void CMessageSetCorpsPostNotify::clear_newpost() {
  newpost_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageSetCorpsPostNotify::newpost() const {
  return newpost_;
}
inline void CMessageSetCorpsPostNotify::set_newpost(::google::protobuf::uint32 value) {
  _set_bit(6);
  newpost_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsLevelUPNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsLevelUPNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsLevelUPNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsLevelUPNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsLevelUPNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Level = 2;
inline bool CMessageCorpsLevelUPNotify::has_level() const {
  return _has_bit(1);
}
inline void CMessageCorpsLevelUPNotify::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsLevelUPNotify::level() const {
  return level_;
}
inline void CMessageCorpsLevelUPNotify::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageCorpsLevelUPNotify::has_money() const {
  return _has_bit(2);
}
inline void CMessageCorpsLevelUPNotify::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsLevelUPNotify::money() const {
  return money_;
}
inline void CMessageCorpsLevelUPNotify::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional uint32 Glory = 4;
inline bool CMessageCorpsLevelUPNotify::has_glory() const {
  return _has_bit(3);
}
inline void CMessageCorpsLevelUPNotify::clear_glory() {
  glory_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsLevelUPNotify::glory() const {
  return glory_;
}
inline void CMessageCorpsLevelUPNotify::set_glory(::google::protobuf::uint32 value) {
  _set_bit(3);
  glory_ = value;
}

// optional uint32 MaxFamilyNum = 5;
inline bool CMessageCorpsLevelUPNotify::has_maxfamilynum() const {
  return _has_bit(4);
}
inline void CMessageCorpsLevelUPNotify::clear_maxfamilynum() {
  maxfamilynum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsLevelUPNotify::maxfamilynum() const {
  return maxfamilynum_;
}
inline void CMessageCorpsLevelUPNotify::set_maxfamilynum(::google::protobuf::uint32 value) {
  _set_bit(4);
  maxfamilynum_ = value;
}

// optional uint32 MaxGeneralNum = 6;
inline bool CMessageCorpsLevelUPNotify::has_maxgeneralnum() const {
  return _has_bit(5);
}
inline void CMessageCorpsLevelUPNotify::clear_maxgeneralnum() {
  maxgeneralnum_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCorpsLevelUPNotify::maxgeneralnum() const {
  return maxgeneralnum_;
}
inline void CMessageCorpsLevelUPNotify::set_maxgeneralnum(::google::protobuf::uint32 value) {
  _set_bit(5);
  maxgeneralnum_ = value;
}

// optional uint32 MaxCounsellorNum = 7;
inline bool CMessageCorpsLevelUPNotify::has_maxcounsellornum() const {
  return _has_bit(6);
}
inline void CMessageCorpsLevelUPNotify::clear_maxcounsellornum() {
  maxcounsellornum_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCorpsLevelUPNotify::maxcounsellornum() const {
  return maxcounsellornum_;
}
inline void CMessageCorpsLevelUPNotify::set_maxcounsellornum(::google::protobuf::uint32 value) {
  _set_bit(6);
  maxcounsellornum_ = value;
}

// optional uint32 LevelMoney = 8;
inline bool CMessageCorpsLevelUPNotify::has_levelmoney() const {
  return _has_bit(7);
}
inline void CMessageCorpsLevelUPNotify::clear_levelmoney() {
  levelmoney_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageCorpsLevelUPNotify::levelmoney() const {
  return levelmoney_;
}
inline void CMessageCorpsLevelUPNotify::set_levelmoney(::google::protobuf::uint32 value) {
  _set_bit(7);
  levelmoney_ = value;
}

// optional uint32 LevelGlory = 9;
inline bool CMessageCorpsLevelUPNotify::has_levelglory() const {
  return _has_bit(8);
}
inline void CMessageCorpsLevelUPNotify::clear_levelglory() {
  levelglory_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageCorpsLevelUPNotify::levelglory() const {
  return levelglory_;
}
inline void CMessageCorpsLevelUPNotify::set_levelglory(::google::protobuf::uint32 value) {
  _set_bit(8);
  levelglory_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBattleBidRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsBattleBidRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsBattleBidRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsBattleBidRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsBattleBidRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsBattleBidRequest::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsBattleBidRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleBidRequest::npcid() const {
  return npcid_;
}
inline void CMessageCorpsBattleBidRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageCorpsBattleBidRequest::has_money() const {
  return _has_bit(2);
}
inline void CMessageCorpsBattleBidRequest::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleBidRequest::money() const {
  return money_;
}
inline void CMessageCorpsBattleBidRequest::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional uint32 MinIncMoney = 4;
inline bool CMessageCorpsBattleBidRequest::has_minincmoney() const {
  return _has_bit(3);
}
inline void CMessageCorpsBattleBidRequest::clear_minincmoney() {
  minincmoney_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleBidRequest::minincmoney() const {
  return minincmoney_;
}
inline void CMessageCorpsBattleBidRequest::set_minincmoney(::google::protobuf::uint32 value) {
  _set_bit(3);
  minincmoney_ = value;
}

// optional uint32 MapID = 5;
inline bool CMessageCorpsBattleBidRequest::has_mapid() const {
  return _has_bit(4);
}
inline void CMessageCorpsBattleBidRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleBidRequest::mapid() const {
  return mapid_;
}
inline void CMessageCorpsBattleBidRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(4);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBattleBidResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsBattleBidResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsBattleBidResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsBattleBidResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsBattleBidResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageCorpsBattleBidResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageCorpsBattleBidResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleBidResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsBattleBidResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// optional uint32 NpcID = 3;
inline bool CMessageCorpsBattleBidResponse::has_npcid() const {
  return _has_bit(2);
}
inline void CMessageCorpsBattleBidResponse::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleBidResponse::npcid() const {
  return npcid_;
}
inline void CMessageCorpsBattleBidResponse::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcid_ = value;
}

// optional uint32 Money = 4;
inline bool CMessageCorpsBattleBidResponse::has_money() const {
  return _has_bit(3);
}
inline void CMessageCorpsBattleBidResponse::clear_money() {
  money_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleBidResponse::money() const {
  return money_;
}
inline void CMessageCorpsBattleBidResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(3);
  money_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsQueryBidRankRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsQueryBidRankRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsQueryBidRankRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsQueryBidRankRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsQueryBidRankRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsQueryBidRankRequest::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsQueryBidRankRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryBidRankRequest::npcid() const {
  return npcid_;
}
inline void CMessageCorpsQueryBidRankRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// optional uint32 BattleCity = 3;
inline bool CMessageCorpsQueryBidRankRequest::has_battlecity() const {
  return _has_bit(2);
}
inline void CMessageCorpsQueryBidRankRequest::clear_battlecity() {
  battlecity_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryBidRankRequest::battlecity() const {
  return battlecity_;
}
inline void CMessageCorpsQueryBidRankRequest::set_battlecity(::google::protobuf::uint32 value) {
  _set_bit(2);
  battlecity_ = value;
}

// -------------------------------------------------------------------

// PBBidRank

// optional string CorpsName = 1;
inline bool PBBidRank::has_corpsname() const {
  return _has_bit(0);
}
inline void PBBidRank::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBBidRank::corpsname() const {
  return *corpsname_;
}
inline void PBBidRank::set_corpsname(const ::std::string& value) {
  _set_bit(0);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBBidRank::set_corpsname(const char* value) {
  _set_bit(0);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBBidRank::set_corpsname(const char* value, size_t size) {
  _set_bit(0);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBidRank::mutable_corpsname() {
  _set_bit(0);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 Money = 2;
inline bool PBBidRank::has_money() const {
  return _has_bit(1);
}
inline void PBBidRank::clear_money() {
  money_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBBidRank::money() const {
  return money_;
}
inline void PBBidRank::set_money(::google::protobuf::uint32 value) {
  _set_bit(1);
  money_ = value;
}

// optional uint32 Nationality = 3;
inline bool PBBidRank::has_nationality() const {
  return _has_bit(2);
}
inline void PBBidRank::clear_nationality() {
  nationality_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBBidRank::nationality() const {
  return nationality_;
}
inline void PBBidRank::set_nationality(::google::protobuf::uint32 value) {
  _set_bit(2);
  nationality_ = value;
}

// optional uint32 Victory = 4;
inline bool PBBidRank::has_victory() const {
  return _has_bit(3);
}
inline void PBBidRank::clear_victory() {
  victory_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBBidRank::victory() const {
  return victory_;
}
inline void PBBidRank::set_victory(::google::protobuf::uint32 value) {
  _set_bit(3);
  victory_ = value;
}

// optional uint32 Loser = 5;
inline bool PBBidRank::has_loser() const {
  return _has_bit(4);
}
inline void PBBidRank::clear_loser() {
  loser_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBBidRank::loser() const {
  return loser_;
}
inline void PBBidRank::set_loser(::google::protobuf::uint32 value) {
  _set_bit(4);
  loser_ = value;
}

// optional uint32 StarLevel = 6;
inline bool PBBidRank::has_starlevel() const {
  return _has_bit(5);
}
inline void PBBidRank::clear_starlevel() {
  starlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBBidRank::starlevel() const {
  return starlevel_;
}
inline void PBBidRank::set_starlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  starlevel_ = value;
}

// optional uint32 CorpsID = 7;
inline bool PBBidRank::has_corpsid() const {
  return _has_bit(6);
}
inline void PBBidRank::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBBidRank::corpsid() const {
  return corpsid_;
}
inline void PBBidRank::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(6);
  corpsid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsQueryBidRankResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsQueryBidRankResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsQueryBidRankResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsQueryBidRankResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsQueryBidRankResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsQueryBidRankResponse::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsQueryBidRankResponse::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryBidRankResponse::npcid() const {
  return npcid_;
}
inline void CMessageCorpsQueryBidRankResponse::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// optional string CityOwner = 3;
inline bool CMessageCorpsQueryBidRankResponse::has_cityowner() const {
  return _has_bit(2);
}
inline void CMessageCorpsQueryBidRankResponse::clear_cityowner() {
  if (cityowner_ != &_default_cityowner_) {
    cityowner_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsQueryBidRankResponse::cityowner() const {
  return *cityowner_;
}
inline void CMessageCorpsQueryBidRankResponse::set_cityowner(const ::std::string& value) {
  _set_bit(2);
  if (cityowner_ == &_default_cityowner_) {
    cityowner_ = new ::std::string;
  }
  cityowner_->assign(value);
}
inline void CMessageCorpsQueryBidRankResponse::set_cityowner(const char* value) {
  _set_bit(2);
  if (cityowner_ == &_default_cityowner_) {
    cityowner_ = new ::std::string;
  }
  cityowner_->assign(value);
}
inline void CMessageCorpsQueryBidRankResponse::set_cityowner(const char* value, size_t size) {
  _set_bit(2);
  if (cityowner_ == &_default_cityowner_) {
    cityowner_ = new ::std::string;
  }
  cityowner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsQueryBidRankResponse::mutable_cityowner() {
  _set_bit(2);
  if (cityowner_ == &_default_cityowner_) {
    cityowner_ = new ::std::string;
  }
  return cityowner_;
}

// repeated .PBBidRank RankInfo = 4;
inline int CMessageCorpsQueryBidRankResponse::rankinfo_size() const {
  return rankinfo_.size();
}
inline void CMessageCorpsQueryBidRankResponse::clear_rankinfo() {
  rankinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBidRank >&
CMessageCorpsQueryBidRankResponse::rankinfo() const {
  return rankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBidRank >*
CMessageCorpsQueryBidRankResponse::mutable_rankinfo() {
  return &rankinfo_;
}
inline const ::PBBidRank& CMessageCorpsQueryBidRankResponse::rankinfo(int index) const {
  return rankinfo_.Get(index);
}
inline ::PBBidRank* CMessageCorpsQueryBidRankResponse::mutable_rankinfo(int index) {
  return rankinfo_.Mutable(index);
}
inline ::PBBidRank* CMessageCorpsQueryBidRankResponse::add_rankinfo() {
  return rankinfo_.Add();
}

// -------------------------------------------------------------------

// CMessageCorpsSelectFamilyBattleRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsSelectFamilyBattleRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsSelectFamilyBattleRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsSelectFamilyBattleRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsSelectFamilyBattleRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated uint32 FamilyID = 2;
inline int CMessageCorpsSelectFamilyBattleRequest::familyid_size() const {
  return familyid_.size();
}
inline void CMessageCorpsSelectFamilyBattleRequest::clear_familyid() {
  familyid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCorpsSelectFamilyBattleRequest::familyid() const {
  return familyid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCorpsSelectFamilyBattleRequest::mutable_familyid() {
  return &familyid_;
}
inline ::google::protobuf::uint32 CMessageCorpsSelectFamilyBattleRequest::familyid(int index) const {
  return familyid_.Get(index);
}
inline void CMessageCorpsSelectFamilyBattleRequest::set_familyid(int index, ::google::protobuf::uint32 value) {
  familyid_.Set(index, value);
}
inline void CMessageCorpsSelectFamilyBattleRequest::add_familyid(::google::protobuf::uint32 value) {
  familyid_.Add(value);
}

// -------------------------------------------------------------------

// CMessageCorpsSelectFamilyBattleResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsSelectFamilyBattleResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsSelectFamilyBattleResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsSelectFamilyBattleResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsSelectFamilyBattleResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageCorpsSelectFamilyBattleResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageCorpsSelectFamilyBattleResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsSelectFamilyBattleResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsSelectFamilyBattleResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsPvPStarLevelUpNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsPvPStarLevelUpNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsPvPStarLevelUpNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsPvPStarLevelUpNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsPvPStarLevelUpNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 PvPLevel = 2;
inline bool CMessageCorpsPvPStarLevelUpNotify::has_pvplevel() const {
  return _has_bit(1);
}
inline void CMessageCorpsPvPStarLevelUpNotify::clear_pvplevel() {
  pvplevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsPvPStarLevelUpNotify::pvplevel() const {
  return pvplevel_;
}
inline void CMessageCorpsPvPStarLevelUpNotify::set_pvplevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  pvplevel_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBattleRightsNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsBattleRightsNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsBattleRightsNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsBattleRightsNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsBattleRightsNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsBattleRightsNotify::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsBattleRightsNotify::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleRightsNotify::npcid() const {
  return npcid_;
}
inline void CMessageCorpsBattleRightsNotify::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// optional string DesCorpsName = 3;
inline bool CMessageCorpsBattleRightsNotify::has_descorpsname() const {
  return _has_bit(2);
}
inline void CMessageCorpsBattleRightsNotify::clear_descorpsname() {
  if (descorpsname_ != &_default_descorpsname_) {
    descorpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsBattleRightsNotify::descorpsname() const {
  return *descorpsname_;
}
inline void CMessageCorpsBattleRightsNotify::set_descorpsname(const ::std::string& value) {
  _set_bit(2);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsBattleRightsNotify::set_descorpsname(const char* value) {
  _set_bit(2);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsBattleRightsNotify::set_descorpsname(const char* value, size_t size) {
  _set_bit(2);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsBattleRightsNotify::mutable_descorpsname() {
  _set_bit(2);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  return descorpsname_;
}

// optional uint32 Type = 4;
inline bool CMessageCorpsBattleRightsNotify::has_type() const {
  return _has_bit(3);
}
inline void CMessageCorpsBattleRightsNotify::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleRightsNotify::type() const {
  return type_;
}
inline void CMessageCorpsBattleRightsNotify::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsRecBattleRightsNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsRecBattleRightsNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsRecBattleRightsNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsRecBattleRightsNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsRecBattleRightsNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsRecBattleRightsNotify::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsRecBattleRightsNotify::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsRecBattleRightsNotify::npcid() const {
  return npcid_;
}
inline void CMessageCorpsRecBattleRightsNotify::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// optional uint32 SrcCorpsID = 3;
inline bool CMessageCorpsRecBattleRightsNotify::has_srccorpsid() const {
  return _has_bit(2);
}
inline void CMessageCorpsRecBattleRightsNotify::clear_srccorpsid() {
  srccorpsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsRecBattleRightsNotify::srccorpsid() const {
  return srccorpsid_;
}
inline void CMessageCorpsRecBattleRightsNotify::set_srccorpsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srccorpsid_ = value;
}

// optional string SrcCorpsName = 4;
inline bool CMessageCorpsRecBattleRightsNotify::has_srccorpsname() const {
  return _has_bit(3);
}
inline void CMessageCorpsRecBattleRightsNotify::clear_srccorpsname() {
  if (srccorpsname_ != &_default_srccorpsname_) {
    srccorpsname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCorpsRecBattleRightsNotify::srccorpsname() const {
  return *srccorpsname_;
}
inline void CMessageCorpsRecBattleRightsNotify::set_srccorpsname(const ::std::string& value) {
  _set_bit(3);
  if (srccorpsname_ == &_default_srccorpsname_) {
    srccorpsname_ = new ::std::string;
  }
  srccorpsname_->assign(value);
}
inline void CMessageCorpsRecBattleRightsNotify::set_srccorpsname(const char* value) {
  _set_bit(3);
  if (srccorpsname_ == &_default_srccorpsname_) {
    srccorpsname_ = new ::std::string;
  }
  srccorpsname_->assign(value);
}
inline void CMessageCorpsRecBattleRightsNotify::set_srccorpsname(const char* value, size_t size) {
  _set_bit(3);
  if (srccorpsname_ == &_default_srccorpsname_) {
    srccorpsname_ = new ::std::string;
  }
  srccorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsRecBattleRightsNotify::mutable_srccorpsname() {
  _set_bit(3);
  if (srccorpsname_ == &_default_srccorpsname_) {
    srccorpsname_ = new ::std::string;
  }
  return srccorpsname_;
}

// optional uint32 DesCorpsID = 5;
inline bool CMessageCorpsRecBattleRightsNotify::has_descorpsid() const {
  return _has_bit(4);
}
inline void CMessageCorpsRecBattleRightsNotify::clear_descorpsid() {
  descorpsid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsRecBattleRightsNotify::descorpsid() const {
  return descorpsid_;
}
inline void CMessageCorpsRecBattleRightsNotify::set_descorpsid(::google::protobuf::uint32 value) {
  _set_bit(4);
  descorpsid_ = value;
}

// optional string DesCorpsName = 6;
inline bool CMessageCorpsRecBattleRightsNotify::has_descorpsname() const {
  return _has_bit(5);
}
inline void CMessageCorpsRecBattleRightsNotify::clear_descorpsname() {
  if (descorpsname_ != &_default_descorpsname_) {
    descorpsname_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageCorpsRecBattleRightsNotify::descorpsname() const {
  return *descorpsname_;
}
inline void CMessageCorpsRecBattleRightsNotify::set_descorpsname(const ::std::string& value) {
  _set_bit(5);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsRecBattleRightsNotify::set_descorpsname(const char* value) {
  _set_bit(5);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsRecBattleRightsNotify::set_descorpsname(const char* value, size_t size) {
  _set_bit(5);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsRecBattleRightsNotify::mutable_descorpsname() {
  _set_bit(5);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  return descorpsname_;
}

// optional uint32 Money = 7;
inline bool CMessageCorpsRecBattleRightsNotify::has_money() const {
  return _has_bit(6);
}
inline void CMessageCorpsRecBattleRightsNotify::clear_money() {
  money_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCorpsRecBattleRightsNotify::money() const {
  return money_;
}
inline void CMessageCorpsRecBattleRightsNotify::set_money(::google::protobuf::uint32 value) {
  _set_bit(6);
  money_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsSelectMemberBattleRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsSelectMemberBattleRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsSelectMemberBattleRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsSelectMemberBattleRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsSelectMemberBattleRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated uint32 MemberList = 2;
inline int CMessageCorpsSelectMemberBattleRequest::memberlist_size() const {
  return memberlist_.size();
}
inline void CMessageCorpsSelectMemberBattleRequest::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCorpsSelectMemberBattleRequest::memberlist() const {
  return memberlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCorpsSelectMemberBattleRequest::mutable_memberlist() {
  return &memberlist_;
}
inline ::google::protobuf::uint32 CMessageCorpsSelectMemberBattleRequest::memberlist(int index) const {
  return memberlist_.Get(index);
}
inline void CMessageCorpsSelectMemberBattleRequest::set_memberlist(int index, ::google::protobuf::uint32 value) {
  memberlist_.Set(index, value);
}
inline void CMessageCorpsSelectMemberBattleRequest::add_memberlist(::google::protobuf::uint32 value) {
  memberlist_.Add(value);
}

// optional uint32 BattleCity = 3;
inline bool CMessageCorpsSelectMemberBattleRequest::has_battlecity() const {
  return _has_bit(2);
}
inline void CMessageCorpsSelectMemberBattleRequest::clear_battlecity() {
  battlecity_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsSelectMemberBattleRequest::battlecity() const {
  return battlecity_;
}
inline void CMessageCorpsSelectMemberBattleRequest::set_battlecity(::google::protobuf::uint32 value) {
  _set_bit(2);
  battlecity_ = value;
}

// optional uint32 Type = 4;
inline bool CMessageCorpsSelectMemberBattleRequest::has_type() const {
  return _has_bit(3);
}
inline void CMessageCorpsSelectMemberBattleRequest::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsSelectMemberBattleRequest::type() const {
  return type_;
}
inline void CMessageCorpsSelectMemberBattleRequest::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsSelectMemberBattleResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsSelectMemberBattleResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsSelectMemberBattleResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsSelectMemberBattleResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsSelectMemberBattleResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageCorpsSelectMemberBattleResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageCorpsSelectMemberBattleResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsSelectMemberBattleResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsSelectMemberBattleResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsMemberBattleRightsNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsMemberBattleRightsNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsMemberBattleRightsNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsMemberBattleRightsNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsMemberBattleRightsNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsMemberBattleRightsNotify::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsMemberBattleRightsNotify::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsMemberBattleRightsNotify::npcid() const {
  return npcid_;
}
inline void CMessageCorpsMemberBattleRightsNotify::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// repeated uint32 MemberList = 3;
inline int CMessageCorpsMemberBattleRightsNotify::memberlist_size() const {
  return memberlist_.size();
}
inline void CMessageCorpsMemberBattleRightsNotify::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCorpsMemberBattleRightsNotify::memberlist() const {
  return memberlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCorpsMemberBattleRightsNotify::mutable_memberlist() {
  return &memberlist_;
}
inline ::google::protobuf::uint32 CMessageCorpsMemberBattleRightsNotify::memberlist(int index) const {
  return memberlist_.Get(index);
}
inline void CMessageCorpsMemberBattleRightsNotify::set_memberlist(int index, ::google::protobuf::uint32 value) {
  memberlist_.Set(index, value);
}
inline void CMessageCorpsMemberBattleRightsNotify::add_memberlist(::google::protobuf::uint32 value) {
  memberlist_.Add(value);
}

// optional string DesCorpsName = 4;
inline bool CMessageCorpsMemberBattleRightsNotify::has_descorpsname() const {
  return _has_bit(3);
}
inline void CMessageCorpsMemberBattleRightsNotify::clear_descorpsname() {
  if (descorpsname_ != &_default_descorpsname_) {
    descorpsname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCorpsMemberBattleRightsNotify::descorpsname() const {
  return *descorpsname_;
}
inline void CMessageCorpsMemberBattleRightsNotify::set_descorpsname(const ::std::string& value) {
  _set_bit(3);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsMemberBattleRightsNotify::set_descorpsname(const char* value) {
  _set_bit(3);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsMemberBattleRightsNotify::set_descorpsname(const char* value, size_t size) {
  _set_bit(3);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsMemberBattleRightsNotify::mutable_descorpsname() {
  _set_bit(3);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  return descorpsname_;
}

// optional uint32 Type = 5;
inline bool CMessageCorpsMemberBattleRightsNotify::has_type() const {
  return _has_bit(4);
}
inline void CMessageCorpsMemberBattleRightsNotify::clear_type() {
  type_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsMemberBattleRightsNotify::type() const {
  return type_;
}
inline void CMessageCorpsMemberBattleRightsNotify::set_type(::google::protobuf::uint32 value) {
  _set_bit(4);
  type_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsMoneyChangedNotify

// optional uint32 Money = 1;
inline bool CMessageCorpsMoneyChangedNotify::has_money() const {
  return _has_bit(0);
}
inline void CMessageCorpsMoneyChangedNotify::clear_money() {
  money_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsMoneyChangedNotify::money() const {
  return money_;
}
inline void CMessageCorpsMoneyChangedNotify::set_money(::google::protobuf::uint32 value) {
  _set_bit(0);
  money_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageCorpsMoneyChangedNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsMoneyChangedNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsMoneyChangedNotify::roleid() const {
  return roleid_;
}
inline void CMessageCorpsMoneyChangedNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 Reason = 3;
inline bool CMessageCorpsMoneyChangedNotify::has_reason() const {
  return _has_bit(2);
}
inline void CMessageCorpsMoneyChangedNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsMoneyChangedNotify::reason() const {
  return reason_;
}
inline void CMessageCorpsMoneyChangedNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(2);
  reason_ = value;
}

// optional string RoleName = 4;
inline bool CMessageCorpsMoneyChangedNotify::has_rolename() const {
  return _has_bit(3);
}
inline void CMessageCorpsMoneyChangedNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCorpsMoneyChangedNotify::rolename() const {
  return *rolename_;
}
inline void CMessageCorpsMoneyChangedNotify::set_rolename(const ::std::string& value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsMoneyChangedNotify::set_rolename(const char* value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsMoneyChangedNotify::set_rolename(const char* value, size_t size) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsMoneyChangedNotify::mutable_rolename() {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional int32 Valeu = 5;
inline bool CMessageCorpsMoneyChangedNotify::has_valeu() const {
  return _has_bit(4);
}
inline void CMessageCorpsMoneyChangedNotify::clear_valeu() {
  valeu_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessageCorpsMoneyChangedNotify::valeu() const {
  return valeu_;
}
inline void CMessageCorpsMoneyChangedNotify::set_valeu(::google::protobuf::int32 value) {
  _set_bit(4);
  valeu_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsGloryChangedNotify

// optional uint32 Glory = 1;
inline bool CMessageCorpsGloryChangedNotify::has_glory() const {
  return _has_bit(0);
}
inline void CMessageCorpsGloryChangedNotify::clear_glory() {
  glory_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsGloryChangedNotify::glory() const {
  return glory_;
}
inline void CMessageCorpsGloryChangedNotify::set_glory(::google::protobuf::uint32 value) {
  _set_bit(0);
  glory_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageCorpsGloryChangedNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsGloryChangedNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsGloryChangedNotify::roleid() const {
  return roleid_;
}
inline void CMessageCorpsGloryChangedNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 Reason = 3;
inline bool CMessageCorpsGloryChangedNotify::has_reason() const {
  return _has_bit(2);
}
inline void CMessageCorpsGloryChangedNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsGloryChangedNotify::reason() const {
  return reason_;
}
inline void CMessageCorpsGloryChangedNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(2);
  reason_ = value;
}

// optional string RoleName = 4;
inline bool CMessageCorpsGloryChangedNotify::has_rolename() const {
  return _has_bit(3);
}
inline void CMessageCorpsGloryChangedNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCorpsGloryChangedNotify::rolename() const {
  return *rolename_;
}
inline void CMessageCorpsGloryChangedNotify::set_rolename(const ::std::string& value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsGloryChangedNotify::set_rolename(const char* value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsGloryChangedNotify::set_rolename(const char* value, size_t size) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsGloryChangedNotify::mutable_rolename() {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional int32 Value = 5;
inline bool CMessageCorpsGloryChangedNotify::has_value() const {
  return _has_bit(4);
}
inline void CMessageCorpsGloryChangedNotify::clear_value() {
  value_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 CMessageCorpsGloryChangedNotify::value() const {
  return value_;
}
inline void CMessageCorpsGloryChangedNotify::set_value(::google::protobuf::int32 value) {
  _set_bit(4);
  value_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsContributeChangedNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsContributeChangedNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsContributeChangedNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsContributeChangedNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsContributeChangedNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Contribute = 2;
inline bool CMessageCorpsContributeChangedNotify::has_contribute() const {
  return _has_bit(1);
}
inline void CMessageCorpsContributeChangedNotify::clear_contribute() {
  contribute_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsContributeChangedNotify::contribute() const {
  return contribute_;
}
inline void CMessageCorpsContributeChangedNotify::set_contribute(::google::protobuf::uint32 value) {
  _set_bit(1);
  contribute_ = value;
}

// optional uint32 RoleID = 3;
inline bool CMessageCorpsContributeChangedNotify::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageCorpsContributeChangedNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsContributeChangedNotify::roleid() const {
  return roleid_;
}
inline void CMessageCorpsContributeChangedNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// optional int32 Value = 4;
inline bool CMessageCorpsContributeChangedNotify::has_value() const {
  return _has_bit(3);
}
inline void CMessageCorpsContributeChangedNotify::clear_value() {
  value_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CMessageCorpsContributeChangedNotify::value() const {
  return value_;
}
inline void CMessageCorpsContributeChangedNotify::set_value(::google::protobuf::int32 value) {
  _set_bit(3);
  value_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBossTimesChangedNotify

// optional uint32 BossID = 1;
inline bool CMessageCorpsBossTimesChangedNotify::has_bossid() const {
  return _has_bit(0);
}
inline void CMessageCorpsBossTimesChangedNotify::clear_bossid() {
  bossid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsBossTimesChangedNotify::bossid() const {
  return bossid_;
}
inline void CMessageCorpsBossTimesChangedNotify::set_bossid(::google::protobuf::uint32 value) {
  _set_bit(0);
  bossid_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageCorpsBossTimesChangedNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsBossTimesChangedNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBossTimesChangedNotify::roleid() const {
  return roleid_;
}
inline void CMessageCorpsBossTimesChangedNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 Reason = 3;
inline bool CMessageCorpsBossTimesChangedNotify::has_reason() const {
  return _has_bit(2);
}
inline void CMessageCorpsBossTimesChangedNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsBossTimesChangedNotify::reason() const {
  return reason_;
}
inline void CMessageCorpsBossTimesChangedNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(2);
  reason_ = value;
}

// optional string RoleName = 4;
inline bool CMessageCorpsBossTimesChangedNotify::has_rolename() const {
  return _has_bit(3);
}
inline void CMessageCorpsBossTimesChangedNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCorpsBossTimesChangedNotify::rolename() const {
  return *rolename_;
}
inline void CMessageCorpsBossTimesChangedNotify::set_rolename(const ::std::string& value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsBossTimesChangedNotify::set_rolename(const char* value) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsBossTimesChangedNotify::set_rolename(const char* value, size_t size) {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsBossTimesChangedNotify::mutable_rolename() {
  _set_bit(3);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional uint32 Times = 5;
inline bool CMessageCorpsBossTimesChangedNotify::has_times() const {
  return _has_bit(4);
}
inline void CMessageCorpsBossTimesChangedNotify::clear_times() {
  times_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsBossTimesChangedNotify::times() const {
  return times_;
}
inline void CMessageCorpsBossTimesChangedNotify::set_times(::google::protobuf::uint32 value) {
  _set_bit(4);
  times_ = value;
}

// optional uint32 Value = 6;
inline bool CMessageCorpsBossTimesChangedNotify::has_value() const {
  return _has_bit(5);
}
inline void CMessageCorpsBossTimesChangedNotify::clear_value() {
  value_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCorpsBossTimesChangedNotify::value() const {
  return value_;
}
inline void CMessageCorpsBossTimesChangedNotify::set_value(::google::protobuf::uint32 value) {
  _set_bit(5);
  value_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBossRefineValueNotify

// optional uint32 RefineValue = 1;
inline bool CMessageCorpsBossRefineValueNotify::has_refinevalue() const {
  return _has_bit(0);
}
inline void CMessageCorpsBossRefineValueNotify::clear_refinevalue() {
  refinevalue_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsBossRefineValueNotify::refinevalue() const {
  return refinevalue_;
}
inline void CMessageCorpsBossRefineValueNotify::set_refinevalue(::google::protobuf::uint32 value) {
  _set_bit(0);
  refinevalue_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageCorpsBossRefineValueNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsBossRefineValueNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBossRefineValueNotify::roleid() const {
  return roleid_;
}
inline void CMessageCorpsBossRefineValueNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 Value = 3;
inline bool CMessageCorpsBossRefineValueNotify::has_value() const {
  return _has_bit(2);
}
inline void CMessageCorpsBossRefineValueNotify::clear_value() {
  value_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsBossRefineValueNotify::value() const {
  return value_;
}
inline void CMessageCorpsBossRefineValueNotify::set_value(::google::protobuf::uint32 value) {
  _set_bit(2);
  value_ = value;
}

// optional uint32 Reason = 4;
inline bool CMessageCorpsBossRefineValueNotify::has_reason() const {
  return _has_bit(3);
}
inline void CMessageCorpsBossRefineValueNotify::clear_reason() {
  reason_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsBossRefineValueNotify::reason() const {
  return reason_;
}
inline void CMessageCorpsBossRefineValueNotify::set_reason(::google::protobuf::uint32 value) {
  _set_bit(3);
  reason_ = value;
}

// optional string RoleName = 5;
inline bool CMessageCorpsBossRefineValueNotify::has_rolename() const {
  return _has_bit(4);
}
inline void CMessageCorpsBossRefineValueNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageCorpsBossRefineValueNotify::rolename() const {
  return *rolename_;
}
inline void CMessageCorpsBossRefineValueNotify::set_rolename(const ::std::string& value) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsBossRefineValueNotify::set_rolename(const char* value) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsBossRefineValueNotify::set_rolename(const char* value, size_t size) {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsBossRefineValueNotify::mutable_rolename() {
  _set_bit(4);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// -------------------------------------------------------------------

// CMessageCorpsCollectActiveChangeNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsCollectActiveChangeNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsCollectActiveChangeNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsCollectActiveChangeNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsCollectActiveChangeNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ActiveValue = 2;
inline bool CMessageCorpsCollectActiveChangeNotify::has_activevalue() const {
  return _has_bit(1);
}
inline void CMessageCorpsCollectActiveChangeNotify::clear_activevalue() {
  activevalue_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsCollectActiveChangeNotify::activevalue() const {
  return activevalue_;
}
inline void CMessageCorpsCollectActiveChangeNotify::set_activevalue(::google::protobuf::uint32 value) {
  _set_bit(1);
  activevalue_ = value;
}

// optional uint32 Vaule = 3;
inline bool CMessageCorpsCollectActiveChangeNotify::has_vaule() const {
  return _has_bit(2);
}
inline void CMessageCorpsCollectActiveChangeNotify::clear_vaule() {
  vaule_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsCollectActiveChangeNotify::vaule() const {
  return vaule_;
}
inline void CMessageCorpsCollectActiveChangeNotify::set_vaule(::google::protobuf::uint32 value) {
  _set_bit(2);
  vaule_ = value;
}

// optional uint32 ChangeType = 4;
inline bool CMessageCorpsCollectActiveChangeNotify::has_changetype() const {
  return _has_bit(3);
}
inline void CMessageCorpsCollectActiveChangeNotify::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsCollectActiveChangeNotify::changetype() const {
  return changetype_;
}
inline void CMessageCorpsCollectActiveChangeNotify::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(3);
  changetype_ = value;
}

// -------------------------------------------------------------------

// CMessageMendShengHuoTaiRequest

// optional uint32 NpcEntityID = 1;
inline bool CMessageMendShengHuoTaiRequest::has_npcentityid() const {
  return _has_bit(0);
}
inline void CMessageMendShengHuoTaiRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageMendShengHuoTaiRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageMendShengHuoTaiRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsPropertyNotice

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsPropertyNotice::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsPropertyNotice::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsPropertyNotice::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsPropertyNotice::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional .CorpsProperty Property = 2;
inline bool CMessageCorpsPropertyNotice::has_property() const {
  return _has_bit(1);
}
inline void CMessageCorpsPropertyNotice::clear_property() {
  if (property_ != NULL) property_->::CorpsProperty::Clear();
  _clear_bit(1);
}
inline const ::CorpsProperty& CMessageCorpsPropertyNotice::property() const {
  return property_ != NULL ? *property_ : *default_instance_->property_;
}
inline ::CorpsProperty* CMessageCorpsPropertyNotice::mutable_property() {
  _set_bit(1);
  if (property_ == NULL) property_ = new ::CorpsProperty;
  return property_;
}

// -------------------------------------------------------------------

// CMessageCorpsOperateRoomRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsOperateRoomRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsOperateRoomRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsOperateRoomRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsOperateRoomRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Action = 2;
inline bool CMessageCorpsOperateRoomRequest::has_action() const {
  return _has_bit(1);
}
inline void CMessageCorpsOperateRoomRequest::clear_action() {
  action_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsOperateRoomRequest::action() const {
  return action_;
}
inline void CMessageCorpsOperateRoomRequest::set_action(::google::protobuf::uint32 value) {
  _set_bit(1);
  action_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageCorpsOperateRoomRequest::has_money() const {
  return _has_bit(2);
}
inline void CMessageCorpsOperateRoomRequest::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsOperateRoomRequest::money() const {
  return money_;
}
inline void CMessageCorpsOperateRoomRequest::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional string Name = 4;
inline bool CMessageCorpsOperateRoomRequest::has_name() const {
  return _has_bit(3);
}
inline void CMessageCorpsOperateRoomRequest::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCorpsOperateRoomRequest::name() const {
  return *name_;
}
inline void CMessageCorpsOperateRoomRequest::set_name(const ::std::string& value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageCorpsOperateRoomRequest::set_name(const char* value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageCorpsOperateRoomRequest::set_name(const char* value, size_t size) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsOperateRoomRequest::mutable_name() {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// -------------------------------------------------------------------

// CMessageCorpsOperateRoomResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsOperateRoomResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsOperateRoomResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsOperateRoomResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsOperateRoomResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Action = 2;
inline bool CMessageCorpsOperateRoomResponse::has_action() const {
  return _has_bit(1);
}
inline void CMessageCorpsOperateRoomResponse::clear_action() {
  action_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsOperateRoomResponse::action() const {
  return action_;
}
inline void CMessageCorpsOperateRoomResponse::set_action(::google::protobuf::uint32 value) {
  _set_bit(1);
  action_ = value;
}

// optional uint32 RtnCode = 3;
inline bool CMessageCorpsOperateRoomResponse::has_rtncode() const {
  return _has_bit(2);
}
inline void CMessageCorpsOperateRoomResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsOperateRoomResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsOperateRoomResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(2);
  rtncode_ = value;
}

// optional uint32 Money = 4;
inline bool CMessageCorpsOperateRoomResponse::has_money() const {
  return _has_bit(3);
}
inline void CMessageCorpsOperateRoomResponse::clear_money() {
  money_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsOperateRoomResponse::money() const {
  return money_;
}
inline void CMessageCorpsOperateRoomResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(3);
  money_ = value;
}

// optional string Name = 5;
inline bool CMessageCorpsOperateRoomResponse::has_name() const {
  return _has_bit(4);
}
inline void CMessageCorpsOperateRoomResponse::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageCorpsOperateRoomResponse::name() const {
  return *name_;
}
inline void CMessageCorpsOperateRoomResponse::set_name(const ::std::string& value) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageCorpsOperateRoomResponse::set_name(const char* value) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageCorpsOperateRoomResponse::set_name(const char* value, size_t size) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsOperateRoomResponse::mutable_name() {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// -------------------------------------------------------------------

// CMessageCorpsRoomNotice

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsRoomNotice::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsRoomNotice::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsRoomNotice::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsRoomNotice::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Action = 2;
inline bool CMessageCorpsRoomNotice::has_action() const {
  return _has_bit(1);
}
inline void CMessageCorpsRoomNotice::clear_action() {
  action_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsRoomNotice::action() const {
  return action_;
}
inline void CMessageCorpsRoomNotice::set_action(::google::protobuf::uint32 value) {
  _set_bit(1);
  action_ = value;
}

// optional string RooterName = 3;
inline bool CMessageCorpsRoomNotice::has_rootername() const {
  return _has_bit(2);
}
inline void CMessageCorpsRoomNotice::clear_rootername() {
  if (rootername_ != &_default_rootername_) {
    rootername_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsRoomNotice::rootername() const {
  return *rootername_;
}
inline void CMessageCorpsRoomNotice::set_rootername(const ::std::string& value) {
  _set_bit(2);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(value);
}
inline void CMessageCorpsRoomNotice::set_rootername(const char* value) {
  _set_bit(2);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(value);
}
inline void CMessageCorpsRoomNotice::set_rootername(const char* value, size_t size) {
  _set_bit(2);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsRoomNotice::mutable_rootername() {
  _set_bit(2);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  return rootername_;
}

// -------------------------------------------------------------------

// CMessageCorpsChallegeRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsChallegeRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsChallegeRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsChallegeRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsChallegeRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Action = 2;
inline bool CMessageCorpsChallegeRequest::has_action() const {
  return _has_bit(1);
}
inline void CMessageCorpsChallegeRequest::clear_action() {
  action_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeRequest::action() const {
  return action_;
}
inline void CMessageCorpsChallegeRequest::set_action(::google::protobuf::uint32 value) {
  _set_bit(1);
  action_ = value;
}

// optional uint32 DesCropsID = 3;
inline bool CMessageCorpsChallegeRequest::has_descropsid() const {
  return _has_bit(2);
}
inline void CMessageCorpsChallegeRequest::clear_descropsid() {
  descropsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeRequest::descropsid() const {
  return descropsid_;
}
inline void CMessageCorpsChallegeRequest::set_descropsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  descropsid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsChallegeResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsChallegeResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsChallegeResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsChallegeResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsChallegeResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageCorpsChallegeResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageCorpsChallegeResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsChallegeResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// optional uint32 Action = 3;
inline bool CMessageCorpsChallegeResponse::has_action() const {
  return _has_bit(2);
}
inline void CMessageCorpsChallegeResponse::clear_action() {
  action_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeResponse::action() const {
  return action_;
}
inline void CMessageCorpsChallegeResponse::set_action(::google::protobuf::uint32 value) {
  _set_bit(2);
  action_ = value;
}

// optional uint32 DesCropsID = 4;
inline bool CMessageCorpsChallegeResponse::has_descropsid() const {
  return _has_bit(3);
}
inline void CMessageCorpsChallegeResponse::clear_descropsid() {
  descropsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeResponse::descropsid() const {
  return descropsid_;
}
inline void CMessageCorpsChallegeResponse::set_descropsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  descropsid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsChallegeNotice

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsChallegeNotice::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsChallegeNotice::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsChallegeNotice::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsChallegeNotice::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 SrcCorpsID = 2;
inline bool CMessageCorpsChallegeNotice::has_srccorpsid() const {
  return _has_bit(1);
}
inline void CMessageCorpsChallegeNotice::clear_srccorpsid() {
  srccorpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeNotice::srccorpsid() const {
  return srccorpsid_;
}
inline void CMessageCorpsChallegeNotice::set_srccorpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  srccorpsid_ = value;
}

// optional string SrcCorpsName = 3;
inline bool CMessageCorpsChallegeNotice::has_srccorpsname() const {
  return _has_bit(2);
}
inline void CMessageCorpsChallegeNotice::clear_srccorpsname() {
  if (srccorpsname_ != &_default_srccorpsname_) {
    srccorpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsChallegeNotice::srccorpsname() const {
  return *srccorpsname_;
}
inline void CMessageCorpsChallegeNotice::set_srccorpsname(const ::std::string& value) {
  _set_bit(2);
  if (srccorpsname_ == &_default_srccorpsname_) {
    srccorpsname_ = new ::std::string;
  }
  srccorpsname_->assign(value);
}
inline void CMessageCorpsChallegeNotice::set_srccorpsname(const char* value) {
  _set_bit(2);
  if (srccorpsname_ == &_default_srccorpsname_) {
    srccorpsname_ = new ::std::string;
  }
  srccorpsname_->assign(value);
}
inline void CMessageCorpsChallegeNotice::set_srccorpsname(const char* value, size_t size) {
  _set_bit(2);
  if (srccorpsname_ == &_default_srccorpsname_) {
    srccorpsname_ = new ::std::string;
  }
  srccorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsChallegeNotice::mutable_srccorpsname() {
  _set_bit(2);
  if (srccorpsname_ == &_default_srccorpsname_) {
    srccorpsname_ = new ::std::string;
  }
  return srccorpsname_;
}

// optional uint32 DesCropsID = 4;
inline bool CMessageCorpsChallegeNotice::has_descropsid() const {
  return _has_bit(3);
}
inline void CMessageCorpsChallegeNotice::clear_descropsid() {
  descropsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeNotice::descropsid() const {
  return descropsid_;
}
inline void CMessageCorpsChallegeNotice::set_descropsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  descropsid_ = value;
}

// optional string DesCorpsName = 5;
inline bool CMessageCorpsChallegeNotice::has_descorpsname() const {
  return _has_bit(4);
}
inline void CMessageCorpsChallegeNotice::clear_descorpsname() {
  if (descorpsname_ != &_default_descorpsname_) {
    descorpsname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageCorpsChallegeNotice::descorpsname() const {
  return *descorpsname_;
}
inline void CMessageCorpsChallegeNotice::set_descorpsname(const ::std::string& value) {
  _set_bit(4);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsChallegeNotice::set_descorpsname(const char* value) {
  _set_bit(4);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsChallegeNotice::set_descorpsname(const char* value, size_t size) {
  _set_bit(4);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsChallegeNotice::mutable_descorpsname() {
  _set_bit(4);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  return descorpsname_;
}

// optional uint32 WinTimes = 6;
inline bool CMessageCorpsChallegeNotice::has_wintimes() const {
  return _has_bit(5);
}
inline void CMessageCorpsChallegeNotice::clear_wintimes() {
  wintimes_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeNotice::wintimes() const {
  return wintimes_;
}
inline void CMessageCorpsChallegeNotice::set_wintimes(::google::protobuf::uint32 value) {
  _set_bit(5);
  wintimes_ = value;
}

// optional uint32 LostTimes = 7;
inline bool CMessageCorpsChallegeNotice::has_losttimes() const {
  return _has_bit(6);
}
inline void CMessageCorpsChallegeNotice::clear_losttimes() {
  losttimes_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeNotice::losttimes() const {
  return losttimes_;
}
inline void CMessageCorpsChallegeNotice::set_losttimes(::google::protobuf::uint32 value) {
  _set_bit(6);
  losttimes_ = value;
}

// optional string SrcRooterName = 8;
inline bool CMessageCorpsChallegeNotice::has_srcrootername() const {
  return _has_bit(7);
}
inline void CMessageCorpsChallegeNotice::clear_srcrootername() {
  if (srcrootername_ != &_default_srcrootername_) {
    srcrootername_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CMessageCorpsChallegeNotice::srcrootername() const {
  return *srcrootername_;
}
inline void CMessageCorpsChallegeNotice::set_srcrootername(const ::std::string& value) {
  _set_bit(7);
  if (srcrootername_ == &_default_srcrootername_) {
    srcrootername_ = new ::std::string;
  }
  srcrootername_->assign(value);
}
inline void CMessageCorpsChallegeNotice::set_srcrootername(const char* value) {
  _set_bit(7);
  if (srcrootername_ == &_default_srcrootername_) {
    srcrootername_ = new ::std::string;
  }
  srcrootername_->assign(value);
}
inline void CMessageCorpsChallegeNotice::set_srcrootername(const char* value, size_t size) {
  _set_bit(7);
  if (srcrootername_ == &_default_srcrootername_) {
    srcrootername_ = new ::std::string;
  }
  srcrootername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsChallegeNotice::mutable_srcrootername() {
  _set_bit(7);
  if (srcrootername_ == &_default_srcrootername_) {
    srcrootername_ = new ::std::string;
  }
  return srcrootername_;
}

// optional string DesRooterName = 9;
inline bool CMessageCorpsChallegeNotice::has_desrootername() const {
  return _has_bit(8);
}
inline void CMessageCorpsChallegeNotice::clear_desrootername() {
  if (desrootername_ != &_default_desrootername_) {
    desrootername_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& CMessageCorpsChallegeNotice::desrootername() const {
  return *desrootername_;
}
inline void CMessageCorpsChallegeNotice::set_desrootername(const ::std::string& value) {
  _set_bit(8);
  if (desrootername_ == &_default_desrootername_) {
    desrootername_ = new ::std::string;
  }
  desrootername_->assign(value);
}
inline void CMessageCorpsChallegeNotice::set_desrootername(const char* value) {
  _set_bit(8);
  if (desrootername_ == &_default_desrootername_) {
    desrootername_ = new ::std::string;
  }
  desrootername_->assign(value);
}
inline void CMessageCorpsChallegeNotice::set_desrootername(const char* value, size_t size) {
  _set_bit(8);
  if (desrootername_ == &_default_desrootername_) {
    desrootername_ = new ::std::string;
  }
  desrootername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsChallegeNotice::mutable_desrootername() {
  _set_bit(8);
  if (desrootername_ == &_default_desrootername_) {
    desrootername_ = new ::std::string;
  }
  return desrootername_;
}

// optional uint32 Action = 10;
inline bool CMessageCorpsChallegeNotice::has_action() const {
  return _has_bit(9);
}
inline void CMessageCorpsChallegeNotice::clear_action() {
  action_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageCorpsChallegeNotice::action() const {
  return action_;
}
inline void CMessageCorpsChallegeNotice::set_action(::google::protobuf::uint32 value) {
  _set_bit(9);
  action_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsReplyChallegeRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsReplyChallegeRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsReplyChallegeRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsReplyChallegeRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsReplyChallegeRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 DesCorpsID = 2;
inline bool CMessageCorpsReplyChallegeRequest::has_descorpsid() const {
  return _has_bit(1);
}
inline void CMessageCorpsReplyChallegeRequest::clear_descorpsid() {
  descorpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsReplyChallegeRequest::descorpsid() const {
  return descorpsid_;
}
inline void CMessageCorpsReplyChallegeRequest::set_descorpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descorpsid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsReplyChallegeResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsReplyChallegeResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsReplyChallegeResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsReplyChallegeResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsReplyChallegeResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string DesCorpsName = 2;
inline bool CMessageCorpsReplyChallegeResponse::has_descorpsname() const {
  return _has_bit(1);
}
inline void CMessageCorpsReplyChallegeResponse::clear_descorpsname() {
  if (descorpsname_ != &_default_descorpsname_) {
    descorpsname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCorpsReplyChallegeResponse::descorpsname() const {
  return *descorpsname_;
}
inline void CMessageCorpsReplyChallegeResponse::set_descorpsname(const ::std::string& value) {
  _set_bit(1);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsReplyChallegeResponse::set_descorpsname(const char* value) {
  _set_bit(1);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void CMessageCorpsReplyChallegeResponse::set_descorpsname(const char* value, size_t size) {
  _set_bit(1);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsReplyChallegeResponse::mutable_descorpsname() {
  _set_bit(1);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  return descorpsname_;
}

// optional uint32 RtnCode = 3;
inline bool CMessageCorpsReplyChallegeResponse::has_rtncode() const {
  return _has_bit(2);
}
inline void CMessageCorpsReplyChallegeResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsReplyChallegeResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsReplyChallegeResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(2);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsQueryChallegeListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsQueryChallegeListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsQueryChallegeListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsQueryChallegeListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsQueryChallegeListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// CMessageCorpsQueryChallegeListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsQueryChallegeListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsQueryChallegeListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsQueryChallegeListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsQueryChallegeListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated uint32 CorpsIDList = 2;
inline int CMessageCorpsQueryChallegeListResponse::corpsidlist_size() const {
  return corpsidlist_.size();
}
inline void CMessageCorpsQueryChallegeListResponse::clear_corpsidlist() {
  corpsidlist_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCorpsQueryChallegeListResponse::corpsidlist() const {
  return corpsidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCorpsQueryChallegeListResponse::mutable_corpsidlist() {
  return &corpsidlist_;
}
inline ::google::protobuf::uint32 CMessageCorpsQueryChallegeListResponse::corpsidlist(int index) const {
  return corpsidlist_.Get(index);
}
inline void CMessageCorpsQueryChallegeListResponse::set_corpsidlist(int index, ::google::protobuf::uint32 value) {
  corpsidlist_.Set(index, value);
}
inline void CMessageCorpsQueryChallegeListResponse::add_corpsidlist(::google::protobuf::uint32 value) {
  corpsidlist_.Add(value);
}

// optional uint32 RtnCode = 3;
inline bool CMessageCorpsQueryChallegeListResponse::has_rtncode() const {
  return _has_bit(2);
}
inline void CMessageCorpsQueryChallegeListResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryChallegeListResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsQueryChallegeListResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(2);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// PBChallege

// optional uint32 CorpsID = 1;
inline bool PBChallege::has_corpsid() const {
  return _has_bit(0);
}
inline void PBChallege::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBChallege::corpsid() const {
  return corpsid_;
}
inline void PBChallege::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  corpsid_ = value;
}

// optional string CorpsName = 2;
inline bool PBChallege::has_corpsname() const {
  return _has_bit(1);
}
inline void PBChallege::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBChallege::corpsname() const {
  return *corpsname_;
}
inline void PBChallege::set_corpsname(const ::std::string& value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBChallege::set_corpsname(const char* value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBChallege::set_corpsname(const char* value, size_t size) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBChallege::mutable_corpsname() {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 WinTimes = 3;
inline bool PBChallege::has_wintimes() const {
  return _has_bit(2);
}
inline void PBChallege::clear_wintimes() {
  wintimes_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBChallege::wintimes() const {
  return wintimes_;
}
inline void PBChallege::set_wintimes(::google::protobuf::uint32 value) {
  _set_bit(2);
  wintimes_ = value;
}

// optional uint32 LostTimes = 4;
inline bool PBChallege::has_losttimes() const {
  return _has_bit(3);
}
inline void PBChallege::clear_losttimes() {
  losttimes_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBChallege::losttimes() const {
  return losttimes_;
}
inline void PBChallege::set_losttimes(::google::protobuf::uint32 value) {
  _set_bit(3);
  losttimes_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsQueryRecChallegeListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsQueryRecChallegeListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsQueryRecChallegeListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsQueryRecChallegeListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsQueryRecChallegeListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// CMessageCorpsQueryRecChallegeListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsQueryRecChallegeListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsQueryRecChallegeListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsQueryRecChallegeListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsQueryRecChallegeListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string RoomName = 2;
inline bool CMessageCorpsQueryRecChallegeListResponse::has_roomname() const {
  return _has_bit(1);
}
inline void CMessageCorpsQueryRecChallegeListResponse::clear_roomname() {
  if (roomname_ != &_default_roomname_) {
    roomname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCorpsQueryRecChallegeListResponse::roomname() const {
  return *roomname_;
}
inline void CMessageCorpsQueryRecChallegeListResponse::set_roomname(const ::std::string& value) {
  _set_bit(1);
  if (roomname_ == &_default_roomname_) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
}
inline void CMessageCorpsQueryRecChallegeListResponse::set_roomname(const char* value) {
  _set_bit(1);
  if (roomname_ == &_default_roomname_) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
}
inline void CMessageCorpsQueryRecChallegeListResponse::set_roomname(const char* value, size_t size) {
  _set_bit(1);
  if (roomname_ == &_default_roomname_) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsQueryRecChallegeListResponse::mutable_roomname() {
  _set_bit(1);
  if (roomname_ == &_default_roomname_) {
    roomname_ = new ::std::string;
  }
  return roomname_;
}

// optional uint32 Money = 3;
inline bool CMessageCorpsQueryRecChallegeListResponse::has_money() const {
  return _has_bit(2);
}
inline void CMessageCorpsQueryRecChallegeListResponse::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryRecChallegeListResponse::money() const {
  return money_;
}
inline void CMessageCorpsQueryRecChallegeListResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional uint32 WinTimes = 4;
inline bool CMessageCorpsQueryRecChallegeListResponse::has_wintimes() const {
  return _has_bit(3);
}
inline void CMessageCorpsQueryRecChallegeListResponse::clear_wintimes() {
  wintimes_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryRecChallegeListResponse::wintimes() const {
  return wintimes_;
}
inline void CMessageCorpsQueryRecChallegeListResponse::set_wintimes(::google::protobuf::uint32 value) {
  _set_bit(3);
  wintimes_ = value;
}

// optional uint32 LostTimes = 5;
inline bool CMessageCorpsQueryRecChallegeListResponse::has_losttimes() const {
  return _has_bit(4);
}
inline void CMessageCorpsQueryRecChallegeListResponse::clear_losttimes() {
  losttimes_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryRecChallegeListResponse::losttimes() const {
  return losttimes_;
}
inline void CMessageCorpsQueryRecChallegeListResponse::set_losttimes(::google::protobuf::uint32 value) {
  _set_bit(4);
  losttimes_ = value;
}

// repeated .PBChallege ChallegeList = 6;
inline int CMessageCorpsQueryRecChallegeListResponse::challegelist_size() const {
  return challegelist_.size();
}
inline void CMessageCorpsQueryRecChallegeListResponse::clear_challegelist() {
  challegelist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBChallege >&
CMessageCorpsQueryRecChallegeListResponse::challegelist() const {
  return challegelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBChallege >*
CMessageCorpsQueryRecChallegeListResponse::mutable_challegelist() {
  return &challegelist_;
}
inline const ::PBChallege& CMessageCorpsQueryRecChallegeListResponse::challegelist(int index) const {
  return challegelist_.Get(index);
}
inline ::PBChallege* CMessageCorpsQueryRecChallegeListResponse::mutable_challegelist(int index) {
  return challegelist_.Mutable(index);
}
inline ::PBChallege* CMessageCorpsQueryRecChallegeListResponse::add_challegelist() {
  return challegelist_.Add();
}

// optional uint32 RtnCode = 7;
inline bool CMessageCorpsQueryRecChallegeListResponse::has_rtncode() const {
  return _has_bit(6);
}
inline void CMessageCorpsQueryRecChallegeListResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryRecChallegeListResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsQueryRecChallegeListResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(6);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsQueryRoomListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsQueryRoomListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsQueryRoomListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsQueryRoomListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsQueryRoomListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// PBCorpsRoom

// optional uint32 CorpsID = 1;
inline bool PBCorpsRoom::has_corpsid() const {
  return _has_bit(0);
}
inline void PBCorpsRoom::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCorpsRoom::corpsid() const {
  return corpsid_;
}
inline void PBCorpsRoom::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(0);
  corpsid_ = value;
}

// optional string CorpsName = 2;
inline bool PBCorpsRoom::has_corpsname() const {
  return _has_bit(1);
}
inline void PBCorpsRoom::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBCorpsRoom::corpsname() const {
  return *corpsname_;
}
inline void PBCorpsRoom::set_corpsname(const ::std::string& value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBCorpsRoom::set_corpsname(const char* value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBCorpsRoom::set_corpsname(const char* value, size_t size) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCorpsRoom::mutable_corpsname() {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional string RoomName = 3;
inline bool PBCorpsRoom::has_roomname() const {
  return _has_bit(2);
}
inline void PBCorpsRoom::clear_roomname() {
  if (roomname_ != &_default_roomname_) {
    roomname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBCorpsRoom::roomname() const {
  return *roomname_;
}
inline void PBCorpsRoom::set_roomname(const ::std::string& value) {
  _set_bit(2);
  if (roomname_ == &_default_roomname_) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
}
inline void PBCorpsRoom::set_roomname(const char* value) {
  _set_bit(2);
  if (roomname_ == &_default_roomname_) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(value);
}
inline void PBCorpsRoom::set_roomname(const char* value, size_t size) {
  _set_bit(2);
  if (roomname_ == &_default_roomname_) {
    roomname_ = new ::std::string;
  }
  roomname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCorpsRoom::mutable_roomname() {
  _set_bit(2);
  if (roomname_ == &_default_roomname_) {
    roomname_ = new ::std::string;
  }
  return roomname_;
}

// optional uint32 RoomState = 4;
inline bool PBCorpsRoom::has_roomstate() const {
  return _has_bit(3);
}
inline void PBCorpsRoom::clear_roomstate() {
  roomstate_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBCorpsRoom::roomstate() const {
  return roomstate_;
}
inline void PBCorpsRoom::set_roomstate(::google::protobuf::uint32 value) {
  _set_bit(3);
  roomstate_ = value;
}

// optional string DesCorpsName = 5;
inline bool PBCorpsRoom::has_descorpsname() const {
  return _has_bit(4);
}
inline void PBCorpsRoom::clear_descorpsname() {
  if (descorpsname_ != &_default_descorpsname_) {
    descorpsname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& PBCorpsRoom::descorpsname() const {
  return *descorpsname_;
}
inline void PBCorpsRoom::set_descorpsname(const ::std::string& value) {
  _set_bit(4);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void PBCorpsRoom::set_descorpsname(const char* value) {
  _set_bit(4);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(value);
}
inline void PBCorpsRoom::set_descorpsname(const char* value, size_t size) {
  _set_bit(4);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  descorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCorpsRoom::mutable_descorpsname() {
  _set_bit(4);
  if (descorpsname_ == &_default_descorpsname_) {
    descorpsname_ = new ::std::string;
  }
  return descorpsname_;
}

// optional uint32 WinTimes = 6;
inline bool PBCorpsRoom::has_wintimes() const {
  return _has_bit(5);
}
inline void PBCorpsRoom::clear_wintimes() {
  wintimes_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBCorpsRoom::wintimes() const {
  return wintimes_;
}
inline void PBCorpsRoom::set_wintimes(::google::protobuf::uint32 value) {
  _set_bit(5);
  wintimes_ = value;
}

// optional uint32 LostTimes = 7;
inline bool PBCorpsRoom::has_losttimes() const {
  return _has_bit(6);
}
inline void PBCorpsRoom::clear_losttimes() {
  losttimes_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBCorpsRoom::losttimes() const {
  return losttimes_;
}
inline void PBCorpsRoom::set_losttimes(::google::protobuf::uint32 value) {
  _set_bit(6);
  losttimes_ = value;
}

// optional uint32 Money = 8;
inline bool PBCorpsRoom::has_money() const {
  return _has_bit(7);
}
inline void PBCorpsRoom::clear_money() {
  money_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBCorpsRoom::money() const {
  return money_;
}
inline void PBCorpsRoom::set_money(::google::protobuf::uint32 value) {
  _set_bit(7);
  money_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsQueryRoomListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsQueryRoomListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsQueryRoomListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsQueryRoomListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsQueryRoomListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated .PBCorpsRoom RoomList = 2;
inline int CMessageCorpsQueryRoomListResponse::roomlist_size() const {
  return roomlist_.size();
}
inline void CMessageCorpsQueryRoomListResponse::clear_roomlist() {
  roomlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsRoom >&
CMessageCorpsQueryRoomListResponse::roomlist() const {
  return roomlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsRoom >*
CMessageCorpsQueryRoomListResponse::mutable_roomlist() {
  return &roomlist_;
}
inline const ::PBCorpsRoom& CMessageCorpsQueryRoomListResponse::roomlist(int index) const {
  return roomlist_.Get(index);
}
inline ::PBCorpsRoom* CMessageCorpsQueryRoomListResponse::mutable_roomlist(int index) {
  return roomlist_.Mutable(index);
}
inline ::PBCorpsRoom* CMessageCorpsQueryRoomListResponse::add_roomlist() {
  return roomlist_.Add();
}

// optional uint32 RtnCode = 3;
inline bool CMessageCorpsQueryRoomListResponse::has_rtncode() const {
  return _has_bit(2);
}
inline void CMessageCorpsQueryRoomListResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsQueryRoomListResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsQueryRoomListResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(2);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryCorpsWelfareRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageQueryCorpsWelfareRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageQueryCorpsWelfareRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageQueryCorpsWelfareRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageQueryCorpsWelfareRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 EntityID = 2;
inline bool CMessageQueryCorpsWelfareRequest::has_entityid() const {
  return _has_bit(1);
}
inline void CMessageQueryCorpsWelfareRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryCorpsWelfareRequest::entityid() const {
  return entityid_;
}
inline void CMessageQueryCorpsWelfareRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  entityid_ = value;
}

// optional uint32 NpcID = 3;
inline bool CMessageQueryCorpsWelfareRequest::has_npcid() const {
  return _has_bit(2);
}
inline void CMessageQueryCorpsWelfareRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryCorpsWelfareRequest::npcid() const {
  return npcid_;
}
inline void CMessageQueryCorpsWelfareRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryCorpsWelfareResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageQueryCorpsWelfareResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageQueryCorpsWelfareResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageQueryCorpsWelfareResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageQueryCorpsWelfareResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageQueryCorpsWelfareResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageQueryCorpsWelfareResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryCorpsWelfareResponse::errcode() const {
  return errcode_;
}
inline void CMessageQueryCorpsWelfareResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 NpcGlory = 3;
inline bool CMessageQueryCorpsWelfareResponse::has_npcglory() const {
  return _has_bit(2);
}
inline void CMessageQueryCorpsWelfareResponse::clear_npcglory() {
  npcglory_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryCorpsWelfareResponse::npcglory() const {
  return npcglory_;
}
inline void CMessageQueryCorpsWelfareResponse::set_npcglory(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcglory_ = value;
}

// optional uint32 NpcMoney = 4;
inline bool CMessageQueryCorpsWelfareResponse::has_npcmoney() const {
  return _has_bit(3);
}
inline void CMessageQueryCorpsWelfareResponse::clear_npcmoney() {
  npcmoney_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageQueryCorpsWelfareResponse::npcmoney() const {
  return npcmoney_;
}
inline void CMessageQueryCorpsWelfareResponse::set_npcmoney(::google::protobuf::uint32 value) {
  _set_bit(3);
  npcmoney_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainCorpsWelfareRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageObtainCorpsWelfareRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageObtainCorpsWelfareRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageObtainCorpsWelfareRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageObtainCorpsWelfareRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 EntityID = 2;
inline bool CMessageObtainCorpsWelfareRequest::has_entityid() const {
  return _has_bit(1);
}
inline void CMessageObtainCorpsWelfareRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageObtainCorpsWelfareRequest::entityid() const {
  return entityid_;
}
inline void CMessageObtainCorpsWelfareRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  entityid_ = value;
}

// optional uint32 NpcID = 3;
inline bool CMessageObtainCorpsWelfareRequest::has_npcid() const {
  return _has_bit(2);
}
inline void CMessageObtainCorpsWelfareRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageObtainCorpsWelfareRequest::npcid() const {
  return npcid_;
}
inline void CMessageObtainCorpsWelfareRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageObtainCorpsWelfareResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageObtainCorpsWelfareResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageObtainCorpsWelfareResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageObtainCorpsWelfareResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageObtainCorpsWelfareResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageObtainCorpsWelfareResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageObtainCorpsWelfareResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageObtainCorpsWelfareResponse::errcode() const {
  return errcode_;
}
inline void CMessageObtainCorpsWelfareResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 NpcGlory = 3;
inline bool CMessageObtainCorpsWelfareResponse::has_npcglory() const {
  return _has_bit(2);
}
inline void CMessageObtainCorpsWelfareResponse::clear_npcglory() {
  npcglory_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageObtainCorpsWelfareResponse::npcglory() const {
  return npcglory_;
}
inline void CMessageObtainCorpsWelfareResponse::set_npcglory(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcglory_ = value;
}

// optional uint32 NpcMoney = 4;
inline bool CMessageObtainCorpsWelfareResponse::has_npcmoney() const {
  return _has_bit(3);
}
inline void CMessageObtainCorpsWelfareResponse::clear_npcmoney() {
  npcmoney_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageObtainCorpsWelfareResponse::npcmoney() const {
  return npcmoney_;
}
inline void CMessageObtainCorpsWelfareResponse::set_npcmoney(::google::protobuf::uint32 value) {
  _set_bit(3);
  npcmoney_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsMoneyRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsMoneyRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsMoneyRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsMoneyRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsMoneyRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CorpsMoney = 2;
inline bool CMessageGetCorpsMoneyRequest::has_corpsmoney() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsMoneyRequest::clear_corpsmoney() {
  corpsmoney_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsMoneyRequest::corpsmoney() const {
  return corpsmoney_;
}
inline void CMessageGetCorpsMoneyRequest::set_corpsmoney(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsmoney_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsMoneyResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsMoneyResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsMoneyResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsMoneyResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsMoneyResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageGetCorpsMoneyResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsMoneyResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsMoneyResponse::errcode() const {
  return errcode_;
}
inline void CMessageGetCorpsMoneyResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 CorpsMoney = 3;
inline bool CMessageGetCorpsMoneyResponse::has_corpsmoney() const {
  return _has_bit(2);
}
inline void CMessageGetCorpsMoneyResponse::clear_corpsmoney() {
  corpsmoney_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetCorpsMoneyResponse::corpsmoney() const {
  return corpsmoney_;
}
inline void CMessageGetCorpsMoneyResponse::set_corpsmoney(::google::protobuf::uint32 value) {
  _set_bit(2);
  corpsmoney_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsAbortBattleCityRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsAbortBattleCityRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsAbortBattleCityRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsAbortBattleCityRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsAbortBattleCityRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcEntityID = 2;
inline bool CMessageCorpsAbortBattleCityRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageCorpsAbortBattleCityRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsAbortBattleCityRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageCorpsAbortBattleCityRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsAbortBattleCityResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsAbortBattleCityResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsAbortBattleCityResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsAbortBattleCityResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsAbortBattleCityResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageCorpsAbortBattleCityResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageCorpsAbortBattleCityResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsAbortBattleCityResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsAbortBattleCityResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// optional uint32 NpcID = 3;
inline bool CMessageCorpsAbortBattleCityResponse::has_npcid() const {
  return _has_bit(2);
}
inline void CMessageCorpsAbortBattleCityResponse::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsAbortBattleCityResponse::npcid() const {
  return npcid_;
}
inline void CMessageCorpsAbortBattleCityResponse::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcid_ = value;
}

// optional string RooterName = 4;
inline bool CMessageCorpsAbortBattleCityResponse::has_rootername() const {
  return _has_bit(3);
}
inline void CMessageCorpsAbortBattleCityResponse::clear_rootername() {
  if (rootername_ != &_default_rootername_) {
    rootername_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCorpsAbortBattleCityResponse::rootername() const {
  return *rootername_;
}
inline void CMessageCorpsAbortBattleCityResponse::set_rootername(const ::std::string& value) {
  _set_bit(3);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(value);
}
inline void CMessageCorpsAbortBattleCityResponse::set_rootername(const char* value) {
  _set_bit(3);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(value);
}
inline void CMessageCorpsAbortBattleCityResponse::set_rootername(const char* value, size_t size) {
  _set_bit(3);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsAbortBattleCityResponse::mutable_rootername() {
  _set_bit(3);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  return rootername_;
}

// -------------------------------------------------------------------

// CMessageCorpsAbortBattleCityNotice

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsAbortBattleCityNotice::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsAbortBattleCityNotice::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsAbortBattleCityNotice::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsAbortBattleCityNotice::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsAbortBattleCityNotice::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsAbortBattleCityNotice::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsAbortBattleCityNotice::npcid() const {
  return npcid_;
}
inline void CMessageCorpsAbortBattleCityNotice::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// optional string RooterName = 3;
inline bool CMessageCorpsAbortBattleCityNotice::has_rootername() const {
  return _has_bit(2);
}
inline void CMessageCorpsAbortBattleCityNotice::clear_rootername() {
  if (rootername_ != &_default_rootername_) {
    rootername_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsAbortBattleCityNotice::rootername() const {
  return *rootername_;
}
inline void CMessageCorpsAbortBattleCityNotice::set_rootername(const ::std::string& value) {
  _set_bit(2);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(value);
}
inline void CMessageCorpsAbortBattleCityNotice::set_rootername(const char* value) {
  _set_bit(2);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(value);
}
inline void CMessageCorpsAbortBattleCityNotice::set_rootername(const char* value, size_t size) {
  _set_bit(2);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsAbortBattleCityNotice::mutable_rootername() {
  _set_bit(2);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  return rootername_;
}

// -------------------------------------------------------------------

// CMessageCorpsCanLevelUPNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsCanLevelUPNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsCanLevelUPNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsCanLevelUPNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsCanLevelUPNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// CMessageCorpsPublishTaskNotify

// optional .CorpsHead NotifyHead = 1;
inline bool CMessageCorpsPublishTaskNotify::has_notifyhead() const {
  return _has_bit(0);
}
inline void CMessageCorpsPublishTaskNotify::clear_notifyhead() {
  if (notifyhead_ != NULL) notifyhead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsPublishTaskNotify::notifyhead() const {
  return notifyhead_ != NULL ? *notifyhead_ : *default_instance_->notifyhead_;
}
inline ::CorpsHead* CMessageCorpsPublishTaskNotify::mutable_notifyhead() {
  _set_bit(0);
  if (notifyhead_ == NULL) notifyhead_ = new ::CorpsHead;
  return notifyhead_;
}

// -------------------------------------------------------------------

// CMessageCorpsBattleResultNotice

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsBattleResultNotice::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsBattleResultNotice::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsBattleResultNotice::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsBattleResultNotice::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string WinCorpsName = 2;
inline bool CMessageCorpsBattleResultNotice::has_wincorpsname() const {
  return _has_bit(1);
}
inline void CMessageCorpsBattleResultNotice::clear_wincorpsname() {
  if (wincorpsname_ != &_default_wincorpsname_) {
    wincorpsname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCorpsBattleResultNotice::wincorpsname() const {
  return *wincorpsname_;
}
inline void CMessageCorpsBattleResultNotice::set_wincorpsname(const ::std::string& value) {
  _set_bit(1);
  if (wincorpsname_ == &_default_wincorpsname_) {
    wincorpsname_ = new ::std::string;
  }
  wincorpsname_->assign(value);
}
inline void CMessageCorpsBattleResultNotice::set_wincorpsname(const char* value) {
  _set_bit(1);
  if (wincorpsname_ == &_default_wincorpsname_) {
    wincorpsname_ = new ::std::string;
  }
  wincorpsname_->assign(value);
}
inline void CMessageCorpsBattleResultNotice::set_wincorpsname(const char* value, size_t size) {
  _set_bit(1);
  if (wincorpsname_ == &_default_wincorpsname_) {
    wincorpsname_ = new ::std::string;
  }
  wincorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsBattleResultNotice::mutable_wincorpsname() {
  _set_bit(1);
  if (wincorpsname_ == &_default_wincorpsname_) {
    wincorpsname_ = new ::std::string;
  }
  return wincorpsname_;
}

// optional string LostCorpsName = 3;
inline bool CMessageCorpsBattleResultNotice::has_lostcorpsname() const {
  return _has_bit(2);
}
inline void CMessageCorpsBattleResultNotice::clear_lostcorpsname() {
  if (lostcorpsname_ != &_default_lostcorpsname_) {
    lostcorpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsBattleResultNotice::lostcorpsname() const {
  return *lostcorpsname_;
}
inline void CMessageCorpsBattleResultNotice::set_lostcorpsname(const ::std::string& value) {
  _set_bit(2);
  if (lostcorpsname_ == &_default_lostcorpsname_) {
    lostcorpsname_ = new ::std::string;
  }
  lostcorpsname_->assign(value);
}
inline void CMessageCorpsBattleResultNotice::set_lostcorpsname(const char* value) {
  _set_bit(2);
  if (lostcorpsname_ == &_default_lostcorpsname_) {
    lostcorpsname_ = new ::std::string;
  }
  lostcorpsname_->assign(value);
}
inline void CMessageCorpsBattleResultNotice::set_lostcorpsname(const char* value, size_t size) {
  _set_bit(2);
  if (lostcorpsname_ == &_default_lostcorpsname_) {
    lostcorpsname_ = new ::std::string;
  }
  lostcorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsBattleResultNotice::mutable_lostcorpsname() {
  _set_bit(2);
  if (lostcorpsname_ == &_default_lostcorpsname_) {
    lostcorpsname_ = new ::std::string;
  }
  return lostcorpsname_;
}

// optional uint32 WinCampID = 4;
inline bool CMessageCorpsBattleResultNotice::has_wincampid() const {
  return _has_bit(3);
}
inline void CMessageCorpsBattleResultNotice::clear_wincampid() {
  wincampid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleResultNotice::wincampid() const {
  return wincampid_;
}
inline void CMessageCorpsBattleResultNotice::set_wincampid(::google::protobuf::uint32 value) {
  _set_bit(3);
  wincampid_ = value;
}

// optional uint32 NpcID = 5;
inline bool CMessageCorpsBattleResultNotice::has_npcid() const {
  return _has_bit(4);
}
inline void CMessageCorpsBattleResultNotice::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleResultNotice::npcid() const {
  return npcid_;
}
inline void CMessageCorpsBattleResultNotice::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(4);
  npcid_ = value;
}

// optional uint32 BattleType = 6;
inline bool CMessageCorpsBattleResultNotice::has_battletype() const {
  return _has_bit(5);
}
inline void CMessageCorpsBattleResultNotice::clear_battletype() {
  battletype_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleResultNotice::battletype() const {
  return battletype_;
}
inline void CMessageCorpsBattleResultNotice::set_battletype(::google::protobuf::uint32 value) {
  _set_bit(5);
  battletype_ = value;
}

// optional uint32 WinCorpsID = 7;
inline bool CMessageCorpsBattleResultNotice::has_wincorpsid() const {
  return _has_bit(6);
}
inline void CMessageCorpsBattleResultNotice::clear_wincorpsid() {
  wincorpsid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleResultNotice::wincorpsid() const {
  return wincorpsid_;
}
inline void CMessageCorpsBattleResultNotice::set_wincorpsid(::google::protobuf::uint32 value) {
  _set_bit(6);
  wincorpsid_ = value;
}

// optional uint32 LostCorpsID = 8;
inline bool CMessageCorpsBattleResultNotice::has_lostcorpsid() const {
  return _has_bit(7);
}
inline void CMessageCorpsBattleResultNotice::clear_lostcorpsid() {
  lostcorpsid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageCorpsBattleResultNotice::lostcorpsid() const {
  return lostcorpsid_;
}
inline void CMessageCorpsBattleResultNotice::set_lostcorpsid(::google::protobuf::uint32 value) {
  _set_bit(7);
  lostcorpsid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsNpcOwnerNotice

// optional uint32 Type = 1;
inline bool CMessageCorpsNpcOwnerNotice::has_type() const {
  return _has_bit(0);
}
inline void CMessageCorpsNpcOwnerNotice::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsNpcOwnerNotice::type() const {
  return type_;
}
inline void CMessageCorpsNpcOwnerNotice::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsNpcOwnerNotice::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsNpcOwnerNotice::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsNpcOwnerNotice::npcid() const {
  return npcid_;
}
inline void CMessageCorpsNpcOwnerNotice::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// optional string CorpsName = 3;
inline bool CMessageCorpsNpcOwnerNotice::has_corpsname() const {
  return _has_bit(2);
}
inline void CMessageCorpsNpcOwnerNotice::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsNpcOwnerNotice::corpsname() const {
  return *corpsname_;
}
inline void CMessageCorpsNpcOwnerNotice::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCorpsNpcOwnerNotice::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCorpsNpcOwnerNotice::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsNpcOwnerNotice::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 CorpsID = 4;
inline bool CMessageCorpsNpcOwnerNotice::has_corpsid() const {
  return _has_bit(3);
}
inline void CMessageCorpsNpcOwnerNotice::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsNpcOwnerNotice::corpsid() const {
  return corpsid_;
}
inline void CMessageCorpsNpcOwnerNotice::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  corpsid_ = value;
}

// optional string FamilyName = 5;
inline bool CMessageCorpsNpcOwnerNotice::has_familyname() const {
  return _has_bit(4);
}
inline void CMessageCorpsNpcOwnerNotice::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageCorpsNpcOwnerNotice::familyname() const {
  return *familyname_;
}
inline void CMessageCorpsNpcOwnerNotice::set_familyname(const ::std::string& value) {
  _set_bit(4);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageCorpsNpcOwnerNotice::set_familyname(const char* value) {
  _set_bit(4);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void CMessageCorpsNpcOwnerNotice::set_familyname(const char* value, size_t size) {
  _set_bit(4);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsNpcOwnerNotice::mutable_familyname() {
  _set_bit(4);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// optional uint32 FamilyID = 6;
inline bool CMessageCorpsNpcOwnerNotice::has_familyid() const {
  return _has_bit(5);
}
inline void CMessageCorpsNpcOwnerNotice::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCorpsNpcOwnerNotice::familyid() const {
  return familyid_;
}
inline void CMessageCorpsNpcOwnerNotice::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(5);
  familyid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsNameChangedNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsNameChangedNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsNameChangedNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsNameChangedNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsNameChangedNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ManagerID = 2;
inline bool CMessageCorpsNameChangedNotify::has_managerid() const {
  return _has_bit(1);
}
inline void CMessageCorpsNameChangedNotify::clear_managerid() {
  managerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsNameChangedNotify::managerid() const {
  return managerid_;
}
inline void CMessageCorpsNameChangedNotify::set_managerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  managerid_ = value;
}

// optional string ManagerName = 3;
inline bool CMessageCorpsNameChangedNotify::has_managername() const {
  return _has_bit(2);
}
inline void CMessageCorpsNameChangedNotify::clear_managername() {
  if (managername_ != &_default_managername_) {
    managername_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsNameChangedNotify::managername() const {
  return *managername_;
}
inline void CMessageCorpsNameChangedNotify::set_managername(const ::std::string& value) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(value);
}
inline void CMessageCorpsNameChangedNotify::set_managername(const char* value) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(value);
}
inline void CMessageCorpsNameChangedNotify::set_managername(const char* value, size_t size) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsNameChangedNotify::mutable_managername() {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  return managername_;
}

// optional uint32 MemberID = 4;
inline bool CMessageCorpsNameChangedNotify::has_memberid() const {
  return _has_bit(3);
}
inline void CMessageCorpsNameChangedNotify::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsNameChangedNotify::memberid() const {
  return memberid_;
}
inline void CMessageCorpsNameChangedNotify::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(3);
  memberid_ = value;
}

// optional string CorpsName = 5;
inline bool CMessageCorpsNameChangedNotify::has_corpsname() const {
  return _has_bit(4);
}
inline void CMessageCorpsNameChangedNotify::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageCorpsNameChangedNotify::corpsname() const {
  return *corpsname_;
}
inline void CMessageCorpsNameChangedNotify::set_corpsname(const ::std::string& value) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCorpsNameChangedNotify::set_corpsname(const char* value) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCorpsNameChangedNotify::set_corpsname(const char* value, size_t size) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsNameChangedNotify::mutable_corpsname() {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// -------------------------------------------------------------------

// CMessageCreateUnionRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCreateUnionRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCreateUnionRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCreateUnionRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCreateUnionRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated uint32 OtherID = 2;
inline int CMessageCreateUnionRequest::otherid_size() const {
  return otherid_.size();
}
inline void CMessageCreateUnionRequest::clear_otherid() {
  otherid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCreateUnionRequest::otherid() const {
  return otherid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCreateUnionRequest::mutable_otherid() {
  return &otherid_;
}
inline ::google::protobuf::uint32 CMessageCreateUnionRequest::otherid(int index) const {
  return otherid_.Get(index);
}
inline void CMessageCreateUnionRequest::set_otherid(int index, ::google::protobuf::uint32 value) {
  otherid_.Set(index, value);
}
inline void CMessageCreateUnionRequest::add_otherid(::google::protobuf::uint32 value) {
  otherid_.Add(value);
}

// optional string UnionName = 3;
inline bool CMessageCreateUnionRequest::has_unionname() const {
  return _has_bit(2);
}
inline void CMessageCreateUnionRequest::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCreateUnionRequest::unionname() const {
  return *unionname_;
}
inline void CMessageCreateUnionRequest::set_unionname(const ::std::string& value) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageCreateUnionRequest::set_unionname(const char* value) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageCreateUnionRequest::set_unionname(const char* value, size_t size) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateUnionRequest::mutable_unionname() {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional string UnionNotice = 4;
inline bool CMessageCreateUnionRequest::has_unionnotice() const {
  return _has_bit(3);
}
inline void CMessageCreateUnionRequest::clear_unionnotice() {
  if (unionnotice_ != &_default_unionnotice_) {
    unionnotice_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCreateUnionRequest::unionnotice() const {
  return *unionnotice_;
}
inline void CMessageCreateUnionRequest::set_unionnotice(const ::std::string& value) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageCreateUnionRequest::set_unionnotice(const char* value) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageCreateUnionRequest::set_unionnotice(const char* value, size_t size) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateUnionRequest::mutable_unionnotice() {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  return unionnotice_;
}

// optional uint32 NPCEntityID = 5;
inline bool CMessageCreateUnionRequest::has_npcentityid() const {
  return _has_bit(4);
}
inline void CMessageCreateUnionRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCreateUnionRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageCreateUnionRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(4);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateUnionResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCreateUnionResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCreateUnionResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCreateUnionResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCreateUnionResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Result = 2;
inline bool CMessageCreateUnionResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageCreateUnionResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCreateUnionResponse::result() const {
  return result_;
}
inline void CMessageCreateUnionResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// repeated uint32 OtherID = 3;
inline int CMessageCreateUnionResponse::otherid_size() const {
  return otherid_.size();
}
inline void CMessageCreateUnionResponse::clear_otherid() {
  otherid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCreateUnionResponse::otherid() const {
  return otherid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCreateUnionResponse::mutable_otherid() {
  return &otherid_;
}
inline ::google::protobuf::uint32 CMessageCreateUnionResponse::otherid(int index) const {
  return otherid_.Get(index);
}
inline void CMessageCreateUnionResponse::set_otherid(int index, ::google::protobuf::uint32 value) {
  otherid_.Set(index, value);
}
inline void CMessageCreateUnionResponse::add_otherid(::google::protobuf::uint32 value) {
  otherid_.Add(value);
}

// optional uint32 UnionID = 4;
inline bool CMessageCreateUnionResponse::has_unionid() const {
  return _has_bit(3);
}
inline void CMessageCreateUnionResponse::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCreateUnionResponse::unionid() const {
  return unionid_;
}
inline void CMessageCreateUnionResponse::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(3);
  unionid_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateUnionNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCreateUnionNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCreateUnionNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCreateUnionNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCreateUnionNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 HeadID = 2;
inline bool CMessageCreateUnionNotify::has_headid() const {
  return _has_bit(1);
}
inline void CMessageCreateUnionNotify::clear_headid() {
  headid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCreateUnionNotify::headid() const {
  return headid_;
}
inline void CMessageCreateUnionNotify::set_headid(::google::protobuf::uint32 value) {
  _set_bit(1);
  headid_ = value;
}

// optional string HeadName = 3;
inline bool CMessageCreateUnionNotify::has_headname() const {
  return _has_bit(2);
}
inline void CMessageCreateUnionNotify::clear_headname() {
  if (headname_ != &_default_headname_) {
    headname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCreateUnionNotify::headname() const {
  return *headname_;
}
inline void CMessageCreateUnionNotify::set_headname(const ::std::string& value) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(value);
}
inline void CMessageCreateUnionNotify::set_headname(const char* value) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(value);
}
inline void CMessageCreateUnionNotify::set_headname(const char* value, size_t size) {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  headname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateUnionNotify::mutable_headname() {
  _set_bit(2);
  if (headname_ == &_default_headname_) {
    headname_ = new ::std::string;
  }
  return headname_;
}

// repeated uint32 OtherID = 4;
inline int CMessageCreateUnionNotify::otherid_size() const {
  return otherid_.size();
}
inline void CMessageCreateUnionNotify::clear_otherid() {
  otherid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCreateUnionNotify::otherid() const {
  return otherid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCreateUnionNotify::mutable_otherid() {
  return &otherid_;
}
inline ::google::protobuf::uint32 CMessageCreateUnionNotify::otherid(int index) const {
  return otherid_.Get(index);
}
inline void CMessageCreateUnionNotify::set_otherid(int index, ::google::protobuf::uint32 value) {
  otherid_.Set(index, value);
}
inline void CMessageCreateUnionNotify::add_otherid(::google::protobuf::uint32 value) {
  otherid_.Add(value);
}

// repeated string OtherName = 5;
inline int CMessageCreateUnionNotify::othername_size() const {
  return othername_.size();
}
inline void CMessageCreateUnionNotify::clear_othername() {
  othername_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageCreateUnionNotify::othername() const {
  return othername_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageCreateUnionNotify::mutable_othername() {
  return &othername_;
}
inline const ::std::string& CMessageCreateUnionNotify::othername(int index) const {
  return othername_.Get(index);
}
inline ::std::string* CMessageCreateUnionNotify::mutable_othername(int index) {
  return othername_.Mutable(index);
}
inline void CMessageCreateUnionNotify::set_othername(int index, const ::std::string& value) {
  othername_.Mutable(index)->assign(value);
}
inline void CMessageCreateUnionNotify::set_othername(int index, const char* value) {
  othername_.Mutable(index)->assign(value);
}
inline void CMessageCreateUnionNotify::set_othername(int index, const char* value, size_t size) {
  othername_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateUnionNotify::add_othername() {
  return othername_.Add();
}
inline void CMessageCreateUnionNotify::add_othername(const ::std::string& value) {
  othername_.Add()->assign(value);
}
inline void CMessageCreateUnionNotify::add_othername(const char* value) {
  othername_.Add()->assign(value);
}
inline void CMessageCreateUnionNotify::add_othername(const char* value, size_t size) {
  othername_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional uint32 UnionID = 6;
inline bool CMessageCreateUnionNotify::has_unionid() const {
  return _has_bit(5);
}
inline void CMessageCreateUnionNotify::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageCreateUnionNotify::unionid() const {
  return unionid_;
}
inline void CMessageCreateUnionNotify::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(5);
  unionid_ = value;
}

// optional string UnionName = 7;
inline bool CMessageCreateUnionNotify::has_unionname() const {
  return _has_bit(6);
}
inline void CMessageCreateUnionNotify::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageCreateUnionNotify::unionname() const {
  return *unionname_;
}
inline void CMessageCreateUnionNotify::set_unionname(const ::std::string& value) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageCreateUnionNotify::set_unionname(const char* value) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageCreateUnionNotify::set_unionname(const char* value, size_t size) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateUnionNotify::mutable_unionname() {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// -------------------------------------------------------------------

// CMessageApplyUnionRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageApplyUnionRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageApplyUnionRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageApplyUnionRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageApplyUnionRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string UnionName = 2;
inline bool CMessageApplyUnionRequest::has_unionname() const {
  return _has_bit(1);
}
inline void CMessageApplyUnionRequest::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageApplyUnionRequest::unionname() const {
  return *unionname_;
}
inline void CMessageApplyUnionRequest::set_unionname(const ::std::string& value) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageApplyUnionRequest::set_unionname(const char* value) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageApplyUnionRequest::set_unionname(const char* value, size_t size) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageApplyUnionRequest::mutable_unionname() {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional uint32 UnionID = 3;
inline bool CMessageApplyUnionRequest::has_unionid() const {
  return _has_bit(2);
}
inline void CMessageApplyUnionRequest::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageApplyUnionRequest::unionid() const {
  return unionid_;
}
inline void CMessageApplyUnionRequest::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(2);
  unionid_ = value;
}

// optional uint32 RoleID = 4;
inline bool CMessageApplyUnionRequest::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageApplyUnionRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageApplyUnionRequest::roleid() const {
  return roleid_;
}
inline void CMessageApplyUnionRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageApplyUnionResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageApplyUnionResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageApplyUnionResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageApplyUnionResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageApplyUnionResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageApplyUnionResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageApplyUnionResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageApplyUnionResponse::errcode() const {
  return errcode_;
}
inline void CMessageApplyUnionResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional string UnionName = 3;
inline bool CMessageApplyUnionResponse::has_unionname() const {
  return _has_bit(2);
}
inline void CMessageApplyUnionResponse::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageApplyUnionResponse::unionname() const {
  return *unionname_;
}
inline void CMessageApplyUnionResponse::set_unionname(const ::std::string& value) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageApplyUnionResponse::set_unionname(const char* value) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageApplyUnionResponse::set_unionname(const char* value, size_t size) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageApplyUnionResponse::mutable_unionname() {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// -------------------------------------------------------------------

// CMessageUnionMemberApplyNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageUnionMemberApplyNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageUnionMemberApplyNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageUnionMemberApplyNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageUnionMemberApplyNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional .PBCorpsBasicInfo CorpsInfo = 2;
inline bool CMessageUnionMemberApplyNotify::has_corpsinfo() const {
  return _has_bit(1);
}
inline void CMessageUnionMemberApplyNotify::clear_corpsinfo() {
  if (corpsinfo_ != NULL) corpsinfo_->::PBCorpsBasicInfo::Clear();
  _clear_bit(1);
}
inline const ::PBCorpsBasicInfo& CMessageUnionMemberApplyNotify::corpsinfo() const {
  return corpsinfo_ != NULL ? *corpsinfo_ : *default_instance_->corpsinfo_;
}
inline ::PBCorpsBasicInfo* CMessageUnionMemberApplyNotify::mutable_corpsinfo() {
  _set_bit(1);
  if (corpsinfo_ == NULL) corpsinfo_ = new ::PBCorpsBasicInfo;
  return corpsinfo_;
}

// -------------------------------------------------------------------

// CMessageReplyUnionMemberApplyRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageReplyUnionMemberApplyRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageReplyUnionMemberApplyRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageReplyUnionMemberApplyRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageReplyUnionMemberApplyRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Result = 2;
inline bool CMessageReplyUnionMemberApplyRequest::has_result() const {
  return _has_bit(1);
}
inline void CMessageReplyUnionMemberApplyRequest::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReplyUnionMemberApplyRequest::result() const {
  return result_;
}
inline void CMessageReplyUnionMemberApplyRequest::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 CorpsID = 3;
inline bool CMessageReplyUnionMemberApplyRequest::has_corpsid() const {
  return _has_bit(2);
}
inline void CMessageReplyUnionMemberApplyRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReplyUnionMemberApplyRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageReplyUnionMemberApplyRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  corpsid_ = value;
}

// -------------------------------------------------------------------

// CMessageReplyUnionMemberApplyResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageReplyUnionMemberApplyResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageReplyUnionMemberApplyResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageReplyUnionMemberApplyResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageReplyUnionMemberApplyResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageReplyUnionMemberApplyResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageReplyUnionMemberApplyResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReplyUnionMemberApplyResponse::errcode() const {
  return errcode_;
}
inline void CMessageReplyUnionMemberApplyResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 Result = 3;
inline bool CMessageReplyUnionMemberApplyResponse::has_result() const {
  return _has_bit(2);
}
inline void CMessageReplyUnionMemberApplyResponse::clear_result() {
  result_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReplyUnionMemberApplyResponse::result() const {
  return result_;
}
inline void CMessageReplyUnionMemberApplyResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(2);
  result_ = value;
}

// optional uint32 CorpsID = 4;
inline bool CMessageReplyUnionMemberApplyResponse::has_corpsid() const {
  return _has_bit(3);
}
inline void CMessageReplyUnionMemberApplyResponse::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageReplyUnionMemberApplyResponse::corpsid() const {
  return corpsid_;
}
inline void CMessageReplyUnionMemberApplyResponse::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  corpsid_ = value;
}

// -------------------------------------------------------------------

// CMessageApplyUnionResultNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageApplyUnionResultNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageApplyUnionResultNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageApplyUnionResultNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageApplyUnionResultNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ResultCode = 2;
inline bool CMessageApplyUnionResultNotify::has_resultcode() const {
  return _has_bit(1);
}
inline void CMessageApplyUnionResultNotify::clear_resultcode() {
  resultcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageApplyUnionResultNotify::resultcode() const {
  return resultcode_;
}
inline void CMessageApplyUnionResultNotify::set_resultcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  resultcode_ = value;
}

// optional uint32 UnionID = 3;
inline bool CMessageApplyUnionResultNotify::has_unionid() const {
  return _has_bit(2);
}
inline void CMessageApplyUnionResultNotify::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageApplyUnionResultNotify::unionid() const {
  return unionid_;
}
inline void CMessageApplyUnionResultNotify::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(2);
  unionid_ = value;
}

// optional string UnionName = 4;
inline bool CMessageApplyUnionResultNotify::has_unionname() const {
  return _has_bit(3);
}
inline void CMessageApplyUnionResultNotify::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageApplyUnionResultNotify::unionname() const {
  return *unionname_;
}
inline void CMessageApplyUnionResultNotify::set_unionname(const ::std::string& value) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageApplyUnionResultNotify::set_unionname(const char* value) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageApplyUnionResultNotify::set_unionname(const char* value, size_t size) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageApplyUnionResultNotify::mutable_unionname() {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// -------------------------------------------------------------------

// CMessageInviteUnionMemberRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageInviteUnionMemberRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageInviteUnionMemberRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageInviteUnionMemberRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageInviteUnionMemberRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string CorpsName = 2;
inline bool CMessageInviteUnionMemberRequest::has_corpsname() const {
  return _has_bit(1);
}
inline void CMessageInviteUnionMemberRequest::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageInviteUnionMemberRequest::corpsname() const {
  return *corpsname_;
}
inline void CMessageInviteUnionMemberRequest::set_corpsname(const ::std::string& value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageInviteUnionMemberRequest::set_corpsname(const char* value) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageInviteUnionMemberRequest::set_corpsname(const char* value, size_t size) {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageInviteUnionMemberRequest::mutable_corpsname() {
  _set_bit(1);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 MemberID = 3;
inline bool CMessageInviteUnionMemberRequest::has_memberid() const {
  return _has_bit(2);
}
inline void CMessageInviteUnionMemberRequest::clear_memberid() {
  memberid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageInviteUnionMemberRequest::memberid() const {
  return memberid_;
}
inline void CMessageInviteUnionMemberRequest::set_memberid(::google::protobuf::uint32 value) {
  _set_bit(2);
  memberid_ = value;
}

// -------------------------------------------------------------------

// CMessageInviteUnionMemberResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageInviteUnionMemberResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageInviteUnionMemberResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageInviteUnionMemberResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageInviteUnionMemberResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageInviteUnionMemberResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageInviteUnionMemberResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteUnionMemberResponse::errcode() const {
  return errcode_;
}
inline void CMessageInviteUnionMemberResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional string CorpsName = 3;
inline bool CMessageInviteUnionMemberResponse::has_corpsname() const {
  return _has_bit(2);
}
inline void CMessageInviteUnionMemberResponse::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageInviteUnionMemberResponse::corpsname() const {
  return *corpsname_;
}
inline void CMessageInviteUnionMemberResponse::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageInviteUnionMemberResponse::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageInviteUnionMemberResponse::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageInviteUnionMemberResponse::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// -------------------------------------------------------------------

// CMessageUnionInviteNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageUnionInviteNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageUnionInviteNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageUnionInviteNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageUnionInviteNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string InvitingName = 2;
inline bool CMessageUnionInviteNotify::has_invitingname() const {
  return _has_bit(1);
}
inline void CMessageUnionInviteNotify::clear_invitingname() {
  if (invitingname_ != &_default_invitingname_) {
    invitingname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageUnionInviteNotify::invitingname() const {
  return *invitingname_;
}
inline void CMessageUnionInviteNotify::set_invitingname(const ::std::string& value) {
  _set_bit(1);
  if (invitingname_ == &_default_invitingname_) {
    invitingname_ = new ::std::string;
  }
  invitingname_->assign(value);
}
inline void CMessageUnionInviteNotify::set_invitingname(const char* value) {
  _set_bit(1);
  if (invitingname_ == &_default_invitingname_) {
    invitingname_ = new ::std::string;
  }
  invitingname_->assign(value);
}
inline void CMessageUnionInviteNotify::set_invitingname(const char* value, size_t size) {
  _set_bit(1);
  if (invitingname_ == &_default_invitingname_) {
    invitingname_ = new ::std::string;
  }
  invitingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUnionInviteNotify::mutable_invitingname() {
  _set_bit(1);
  if (invitingname_ == &_default_invitingname_) {
    invitingname_ = new ::std::string;
  }
  return invitingname_;
}

// optional uint32 InvitingID = 3;
inline bool CMessageUnionInviteNotify::has_invitingid() const {
  return _has_bit(2);
}
inline void CMessageUnionInviteNotify::clear_invitingid() {
  invitingid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUnionInviteNotify::invitingid() const {
  return invitingid_;
}
inline void CMessageUnionInviteNotify::set_invitingid(::google::protobuf::uint32 value) {
  _set_bit(2);
  invitingid_ = value;
}

// optional .PBUnionBasicInfo UnionInfo = 4;
inline bool CMessageUnionInviteNotify::has_unioninfo() const {
  return _has_bit(3);
}
inline void CMessageUnionInviteNotify::clear_unioninfo() {
  if (unioninfo_ != NULL) unioninfo_->::PBUnionBasicInfo::Clear();
  _clear_bit(3);
}
inline const ::PBUnionBasicInfo& CMessageUnionInviteNotify::unioninfo() const {
  return unioninfo_ != NULL ? *unioninfo_ : *default_instance_->unioninfo_;
}
inline ::PBUnionBasicInfo* CMessageUnionInviteNotify::mutable_unioninfo() {
  _set_bit(3);
  if (unioninfo_ == NULL) unioninfo_ = new ::PBUnionBasicInfo;
  return unioninfo_;
}

// -------------------------------------------------------------------

// CMessageReplyUnionInviteRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageReplyUnionInviteRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageReplyUnionInviteRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageReplyUnionInviteRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageReplyUnionInviteRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Result = 2;
inline bool CMessageReplyUnionInviteRequest::has_result() const {
  return _has_bit(1);
}
inline void CMessageReplyUnionInviteRequest::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReplyUnionInviteRequest::result() const {
  return result_;
}
inline void CMessageReplyUnionInviteRequest::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 UnionID = 3;
inline bool CMessageReplyUnionInviteRequest::has_unionid() const {
  return _has_bit(2);
}
inline void CMessageReplyUnionInviteRequest::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReplyUnionInviteRequest::unionid() const {
  return unionid_;
}
inline void CMessageReplyUnionInviteRequest::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(2);
  unionid_ = value;
}

// optional uint32 InvitingID = 4;
inline bool CMessageReplyUnionInviteRequest::has_invitingid() const {
  return _has_bit(3);
}
inline void CMessageReplyUnionInviteRequest::clear_invitingid() {
  invitingid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageReplyUnionInviteRequest::invitingid() const {
  return invitingid_;
}
inline void CMessageReplyUnionInviteRequest::set_invitingid(::google::protobuf::uint32 value) {
  _set_bit(3);
  invitingid_ = value;
}

// -------------------------------------------------------------------

// CMessageReplyUnionInviteResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageReplyUnionInviteResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageReplyUnionInviteResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageReplyUnionInviteResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageReplyUnionInviteResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageReplyUnionInviteResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageReplyUnionInviteResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageReplyUnionInviteResponse::errcode() const {
  return errcode_;
}
inline void CMessageReplyUnionInviteResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 Result = 3;
inline bool CMessageReplyUnionInviteResponse::has_result() const {
  return _has_bit(2);
}
inline void CMessageReplyUnionInviteResponse::clear_result() {
  result_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageReplyUnionInviteResponse::result() const {
  return result_;
}
inline void CMessageReplyUnionInviteResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(2);
  result_ = value;
}

// optional string UnionName = 4;
inline bool CMessageReplyUnionInviteResponse::has_unionname() const {
  return _has_bit(3);
}
inline void CMessageReplyUnionInviteResponse::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageReplyUnionInviteResponse::unionname() const {
  return *unionname_;
}
inline void CMessageReplyUnionInviteResponse::set_unionname(const ::std::string& value) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageReplyUnionInviteResponse::set_unionname(const char* value) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageReplyUnionInviteResponse::set_unionname(const char* value, size_t size) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageReplyUnionInviteResponse::mutable_unionname() {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional uint32 UnionID = 5;
inline bool CMessageReplyUnionInviteResponse::has_unionid() const {
  return _has_bit(4);
}
inline void CMessageReplyUnionInviteResponse::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageReplyUnionInviteResponse::unionid() const {
  return unionid_;
}
inline void CMessageReplyUnionInviteResponse::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(4);
  unionid_ = value;
}

// -------------------------------------------------------------------

// CMessageUnionInviteResultNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageUnionInviteResultNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageUnionInviteResultNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageUnionInviteResultNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageUnionInviteResultNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Result = 2;
inline bool CMessageUnionInviteResultNotify::has_result() const {
  return _has_bit(1);
}
inline void CMessageUnionInviteResultNotify::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUnionInviteResultNotify::result() const {
  return result_;
}
inline void CMessageUnionInviteResultNotify::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional string CorpsName = 3;
inline bool CMessageUnionInviteResultNotify::has_corpsname() const {
  return _has_bit(2);
}
inline void CMessageUnionInviteResultNotify::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageUnionInviteResultNotify::corpsname() const {
  return *corpsname_;
}
inline void CMessageUnionInviteResultNotify::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageUnionInviteResultNotify::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageUnionInviteResultNotify::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUnionInviteResultNotify::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// -------------------------------------------------------------------

// CMessageCorpsJoinUnionNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsJoinUnionNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsJoinUnionNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsJoinUnionNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsJoinUnionNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional .PBCorpsBasicInfo CorpsInfo = 2;
inline bool CMessageCorpsJoinUnionNotify::has_corpsinfo() const {
  return _has_bit(1);
}
inline void CMessageCorpsJoinUnionNotify::clear_corpsinfo() {
  if (corpsinfo_ != NULL) corpsinfo_->::PBCorpsBasicInfo::Clear();
  _clear_bit(1);
}
inline const ::PBCorpsBasicInfo& CMessageCorpsJoinUnionNotify::corpsinfo() const {
  return corpsinfo_ != NULL ? *corpsinfo_ : *default_instance_->corpsinfo_;
}
inline ::PBCorpsBasicInfo* CMessageCorpsJoinUnionNotify::mutable_corpsinfo() {
  _set_bit(1);
  if (corpsinfo_ == NULL) corpsinfo_ = new ::PBCorpsBasicInfo;
  return corpsinfo_;
}

// optional uint32 UnionID = 3;
inline bool CMessageCorpsJoinUnionNotify::has_unionid() const {
  return _has_bit(2);
}
inline void CMessageCorpsJoinUnionNotify::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsJoinUnionNotify::unionid() const {
  return unionid_;
}
inline void CMessageCorpsJoinUnionNotify::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(2);
  unionid_ = value;
}

// optional string UnionName = 4;
inline bool CMessageCorpsJoinUnionNotify::has_unionname() const {
  return _has_bit(3);
}
inline void CMessageCorpsJoinUnionNotify::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCorpsJoinUnionNotify::unionname() const {
  return *unionname_;
}
inline void CMessageCorpsJoinUnionNotify::set_unionname(const ::std::string& value) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageCorpsJoinUnionNotify::set_unionname(const char* value) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageCorpsJoinUnionNotify::set_unionname(const char* value, size_t size) {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsJoinUnionNotify::mutable_unionname() {
  _set_bit(3);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// -------------------------------------------------------------------

// CMessageCorpsLeaveUnionRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsLeaveUnionRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsLeaveUnionRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsLeaveUnionRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsLeaveUnionRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Msgcode = 2;
inline bool CMessageCorpsLeaveUnionRequest::has_msgcode() const {
  return _has_bit(1);
}
inline void CMessageCorpsLeaveUnionRequest::clear_msgcode() {
  msgcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsLeaveUnionRequest::msgcode() const {
  return msgcode_;
}
inline void CMessageCorpsLeaveUnionRequest::set_msgcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  msgcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsLeaveUnionResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsLeaveUnionResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsLeaveUnionResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsLeaveUnionResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsLeaveUnionResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageCorpsLeaveUnionResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageCorpsLeaveUnionResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsLeaveUnionResponse::errcode() const {
  return errcode_;
}
inline void CMessageCorpsLeaveUnionResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsLeaveUnionNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsLeaveUnionNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsLeaveUnionNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsLeaveUnionNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsLeaveUnionNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CorpsID = 2;
inline bool CMessageCorpsLeaveUnionNotify::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageCorpsLeaveUnionNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsLeaveUnionNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageCorpsLeaveUnionNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional string CorpsName = 3;
inline bool CMessageCorpsLeaveUnionNotify::has_corpsname() const {
  return _has_bit(2);
}
inline void CMessageCorpsLeaveUnionNotify::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsLeaveUnionNotify::corpsname() const {
  return *corpsname_;
}
inline void CMessageCorpsLeaveUnionNotify::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCorpsLeaveUnionNotify::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCorpsLeaveUnionNotify::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsLeaveUnionNotify::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// -------------------------------------------------------------------

// CMessageKickCorpsRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageKickCorpsRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageKickCorpsRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageKickCorpsRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageKickCorpsRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CorpsID = 2;
inline bool CMessageKickCorpsRequest::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageKickCorpsRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickCorpsRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageKickCorpsRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickCorpsResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageKickCorpsResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageKickCorpsResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageKickCorpsResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageKickCorpsResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageKickCorpsResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageKickCorpsResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickCorpsResponse::errcode() const {
  return errcode_;
}
inline void CMessageKickCorpsResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional string CorpsName = 3;
inline bool CMessageKickCorpsResponse::has_corpsname() const {
  return _has_bit(2);
}
inline void CMessageKickCorpsResponse::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageKickCorpsResponse::corpsname() const {
  return *corpsname_;
}
inline void CMessageKickCorpsResponse::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageKickCorpsResponse::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageKickCorpsResponse::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageKickCorpsResponse::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 CorpsID = 4;
inline bool CMessageKickCorpsResponse::has_corpsid() const {
  return _has_bit(3);
}
inline void CMessageKickCorpsResponse::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageKickCorpsResponse::corpsid() const {
  return corpsid_;
}
inline void CMessageKickCorpsResponse::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  corpsid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickCorpsNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageKickCorpsNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageKickCorpsNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageKickCorpsNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageKickCorpsNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CorpsID = 2;
inline bool CMessageKickCorpsNotify::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageKickCorpsNotify::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickCorpsNotify::corpsid() const {
  return corpsid_;
}
inline void CMessageKickCorpsNotify::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional string CorpsName = 3;
inline bool CMessageKickCorpsNotify::has_corpsname() const {
  return _has_bit(2);
}
inline void CMessageKickCorpsNotify::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageKickCorpsNotify::corpsname() const {
  return *corpsname_;
}
inline void CMessageKickCorpsNotify::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageKickCorpsNotify::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageKickCorpsNotify::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageKickCorpsNotify::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// -------------------------------------------------------------------

// CMessageMakeUnionRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageMakeUnionRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageMakeUnionRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageMakeUnionRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageMakeUnionRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 OpType = 2;
inline bool CMessageMakeUnionRequest::has_optype() const {
  return _has_bit(1);
}
inline void CMessageMakeUnionRequest::clear_optype() {
  optype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageMakeUnionRequest::optype() const {
  return optype_;
}
inline void CMessageMakeUnionRequest::set_optype(::google::protobuf::uint32 value) {
  _set_bit(1);
  optype_ = value;
}

// optional string UnionName = 3;
inline bool CMessageMakeUnionRequest::has_unionname() const {
  return _has_bit(2);
}
inline void CMessageMakeUnionRequest::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageMakeUnionRequest::unionname() const {
  return *unionname_;
}
inline void CMessageMakeUnionRequest::set_unionname(const ::std::string& value) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageMakeUnionRequest::set_unionname(const char* value) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageMakeUnionRequest::set_unionname(const char* value, size_t size) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageMakeUnionRequest::mutable_unionname() {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional string UnionNotice = 4;
inline bool CMessageMakeUnionRequest::has_unionnotice() const {
  return _has_bit(3);
}
inline void CMessageMakeUnionRequest::clear_unionnotice() {
  if (unionnotice_ != &_default_unionnotice_) {
    unionnotice_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageMakeUnionRequest::unionnotice() const {
  return *unionnotice_;
}
inline void CMessageMakeUnionRequest::set_unionnotice(const ::std::string& value) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageMakeUnionRequest::set_unionnotice(const char* value) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageMakeUnionRequest::set_unionnotice(const char* value, size_t size) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageMakeUnionRequest::mutable_unionnotice() {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  return unionnotice_;
}

// optional uint32 CorpsID = 5;
inline bool CMessageMakeUnionRequest::has_corpsid() const {
  return _has_bit(4);
}
inline void CMessageMakeUnionRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageMakeUnionRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageMakeUnionRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(4);
  corpsid_ = value;
}

// optional uint32 TargetID = 6;
inline bool CMessageMakeUnionRequest::has_targetid() const {
  return _has_bit(5);
}
inline void CMessageMakeUnionRequest::clear_targetid() {
  targetid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageMakeUnionRequest::targetid() const {
  return targetid_;
}
inline void CMessageMakeUnionRequest::set_targetid(::google::protobuf::uint32 value) {
  _set_bit(5);
  targetid_ = value;
}

// -------------------------------------------------------------------

// CMessageMakeUnionResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageMakeUnionResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageMakeUnionResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageMakeUnionResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageMakeUnionResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageMakeUnionResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageMakeUnionResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageMakeUnionResponse::errcode() const {
  return errcode_;
}
inline void CMessageMakeUnionResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional uint32 OpType = 3;
inline bool CMessageMakeUnionResponse::has_optype() const {
  return _has_bit(2);
}
inline void CMessageMakeUnionResponse::clear_optype() {
  optype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageMakeUnionResponse::optype() const {
  return optype_;
}
inline void CMessageMakeUnionResponse::set_optype(::google::protobuf::uint32 value) {
  _set_bit(2);
  optype_ = value;
}

// -------------------------------------------------------------------

// CMessageMakeUnionNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageMakeUnionNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageMakeUnionNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageMakeUnionNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageMakeUnionNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 OpType = 2;
inline bool CMessageMakeUnionNotify::has_optype() const {
  return _has_bit(1);
}
inline void CMessageMakeUnionNotify::clear_optype() {
  optype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageMakeUnionNotify::optype() const {
  return optype_;
}
inline void CMessageMakeUnionNotify::set_optype(::google::protobuf::uint32 value) {
  _set_bit(1);
  optype_ = value;
}

// optional string UnionName = 3;
inline bool CMessageMakeUnionNotify::has_unionname() const {
  return _has_bit(2);
}
inline void CMessageMakeUnionNotify::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageMakeUnionNotify::unionname() const {
  return *unionname_;
}
inline void CMessageMakeUnionNotify::set_unionname(const ::std::string& value) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageMakeUnionNotify::set_unionname(const char* value) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageMakeUnionNotify::set_unionname(const char* value, size_t size) {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageMakeUnionNotify::mutable_unionname() {
  _set_bit(2);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional string UnionNotice = 4;
inline bool CMessageMakeUnionNotify::has_unionnotice() const {
  return _has_bit(3);
}
inline void CMessageMakeUnionNotify::clear_unionnotice() {
  if (unionnotice_ != &_default_unionnotice_) {
    unionnotice_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageMakeUnionNotify::unionnotice() const {
  return *unionnotice_;
}
inline void CMessageMakeUnionNotify::set_unionnotice(const ::std::string& value) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageMakeUnionNotify::set_unionnotice(const char* value) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageMakeUnionNotify::set_unionnotice(const char* value, size_t size) {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageMakeUnionNotify::mutable_unionnotice() {
  _set_bit(3);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  return unionnotice_;
}

// repeated uint32 CorpsID = 5;
inline int CMessageMakeUnionNotify::corpsid_size() const {
  return corpsid_.size();
}
inline void CMessageMakeUnionNotify::clear_corpsid() {
  corpsid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageMakeUnionNotify::corpsid() const {
  return corpsid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageMakeUnionNotify::mutable_corpsid() {
  return &corpsid_;
}
inline ::google::protobuf::uint32 CMessageMakeUnionNotify::corpsid(int index) const {
  return corpsid_.Get(index);
}
inline void CMessageMakeUnionNotify::set_corpsid(int index, ::google::protobuf::uint32 value) {
  corpsid_.Set(index, value);
}
inline void CMessageMakeUnionNotify::add_corpsid(::google::protobuf::uint32 value) {
  corpsid_.Add(value);
}

// repeated string CorpsName = 6;
inline int CMessageMakeUnionNotify::corpsname_size() const {
  return corpsname_.size();
}
inline void CMessageMakeUnionNotify::clear_corpsname() {
  corpsname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageMakeUnionNotify::corpsname() const {
  return corpsname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageMakeUnionNotify::mutable_corpsname() {
  return &corpsname_;
}
inline const ::std::string& CMessageMakeUnionNotify::corpsname(int index) const {
  return corpsname_.Get(index);
}
inline ::std::string* CMessageMakeUnionNotify::mutable_corpsname(int index) {
  return corpsname_.Mutable(index);
}
inline void CMessageMakeUnionNotify::set_corpsname(int index, const ::std::string& value) {
  corpsname_.Mutable(index)->assign(value);
}
inline void CMessageMakeUnionNotify::set_corpsname(int index, const char* value) {
  corpsname_.Mutable(index)->assign(value);
}
inline void CMessageMakeUnionNotify::set_corpsname(int index, const char* value, size_t size) {
  corpsname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageMakeUnionNotify::add_corpsname() {
  return corpsname_.Add();
}
inline void CMessageMakeUnionNotify::add_corpsname(const ::std::string& value) {
  corpsname_.Add()->assign(value);
}
inline void CMessageMakeUnionNotify::add_corpsname(const char* value) {
  corpsname_.Add()->assign(value);
}
inline void CMessageMakeUnionNotify::add_corpsname(const char* value, size_t size) {
  corpsname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional string HeadCorpsName = 7;
inline bool CMessageMakeUnionNotify::has_headcorpsname() const {
  return _has_bit(6);
}
inline void CMessageMakeUnionNotify::clear_headcorpsname() {
  if (headcorpsname_ != &_default_headcorpsname_) {
    headcorpsname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageMakeUnionNotify::headcorpsname() const {
  return *headcorpsname_;
}
inline void CMessageMakeUnionNotify::set_headcorpsname(const ::std::string& value) {
  _set_bit(6);
  if (headcorpsname_ == &_default_headcorpsname_) {
    headcorpsname_ = new ::std::string;
  }
  headcorpsname_->assign(value);
}
inline void CMessageMakeUnionNotify::set_headcorpsname(const char* value) {
  _set_bit(6);
  if (headcorpsname_ == &_default_headcorpsname_) {
    headcorpsname_ = new ::std::string;
  }
  headcorpsname_->assign(value);
}
inline void CMessageMakeUnionNotify::set_headcorpsname(const char* value, size_t size) {
  _set_bit(6);
  if (headcorpsname_ == &_default_headcorpsname_) {
    headcorpsname_ = new ::std::string;
  }
  headcorpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageMakeUnionNotify::mutable_headcorpsname() {
  _set_bit(6);
  if (headcorpsname_ == &_default_headcorpsname_) {
    headcorpsname_ = new ::std::string;
  }
  return headcorpsname_;
}

// optional uint32 HeadCharID = 8;
inline bool CMessageMakeUnionNotify::has_headcharid() const {
  return _has_bit(7);
}
inline void CMessageMakeUnionNotify::clear_headcharid() {
  headcharid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageMakeUnionNotify::headcharid() const {
  return headcharid_;
}
inline void CMessageMakeUnionNotify::set_headcharid(::google::protobuf::uint32 value) {
  _set_bit(7);
  headcharid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetUnionInfoRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetUnionInfoRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetUnionInfoRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetUnionInfoRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetUnionInfoRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 UnionID = 2;
inline bool CMessageGetUnionInfoRequest::has_unionid() const {
  return _has_bit(1);
}
inline void CMessageGetUnionInfoRequest::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetUnionInfoRequest::unionid() const {
  return unionid_;
}
inline void CMessageGetUnionInfoRequest::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(1);
  unionid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetUnionInfoResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetUnionInfoResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetUnionInfoResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetUnionInfoResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetUnionInfoResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageGetUnionInfoResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageGetUnionInfoResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetUnionInfoResponse::errcode() const {
  return errcode_;
}
inline void CMessageGetUnionInfoResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// optional .PBUnionBasicInfo UnionInfo = 3;
inline bool CMessageGetUnionInfoResponse::has_unioninfo() const {
  return _has_bit(2);
}
inline void CMessageGetUnionInfoResponse::clear_unioninfo() {
  if (unioninfo_ != NULL) unioninfo_->::PBUnionBasicInfo::Clear();
  _clear_bit(2);
}
inline const ::PBUnionBasicInfo& CMessageGetUnionInfoResponse::unioninfo() const {
  return unioninfo_ != NULL ? *unioninfo_ : *default_instance_->unioninfo_;
}
inline ::PBUnionBasicInfo* CMessageGetUnionInfoResponse::mutable_unioninfo() {
  _set_bit(2);
  if (unioninfo_ == NULL) unioninfo_ = new ::PBUnionBasicInfo;
  return unioninfo_;
}

// repeated .PBCorpsBasicInfo CorpsInfo = 4;
inline int CMessageGetUnionInfoResponse::corpsinfo_size() const {
  return corpsinfo_.size();
}
inline void CMessageGetUnionInfoResponse::clear_corpsinfo() {
  corpsinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo >&
CMessageGetUnionInfoResponse::corpsinfo() const {
  return corpsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo >*
CMessageGetUnionInfoResponse::mutable_corpsinfo() {
  return &corpsinfo_;
}
inline const ::PBCorpsBasicInfo& CMessageGetUnionInfoResponse::corpsinfo(int index) const {
  return corpsinfo_.Get(index);
}
inline ::PBCorpsBasicInfo* CMessageGetUnionInfoResponse::mutable_corpsinfo(int index) {
  return corpsinfo_.Mutable(index);
}
inline ::PBCorpsBasicInfo* CMessageGetUnionInfoResponse::add_corpsinfo() {
  return corpsinfo_.Add();
}

// optional .PBCorpsBattleList BattleInfo = 5;
inline bool CMessageGetUnionInfoResponse::has_battleinfo() const {
  return _has_bit(4);
}
inline void CMessageGetUnionInfoResponse::clear_battleinfo() {
  if (battleinfo_ != NULL) battleinfo_->::PBCorpsBattleList::Clear();
  _clear_bit(4);
}
inline const ::PBCorpsBattleList& CMessageGetUnionInfoResponse::battleinfo() const {
  return battleinfo_ != NULL ? *battleinfo_ : *default_instance_->battleinfo_;
}
inline ::PBCorpsBattleList* CMessageGetUnionInfoResponse::mutable_battleinfo() {
  _set_bit(4);
  if (battleinfo_ == NULL) battleinfo_ = new ::PBCorpsBattleList;
  return battleinfo_;
}

// -------------------------------------------------------------------

// CMessageDismissUnionRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageDismissUnionRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageDismissUnionRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageDismissUnionRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageDismissUnionRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NPCEntityID = 2;
inline bool CMessageDismissUnionRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageDismissUnionRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDismissUnionRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageDismissUnionRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageDismissUnionResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageDismissUnionResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageDismissUnionResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageDismissUnionResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageDismissUnionResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageDismissUnionResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageDismissUnionResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDismissUnionResponse::errcode() const {
  return errcode_;
}
inline void CMessageDismissUnionResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageDismissUnionNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageDismissUnionNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageDismissUnionNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageDismissUnionNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageDismissUnionNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// CMessageUnionApplyListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageUnionApplyListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageUnionApplyListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageUnionApplyListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageUnionApplyListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// CMessageUnionApplyListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageUnionApplyListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageUnionApplyListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageUnionApplyListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageUnionApplyListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageUnionApplyListResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageUnionApplyListResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUnionApplyListResponse::errcode() const {
  return errcode_;
}
inline void CMessageUnionApplyListResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// repeated .PBCorpsBasicInfo CorpsInfo = 3;
inline int CMessageUnionApplyListResponse::corpsinfo_size() const {
  return corpsinfo_.size();
}
inline void CMessageUnionApplyListResponse::clear_corpsinfo() {
  corpsinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo >&
CMessageUnionApplyListResponse::corpsinfo() const {
  return corpsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsBasicInfo >*
CMessageUnionApplyListResponse::mutable_corpsinfo() {
  return &corpsinfo_;
}
inline const ::PBCorpsBasicInfo& CMessageUnionApplyListResponse::corpsinfo(int index) const {
  return corpsinfo_.Get(index);
}
inline ::PBCorpsBasicInfo* CMessageUnionApplyListResponse::mutable_corpsinfo(int index) {
  return corpsinfo_.Mutable(index);
}
inline ::PBCorpsBasicInfo* CMessageUnionApplyListResponse::add_corpsinfo() {
  return corpsinfo_.Add();
}

// -------------------------------------------------------------------

// CMessageAllUnionListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageAllUnionListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageAllUnionListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageAllUnionListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageAllUnionListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// CMessageAllUnionListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageAllUnionListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageAllUnionListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageAllUnionListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageAllUnionListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageAllUnionListResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageAllUnionListResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAllUnionListResponse::errcode() const {
  return errcode_;
}
inline void CMessageAllUnionListResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// repeated .PBUnionBasicInfo UnionInfo = 3;
inline int CMessageAllUnionListResponse::unioninfo_size() const {
  return unioninfo_.size();
}
inline void CMessageAllUnionListResponse::clear_unioninfo() {
  unioninfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBUnionBasicInfo >&
CMessageAllUnionListResponse::unioninfo() const {
  return unioninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBUnionBasicInfo >*
CMessageAllUnionListResponse::mutable_unioninfo() {
  return &unioninfo_;
}
inline const ::PBUnionBasicInfo& CMessageAllUnionListResponse::unioninfo(int index) const {
  return unioninfo_.Get(index);
}
inline ::PBUnionBasicInfo* CMessageAllUnionListResponse::mutable_unioninfo(int index) {
  return unioninfo_.Mutable(index);
}
inline ::PBUnionBasicInfo* CMessageAllUnionListResponse::add_unioninfo() {
  return unioninfo_.Add();
}

// -------------------------------------------------------------------

// CMessageCorpsGetOtherMemberRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsGetOtherMemberRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsGetOtherMemberRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsGetOtherMemberRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsGetOtherMemberRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// PBBattleMember

// optional uint32 CharID = 1;
inline bool PBBattleMember::has_charid() const {
  return _has_bit(0);
}
inline void PBBattleMember::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBattleMember::charid() const {
  return charid_;
}
inline void PBBattleMember::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string Name = 2;
inline bool PBBattleMember::has_name() const {
  return _has_bit(1);
}
inline void PBBattleMember::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBBattleMember::name() const {
  return *name_;
}
inline void PBBattleMember::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBBattleMember::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBBattleMember::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBattleMember::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Level = 3;
inline bool PBBattleMember::has_level() const {
  return _has_bit(2);
}
inline void PBBattleMember::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBBattleMember::level() const {
  return level_;
}
inline void PBBattleMember::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// optional uint32 Metier = 4;
inline bool PBBattleMember::has_metier() const {
  return _has_bit(3);
}
inline void PBBattleMember::clear_metier() {
  metier_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBBattleMember::metier() const {
  return metier_;
}
inline void PBBattleMember::set_metier(::google::protobuf::uint32 value) {
  _set_bit(3);
  metier_ = value;
}

// optional string CorpsName = 5;
inline bool PBBattleMember::has_corpsname() const {
  return _has_bit(4);
}
inline void PBBattleMember::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& PBBattleMember::corpsname() const {
  return *corpsname_;
}
inline void PBBattleMember::set_corpsname(const ::std::string& value) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBBattleMember::set_corpsname(const char* value) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBBattleMember::set_corpsname(const char* value, size_t size) {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBattleMember::mutable_corpsname() {
  _set_bit(4);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 IsJoinUnion = 6;
inline bool PBBattleMember::has_isjoinunion() const {
  return _has_bit(5);
}
inline void PBBattleMember::clear_isjoinunion() {
  isjoinunion_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBBattleMember::isjoinunion() const {
  return isjoinunion_;
}
inline void PBBattleMember::set_isjoinunion(::google::protobuf::uint32 value) {
  _set_bit(5);
  isjoinunion_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsGetOtherMemberResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsGetOtherMemberResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsGetOtherMemberResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsGetOtherMemberResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsGetOtherMemberResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated .PBBattleMember MemberList = 2;
inline int CMessageCorpsGetOtherMemberResponse::memberlist_size() const {
  return memberlist_.size();
}
inline void CMessageCorpsGetOtherMemberResponse::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBattleMember >&
CMessageCorpsGetOtherMemberResponse::memberlist() const {
  return memberlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBattleMember >*
CMessageCorpsGetOtherMemberResponse::mutable_memberlist() {
  return &memberlist_;
}
inline const ::PBBattleMember& CMessageCorpsGetOtherMemberResponse::memberlist(int index) const {
  return memberlist_.Get(index);
}
inline ::PBBattleMember* CMessageCorpsGetOtherMemberResponse::mutable_memberlist(int index) {
  return memberlist_.Mutable(index);
}
inline ::PBBattleMember* CMessageCorpsGetOtherMemberResponse::add_memberlist() {
  return memberlist_.Add();
}

// -------------------------------------------------------------------

// CMessageUnionJoinBattleListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageUnionJoinBattleListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageUnionJoinBattleListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageUnionJoinBattleListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageUnionJoinBattleListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// -------------------------------------------------------------------

// CMessageUnionJoinBattleListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageUnionJoinBattleListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageUnionJoinBattleListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageUnionJoinBattleListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageUnionJoinBattleListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageUnionJoinBattleListResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageUnionJoinBattleListResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUnionJoinBattleListResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageUnionJoinBattleListResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// repeated .PBBattleMember MemberList = 3;
inline int CMessageUnionJoinBattleListResponse::memberlist_size() const {
  return memberlist_.size();
}
inline void CMessageUnionJoinBattleListResponse::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBattleMember >&
CMessageUnionJoinBattleListResponse::memberlist() const {
  return memberlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBattleMember >*
CMessageUnionJoinBattleListResponse::mutable_memberlist() {
  return &memberlist_;
}
inline const ::PBBattleMember& CMessageUnionJoinBattleListResponse::memberlist(int index) const {
  return memberlist_.Get(index);
}
inline ::PBBattleMember* CMessageUnionJoinBattleListResponse::mutable_memberlist(int index) {
  return memberlist_.Mutable(index);
}
inline ::PBBattleMember* CMessageUnionJoinBattleListResponse::add_memberlist() {
  return memberlist_.Add();
}

// -------------------------------------------------------------------

// CMessageCorpsGetAllMapRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsGetAllMapRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsGetAllMapRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsGetAllMapRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsGetAllMapRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ServerID = 2;
inline bool CMessageCorpsGetAllMapRequest::has_serverid() const {
  return _has_bit(1);
}
inline void CMessageCorpsGetAllMapRequest::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsGetAllMapRequest::serverid() const {
  return serverid_;
}
inline void CMessageCorpsGetAllMapRequest::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(1);
  serverid_ = value;
}

// -------------------------------------------------------------------

// PBMapOwner

// optional uint32 MapID = 1;
inline bool PBMapOwner::has_mapid() const {
  return _has_bit(0);
}
inline void PBMapOwner::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMapOwner::mapid() const {
  return mapid_;
}
inline void PBMapOwner::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 CorpsID = 2;
inline bool PBMapOwner::has_corpsid() const {
  return _has_bit(1);
}
inline void PBMapOwner::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMapOwner::corpsid() const {
  return corpsid_;
}
inline void PBMapOwner::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional string CorpsName = 3;
inline bool PBMapOwner::has_corpsname() const {
  return _has_bit(2);
}
inline void PBMapOwner::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBMapOwner::corpsname() const {
  return *corpsname_;
}
inline void PBMapOwner::set_corpsname(const ::std::string& value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBMapOwner::set_corpsname(const char* value) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PBMapOwner::set_corpsname(const char* value, size_t size) {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMapOwner::mutable_corpsname() {
  _set_bit(2);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 Color = 4;
inline bool PBMapOwner::has_color() const {
  return _has_bit(3);
}
inline void PBMapOwner::clear_color() {
  color_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMapOwner::color() const {
  return color_;
}
inline void PBMapOwner::set_color(::google::protobuf::uint32 value) {
  _set_bit(3);
  color_ = value;
}

// optional string RooterName = 5;
inline bool PBMapOwner::has_rootername() const {
  return _has_bit(4);
}
inline void PBMapOwner::clear_rootername() {
  if (rootername_ != &_default_rootername_) {
    rootername_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& PBMapOwner::rootername() const {
  return *rootername_;
}
inline void PBMapOwner::set_rootername(const ::std::string& value) {
  _set_bit(4);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(value);
}
inline void PBMapOwner::set_rootername(const char* value) {
  _set_bit(4);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(value);
}
inline void PBMapOwner::set_rootername(const char* value, size_t size) {
  _set_bit(4);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  rootername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMapOwner::mutable_rootername() {
  _set_bit(4);
  if (rootername_ == &_default_rootername_) {
    rootername_ = new ::std::string;
  }
  return rootername_;
}

// optional uint32 CorpsPower = 6;
inline bool PBMapOwner::has_corpspower() const {
  return _has_bit(5);
}
inline void PBMapOwner::clear_corpspower() {
  corpspower_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBMapOwner::corpspower() const {
  return corpspower_;
}
inline void PBMapOwner::set_corpspower(::google::protobuf::uint32 value) {
  _set_bit(5);
  corpspower_ = value;
}

// optional string UnionName = 7;
inline bool PBMapOwner::has_unionname() const {
  return _has_bit(6);
}
inline void PBMapOwner::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& PBMapOwner::unionname() const {
  return *unionname_;
}
inline void PBMapOwner::set_unionname(const ::std::string& value) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void PBMapOwner::set_unionname(const char* value) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void PBMapOwner::set_unionname(const char* value, size_t size) {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMapOwner::mutable_unionname() {
  _set_bit(6);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional uint32 UnionPower = 8;
inline bool PBMapOwner::has_unionpower() const {
  return _has_bit(7);
}
inline void PBMapOwner::clear_unionpower() {
  unionpower_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBMapOwner::unionpower() const {
  return unionpower_;
}
inline void PBMapOwner::set_unionpower(::google::protobuf::uint32 value) {
  _set_bit(7);
  unionpower_ = value;
}

// optional uint32 PeopleNum = 9;
inline bool PBMapOwner::has_peoplenum() const {
  return _has_bit(8);
}
inline void PBMapOwner::clear_peoplenum() {
  peoplenum_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMapOwner::peoplenum() const {
  return peoplenum_;
}
inline void PBMapOwner::set_peoplenum(::google::protobuf::uint32 value) {
  _set_bit(8);
  peoplenum_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsGetAllMapResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsGetAllMapResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsGetAllMapResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsGetAllMapResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsGetAllMapResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// repeated .PBMapOwner MapList = 2;
inline int CMessageCorpsGetAllMapResponse::maplist_size() const {
  return maplist_.size();
}
inline void CMessageCorpsGetAllMapResponse::clear_maplist() {
  maplist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMapOwner >&
CMessageCorpsGetAllMapResponse::maplist() const {
  return maplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMapOwner >*
CMessageCorpsGetAllMapResponse::mutable_maplist() {
  return &maplist_;
}
inline const ::PBMapOwner& CMessageCorpsGetAllMapResponse::maplist(int index) const {
  return maplist_.Get(index);
}
inline ::PBMapOwner* CMessageCorpsGetAllMapResponse::mutable_maplist(int index) {
  return maplist_.Mutable(index);
}
inline ::PBMapOwner* CMessageCorpsGetAllMapResponse::add_maplist() {
  return maplist_.Add();
}

// optional uint32 ServerID = 3;
inline bool CMessageCorpsGetAllMapResponse::has_serverid() const {
  return _has_bit(2);
}
inline void CMessageCorpsGetAllMapResponse::clear_serverid() {
  serverid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsGetAllMapResponse::serverid() const {
  return serverid_;
}
inline void CMessageCorpsGetAllMapResponse::set_serverid(::google::protobuf::uint32 value) {
  _set_bit(2);
  serverid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsAppointPrinceRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsAppointPrinceRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsAppointPrinceRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsAppointPrinceRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsAppointPrinceRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CorpsID = 2;
inline bool CMessageCorpsAppointPrinceRequest::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageCorpsAppointPrinceRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsAppointPrinceRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageCorpsAppointPrinceRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageCorpsAppointPrinceRequest::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageCorpsAppointPrinceRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsAppointPrinceRequest::mapid() const {
  return mapid_;
}
inline void CMessageCorpsAppointPrinceRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorspAppointPrinceResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorspAppointPrinceResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorspAppointPrinceResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorspAppointPrinceResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorspAppointPrinceResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageCorspAppointPrinceResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageCorspAppointPrinceResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorspAppointPrinceResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorspAppointPrinceResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// optional uint32 CorpsID = 3;
inline bool CMessageCorspAppointPrinceResponse::has_corpsid() const {
  return _has_bit(2);
}
inline void CMessageCorspAppointPrinceResponse::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorspAppointPrinceResponse::corpsid() const {
  return corpsid_;
}
inline void CMessageCorspAppointPrinceResponse::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(2);
  corpsid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessageCorspAppointPrinceResponse::has_mapid() const {
  return _has_bit(3);
}
inline void CMessageCorspAppointPrinceResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorspAppointPrinceResponse::mapid() const {
  return mapid_;
}
inline void CMessageCorspAppointPrinceResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsAppointPrinceNotice

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsAppointPrinceNotice::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsAppointPrinceNotice::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsAppointPrinceNotice::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsAppointPrinceNotice::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CorpsID = 2;
inline bool CMessageCorpsAppointPrinceNotice::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageCorpsAppointPrinceNotice::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsAppointPrinceNotice::corpsid() const {
  return corpsid_;
}
inline void CMessageCorpsAppointPrinceNotice::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageCorpsAppointPrinceNotice::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageCorpsAppointPrinceNotice::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsAppointPrinceNotice::mapid() const {
  return mapid_;
}
inline void CMessageCorpsAppointPrinceNotice::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsMoveCapitalRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsMoveCapitalRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsMoveCapitalRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsMoveCapitalRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsMoveCapitalRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 MapID = 2;
inline bool CMessageCorpsMoveCapitalRequest::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageCorpsMoveCapitalRequest::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsMoveCapitalRequest::mapid() const {
  return mapid_;
}
inline void CMessageCorpsMoveCapitalRequest::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMesssageCorpsMoveCapitalResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMesssageCorpsMoveCapitalResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMesssageCorpsMoveCapitalResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMesssageCorpsMoveCapitalResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMesssageCorpsMoveCapitalResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMesssageCorpsMoveCapitalResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMesssageCorpsMoveCapitalResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMesssageCorpsMoveCapitalResponse::rtncode() const {
  return rtncode_;
}
inline void CMesssageCorpsMoveCapitalResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// optional uint32 MapID = 3;
inline bool CMesssageCorpsMoveCapitalResponse::has_mapid() const {
  return _has_bit(2);
}
inline void CMesssageCorpsMoveCapitalResponse::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMesssageCorpsMoveCapitalResponse::mapid() const {
  return mapid_;
}
inline void CMesssageCorpsMoveCapitalResponse::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsSelectColorRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsSelectColorRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsSelectColorRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsSelectColorRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsSelectColorRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Color = 2;
inline bool CMessageCorpsSelectColorRequest::has_color() const {
  return _has_bit(1);
}
inline void CMessageCorpsSelectColorRequest::clear_color() {
  color_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsSelectColorRequest::color() const {
  return color_;
}
inline void CMessageCorpsSelectColorRequest::set_color(::google::protobuf::uint32 value) {
  _set_bit(1);
  color_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsSelectColorResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsSelectColorResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsSelectColorResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsSelectColorResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsSelectColorResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageCorpsSelectColorResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageCorpsSelectColorResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsSelectColorResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsSelectColorResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// optional uint32 Color = 3;
inline bool CMessageCorpsSelectColorResponse::has_color() const {
  return _has_bit(2);
}
inline void CMessageCorpsSelectColorResponse::clear_color() {
  color_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCorpsSelectColorResponse::color() const {
  return color_;
}
inline void CMessageCorpsSelectColorResponse::set_color(::google::protobuf::uint32 value) {
  _set_bit(2);
  color_ = value;
}

// -------------------------------------------------------------------

// CorpsGoodItem

// optional uint32 ItemID = 1;
inline bool CorpsGoodItem::has_itemid() const {
  return _has_bit(0);
}
inline void CorpsGoodItem::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CorpsGoodItem::itemid() const {
  return itemid_;
}
inline void CorpsGoodItem::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemid_ = value;
}

// optional uint32 ItemNum = 2;
inline bool CorpsGoodItem::has_itemnum() const {
  return _has_bit(1);
}
inline void CorpsGoodItem::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CorpsGoodItem::itemnum() const {
  return itemnum_;
}
inline void CorpsGoodItem::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemnum_ = value;
}

// optional uint32 ComposeID = 3;
inline bool CorpsGoodItem::has_composeid() const {
  return _has_bit(2);
}
inline void CorpsGoodItem::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CorpsGoodItem::composeid() const {
  return composeid_;
}
inline void CorpsGoodItem::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(2);
  composeid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsGoodsListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsGoodsListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsGoodsListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsGoodsListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsGoodsListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CorpsID = 2;
inline bool CMessageGetCorpsGoodsListRequest::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsGoodsListRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsGoodsListRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageGetCorpsGoodsListRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional uint32 EntityID = 3;
inline bool CMessageGetCorpsGoodsListRequest::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageGetCorpsGoodsListRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetCorpsGoodsListRequest::entityid() const {
  return entityid_;
}
inline void CMessageGetCorpsGoodsListRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// optional uint32 NpcTmpID = 4;
inline bool CMessageGetCorpsGoodsListRequest::has_npctmpid() const {
  return _has_bit(3);
}
inline void CMessageGetCorpsGoodsListRequest::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetCorpsGoodsListRequest::npctmpid() const {
  return npctmpid_;
}
inline void CMessageGetCorpsGoodsListRequest::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(3);
  npctmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsGoodsListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsGoodsListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsGoodsListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsGoodsListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsGoodsListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageGetCorpsGoodsListResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsGoodsListResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsGoodsListResponse::errcode() const {
  return errcode_;
}
inline void CMessageGetCorpsGoodsListResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// repeated .CorpsGoodItem GoodsList = 3;
inline int CMessageGetCorpsGoodsListResponse::goodslist_size() const {
  return goodslist_.size();
}
inline void CMessageGetCorpsGoodsListResponse::clear_goodslist() {
  goodslist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >&
CMessageGetCorpsGoodsListResponse::goodslist() const {
  return goodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >*
CMessageGetCorpsGoodsListResponse::mutable_goodslist() {
  return &goodslist_;
}
inline const ::CorpsGoodItem& CMessageGetCorpsGoodsListResponse::goodslist(int index) const {
  return goodslist_.Get(index);
}
inline ::CorpsGoodItem* CMessageGetCorpsGoodsListResponse::mutable_goodslist(int index) {
  return goodslist_.Mutable(index);
}
inline ::CorpsGoodItem* CMessageGetCorpsGoodsListResponse::add_goodslist() {
  return goodslist_.Add();
}

// optional uint32 NpcTmpID = 4;
inline bool CMessageGetCorpsGoodsListResponse::has_npctmpid() const {
  return _has_bit(3);
}
inline void CMessageGetCorpsGoodsListResponse::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetCorpsGoodsListResponse::npctmpid() const {
  return npctmpid_;
}
inline void CMessageGetCorpsGoodsListResponse::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(3);
  npctmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsExchangeGoodsListRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsExchangeGoodsListRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsExchangeGoodsListRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsExchangeGoodsListRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsExchangeGoodsListRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 CorpsID = 2;
inline bool CMessageGetCorpsExchangeGoodsListRequest::has_corpsid() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsExchangeGoodsListRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsExchangeGoodsListRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageGetCorpsExchangeGoodsListRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(1);
  corpsid_ = value;
}

// optional uint32 EntityID = 3;
inline bool CMessageGetCorpsExchangeGoodsListRequest::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageGetCorpsExchangeGoodsListRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetCorpsExchangeGoodsListRequest::entityid() const {
  return entityid_;
}
inline void CMessageGetCorpsExchangeGoodsListRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// optional uint32 NpcTmpID = 4;
inline bool CMessageGetCorpsExchangeGoodsListRequest::has_npctmpid() const {
  return _has_bit(3);
}
inline void CMessageGetCorpsExchangeGoodsListRequest::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetCorpsExchangeGoodsListRequest::npctmpid() const {
  return npctmpid_;
}
inline void CMessageGetCorpsExchangeGoodsListRequest::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(3);
  npctmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetCorpsExchangeGoodsListResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageGetCorpsExchangeGoodsListResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageGetCorpsExchangeGoodsListResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageGetCorpsExchangeGoodsListResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageGetCorpsExchangeGoodsListResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Errcode = 2;
inline bool CMessageGetCorpsExchangeGoodsListResponse::has_errcode() const {
  return _has_bit(1);
}
inline void CMessageGetCorpsExchangeGoodsListResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetCorpsExchangeGoodsListResponse::errcode() const {
  return errcode_;
}
inline void CMessageGetCorpsExchangeGoodsListResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errcode_ = value;
}

// repeated .CorpsGoodItem GoodsList = 3;
inline int CMessageGetCorpsExchangeGoodsListResponse::goodslist_size() const {
  return goodslist_.size();
}
inline void CMessageGetCorpsExchangeGoodsListResponse::clear_goodslist() {
  goodslist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >&
CMessageGetCorpsExchangeGoodsListResponse::goodslist() const {
  return goodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >*
CMessageGetCorpsExchangeGoodsListResponse::mutable_goodslist() {
  return &goodslist_;
}
inline const ::CorpsGoodItem& CMessageGetCorpsExchangeGoodsListResponse::goodslist(int index) const {
  return goodslist_.Get(index);
}
inline ::CorpsGoodItem* CMessageGetCorpsExchangeGoodsListResponse::mutable_goodslist(int index) {
  return goodslist_.Mutable(index);
}
inline ::CorpsGoodItem* CMessageGetCorpsExchangeGoodsListResponse::add_goodslist() {
  return goodslist_.Add();
}

// optional uint32 NpcTmpID = 4;
inline bool CMessageGetCorpsExchangeGoodsListResponse::has_npctmpid() const {
  return _has_bit(3);
}
inline void CMessageGetCorpsExchangeGoodsListResponse::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetCorpsExchangeGoodsListResponse::npctmpid() const {
  return npctmpid_;
}
inline void CMessageGetCorpsExchangeGoodsListResponse::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(3);
  npctmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeUnionNameRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeUnionNameRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeUnionNameRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeUnionNameRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeUnionNameRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string UnionName = 2;
inline bool CMessageChangeUnionNameRequest::has_unionname() const {
  return _has_bit(1);
}
inline void CMessageChangeUnionNameRequest::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageChangeUnionNameRequest::unionname() const {
  return *unionname_;
}
inline void CMessageChangeUnionNameRequest::set_unionname(const ::std::string& value) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageChangeUnionNameRequest::set_unionname(const char* value) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageChangeUnionNameRequest::set_unionname(const char* value, size_t size) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeUnionNameRequest::mutable_unionname() {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional string UnionNotice = 3;
inline bool CMessageChangeUnionNameRequest::has_unionnotice() const {
  return _has_bit(2);
}
inline void CMessageChangeUnionNameRequest::clear_unionnotice() {
  if (unionnotice_ != &_default_unionnotice_) {
    unionnotice_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageChangeUnionNameRequest::unionnotice() const {
  return *unionnotice_;
}
inline void CMessageChangeUnionNameRequest::set_unionnotice(const ::std::string& value) {
  _set_bit(2);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageChangeUnionNameRequest::set_unionnotice(const char* value) {
  _set_bit(2);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageChangeUnionNameRequest::set_unionnotice(const char* value, size_t size) {
  _set_bit(2);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeUnionNameRequest::mutable_unionnotice() {
  _set_bit(2);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  return unionnotice_;
}

// optional uint32 CorpsID = 4;
inline bool CMessageChangeUnionNameRequest::has_corpsid() const {
  return _has_bit(3);
}
inline void CMessageChangeUnionNameRequest::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeUnionNameRequest::corpsid() const {
  return corpsid_;
}
inline void CMessageChangeUnionNameRequest::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  corpsid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeUnionNameResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeUnionNameResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeUnionNameResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeUnionNameResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeUnionNameResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 Result = 2;
inline bool CMessageChangeUnionNameResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageChangeUnionNameResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeUnionNameResponse::result() const {
  return result_;
}
inline void CMessageChangeUnionNameResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeUnionNameNotify

// optional .CorpsHead CorpHead = 1;
inline bool CMessageChangeUnionNameNotify::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageChangeUnionNameNotify::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageChangeUnionNameNotify::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageChangeUnionNameNotify::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional string UnionName = 2;
inline bool CMessageChangeUnionNameNotify::has_unionname() const {
  return _has_bit(1);
}
inline void CMessageChangeUnionNameNotify::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageChangeUnionNameNotify::unionname() const {
  return *unionname_;
}
inline void CMessageChangeUnionNameNotify::set_unionname(const ::std::string& value) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageChangeUnionNameNotify::set_unionname(const char* value) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageChangeUnionNameNotify::set_unionname(const char* value, size_t size) {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeUnionNameNotify::mutable_unionname() {
  _set_bit(1);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional string UnionNotice = 3;
inline bool CMessageChangeUnionNameNotify::has_unionnotice() const {
  return _has_bit(2);
}
inline void CMessageChangeUnionNameNotify::clear_unionnotice() {
  if (unionnotice_ != &_default_unionnotice_) {
    unionnotice_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageChangeUnionNameNotify::unionnotice() const {
  return *unionnotice_;
}
inline void CMessageChangeUnionNameNotify::set_unionnotice(const ::std::string& value) {
  _set_bit(2);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageChangeUnionNameNotify::set_unionnotice(const char* value) {
  _set_bit(2);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(value);
}
inline void CMessageChangeUnionNameNotify::set_unionnotice(const char* value, size_t size) {
  _set_bit(2);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  unionnotice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeUnionNameNotify::mutable_unionnotice() {
  _set_bit(2);
  if (unionnotice_ == &_default_unionnotice_) {
    unionnotice_ = new ::std::string;
  }
  return unionnotice_;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsGoodsListNotify

// repeated .CorpsGoodItem GoodsList = 1;
inline int CMessageChangeCorpsGoodsListNotify::goodslist_size() const {
  return goodslist_.size();
}
inline void CMessageChangeCorpsGoodsListNotify::clear_goodslist() {
  goodslist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >&
CMessageChangeCorpsGoodsListNotify::goodslist() const {
  return goodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >*
CMessageChangeCorpsGoodsListNotify::mutable_goodslist() {
  return &goodslist_;
}
inline const ::CorpsGoodItem& CMessageChangeCorpsGoodsListNotify::goodslist(int index) const {
  return goodslist_.Get(index);
}
inline ::CorpsGoodItem* CMessageChangeCorpsGoodsListNotify::mutable_goodslist(int index) {
  return goodslist_.Mutable(index);
}
inline ::CorpsGoodItem* CMessageChangeCorpsGoodsListNotify::add_goodslist() {
  return goodslist_.Add();
}

// optional uint32 NpcTmpID = 2;
inline bool CMessageChangeCorpsGoodsListNotify::has_npctmpid() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsGoodsListNotify::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsGoodsListNotify::npctmpid() const {
  return npctmpid_;
}
inline void CMessageChangeCorpsGoodsListNotify::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npctmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeCorpsExchangeGoodsListNotify

// repeated .CorpsGoodItem GoodsList = 1;
inline int CMessageChangeCorpsExchangeGoodsListNotify::goodslist_size() const {
  return goodslist_.size();
}
inline void CMessageChangeCorpsExchangeGoodsListNotify::clear_goodslist() {
  goodslist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >&
CMessageChangeCorpsExchangeGoodsListNotify::goodslist() const {
  return goodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >*
CMessageChangeCorpsExchangeGoodsListNotify::mutable_goodslist() {
  return &goodslist_;
}
inline const ::CorpsGoodItem& CMessageChangeCorpsExchangeGoodsListNotify::goodslist(int index) const {
  return goodslist_.Get(index);
}
inline ::CorpsGoodItem* CMessageChangeCorpsExchangeGoodsListNotify::mutable_goodslist(int index) {
  return goodslist_.Mutable(index);
}
inline ::CorpsGoodItem* CMessageChangeCorpsExchangeGoodsListNotify::add_goodslist() {
  return goodslist_.Add();
}

// optional uint32 NpcTmpID = 2;
inline bool CMessageChangeCorpsExchangeGoodsListNotify::has_npctmpid() const {
  return _has_bit(1);
}
inline void CMessageChangeCorpsExchangeGoodsListNotify::clear_npctmpid() {
  npctmpid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeCorpsExchangeGoodsListNotify::npctmpid() const {
  return npctmpid_;
}
inline void CMessageChangeCorpsExchangeGoodsListNotify::set_npctmpid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npctmpid_ = value;
}

// -------------------------------------------------------------------

// CMessageUseCorpsLeagueItemNotify

// repeated .CorpsGoodItem GoodsList = 1;
inline int CMessageUseCorpsLeagueItemNotify::goodslist_size() const {
  return goodslist_.size();
}
inline void CMessageUseCorpsLeagueItemNotify::clear_goodslist() {
  goodslist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >&
CMessageUseCorpsLeagueItemNotify::goodslist() const {
  return goodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::CorpsGoodItem >*
CMessageUseCorpsLeagueItemNotify::mutable_goodslist() {
  return &goodslist_;
}
inline const ::CorpsGoodItem& CMessageUseCorpsLeagueItemNotify::goodslist(int index) const {
  return goodslist_.Get(index);
}
inline ::CorpsGoodItem* CMessageUseCorpsLeagueItemNotify::mutable_goodslist(int index) {
  return goodslist_.Mutable(index);
}
inline ::CorpsGoodItem* CMessageUseCorpsLeagueItemNotify::add_goodslist() {
  return goodslist_.Add();
}

// optional uint32 ManagerID = 2;
inline bool CMessageUseCorpsLeagueItemNotify::has_managerid() const {
  return _has_bit(1);
}
inline void CMessageUseCorpsLeagueItemNotify::clear_managerid() {
  managerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUseCorpsLeagueItemNotify::managerid() const {
  return managerid_;
}
inline void CMessageUseCorpsLeagueItemNotify::set_managerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  managerid_ = value;
}

// optional string ManagerName = 3;
inline bool CMessageUseCorpsLeagueItemNotify::has_managername() const {
  return _has_bit(2);
}
inline void CMessageUseCorpsLeagueItemNotify::clear_managername() {
  if (managername_ != &_default_managername_) {
    managername_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageUseCorpsLeagueItemNotify::managername() const {
  return *managername_;
}
inline void CMessageUseCorpsLeagueItemNotify::set_managername(const ::std::string& value) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(value);
}
inline void CMessageUseCorpsLeagueItemNotify::set_managername(const char* value) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(value);
}
inline void CMessageUseCorpsLeagueItemNotify::set_managername(const char* value, size_t size) {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUseCorpsLeagueItemNotify::mutable_managername() {
  _set_bit(2);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  return managername_;
}

// -------------------------------------------------------------------

// CMessageCorpsLoginBattleRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsLoginBattleRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsLoginBattleRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsLoginBattleRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsLoginBattleRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 NpcID = 2;
inline bool CMessageCorpsLoginBattleRequest::has_npcid() const {
  return _has_bit(1);
}
inline void CMessageCorpsLoginBattleRequest::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsLoginBattleRequest::npcid() const {
  return npcid_;
}
inline void CMessageCorpsLoginBattleRequest::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsLoginBattleResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageCorpsLoginBattleResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageCorpsLoginBattleResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageCorpsLoginBattleResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageCorpsLoginBattleResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 RtnCode = 2;
inline bool CMessageCorpsLoginBattleResponse::has_rtncode() const {
  return _has_bit(1);
}
inline void CMessageCorpsLoginBattleResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsLoginBattleResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageCorpsLoginBattleResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(1);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageSummonCorpsBossRequest

// optional .CorpsHead CorpHead = 1;
inline bool CMessageSummonCorpsBossRequest::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageSummonCorpsBossRequest::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageSummonCorpsBossRequest::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageSummonCorpsBossRequest::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 BossID = 2;
inline bool CMessageSummonCorpsBossRequest::has_bossid() const {
  return _has_bit(1);
}
inline void CMessageSummonCorpsBossRequest::clear_bossid() {
  bossid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSummonCorpsBossRequest::bossid() const {
  return bossid_;
}
inline void CMessageSummonCorpsBossRequest::set_bossid(::google::protobuf::uint32 value) {
  _set_bit(1);
  bossid_ = value;
}

// -------------------------------------------------------------------

// CMessageSummonCorpsBossResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageSummonCorpsBossResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageSummonCorpsBossResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageSummonCorpsBossResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageSummonCorpsBossResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ErrorCode = 2;
inline bool CMessageSummonCorpsBossResponse::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageSummonCorpsBossResponse::clear_errorcode() {
  errorcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSummonCorpsBossResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageSummonCorpsBossResponse::set_errorcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBossRepetionOpenNotify

// optional uint32 BossID = 1;
inline bool CMessageCorpsBossRepetionOpenNotify::has_bossid() const {
  return _has_bit(0);
}
inline void CMessageCorpsBossRepetionOpenNotify::clear_bossid() {
  bossid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCorpsBossRepetionOpenNotify::bossid() const {
  return bossid_;
}
inline void CMessageCorpsBossRepetionOpenNotify::set_bossid(::google::protobuf::uint32 value) {
  _set_bit(0);
  bossid_ = value;
}

// optional uint32 RoleID = 2;
inline bool CMessageCorpsBossRepetionOpenNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageCorpsBossRepetionOpenNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCorpsBossRepetionOpenNotify::roleid() const {
  return roleid_;
}
inline void CMessageCorpsBossRepetionOpenNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional string RoleName = 3;
inline bool CMessageCorpsBossRepetionOpenNotify::has_rolename() const {
  return _has_bit(2);
}
inline void CMessageCorpsBossRepetionOpenNotify::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageCorpsBossRepetionOpenNotify::rolename() const {
  return *rolename_;
}
inline void CMessageCorpsBossRepetionOpenNotify::set_rolename(const ::std::string& value) {
  _set_bit(2);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsBossRepetionOpenNotify::set_rolename(const char* value) {
  _set_bit(2);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMessageCorpsBossRepetionOpenNotify::set_rolename(const char* value, size_t size) {
  _set_bit(2);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCorpsBossRepetionOpenNotify::mutable_rolename() {
  _set_bit(2);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional uint32 BossCDCool = 4;
inline bool CMessageCorpsBossRepetionOpenNotify::has_bosscdcool() const {
  return _has_bit(3);
}
inline void CMessageCorpsBossRepetionOpenNotify::clear_bosscdcool() {
  bosscdcool_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCorpsBossRepetionOpenNotify::bosscdcool() const {
  return bosscdcool_;
}
inline void CMessageCorpsBossRepetionOpenNotify::set_bosscdcool(::google::protobuf::uint32 value) {
  _set_bit(3);
  bosscdcool_ = value;
}

// -------------------------------------------------------------------

// CMessageIntoCorpsBossRepetionResponse

// optional .CorpsHead CorpHead = 1;
inline bool CMessageIntoCorpsBossRepetionResponse::has_corphead() const {
  return _has_bit(0);
}
inline void CMessageIntoCorpsBossRepetionResponse::clear_corphead() {
  if (corphead_ != NULL) corphead_->::CorpsHead::Clear();
  _clear_bit(0);
}
inline const ::CorpsHead& CMessageIntoCorpsBossRepetionResponse::corphead() const {
  return corphead_ != NULL ? *corphead_ : *default_instance_->corphead_;
}
inline ::CorpsHead* CMessageIntoCorpsBossRepetionResponse::mutable_corphead() {
  _set_bit(0);
  if (corphead_ == NULL) corphead_ = new ::CorpsHead;
  return corphead_;
}

// optional uint32 ErrorCode = 2;
inline bool CMessageIntoCorpsBossRepetionResponse::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageIntoCorpsBossRepetionResponse::clear_errorcode() {
  errorcode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageIntoCorpsBossRepetionResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageIntoCorpsBossRepetionResponse::set_errorcode(::google::protobuf::uint32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageCorpsBossRepetionEndNotify

#endif  // PROTOBUF_corpsmessage_5fpb_2ehxx__INCLUDED
