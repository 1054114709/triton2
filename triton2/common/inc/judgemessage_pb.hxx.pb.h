// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_judgemessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_judgemessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();

class CMessageOpenJudgeNotice;
class CMessageCloseJudgeNotice;
class CMessageModifySingleJudgeRequest;
class CMessageModifySingleJudgeResponse;
class CMessageModifyJudgeListRequest;
class CMessageModifyJudgeListResponse;
class CMessageModifyJudgeNotice;
class PBJudgeRecord;
class CMessageQueryJudgeListRequest;
class CMessageQueryJudgeListResponse;
class CMessageUpdateMaxJudgeValueNotice;
class CMessageQuerySingleRecordRequest;
class CMessageQuerySingleRecordResponse;

enum JudgeMessageID {
  ID_S2C_NOTIFY_OPENJUDGE = 19457,
  ID_S2C_NOTIFY_CLOSEJUDGE = 19458,
  ID_C2S_REQUEST_MODIFYJUDGESINGLE = 19459,
  ID_S2C_RESPONSE_MODIFYJUDGESINGLE = 19460,
  ID_C2S_REQUEST_MODIFYJUDGELIST = 19461,
  ID_S2C_RESPONSE_MODIFYJUDGELIST = 19462,
  ID_S2C_NOTIFY_MODIFYJUDGE = 19463,
  ID_C2S_REQUEST_QUERYJUDGELIST = 19464,
  ID_S2C_RESPONSE_QUERYJUDGELIST = 19465,
  ID_S2C_NOTIFY_JUDGEMAX = 19466,
  ID_C2S_REQUEST_QUERYJUDGE = 19467,
  ID_S2C_RESPONSE_QUERYJUDGE = 19468
};
const ::google::protobuf::EnumDescriptor* JudgeMessageID_descriptor();
bool JudgeMessageID_IsValid(int value);
const JudgeMessageID JudgeMessageID_MIN = ID_S2C_NOTIFY_OPENJUDGE;
const JudgeMessageID JudgeMessageID_MAX = ID_S2C_RESPONSE_QUERYJUDGE;

inline const ::std::string& JudgeMessageID_Name(JudgeMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    JudgeMessageID_descriptor(), value);
}
inline bool JudgeMessageID_Parse(
    const ::std::string& name, JudgeMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JudgeMessageID>(
    JudgeMessageID_descriptor(), name, value);
}
// ===================================================================

class CMessageOpenJudgeNotice : public ::google::protobuf::Message {
 public:
  CMessageOpenJudgeNotice();
  virtual ~CMessageOpenJudgeNotice();
  
  CMessageOpenJudgeNotice(const CMessageOpenJudgeNotice& from);
  
  inline CMessageOpenJudgeNotice& operator=(const CMessageOpenJudgeNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageOpenJudgeNotice& default_instance();
  void Swap(CMessageOpenJudgeNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageOpenJudgeNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageOpenJudgeNotice& from);
  void MergeFrom(const CMessageOpenJudgeNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageOpenJudgeNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCloseJudgeNotice : public ::google::protobuf::Message {
 public:
  CMessageCloseJudgeNotice();
  virtual ~CMessageCloseJudgeNotice();
  
  CMessageCloseJudgeNotice(const CMessageCloseJudgeNotice& from);
  
  inline CMessageCloseJudgeNotice& operator=(const CMessageCloseJudgeNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCloseJudgeNotice& default_instance();
  void Swap(CMessageCloseJudgeNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCloseJudgeNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCloseJudgeNotice& from);
  void MergeFrom(const CMessageCloseJudgeNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCloseJudgeNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifySingleJudgeRequest : public ::google::protobuf::Message {
 public:
  CMessageModifySingleJudgeRequest();
  virtual ~CMessageModifySingleJudgeRequest();
  
  CMessageModifySingleJudgeRequest(const CMessageModifySingleJudgeRequest& from);
  
  inline CMessageModifySingleJudgeRequest& operator=(const CMessageModifySingleJudgeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifySingleJudgeRequest& default_instance();
  void Swap(CMessageModifySingleJudgeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifySingleJudgeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifySingleJudgeRequest& from);
  void MergeFrom(const CMessageModifySingleJudgeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 2;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional string DesName = 3;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 3;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
  // optional uint32 Value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 srccharid_;
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifySingleJudgeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifySingleJudgeResponse : public ::google::protobuf::Message {
 public:
  CMessageModifySingleJudgeResponse();
  virtual ~CMessageModifySingleJudgeResponse();
  
  CMessageModifySingleJudgeResponse(const CMessageModifySingleJudgeResponse& from);
  
  inline CMessageModifySingleJudgeResponse& operator=(const CMessageModifySingleJudgeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifySingleJudgeResponse& default_instance();
  void Swap(CMessageModifySingleJudgeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifySingleJudgeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifySingleJudgeResponse& from);
  void MergeFrom(const CMessageModifySingleJudgeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RtnCode = 1;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional string DesName = 3;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 3;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
  // optional uint32 DesCharID = 4;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 5;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 6;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 6;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 7;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 7;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 type_;
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 sex_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifySingleJudgeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifyJudgeListRequest : public ::google::protobuf::Message {
 public:
  CMessageModifyJudgeListRequest();
  virtual ~CMessageModifyJudgeListRequest();
  
  CMessageModifyJudgeListRequest(const CMessageModifyJudgeListRequest& from);
  
  inline CMessageModifyJudgeListRequest& operator=(const CMessageModifyJudgeListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifyJudgeListRequest& default_instance();
  void Swap(CMessageModifyJudgeListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifyJudgeListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifyJudgeListRequest& from);
  void MergeFrom(const CMessageModifyJudgeListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 2;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // repeated .PBJudgeRecord Data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >& data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >* mutable_data();
  inline const ::PBJudgeRecord& data(int index) const;
  inline ::PBJudgeRecord* mutable_data(int index);
  inline ::PBJudgeRecord* add_data();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord > data_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifyJudgeListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifyJudgeListResponse : public ::google::protobuf::Message {
 public:
  CMessageModifyJudgeListResponse();
  virtual ~CMessageModifyJudgeListResponse();
  
  CMessageModifyJudgeListResponse(const CMessageModifyJudgeListResponse& from);
  
  inline CMessageModifyJudgeListResponse& operator=(const CMessageModifyJudgeListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifyJudgeListResponse& default_instance();
  void Swap(CMessageModifyJudgeListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifyJudgeListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifyJudgeListResponse& from);
  void MergeFrom(const CMessageModifyJudgeListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RtnCode = 1;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rtncode_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifyJudgeListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifyJudgeNotice : public ::google::protobuf::Message {
 public:
  CMessageModifyJudgeNotice();
  virtual ~CMessageModifyJudgeNotice();
  
  CMessageModifyJudgeNotice(const CMessageModifyJudgeNotice& from);
  
  inline CMessageModifyJudgeNotice& operator=(const CMessageModifyJudgeNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifyJudgeNotice& default_instance();
  void Swap(CMessageModifyJudgeNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifyJudgeNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifyJudgeNotice& from);
  void MergeFrom(const CMessageModifyJudgeNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 4;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 4;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 5;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 5;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 IsAdd = 7;
  inline bool has_isadd() const;
  inline void clear_isadd();
  static const int kIsAddFieldNumber = 7;
  inline ::google::protobuf::uint32 isadd() const;
  inline void set_isadd(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 isadd_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifyJudgeNotice* default_instance_;
};
// -------------------------------------------------------------------

class PBJudgeRecord : public ::google::protobuf::Message {
 public:
  PBJudgeRecord();
  virtual ~PBJudgeRecord();
  
  PBJudgeRecord(const PBJudgeRecord& from);
  
  inline PBJudgeRecord& operator=(const PBJudgeRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBJudgeRecord& default_instance();
  void Swap(PBJudgeRecord* other);
  
  // implements Message ----------------------------------------------
  
  PBJudgeRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBJudgeRecord& from);
  void MergeFrom(const PBJudgeRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SrcName = 1;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 1;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
  // optional uint32 SrcCharID = 2;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional string DesName = 3;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 3;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
  // optional uint32 DesCharID = 4;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // optional uint32 TimeStamp = 7;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 7;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 8;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 8;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 9;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 9;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  ::google::protobuf::uint32 srccharid_;
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  ::google::protobuf::uint32 descharid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 sex_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBJudgeRecord* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryJudgeListRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryJudgeListRequest();
  virtual ~CMessageQueryJudgeListRequest();
  
  CMessageQueryJudgeListRequest(const CMessageQueryJudgeListRequest& from);
  
  inline CMessageQueryJudgeListRequest& operator=(const CMessageQueryJudgeListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryJudgeListRequest& default_instance();
  void Swap(CMessageQueryJudgeListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryJudgeListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryJudgeListRequest& from);
  void MergeFrom(const CMessageQueryJudgeListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Condition = 2;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 2;
  inline ::google::protobuf::uint32 condition() const;
  inline void set_condition(::google::protobuf::uint32 value);
  
  // optional uint32 Action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 condition_;
  ::google::protobuf::uint32 action_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryJudgeListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryJudgeListResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryJudgeListResponse();
  virtual ~CMessageQueryJudgeListResponse();
  
  CMessageQueryJudgeListResponse(const CMessageQueryJudgeListResponse& from);
  
  inline CMessageQueryJudgeListResponse& operator=(const CMessageQueryJudgeListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryJudgeListResponse& default_instance();
  void Swap(CMessageQueryJudgeListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryJudgeListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryJudgeListResponse& from);
  void MergeFrom(const CMessageQueryJudgeListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBJudgeRecord FavorJudgeOtherList = 1;
  inline int favorjudgeotherlist_size() const;
  inline void clear_favorjudgeotherlist();
  static const int kFavorJudgeOtherListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >& favorjudgeotherlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >* mutable_favorjudgeotherlist();
  inline const ::PBJudgeRecord& favorjudgeotherlist(int index) const;
  inline ::PBJudgeRecord* mutable_favorjudgeotherlist(int index);
  inline ::PBJudgeRecord* add_favorjudgeotherlist();
  
  // repeated .PBJudgeRecord BadJudgeOtherList = 2;
  inline int badjudgeotherlist_size() const;
  inline void clear_badjudgeotherlist();
  static const int kBadJudgeOtherListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >& badjudgeotherlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >* mutable_badjudgeotherlist();
  inline const ::PBJudgeRecord& badjudgeotherlist(int index) const;
  inline ::PBJudgeRecord* mutable_badjudgeotherlist(int index);
  inline ::PBJudgeRecord* add_badjudgeotherlist();
  
  // repeated .PBJudgeRecord FavorRecJudgeList = 3;
  inline int favorrecjudgelist_size() const;
  inline void clear_favorrecjudgelist();
  static const int kFavorRecJudgeListFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >& favorrecjudgelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >* mutable_favorrecjudgelist();
  inline const ::PBJudgeRecord& favorrecjudgelist(int index) const;
  inline ::PBJudgeRecord* mutable_favorrecjudgelist(int index);
  inline ::PBJudgeRecord* add_favorrecjudgelist();
  
  // repeated .PBJudgeRecord BadRecJudgeList = 4;
  inline int badrecjudgelist_size() const;
  inline void clear_badrecjudgelist();
  static const int kBadRecJudgeListFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >& badrecjudgelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >* mutable_badrecjudgelist();
  inline const ::PBJudgeRecord& badrecjudgelist(int index) const;
  inline ::PBJudgeRecord* mutable_badrecjudgelist(int index);
  inline ::PBJudgeRecord* add_badrecjudgelist();
  
  // optional uint32 FavorTotal = 5;
  inline bool has_favortotal() const;
  inline void clear_favortotal();
  static const int kFavorTotalFieldNumber = 5;
  inline ::google::protobuf::uint32 favortotal() const;
  inline void set_favortotal(::google::protobuf::uint32 value);
  
  // optional uint32 BadTotal = 6;
  inline bool has_badtotal() const;
  inline void clear_badtotal();
  static const int kBadTotalFieldNumber = 6;
  inline ::google::protobuf::uint32 badtotal() const;
  inline void set_badtotal(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord > favorjudgeotherlist_;
  ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord > badjudgeotherlist_;
  ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord > favorrecjudgelist_;
  ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord > badrecjudgelist_;
  ::google::protobuf::uint32 favortotal_;
  ::google::protobuf::uint32 badtotal_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryJudgeListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateMaxJudgeValueNotice : public ::google::protobuf::Message {
 public:
  CMessageUpdateMaxJudgeValueNotice();
  virtual ~CMessageUpdateMaxJudgeValueNotice();
  
  CMessageUpdateMaxJudgeValueNotice(const CMessageUpdateMaxJudgeValueNotice& from);
  
  inline CMessageUpdateMaxJudgeValueNotice& operator=(const CMessageUpdateMaxJudgeValueNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateMaxJudgeValueNotice& default_instance();
  void Swap(CMessageUpdateMaxJudgeValueNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateMaxJudgeValueNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateMaxJudgeValueNotice& from);
  void MergeFrom(const CMessageUpdateMaxJudgeValueNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FavorTotal = 1;
  inline bool has_favortotal() const;
  inline void clear_favortotal();
  static const int kFavorTotalFieldNumber = 1;
  inline ::google::protobuf::uint32 favortotal() const;
  inline void set_favortotal(::google::protobuf::uint32 value);
  
  // optional uint32 BadTotal = 2;
  inline bool has_badtotal() const;
  inline void clear_badtotal();
  static const int kBadTotalFieldNumber = 2;
  inline ::google::protobuf::uint32 badtotal() const;
  inline void set_badtotal(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 favortotal_;
  ::google::protobuf::uint32 badtotal_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateMaxJudgeValueNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQuerySingleRecordRequest : public ::google::protobuf::Message {
 public:
  CMessageQuerySingleRecordRequest();
  virtual ~CMessageQuerySingleRecordRequest();
  
  CMessageQuerySingleRecordRequest(const CMessageQuerySingleRecordRequest& from);
  
  inline CMessageQuerySingleRecordRequest& operator=(const CMessageQuerySingleRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQuerySingleRecordRequest& default_instance();
  void Swap(CMessageQuerySingleRecordRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQuerySingleRecordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQuerySingleRecordRequest& from);
  void MergeFrom(const CMessageQuerySingleRecordRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 2;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQuerySingleRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQuerySingleRecordResponse : public ::google::protobuf::Message {
 public:
  CMessageQuerySingleRecordResponse();
  virtual ~CMessageQuerySingleRecordResponse();
  
  CMessageQuerySingleRecordResponse(const CMessageQuerySingleRecordResponse& from);
  
  inline CMessageQuerySingleRecordResponse& operator=(const CMessageQuerySingleRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQuerySingleRecordResponse& default_instance();
  void Swap(CMessageQuerySingleRecordResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQuerySingleRecordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQuerySingleRecordResponse& from);
  void MergeFrom(const CMessageQuerySingleRecordResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBJudgeRecord FavorRecord = 1;
  inline bool has_favorrecord() const;
  inline void clear_favorrecord();
  static const int kFavorRecordFieldNumber = 1;
  inline const ::PBJudgeRecord& favorrecord() const;
  inline ::PBJudgeRecord* mutable_favorrecord();
  
  // optional .PBJudgeRecord BadRecord = 2;
  inline bool has_badrecord() const;
  inline void clear_badrecord();
  static const int kBadRecordFieldNumber = 2;
  inline const ::PBJudgeRecord& badrecord() const;
  inline ::PBJudgeRecord* mutable_badrecord();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBJudgeRecord* favorrecord_;
  ::PBJudgeRecord* badrecord_;
  friend void  protobuf_AddDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_judgemessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_judgemessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQuerySingleRecordResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageOpenJudgeNotice

// optional uint32 Type = 1;
inline bool CMessageOpenJudgeNotice::has_type() const {
  return _has_bit(0);
}
inline void CMessageOpenJudgeNotice::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageOpenJudgeNotice::type() const {
  return type_;
}
inline void CMessageOpenJudgeNotice::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional string Name = 2;
inline bool CMessageOpenJudgeNotice::has_name() const {
  return _has_bit(1);
}
inline void CMessageOpenJudgeNotice::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageOpenJudgeNotice::name() const {
  return *name_;
}
inline void CMessageOpenJudgeNotice::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageOpenJudgeNotice::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageOpenJudgeNotice::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageOpenJudgeNotice::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 CharID = 3;
inline bool CMessageOpenJudgeNotice::has_charid() const {
  return _has_bit(2);
}
inline void CMessageOpenJudgeNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageOpenJudgeNotice::charid() const {
  return charid_;
}
inline void CMessageOpenJudgeNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageCloseJudgeNotice

// optional uint32 Type = 1;
inline bool CMessageCloseJudgeNotice::has_type() const {
  return _has_bit(0);
}
inline void CMessageCloseJudgeNotice::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCloseJudgeNotice::type() const {
  return type_;
}
inline void CMessageCloseJudgeNotice::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional string Name = 2;
inline bool CMessageCloseJudgeNotice::has_name() const {
  return _has_bit(1);
}
inline void CMessageCloseJudgeNotice::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCloseJudgeNotice::name() const {
  return *name_;
}
inline void CMessageCloseJudgeNotice::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageCloseJudgeNotice::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageCloseJudgeNotice::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCloseJudgeNotice::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 CharID = 3;
inline bool CMessageCloseJudgeNotice::has_charid() const {
  return _has_bit(2);
}
inline void CMessageCloseJudgeNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCloseJudgeNotice::charid() const {
  return charid_;
}
inline void CMessageCloseJudgeNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageModifySingleJudgeRequest

// optional uint32 Type = 1;
inline bool CMessageModifySingleJudgeRequest::has_type() const {
  return _has_bit(0);
}
inline void CMessageModifySingleJudgeRequest::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeRequest::type() const {
  return type_;
}
inline void CMessageModifySingleJudgeRequest::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional uint32 SrcCharID = 2;
inline bool CMessageModifySingleJudgeRequest::has_srccharid() const {
  return _has_bit(1);
}
inline void CMessageModifySingleJudgeRequest::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeRequest::srccharid() const {
  return srccharid_;
}
inline void CMessageModifySingleJudgeRequest::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  srccharid_ = value;
}

// optional string DesName = 3;
inline bool CMessageModifySingleJudgeRequest::has_desname() const {
  return _has_bit(2);
}
inline void CMessageModifySingleJudgeRequest::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageModifySingleJudgeRequest::desname() const {
  return *desname_;
}
inline void CMessageModifySingleJudgeRequest::set_desname(const ::std::string& value) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageModifySingleJudgeRequest::set_desname(const char* value) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageModifySingleJudgeRequest::set_desname(const char* value, size_t size) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageModifySingleJudgeRequest::mutable_desname() {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// optional uint32 Value = 4;
inline bool CMessageModifySingleJudgeRequest::has_value() const {
  return _has_bit(3);
}
inline void CMessageModifySingleJudgeRequest::clear_value() {
  value_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeRequest::value() const {
  return value_;
}
inline void CMessageModifySingleJudgeRequest::set_value(::google::protobuf::uint32 value) {
  _set_bit(3);
  value_ = value;
}

// -------------------------------------------------------------------

// CMessageModifySingleJudgeResponse

// optional uint32 RtnCode = 1;
inline bool CMessageModifySingleJudgeResponse::has_rtncode() const {
  return _has_bit(0);
}
inline void CMessageModifySingleJudgeResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageModifySingleJudgeResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(0);
  rtncode_ = value;
}

// optional uint32 Type = 2;
inline bool CMessageModifySingleJudgeResponse::has_type() const {
  return _has_bit(1);
}
inline void CMessageModifySingleJudgeResponse::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeResponse::type() const {
  return type_;
}
inline void CMessageModifySingleJudgeResponse::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional string DesName = 3;
inline bool CMessageModifySingleJudgeResponse::has_desname() const {
  return _has_bit(2);
}
inline void CMessageModifySingleJudgeResponse::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageModifySingleJudgeResponse::desname() const {
  return *desname_;
}
inline void CMessageModifySingleJudgeResponse::set_desname(const ::std::string& value) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageModifySingleJudgeResponse::set_desname(const char* value) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageModifySingleJudgeResponse::set_desname(const char* value, size_t size) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageModifySingleJudgeResponse::mutable_desname() {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// optional uint32 DesCharID = 4;
inline bool CMessageModifySingleJudgeResponse::has_descharid() const {
  return _has_bit(3);
}
inline void CMessageModifySingleJudgeResponse::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeResponse::descharid() const {
  return descharid_;
}
inline void CMessageModifySingleJudgeResponse::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(3);
  descharid_ = value;
}

// optional uint32 Value = 5;
inline bool CMessageModifySingleJudgeResponse::has_value() const {
  return _has_bit(4);
}
inline void CMessageModifySingleJudgeResponse::clear_value() {
  value_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeResponse::value() const {
  return value_;
}
inline void CMessageModifySingleJudgeResponse::set_value(::google::protobuf::uint32 value) {
  _set_bit(4);
  value_ = value;
}

// optional uint32 Face = 6;
inline bool CMessageModifySingleJudgeResponse::has_face() const {
  return _has_bit(5);
}
inline void CMessageModifySingleJudgeResponse::clear_face() {
  face_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeResponse::face() const {
  return face_;
}
inline void CMessageModifySingleJudgeResponse::set_face(::google::protobuf::uint32 value) {
  _set_bit(5);
  face_ = value;
}

// optional uint32 Sex = 7;
inline bool CMessageModifySingleJudgeResponse::has_sex() const {
  return _has_bit(6);
}
inline void CMessageModifySingleJudgeResponse::clear_sex() {
  sex_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageModifySingleJudgeResponse::sex() const {
  return sex_;
}
inline void CMessageModifySingleJudgeResponse::set_sex(::google::protobuf::uint32 value) {
  _set_bit(6);
  sex_ = value;
}

// -------------------------------------------------------------------

// CMessageModifyJudgeListRequest

// optional uint32 Type = 1;
inline bool CMessageModifyJudgeListRequest::has_type() const {
  return _has_bit(0);
}
inline void CMessageModifyJudgeListRequest::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeListRequest::type() const {
  return type_;
}
inline void CMessageModifyJudgeListRequest::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional uint32 SrcCharID = 2;
inline bool CMessageModifyJudgeListRequest::has_srccharid() const {
  return _has_bit(1);
}
inline void CMessageModifyJudgeListRequest::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeListRequest::srccharid() const {
  return srccharid_;
}
inline void CMessageModifyJudgeListRequest::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  srccharid_ = value;
}

// repeated .PBJudgeRecord Data = 3;
inline int CMessageModifyJudgeListRequest::data_size() const {
  return data_.size();
}
inline void CMessageModifyJudgeListRequest::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >&
CMessageModifyJudgeListRequest::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >*
CMessageModifyJudgeListRequest::mutable_data() {
  return &data_;
}
inline const ::PBJudgeRecord& CMessageModifyJudgeListRequest::data(int index) const {
  return data_.Get(index);
}
inline ::PBJudgeRecord* CMessageModifyJudgeListRequest::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::PBJudgeRecord* CMessageModifyJudgeListRequest::add_data() {
  return data_.Add();
}

// -------------------------------------------------------------------

// CMessageModifyJudgeListResponse

// optional uint32 RtnCode = 1;
inline bool CMessageModifyJudgeListResponse::has_rtncode() const {
  return _has_bit(0);
}
inline void CMessageModifyJudgeListResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeListResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageModifyJudgeListResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(0);
  rtncode_ = value;
}

// optional uint32 Type = 2;
inline bool CMessageModifyJudgeListResponse::has_type() const {
  return _has_bit(1);
}
inline void CMessageModifyJudgeListResponse::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeListResponse::type() const {
  return type_;
}
inline void CMessageModifyJudgeListResponse::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// -------------------------------------------------------------------

// CMessageModifyJudgeNotice

// optional uint32 Type = 1;
inline bool CMessageModifyJudgeNotice::has_type() const {
  return _has_bit(0);
}
inline void CMessageModifyJudgeNotice::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeNotice::type() const {
  return type_;
}
inline void CMessageModifyJudgeNotice::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional string Name = 2;
inline bool CMessageModifyJudgeNotice::has_name() const {
  return _has_bit(1);
}
inline void CMessageModifyJudgeNotice::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageModifyJudgeNotice::name() const {
  return *name_;
}
inline void CMessageModifyJudgeNotice::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageModifyJudgeNotice::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageModifyJudgeNotice::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageModifyJudgeNotice::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 CharID = 3;
inline bool CMessageModifyJudgeNotice::has_charid() const {
  return _has_bit(2);
}
inline void CMessageModifyJudgeNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeNotice::charid() const {
  return charid_;
}
inline void CMessageModifyJudgeNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 Value = 4;
inline bool CMessageModifyJudgeNotice::has_value() const {
  return _has_bit(3);
}
inline void CMessageModifyJudgeNotice::clear_value() {
  value_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeNotice::value() const {
  return value_;
}
inline void CMessageModifyJudgeNotice::set_value(::google::protobuf::uint32 value) {
  _set_bit(3);
  value_ = value;
}

// optional uint32 Face = 5;
inline bool CMessageModifyJudgeNotice::has_face() const {
  return _has_bit(4);
}
inline void CMessageModifyJudgeNotice::clear_face() {
  face_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeNotice::face() const {
  return face_;
}
inline void CMessageModifyJudgeNotice::set_face(::google::protobuf::uint32 value) {
  _set_bit(4);
  face_ = value;
}

// optional uint32 Sex = 6;
inline bool CMessageModifyJudgeNotice::has_sex() const {
  return _has_bit(5);
}
inline void CMessageModifyJudgeNotice::clear_sex() {
  sex_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeNotice::sex() const {
  return sex_;
}
inline void CMessageModifyJudgeNotice::set_sex(::google::protobuf::uint32 value) {
  _set_bit(5);
  sex_ = value;
}

// optional uint32 IsAdd = 7;
inline bool CMessageModifyJudgeNotice::has_isadd() const {
  return _has_bit(6);
}
inline void CMessageModifyJudgeNotice::clear_isadd() {
  isadd_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageModifyJudgeNotice::isadd() const {
  return isadd_;
}
inline void CMessageModifyJudgeNotice::set_isadd(::google::protobuf::uint32 value) {
  _set_bit(6);
  isadd_ = value;
}

// -------------------------------------------------------------------

// PBJudgeRecord

// optional string SrcName = 1;
inline bool PBJudgeRecord::has_srcname() const {
  return _has_bit(0);
}
inline void PBJudgeRecord::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBJudgeRecord::srcname() const {
  return *srcname_;
}
inline void PBJudgeRecord::set_srcname(const ::std::string& value) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void PBJudgeRecord::set_srcname(const char* value) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void PBJudgeRecord::set_srcname(const char* value, size_t size) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBJudgeRecord::mutable_srcname() {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// optional uint32 SrcCharID = 2;
inline bool PBJudgeRecord::has_srccharid() const {
  return _has_bit(1);
}
inline void PBJudgeRecord::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBJudgeRecord::srccharid() const {
  return srccharid_;
}
inline void PBJudgeRecord::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  srccharid_ = value;
}

// optional string DesName = 3;
inline bool PBJudgeRecord::has_desname() const {
  return _has_bit(2);
}
inline void PBJudgeRecord::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBJudgeRecord::desname() const {
  return *desname_;
}
inline void PBJudgeRecord::set_desname(const ::std::string& value) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void PBJudgeRecord::set_desname(const char* value) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void PBJudgeRecord::set_desname(const char* value, size_t size) {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBJudgeRecord::mutable_desname() {
  _set_bit(2);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// optional uint32 DesCharID = 4;
inline bool PBJudgeRecord::has_descharid() const {
  return _has_bit(3);
}
inline void PBJudgeRecord::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBJudgeRecord::descharid() const {
  return descharid_;
}
inline void PBJudgeRecord::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(3);
  descharid_ = value;
}

// optional uint32 Type = 5;
inline bool PBJudgeRecord::has_type() const {
  return _has_bit(4);
}
inline void PBJudgeRecord::clear_type() {
  type_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBJudgeRecord::type() const {
  return type_;
}
inline void PBJudgeRecord::set_type(::google::protobuf::uint32 value) {
  _set_bit(4);
  type_ = value;
}

// optional uint32 Value = 6;
inline bool PBJudgeRecord::has_value() const {
  return _has_bit(5);
}
inline void PBJudgeRecord::clear_value() {
  value_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBJudgeRecord::value() const {
  return value_;
}
inline void PBJudgeRecord::set_value(::google::protobuf::uint32 value) {
  _set_bit(5);
  value_ = value;
}

// optional uint32 TimeStamp = 7;
inline bool PBJudgeRecord::has_timestamp() const {
  return _has_bit(6);
}
inline void PBJudgeRecord::clear_timestamp() {
  timestamp_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBJudgeRecord::timestamp() const {
  return timestamp_;
}
inline void PBJudgeRecord::set_timestamp(::google::protobuf::uint32 value) {
  _set_bit(6);
  timestamp_ = value;
}

// optional uint32 Face = 8;
inline bool PBJudgeRecord::has_face() const {
  return _has_bit(7);
}
inline void PBJudgeRecord::clear_face() {
  face_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBJudgeRecord::face() const {
  return face_;
}
inline void PBJudgeRecord::set_face(::google::protobuf::uint32 value) {
  _set_bit(7);
  face_ = value;
}

// optional uint32 Sex = 9;
inline bool PBJudgeRecord::has_sex() const {
  return _has_bit(8);
}
inline void PBJudgeRecord::clear_sex() {
  sex_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBJudgeRecord::sex() const {
  return sex_;
}
inline void PBJudgeRecord::set_sex(::google::protobuf::uint32 value) {
  _set_bit(8);
  sex_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryJudgeListRequest

// optional uint32 CharID = 1;
inline bool CMessageQueryJudgeListRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryJudgeListRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryJudgeListRequest::charid() const {
  return charid_;
}
inline void CMessageQueryJudgeListRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Condition = 2;
inline bool CMessageQueryJudgeListRequest::has_condition() const {
  return _has_bit(1);
}
inline void CMessageQueryJudgeListRequest::clear_condition() {
  condition_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryJudgeListRequest::condition() const {
  return condition_;
}
inline void CMessageQueryJudgeListRequest::set_condition(::google::protobuf::uint32 value) {
  _set_bit(1);
  condition_ = value;
}

// optional uint32 Action = 3;
inline bool CMessageQueryJudgeListRequest::has_action() const {
  return _has_bit(2);
}
inline void CMessageQueryJudgeListRequest::clear_action() {
  action_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryJudgeListRequest::action() const {
  return action_;
}
inline void CMessageQueryJudgeListRequest::set_action(::google::protobuf::uint32 value) {
  _set_bit(2);
  action_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryJudgeListResponse

// repeated .PBJudgeRecord FavorJudgeOtherList = 1;
inline int CMessageQueryJudgeListResponse::favorjudgeotherlist_size() const {
  return favorjudgeotherlist_.size();
}
inline void CMessageQueryJudgeListResponse::clear_favorjudgeotherlist() {
  favorjudgeotherlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >&
CMessageQueryJudgeListResponse::favorjudgeotherlist() const {
  return favorjudgeotherlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >*
CMessageQueryJudgeListResponse::mutable_favorjudgeotherlist() {
  return &favorjudgeotherlist_;
}
inline const ::PBJudgeRecord& CMessageQueryJudgeListResponse::favorjudgeotherlist(int index) const {
  return favorjudgeotherlist_.Get(index);
}
inline ::PBJudgeRecord* CMessageQueryJudgeListResponse::mutable_favorjudgeotherlist(int index) {
  return favorjudgeotherlist_.Mutable(index);
}
inline ::PBJudgeRecord* CMessageQueryJudgeListResponse::add_favorjudgeotherlist() {
  return favorjudgeotherlist_.Add();
}

// repeated .PBJudgeRecord BadJudgeOtherList = 2;
inline int CMessageQueryJudgeListResponse::badjudgeotherlist_size() const {
  return badjudgeotherlist_.size();
}
inline void CMessageQueryJudgeListResponse::clear_badjudgeotherlist() {
  badjudgeotherlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >&
CMessageQueryJudgeListResponse::badjudgeotherlist() const {
  return badjudgeotherlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >*
CMessageQueryJudgeListResponse::mutable_badjudgeotherlist() {
  return &badjudgeotherlist_;
}
inline const ::PBJudgeRecord& CMessageQueryJudgeListResponse::badjudgeotherlist(int index) const {
  return badjudgeotherlist_.Get(index);
}
inline ::PBJudgeRecord* CMessageQueryJudgeListResponse::mutable_badjudgeotherlist(int index) {
  return badjudgeotherlist_.Mutable(index);
}
inline ::PBJudgeRecord* CMessageQueryJudgeListResponse::add_badjudgeotherlist() {
  return badjudgeotherlist_.Add();
}

// repeated .PBJudgeRecord FavorRecJudgeList = 3;
inline int CMessageQueryJudgeListResponse::favorrecjudgelist_size() const {
  return favorrecjudgelist_.size();
}
inline void CMessageQueryJudgeListResponse::clear_favorrecjudgelist() {
  favorrecjudgelist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >&
CMessageQueryJudgeListResponse::favorrecjudgelist() const {
  return favorrecjudgelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >*
CMessageQueryJudgeListResponse::mutable_favorrecjudgelist() {
  return &favorrecjudgelist_;
}
inline const ::PBJudgeRecord& CMessageQueryJudgeListResponse::favorrecjudgelist(int index) const {
  return favorrecjudgelist_.Get(index);
}
inline ::PBJudgeRecord* CMessageQueryJudgeListResponse::mutable_favorrecjudgelist(int index) {
  return favorrecjudgelist_.Mutable(index);
}
inline ::PBJudgeRecord* CMessageQueryJudgeListResponse::add_favorrecjudgelist() {
  return favorrecjudgelist_.Add();
}

// repeated .PBJudgeRecord BadRecJudgeList = 4;
inline int CMessageQueryJudgeListResponse::badrecjudgelist_size() const {
  return badrecjudgelist_.size();
}
inline void CMessageQueryJudgeListResponse::clear_badrecjudgelist() {
  badrecjudgelist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >&
CMessageQueryJudgeListResponse::badrecjudgelist() const {
  return badrecjudgelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBJudgeRecord >*
CMessageQueryJudgeListResponse::mutable_badrecjudgelist() {
  return &badrecjudgelist_;
}
inline const ::PBJudgeRecord& CMessageQueryJudgeListResponse::badrecjudgelist(int index) const {
  return badrecjudgelist_.Get(index);
}
inline ::PBJudgeRecord* CMessageQueryJudgeListResponse::mutable_badrecjudgelist(int index) {
  return badrecjudgelist_.Mutable(index);
}
inline ::PBJudgeRecord* CMessageQueryJudgeListResponse::add_badrecjudgelist() {
  return badrecjudgelist_.Add();
}

// optional uint32 FavorTotal = 5;
inline bool CMessageQueryJudgeListResponse::has_favortotal() const {
  return _has_bit(4);
}
inline void CMessageQueryJudgeListResponse::clear_favortotal() {
  favortotal_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageQueryJudgeListResponse::favortotal() const {
  return favortotal_;
}
inline void CMessageQueryJudgeListResponse::set_favortotal(::google::protobuf::uint32 value) {
  _set_bit(4);
  favortotal_ = value;
}

// optional uint32 BadTotal = 6;
inline bool CMessageQueryJudgeListResponse::has_badtotal() const {
  return _has_bit(5);
}
inline void CMessageQueryJudgeListResponse::clear_badtotal() {
  badtotal_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageQueryJudgeListResponse::badtotal() const {
  return badtotal_;
}
inline void CMessageQueryJudgeListResponse::set_badtotal(::google::protobuf::uint32 value) {
  _set_bit(5);
  badtotal_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdateMaxJudgeValueNotice

// optional uint32 FavorTotal = 1;
inline bool CMessageUpdateMaxJudgeValueNotice::has_favortotal() const {
  return _has_bit(0);
}
inline void CMessageUpdateMaxJudgeValueNotice::clear_favortotal() {
  favortotal_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdateMaxJudgeValueNotice::favortotal() const {
  return favortotal_;
}
inline void CMessageUpdateMaxJudgeValueNotice::set_favortotal(::google::protobuf::uint32 value) {
  _set_bit(0);
  favortotal_ = value;
}

// optional uint32 BadTotal = 2;
inline bool CMessageUpdateMaxJudgeValueNotice::has_badtotal() const {
  return _has_bit(1);
}
inline void CMessageUpdateMaxJudgeValueNotice::clear_badtotal() {
  badtotal_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdateMaxJudgeValueNotice::badtotal() const {
  return badtotal_;
}
inline void CMessageUpdateMaxJudgeValueNotice::set_badtotal(::google::protobuf::uint32 value) {
  _set_bit(1);
  badtotal_ = value;
}

// -------------------------------------------------------------------

// CMessageQuerySingleRecordRequest

// optional uint32 SrcCharID = 1;
inline bool CMessageQuerySingleRecordRequest::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessageQuerySingleRecordRequest::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQuerySingleRecordRequest::srccharid() const {
  return srccharid_;
}
inline void CMessageQuerySingleRecordRequest::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// optional uint32 DesCharID = 2;
inline bool CMessageQuerySingleRecordRequest::has_descharid() const {
  return _has_bit(1);
}
inline void CMessageQuerySingleRecordRequest::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQuerySingleRecordRequest::descharid() const {
  return descharid_;
}
inline void CMessageQuerySingleRecordRequest::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  descharid_ = value;
}

// -------------------------------------------------------------------

// CMessageQuerySingleRecordResponse

// optional .PBJudgeRecord FavorRecord = 1;
inline bool CMessageQuerySingleRecordResponse::has_favorrecord() const {
  return _has_bit(0);
}
inline void CMessageQuerySingleRecordResponse::clear_favorrecord() {
  if (favorrecord_ != NULL) favorrecord_->::PBJudgeRecord::Clear();
  _clear_bit(0);
}
inline const ::PBJudgeRecord& CMessageQuerySingleRecordResponse::favorrecord() const {
  return favorrecord_ != NULL ? *favorrecord_ : *default_instance_->favorrecord_;
}
inline ::PBJudgeRecord* CMessageQuerySingleRecordResponse::mutable_favorrecord() {
  _set_bit(0);
  if (favorrecord_ == NULL) favorrecord_ = new ::PBJudgeRecord;
  return favorrecord_;
}

// optional .PBJudgeRecord BadRecord = 2;
inline bool CMessageQuerySingleRecordResponse::has_badrecord() const {
  return _has_bit(1);
}
inline void CMessageQuerySingleRecordResponse::clear_badrecord() {
  if (badrecord_ != NULL) badrecord_->::PBJudgeRecord::Clear();
  _clear_bit(1);
}
inline const ::PBJudgeRecord& CMessageQuerySingleRecordResponse::badrecord() const {
  return badrecord_ != NULL ? *badrecord_ : *default_instance_->badrecord_;
}
inline ::PBJudgeRecord* CMessageQuerySingleRecordResponse::mutable_badrecord() {
  _set_bit(1);
  if (badrecord_ == NULL) badrecord_ = new ::PBJudgeRecord;
  return badrecord_;
}

#endif  // PROTOBUF_judgemessage_5fpb_2ehxx__INCLUDED
