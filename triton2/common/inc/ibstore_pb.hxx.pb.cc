// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "ibstore_pb.hxx.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>
#ifdef LEAK_CHK_DEBUG_NEW
#include "debug_new.h"
#endif

namespace {

const ::google::protobuf::Descriptor* PBLocation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBLocation_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBIbMoney_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBIbMoney_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBIbItemOnSale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBIbItemOnSale_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageListIbItemsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageListIbItemsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageListIbItemsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageListIbItemsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePurchaseIbItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePurchaseIbItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePurchaseIbItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePurchaseIbItemResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageRoleIbTransNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageRoleIbTransNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBIbSubTab_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBIbSubTab_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBIbTab_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBIbTab_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBIbStore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBIbStore_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageUserChargeNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageUserChargeNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPromotion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPromotion_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageIbItemRemainNotice_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageIbItemRemainNotice_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBConsume_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBConsume_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBFuncStore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBFuncStore_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGetFuncConsumesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGetFuncConsumesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageGetFuncConsumesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageGetFuncConsumesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePurchaseFuncRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePurchaseFuncRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePurchaseFuncResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePurchaseFuncResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* IBSTORE_MSG_ID_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* IBSTORE_FLAG_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ibstore_5fpb_2ehxx() {
  protobuf_AddDesc_ibstore_5fpb_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ibstore_pb.hxx");
  GOOGLE_CHECK(file != NULL);
  PBLocation_descriptor_ = file->message_type(0);
  static const int PBLocation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, col_),
  };
  PBLocation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBLocation_descriptor_,
      PBLocation::default_instance_,
      PBLocation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBLocation));
  PBIbMoney_descriptor_ = file->message_type(1);
  static const int PBIbMoney_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbMoney, unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbMoney, value_),
  };
  PBIbMoney_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBIbMoney_descriptor_,
      PBIbMoney::default_instance_,
      PBIbMoney_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbMoney, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbMoney, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBIbMoney));
  PBIbItemOnSale_descriptor_ = file->message_type(2);
  static const int PBIbItemOnSale_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, itemcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, goodscount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, goodsprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, expirytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, coldtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, elapsedtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, goodsname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, goodsdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, ispack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, limitperchar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, limittype_),
  };
  PBIbItemOnSale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBIbItemOnSale_descriptor_,
      PBIbItemOnSale::default_instance_,
      PBIbItemOnSale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbItemOnSale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBIbItemOnSale));
  CMessageListIbItemsRequest_descriptor_ = file->message_type(3);
  static const int CMessageListIbItemsRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsRequest, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsRequest, isopenrmbshopui_),
  };
  CMessageListIbItemsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageListIbItemsRequest_descriptor_,
      CMessageListIbItemsRequest::default_instance_,
      CMessageListIbItemsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageListIbItemsRequest));
  CMessageListIbItemsResponse_descriptor_ = file->message_type(4);
  static const int CMessageListIbItemsResponse_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, remainmoneys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, ibstore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, bulletin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, focustab_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, isopenrmbshopui_),
  };
  CMessageListIbItemsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageListIbItemsResponse_descriptor_,
      CMessageListIbItemsResponse::default_instance_,
      CMessageListIbItemsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageListIbItemsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageListIbItemsResponse));
  CMessagePurchaseIbItemRequest_descriptor_ = file->message_type(5);
  static const int CMessagePurchaseIbItemRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemRequest, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemRequest, goodscount_),
  };
  CMessagePurchaseIbItemRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePurchaseIbItemRequest_descriptor_,
      CMessagePurchaseIbItemRequest::default_instance_,
      CMessagePurchaseIbItemRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePurchaseIbItemRequest));
  CMessagePurchaseIbItemResponse_descriptor_ = file->message_type(6);
  static const int CMessagePurchaseIbItemResponse_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, transid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, goodscount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, itemcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, goodscost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, remained_),
  };
  CMessagePurchaseIbItemResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePurchaseIbItemResponse_descriptor_,
      CMessagePurchaseIbItemResponse::default_instance_,
      CMessagePurchaseIbItemResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseIbItemResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePurchaseIbItemResponse));
  CMessageRoleIbTransNotify_descriptor_ = file->message_type(7);
  static const int CMessageRoleIbTransNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageRoleIbTransNotify, transid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageRoleIbTransNotify, successful_),
  };
  CMessageRoleIbTransNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageRoleIbTransNotify_descriptor_,
      CMessageRoleIbTransNotify::default_instance_,
      CMessageRoleIbTransNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageRoleIbTransNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageRoleIbTransNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageRoleIbTransNotify));
  PBIbSubTab_descriptor_ = file->message_type(8);
  static const int PBIbSubTab_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbSubTab, subtabid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbSubTab, subtabname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbSubTab, goodsid_),
  };
  PBIbSubTab_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBIbSubTab_descriptor_,
      PBIbSubTab::default_instance_,
      PBIbSubTab_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbSubTab, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbSubTab, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBIbSubTab));
  PBIbTab_descriptor_ = file->message_type(9);
  static const int PBIbTab_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbTab, tabid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbTab, tabname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbTab, subtab_),
  };
  PBIbTab_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBIbTab_descriptor_,
      PBIbTab::default_instance_,
      PBIbTab_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbTab, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbTab, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBIbTab));
  PBIbStore_descriptor_ = file->message_type(10);
  static const int PBIbStore_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbStore, pageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbStore, pagename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbStore, tab_),
  };
  PBIbStore_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBIbStore_descriptor_,
      PBIbStore::default_instance_,
      PBIbStore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbStore, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBIbStore, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBIbStore));
  CMessageUserChargeNotice_descriptor_ = file->message_type(11);
  static const int CMessageUserChargeNotice_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUserChargeNotice, detailid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUserChargeNotice, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUserChargeNotice, subjectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUserChargeNotice, amount_),
  };
  CMessageUserChargeNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageUserChargeNotice_descriptor_,
      CMessageUserChargeNotice::default_instance_,
      CMessageUserChargeNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUserChargeNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageUserChargeNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageUserChargeNotice));
  PBPromotion_descriptor_ = file->message_type(12);
  static const int PBPromotion_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, remaincount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, begintime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, endtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, maxcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, coldnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, coldtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, elapsedtime_),
  };
  PBPromotion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBPromotion_descriptor_,
      PBPromotion::default_instance_,
      PBPromotion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPromotion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBPromotion));
  CMessageIbItemRemainNotice_descriptor_ = file->message_type(13);
  static const int CMessageIbItemRemainNotice_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIbItemRemainNotice, promotion_),
  };
  CMessageIbItemRemainNotice_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageIbItemRemainNotice_descriptor_,
      CMessageIbItemRemainNotice::default_instance_,
      CMessageIbItemRemainNotice_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIbItemRemainNotice, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageIbItemRemainNotice, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageIbItemRemainNotice));
  PBConsume_descriptor_ = file->message_type(14);
  static const int PBConsume_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBConsume, consumetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBConsume, consumesprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBConsume, tamplaterate_),
  };
  PBConsume_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBConsume_descriptor_,
      PBConsume::default_instance_,
      PBConsume_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBConsume, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBConsume, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBConsume));
  PBFuncStore_descriptor_ = file->message_type(15);
  static const int PBFuncStore_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, funcname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, funcunittype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, consume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, funcshow_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, defaultconsume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, funcunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, funccountlimit_),
  };
  PBFuncStore_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBFuncStore_descriptor_,
      PBFuncStore::default_instance_,
      PBFuncStore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFuncStore, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBFuncStore));
  CMessageGetFuncConsumesRequest_descriptor_ = file->message_type(16);
  static const int CMessageGetFuncConsumesRequest_offsets_[1] = {
  };
  CMessageGetFuncConsumesRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGetFuncConsumesRequest_descriptor_,
      CMessageGetFuncConsumesRequest::default_instance_,
      CMessageGetFuncConsumesRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetFuncConsumesRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetFuncConsumesRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGetFuncConsumesRequest));
  CMessageGetFuncConsumesResponse_descriptor_ = file->message_type(17);
  static const int CMessageGetFuncConsumesResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetFuncConsumesResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetFuncConsumesResponse, funcstore_),
  };
  CMessageGetFuncConsumesResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessageGetFuncConsumesResponse_descriptor_,
      CMessageGetFuncConsumesResponse::default_instance_,
      CMessageGetFuncConsumesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetFuncConsumesResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageGetFuncConsumesResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessageGetFuncConsumesResponse));
  CMessagePurchaseFuncRequest_descriptor_ = file->message_type(18);
  static const int CMessagePurchaseFuncRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncRequest, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncRequest, funccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncRequest, consumetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncRequest, extradata1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncRequest, extradata2_),
  };
  CMessagePurchaseFuncRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePurchaseFuncRequest_descriptor_,
      CMessagePurchaseFuncRequest::default_instance_,
      CMessagePurchaseFuncRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePurchaseFuncRequest));
  CMessagePurchaseFuncResponse_descriptor_ = file->message_type(19);
  static const int CMessagePurchaseFuncResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, funcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, funccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, consumetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, funcscost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, extradata1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, extradata2_),
  };
  CMessagePurchaseFuncResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMessagePurchaseFuncResponse_descriptor_,
      CMessagePurchaseFuncResponse::default_instance_,
      CMessagePurchaseFuncResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePurchaseFuncResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMessagePurchaseFuncResponse));
  IBSTORE_MSG_ID_descriptor_ = file->enum_type(0);
  IBSTORE_FLAG_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ibstore_5fpb_2ehxx);
}

void protobuf_RegisterTypes() {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBLocation_descriptor_, &PBLocation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBIbMoney_descriptor_, &PBIbMoney::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBIbItemOnSale_descriptor_, &PBIbItemOnSale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageListIbItemsRequest_descriptor_, &CMessageListIbItemsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageListIbItemsResponse_descriptor_, &CMessageListIbItemsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePurchaseIbItemRequest_descriptor_, &CMessagePurchaseIbItemRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePurchaseIbItemResponse_descriptor_, &CMessagePurchaseIbItemResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageRoleIbTransNotify_descriptor_, &CMessageRoleIbTransNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBIbSubTab_descriptor_, &PBIbSubTab::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBIbTab_descriptor_, &PBIbTab::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBIbStore_descriptor_, &PBIbStore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageUserChargeNotice_descriptor_, &CMessageUserChargeNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBPromotion_descriptor_, &PBPromotion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageIbItemRemainNotice_descriptor_, &CMessageIbItemRemainNotice::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBConsume_descriptor_, &PBConsume::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBFuncStore_descriptor_, &PBFuncStore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGetFuncConsumesRequest_descriptor_, &CMessageGetFuncConsumesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessageGetFuncConsumesResponse_descriptor_, &CMessageGetFuncConsumesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePurchaseFuncRequest_descriptor_, &CMessagePurchaseFuncRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMessagePurchaseFuncResponse_descriptor_, &CMessagePurchaseFuncResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ibstore_5fpb_2ehxx() {
  delete PBLocation::default_instance_;
  delete PBLocation_reflection_;
  delete PBIbMoney::default_instance_;
  delete PBIbMoney_reflection_;
  delete PBIbItemOnSale::default_instance_;
  delete PBIbItemOnSale_reflection_;
  delete CMessageListIbItemsRequest::default_instance_;
  delete CMessageListIbItemsRequest_reflection_;
  delete CMessageListIbItemsResponse::default_instance_;
  delete CMessageListIbItemsResponse_reflection_;
  delete CMessagePurchaseIbItemRequest::default_instance_;
  delete CMessagePurchaseIbItemRequest_reflection_;
  delete CMessagePurchaseIbItemResponse::default_instance_;
  delete CMessagePurchaseIbItemResponse_reflection_;
  delete CMessageRoleIbTransNotify::default_instance_;
  delete CMessageRoleIbTransNotify_reflection_;
  delete PBIbSubTab::default_instance_;
  delete PBIbSubTab_reflection_;
  delete PBIbTab::default_instance_;
  delete PBIbTab_reflection_;
  delete PBIbStore::default_instance_;
  delete PBIbStore_reflection_;
  delete CMessageUserChargeNotice::default_instance_;
  delete CMessageUserChargeNotice_reflection_;
  delete PBPromotion::default_instance_;
  delete PBPromotion_reflection_;
  delete CMessageIbItemRemainNotice::default_instance_;
  delete CMessageIbItemRemainNotice_reflection_;
  delete PBConsume::default_instance_;
  delete PBConsume_reflection_;
  delete PBFuncStore::default_instance_;
  delete PBFuncStore_reflection_;
  delete CMessageGetFuncConsumesRequest::default_instance_;
  delete CMessageGetFuncConsumesRequest_reflection_;
  delete CMessageGetFuncConsumesResponse::default_instance_;
  delete CMessageGetFuncConsumesResponse_reflection_;
  delete CMessagePurchaseFuncRequest::default_instance_;
  delete CMessagePurchaseFuncRequest_reflection_;
  delete CMessagePurchaseFuncResponse::default_instance_;
  delete CMessagePurchaseFuncResponse_reflection_;
}

void protobuf_AddDesc_ibstore_5fpb_2ehxx() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  #ifndef _NO_PROTOBUF_STR_
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016ibstore_pb.hxx\"4\n\nPBLocation\022\014\n\004page\030\001"
    " \001(\r\022\013\n\003row\030\002 \001(\r\022\013\n\003col\030\003 \001(\r\"(\n\tPBIbMo"
    "ney\022\014\n\004unit\030\001 \001(\r\022\r\n\005value\030\002 \001(\005\"\316\002\n\016PBI"
    "bItemOnSale\022\017\n\007GoodsID\030\001 \001(\r\022\016\n\006ItemID\030\002"
    " \001(\r\022\021\n\tItemCount\030\003 \001(\r\022\022\n\nGoodsCount\030\004 "
    "\001(\005\022\036\n\nGoodsPrice\030\005 \001(\0132\n.PBIbMoney\022\034\n\010D"
    "iscount\030\006 \001(\0132\n.PBIbMoney\022\022\n\nExpiryTime\030"
    "\007 \001(\005\022\020\n\010ColdTime\030\010 \001(\005\022\023\n\013ElapsedTime\030\t"
    " \001(\005\022\016\n\006Active\030\n \001(\r\022\021\n\tGoodsName\030\013 \001(\t\022"
    "\021\n\tGoodsDesc\030\014 \001(\t\022\016\n\006IsPack\030\r \001(\005\022\014\n\004Fl"
    "ag\030\016 \001(\005\022\024\n\014LimitPerChar\030\017 \001(\005\022\021\n\tLimitT"
    "ype\030\020 \001(\005\"F\n\032CMessageListIbItemsRequest\022"
    "\017\n\007Version\030\001 \001(\r\022\027\n\017IsOpenRMBShopUI\030\002 \001("
    "\r\"\346\001\n\033CMessageListIbItemsResponse\022\r\n\005Err"
    "or\030\001 \001(\005\022\017\n\007Version\030\002 \001(\r\022 \n\014RemainMoney"
    "s\030\003 \003(\0132\n.PBIbMoney\022\036\n\005Goods\030\004 \003(\0132\017.PBI"
    "bItemOnSale\022\033\n\007IbStore\030\005 \003(\0132\n.PBIbStore"
    "\022\020\n\010Bulletin\030\006 \001(\t\022\035\n\010FocusTab\030\007 \003(\0132\013.P"
    "BIbSubTab\022\027\n\017IsOpenRMBShopUI\030\010 \001(\r\"D\n\035CM"
    "essagePurchaseIbItemRequest\022\017\n\007GoodsID\030\001"
    " \001(\r\022\022\n\nGoodsCount\030\002 \001(\r\"\325\001\n\036CMessagePur"
    "chaseIbItemResponse\022\r\n\005Error\030\001 \001(\005\022\016\n\006Ro"
    "leID\030\002 \001(\r\022\017\n\007TransID\030\003 \001(\005\022\017\n\007GoodsID\030\004"
    " \001(\r\022\022\n\nGoodsCount\030\005 \001(\r\022\016\n\006ItemID\030\006 \001(\r"
    "\022\021\n\tItemCount\030\007 \001(\r\022\035\n\tGoodsCost\030\010 \001(\0132\n"
    ".PBIbMoney\022\034\n\010Remained\030\t \001(\0132\n.PBIbMoney"
    "\"@\n\031CMessageRoleIbTransNotify\022\017\n\007TransID"
    "\030\001 \001(\005\022\022\n\nSuccessful\030\002 \001(\005\"C\n\nPBIbSubTab"
    "\022\020\n\010SubTabID\030\001 \001(\r\022\022\n\nSubTabName\030\002 \001(\t\022\017"
    "\n\007GoodsID\030\003 \003(\r\"F\n\007PBIbTab\022\r\n\005TabID\030\001 \001("
    "\r\022\017\n\007TabName\030\002 \001(\t\022\033\n\006SubTab\030\003 \003(\0132\013.PBI"
    "bSubTab\"D\n\tPBIbStore\022\016\n\006PageID\030\001 \001(\r\022\020\n\010"
    "PageName\030\002 \001(\t\022\025\n\003Tab\030\003 \003(\0132\010.PBIbTab\"_\n"
    "\030CMessageUserChargeNotice\022\020\n\010DetailID\030\001 "
    "\001(\003\022\016\n\006UserID\030\002 \001(\005\022\021\n\tSubjectID\030\003 \001(\005\022\016"
    "\n\006Amount\030\004 \001(\005\"\241\001\n\013PBPromotion\022\017\n\007GoodsI"
    "D\030\001 \001(\r\022\023\n\013RemainCount\030\002 \001(\005\022\021\n\tBeginTim"
    "e\030\003 \001(\005\022\017\n\007EndTime\030\004 \001(\005\022\020\n\010MaxCount\030\005 \001"
    "(\005\022\017\n\007ColdNum\030\006 \001(\005\022\020\n\010ColdTime\030\007 \001(\005\022\023\n"
    "\013ElapsedTime\030\010 \001(\005\"=\n\032CMessageIbItemRema"
    "inNotice\022\037\n\tpromotion\030\001 \003(\0132\014.PBPromotio"
    "n\"M\n\tPBConsume\022\023\n\013ConsumeType\030\001 \001(\r\022\025\n\rC"
    "onsumeSprice\030\002 \001(\r\022\024\n\014TamplateRate\030\003 \001(\r"
    "\"\266\001\n\013PBFuncStore\022\016\n\006FuncID\030\001 \001(\r\022\020\n\010Func"
    "Name\030\002 \001(\t\022\024\n\014FuncUnitType\030\003 \001(\r\022\033\n\007Cons"
    "ume\030\004 \003(\0132\n.PBConsume\022\020\n\010FuncShow\030\005 \001(\r\022"
    "\026\n\016DefaultConsume\030\006 \001(\r\022\020\n\010FuncUnit\030\007 \001("
    "\r\022\026\n\016FuncCountLimit\030\010 \001(\r\" \n\036CMessageGet"
    "FuncConsumesRequest\"Q\n\037CMessageGetFuncCo"
    "nsumesResponse\022\r\n\005Error\030\001 \001(\005\022\037\n\tFuncSto"
    "re\030\002 \003(\0132\014.PBFuncStore\"}\n\033CMessagePurcha"
    "seFuncRequest\022\016\n\006FuncID\030\001 \001(\r\022\021\n\tFuncCou"
    "nt\030\002 \001(\r\022\023\n\013ConsumeType\030\003 \001(\r\022\022\n\nExtraDa"
    "ta1\030\004 \001(\r\022\022\n\nExtraData2\030\005 \001(\r\"\240\001\n\034CMessa"
    "gePurchaseFuncResponse\022\r\n\005Error\030\001 \001(\005\022\016\n"
    "\006FuncID\030\002 \001(\r\022\021\n\tFuncCount\030\003 \001(\r\022\023\n\013Cons"
    "umeType\030\004 \001(\r\022\021\n\tFuncsCost\030\005 \001(\r\022\022\n\nExtr"
    "aData1\030\006 \001(\r\022\022\n\nExtraData2\030\007 \001(\r*\376\002\n\016IBS"
    "TORE_MSG_ID\022 \n\032ID_C2S_REQUEST_LISTIBITEM"
    "S\020\201\220\001\022!\n\033ID_S2C_RESPONSE_LISTIBITEMS\020\202\220\001"
    "\022#\n\035ID_C2S_REQUEST_PURCHASEIBITEM\020\203\220\001\022$\n"
    "\036ID_S2C_RESPONSE_PURCHASEIBITEM\020\204\220\001\022\036\n\030I"
    "D_S2C_NOTIFY_USERCHARGE\020\205\220\001\022$\n\036ID_S2C_NO"
    "TIFY_IBSTOREPROMOTION\020\206\220\001\022%\n\037ID_C2S_GET_"
    "FUNCCONSUMES_REQUEST\020\207\220\001\022&\n ID_S2C_GET_F"
    "UNCCONSUMES_RESPONSE\020\210\220\001\022\"\n\034ID_C2S_PURCH"
    "ASE_FUNC_REQUEST\020\211\220\001\022#\n\035ID_S2C_PURCHASE_"
    "FUNC_RESPONSE\020\212\220\001*\337\001\n\014IBSTORE_FLAG\022\026\n\022EM"
    "_GOODS_RECOMMEND\020\001\022\032\n\026EM_GOODS_COUNT_LIM"
    "ITED\020\002\022\031\n\025EM_GOODS_TIME_LIMITED\020\003\022\025\n\021EM_"
    "GOODS_DISCOUNT\020\004\022\020\n\014EM_GOODS_HOT\020\005\022\020\n\014EM"
    "_GOODS_NEW\020\006\022\025\n\021EM_GOODS_SELL_OUT\020\007\022\025\n\021E"
    "M_GOODS_INACTIVE\020\010\022\027\n\023EM_GOODS_TIME_COUN"
    "T\020\tB\002H\001", 2927);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ibstore_pb.hxx", &protobuf_RegisterTypes);
  #endif
  PBLocation::default_instance_ = new PBLocation();
  PBIbMoney::default_instance_ = new PBIbMoney();
  PBIbItemOnSale::default_instance_ = new PBIbItemOnSale();
  CMessageListIbItemsRequest::default_instance_ = new CMessageListIbItemsRequest();
  CMessageListIbItemsResponse::default_instance_ = new CMessageListIbItemsResponse();
  CMessagePurchaseIbItemRequest::default_instance_ = new CMessagePurchaseIbItemRequest();
  CMessagePurchaseIbItemResponse::default_instance_ = new CMessagePurchaseIbItemResponse();
  CMessageRoleIbTransNotify::default_instance_ = new CMessageRoleIbTransNotify();
  PBIbSubTab::default_instance_ = new PBIbSubTab();
  PBIbTab::default_instance_ = new PBIbTab();
  PBIbStore::default_instance_ = new PBIbStore();
  CMessageUserChargeNotice::default_instance_ = new CMessageUserChargeNotice();
  PBPromotion::default_instance_ = new PBPromotion();
  CMessageIbItemRemainNotice::default_instance_ = new CMessageIbItemRemainNotice();
  PBConsume::default_instance_ = new PBConsume();
  PBFuncStore::default_instance_ = new PBFuncStore();
  CMessageGetFuncConsumesRequest::default_instance_ = new CMessageGetFuncConsumesRequest();
  CMessageGetFuncConsumesResponse::default_instance_ = new CMessageGetFuncConsumesResponse();
  CMessagePurchaseFuncRequest::default_instance_ = new CMessagePurchaseFuncRequest();
  CMessagePurchaseFuncResponse::default_instance_ = new CMessagePurchaseFuncResponse();
  PBLocation::default_instance_->InitAsDefaultInstance();
  PBIbMoney::default_instance_->InitAsDefaultInstance();
  PBIbItemOnSale::default_instance_->InitAsDefaultInstance();
  CMessageListIbItemsRequest::default_instance_->InitAsDefaultInstance();
  CMessageListIbItemsResponse::default_instance_->InitAsDefaultInstance();
  CMessagePurchaseIbItemRequest::default_instance_->InitAsDefaultInstance();
  CMessagePurchaseIbItemResponse::default_instance_->InitAsDefaultInstance();
  CMessageRoleIbTransNotify::default_instance_->InitAsDefaultInstance();
  PBIbSubTab::default_instance_->InitAsDefaultInstance();
  PBIbTab::default_instance_->InitAsDefaultInstance();
  PBIbStore::default_instance_->InitAsDefaultInstance();
  CMessageUserChargeNotice::default_instance_->InitAsDefaultInstance();
  PBPromotion::default_instance_->InitAsDefaultInstance();
  CMessageIbItemRemainNotice::default_instance_->InitAsDefaultInstance();
  PBConsume::default_instance_->InitAsDefaultInstance();
  PBFuncStore::default_instance_->InitAsDefaultInstance();
  CMessageGetFuncConsumesRequest::default_instance_->InitAsDefaultInstance();
  CMessageGetFuncConsumesResponse::default_instance_->InitAsDefaultInstance();
  CMessagePurchaseFuncRequest::default_instance_->InitAsDefaultInstance();
  CMessagePurchaseFuncResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ibstore_5fpb_2ehxx);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ibstore_5fpb_2ehxx {
  StaticDescriptorInitializer_ibstore_5fpb_2ehxx() {
    protobuf_AddDesc_ibstore_5fpb_2ehxx();
  }
} static_descriptor_initializer_ibstore_5fpb_2ehxx_;

const ::google::protobuf::EnumDescriptor* IBSTORE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IBSTORE_MSG_ID_descriptor_;
}
bool IBSTORE_MSG_ID_IsValid(int value) {
  switch(value) {
    case 18433:
    case 18434:
    case 18435:
    case 18436:
    case 18437:
    case 18438:
    case 18439:
    case 18440:
    case 18441:
    case 18442:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* IBSTORE_FLAG_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IBSTORE_FLAG_descriptor_;
}
bool IBSTORE_FLAG_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int PBLocation::kPageFieldNumber;
const int PBLocation::kRowFieldNumber;
const int PBLocation::kColFieldNumber;
#endif  // !_MSC_VER

PBLocation::PBLocation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBLocation::InitAsDefaultInstance() {}

PBLocation::PBLocation(const PBLocation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBLocation::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0u;
  row_ = 0u;
  col_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBLocation::~PBLocation() {
  SharedDtor();
}

void PBLocation::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBLocation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBLocation_descriptor_;
}

const PBLocation& PBLocation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBLocation* PBLocation::default_instance_ = NULL;

PBLocation* PBLocation::New() const {
  return new PBLocation;
}

void PBLocation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_ = 0u;
    row_ = 0u;
    col_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &page_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_row;
        break;
      }
      
      // optional uint32 row = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_row:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &row_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_col;
        break;
      }
      
      // optional uint32 col = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_col:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &col_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBLocation::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 page = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->page(), output);
  }
  
  // optional uint32 row = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->row(), output);
  }
  
  // optional uint32 col = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->col(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBLocation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 page = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->page(), target);
  }
  
  // optional uint32 row = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->row(), target);
  }
  
  // optional uint32 col = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->col(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBLocation::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 page = 1;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->page());
    }
    
    // optional uint32 row = 2;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->row());
    }
    
    // optional uint32 col = 3;
    if (has_col()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->col());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBLocation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBLocation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBLocation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBLocation::MergeFrom(const PBLocation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_page(from.page());
    }
    if (from._has_bit(1)) {
      set_row(from.row());
    }
    if (from._has_bit(2)) {
      set_col(from.col());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBLocation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocation::CopyFrom(const PBLocation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocation::Swap(PBLocation* other) {
  if (other != this) {
    std::swap(page_, other->page_);
    std::swap(row_, other->row_);
    std::swap(col_, other->col_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBLocation::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBLocation::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBLocation::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBLocation_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int PBIbMoney::kUnitFieldNumber;
const int PBIbMoney::kValueFieldNumber;
#endif  // !_MSC_VER

PBIbMoney::PBIbMoney()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBIbMoney::InitAsDefaultInstance() {}

PBIbMoney::PBIbMoney(const PBIbMoney& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBIbMoney::SharedCtor() {
  _cached_size_ = 0;
  unit_ = 0u;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBIbMoney::~PBIbMoney() {
  SharedDtor();
}

void PBIbMoney::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBIbMoney::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBIbMoney_descriptor_;
}

const PBIbMoney& PBIbMoney::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBIbMoney* PBIbMoney::default_instance_ = NULL;

PBIbMoney* PBIbMoney::New() const {
  return new PBIbMoney;
}

void PBIbMoney::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    unit_ = 0u;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBIbMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 unit = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &unit_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }
      
      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_value:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &value_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBIbMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBIbMoney::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 unit = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->unit(), output);
  }
  
  // optional int32 value = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBIbMoney::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 unit = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->unit(), target);
  }
  
  // optional int32 value = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBIbMoney::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 unit = 1;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->unit());
    }
    
    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBIbMoney::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBIbMoney* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBIbMoney*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBIbMoney::MergeFrom(const PBIbMoney& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_unit(from.unit());
    }
    if (from._has_bit(1)) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBIbMoney::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbMoney::CopyFrom(const PBIbMoney& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbMoney::Swap(PBIbMoney* other) {
  if (other != this) {
    std::swap(unit_, other->unit_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBIbMoney::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBIbMoney::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBIbMoney::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBIbMoney_reflection_;
}

// ===================================================================

const ::std::string PBIbItemOnSale::_default_goodsname_;
const ::std::string PBIbItemOnSale::_default_goodsdesc_;
#ifndef _MSC_VER
const int PBIbItemOnSale::kGoodsIDFieldNumber;
const int PBIbItemOnSale::kItemIDFieldNumber;
const int PBIbItemOnSale::kItemCountFieldNumber;
const int PBIbItemOnSale::kGoodsCountFieldNumber;
const int PBIbItemOnSale::kGoodsPriceFieldNumber;
const int PBIbItemOnSale::kDiscountFieldNumber;
const int PBIbItemOnSale::kExpiryTimeFieldNumber;
const int PBIbItemOnSale::kColdTimeFieldNumber;
const int PBIbItemOnSale::kElapsedTimeFieldNumber;
const int PBIbItemOnSale::kActiveFieldNumber;
const int PBIbItemOnSale::kGoodsNameFieldNumber;
const int PBIbItemOnSale::kGoodsDescFieldNumber;
const int PBIbItemOnSale::kIsPackFieldNumber;
const int PBIbItemOnSale::kFlagFieldNumber;
const int PBIbItemOnSale::kLimitPerCharFieldNumber;
const int PBIbItemOnSale::kLimitTypeFieldNumber;
#endif  // !_MSC_VER

PBIbItemOnSale::PBIbItemOnSale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBIbItemOnSale::InitAsDefaultInstance() {  goodsprice_ = const_cast< ::PBIbMoney*>(&::PBIbMoney::default_instance());
  discount_ = const_cast< ::PBIbMoney*>(&::PBIbMoney::default_instance());
}

PBIbItemOnSale::PBIbItemOnSale(const PBIbItemOnSale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBIbItemOnSale::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0u;
  itemid_ = 0u;
  itemcount_ = 0u;
  goodscount_ = 0;
  goodsprice_ = NULL;
  discount_ = NULL;
  expirytime_ = 0;
  coldtime_ = 0;
  elapsedtime_ = 0;
  active_ = 0u;
  goodsname_ = const_cast< ::std::string*>(&_default_goodsname_);
  goodsdesc_ = const_cast< ::std::string*>(&_default_goodsdesc_);
  ispack_ = 0;
  flag_ = 0;
  limitperchar_ = 0;
  limittype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBIbItemOnSale::~PBIbItemOnSale() {
  SharedDtor();
}

void PBIbItemOnSale::SharedDtor() {
  if (goodsname_ != &_default_goodsname_) {
    delete goodsname_;
  }
  if (goodsdesc_ != &_default_goodsdesc_) {
    delete goodsdesc_;
  }
  if (this != default_instance_) {
    delete goodsprice_;
    delete discount_;
  }
}

const ::google::protobuf::Descriptor* PBIbItemOnSale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBIbItemOnSale_descriptor_;
}

const PBIbItemOnSale& PBIbItemOnSale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBIbItemOnSale* PBIbItemOnSale::default_instance_ = NULL;

PBIbItemOnSale* PBIbItemOnSale::New() const {
  return new PBIbItemOnSale;
}

void PBIbItemOnSale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    goodsid_ = 0u;
    itemid_ = 0u;
    itemcount_ = 0u;
    goodscount_ = 0;
    if (_has_bit(4)) {
      if (goodsprice_ != NULL) goodsprice_->::PBIbMoney::Clear();
    }
    if (_has_bit(5)) {
      if (discount_ != NULL) discount_->::PBIbMoney::Clear();
    }
    expirytime_ = 0;
    coldtime_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    elapsedtime_ = 0;
    active_ = 0u;
    if (_has_bit(10)) {
      if (goodsname_ != &_default_goodsname_) {
        goodsname_->clear();
      }
    }
    if (_has_bit(11)) {
      if (goodsdesc_ != &_default_goodsdesc_) {
        goodsdesc_->clear();
      }
    }
    ispack_ = 0;
    flag_ = 0;
    limitperchar_ = 0;
    limittype_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBIbItemOnSale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 GoodsID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &goodsid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_ItemID;
        break;
      }
      
      // optional uint32 ItemID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_ItemCount;
        break;
      }
      
      // optional uint32 ItemCount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemCount:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemcount_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_GoodsCount;
        break;
      }
      
      // optional int32 GoodsCount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GoodsCount:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &goodscount_));
        _set_bit(3);
        if (input->ExpectTag(42)) goto parse_GoodsPrice;
        break;
      }
      
      // optional .PBIbMoney GoodsPrice = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_GoodsPrice:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_goodsprice()));
        if (input->ExpectTag(50)) goto parse_Discount;
        break;
      }
      
      // optional .PBIbMoney Discount = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Discount:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_discount()));
        if (input->ExpectTag(56)) goto parse_ExpiryTime;
        break;
      }
      
      // optional int32 ExpiryTime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ExpiryTime:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &expirytime_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_ColdTime;
        break;
      }
      
      // optional int32 ColdTime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ColdTime:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &coldtime_));
        _set_bit(7);
        if (input->ExpectTag(72)) goto parse_ElapsedTime;
        break;
      }
      
      // optional int32 ElapsedTime = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ElapsedTime:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &elapsedtime_));
        _set_bit(8);
        if (input->ExpectTag(80)) goto parse_Active;
        break;
      }
      
      // optional uint32 Active = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Active:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &active_));
        _set_bit(9);
        if (input->ExpectTag(90)) goto parse_GoodsName;
        break;
      }
      
      // optional string GoodsName = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_GoodsName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_goodsname()));
        if (input->ExpectTag(98)) goto parse_GoodsDesc;
        break;
      }
      
      // optional string GoodsDesc = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_GoodsDesc:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_goodsdesc()));
        if (input->ExpectTag(104)) goto parse_IsPack;
        break;
      }
      
      // optional int32 IsPack = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IsPack:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &ispack_));
        _set_bit(12);
        if (input->ExpectTag(112)) goto parse_Flag;
        break;
      }
      
      // optional int32 Flag = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Flag:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &flag_));
        _set_bit(13);
        if (input->ExpectTag(120)) goto parse_LimitPerChar;
        break;
      }
      
      // optional int32 LimitPerChar = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_LimitPerChar:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &limitperchar_));
        _set_bit(14);
        if (input->ExpectTag(128)) goto parse_LimitType;
        break;
      }
      
      // optional int32 LimitType = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_LimitType:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &limittype_));
        _set_bit(15);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBIbItemOnSale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBIbItemOnSale::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 GoodsID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->goodsid(), output);
  }
  
  // optional uint32 ItemID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->itemid(), output);
  }
  
  // optional uint32 ItemCount = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->itemcount(), output);
  }
  
  // optional int32 GoodsCount = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(4, this->goodscount(), output);
  }
  
  // optional .PBIbMoney GoodsPrice = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(5, this->goodsprice(), output);
  }
  
  // optional .PBIbMoney Discount = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(6, this->discount(), output);
  }
  
  // optional int32 ExpiryTime = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(7, this->expirytime(), output);
  }
  
  // optional int32 ColdTime = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(8, this->coldtime(), output);
  }
  
  // optional int32 ElapsedTime = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(9, this->elapsedtime(), output);
  }
  
  // optional uint32 Active = 10;
  if (_has_bit(9)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(10, this->active(), output);
  }
  
  // optional string GoodsName = 11;
  if (_has_bit(10)) {
    ::google::protobuf::internal::WireFormat::WriteString(11, this->goodsname(), output);
  }
  
  // optional string GoodsDesc = 12;
  if (_has_bit(11)) {
    ::google::protobuf::internal::WireFormat::WriteString(12, this->goodsdesc(), output);
  }
  
  // optional int32 IsPack = 13;
  if (_has_bit(12)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(13, this->ispack(), output);
  }
  
  // optional int32 Flag = 14;
  if (_has_bit(13)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(14, this->flag(), output);
  }
  
  // optional int32 LimitPerChar = 15;
  if (_has_bit(14)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(15, this->limitperchar(), output);
  }
  
  // optional int32 LimitType = 16;
  if (_has_bit(15)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(16, this->limittype(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBIbItemOnSale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 GoodsID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->goodsid(), target);
  }
  
  // optional uint32 ItemID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->itemid(), target);
  }
  
  // optional uint32 ItemCount = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->itemcount(), target);
  }
  
  // optional int32 GoodsCount = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(4, this->goodscount(), target);
  }
  
  // optional .PBIbMoney GoodsPrice = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(5, this->goodsprice(), target);
  }
  
  // optional .PBIbMoney Discount = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(6, this->discount(), target);
  }
  
  // optional int32 ExpiryTime = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(7, this->expirytime(), target);
  }
  
  // optional int32 ColdTime = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(8, this->coldtime(), target);
  }
  
  // optional int32 ElapsedTime = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(9, this->elapsedtime(), target);
  }
  
  // optional uint32 Active = 10;
  if (_has_bit(9)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(10, this->active(), target);
  }
  
  // optional string GoodsName = 11;
  if (_has_bit(10)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(11, this->goodsname(), target);
  }
  
  // optional string GoodsDesc = 12;
  if (_has_bit(11)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(12, this->goodsdesc(), target);
  }
  
  // optional int32 IsPack = 13;
  if (_has_bit(12)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(13, this->ispack(), target);
  }
  
  // optional int32 Flag = 14;
  if (_has_bit(13)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(14, this->flag(), target);
  }
  
  // optional int32 LimitPerChar = 15;
  if (_has_bit(14)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(15, this->limitperchar(), target);
  }
  
  // optional int32 LimitType = 16;
  if (_has_bit(15)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(16, this->limittype(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBIbItemOnSale::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodsID = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->goodsid());
    }
    
    // optional uint32 ItemID = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemid());
    }
    
    // optional uint32 ItemCount = 3;
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemcount());
    }
    
    // optional int32 GoodsCount = 4;
    if (has_goodscount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->goodscount());
    }
    
    // optional .PBIbMoney GoodsPrice = 5;
    if (has_goodsprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->goodsprice());
    }
    
    // optional .PBIbMoney Discount = 6;
    if (has_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->discount());
    }
    
    // optional int32 ExpiryTime = 7;
    if (has_expirytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->expirytime());
    }
    
    // optional int32 ColdTime = 8;
    if (has_coldtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->coldtime());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 ElapsedTime = 9;
    if (has_elapsedtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->elapsedtime());
    }
    
    // optional uint32 Active = 10;
    if (has_active()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->active());
    }
    
    // optional string GoodsName = 11;
    if (has_goodsname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->goodsname());
    }
    
    // optional string GoodsDesc = 12;
    if (has_goodsdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->goodsdesc());
    }
    
    // optional int32 IsPack = 13;
    if (has_ispack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->ispack());
    }
    
    // optional int32 Flag = 14;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->flag());
    }
    
    // optional int32 LimitPerChar = 15;
    if (has_limitperchar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->limitperchar());
    }
    
    // optional int32 LimitType = 16;
    if (has_limittype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->limittype());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBIbItemOnSale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBIbItemOnSale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBIbItemOnSale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBIbItemOnSale::MergeFrom(const PBIbItemOnSale& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_goodsid(from.goodsid());
    }
    if (from._has_bit(1)) {
      set_itemid(from.itemid());
    }
    if (from._has_bit(2)) {
      set_itemcount(from.itemcount());
    }
    if (from._has_bit(3)) {
      set_goodscount(from.goodscount());
    }
    if (from._has_bit(4)) {
      mutable_goodsprice()->::PBIbMoney::MergeFrom(from.goodsprice());
    }
    if (from._has_bit(5)) {
      mutable_discount()->::PBIbMoney::MergeFrom(from.discount());
    }
    if (from._has_bit(6)) {
      set_expirytime(from.expirytime());
    }
    if (from._has_bit(7)) {
      set_coldtime(from.coldtime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      set_elapsedtime(from.elapsedtime());
    }
    if (from._has_bit(9)) {
      set_active(from.active());
    }
    if (from._has_bit(10)) {
      set_goodsname(from.goodsname());
    }
    if (from._has_bit(11)) {
      set_goodsdesc(from.goodsdesc());
    }
    if (from._has_bit(12)) {
      set_ispack(from.ispack());
    }
    if (from._has_bit(13)) {
      set_flag(from.flag());
    }
    if (from._has_bit(14)) {
      set_limitperchar(from.limitperchar());
    }
    if (from._has_bit(15)) {
      set_limittype(from.limittype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBIbItemOnSale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbItemOnSale::CopyFrom(const PBIbItemOnSale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbItemOnSale::Swap(PBIbItemOnSale* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(goodscount_, other->goodscount_);
    std::swap(goodsprice_, other->goodsprice_);
    std::swap(discount_, other->discount_);
    std::swap(expirytime_, other->expirytime_);
    std::swap(coldtime_, other->coldtime_);
    std::swap(elapsedtime_, other->elapsedtime_);
    std::swap(active_, other->active_);
    std::swap(goodsname_, other->goodsname_);
    std::swap(goodsdesc_, other->goodsdesc_);
    std::swap(ispack_, other->ispack_);
    std::swap(flag_, other->flag_);
    std::swap(limitperchar_, other->limitperchar_);
    std::swap(limittype_, other->limittype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBIbItemOnSale::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBIbItemOnSale::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBIbItemOnSale::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBIbItemOnSale_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageListIbItemsRequest::kVersionFieldNumber;
const int CMessageListIbItemsRequest::kIsOpenRMBShopUIFieldNumber;
#endif  // !_MSC_VER

CMessageListIbItemsRequest::CMessageListIbItemsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageListIbItemsRequest::InitAsDefaultInstance() {}

CMessageListIbItemsRequest::CMessageListIbItemsRequest(const CMessageListIbItemsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageListIbItemsRequest::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  isopenrmbshopui_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageListIbItemsRequest::~CMessageListIbItemsRequest() {
  SharedDtor();
}

void CMessageListIbItemsRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageListIbItemsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageListIbItemsRequest_descriptor_;
}

const CMessageListIbItemsRequest& CMessageListIbItemsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessageListIbItemsRequest* CMessageListIbItemsRequest::default_instance_ = NULL;

CMessageListIbItemsRequest* CMessageListIbItemsRequest::New() const {
  return new CMessageListIbItemsRequest;
}

void CMessageListIbItemsRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    version_ = 0u;
    isopenrmbshopui_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageListIbItemsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 Version = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &version_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_IsOpenRMBShopUI;
        break;
      }
      
      // optional uint32 IsOpenRMBShopUI = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IsOpenRMBShopUI:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &isopenrmbshopui_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageListIbItemsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageListIbItemsRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 Version = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->version(), output);
  }
  
  // optional uint32 IsOpenRMBShopUI = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->isopenrmbshopui(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageListIbItemsRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 Version = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->version(), target);
  }
  
  // optional uint32 IsOpenRMBShopUI = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->isopenrmbshopui(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageListIbItemsRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 Version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->version());
    }
    
    // optional uint32 IsOpenRMBShopUI = 2;
    if (has_isopenrmbshopui()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->isopenrmbshopui());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageListIbItemsRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageListIbItemsRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageListIbItemsRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageListIbItemsRequest::MergeFrom(const CMessageListIbItemsRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_version(from.version());
    }
    if (from._has_bit(1)) {
      set_isopenrmbshopui(from.isopenrmbshopui());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageListIbItemsRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageListIbItemsRequest::CopyFrom(const CMessageListIbItemsRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageListIbItemsRequest::Swap(CMessageListIbItemsRequest* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(isopenrmbshopui_, other->isopenrmbshopui_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageListIbItemsRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageListIbItemsRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageListIbItemsRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageListIbItemsRequest_reflection_;
}

// ===================================================================

const ::std::string CMessageListIbItemsResponse::_default_bulletin_;
#ifndef _MSC_VER
const int CMessageListIbItemsResponse::kErrorFieldNumber;
const int CMessageListIbItemsResponse::kVersionFieldNumber;
const int CMessageListIbItemsResponse::kRemainMoneysFieldNumber;
const int CMessageListIbItemsResponse::kGoodsFieldNumber;
const int CMessageListIbItemsResponse::kIbStoreFieldNumber;
const int CMessageListIbItemsResponse::kBulletinFieldNumber;
const int CMessageListIbItemsResponse::kFocusTabFieldNumber;
const int CMessageListIbItemsResponse::kIsOpenRMBShopUIFieldNumber;
#endif  // !_MSC_VER

CMessageListIbItemsResponse::CMessageListIbItemsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageListIbItemsResponse::InitAsDefaultInstance() {}

CMessageListIbItemsResponse::CMessageListIbItemsResponse(const CMessageListIbItemsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageListIbItemsResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0;
  version_ = 0u;
  bulletin_ = const_cast< ::std::string*>(&_default_bulletin_);
  isopenrmbshopui_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageListIbItemsResponse::~CMessageListIbItemsResponse() {
  SharedDtor();
}

void CMessageListIbItemsResponse::SharedDtor() {
  if (bulletin_ != &_default_bulletin_) {
    delete bulletin_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageListIbItemsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageListIbItemsResponse_descriptor_;
}

const CMessageListIbItemsResponse& CMessageListIbItemsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessageListIbItemsResponse* CMessageListIbItemsResponse::default_instance_ = NULL;

CMessageListIbItemsResponse* CMessageListIbItemsResponse::New() const {
  return new CMessageListIbItemsResponse;
}

void CMessageListIbItemsResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0;
    version_ = 0u;
    if (_has_bit(5)) {
      if (bulletin_ != &_default_bulletin_) {
        bulletin_->clear();
      }
    }
    isopenrmbshopui_ = 0u;
  }
  remainmoneys_.Clear();
  goods_.Clear();
  ibstore_.Clear();
  focustab_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageListIbItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional int32 Error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &error_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_Version;
        break;
      }
      
      // optional uint32 Version = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Version:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &version_));
        _set_bit(1);
        if (input->ExpectTag(26)) goto parse_RemainMoneys;
        break;
      }
      
      // repeated .PBIbMoney RemainMoneys = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_RemainMoneys:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_remainmoneys()));
        if (input->ExpectTag(26)) goto parse_RemainMoneys;
        if (input->ExpectTag(34)) goto parse_Goods;
        break;
      }
      
      // repeated .PBIbItemOnSale Goods = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Goods:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_goods()));
        if (input->ExpectTag(34)) goto parse_Goods;
        if (input->ExpectTag(42)) goto parse_IbStore;
        break;
      }
      
      // repeated .PBIbStore IbStore = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_IbStore:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_ibstore()));
        if (input->ExpectTag(42)) goto parse_IbStore;
        if (input->ExpectTag(50)) goto parse_Bulletin;
        break;
      }
      
      // optional string Bulletin = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Bulletin:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_bulletin()));
        if (input->ExpectTag(58)) goto parse_FocusTab;
        break;
      }
      
      // repeated .PBIbSubTab FocusTab = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_FocusTab:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_focustab()));
        if (input->ExpectTag(58)) goto parse_FocusTab;
        if (input->ExpectTag(64)) goto parse_IsOpenRMBShopUI;
        break;
      }
      
      // optional uint32 IsOpenRMBShopUI = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_IsOpenRMBShopUI:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &isopenrmbshopui_));
        _set_bit(7);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageListIbItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageListIbItemsResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 Error = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(1, this->error(), output);
  }
  
  // optional uint32 Version = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->version(), output);
  }
  
  // repeated .PBIbMoney RemainMoneys = 3;
  for (int i = 0; i < this->remainmoneys_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(3, this->remainmoneys(i), output);
  }
  
  // repeated .PBIbItemOnSale Goods = 4;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(4, this->goods(i), output);
  }
  
  // repeated .PBIbStore IbStore = 5;
  for (int i = 0; i < this->ibstore_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(5, this->ibstore(i), output);
  }
  
  // optional string Bulletin = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteString(6, this->bulletin(), output);
  }
  
  // repeated .PBIbSubTab FocusTab = 7;
  for (int i = 0; i < this->focustab_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(7, this->focustab(i), output);
  }
  
  // optional uint32 IsOpenRMBShopUI = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(8, this->isopenrmbshopui(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageListIbItemsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Error = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(1, this->error(), target);
  }
  
  // optional uint32 Version = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->version(), target);
  }
  
  // repeated .PBIbMoney RemainMoneys = 3;
  for (int i = 0; i < this->remainmoneys_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(3, this->remainmoneys(i), target);
  }
  
  // repeated .PBIbItemOnSale Goods = 4;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(4, this->goods(i), target);
  }
  
  // repeated .PBIbStore IbStore = 5;
  for (int i = 0; i < this->ibstore_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(5, this->ibstore(i), target);
  }
  
  // optional string Bulletin = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(6, this->bulletin(), target);
  }
  
  // repeated .PBIbSubTab FocusTab = 7;
  for (int i = 0; i < this->focustab_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(7, this->focustab(i), target);
  }
  
  // optional uint32 IsOpenRMBShopUI = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(8, this->isopenrmbshopui(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageListIbItemsResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->error());
    }
    
    // optional uint32 Version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->version());
    }
    
    // optional string Bulletin = 6;
    if (has_bulletin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->bulletin());
    }
    
    // optional uint32 IsOpenRMBShopUI = 8;
    if (has_isopenrmbshopui()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->isopenrmbshopui());
    }
    
  }
  // repeated .PBIbMoney RemainMoneys = 3;
  total_size += 1 * this->remainmoneys_size();
  for (int i = 0; i < this->remainmoneys_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->remainmoneys(i));
  }
  
  // repeated .PBIbItemOnSale Goods = 4;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->goods(i));
  }
  
  // repeated .PBIbStore IbStore = 5;
  total_size += 1 * this->ibstore_size();
  for (int i = 0; i < this->ibstore_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->ibstore(i));
  }
  
  // repeated .PBIbSubTab FocusTab = 7;
  total_size += 1 * this->focustab_size();
  for (int i = 0; i < this->focustab_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->focustab(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageListIbItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageListIbItemsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageListIbItemsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageListIbItemsResponse::MergeFrom(const CMessageListIbItemsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  remainmoneys_.MergeFrom(from.remainmoneys_);
  goods_.MergeFrom(from.goods_);
  ibstore_.MergeFrom(from.ibstore_);
  focustab_.MergeFrom(from.focustab_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error(from.error());
    }
    if (from._has_bit(1)) {
      set_version(from.version());
    }
    if (from._has_bit(5)) {
      set_bulletin(from.bulletin());
    }
    if (from._has_bit(7)) {
      set_isopenrmbshopui(from.isopenrmbshopui());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageListIbItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageListIbItemsResponse::CopyFrom(const CMessageListIbItemsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageListIbItemsResponse::Swap(CMessageListIbItemsResponse* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(version_, other->version_);
    remainmoneys_.Swap(&other->remainmoneys_);
    goods_.Swap(&other->goods_);
    ibstore_.Swap(&other->ibstore_);
    std::swap(bulletin_, other->bulletin_);
    focustab_.Swap(&other->focustab_);
    std::swap(isopenrmbshopui_, other->isopenrmbshopui_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageListIbItemsResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageListIbItemsResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageListIbItemsResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageListIbItemsResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePurchaseIbItemRequest::kGoodsIDFieldNumber;
const int CMessagePurchaseIbItemRequest::kGoodsCountFieldNumber;
#endif  // !_MSC_VER

CMessagePurchaseIbItemRequest::CMessagePurchaseIbItemRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePurchaseIbItemRequest::InitAsDefaultInstance() {}

CMessagePurchaseIbItemRequest::CMessagePurchaseIbItemRequest(const CMessagePurchaseIbItemRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePurchaseIbItemRequest::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0u;
  goodscount_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePurchaseIbItemRequest::~CMessagePurchaseIbItemRequest() {
  SharedDtor();
}

void CMessagePurchaseIbItemRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePurchaseIbItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePurchaseIbItemRequest_descriptor_;
}

const CMessagePurchaseIbItemRequest& CMessagePurchaseIbItemRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessagePurchaseIbItemRequest* CMessagePurchaseIbItemRequest::default_instance_ = NULL;

CMessagePurchaseIbItemRequest* CMessagePurchaseIbItemRequest::New() const {
  return new CMessagePurchaseIbItemRequest;
}

void CMessagePurchaseIbItemRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    goodsid_ = 0u;
    goodscount_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePurchaseIbItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 GoodsID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &goodsid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_GoodsCount;
        break;
      }
      
      // optional uint32 GoodsCount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GoodsCount:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &goodscount_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePurchaseIbItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePurchaseIbItemRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 GoodsID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->goodsid(), output);
  }
  
  // optional uint32 GoodsCount = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->goodscount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePurchaseIbItemRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 GoodsID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->goodsid(), target);
  }
  
  // optional uint32 GoodsCount = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->goodscount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePurchaseIbItemRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodsID = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->goodsid());
    }
    
    // optional uint32 GoodsCount = 2;
    if (has_goodscount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->goodscount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePurchaseIbItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePurchaseIbItemRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePurchaseIbItemRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePurchaseIbItemRequest::MergeFrom(const CMessagePurchaseIbItemRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_goodsid(from.goodsid());
    }
    if (from._has_bit(1)) {
      set_goodscount(from.goodscount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePurchaseIbItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePurchaseIbItemRequest::CopyFrom(const CMessagePurchaseIbItemRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePurchaseIbItemRequest::Swap(CMessagePurchaseIbItemRequest* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(goodscount_, other->goodscount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePurchaseIbItemRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePurchaseIbItemRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePurchaseIbItemRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePurchaseIbItemRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePurchaseIbItemResponse::kErrorFieldNumber;
const int CMessagePurchaseIbItemResponse::kRoleIDFieldNumber;
const int CMessagePurchaseIbItemResponse::kTransIDFieldNumber;
const int CMessagePurchaseIbItemResponse::kGoodsIDFieldNumber;
const int CMessagePurchaseIbItemResponse::kGoodsCountFieldNumber;
const int CMessagePurchaseIbItemResponse::kItemIDFieldNumber;
const int CMessagePurchaseIbItemResponse::kItemCountFieldNumber;
const int CMessagePurchaseIbItemResponse::kGoodsCostFieldNumber;
const int CMessagePurchaseIbItemResponse::kRemainedFieldNumber;
#endif  // !_MSC_VER

CMessagePurchaseIbItemResponse::CMessagePurchaseIbItemResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePurchaseIbItemResponse::InitAsDefaultInstance() {  goodscost_ = const_cast< ::PBIbMoney*>(&::PBIbMoney::default_instance());
  remained_ = const_cast< ::PBIbMoney*>(&::PBIbMoney::default_instance());
}

CMessagePurchaseIbItemResponse::CMessagePurchaseIbItemResponse(const CMessagePurchaseIbItemResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePurchaseIbItemResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0;
  roleid_ = 0u;
  transid_ = 0;
  goodsid_ = 0u;
  goodscount_ = 0u;
  itemid_ = 0u;
  itemcount_ = 0u;
  goodscost_ = NULL;
  remained_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePurchaseIbItemResponse::~CMessagePurchaseIbItemResponse() {
  SharedDtor();
}

void CMessagePurchaseIbItemResponse::SharedDtor() {
  if (this != default_instance_) {
    delete goodscost_;
    delete remained_;
  }
}

const ::google::protobuf::Descriptor* CMessagePurchaseIbItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePurchaseIbItemResponse_descriptor_;
}

const CMessagePurchaseIbItemResponse& CMessagePurchaseIbItemResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessagePurchaseIbItemResponse* CMessagePurchaseIbItemResponse::default_instance_ = NULL;

CMessagePurchaseIbItemResponse* CMessagePurchaseIbItemResponse::New() const {
  return new CMessagePurchaseIbItemResponse;
}

void CMessagePurchaseIbItemResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0;
    roleid_ = 0u;
    transid_ = 0;
    goodsid_ = 0u;
    goodscount_ = 0u;
    itemid_ = 0u;
    itemcount_ = 0u;
    if (_has_bit(7)) {
      if (goodscost_ != NULL) goodscost_->::PBIbMoney::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (_has_bit(8)) {
      if (remained_ != NULL) remained_->::PBIbMoney::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePurchaseIbItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional int32 Error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &error_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }
      
      // optional uint32 RoleID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_RoleID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &roleid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_TransID;
        break;
      }
      
      // optional int32 TransID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_TransID:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &transid_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_GoodsID;
        break;
      }
      
      // optional uint32 GoodsID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GoodsID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &goodsid_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_GoodsCount;
        break;
      }
      
      // optional uint32 GoodsCount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GoodsCount:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &goodscount_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_ItemID;
        break;
      }
      
      // optional uint32 ItemID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemid_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_ItemCount;
        break;
      }
      
      // optional uint32 ItemCount = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ItemCount:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &itemcount_));
        _set_bit(6);
        if (input->ExpectTag(66)) goto parse_GoodsCost;
        break;
      }
      
      // optional .PBIbMoney GoodsCost = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_GoodsCost:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_goodscost()));
        if (input->ExpectTag(74)) goto parse_Remained;
        break;
      }
      
      // optional .PBIbMoney Remained = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Remained:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_remained()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePurchaseIbItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePurchaseIbItemResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 Error = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(1, this->error(), output);
  }
  
  // optional uint32 RoleID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->roleid(), output);
  }
  
  // optional int32 TransID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(3, this->transid(), output);
  }
  
  // optional uint32 GoodsID = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->goodsid(), output);
  }
  
  // optional uint32 GoodsCount = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->goodscount(), output);
  }
  
  // optional uint32 ItemID = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->itemid(), output);
  }
  
  // optional uint32 ItemCount = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->itemcount(), output);
  }
  
  // optional .PBIbMoney GoodsCost = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(8, this->goodscost(), output);
  }
  
  // optional .PBIbMoney Remained = 9;
  if (_has_bit(8)) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(9, this->remained(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePurchaseIbItemResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Error = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(1, this->error(), target);
  }
  
  // optional uint32 RoleID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->roleid(), target);
  }
  
  // optional int32 TransID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(3, this->transid(), target);
  }
  
  // optional uint32 GoodsID = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->goodsid(), target);
  }
  
  // optional uint32 GoodsCount = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->goodscount(), target);
  }
  
  // optional uint32 ItemID = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->itemid(), target);
  }
  
  // optional uint32 ItemCount = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->itemcount(), target);
  }
  
  // optional .PBIbMoney GoodsCost = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(8, this->goodscost(), target);
  }
  
  // optional .PBIbMoney Remained = 9;
  if (_has_bit(8)) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(9, this->remained(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePurchaseIbItemResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->error());
    }
    
    // optional uint32 RoleID = 2;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->roleid());
    }
    
    // optional int32 TransID = 3;
    if (has_transid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->transid());
    }
    
    // optional uint32 GoodsID = 4;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->goodsid());
    }
    
    // optional uint32 GoodsCount = 5;
    if (has_goodscount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->goodscount());
    }
    
    // optional uint32 ItemID = 6;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemid());
    }
    
    // optional uint32 ItemCount = 7;
    if (has_itemcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->itemcount());
    }
    
    // optional .PBIbMoney GoodsCost = 8;
    if (has_goodscost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->goodscost());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .PBIbMoney Remained = 9;
    if (has_remained()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->remained());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePurchaseIbItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePurchaseIbItemResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePurchaseIbItemResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePurchaseIbItemResponse::MergeFrom(const CMessagePurchaseIbItemResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error(from.error());
    }
    if (from._has_bit(1)) {
      set_roleid(from.roleid());
    }
    if (from._has_bit(2)) {
      set_transid(from.transid());
    }
    if (from._has_bit(3)) {
      set_goodsid(from.goodsid());
    }
    if (from._has_bit(4)) {
      set_goodscount(from.goodscount());
    }
    if (from._has_bit(5)) {
      set_itemid(from.itemid());
    }
    if (from._has_bit(6)) {
      set_itemcount(from.itemcount());
    }
    if (from._has_bit(7)) {
      mutable_goodscost()->::PBIbMoney::MergeFrom(from.goodscost());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from._has_bit(8)) {
      mutable_remained()->::PBIbMoney::MergeFrom(from.remained());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePurchaseIbItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePurchaseIbItemResponse::CopyFrom(const CMessagePurchaseIbItemResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePurchaseIbItemResponse::Swap(CMessagePurchaseIbItemResponse* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(roleid_, other->roleid_);
    std::swap(transid_, other->transid_);
    std::swap(goodsid_, other->goodsid_);
    std::swap(goodscount_, other->goodscount_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemcount_, other->itemcount_);
    std::swap(goodscost_, other->goodscost_);
    std::swap(remained_, other->remained_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePurchaseIbItemResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePurchaseIbItemResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePurchaseIbItemResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePurchaseIbItemResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageRoleIbTransNotify::kTransIDFieldNumber;
const int CMessageRoleIbTransNotify::kSuccessfulFieldNumber;
#endif  // !_MSC_VER

CMessageRoleIbTransNotify::CMessageRoleIbTransNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageRoleIbTransNotify::InitAsDefaultInstance() {}

CMessageRoleIbTransNotify::CMessageRoleIbTransNotify(const CMessageRoleIbTransNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageRoleIbTransNotify::SharedCtor() {
  _cached_size_ = 0;
  transid_ = 0;
  successful_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageRoleIbTransNotify::~CMessageRoleIbTransNotify() {
  SharedDtor();
}

void CMessageRoleIbTransNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageRoleIbTransNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageRoleIbTransNotify_descriptor_;
}

const CMessageRoleIbTransNotify& CMessageRoleIbTransNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessageRoleIbTransNotify* CMessageRoleIbTransNotify::default_instance_ = NULL;

CMessageRoleIbTransNotify* CMessageRoleIbTransNotify::New() const {
  return new CMessageRoleIbTransNotify;
}

void CMessageRoleIbTransNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    transid_ = 0;
    successful_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageRoleIbTransNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional int32 TransID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &transid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_Successful;
        break;
      }
      
      // optional int32 Successful = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Successful:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &successful_));
        _set_bit(1);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageRoleIbTransNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageRoleIbTransNotify::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 TransID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(1, this->transid(), output);
  }
  
  // optional int32 Successful = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(2, this->successful(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageRoleIbTransNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 TransID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(1, this->transid(), target);
  }
  
  // optional int32 Successful = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(2, this->successful(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageRoleIbTransNotify::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 TransID = 1;
    if (has_transid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->transid());
    }
    
    // optional int32 Successful = 2;
    if (has_successful()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->successful());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageRoleIbTransNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageRoleIbTransNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageRoleIbTransNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageRoleIbTransNotify::MergeFrom(const CMessageRoleIbTransNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_transid(from.transid());
    }
    if (from._has_bit(1)) {
      set_successful(from.successful());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageRoleIbTransNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageRoleIbTransNotify::CopyFrom(const CMessageRoleIbTransNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageRoleIbTransNotify::Swap(CMessageRoleIbTransNotify* other) {
  if (other != this) {
    std::swap(transid_, other->transid_);
    std::swap(successful_, other->successful_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageRoleIbTransNotify::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageRoleIbTransNotify::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageRoleIbTransNotify::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageRoleIbTransNotify_reflection_;
}

// ===================================================================

const ::std::string PBIbSubTab::_default_subtabname_;
#ifndef _MSC_VER
const int PBIbSubTab::kSubTabIDFieldNumber;
const int PBIbSubTab::kSubTabNameFieldNumber;
const int PBIbSubTab::kGoodsIDFieldNumber;
#endif  // !_MSC_VER

PBIbSubTab::PBIbSubTab()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBIbSubTab::InitAsDefaultInstance() {}

PBIbSubTab::PBIbSubTab(const PBIbSubTab& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBIbSubTab::SharedCtor() {
  _cached_size_ = 0;
  subtabid_ = 0u;
  subtabname_ = const_cast< ::std::string*>(&_default_subtabname_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBIbSubTab::~PBIbSubTab() {
  SharedDtor();
}

void PBIbSubTab::SharedDtor() {
  if (subtabname_ != &_default_subtabname_) {
    delete subtabname_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBIbSubTab::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBIbSubTab_descriptor_;
}

const PBIbSubTab& PBIbSubTab::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBIbSubTab* PBIbSubTab::default_instance_ = NULL;

PBIbSubTab* PBIbSubTab::New() const {
  return new PBIbSubTab;
}

void PBIbSubTab::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    subtabid_ = 0u;
    if (_has_bit(1)) {
      if (subtabname_ != &_default_subtabname_) {
        subtabname_->clear();
      }
    }
  }
  goodsid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBIbSubTab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 SubTabID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &subtabid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_SubTabName;
        break;
      }
      
      // optional string SubTabName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_SubTabName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_subtabname()));
        if (input->ExpectTag(24)) goto parse_GoodsID;
        break;
      }
      
      // repeated uint32 GoodsID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_GoodsID:
        ::google::protobuf::uint32 value;
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(input, &value));
        add_goodsid(value);
        if (input->ExpectTag(24)) goto parse_GoodsID;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBIbSubTab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBIbSubTab::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 SubTabID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->subtabid(), output);
  }
  
  // optional string SubTabName = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteString(2, this->subtabname(), output);
  }
  
  // repeated uint32 GoodsID = 3;
  for (int i = 0; i < this->goodsid_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->goodsid(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBIbSubTab::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 SubTabID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->subtabid(), target);
  }
  
  // optional string SubTabName = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(2, this->subtabname(), target);
  }
  
  // repeated uint32 GoodsID = 3;
  for (int i = 0; i < this->goodsid_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->goodsid(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBIbSubTab::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 SubTabID = 1;
    if (has_subtabid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->subtabid());
    }
    
    // optional string SubTabName = 2;
    if (has_subtabname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->subtabname());
    }
    
  }
  // repeated uint32 GoodsID = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->goodsid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormat::UInt32Size(
        this->goodsid(i));
    }
    total_size += 1 * this->goodsid_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBIbSubTab::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBIbSubTab* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBIbSubTab*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBIbSubTab::MergeFrom(const PBIbSubTab& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsid_.MergeFrom(from.goodsid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_subtabid(from.subtabid());
    }
    if (from._has_bit(1)) {
      set_subtabname(from.subtabname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBIbSubTab::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbSubTab::CopyFrom(const PBIbSubTab& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbSubTab::Swap(PBIbSubTab* other) {
  if (other != this) {
    std::swap(subtabid_, other->subtabid_);
    std::swap(subtabname_, other->subtabname_);
    goodsid_.Swap(&other->goodsid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBIbSubTab::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBIbSubTab::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBIbSubTab::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBIbSubTab_reflection_;
}

// ===================================================================

const ::std::string PBIbTab::_default_tabname_;
#ifndef _MSC_VER
const int PBIbTab::kTabIDFieldNumber;
const int PBIbTab::kTabNameFieldNumber;
const int PBIbTab::kSubTabFieldNumber;
#endif  // !_MSC_VER

PBIbTab::PBIbTab()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBIbTab::InitAsDefaultInstance() {}

PBIbTab::PBIbTab(const PBIbTab& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBIbTab::SharedCtor() {
  _cached_size_ = 0;
  tabid_ = 0u;
  tabname_ = const_cast< ::std::string*>(&_default_tabname_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBIbTab::~PBIbTab() {
  SharedDtor();
}

void PBIbTab::SharedDtor() {
  if (tabname_ != &_default_tabname_) {
    delete tabname_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBIbTab::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBIbTab_descriptor_;
}

const PBIbTab& PBIbTab::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBIbTab* PBIbTab::default_instance_ = NULL;

PBIbTab* PBIbTab::New() const {
  return new PBIbTab;
}

void PBIbTab::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tabid_ = 0u;
    if (_has_bit(1)) {
      if (tabname_ != &_default_tabname_) {
        tabname_->clear();
      }
    }
  }
  subtab_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBIbTab::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 TabID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &tabid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_TabName;
        break;
      }
      
      // optional string TabName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_TabName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_tabname()));
        if (input->ExpectTag(26)) goto parse_SubTab;
        break;
      }
      
      // repeated .PBIbSubTab SubTab = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_SubTab:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_subtab()));
        if (input->ExpectTag(26)) goto parse_SubTab;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBIbTab::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBIbTab::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 TabID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->tabid(), output);
  }
  
  // optional string TabName = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteString(2, this->tabname(), output);
  }
  
  // repeated .PBIbSubTab SubTab = 3;
  for (int i = 0; i < this->subtab_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(3, this->subtab(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBIbTab::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 TabID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->tabid(), target);
  }
  
  // optional string TabName = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(2, this->tabname(), target);
  }
  
  // repeated .PBIbSubTab SubTab = 3;
  for (int i = 0; i < this->subtab_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(3, this->subtab(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBIbTab::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 TabID = 1;
    if (has_tabid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->tabid());
    }
    
    // optional string TabName = 2;
    if (has_tabname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->tabname());
    }
    
  }
  // repeated .PBIbSubTab SubTab = 3;
  total_size += 1 * this->subtab_size();
  for (int i = 0; i < this->subtab_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->subtab(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBIbTab::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBIbTab* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBIbTab*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBIbTab::MergeFrom(const PBIbTab& from) {
  GOOGLE_CHECK_NE(&from, this);
  subtab_.MergeFrom(from.subtab_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_tabid(from.tabid());
    }
    if (from._has_bit(1)) {
      set_tabname(from.tabname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBIbTab::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbTab::CopyFrom(const PBIbTab& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbTab::Swap(PBIbTab* other) {
  if (other != this) {
    std::swap(tabid_, other->tabid_);
    std::swap(tabname_, other->tabname_);
    subtab_.Swap(&other->subtab_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBIbTab::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBIbTab::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBIbTab::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBIbTab_reflection_;
}

// ===================================================================

const ::std::string PBIbStore::_default_pagename_;
#ifndef _MSC_VER
const int PBIbStore::kPageIDFieldNumber;
const int PBIbStore::kPageNameFieldNumber;
const int PBIbStore::kTabFieldNumber;
#endif  // !_MSC_VER

PBIbStore::PBIbStore()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBIbStore::InitAsDefaultInstance() {}

PBIbStore::PBIbStore(const PBIbStore& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBIbStore::SharedCtor() {
  _cached_size_ = 0;
  pageid_ = 0u;
  pagename_ = const_cast< ::std::string*>(&_default_pagename_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBIbStore::~PBIbStore() {
  SharedDtor();
}

void PBIbStore::SharedDtor() {
  if (pagename_ != &_default_pagename_) {
    delete pagename_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBIbStore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBIbStore_descriptor_;
}

const PBIbStore& PBIbStore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBIbStore* PBIbStore::default_instance_ = NULL;

PBIbStore* PBIbStore::New() const {
  return new PBIbStore;
}

void PBIbStore::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pageid_ = 0u;
    if (_has_bit(1)) {
      if (pagename_ != &_default_pagename_) {
        pagename_->clear();
      }
    }
  }
  tab_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBIbStore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 PageID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &pageid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_PageName;
        break;
      }
      
      // optional string PageName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_PageName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_pagename()));
        if (input->ExpectTag(26)) goto parse_Tab;
        break;
      }
      
      // repeated .PBIbTab Tab = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Tab:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_tab()));
        if (input->ExpectTag(26)) goto parse_Tab;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBIbStore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBIbStore::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 PageID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->pageid(), output);
  }
  
  // optional string PageName = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteString(2, this->pagename(), output);
  }
  
  // repeated .PBIbTab Tab = 3;
  for (int i = 0; i < this->tab_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(3, this->tab(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBIbStore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 PageID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->pageid(), target);
  }
  
  // optional string PageName = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(2, this->pagename(), target);
  }
  
  // repeated .PBIbTab Tab = 3;
  for (int i = 0; i < this->tab_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(3, this->tab(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBIbStore::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 PageID = 1;
    if (has_pageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->pageid());
    }
    
    // optional string PageName = 2;
    if (has_pagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->pagename());
    }
    
  }
  // repeated .PBIbTab Tab = 3;
  total_size += 1 * this->tab_size();
  for (int i = 0; i < this->tab_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->tab(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBIbStore::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBIbStore* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBIbStore*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBIbStore::MergeFrom(const PBIbStore& from) {
  GOOGLE_CHECK_NE(&from, this);
  tab_.MergeFrom(from.tab_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_pageid(from.pageid());
    }
    if (from._has_bit(1)) {
      set_pagename(from.pagename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBIbStore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbStore::CopyFrom(const PBIbStore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBIbStore::Swap(PBIbStore* other) {
  if (other != this) {
    std::swap(pageid_, other->pageid_);
    std::swap(pagename_, other->pagename_);
    tab_.Swap(&other->tab_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBIbStore::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBIbStore::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBIbStore::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBIbStore_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageUserChargeNotice::kDetailIDFieldNumber;
const int CMessageUserChargeNotice::kUserIDFieldNumber;
const int CMessageUserChargeNotice::kSubjectIDFieldNumber;
const int CMessageUserChargeNotice::kAmountFieldNumber;
#endif  // !_MSC_VER

CMessageUserChargeNotice::CMessageUserChargeNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageUserChargeNotice::InitAsDefaultInstance() {}

CMessageUserChargeNotice::CMessageUserChargeNotice(const CMessageUserChargeNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageUserChargeNotice::SharedCtor() {
  _cached_size_ = 0;
  detailid_ = GOOGLE_LONGLONG(0);
  userid_ = 0;
  subjectid_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageUserChargeNotice::~CMessageUserChargeNotice() {
  SharedDtor();
}

void CMessageUserChargeNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageUserChargeNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageUserChargeNotice_descriptor_;
}

const CMessageUserChargeNotice& CMessageUserChargeNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessageUserChargeNotice* CMessageUserChargeNotice::default_instance_ = NULL;

CMessageUserChargeNotice* CMessageUserChargeNotice::New() const {
  return new CMessageUserChargeNotice;
}

void CMessageUserChargeNotice::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    detailid_ = GOOGLE_LONGLONG(0);
    userid_ = 0;
    subjectid_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageUserChargeNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional int64 DetailID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadInt64(
              input, &detailid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_UserID;
        break;
      }
      
      // optional int32 UserID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_UserID:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &userid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_SubjectID;
        break;
      }
      
      // optional int32 SubjectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_SubjectID:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &subjectid_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_Amount;
        break;
      }
      
      // optional int32 Amount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_Amount:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &amount_));
        _set_bit(3);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageUserChargeNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageUserChargeNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int64 DetailID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteInt64(1, this->detailid(), output);
  }
  
  // optional int32 UserID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(2, this->userid(), output);
  }
  
  // optional int32 SubjectID = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(3, this->subjectid(), output);
  }
  
  // optional int32 Amount = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(4, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageUserChargeNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 DetailID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt64ToArray(1, this->detailid(), target);
  }
  
  // optional int32 UserID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(2, this->userid(), target);
  }
  
  // optional int32 SubjectID = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(3, this->subjectid(), target);
  }
  
  // optional int32 Amount = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(4, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageUserChargeNotice::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 DetailID = 1;
    if (has_detailid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int64Size(
          this->detailid());
    }
    
    // optional int32 UserID = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->userid());
    }
    
    // optional int32 SubjectID = 3;
    if (has_subjectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->subjectid());
    }
    
    // optional int32 Amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageUserChargeNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageUserChargeNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageUserChargeNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageUserChargeNotice::MergeFrom(const CMessageUserChargeNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_detailid(from.detailid());
    }
    if (from._has_bit(1)) {
      set_userid(from.userid());
    }
    if (from._has_bit(2)) {
      set_subjectid(from.subjectid());
    }
    if (from._has_bit(3)) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageUserChargeNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageUserChargeNotice::CopyFrom(const CMessageUserChargeNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageUserChargeNotice::Swap(CMessageUserChargeNotice* other) {
  if (other != this) {
    std::swap(detailid_, other->detailid_);
    std::swap(userid_, other->userid_);
    std::swap(subjectid_, other->subjectid_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageUserChargeNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageUserChargeNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageUserChargeNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageUserChargeNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int PBPromotion::kGoodsIDFieldNumber;
const int PBPromotion::kRemainCountFieldNumber;
const int PBPromotion::kBeginTimeFieldNumber;
const int PBPromotion::kEndTimeFieldNumber;
const int PBPromotion::kMaxCountFieldNumber;
const int PBPromotion::kColdNumFieldNumber;
const int PBPromotion::kColdTimeFieldNumber;
const int PBPromotion::kElapsedTimeFieldNumber;
#endif  // !_MSC_VER

PBPromotion::PBPromotion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBPromotion::InitAsDefaultInstance() {}

PBPromotion::PBPromotion(const PBPromotion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBPromotion::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0u;
  remaincount_ = 0;
  begintime_ = 0;
  endtime_ = 0;
  maxcount_ = 0;
  coldnum_ = 0;
  coldtime_ = 0;
  elapsedtime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBPromotion::~PBPromotion() {
  SharedDtor();
}

void PBPromotion::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBPromotion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPromotion_descriptor_;
}

const PBPromotion& PBPromotion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBPromotion* PBPromotion::default_instance_ = NULL;

PBPromotion* PBPromotion::New() const {
  return new PBPromotion;
}

void PBPromotion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    goodsid_ = 0u;
    remaincount_ = 0;
    begintime_ = 0;
    endtime_ = 0;
    maxcount_ = 0;
    coldnum_ = 0;
    coldtime_ = 0;
    elapsedtime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBPromotion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 GoodsID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &goodsid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_RemainCount;
        break;
      }
      
      // optional int32 RemainCount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_RemainCount:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &remaincount_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_BeginTime;
        break;
      }
      
      // optional int32 BeginTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_BeginTime:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &begintime_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_EndTime;
        break;
      }
      
      // optional int32 EndTime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_EndTime:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &endtime_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_MaxCount;
        break;
      }
      
      // optional int32 MaxCount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_MaxCount:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &maxcount_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_ColdNum;
        break;
      }
      
      // optional int32 ColdNum = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ColdNum:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &coldnum_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_ColdTime;
        break;
      }
      
      // optional int32 ColdTime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ColdTime:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &coldtime_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_ElapsedTime;
        break;
      }
      
      // optional int32 ElapsedTime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ElapsedTime:
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &elapsedtime_));
        _set_bit(7);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBPromotion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBPromotion::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 GoodsID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->goodsid(), output);
  }
  
  // optional int32 RemainCount = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(2, this->remaincount(), output);
  }
  
  // optional int32 BeginTime = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(3, this->begintime(), output);
  }
  
  // optional int32 EndTime = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(4, this->endtime(), output);
  }
  
  // optional int32 MaxCount = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(5, this->maxcount(), output);
  }
  
  // optional int32 ColdNum = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(6, this->coldnum(), output);
  }
  
  // optional int32 ColdTime = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(7, this->coldtime(), output);
  }
  
  // optional int32 ElapsedTime = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(8, this->elapsedtime(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBPromotion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 GoodsID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->goodsid(), target);
  }
  
  // optional int32 RemainCount = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(2, this->remaincount(), target);
  }
  
  // optional int32 BeginTime = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(3, this->begintime(), target);
  }
  
  // optional int32 EndTime = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(4, this->endtime(), target);
  }
  
  // optional int32 MaxCount = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(5, this->maxcount(), target);
  }
  
  // optional int32 ColdNum = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(6, this->coldnum(), target);
  }
  
  // optional int32 ColdTime = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(7, this->coldtime(), target);
  }
  
  // optional int32 ElapsedTime = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(8, this->elapsedtime(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBPromotion::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 GoodsID = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->goodsid());
    }
    
    // optional int32 RemainCount = 2;
    if (has_remaincount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->remaincount());
    }
    
    // optional int32 BeginTime = 3;
    if (has_begintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->begintime());
    }
    
    // optional int32 EndTime = 4;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->endtime());
    }
    
    // optional int32 MaxCount = 5;
    if (has_maxcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->maxcount());
    }
    
    // optional int32 ColdNum = 6;
    if (has_coldnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->coldnum());
    }
    
    // optional int32 ColdTime = 7;
    if (has_coldtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->coldtime());
    }
    
    // optional int32 ElapsedTime = 8;
    if (has_elapsedtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->elapsedtime());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBPromotion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBPromotion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBPromotion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBPromotion::MergeFrom(const PBPromotion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_goodsid(from.goodsid());
    }
    if (from._has_bit(1)) {
      set_remaincount(from.remaincount());
    }
    if (from._has_bit(2)) {
      set_begintime(from.begintime());
    }
    if (from._has_bit(3)) {
      set_endtime(from.endtime());
    }
    if (from._has_bit(4)) {
      set_maxcount(from.maxcount());
    }
    if (from._has_bit(5)) {
      set_coldnum(from.coldnum());
    }
    if (from._has_bit(6)) {
      set_coldtime(from.coldtime());
    }
    if (from._has_bit(7)) {
      set_elapsedtime(from.elapsedtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBPromotion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPromotion::CopyFrom(const PBPromotion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPromotion::Swap(PBPromotion* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(remaincount_, other->remaincount_);
    std::swap(begintime_, other->begintime_);
    std::swap(endtime_, other->endtime_);
    std::swap(maxcount_, other->maxcount_);
    std::swap(coldnum_, other->coldnum_);
    std::swap(coldtime_, other->coldtime_);
    std::swap(elapsedtime_, other->elapsedtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBPromotion::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBPromotion::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBPromotion::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBPromotion_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageIbItemRemainNotice::kPromotionFieldNumber;
#endif  // !_MSC_VER

CMessageIbItemRemainNotice::CMessageIbItemRemainNotice()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageIbItemRemainNotice::InitAsDefaultInstance() {}

CMessageIbItemRemainNotice::CMessageIbItemRemainNotice(const CMessageIbItemRemainNotice& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageIbItemRemainNotice::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageIbItemRemainNotice::~CMessageIbItemRemainNotice() {
  SharedDtor();
}

void CMessageIbItemRemainNotice::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageIbItemRemainNotice::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageIbItemRemainNotice_descriptor_;
}

const CMessageIbItemRemainNotice& CMessageIbItemRemainNotice::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessageIbItemRemainNotice* CMessageIbItemRemainNotice::default_instance_ = NULL;

CMessageIbItemRemainNotice* CMessageIbItemRemainNotice::New() const {
  return new CMessageIbItemRemainNotice;
}

void CMessageIbItemRemainNotice::Clear() {
  promotion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageIbItemRemainNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // repeated .PBPromotion promotion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_promotion:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_promotion()));
        if (input->ExpectTag(10)) goto parse_promotion;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageIbItemRemainNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageIbItemRemainNotice::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // repeated .PBPromotion promotion = 1;
  for (int i = 0; i < this->promotion_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->promotion(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageIbItemRemainNotice::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBPromotion promotion = 1;
  for (int i = 0; i < this->promotion_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(1, this->promotion(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageIbItemRemainNotice::ByteSize() const {
  int total_size = 0;
  
  // repeated .PBPromotion promotion = 1;
  total_size += 1 * this->promotion_size();
  for (int i = 0; i < this->promotion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->promotion(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageIbItemRemainNotice::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageIbItemRemainNotice* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageIbItemRemainNotice*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageIbItemRemainNotice::MergeFrom(const CMessageIbItemRemainNotice& from) {
  GOOGLE_CHECK_NE(&from, this);
  promotion_.MergeFrom(from.promotion_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageIbItemRemainNotice::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageIbItemRemainNotice::CopyFrom(const CMessageIbItemRemainNotice& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageIbItemRemainNotice::Swap(CMessageIbItemRemainNotice* other) {
  if (other != this) {
    promotion_.Swap(&other->promotion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageIbItemRemainNotice::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageIbItemRemainNotice::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageIbItemRemainNotice::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageIbItemRemainNotice_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int PBConsume::kConsumeTypeFieldNumber;
const int PBConsume::kConsumeSpriceFieldNumber;
const int PBConsume::kTamplateRateFieldNumber;
#endif  // !_MSC_VER

PBConsume::PBConsume()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBConsume::InitAsDefaultInstance() {}

PBConsume::PBConsume(const PBConsume& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBConsume::SharedCtor() {
  _cached_size_ = 0;
  consumetype_ = 0u;
  consumesprice_ = 0u;
  tamplaterate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBConsume::~PBConsume() {
  SharedDtor();
}

void PBConsume::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBConsume::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBConsume_descriptor_;
}

const PBConsume& PBConsume::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBConsume* PBConsume::default_instance_ = NULL;

PBConsume* PBConsume::New() const {
  return new PBConsume;
}

void PBConsume::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    consumetype_ = 0u;
    consumesprice_ = 0u;
    tamplaterate_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBConsume::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 ConsumeType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &consumetype_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_ConsumeSprice;
        break;
      }
      
      // optional uint32 ConsumeSprice = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ConsumeSprice:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &consumesprice_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_TamplateRate;
        break;
      }
      
      // optional uint32 TamplateRate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_TamplateRate:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &tamplaterate_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBConsume::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBConsume::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 ConsumeType = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->consumetype(), output);
  }
  
  // optional uint32 ConsumeSprice = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->consumesprice(), output);
  }
  
  // optional uint32 TamplateRate = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->tamplaterate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBConsume::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 ConsumeType = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->consumetype(), target);
  }
  
  // optional uint32 ConsumeSprice = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->consumesprice(), target);
  }
  
  // optional uint32 TamplateRate = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->tamplaterate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBConsume::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ConsumeType = 1;
    if (has_consumetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->consumetype());
    }
    
    // optional uint32 ConsumeSprice = 2;
    if (has_consumesprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->consumesprice());
    }
    
    // optional uint32 TamplateRate = 3;
    if (has_tamplaterate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->tamplaterate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBConsume::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBConsume* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBConsume*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBConsume::MergeFrom(const PBConsume& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_consumetype(from.consumetype());
    }
    if (from._has_bit(1)) {
      set_consumesprice(from.consumesprice());
    }
    if (from._has_bit(2)) {
      set_tamplaterate(from.tamplaterate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBConsume::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBConsume::CopyFrom(const PBConsume& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBConsume::Swap(PBConsume* other) {
  if (other != this) {
    std::swap(consumetype_, other->consumetype_);
    std::swap(consumesprice_, other->consumesprice_);
    std::swap(tamplaterate_, other->tamplaterate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBConsume::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBConsume::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBConsume::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBConsume_reflection_;
}

// ===================================================================

const ::std::string PBFuncStore::_default_funcname_;
#ifndef _MSC_VER
const int PBFuncStore::kFuncIDFieldNumber;
const int PBFuncStore::kFuncNameFieldNumber;
const int PBFuncStore::kFuncUnitTypeFieldNumber;
const int PBFuncStore::kConsumeFieldNumber;
const int PBFuncStore::kFuncShowFieldNumber;
const int PBFuncStore::kDefaultConsumeFieldNumber;
const int PBFuncStore::kFuncUnitFieldNumber;
const int PBFuncStore::kFuncCountLimitFieldNumber;
#endif  // !_MSC_VER

PBFuncStore::PBFuncStore()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBFuncStore::InitAsDefaultInstance() {}

PBFuncStore::PBFuncStore(const PBFuncStore& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBFuncStore::SharedCtor() {
  _cached_size_ = 0;
  funcid_ = 0u;
  funcname_ = const_cast< ::std::string*>(&_default_funcname_);
  funcunittype_ = 0u;
  funcshow_ = 0u;
  defaultconsume_ = 0u;
  funcunit_ = 0u;
  funccountlimit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBFuncStore::~PBFuncStore() {
  SharedDtor();
}

void PBFuncStore::SharedDtor() {
  if (funcname_ != &_default_funcname_) {
    delete funcname_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* PBFuncStore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBFuncStore_descriptor_;
}

const PBFuncStore& PBFuncStore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

PBFuncStore* PBFuncStore::default_instance_ = NULL;

PBFuncStore* PBFuncStore::New() const {
  return new PBFuncStore;
}

void PBFuncStore::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    funcid_ = 0u;
    if (_has_bit(1)) {
      if (funcname_ != &_default_funcname_) {
        funcname_->clear();
      }
    }
    funcunittype_ = 0u;
    funcshow_ = 0u;
    defaultconsume_ = 0u;
    funcunit_ = 0u;
    funccountlimit_ = 0u;
  }
  consume_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBFuncStore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 FuncID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funcid_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_FuncName;
        break;
      }
      
      // optional string FuncName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_FuncName:
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_funcname()));
        if (input->ExpectTag(24)) goto parse_FuncUnitType;
        break;
      }
      
      // optional uint32 FuncUnitType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_FuncUnitType:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funcunittype_));
        _set_bit(2);
        if (input->ExpectTag(34)) goto parse_Consume;
        break;
      }
      
      // repeated .PBConsume Consume = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_Consume:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_consume()));
        if (input->ExpectTag(34)) goto parse_Consume;
        if (input->ExpectTag(40)) goto parse_FuncShow;
        break;
      }
      
      // optional uint32 FuncShow = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_FuncShow:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funcshow_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_DefaultConsume;
        break;
      }
      
      // optional uint32 DefaultConsume = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_DefaultConsume:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &defaultconsume_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_FuncUnit;
        break;
      }
      
      // optional uint32 FuncUnit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_FuncUnit:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funcunit_));
        _set_bit(6);
        if (input->ExpectTag(64)) goto parse_FuncCountLimit;
        break;
      }
      
      // optional uint32 FuncCountLimit = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_FuncCountLimit:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funccountlimit_));
        _set_bit(7);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBFuncStore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    PBFuncStore::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 FuncID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->funcid(), output);
  }
  
  // optional string FuncName = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteString(2, this->funcname(), output);
  }
  
  // optional uint32 FuncUnitType = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->funcunittype(), output);
  }
  
  // repeated .PBConsume Consume = 4;
  for (int i = 0; i < this->consume_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(4, this->consume(i), output);
  }
  
  // optional uint32 FuncShow = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->funcshow(), output);
  }
  
  // optional uint32 DefaultConsume = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->defaultconsume(), output);
  }
  
  // optional uint32 FuncUnit = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->funcunit(), output);
  }
  
  // optional uint32 FuncCountLimit = 8;
  if (_has_bit(7)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(8, this->funccountlimit(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBFuncStore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 FuncID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->funcid(), target);
  }
  
  // optional string FuncName = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteStringToArray(2, this->funcname(), target);
  }
  
  // optional uint32 FuncUnitType = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->funcunittype(), target);
  }
  
  // repeated .PBConsume Consume = 4;
  for (int i = 0; i < this->consume_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(4, this->consume(i), target);
  }
  
  // optional uint32 FuncShow = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->funcshow(), target);
  }
  
  // optional uint32 DefaultConsume = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->defaultconsume(), target);
  }
  
  // optional uint32 FuncUnit = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->funcunit(), target);
  }
  
  // optional uint32 FuncCountLimit = 8;
  if (_has_bit(7)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(8, this->funccountlimit(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBFuncStore::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FuncID = 1;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funcid());
    }
    
    // optional string FuncName = 2;
    if (has_funcname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::StringSize(this->funcname());
    }
    
    // optional uint32 FuncUnitType = 3;
    if (has_funcunittype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funcunittype());
    }
    
    // optional uint32 FuncShow = 5;
    if (has_funcshow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funcshow());
    }
    
    // optional uint32 DefaultConsume = 6;
    if (has_defaultconsume()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->defaultconsume());
    }
    
    // optional uint32 FuncUnit = 7;
    if (has_funcunit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funcunit());
    }
    
    // optional uint32 FuncCountLimit = 8;
    if (has_funccountlimit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funccountlimit());
    }
    
  }
  // repeated .PBConsume Consume = 4;
  total_size += 1 * this->consume_size();
  for (int i = 0; i < this->consume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->consume(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void PBFuncStore::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBFuncStore* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBFuncStore*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBFuncStore::MergeFrom(const PBFuncStore& from) {
  GOOGLE_CHECK_NE(&from, this);
  consume_.MergeFrom(from.consume_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_funcid(from.funcid());
    }
    if (from._has_bit(1)) {
      set_funcname(from.funcname());
    }
    if (from._has_bit(2)) {
      set_funcunittype(from.funcunittype());
    }
    if (from._has_bit(4)) {
      set_funcshow(from.funcshow());
    }
    if (from._has_bit(5)) {
      set_defaultconsume(from.defaultconsume());
    }
    if (from._has_bit(6)) {
      set_funcunit(from.funcunit());
    }
    if (from._has_bit(7)) {
      set_funccountlimit(from.funccountlimit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBFuncStore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBFuncStore::CopyFrom(const PBFuncStore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBFuncStore::Swap(PBFuncStore* other) {
  if (other != this) {
    std::swap(funcid_, other->funcid_);
    std::swap(funcname_, other->funcname_);
    std::swap(funcunittype_, other->funcunittype_);
    consume_.Swap(&other->consume_);
    std::swap(funcshow_, other->funcshow_);
    std::swap(defaultconsume_, other->defaultconsume_);
    std::swap(funcunit_, other->funcunit_);
    std::swap(funccountlimit_, other->funccountlimit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool PBFuncStore::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* PBFuncStore::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* PBFuncStore::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return PBFuncStore_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

CMessageGetFuncConsumesRequest::CMessageGetFuncConsumesRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGetFuncConsumesRequest::InitAsDefaultInstance() {}

CMessageGetFuncConsumesRequest::CMessageGetFuncConsumesRequest(const CMessageGetFuncConsumesRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGetFuncConsumesRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGetFuncConsumesRequest::~CMessageGetFuncConsumesRequest() {
  SharedDtor();
}

void CMessageGetFuncConsumesRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGetFuncConsumesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetFuncConsumesRequest_descriptor_;
}

const CMessageGetFuncConsumesRequest& CMessageGetFuncConsumesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessageGetFuncConsumesRequest* CMessageGetFuncConsumesRequest::default_instance_ = NULL;

CMessageGetFuncConsumesRequest* CMessageGetFuncConsumesRequest::New() const {
  return new CMessageGetFuncConsumesRequest;
}

void CMessageGetFuncConsumesRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGetFuncConsumesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void CMessageGetFuncConsumesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGetFuncConsumesRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGetFuncConsumesRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGetFuncConsumesRequest::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGetFuncConsumesRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGetFuncConsumesRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGetFuncConsumesRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGetFuncConsumesRequest::MergeFrom(const CMessageGetFuncConsumesRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGetFuncConsumesRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetFuncConsumesRequest::CopyFrom(const CMessageGetFuncConsumesRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetFuncConsumesRequest::Swap(CMessageGetFuncConsumesRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGetFuncConsumesRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGetFuncConsumesRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGetFuncConsumesRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetFuncConsumesRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessageGetFuncConsumesResponse::kErrorFieldNumber;
const int CMessageGetFuncConsumesResponse::kFuncStoreFieldNumber;
#endif  // !_MSC_VER

CMessageGetFuncConsumesResponse::CMessageGetFuncConsumesResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessageGetFuncConsumesResponse::InitAsDefaultInstance() {}

CMessageGetFuncConsumesResponse::CMessageGetFuncConsumesResponse(const CMessageGetFuncConsumesResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessageGetFuncConsumesResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessageGetFuncConsumesResponse::~CMessageGetFuncConsumesResponse() {
  SharedDtor();
}

void CMessageGetFuncConsumesResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessageGetFuncConsumesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetFuncConsumesResponse_descriptor_;
}

const CMessageGetFuncConsumesResponse& CMessageGetFuncConsumesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessageGetFuncConsumesResponse* CMessageGetFuncConsumesResponse::default_instance_ = NULL;

CMessageGetFuncConsumesResponse* CMessageGetFuncConsumesResponse::New() const {
  return new CMessageGetFuncConsumesResponse;
}

void CMessageGetFuncConsumesResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0;
  }
  funcstore_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessageGetFuncConsumesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional int32 Error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &error_));
        _set_bit(0);
        if (input->ExpectTag(18)) goto parse_FuncStore;
        break;
      }
      
      // repeated .PBFuncStore FuncStore = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_FuncStore:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_funcstore()));
        if (input->ExpectTag(18)) goto parse_FuncStore;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessageGetFuncConsumesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessageGetFuncConsumesResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 Error = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(1, this->error(), output);
  }
  
  // repeated .PBFuncStore FuncStore = 2;
  for (int i = 0; i < this->funcstore_size(); i++) {
    ::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(2, this->funcstore(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessageGetFuncConsumesResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Error = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(1, this->error(), target);
  }
  
  // repeated .PBFuncStore FuncStore = 2;
  for (int i = 0; i < this->funcstore_size(); i++) {
    target = ::google::protobuf::internal::WireFormat::WriteMessageNoVirtualToArray(2, this->funcstore(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessageGetFuncConsumesResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->error());
    }
    
  }
  // repeated .PBFuncStore FuncStore = 2;
  total_size += 1 * this->funcstore_size();
  for (int i = 0; i < this->funcstore_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->funcstore(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessageGetFuncConsumesResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessageGetFuncConsumesResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessageGetFuncConsumesResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessageGetFuncConsumesResponse::MergeFrom(const CMessageGetFuncConsumesResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  funcstore_.MergeFrom(from.funcstore_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessageGetFuncConsumesResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetFuncConsumesResponse::CopyFrom(const CMessageGetFuncConsumesResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageGetFuncConsumesResponse::Swap(CMessageGetFuncConsumesResponse* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    funcstore_.Swap(&other->funcstore_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessageGetFuncConsumesResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessageGetFuncConsumesResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessageGetFuncConsumesResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessageGetFuncConsumesResponse_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePurchaseFuncRequest::kFuncIDFieldNumber;
const int CMessagePurchaseFuncRequest::kFuncCountFieldNumber;
const int CMessagePurchaseFuncRequest::kConsumeTypeFieldNumber;
const int CMessagePurchaseFuncRequest::kExtraData1FieldNumber;
const int CMessagePurchaseFuncRequest::kExtraData2FieldNumber;
#endif  // !_MSC_VER

CMessagePurchaseFuncRequest::CMessagePurchaseFuncRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePurchaseFuncRequest::InitAsDefaultInstance() {}

CMessagePurchaseFuncRequest::CMessagePurchaseFuncRequest(const CMessagePurchaseFuncRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePurchaseFuncRequest::SharedCtor() {
  _cached_size_ = 0;
  funcid_ = 0u;
  funccount_ = 0u;
  consumetype_ = 0u;
  extradata1_ = 0u;
  extradata2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePurchaseFuncRequest::~CMessagePurchaseFuncRequest() {
  SharedDtor();
}

void CMessagePurchaseFuncRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePurchaseFuncRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePurchaseFuncRequest_descriptor_;
}

const CMessagePurchaseFuncRequest& CMessagePurchaseFuncRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessagePurchaseFuncRequest* CMessagePurchaseFuncRequest::default_instance_ = NULL;

CMessagePurchaseFuncRequest* CMessagePurchaseFuncRequest::New() const {
  return new CMessagePurchaseFuncRequest;
}

void CMessagePurchaseFuncRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    funcid_ = 0u;
    funccount_ = 0u;
    consumetype_ = 0u;
    extradata1_ = 0u;
    extradata2_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePurchaseFuncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional uint32 FuncID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funcid_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_FuncCount;
        break;
      }
      
      // optional uint32 FuncCount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_FuncCount:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funccount_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_ConsumeType;
        break;
      }
      
      // optional uint32 ConsumeType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ConsumeType:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &consumetype_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_ExtraData1;
        break;
      }
      
      // optional uint32 ExtraData1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ExtraData1:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &extradata1_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_ExtraData2;
        break;
      }
      
      // optional uint32 ExtraData2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ExtraData2:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &extradata2_));
        _set_bit(4);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePurchaseFuncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePurchaseFuncRequest::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional uint32 FuncID = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(1, this->funcid(), output);
  }
  
  // optional uint32 FuncCount = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->funccount(), output);
  }
  
  // optional uint32 ConsumeType = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->consumetype(), output);
  }
  
  // optional uint32 ExtraData1 = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->extradata1(), output);
  }
  
  // optional uint32 ExtraData2 = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->extradata2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePurchaseFuncRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 FuncID = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(1, this->funcid(), target);
  }
  
  // optional uint32 FuncCount = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->funccount(), target);
  }
  
  // optional uint32 ConsumeType = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->consumetype(), target);
  }
  
  // optional uint32 ExtraData1 = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->extradata1(), target);
  }
  
  // optional uint32 ExtraData2 = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->extradata2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePurchaseFuncRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 FuncID = 1;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funcid());
    }
    
    // optional uint32 FuncCount = 2;
    if (has_funccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funccount());
    }
    
    // optional uint32 ConsumeType = 3;
    if (has_consumetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->consumetype());
    }
    
    // optional uint32 ExtraData1 = 4;
    if (has_extradata1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->extradata1());
    }
    
    // optional uint32 ExtraData2 = 5;
    if (has_extradata2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->extradata2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePurchaseFuncRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePurchaseFuncRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePurchaseFuncRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePurchaseFuncRequest::MergeFrom(const CMessagePurchaseFuncRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_funcid(from.funcid());
    }
    if (from._has_bit(1)) {
      set_funccount(from.funccount());
    }
    if (from._has_bit(2)) {
      set_consumetype(from.consumetype());
    }
    if (from._has_bit(3)) {
      set_extradata1(from.extradata1());
    }
    if (from._has_bit(4)) {
      set_extradata2(from.extradata2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePurchaseFuncRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePurchaseFuncRequest::CopyFrom(const CMessagePurchaseFuncRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePurchaseFuncRequest::Swap(CMessagePurchaseFuncRequest* other) {
  if (other != this) {
    std::swap(funcid_, other->funcid_);
    std::swap(funccount_, other->funccount_);
    std::swap(consumetype_, other->consumetype_);
    std::swap(extradata1_, other->extradata1_);
    std::swap(extradata2_, other->extradata2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePurchaseFuncRequest::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePurchaseFuncRequest::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePurchaseFuncRequest::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePurchaseFuncRequest_reflection_;
}

// ===================================================================

#ifndef _MSC_VER
const int CMessagePurchaseFuncResponse::kErrorFieldNumber;
const int CMessagePurchaseFuncResponse::kFuncIDFieldNumber;
const int CMessagePurchaseFuncResponse::kFuncCountFieldNumber;
const int CMessagePurchaseFuncResponse::kConsumeTypeFieldNumber;
const int CMessagePurchaseFuncResponse::kFuncsCostFieldNumber;
const int CMessagePurchaseFuncResponse::kExtraData1FieldNumber;
const int CMessagePurchaseFuncResponse::kExtraData2FieldNumber;
#endif  // !_MSC_VER

CMessagePurchaseFuncResponse::CMessagePurchaseFuncResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMessagePurchaseFuncResponse::InitAsDefaultInstance() {}

CMessagePurchaseFuncResponse::CMessagePurchaseFuncResponse(const CMessagePurchaseFuncResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMessagePurchaseFuncResponse::SharedCtor() {
  _cached_size_ = 0;
  error_ = 0;
  funcid_ = 0u;
  funccount_ = 0u;
  consumetype_ = 0u;
  funcscost_ = 0u;
  extradata1_ = 0u;
  extradata2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMessagePurchaseFuncResponse::~CMessagePurchaseFuncResponse() {
  SharedDtor();
}

void CMessagePurchaseFuncResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* CMessagePurchaseFuncResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePurchaseFuncResponse_descriptor_;
}

const CMessagePurchaseFuncResponse& CMessagePurchaseFuncResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ibstore_5fpb_2ehxx();  return *default_instance_;
}

CMessagePurchaseFuncResponse* CMessagePurchaseFuncResponse::default_instance_ = NULL;

CMessagePurchaseFuncResponse* CMessagePurchaseFuncResponse::New() const {
  return new CMessagePurchaseFuncResponse;
}

void CMessagePurchaseFuncResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_ = 0;
    funcid_ = 0u;
    funccount_ = 0u;
    consumetype_ = 0u;
    funcscost_ = 0u;
    extradata1_ = 0u;
    extradata2_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMessagePurchaseFuncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional int32 Error = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &error_));
        _set_bit(0);
        if (input->ExpectTag(16)) goto parse_FuncID;
        break;
      }
      
      // optional uint32 FuncID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_FuncID:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funcid_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_FuncCount;
        break;
      }
      
      // optional uint32 FuncCount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_FuncCount:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funccount_));
        _set_bit(2);
        if (input->ExpectTag(32)) goto parse_ConsumeType;
        break;
      }
      
      // optional uint32 ConsumeType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ConsumeType:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &consumetype_));
        _set_bit(3);
        if (input->ExpectTag(40)) goto parse_FuncsCost;
        break;
      }
      
      // optional uint32 FuncsCost = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_FuncsCost:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &funcscost_));
        _set_bit(4);
        if (input->ExpectTag(48)) goto parse_ExtraData1;
        break;
      }
      
      // optional uint32 ExtraData1 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ExtraData1:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &extradata1_));
        _set_bit(5);
        if (input->ExpectTag(56)) goto parse_ExtraData2;
        break;
      }
      
      // optional uint32 ExtraData2 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_ExtraData2:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &extradata2_));
        _set_bit(6);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMessagePurchaseFuncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    CMessagePurchaseFuncResponse::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // optional int32 Error = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteInt32(1, this->error(), output);
  }
  
  // optional uint32 FuncID = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->funcid(), output);
  }
  
  // optional uint32 FuncCount = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->funccount(), output);
  }
  
  // optional uint32 ConsumeType = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(4, this->consumetype(), output);
  }
  
  // optional uint32 FuncsCost = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(5, this->funcscost(), output);
  }
  
  // optional uint32 ExtraData1 = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(6, this->extradata1(), output);
  }
  
  // optional uint32 ExtraData2 = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(7, this->extradata2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMessagePurchaseFuncResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Error = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteInt32ToArray(1, this->error(), target);
  }
  
  // optional uint32 FuncID = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->funcid(), target);
  }
  
  // optional uint32 FuncCount = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->funccount(), target);
  }
  
  // optional uint32 ConsumeType = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(4, this->consumetype(), target);
  }
  
  // optional uint32 FuncsCost = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(5, this->funcscost(), target);
  }
  
  // optional uint32 ExtraData1 = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(6, this->extradata1(), target);
  }
  
  // optional uint32 ExtraData2 = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(7, this->extradata2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMessagePurchaseFuncResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Error = 1;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->error());
    }
    
    // optional uint32 FuncID = 2;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funcid());
    }
    
    // optional uint32 FuncCount = 3;
    if (has_funccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funccount());
    }
    
    // optional uint32 ConsumeType = 4;
    if (has_consumetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->consumetype());
    }
    
    // optional uint32 FuncsCost = 5;
    if (has_funcscost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->funcscost());
    }
    
    // optional uint32 ExtraData1 = 6;
    if (has_extradata1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->extradata1());
    }
    
    // optional uint32 ExtraData2 = 7;
    if (has_extradata2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->extradata2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void CMessagePurchaseFuncResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMessagePurchaseFuncResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMessagePurchaseFuncResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMessagePurchaseFuncResponse::MergeFrom(const CMessagePurchaseFuncResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_error(from.error());
    }
    if (from._has_bit(1)) {
      set_funcid(from.funcid());
    }
    if (from._has_bit(2)) {
      set_funccount(from.funccount());
    }
    if (from._has_bit(3)) {
      set_consumetype(from.consumetype());
    }
    if (from._has_bit(4)) {
      set_funcscost(from.funcscost());
    }
    if (from._has_bit(5)) {
      set_extradata1(from.extradata1());
    }
    if (from._has_bit(6)) {
      set_extradata2(from.extradata2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMessagePurchaseFuncResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePurchaseFuncResponse::CopyFrom(const CMessagePurchaseFuncResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePurchaseFuncResponse::Swap(CMessagePurchaseFuncResponse* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(funcid_, other->funcid_);
    std::swap(funccount_, other->funccount_);
    std::swap(consumetype_, other->consumetype_);
    std::swap(funcscost_, other->funcscost_);
    std::swap(extradata1_, other->extradata1_);
    std::swap(extradata2_, other->extradata2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool CMessagePurchaseFuncResponse::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* CMessagePurchaseFuncResponse::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CMessagePurchaseFuncResponse::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return CMessagePurchaseFuncResponse_reflection_;
}
