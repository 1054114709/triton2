// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_friendmessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_friendmessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "coremessage_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();

class CMessageInviteFriendRequest;
class CMessageInviteFriendRequestByName;
class CMessageInviteFriendNotice;
class CMessageInviteFriendOptionRequest;
class CMessageInviteFriendResponseMsg;
class CMessageInviteFriendResponseNotice;
class CMessageDelFrientRequest;
class CMessageFriendErrorNotice;
class CMessageChangeFriendNotice;
class SingleFriendData;
class CMessageFriendGetListNotice;
class CMessageFriendGetListRequest;
class CMessageFriendGroupNameNotice;
class CMessageFriendChangeStatusNotice_R;
class CMessageFriendChangeStatusNotice;
class CMessageFriendChangeStatusRequest;
class CMessageAddFriendNotice;
class CMessageFriendChgGroupNameRequest;
class CMessageFriendChgFriendGroupRequest;
class CMessageFriendSendMessageRequest;
class CMessageFriendMessageNotice;
class CMessageFriendMoveToBlackRequest;
class CMessageFriendAddBlackRequest;
class CMessageFriendChgFriendGroupNotice;
class CMessageFriendMoveToBlackNotice;
class CMessageFriendLockEnemyRequest;
class CMessageFriendGetFriendsStateRequest;
class CMessageFriendGetFriendsStateNotice;
class CMessageFriendUpdateEnemyRequest;
class CMessageChangeMasterRequest;
class CMessageChangeMasterResponse;
class CMessageChangeMasterNotify;
class CMessageGetSlaveRequest;
class SlaveInfo;
class CMessageGetSlaveResponse;
class CMessageSlaveLevelUpNotify;
class CMessageAnswerChangeNotify;
class CMessageAnswerChangeRequest;
class CMessageQueryPlayerRequest;
class CMessageQueryPlayerResponse;
class CMessageSlaveOnOffNotify;
class CMessageSlaveNumNotify;
class CMessageRemoveSlaveRequest;
class CMessageRemoveSlaveResponse;
class CMessageRemoveSlaveNotify;
class CMessageRemoveMasterRequest;
class CMessageRemoveMasterResponse;
class CMessageRemoveMasterNotify;
class CMessageAlterMasterPercentRequest;
class CMessageAlterMasterPercentResponse;
class CMessageGetLowPlayerRequest;
class CMessageGetLowPlayerResponse;
class CMessageFriendLevelUpNotify;
class CMessageFriendBlessRequest;
class CMessageFriendBlessResponse;
class CMessageFriendBlessNotify;
class CMessageModifyIntimacyNogify;
class CMessageModifyLastTimeAllOnLineNotify;
class CMessageCreateSwornTeamRequest;
class CMessageCreateSwornTeamResponse;
class CMessageLeaveSwornTeamRequest;
class CMessageLeaveSwornTeamResponse;
class CMessageKickSwornMemberRequest;
class CMessageKickSwornMemberResponse;
class CMessageDisbandSwornTeamRequest;
class CMessageDisbandSwornTeamResponse;
class CMsgSwornMember;
class CMessageSwornInfoNotify;
class CMessageCreateSwornTeamNotify;
class CMessageLeaveSwornTeamNotify;
class CMessageKickSwornMemberNotify;
class CMessageChangeSwornNameRequest;
class CMessageChangeSwornNameResponse;
class CMessageChangeSwornNameNotify;
class CMessageDisbandSwornTeamNotify;
class CMessageLatestContactChangeStatusNotice;
class CMessageLastContacterNotice;
class CMessageUpdateLastContacterNotice;
class CMessageUploadContacterList;
class CMessageContacterStatusNotifyG2S;
class CMessageRebuildSwornRequest;
class CMessageRebuildSwornResponse;
class CMessageRebuildSwornNotify;

enum FRIEND_MSG_ID {
  ID_C2S_FRIEND_INVITE_REQUEST = 6144,
  ID_S2C_FRIEND_INVITE_NOTICE_R = 6657,
  ID_C2S_FRIEND_INVITE_OPTION = 6146,
  ID_S2S_FRIEND_INVITE_RESPONSE_R = 6659,
  ID_S2C_FRIEND_INVITE_RESPONSE_NOTICE = 6148,
  ID_C2S_FRIEND_DEL_REQUEST = 6149,
  ID_S2C_FRIEND_ERRCODE_NOTICE = 6662,
  ID_S2C_FRIEND_CHANGE_FRIEND_NOTICE = 6663,
  ID_S2C_FRIEND_GETLIST_NOTICE = 6152,
  ID_C2S_FRIEND_GETLIST_REQUEST = 6153,
  ID_S2C_FRIEND_GROUPNAME_NOTICE = 6155,
  ID_S2S_FRIEND_CHANGESTATUS_NOTICE_R = 6668,
  ID_C2S_FRIEND_CHANGESTATUS_REQUEST = 6157,
  ID_S2C_FRIEND_CHANGESTATUS_NOTICE = 6158,
  ID_S2S_FRIEND_ADDFRIEND_NOTICE = 6671,
  ID_C2S_FRIEND_CHGGROUPNAME_REQUEST = 6160,
  ID_C2S_FRIEND_CHGFRIENDGROUP_REQUEST = 6161,
  ID_C2S_FRIEND_SENDMESSAGE_REQUEST = 6162,
  ID_S2C_FRIEND_MESSAGE_NOTICE_R = 6675,
  ID_C2S_FRIEND_MOVETOBLACK_REQUEST = 6164,
  ID_C2S_FRIEND_ADDBLACK_REQUEST = 6165,
  ID_S2C_FRIEND_CHGFRIENDGROUP_NOTICE = 6166,
  ID_S2C_FRIEND_MOVETOBLACK_NOTICE = 6167,
  ID_C2S_FRIEND_LOCKENEMY_REQUEST = 6168,
  ID_C2S_FRIEND_GETFRIENDSSTATE_REQUEST = 6169,
  ID_S2C_FRIEND_GETFRIENDSSTATE_NOTICE = 6170,
  ID_C2S_FRIEND_UPDATEENEMY_REQUEST = 6171,
  ID_C2S_FRIEND_ADDFRIENDBYNAME_REQUEST = 6172,
  ID_C2S_REQUEST_CHANGEMASTER = 6173,
  ID_S2C_RESPONSE_CHANGEMASTER = 6176,
  ID_S2C_NOTIFY_CHANGEMASTER = 6177,
  ID_C2S_REQUEST_GETSLAVE = 6178,
  ID_S2C_RESPONSE_GETSLAVE = 6179,
  ID_S2C_NOTIFY_SLAVELEVELUP = 6180,
  ID_S2C_NOTIFY_ANSWERCHANGE = 6181,
  ID_C2S_REQUEST_QUERYPLAYER = 6182,
  ID_S2C_RESPONSE_QUERYPLAYER = 6183,
  ID_S2C_NOTIFY_SLAVEONOFF = 6184,
  ID_S2C_NOTIFY_SLAVENUM = 6185,
  ID_C2S_REQUEST_REMOVESLAVE = 6186,
  ID_S2C_RESPONSE_REMOVESLAVE = 6187,
  ID_S2C_NOTIFY_REMOVESLAVE = 6188,
  ID_C2S_REQUEST_REMOVEMASTER = 6189,
  ID_S2C_RESPONSE_REMOVEMASTER = 6190,
  ID_S2C_NOTIFY_REMOVEMASTER = 6191,
  ID_C2S_REQUEST_ALTERMASTERPERCENT = 6192,
  ID_S2C_RESPONSE_ALTERMASTERPERCENT = 6193,
  ID_C2S_REQUEST_GETLOWPLAYER = 6194,
  ID_S2C_RESPONSE_GETLOWPLAYER = 6195,
  ID_C2S_REQUEST_ANSWERCHANGE = 6196,
  ID_S2C_NOTIFY_FRIENDLEVELUP = 6709,
  ID_C2S_REQUEST_FRIENDBLESS = 6198,
  ID_S2C_RESPONSE_FRIENDBLESS = 6199,
  ID_S2S_NOTIFY_FRIENDBLESS = 6712,
  ID_S2S_NOTIFY_MODIFYINTIMACY = 6201,
  ID_S2S_NOTIFY_MODIFYLASTTIMEALLONLINE = 6202,
  ID_C2S_REQUEST_CREATESWORNTEAM = 6203,
  ID_S2C_RESPONSE_CREATESWORNTEAM = 6204,
  ID_C2S_REQUEST_LEAVESWORNTEAM = 6205,
  ID_S2C_RESPONSE_LEAVESWORNTEAM = 6206,
  ID_C2S_REQUEST_KICKSWORNMEMBER = 6208,
  ID_S2C_RESPONSE_KICKSWORNMEMBER = 6209,
  ID_C2S_REQUEST_DISBANDSWORNTEAM = 6210,
  ID_S2C_RESPONSE_DISBANDSWORNTEAM = 6211,
  ID_S2C_NOTIFY_SWORNINFO = 6212,
  ID_S2C_NOTIFY_LEAVESWORNTEAM = 6213,
  ID_S2C_NOTIFY_KICKSWORNMEMBER = 6214,
  ID_C2S_REQUEST_CHANGESWORNNAME = 6215,
  ID_S2C_RESPONSE_CHANGESWORNNAME = 6216,
  ID_S2C_NOTIFY_CHANGESWORNNAME = 6217,
  ID_S2C_NOTIFY_DISBANDSWORNTEAM = 6218,
  ID_S2C_NOTIFY_CREATESWORNTEAM = 6219,
  ID_S2C_NOTIFY_LASTCONTACTER = 6732,
  ID_S2G_NOTIFY_UPDATELASTCONTACTER = 6221,
  ID_S2G_NOTIFY_UPLOADCONTACTERLIST = 6222,
  ID_G2S_NOTIFY_CONTACTERSTATUS = 6224,
  ID_S2C_NOTIFY_CONTACTERSTATUS = 6225,
  ID_C2S_REQUEST_REBUILDSWORN = 6226,
  ID_S2C_RESPONSE_REBUILDSWORN = 6227,
  ID_S2C_NOTIFY_REBUILDSWORN = 6228
};
const ::google::protobuf::EnumDescriptor* FRIEND_MSG_ID_descriptor();
bool FRIEND_MSG_ID_IsValid(int value);
const FRIEND_MSG_ID FRIEND_MSG_ID_MIN = ID_C2S_FRIEND_INVITE_REQUEST;
const FRIEND_MSG_ID FRIEND_MSG_ID_MAX = ID_S2C_NOTIFY_LASTCONTACTER;

inline const ::std::string& FRIEND_MSG_ID_Name(FRIEND_MSG_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FRIEND_MSG_ID_descriptor(), value);
}
inline bool FRIEND_MSG_ID_Parse(
    const ::std::string& name, FRIEND_MSG_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FRIEND_MSG_ID>(
    FRIEND_MSG_ID_descriptor(), name, value);
}
// ===================================================================

class CMessageInviteFriendRequest : public ::google::protobuf::Message {
 public:
  CMessageInviteFriendRequest();
  virtual ~CMessageInviteFriendRequest();
  
  CMessageInviteFriendRequest(const CMessageInviteFriendRequest& from);
  
  inline CMessageInviteFriendRequest& operator=(const CMessageInviteFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteFriendRequest& default_instance();
  void Swap(CMessageInviteFriendRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteFriendRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteFriendRequest& from);
  void MergeFrom(const CMessageInviteFriendRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PlayerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteFriendRequestByName : public ::google::protobuf::Message {
 public:
  CMessageInviteFriendRequestByName();
  virtual ~CMessageInviteFriendRequestByName();
  
  CMessageInviteFriendRequestByName(const CMessageInviteFriendRequestByName& from);
  
  inline CMessageInviteFriendRequestByName& operator=(const CMessageInviteFriendRequestByName& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteFriendRequestByName& default_instance();
  void Swap(CMessageInviteFriendRequestByName* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteFriendRequestByName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteFriendRequestByName& from);
  void MergeFrom(const CMessageInviteFriendRequestByName& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string InvitedPlayerName = 1;
  inline bool has_invitedplayername() const;
  inline void clear_invitedplayername();
  static const int kInvitedPlayerNameFieldNumber = 1;
  inline const ::std::string& invitedplayername() const;
  inline void set_invitedplayername(const ::std::string& value);
  inline void set_invitedplayername(const char* value);
  inline void set_invitedplayername(const char* value, size_t size);
  inline ::std::string* mutable_invitedplayername();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* invitedplayername_;
  static const ::std::string _default_invitedplayername_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteFriendRequestByName* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteFriendNotice : public ::google::protobuf::Message {
 public:
  CMessageInviteFriendNotice();
  virtual ~CMessageInviteFriendNotice();
  
  CMessageInviteFriendNotice(const CMessageInviteFriendNotice& from);
  
  inline CMessageInviteFriendNotice& operator=(const CMessageInviteFriendNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteFriendNotice& default_instance();
  void Swap(CMessageInviteFriendNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteFriendNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteFriendNotice& from);
  void MergeFrom(const CMessageInviteFriendNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 SrcHead = 2;
  inline bool has_srchead() const;
  inline void clear_srchead();
  static const int kSrcHeadFieldNumber = 2;
  inline ::google::protobuf::uint32 srchead() const;
  inline void set_srchead(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 3;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcMetier = 4;
  inline bool has_srcmetier() const;
  inline void clear_srcmetier();
  static const int kSrcMetierFieldNumber = 4;
  inline ::google::protobuf::uint32 srcmetier() const;
  inline void set_srcmetier(::google::protobuf::uint32 value);
  
  // optional uint32 SrcLevel = 5;
  inline bool has_srclevel() const;
  inline void clear_srclevel();
  static const int kSrcLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 srclevel() const;
  inline void set_srclevel(::google::protobuf::uint32 value);
  
  // optional uint32 SrcSex = 6;
  inline bool has_srcsex() const;
  inline void clear_srcsex();
  static const int kSrcSexFieldNumber = 6;
  inline ::google::protobuf::uint32 srcsex() const;
  inline void set_srcsex(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 7;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 7;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 srchead_;
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 srcmetier_;
  ::google::protobuf::uint32 srclevel_;
  ::google::protobuf::uint32 srcsex_;
  ::google::protobuf::uint32 descharid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteFriendNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteFriendOptionRequest : public ::google::protobuf::Message {
 public:
  CMessageInviteFriendOptionRequest();
  virtual ~CMessageInviteFriendOptionRequest();
  
  CMessageInviteFriendOptionRequest(const CMessageInviteFriendOptionRequest& from);
  
  inline CMessageInviteFriendOptionRequest& operator=(const CMessageInviteFriendOptionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteFriendOptionRequest& default_instance();
  void Swap(CMessageInviteFriendOptionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteFriendOptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteFriendOptionRequest& from);
  void MergeFrom(const CMessageInviteFriendOptionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 InvitingPlayerID = 1;
  inline bool has_invitingplayerid() const;
  inline void clear_invitingplayerid();
  static const int kInvitingPlayerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 invitingplayerid() const;
  inline void set_invitingplayerid(::google::protobuf::uint32 value);
  
  // optional uint32 AgreeCode = 2;
  inline bool has_agreecode() const;
  inline void clear_agreecode();
  static const int kAgreeCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 agreecode() const;
  inline void set_agreecode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 invitingplayerid_;
  ::google::protobuf::uint32 agreecode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteFriendOptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteFriendResponseMsg : public ::google::protobuf::Message {
 public:
  CMessageInviteFriendResponseMsg();
  virtual ~CMessageInviteFriendResponseMsg();
  
  CMessageInviteFriendResponseMsg(const CMessageInviteFriendResponseMsg& from);
  
  inline CMessageInviteFriendResponseMsg& operator=(const CMessageInviteFriendResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteFriendResponseMsg& default_instance();
  void Swap(CMessageInviteFriendResponseMsg* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteFriendResponseMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteFriendResponseMsg& from);
  void MergeFrom(const CMessageInviteFriendResponseMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 IsDesInMyLst = 2;
  inline bool has_isdesinmylst() const;
  inline void clear_isdesinmylst();
  static const int kIsDesInMyLstFieldNumber = 2;
  inline ::google::protobuf::uint32 isdesinmylst() const;
  inline void set_isdesinmylst(::google::protobuf::uint32 value);
  
  // optional uint32 BeInvitingPlayerNation = 3;
  inline bool has_beinvitingplayernation() const;
  inline void clear_beinvitingplayernation();
  static const int kBeInvitingPlayerNationFieldNumber = 3;
  inline ::google::protobuf::uint32 beinvitingplayernation() const;
  inline void set_beinvitingplayernation(::google::protobuf::uint32 value);
  
  // optional uint32 BeInvitingPlayerHead = 4;
  inline bool has_beinvitingplayerhead() const;
  inline void clear_beinvitingplayerhead();
  static const int kBeInvitingPlayerHeadFieldNumber = 4;
  inline ::google::protobuf::uint32 beinvitingplayerhead() const;
  inline void set_beinvitingplayerhead(::google::protobuf::uint32 value);
  
  // optional string BeInvitingPlayerName = 5;
  inline bool has_beinvitingplayername() const;
  inline void clear_beinvitingplayername();
  static const int kBeInvitingPlayerNameFieldNumber = 5;
  inline const ::std::string& beinvitingplayername() const;
  inline void set_beinvitingplayername(const ::std::string& value);
  inline void set_beinvitingplayername(const char* value);
  inline void set_beinvitingplayername(const char* value, size_t size);
  inline ::std::string* mutable_beinvitingplayername();
  
  // optional uint32 BeInvitingPlayerSex = 6;
  inline bool has_beinvitingplayersex() const;
  inline void clear_beinvitingplayersex();
  static const int kBeInvitingPlayerSexFieldNumber = 6;
  inline ::google::protobuf::uint32 beinvitingplayersex() const;
  inline void set_beinvitingplayersex(::google::protobuf::uint32 value);
  
  // optional uint32 IsFriendLstFull = 7;
  inline bool has_isfriendlstfull() const;
  inline void clear_isfriendlstfull();
  static const int kIsFriendLstFullFieldNumber = 7;
  inline ::google::protobuf::uint32 isfriendlstfull() const;
  inline void set_isfriendlstfull(::google::protobuf::uint32 value);
  
  // optional uint32 AgreeCode = 8;
  inline bool has_agreecode() const;
  inline void clear_agreecode();
  static const int kAgreeCodeFieldNumber = 8;
  inline ::google::protobuf::uint32 agreecode() const;
  inline void set_agreecode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 isdesinmylst_;
  ::google::protobuf::uint32 beinvitingplayernation_;
  ::google::protobuf::uint32 beinvitingplayerhead_;
  ::std::string* beinvitingplayername_;
  static const ::std::string _default_beinvitingplayername_;
  ::google::protobuf::uint32 beinvitingplayersex_;
  ::google::protobuf::uint32 isfriendlstfull_;
  ::google::protobuf::uint32 agreecode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteFriendResponseMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMessageInviteFriendResponseNotice : public ::google::protobuf::Message {
 public:
  CMessageInviteFriendResponseNotice();
  virtual ~CMessageInviteFriendResponseNotice();
  
  CMessageInviteFriendResponseNotice(const CMessageInviteFriendResponseNotice& from);
  
  inline CMessageInviteFriendResponseNotice& operator=(const CMessageInviteFriendResponseNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageInviteFriendResponseNotice& default_instance();
  void Swap(CMessageInviteFriendResponseNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageInviteFriendResponseNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageInviteFriendResponseNotice& from);
  void MergeFrom(const CMessageInviteFriendResponseNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string BeInvitingPlayerName = 1;
  inline bool has_beinvitingplayername() const;
  inline void clear_beinvitingplayername();
  static const int kBeInvitingPlayerNameFieldNumber = 1;
  inline const ::std::string& beinvitingplayername() const;
  inline void set_beinvitingplayername(const ::std::string& value);
  inline void set_beinvitingplayername(const char* value);
  inline void set_beinvitingplayername(const char* value, size_t size);
  inline ::std::string* mutable_beinvitingplayername();
  
  // optional uint32 AgreeCode = 2;
  inline bool has_agreecode() const;
  inline void clear_agreecode();
  static const int kAgreeCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 agreecode() const;
  inline void set_agreecode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* beinvitingplayername_;
  static const ::std::string _default_beinvitingplayername_;
  ::google::protobuf::uint32 agreecode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageInviteFriendResponseNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDelFrientRequest : public ::google::protobuf::Message {
 public:
  CMessageDelFrientRequest();
  virtual ~CMessageDelFrientRequest();
  
  CMessageDelFrientRequest(const CMessageDelFrientRequest& from);
  
  inline CMessageDelFrientRequest& operator=(const CMessageDelFrientRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDelFrientRequest& default_instance();
  void Swap(CMessageDelFrientRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDelFrientRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDelFrientRequest& from);
  void MergeFrom(const CMessageDelFrientRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDelFrientRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendErrorNotice : public ::google::protobuf::Message {
 public:
  CMessageFriendErrorNotice();
  virtual ~CMessageFriendErrorNotice();
  
  CMessageFriendErrorNotice(const CMessageFriendErrorNotice& from);
  
  inline CMessageFriendErrorNotice& operator=(const CMessageFriendErrorNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendErrorNotice& default_instance();
  void Swap(CMessageFriendErrorNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendErrorNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendErrorNotice& from);
  void MergeFrom(const CMessageFriendErrorNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional int32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendErrorNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeFriendNotice : public ::google::protobuf::Message {
 public:
  CMessageChangeFriendNotice();
  virtual ~CMessageChangeFriendNotice();
  
  CMessageChangeFriendNotice(const CMessageChangeFriendNotice& from);
  
  inline CMessageChangeFriendNotice& operator=(const CMessageChangeFriendNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeFriendNotice& default_instance();
  void Swap(CMessageChangeFriendNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeFriendNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeFriendNotice& from);
  void MergeFrom(const CMessageChangeFriendNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 NationID = 3;
  inline bool has_nationid() const;
  inline void clear_nationid();
  static const int kNationIDFieldNumber = 3;
  inline ::google::protobuf::uint32 nationid() const;
  inline void set_nationid(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 4;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 4;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 ReltoMe = 5;
  inline bool has_reltome() const;
  inline void clear_reltome();
  static const int kReltoMeFieldNumber = 5;
  inline ::google::protobuf::uint32 reltome() const;
  inline void set_reltome(::google::protobuf::uint32 value);
  
  // optional uint32 OprCode = 6;
  inline bool has_oprcode() const;
  inline void clear_oprcode();
  static const int kOprCodeFieldNumber = 6;
  inline ::google::protobuf::uint32 oprcode() const;
  inline void set_oprcode(::google::protobuf::uint32 value);
  
  // optional uint32 TimeOrder = 7;
  inline bool has_timeorder() const;
  inline void clear_timeorder();
  static const int kTimeOrderFieldNumber = 7;
  inline ::google::protobuf::uint32 timeorder() const;
  inline void set_timeorder(::google::protobuf::uint32 value);
  
  // optional uint32 IsLock = 8;
  inline bool has_islock() const;
  inline void clear_islock();
  static const int kIsLockFieldNumber = 8;
  inline ::google::protobuf::uint32 islock() const;
  inline void set_islock(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 9;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 9;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 10;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 10;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 BeKilled = 11;
  inline bool has_bekilled() const;
  inline void clear_bekilled();
  static const int kBeKilledFieldNumber = 11;
  inline ::google::protobuf::uint32 bekilled() const;
  inline void set_bekilled(::google::protobuf::uint32 value);
  
  // optional uint32 Killed = 12;
  inline bool has_killed() const;
  inline void clear_killed();
  static const int kKilledFieldNumber = 12;
  inline ::google::protobuf::uint32 killed() const;
  inline void set_killed(::google::protobuf::uint32 value);
  
  // optional uint32 Head = 13;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 13;
  inline ::google::protobuf::uint32 head() const;
  inline void set_head(::google::protobuf::uint32 value);
  
  // optional uint32 GroupID = 14;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 14;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);
  
  // optional uint32 VipFlag = 15;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 15;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 nationid_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 reltome_;
  ::google::protobuf::uint32 oprcode_;
  ::google::protobuf::uint32 timeorder_;
  ::google::protobuf::uint32 islock_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 bekilled_;
  ::google::protobuf::uint32 killed_;
  ::google::protobuf::uint32 head_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 vipflag_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeFriendNotice* default_instance_;
};
// -------------------------------------------------------------------

class SingleFriendData : public ::google::protobuf::Message {
 public:
  SingleFriendData();
  virtual ~SingleFriendData();
  
  SingleFriendData(const SingleFriendData& from);
  
  inline SingleFriendData& operator=(const SingleFriendData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleFriendData& default_instance();
  void Swap(SingleFriendData* other);
  
  // implements Message ----------------------------------------------
  
  SingleFriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleFriendData& from);
  void MergeFrom(const SingleFriendData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BeKilled = 1;
  inline bool has_bekilled() const;
  inline void clear_bekilled();
  static const int kBeKilledFieldNumber = 1;
  inline ::google::protobuf::uint32 bekilled() const;
  inline void set_bekilled(::google::protobuf::uint32 value);
  
  // optional uint32 Head = 2;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 2;
  inline ::google::protobuf::uint32 head() const;
  inline void set_head(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 GroupID = 4;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 4;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 5;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string Name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 NationID = 7;
  inline bool has_nationid() const;
  inline void clear_nationid();
  static const int kNationIDFieldNumber = 7;
  inline ::google::protobuf::uint32 nationid() const;
  inline void set_nationid(::google::protobuf::uint32 value);
  
  // optional uint32 Relation = 8;
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 8;
  inline ::google::protobuf::uint32 relation() const;
  inline void set_relation(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 9;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 9;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 IsLock = 10;
  inline bool has_islock() const;
  inline void clear_islock();
  static const int kIsLockFieldNumber = 10;
  inline ::google::protobuf::uint32 islock() const;
  inline void set_islock(::google::protobuf::uint32 value);
  
  // optional uint32 TimeOrder = 11;
  inline bool has_timeorder() const;
  inline void clear_timeorder();
  static const int kTimeOrderFieldNumber = 11;
  inline ::google::protobuf::uint32 timeorder() const;
  inline void set_timeorder(::google::protobuf::uint32 value);
  
  // optional uint32 Killed = 12;
  inline bool has_killed() const;
  inline void clear_killed();
  static const int kKilledFieldNumber = 12;
  inline ::google::protobuf::uint32 killed() const;
  inline void set_killed(::google::protobuf::uint32 value);
  
  // optional uint32 VipFlag = 13;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 13;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
  // optional uint32 IntimacyDegree = 14;
  inline bool has_intimacydegree() const;
  inline void clear_intimacydegree();
  static const int kIntimacyDegreeFieldNumber = 14;
  inline ::google::protobuf::uint32 intimacydegree() const;
  inline void set_intimacydegree(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 bekilled_;
  ::google::protobuf::uint32 head_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 charid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 nationid_;
  ::google::protobuf::uint32 relation_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 islock_;
  ::google::protobuf::uint32 timeorder_;
  ::google::protobuf::uint32 killed_;
  ::google::protobuf::uint32 vipflag_;
  ::google::protobuf::uint32 intimacydegree_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleFriendData* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendGetListNotice : public ::google::protobuf::Message {
 public:
  CMessageFriendGetListNotice();
  virtual ~CMessageFriendGetListNotice();
  
  CMessageFriendGetListNotice(const CMessageFriendGetListNotice& from);
  
  inline CMessageFriendGetListNotice& operator=(const CMessageFriendGetListNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendGetListNotice& default_instance();
  void Swap(CMessageFriendGetListNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendGetListNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendGetListNotice& from);
  void MergeFrom(const CMessageFriendGetListNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SingleFriendData Friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleFriendData >& friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleFriendData >* mutable_friends();
  inline const ::SingleFriendData& friends(int index) const;
  inline ::SingleFriendData* mutable_friends(int index);
  inline ::SingleFriendData* add_friends();
  
  // repeated string GroupName = 2;
  inline int groupname_size() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& groupname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_groupname();
  inline const ::std::string& groupname(int index) const;
  inline ::std::string* mutable_groupname(int index);
  inline void set_groupname(int index, const ::std::string& value);
  inline void set_groupname(int index, const char* value);
  inline void set_groupname(int index, const char* value, size_t size);
  inline ::std::string* add_groupname();
  inline void add_groupname(const ::std::string& value);
  inline void add_groupname(const char* value);
  inline void add_groupname(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SingleFriendData > friends_;
  ::google::protobuf::RepeatedPtrField< ::std::string> groupname_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendGetListNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendGetListRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendGetListRequest();
  virtual ~CMessageFriendGetListRequest();
  
  CMessageFriendGetListRequest(const CMessageFriendGetListRequest& from);
  
  inline CMessageFriendGetListRequest& operator=(const CMessageFriendGetListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendGetListRequest& default_instance();
  void Swap(CMessageFriendGetListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendGetListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendGetListRequest& from);
  void MergeFrom(const CMessageFriendGetListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendGetListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendGroupNameNotice : public ::google::protobuf::Message {
 public:
  CMessageFriendGroupNameNotice();
  virtual ~CMessageFriendGroupNameNotice();
  
  CMessageFriendGroupNameNotice(const CMessageFriendGroupNameNotice& from);
  
  inline CMessageFriendGroupNameNotice& operator=(const CMessageFriendGroupNameNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendGroupNameNotice& default_instance();
  void Swap(CMessageFriendGroupNameNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendGroupNameNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendGroupNameNotice& from);
  void MergeFrom(const CMessageFriendGroupNameNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 GroupID = 1;
  inline int groupid_size() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& groupid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_groupid();
  inline ::google::protobuf::uint32 groupid(int index) const;
  inline void set_groupid(int index, ::google::protobuf::uint32 value);
  inline void add_groupid(::google::protobuf::uint32 value);
  
  // repeated string GroupName = 2;
  inline int groupname_size() const;
  inline void clear_groupname();
  static const int kGroupNameFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& groupname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_groupname();
  inline const ::std::string& groupname(int index) const;
  inline ::std::string* mutable_groupname(int index);
  inline void set_groupname(int index, const ::std::string& value);
  inline void set_groupname(int index, const char* value);
  inline void set_groupname(int index, const char* value, size_t size);
  inline ::std::string* add_groupname();
  inline void add_groupname(const ::std::string& value);
  inline void add_groupname(const char* value);
  inline void add_groupname(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > groupid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> groupname_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendGroupNameNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendChangeStatusNotice_R : public ::google::protobuf::Message {
 public:
  CMessageFriendChangeStatusNotice_R();
  virtual ~CMessageFriendChangeStatusNotice_R();
  
  CMessageFriendChangeStatusNotice_R(const CMessageFriendChangeStatusNotice_R& from);
  
  inline CMessageFriendChangeStatusNotice_R& operator=(const CMessageFriendChangeStatusNotice_R& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendChangeStatusNotice_R& default_instance();
  void Swap(CMessageFriendChangeStatusNotice_R* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendChangeStatusNotice_R* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendChangeStatusNotice_R& from);
  void MergeFrom(const CMessageFriendChangeStatusNotice_R& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 Rels = 3;
  inline bool has_rels() const;
  inline void clear_rels();
  static const int kRelsFieldNumber = 3;
  inline ::google::protobuf::uint32 rels() const;
  inline void set_rels(::google::protobuf::uint32 value);
  
  // optional uint32 VipFlag = 4;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 rels_;
  ::google::protobuf::uint32 vipflag_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendChangeStatusNotice_R* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendChangeStatusNotice : public ::google::protobuf::Message {
 public:
  CMessageFriendChangeStatusNotice();
  virtual ~CMessageFriendChangeStatusNotice();
  
  CMessageFriendChangeStatusNotice(const CMessageFriendChangeStatusNotice& from);
  
  inline CMessageFriendChangeStatusNotice& operator=(const CMessageFriendChangeStatusNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendChangeStatusNotice& default_instance();
  void Swap(CMessageFriendChangeStatusNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendChangeStatusNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendChangeStatusNotice& from);
  void MergeFrom(const CMessageFriendChangeStatusNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 Rels = 3;
  inline bool has_rels() const;
  inline void clear_rels();
  static const int kRelsFieldNumber = 3;
  inline ::google::protobuf::uint32 rels() const;
  inline void set_rels(::google::protobuf::uint32 value);
  
  // optional uint32 VipFlag = 4;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 rels_;
  ::google::protobuf::uint32 vipflag_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendChangeStatusNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendChangeStatusRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendChangeStatusRequest();
  virtual ~CMessageFriendChangeStatusRequest();
  
  CMessageFriendChangeStatusRequest(const CMessageFriendChangeStatusRequest& from);
  
  inline CMessageFriendChangeStatusRequest& operator=(const CMessageFriendChangeStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendChangeStatusRequest& default_instance();
  void Swap(CMessageFriendChangeStatusRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendChangeStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendChangeStatusRequest& from);
  void MergeFrom(const CMessageFriendChangeStatusRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendChangeStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAddFriendNotice : public ::google::protobuf::Message {
 public:
  CMessageAddFriendNotice();
  virtual ~CMessageAddFriendNotice();
  
  CMessageAddFriendNotice(const CMessageAddFriendNotice& from);
  
  inline CMessageAddFriendNotice& operator=(const CMessageAddFriendNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAddFriendNotice& default_instance();
  void Swap(CMessageAddFriendNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAddFriendNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAddFriendNotice& from);
  void MergeFrom(const CMessageAddFriendNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 ReltoMe = 3;
  inline bool has_reltome() const;
  inline void clear_reltome();
  static const int kReltoMeFieldNumber = 3;
  inline ::google::protobuf::uint32 reltome() const;
  inline void set_reltome(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 GroupID = 5;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 5;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 reltome_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 groupid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAddFriendNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendChgGroupNameRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendChgGroupNameRequest();
  virtual ~CMessageFriendChgGroupNameRequest();
  
  CMessageFriendChgGroupNameRequest(const CMessageFriendChgGroupNameRequest& from);
  
  inline CMessageFriendChgGroupNameRequest& operator=(const CMessageFriendChgGroupNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendChgGroupNameRequest& default_instance();
  void Swap(CMessageFriendChgGroupNameRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendChgGroupNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendChgGroupNameRequest& from);
  void MergeFrom(const CMessageFriendChgGroupNameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string NewName = 1;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewNameFieldNumber = 1;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  
  // optional uint32 GroupID = 2;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* newname_;
  static const ::std::string _default_newname_;
  ::google::protobuf::uint32 groupid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendChgGroupNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendChgFriendGroupRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendChgFriendGroupRequest();
  virtual ~CMessageFriendChgFriendGroupRequest();
  
  CMessageFriendChgFriendGroupRequest(const CMessageFriendChgFriendGroupRequest& from);
  
  inline CMessageFriendChgFriendGroupRequest& operator=(const CMessageFriendChgFriendGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendChgFriendGroupRequest& default_instance();
  void Swap(CMessageFriendChgFriendGroupRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendChgFriendGroupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendChgFriendGroupRequest& from);
  void MergeFrom(const CMessageFriendChgFriendGroupRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 DesGroupID = 2;
  inline bool has_desgroupid() const;
  inline void clear_desgroupid();
  static const int kDesGroupIDFieldNumber = 2;
  inline ::google::protobuf::uint32 desgroupid() const;
  inline void set_desgroupid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 desgroupid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendChgFriendGroupRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendSendMessageRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendSendMessageRequest();
  virtual ~CMessageFriendSendMessageRequest();
  
  CMessageFriendSendMessageRequest(const CMessageFriendSendMessageRequest& from);
  
  inline CMessageFriendSendMessageRequest& operator=(const CMessageFriendSendMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendSendMessageRequest& default_instance();
  void Swap(CMessageFriendSendMessageRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendSendMessageRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendSendMessageRequest& from);
  void MergeFrom(const CMessageFriendSendMessageRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 AutoFlag = 3;
  inline bool has_autoflag() const;
  inline void clear_autoflag();
  static const int kAutoFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 autoflag() const;
  inline void set_autoflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 autoflag_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendSendMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendMessageNotice : public ::google::protobuf::Message {
 public:
  CMessageFriendMessageNotice();
  virtual ~CMessageFriendMessageNotice();
  
  CMessageFriendMessageNotice(const CMessageFriendMessageNotice& from);
  
  inline CMessageFriendMessageNotice& operator=(const CMessageFriendMessageNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendMessageNotice& default_instance();
  void Swap(CMessageFriendMessageNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendMessageNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendMessageNotice& from);
  void MergeFrom(const CMessageFriendMessageNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 AutoFlag = 2;
  inline bool has_autoflag() const;
  inline void clear_autoflag();
  static const int kAutoFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 autoflag() const;
  inline void set_autoflag(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 4;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 4;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional string Msg = 5;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 5;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
  // optional uint32 FaceID = 6;
  inline bool has_faceid() const;
  inline void clear_faceid();
  static const int kFaceIDFieldNumber = 6;
  inline ::google::protobuf::uint32 faceid() const;
  inline void set_faceid(::google::protobuf::uint32 value);
  
  // optional string Name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 SendTime = 18;
  inline bool has_sendtime() const;
  inline void clear_sendtime();
  static const int kSendTimeFieldNumber = 18;
  inline ::google::protobuf::uint32 sendtime() const;
  inline void set_sendtime(::google::protobuf::uint32 value);
  
  // optional uint32 CampID = 19;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 19;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 autoflag_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 sex_;
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  ::google::protobuf::uint32 faceid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 sendtime_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendMessageNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendMoveToBlackRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendMoveToBlackRequest();
  virtual ~CMessageFriendMoveToBlackRequest();
  
  CMessageFriendMoveToBlackRequest(const CMessageFriendMoveToBlackRequest& from);
  
  inline CMessageFriendMoveToBlackRequest& operator=(const CMessageFriendMoveToBlackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendMoveToBlackRequest& default_instance();
  void Swap(CMessageFriendMoveToBlackRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendMoveToBlackRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendMoveToBlackRequest& from);
  void MergeFrom(const CMessageFriendMoveToBlackRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendMoveToBlackRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendAddBlackRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendAddBlackRequest();
  virtual ~CMessageFriendAddBlackRequest();
  
  CMessageFriendAddBlackRequest(const CMessageFriendAddBlackRequest& from);
  
  inline CMessageFriendAddBlackRequest& operator=(const CMessageFriendAddBlackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendAddBlackRequest& default_instance();
  void Swap(CMessageFriendAddBlackRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendAddBlackRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendAddBlackRequest& from);
  void MergeFrom(const CMessageFriendAddBlackRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string DesName = 1;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 1;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendAddBlackRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendChgFriendGroupNotice : public ::google::protobuf::Message {
 public:
  CMessageFriendChgFriendGroupNotice();
  virtual ~CMessageFriendChgFriendGroupNotice();
  
  CMessageFriendChgFriendGroupNotice(const CMessageFriendChgFriendGroupNotice& from);
  
  inline CMessageFriendChgFriendGroupNotice& operator=(const CMessageFriendChgFriendGroupNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendChgFriendGroupNotice& default_instance();
  void Swap(CMessageFriendChgFriendGroupNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendChgFriendGroupNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendChgFriendGroupNotice& from);
  void MergeFrom(const CMessageFriendChgFriendGroupNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 DesGroupID = 2;
  inline bool has_desgroupid() const;
  inline void clear_desgroupid();
  static const int kDesGroupIDFieldNumber = 2;
  inline ::google::protobuf::uint32 desgroupid() const;
  inline void set_desgroupid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 desgroupid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendChgFriendGroupNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendMoveToBlackNotice : public ::google::protobuf::Message {
 public:
  CMessageFriendMoveToBlackNotice();
  virtual ~CMessageFriendMoveToBlackNotice();
  
  CMessageFriendMoveToBlackNotice(const CMessageFriendMoveToBlackNotice& from);
  
  inline CMessageFriendMoveToBlackNotice& operator=(const CMessageFriendMoveToBlackNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendMoveToBlackNotice& default_instance();
  void Swap(CMessageFriendMoveToBlackNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendMoveToBlackNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendMoveToBlackNotice& from);
  void MergeFrom(const CMessageFriendMoveToBlackNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendMoveToBlackNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendLockEnemyRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendLockEnemyRequest();
  virtual ~CMessageFriendLockEnemyRequest();
  
  CMessageFriendLockEnemyRequest(const CMessageFriendLockEnemyRequest& from);
  
  inline CMessageFriendLockEnemyRequest& operator=(const CMessageFriendLockEnemyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendLockEnemyRequest& default_instance();
  void Swap(CMessageFriendLockEnemyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendLockEnemyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendLockEnemyRequest& from);
  void MergeFrom(const CMessageFriendLockEnemyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 LockType = 2;
  inline bool has_locktype() const;
  inline void clear_locktype();
  static const int kLockTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 locktype() const;
  inline void set_locktype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 locktype_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendLockEnemyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendGetFriendsStateRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendGetFriendsStateRequest();
  virtual ~CMessageFriendGetFriendsStateRequest();
  
  CMessageFriendGetFriendsStateRequest(const CMessageFriendGetFriendsStateRequest& from);
  
  inline CMessageFriendGetFriendsStateRequest& operator=(const CMessageFriendGetFriendsStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendGetFriendsStateRequest& default_instance();
  void Swap(CMessageFriendGetFriendsStateRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendGetFriendsStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendGetFriendsStateRequest& from);
  void MergeFrom(const CMessageFriendGetFriendsStateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendGetFriendsStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendGetFriendsStateNotice : public ::google::protobuf::Message {
 public:
  CMessageFriendGetFriendsStateNotice();
  virtual ~CMessageFriendGetFriendsStateNotice();
  
  CMessageFriendGetFriendsStateNotice(const CMessageFriendGetFriendsStateNotice& from);
  
  inline CMessageFriendGetFriendsStateNotice& operator=(const CMessageFriendGetFriendsStateNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendGetFriendsStateNotice& default_instance();
  void Swap(CMessageFriendGetFriendsStateNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendGetFriendsStateNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendGetFriendsStateNotice& from);
  void MergeFrom(const CMessageFriendGetFriendsStateNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 States = 1;
  inline int states_size() const;
  inline void clear_states();
  static const int kStatesFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& states() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_states();
  inline ::google::protobuf::uint32 states(int index) const;
  inline void set_states(int index, ::google::protobuf::uint32 value);
  inline void add_states(::google::protobuf::uint32 value);
  
  // repeated uint32 Rels = 2;
  inline int rels_size() const;
  inline void clear_rels();
  static const int kRelsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& rels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_rels();
  inline ::google::protobuf::uint32 rels(int index) const;
  inline void set_rels(int index, ::google::protobuf::uint32 value);
  inline void add_rels(::google::protobuf::uint32 value);
  
  // repeated uint32 CharIDs = 3;
  inline int charids_size() const;
  inline void clear_charids();
  static const int kCharIDsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& charids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_charids();
  inline ::google::protobuf::uint32 charids(int index) const;
  inline void set_charids(int index, ::google::protobuf::uint32 value);
  inline void add_charids(::google::protobuf::uint32 value);
  
  // repeated uint32 VipFlag = 4;
  inline int vipflag_size() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& vipflag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_vipflag();
  inline ::google::protobuf::uint32 vipflag(int index) const;
  inline void set_vipflag(int index, ::google::protobuf::uint32 value);
  inline void add_vipflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > states_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rels_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > charids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vipflag_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendGetFriendsStateNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendUpdateEnemyRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendUpdateEnemyRequest();
  virtual ~CMessageFriendUpdateEnemyRequest();
  
  CMessageFriendUpdateEnemyRequest(const CMessageFriendUpdateEnemyRequest& from);
  
  inline CMessageFriendUpdateEnemyRequest& operator=(const CMessageFriendUpdateEnemyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendUpdateEnemyRequest& default_instance();
  void Swap(CMessageFriendUpdateEnemyRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendUpdateEnemyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendUpdateEnemyRequest& from);
  void MergeFrom(const CMessageFriendUpdateEnemyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 KillerCharID = 1;
  inline bool has_killercharid() const;
  inline void clear_killercharid();
  static const int kKillerCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 killercharid() const;
  inline void set_killercharid(::google::protobuf::uint32 value);
  
  // optional uint32 DelEnemyCharID = 2;
  inline bool has_delenemycharid() const;
  inline void clear_delenemycharid();
  static const int kDelEnemyCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 delenemycharid() const;
  inline void set_delenemycharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 killercharid_;
  ::google::protobuf::uint32 delenemycharid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendUpdateEnemyRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeMasterRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeMasterRequest();
  virtual ~CMessageChangeMasterRequest();
  
  CMessageChangeMasterRequest(const CMessageChangeMasterRequest& from);
  
  inline CMessageChangeMasterRequest& operator=(const CMessageChangeMasterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeMasterRequest& default_instance();
  void Swap(CMessageChangeMasterRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeMasterRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeMasterRequest& from);
  void MergeFrom(const CMessageChangeMasterRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string MasterName = 1;
  inline bool has_mastername() const;
  inline void clear_mastername();
  static const int kMasterNameFieldNumber = 1;
  inline const ::std::string& mastername() const;
  inline void set_mastername(const ::std::string& value);
  inline void set_mastername(const char* value);
  inline void set_mastername(const char* value, size_t size);
  inline ::std::string* mutable_mastername();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // repeated uint32 MasterID = 4;
  inline int masterid_size() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& masterid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_masterid();
  inline ::google::protobuf::uint32 masterid(int index) const;
  inline void set_masterid(int index, ::google::protobuf::uint32 value);
  inline void add_masterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* mastername_;
  static const ::std::string _default_mastername_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > masterid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeMasterRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeMasterResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeMasterResponse();
  virtual ~CMessageChangeMasterResponse();
  
  CMessageChangeMasterResponse(const CMessageChangeMasterResponse& from);
  
  inline CMessageChangeMasterResponse& operator=(const CMessageChangeMasterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeMasterResponse& default_instance();
  void Swap(CMessageChangeMasterResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeMasterResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeMasterResponse& from);
  void MergeFrom(const CMessageChangeMasterResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 MasterID = 2;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 2;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
  // optional string MasterName = 3;
  inline bool has_mastername() const;
  inline void clear_mastername();
  static const int kMasterNameFieldNumber = 3;
  inline const ::std::string& mastername() const;
  inline void set_mastername(const ::std::string& value);
  inline void set_mastername(const char* value);
  inline void set_mastername(const char* value, size_t size);
  inline ::std::string* mutable_mastername();
  
  // optional uint32 CharID = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 6;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 6;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 masterid_;
  ::std::string* mastername_;
  static const ::std::string _default_mastername_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 metier_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeMasterResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeMasterNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeMasterNotify();
  virtual ~CMessageChangeMasterNotify();
  
  CMessageChangeMasterNotify(const CMessageChangeMasterNotify& from);
  
  inline CMessageChangeMasterNotify& operator=(const CMessageChangeMasterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeMasterNotify& default_instance();
  void Swap(CMessageChangeMasterNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeMasterNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeMasterNotify& from);
  void MergeFrom(const CMessageChangeMasterNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .SlaveInfo Slave = 1;
  inline bool has_slave() const;
  inline void clear_slave();
  static const int kSlaveFieldNumber = 1;
  inline const ::SlaveInfo& slave() const;
  inline ::SlaveInfo* mutable_slave();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::SlaveInfo* slave_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeMasterNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetSlaveRequest : public ::google::protobuf::Message {
 public:
  CMessageGetSlaveRequest();
  virtual ~CMessageGetSlaveRequest();
  
  CMessageGetSlaveRequest(const CMessageGetSlaveRequest& from);
  
  inline CMessageGetSlaveRequest& operator=(const CMessageGetSlaveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetSlaveRequest& default_instance();
  void Swap(CMessageGetSlaveRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetSlaveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetSlaveRequest& from);
  void MergeFrom(const CMessageGetSlaveRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 SlaveID = 1;
  inline int slaveid_size() const;
  inline void clear_slaveid();
  static const int kSlaveIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slaveid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slaveid();
  inline ::google::protobuf::uint32 slaveid(int index) const;
  inline void set_slaveid(int index, ::google::protobuf::uint32 value);
  inline void add_slaveid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // repeated uint32 MasterID = 4;
  inline int masterid_size() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& masterid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_masterid();
  inline ::google::protobuf::uint32 masterid(int index) const;
  inline void set_masterid(int index, ::google::protobuf::uint32 value);
  inline void add_masterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slaveid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > masterid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetSlaveRequest* default_instance_;
};
// -------------------------------------------------------------------

class SlaveInfo : public ::google::protobuf::Message {
 public:
  SlaveInfo();
  virtual ~SlaveInfo();
  
  SlaveInfo(const SlaveInfo& from);
  
  inline SlaveInfo& operator=(const SlaveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlaveInfo& default_instance();
  void Swap(SlaveInfo* other);
  
  // implements Message ----------------------------------------------
  
  SlaveInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlaveInfo& from);
  void MergeFrom(const SlaveInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SlaveID = 1;
  inline bool has_slaveid() const;
  inline void clear_slaveid();
  static const int kSlaveIDFieldNumber = 1;
  inline ::google::protobuf::uint32 slaveid() const;
  inline void set_slaveid(::google::protobuf::uint32 value);
  
  // optional string SlaveName = 2;
  inline bool has_slavename() const;
  inline void clear_slavename();
  static const int kSlaveNameFieldNumber = 2;
  inline const ::std::string& slavename() const;
  inline void set_slavename(const ::std::string& value);
  inline void set_slavename(const char* value);
  inline void set_slavename(const char* value, size_t size);
  inline ::std::string* mutable_slavename();
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Metier = 4;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 4;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Face = 5;
  inline bool has_face() const;
  inline void clear_face();
  static const int kFaceFieldNumber = 5;
  inline ::google::protobuf::uint32 face() const;
  inline void set_face(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 Online = 7;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 7;
  inline ::google::protobuf::uint32 online() const;
  inline void set_online(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 slaveid_;
  ::std::string* slavename_;
  static const ::std::string _default_slavename_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 face_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 online_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SlaveInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetSlaveResponse : public ::google::protobuf::Message {
 public:
  CMessageGetSlaveResponse();
  virtual ~CMessageGetSlaveResponse();
  
  CMessageGetSlaveResponse(const CMessageGetSlaveResponse& from);
  
  inline CMessageGetSlaveResponse& operator=(const CMessageGetSlaveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetSlaveResponse& default_instance();
  void Swap(CMessageGetSlaveResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetSlaveResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetSlaveResponse& from);
  void MergeFrom(const CMessageGetSlaveResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // repeated .SlaveInfo Slave = 2;
  inline int slave_size() const;
  inline void clear_slave();
  static const int kSlaveFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >& slave() const;
  inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >* mutable_slave();
  inline const ::SlaveInfo& slave(int index) const;
  inline ::SlaveInfo* mutable_slave(int index);
  inline ::SlaveInfo* add_slave();
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated .SlaveInfo Master = 4;
  inline int master_size() const;
  inline void clear_master();
  static const int kMasterFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >& master() const;
  inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >* mutable_master();
  inline const ::SlaveInfo& master(int index) const;
  inline ::SlaveInfo* mutable_master(int index);
  inline ::SlaveInfo* add_master();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::RepeatedPtrField< ::SlaveInfo > slave_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedPtrField< ::SlaveInfo > master_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetSlaveResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSlaveLevelUpNotify : public ::google::protobuf::Message {
 public:
  CMessageSlaveLevelUpNotify();
  virtual ~CMessageSlaveLevelUpNotify();
  
  CMessageSlaveLevelUpNotify(const CMessageSlaveLevelUpNotify& from);
  
  inline CMessageSlaveLevelUpNotify& operator=(const CMessageSlaveLevelUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSlaveLevelUpNotify& default_instance();
  void Swap(CMessageSlaveLevelUpNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSlaveLevelUpNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSlaveLevelUpNotify& from);
  void MergeFrom(const CMessageSlaveLevelUpNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .SlaveInfo Slave = 1;
  inline bool has_slave() const;
  inline void clear_slave();
  static const int kSlaveFieldNumber = 1;
  inline const ::SlaveInfo& slave() const;
  inline ::SlaveInfo* mutable_slave();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::SlaveInfo* slave_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSlaveLevelUpNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAnswerChangeNotify : public ::google::protobuf::Message {
 public:
  CMessageAnswerChangeNotify();
  virtual ~CMessageAnswerChangeNotify();
  
  CMessageAnswerChangeNotify(const CMessageAnswerChangeNotify& from);
  
  inline CMessageAnswerChangeNotify& operator=(const CMessageAnswerChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAnswerChangeNotify& default_instance();
  void Swap(CMessageAnswerChangeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAnswerChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAnswerChangeNotify& from);
  void MergeFrom(const CMessageAnswerChangeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .SlaveInfo Slave = 1;
  inline bool has_slave() const;
  inline void clear_slave();
  static const int kSlaveFieldNumber = 1;
  inline const ::SlaveInfo& slave() const;
  inline ::SlaveInfo* mutable_slave();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::SlaveInfo* slave_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAnswerChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAnswerChangeRequest : public ::google::protobuf::Message {
 public:
  CMessageAnswerChangeRequest();
  virtual ~CMessageAnswerChangeRequest();
  
  CMessageAnswerChangeRequest(const CMessageAnswerChangeRequest& from);
  
  inline CMessageAnswerChangeRequest& operator=(const CMessageAnswerChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAnswerChangeRequest& default_instance();
  void Swap(CMessageAnswerChangeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAnswerChangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAnswerChangeRequest& from);
  void MergeFrom(const CMessageAnswerChangeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 SlaveID = 3;
  inline bool has_slaveid() const;
  inline void clear_slaveid();
  static const int kSlaveIDFieldNumber = 3;
  inline ::google::protobuf::uint32 slaveid() const;
  inline void set_slaveid(::google::protobuf::uint32 value);
  
  // optional uint32 Error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::google::protobuf::uint32 error() const;
  inline void set_error(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 slaveid_;
  ::google::protobuf::uint32 error_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAnswerChangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryPlayerRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryPlayerRequest();
  virtual ~CMessageQueryPlayerRequest();
  
  CMessageQueryPlayerRequest(const CMessageQueryPlayerRequest& from);
  
  inline CMessageQueryPlayerRequest& operator=(const CMessageQueryPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryPlayerRequest& default_instance();
  void Swap(CMessageQueryPlayerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryPlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryPlayerRequest& from);
  void MergeFrom(const CMessageQueryPlayerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 QueryID = 1;
  inline int queryid_size() const;
  inline void clear_queryid();
  static const int kQueryIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& queryid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_queryid();
  inline ::google::protobuf::uint32 queryid(int index) const;
  inline void set_queryid(int index, ::google::protobuf::uint32 value);
  inline void add_queryid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > queryid_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryPlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryPlayerResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryPlayerResponse();
  virtual ~CMessageQueryPlayerResponse();
  
  CMessageQueryPlayerResponse(const CMessageQueryPlayerResponse& from);
  
  inline CMessageQueryPlayerResponse& operator=(const CMessageQueryPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryPlayerResponse& default_instance();
  void Swap(CMessageQueryPlayerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryPlayerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryPlayerResponse& from);
  void MergeFrom(const CMessageQueryPlayerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SlaveInfo Info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >& info() const;
  inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >* mutable_info();
  inline const ::SlaveInfo& info(int index) const;
  inline ::SlaveInfo* mutable_info(int index);
  inline ::SlaveInfo* add_info();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::SlaveInfo > info_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryPlayerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSlaveOnOffNotify : public ::google::protobuf::Message {
 public:
  CMessageSlaveOnOffNotify();
  virtual ~CMessageSlaveOnOffNotify();
  
  CMessageSlaveOnOffNotify(const CMessageSlaveOnOffNotify& from);
  
  inline CMessageSlaveOnOffNotify& operator=(const CMessageSlaveOnOffNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSlaveOnOffNotify& default_instance();
  void Swap(CMessageSlaveOnOffNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSlaveOnOffNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSlaveOnOffNotify& from);
  void MergeFrom(const CMessageSlaveOnOffNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional string SrcCharName = 2;
  inline bool has_srccharname() const;
  inline void clear_srccharname();
  static const int kSrcCharNameFieldNumber = 2;
  inline const ::std::string& srccharname() const;
  inline void set_srccharname(const ::std::string& value);
  inline void set_srccharname(const char* value);
  inline void set_srccharname(const char* value, size_t size);
  inline ::std::string* mutable_srccharname();
  
  // optional uint32 Online = 3;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 online() const;
  inline void set_online(::google::protobuf::uint32 value);
  
  // repeated uint32 DesCharID = 4;
  inline int descharid_size() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& descharid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_descharid();
  inline ::google::protobuf::uint32 descharid(int index) const;
  inline void set_descharid(int index, ::google::protobuf::uint32 value);
  inline void add_descharid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::std::string* srccharname_;
  static const ::std::string _default_srccharname_;
  ::google::protobuf::uint32 online_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > descharid_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSlaveOnOffNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSlaveNumNotify : public ::google::protobuf::Message {
 public:
  CMessageSlaveNumNotify();
  virtual ~CMessageSlaveNumNotify();
  
  CMessageSlaveNumNotify(const CMessageSlaveNumNotify& from);
  
  inline CMessageSlaveNumNotify& operator=(const CMessageSlaveNumNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSlaveNumNotify& default_instance();
  void Swap(CMessageSlaveNumNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSlaveNumNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSlaveNumNotify& from);
  void MergeFrom(const CMessageSlaveNumNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 SlaveValue = 1;
  inline int slavevalue_size() const;
  inline void clear_slavevalue();
  static const int kSlaveValueFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slavevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slavevalue();
  inline ::google::protobuf::uint32 slavevalue(int index) const;
  inline void set_slavevalue(int index, ::google::protobuf::uint32 value);
  inline void add_slavevalue(::google::protobuf::uint32 value);
  
  // optional uint32 SlavePoint = 2;
  inline bool has_slavepoint() const;
  inline void clear_slavepoint();
  static const int kSlavePointFieldNumber = 2;
  inline ::google::protobuf::uint32 slavepoint() const;
  inline void set_slavepoint(::google::protobuf::uint32 value);
  
  // optional uint32 MasterPoint = 3;
  inline bool has_masterpoint() const;
  inline void clear_masterpoint();
  static const int kMasterPointFieldNumber = 3;
  inline ::google::protobuf::uint32 masterpoint() const;
  inline void set_masterpoint(::google::protobuf::uint32 value);
  
  // optional uint32 SlaveTotal = 4;
  inline bool has_slavetotal() const;
  inline void clear_slavetotal();
  static const int kSlaveTotalFieldNumber = 4;
  inline ::google::protobuf::uint32 slavetotal() const;
  inline void set_slavetotal(::google::protobuf::uint32 value);
  
  // optional uint32 MasterTotal = 5;
  inline bool has_mastertotal() const;
  inline void clear_mastertotal();
  static const int kMasterTotalFieldNumber = 5;
  inline ::google::protobuf::uint32 mastertotal() const;
  inline void set_mastertotal(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slavevalue_;
  ::google::protobuf::uint32 slavepoint_;
  ::google::protobuf::uint32 masterpoint_;
  ::google::protobuf::uint32 slavetotal_;
  ::google::protobuf::uint32 mastertotal_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSlaveNumNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRemoveSlaveRequest : public ::google::protobuf::Message {
 public:
  CMessageRemoveSlaveRequest();
  virtual ~CMessageRemoveSlaveRequest();
  
  CMessageRemoveSlaveRequest(const CMessageRemoveSlaveRequest& from);
  
  inline CMessageRemoveSlaveRequest& operator=(const CMessageRemoveSlaveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRemoveSlaveRequest& default_instance();
  void Swap(CMessageRemoveSlaveRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRemoveSlaveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRemoveSlaveRequest& from);
  void MergeFrom(const CMessageRemoveSlaveRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SlaveID = 1;
  inline bool has_slaveid() const;
  inline void clear_slaveid();
  static const int kSlaveIDFieldNumber = 1;
  inline ::google::protobuf::uint32 slaveid() const;
  inline void set_slaveid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 slaveid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRemoveSlaveRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRemoveSlaveResponse : public ::google::protobuf::Message {
 public:
  CMessageRemoveSlaveResponse();
  virtual ~CMessageRemoveSlaveResponse();
  
  CMessageRemoveSlaveResponse(const CMessageRemoveSlaveResponse& from);
  
  inline CMessageRemoveSlaveResponse& operator=(const CMessageRemoveSlaveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRemoveSlaveResponse& default_instance();
  void Swap(CMessageRemoveSlaveResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRemoveSlaveResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRemoveSlaveResponse& from);
  void MergeFrom(const CMessageRemoveSlaveResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 SlaveID = 3;
  inline bool has_slaveid() const;
  inline void clear_slaveid();
  static const int kSlaveIDFieldNumber = 3;
  inline ::google::protobuf::uint32 slaveid() const;
  inline void set_slaveid(::google::protobuf::uint32 value);
  
  // optional uint32 Param = 4;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 4;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 slaveid_;
  ::google::protobuf::uint32 param_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRemoveSlaveResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRemoveSlaveNotify : public ::google::protobuf::Message {
 public:
  CMessageRemoveSlaveNotify();
  virtual ~CMessageRemoveSlaveNotify();
  
  CMessageRemoveSlaveNotify(const CMessageRemoveSlaveNotify& from);
  
  inline CMessageRemoveSlaveNotify& operator=(const CMessageRemoveSlaveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRemoveSlaveNotify& default_instance();
  void Swap(CMessageRemoveSlaveNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRemoveSlaveNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRemoveSlaveNotify& from);
  void MergeFrom(const CMessageRemoveSlaveNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 MasterID = 2;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 2;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 masterid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRemoveSlaveNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRemoveMasterRequest : public ::google::protobuf::Message {
 public:
  CMessageRemoveMasterRequest();
  virtual ~CMessageRemoveMasterRequest();
  
  CMessageRemoveMasterRequest(const CMessageRemoveMasterRequest& from);
  
  inline CMessageRemoveMasterRequest& operator=(const CMessageRemoveMasterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRemoveMasterRequest& default_instance();
  void Swap(CMessageRemoveMasterRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRemoveMasterRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRemoveMasterRequest& from);
  void MergeFrom(const CMessageRemoveMasterRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MasterID = 1;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 1;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 masterid_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRemoveMasterRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRemoveMasterResponse : public ::google::protobuf::Message {
 public:
  CMessageRemoveMasterResponse();
  virtual ~CMessageRemoveMasterResponse();
  
  CMessageRemoveMasterResponse(const CMessageRemoveMasterResponse& from);
  
  inline CMessageRemoveMasterResponse& operator=(const CMessageRemoveMasterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRemoveMasterResponse& default_instance();
  void Swap(CMessageRemoveMasterResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRemoveMasterResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRemoveMasterResponse& from);
  void MergeFrom(const CMessageRemoveMasterResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 MasterID = 3;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 3;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 masterid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRemoveMasterResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRemoveMasterNotify : public ::google::protobuf::Message {
 public:
  CMessageRemoveMasterNotify();
  virtual ~CMessageRemoveMasterNotify();
  
  CMessageRemoveMasterNotify(const CMessageRemoveMasterNotify& from);
  
  inline CMessageRemoveMasterNotify& operator=(const CMessageRemoveMasterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRemoveMasterNotify& default_instance();
  void Swap(CMessageRemoveMasterNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRemoveMasterNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRemoveMasterNotify& from);
  void MergeFrom(const CMessageRemoveMasterNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 SlaveID = 2;
  inline bool has_slaveid() const;
  inline void clear_slaveid();
  static const int kSlaveIDFieldNumber = 2;
  inline ::google::protobuf::uint32 slaveid() const;
  inline void set_slaveid(::google::protobuf::uint32 value);
  
  // optional uint32 Param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 slaveid_;
  ::google::protobuf::uint32 param_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRemoveMasterNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAlterMasterPercentRequest : public ::google::protobuf::Message {
 public:
  CMessageAlterMasterPercentRequest();
  virtual ~CMessageAlterMasterPercentRequest();
  
  CMessageAlterMasterPercentRequest(const CMessageAlterMasterPercentRequest& from);
  
  inline CMessageAlterMasterPercentRequest& operator=(const CMessageAlterMasterPercentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAlterMasterPercentRequest& default_instance();
  void Swap(CMessageAlterMasterPercentRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAlterMasterPercentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAlterMasterPercentRequest& from);
  void MergeFrom(const CMessageAlterMasterPercentRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MasterID = 1;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 1;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
  // optional uint32 Percent = 2;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 2;
  inline ::google::protobuf::uint32 percent() const;
  inline void set_percent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 masterid_;
  ::google::protobuf::uint32 percent_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAlterMasterPercentRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAlterMasterPercentResponse : public ::google::protobuf::Message {
 public:
  CMessageAlterMasterPercentResponse();
  virtual ~CMessageAlterMasterPercentResponse();
  
  CMessageAlterMasterPercentResponse(const CMessageAlterMasterPercentResponse& from);
  
  inline CMessageAlterMasterPercentResponse& operator=(const CMessageAlterMasterPercentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAlterMasterPercentResponse& default_instance();
  void Swap(CMessageAlterMasterPercentResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAlterMasterPercentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAlterMasterPercentResponse& from);
  void MergeFrom(const CMessageAlterMasterPercentResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 MasterID = 2;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 2;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
  // optional uint32 Percent = 3;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 3;
  inline ::google::protobuf::uint32 percent() const;
  inline void set_percent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 masterid_;
  ::google::protobuf::uint32 percent_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAlterMasterPercentResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetLowPlayerRequest : public ::google::protobuf::Message {
 public:
  CMessageGetLowPlayerRequest();
  virtual ~CMessageGetLowPlayerRequest();
  
  CMessageGetLowPlayerRequest(const CMessageGetLowPlayerRequest& from);
  
  inline CMessageGetLowPlayerRequest& operator=(const CMessageGetLowPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetLowPlayerRequest& default_instance();
  void Swap(CMessageGetLowPlayerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetLowPlayerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetLowPlayerRequest& from);
  void MergeFrom(const CMessageGetLowPlayerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NPCEntityID = 1;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetLowPlayerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetLowPlayerResponse : public ::google::protobuf::Message {
 public:
  CMessageGetLowPlayerResponse();
  virtual ~CMessageGetLowPlayerResponse();
  
  CMessageGetLowPlayerResponse(const CMessageGetLowPlayerResponse& from);
  
  inline CMessageGetLowPlayerResponse& operator=(const CMessageGetLowPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetLowPlayerResponse& default_instance();
  void Swap(CMessageGetLowPlayerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetLowPlayerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetLowPlayerResponse& from);
  void MergeFrom(const CMessageGetLowPlayerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // repeated .SlaveInfo Player = 2;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >& player() const;
  inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >* mutable_player();
  inline const ::SlaveInfo& player(int index) const;
  inline ::SlaveInfo* mutable_player(int index);
  inline ::SlaveInfo* add_player();
  
  // repeated .SlaveInfo Required = 3;
  inline int required_size() const;
  inline void clear_required();
  static const int kRequiredFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >& required() const;
  inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >* mutable_required();
  inline const ::SlaveInfo& required(int index) const;
  inline ::SlaveInfo* mutable_required(int index);
  inline ::SlaveInfo* add_required();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::RepeatedPtrField< ::SlaveInfo > player_;
  ::google::protobuf::RepeatedPtrField< ::SlaveInfo > required_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetLowPlayerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendLevelUpNotify : public ::google::protobuf::Message {
 public:
  CMessageFriendLevelUpNotify();
  virtual ~CMessageFriendLevelUpNotify();
  
  CMessageFriendLevelUpNotify(const CMessageFriendLevelUpNotify& from);
  
  inline CMessageFriendLevelUpNotify& operator=(const CMessageFriendLevelUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendLevelUpNotify& default_instance();
  void Swap(CMessageFriendLevelUpNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendLevelUpNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendLevelUpNotify& from);
  void MergeFrom(const CMessageFriendLevelUpNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 RoleID = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 4;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 level_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendLevelUpNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendBlessRequest : public ::google::protobuf::Message {
 public:
  CMessageFriendBlessRequest();
  virtual ~CMessageFriendBlessRequest();
  
  CMessageFriendBlessRequest(const CMessageFriendBlessRequest& from);
  
  inline CMessageFriendBlessRequest& operator=(const CMessageFriendBlessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendBlessRequest& default_instance();
  void Swap(CMessageFriendBlessRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendBlessRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendBlessRequest& from);
  void MergeFrom(const CMessageFriendBlessRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendBlessRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendBlessResponse : public ::google::protobuf::Message {
 public:
  CMessageFriendBlessResponse();
  virtual ~CMessageFriendBlessResponse();
  
  CMessageFriendBlessResponse(const CMessageFriendBlessResponse& from);
  
  inline CMessageFriendBlessResponse& operator=(const CMessageFriendBlessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendBlessResponse& default_instance();
  void Swap(CMessageFriendBlessResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendBlessResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendBlessResponse& from);
  void MergeFrom(const CMessageFriendBlessResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendBlessResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageFriendBlessNotify : public ::google::protobuf::Message {
 public:
  CMessageFriendBlessNotify();
  virtual ~CMessageFriendBlessNotify();
  
  CMessageFriendBlessNotify(const CMessageFriendBlessNotify& from);
  
  inline CMessageFriendBlessNotify& operator=(const CMessageFriendBlessNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageFriendBlessNotify& default_instance();
  void Swap(CMessageFriendBlessNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageFriendBlessNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageFriendBlessNotify& from);
  void MergeFrom(const CMessageFriendBlessNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional string FriendName = 2;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendNameFieldNumber = 2;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  
  // optional uint32 Exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::std::string* friendname_;
  static const ::std::string _default_friendname_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageFriendBlessNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifyIntimacyNogify : public ::google::protobuf::Message {
 public:
  CMessageModifyIntimacyNogify();
  virtual ~CMessageModifyIntimacyNogify();
  
  CMessageModifyIntimacyNogify(const CMessageModifyIntimacyNogify& from);
  
  inline CMessageModifyIntimacyNogify& operator=(const CMessageModifyIntimacyNogify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifyIntimacyNogify& default_instance();
  void Swap(CMessageModifyIntimacyNogify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifyIntimacyNogify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifyIntimacyNogify& from);
  void MergeFrom(const CMessageModifyIntimacyNogify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 ChangeValue = 2;
  inline bool has_changevalue() const;
  inline void clear_changevalue();
  static const int kChangeValueFieldNumber = 2;
  inline ::google::protobuf::uint32 changevalue() const;
  inline void set_changevalue(::google::protobuf::uint32 value);
  
  // optional uint32 IntimacyDegree = 3;
  inline bool has_intimacydegree() const;
  inline void clear_intimacydegree();
  static const int kIntimacyDegreeFieldNumber = 3;
  inline ::google::protobuf::uint32 intimacydegree() const;
  inline void set_intimacydegree(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 FriendID = 5;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIDFieldNumber = 5;
  inline ::google::protobuf::uint32 friendid() const;
  inline void set_friendid(::google::protobuf::uint32 value);
  
  // optional uint32 UpdateTime = 7;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint32 value);
  
  // optional uint32 DailyIntimacy = 8;
  inline bool has_dailyintimacy() const;
  inline void clear_dailyintimacy();
  static const int kDailyIntimacyFieldNumber = 8;
  inline ::google::protobuf::uint32 dailyintimacy() const;
  inline void set_dailyintimacy(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 changevalue_;
  ::google::protobuf::uint32 intimacydegree_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 friendid_;
  ::google::protobuf::uint32 updatetime_;
  ::google::protobuf::uint32 dailyintimacy_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifyIntimacyNogify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifyLastTimeAllOnLineNotify : public ::google::protobuf::Message {
 public:
  CMessageModifyLastTimeAllOnLineNotify();
  virtual ~CMessageModifyLastTimeAllOnLineNotify();
  
  CMessageModifyLastTimeAllOnLineNotify(const CMessageModifyLastTimeAllOnLineNotify& from);
  
  inline CMessageModifyLastTimeAllOnLineNotify& operator=(const CMessageModifyLastTimeAllOnLineNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifyLastTimeAllOnLineNotify& default_instance();
  void Swap(CMessageModifyLastTimeAllOnLineNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifyLastTimeAllOnLineNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifyLastTimeAllOnLineNotify& from);
  void MergeFrom(const CMessageModifyLastTimeAllOnLineNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 Time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 FriendID = 3;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIDFieldNumber = 3;
  inline ::google::protobuf::uint32 friendid() const;
  inline void set_friendid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 friendid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifyLastTimeAllOnLineNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateSwornTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageCreateSwornTeamRequest();
  virtual ~CMessageCreateSwornTeamRequest();
  
  CMessageCreateSwornTeamRequest(const CMessageCreateSwornTeamRequest& from);
  
  inline CMessageCreateSwornTeamRequest& operator=(const CMessageCreateSwornTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateSwornTeamRequest& default_instance();
  void Swap(CMessageCreateSwornTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateSwornTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateSwornTeamRequest& from);
  void MergeFrom(const CMessageCreateSwornTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SwornName = 1;
  inline bool has_swornname() const;
  inline void clear_swornname();
  static const int kSwornNameFieldNumber = 1;
  inline const ::std::string& swornname() const;
  inline void set_swornname(const ::std::string& value);
  inline void set_swornname(const char* value);
  inline void set_swornname(const char* value, size_t size);
  inline ::std::string* mutable_swornname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* swornname_;
  static const ::std::string _default_swornname_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateSwornTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateSwornTeamResponse : public ::google::protobuf::Message {
 public:
  CMessageCreateSwornTeamResponse();
  virtual ~CMessageCreateSwornTeamResponse();
  
  CMessageCreateSwornTeamResponse(const CMessageCreateSwornTeamResponse& from);
  
  inline CMessageCreateSwornTeamResponse& operator=(const CMessageCreateSwornTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateSwornTeamResponse& default_instance();
  void Swap(CMessageCreateSwornTeamResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateSwornTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateSwornTeamResponse& from);
  void MergeFrom(const CMessageCreateSwornTeamResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateSwornTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLeaveSwornTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageLeaveSwornTeamRequest();
  virtual ~CMessageLeaveSwornTeamRequest();
  
  CMessageLeaveSwornTeamRequest(const CMessageLeaveSwornTeamRequest& from);
  
  inline CMessageLeaveSwornTeamRequest& operator=(const CMessageLeaveSwornTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLeaveSwornTeamRequest& default_instance();
  void Swap(CMessageLeaveSwornTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLeaveSwornTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLeaveSwornTeamRequest& from);
  void MergeFrom(const CMessageLeaveSwornTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLeaveSwornTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLeaveSwornTeamResponse : public ::google::protobuf::Message {
 public:
  CMessageLeaveSwornTeamResponse();
  virtual ~CMessageLeaveSwornTeamResponse();
  
  CMessageLeaveSwornTeamResponse(const CMessageLeaveSwornTeamResponse& from);
  
  inline CMessageLeaveSwornTeamResponse& operator=(const CMessageLeaveSwornTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLeaveSwornTeamResponse& default_instance();
  void Swap(CMessageLeaveSwornTeamResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLeaveSwornTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLeaveSwornTeamResponse& from);
  void MergeFrom(const CMessageLeaveSwornTeamResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLeaveSwornTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickSwornMemberRequest : public ::google::protobuf::Message {
 public:
  CMessageKickSwornMemberRequest();
  virtual ~CMessageKickSwornMemberRequest();
  
  CMessageKickSwornMemberRequest(const CMessageKickSwornMemberRequest& from);
  
  inline CMessageKickSwornMemberRequest& operator=(const CMessageKickSwornMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickSwornMemberRequest& default_instance();
  void Swap(CMessageKickSwornMemberRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickSwornMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickSwornMemberRequest& from);
  void MergeFrom(const CMessageKickSwornMemberRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickSwornMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickSwornMemberResponse : public ::google::protobuf::Message {
 public:
  CMessageKickSwornMemberResponse();
  virtual ~CMessageKickSwornMemberResponse();
  
  CMessageKickSwornMemberResponse(const CMessageKickSwornMemberResponse& from);
  
  inline CMessageKickSwornMemberResponse& operator=(const CMessageKickSwornMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickSwornMemberResponse& default_instance();
  void Swap(CMessageKickSwornMemberResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickSwornMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickSwornMemberResponse& from);
  void MergeFrom(const CMessageKickSwornMemberResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickSwornMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDisbandSwornTeamRequest : public ::google::protobuf::Message {
 public:
  CMessageDisbandSwornTeamRequest();
  virtual ~CMessageDisbandSwornTeamRequest();
  
  CMessageDisbandSwornTeamRequest(const CMessageDisbandSwornTeamRequest& from);
  
  inline CMessageDisbandSwornTeamRequest& operator=(const CMessageDisbandSwornTeamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDisbandSwornTeamRequest& default_instance();
  void Swap(CMessageDisbandSwornTeamRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDisbandSwornTeamRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDisbandSwornTeamRequest& from);
  void MergeFrom(const CMessageDisbandSwornTeamRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDisbandSwornTeamRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDisbandSwornTeamResponse : public ::google::protobuf::Message {
 public:
  CMessageDisbandSwornTeamResponse();
  virtual ~CMessageDisbandSwornTeamResponse();
  
  CMessageDisbandSwornTeamResponse(const CMessageDisbandSwornTeamResponse& from);
  
  inline CMessageDisbandSwornTeamResponse& operator=(const CMessageDisbandSwornTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDisbandSwornTeamResponse& default_instance();
  void Swap(CMessageDisbandSwornTeamResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDisbandSwornTeamResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDisbandSwornTeamResponse& from);
  void MergeFrom(const CMessageDisbandSwornTeamResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDisbandSwornTeamResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSwornMember : public ::google::protobuf::Message {
 public:
  CMsgSwornMember();
  virtual ~CMsgSwornMember();
  
  CMsgSwornMember(const CMsgSwornMember& from);
  
  inline CMsgSwornMember& operator=(const CMsgSwornMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSwornMember& default_instance();
  void Swap(CMsgSwornMember* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSwornMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSwornMember& from);
  void MergeFrom(const CMsgSwornMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RoleID = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional string RoleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional uint32 RolePos = 3;
  inline bool has_rolepos() const;
  inline void clear_rolepos();
  static const int kRolePosFieldNumber = 3;
  inline ::google::protobuf::uint32 rolepos() const;
  inline void set_rolepos(::google::protobuf::uint32 value);
  
  // optional uint32 FaceID = 4;
  inline bool has_faceid() const;
  inline void clear_faceid();
  static const int kFaceIDFieldNumber = 4;
  inline ::google::protobuf::uint32 faceid() const;
  inline void set_faceid(::google::protobuf::uint32 value);
  
  // optional uint32 RoleLevel = 5;
  inline bool has_rolelevel() const;
  inline void clear_rolelevel();
  static const int kRoleLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 rolelevel() const;
  inline void set_rolelevel(::google::protobuf::uint32 value);
  
  // optional uint32 MetierID = 6;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 6;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // optional uint32 GenderID = 7;
  inline bool has_genderid() const;
  inline void clear_genderid();
  static const int kGenderIDFieldNumber = 7;
  inline ::google::protobuf::uint32 genderid() const;
  inline void set_genderid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::uint32 rolepos_;
  ::google::protobuf::uint32 faceid_;
  ::google::protobuf::uint32 rolelevel_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::uint32 genderid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMsgSwornMember* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSwornInfoNotify : public ::google::protobuf::Message {
 public:
  CMessageSwornInfoNotify();
  virtual ~CMessageSwornInfoNotify();
  
  CMessageSwornInfoNotify(const CMessageSwornInfoNotify& from);
  
  inline CMessageSwornInfoNotify& operator=(const CMessageSwornInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSwornInfoNotify& default_instance();
  void Swap(CMessageSwornInfoNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSwornInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSwornInfoNotify& from);
  void MergeFrom(const CMessageSwornInfoNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgSwornMember SwornMember = 1;
  inline int swornmember_size() const;
  inline void clear_swornmember();
  static const int kSwornMemberFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >& swornmember() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >* mutable_swornmember();
  inline const ::CMsgSwornMember& swornmember(int index) const;
  inline ::CMsgSwornMember* mutable_swornmember(int index);
  inline ::CMsgSwornMember* add_swornmember();
  
  // optional string SwornName = 2;
  inline bool has_swornname() const;
  inline void clear_swornname();
  static const int kSwornNameFieldNumber = 2;
  inline const ::std::string& swornname() const;
  inline void set_swornname(const ::std::string& value);
  inline void set_swornname(const char* value);
  inline void set_swornname(const char* value, size_t size);
  inline ::std::string* mutable_swornname();
  
  // optional uint32 RoleID = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember > swornmember_;
  ::std::string* swornname_;
  static const ::std::string _default_swornname_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSwornInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCreateSwornTeamNotify : public ::google::protobuf::Message {
 public:
  CMessageCreateSwornTeamNotify();
  virtual ~CMessageCreateSwornTeamNotify();
  
  CMessageCreateSwornTeamNotify(const CMessageCreateSwornTeamNotify& from);
  
  inline CMessageCreateSwornTeamNotify& operator=(const CMessageCreateSwornTeamNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCreateSwornTeamNotify& default_instance();
  void Swap(CMessageCreateSwornTeamNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCreateSwornTeamNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCreateSwornTeamNotify& from);
  void MergeFrom(const CMessageCreateSwornTeamNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgSwornMember SwornMember = 1;
  inline int swornmember_size() const;
  inline void clear_swornmember();
  static const int kSwornMemberFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >& swornmember() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >* mutable_swornmember();
  inline const ::CMsgSwornMember& swornmember(int index) const;
  inline ::CMsgSwornMember* mutable_swornmember(int index);
  inline ::CMsgSwornMember* add_swornmember();
  
  // optional string SwornName = 2;
  inline bool has_swornname() const;
  inline void clear_swornname();
  static const int kSwornNameFieldNumber = 2;
  inline const ::std::string& swornname() const;
  inline void set_swornname(const ::std::string& value);
  inline void set_swornname(const char* value);
  inline void set_swornname(const char* value, size_t size);
  inline ::std::string* mutable_swornname();
  
  // optional uint32 MasterID = 3;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 3;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember > swornmember_;
  ::std::string* swornname_;
  static const ::std::string _default_swornname_;
  ::google::protobuf::uint32 masterid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCreateSwornTeamNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLeaveSwornTeamNotify : public ::google::protobuf::Message {
 public:
  CMessageLeaveSwornTeamNotify();
  virtual ~CMessageLeaveSwornTeamNotify();
  
  CMessageLeaveSwornTeamNotify(const CMessageLeaveSwornTeamNotify& from);
  
  inline CMessageLeaveSwornTeamNotify& operator=(const CMessageLeaveSwornTeamNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLeaveSwornTeamNotify& default_instance();
  void Swap(CMessageLeaveSwornTeamNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLeaveSwornTeamNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLeaveSwornTeamNotify& from);
  void MergeFrom(const CMessageLeaveSwornTeamNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 MasterID = 3;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIDFieldNumber = 3;
  inline ::google::protobuf::uint32 masterid() const;
  inline void set_masterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 masterid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLeaveSwornTeamNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKickSwornMemberNotify : public ::google::protobuf::Message {
 public:
  CMessageKickSwornMemberNotify();
  virtual ~CMessageKickSwornMemberNotify();
  
  CMessageKickSwornMemberNotify(const CMessageKickSwornMemberNotify& from);
  
  inline CMessageKickSwornMemberNotify& operator=(const CMessageKickSwornMemberNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKickSwornMemberNotify& default_instance();
  void Swap(CMessageKickSwornMemberNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKickSwornMemberNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKickSwornMemberNotify& from);
  void MergeFrom(const CMessageKickSwornMemberNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 RoleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKickSwornMemberNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeSwornNameRequest : public ::google::protobuf::Message {
 public:
  CMessageChangeSwornNameRequest();
  virtual ~CMessageChangeSwornNameRequest();
  
  CMessageChangeSwornNameRequest(const CMessageChangeSwornNameRequest& from);
  
  inline CMessageChangeSwornNameRequest& operator=(const CMessageChangeSwornNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeSwornNameRequest& default_instance();
  void Swap(CMessageChangeSwornNameRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeSwornNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeSwornNameRequest& from);
  void MergeFrom(const CMessageChangeSwornNameRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SwornName = 1;
  inline bool has_swornname() const;
  inline void clear_swornname();
  static const int kSwornNameFieldNumber = 1;
  inline const ::std::string& swornname() const;
  inline void set_swornname(const ::std::string& value);
  inline void set_swornname(const char* value);
  inline void set_swornname(const char* value, size_t size);
  inline ::std::string* mutable_swornname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* swornname_;
  static const ::std::string _default_swornname_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeSwornNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeSwornNameResponse : public ::google::protobuf::Message {
 public:
  CMessageChangeSwornNameResponse();
  virtual ~CMessageChangeSwornNameResponse();
  
  CMessageChangeSwornNameResponse(const CMessageChangeSwornNameResponse& from);
  
  inline CMessageChangeSwornNameResponse& operator=(const CMessageChangeSwornNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeSwornNameResponse& default_instance();
  void Swap(CMessageChangeSwornNameResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeSwornNameResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeSwornNameResponse& from);
  void MergeFrom(const CMessageChangeSwornNameResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeSwornNameResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageChangeSwornNameNotify : public ::google::protobuf::Message {
 public:
  CMessageChangeSwornNameNotify();
  virtual ~CMessageChangeSwornNameNotify();
  
  CMessageChangeSwornNameNotify(const CMessageChangeSwornNameNotify& from);
  
  inline CMessageChangeSwornNameNotify& operator=(const CMessageChangeSwornNameNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageChangeSwornNameNotify& default_instance();
  void Swap(CMessageChangeSwornNameNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageChangeSwornNameNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageChangeSwornNameNotify& from);
  void MergeFrom(const CMessageChangeSwornNameNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional string SwornName = 2;
  inline bool has_swornname() const;
  inline void clear_swornname();
  static const int kSwornNameFieldNumber = 2;
  inline const ::std::string& swornname() const;
  inline void set_swornname(const ::std::string& value);
  inline void set_swornname(const char* value);
  inline void set_swornname(const char* value, size_t size);
  inline ::std::string* mutable_swornname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::std::string* swornname_;
  static const ::std::string _default_swornname_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageChangeSwornNameNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageDisbandSwornTeamNotify : public ::google::protobuf::Message {
 public:
  CMessageDisbandSwornTeamNotify();
  virtual ~CMessageDisbandSwornTeamNotify();
  
  CMessageDisbandSwornTeamNotify(const CMessageDisbandSwornTeamNotify& from);
  
  inline CMessageDisbandSwornTeamNotify& operator=(const CMessageDisbandSwornTeamNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageDisbandSwornTeamNotify& default_instance();
  void Swap(CMessageDisbandSwornTeamNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageDisbandSwornTeamNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageDisbandSwornTeamNotify& from);
  void MergeFrom(const CMessageDisbandSwornTeamNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 SwornID = 2;
  inline bool has_swornid() const;
  inline void clear_swornid();
  static const int kSwornIDFieldNumber = 2;
  inline ::google::protobuf::uint32 swornid() const;
  inline void set_swornid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 swornid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageDisbandSwornTeamNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLatestContactChangeStatusNotice : public ::google::protobuf::Message {
 public:
  CMessageLatestContactChangeStatusNotice();
  virtual ~CMessageLatestContactChangeStatusNotice();
  
  CMessageLatestContactChangeStatusNotice(const CMessageLatestContactChangeStatusNotice& from);
  
  inline CMessageLatestContactChangeStatusNotice& operator=(const CMessageLatestContactChangeStatusNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLatestContactChangeStatusNotice& default_instance();
  void Swap(CMessageLatestContactChangeStatusNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLatestContactChangeStatusNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLatestContactChangeStatusNotice& from);
  void MergeFrom(const CMessageLatestContactChangeStatusNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 VipFlag = 3;
  inline bool has_vipflag() const;
  inline void clear_vipflag();
  static const int kVipFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 vipflag() const;
  inline void set_vipflag(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 vipflag_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLatestContactChangeStatusNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLastContacterNotice : public ::google::protobuf::Message {
 public:
  CMessageLastContacterNotice();
  virtual ~CMessageLastContacterNotice();
  
  CMessageLastContacterNotice(const CMessageLastContacterNotice& from);
  
  inline CMessageLastContacterNotice& operator=(const CMessageLastContacterNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLastContacterNotice& default_instance();
  void Swap(CMessageLastContacterNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLastContacterNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLastContacterNotice& from);
  void MergeFrom(const CMessageLastContacterNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMessageRouter Router = 1;
  inline bool has_router() const;
  inline void clear_router();
  static const int kRouterFieldNumber = 1;
  inline const ::CMessageRouter& router() const;
  inline ::CMessageRouter* mutable_router();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Sex = 3;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 3;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);
  
  // optional uint32 FaceID = 4;
  inline bool has_faceid() const;
  inline void clear_faceid();
  static const int kFaceIDFieldNumber = 4;
  inline ::google::protobuf::uint32 faceid() const;
  inline void set_faceid(::google::protobuf::uint32 value);
  
  // optional string Name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 NationID = 6;
  inline bool has_nationid() const;
  inline void clear_nationid();
  static const int kNationIDFieldNumber = 6;
  inline ::google::protobuf::uint32 nationid() const;
  inline void set_nationid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::CMessageRouter* router_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 faceid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 nationid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLastContacterNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateLastContacterNotice : public ::google::protobuf::Message {
 public:
  CMessageUpdateLastContacterNotice();
  virtual ~CMessageUpdateLastContacterNotice();
  
  CMessageUpdateLastContacterNotice(const CMessageUpdateLastContacterNotice& from);
  
  inline CMessageUpdateLastContacterNotice& operator=(const CMessageUpdateLastContacterNotice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateLastContacterNotice& default_instance();
  void Swap(CMessageUpdateLastContacterNotice* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateLastContacterNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateLastContacterNotice& from);
  void MergeFrom(const CMessageUpdateLastContacterNotice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SenderID = 1;
  inline bool has_senderid() const;
  inline void clear_senderid();
  static const int kSenderIDFieldNumber = 1;
  inline ::google::protobuf::uint32 senderid() const;
  inline void set_senderid(::google::protobuf::uint32 value);
  
  // optional uint32 ReceiverID = 2;
  inline bool has_receiverid() const;
  inline void clear_receiverid();
  static const int kReceiverIDFieldNumber = 2;
  inline ::google::protobuf::uint32 receiverid() const;
  inline void set_receiverid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 senderid_;
  ::google::protobuf::uint32 receiverid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateLastContacterNotice* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUploadContacterList : public ::google::protobuf::Message {
 public:
  CMessageUploadContacterList();
  virtual ~CMessageUploadContacterList();
  
  CMessageUploadContacterList(const CMessageUploadContacterList& from);
  
  inline CMessageUploadContacterList& operator=(const CMessageUploadContacterList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUploadContacterList& default_instance();
  void Swap(CMessageUploadContacterList* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUploadContacterList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUploadContacterList& from);
  void MergeFrom(const CMessageUploadContacterList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PlayerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // repeated uint32 ContacterID = 2;
  inline int contacterid_size() const;
  inline void clear_contacterid();
  static const int kContacterIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& contacterid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_contacterid();
  inline ::google::protobuf::uint32 contacterid(int index) const;
  inline void set_contacterid(int index, ::google::protobuf::uint32 value);
  inline void add_contacterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > contacterid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUploadContacterList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageContacterStatusNotifyG2S : public ::google::protobuf::Message {
 public:
  CMessageContacterStatusNotifyG2S();
  virtual ~CMessageContacterStatusNotifyG2S();
  
  CMessageContacterStatusNotifyG2S(const CMessageContacterStatusNotifyG2S& from);
  
  inline CMessageContacterStatusNotifyG2S& operator=(const CMessageContacterStatusNotifyG2S& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageContacterStatusNotifyG2S& default_instance();
  void Swap(CMessageContacterStatusNotifyG2S* other);
  
  // implements Message ----------------------------------------------
  
  CMessageContacterStatusNotifyG2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageContacterStatusNotifyG2S& from);
  void MergeFrom(const CMessageContacterStatusNotifyG2S& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PlayerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 PlayerStatus = 2;
  inline bool has_playerstatus() const;
  inline void clear_playerstatus();
  static const int kPlayerStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 playerstatus() const;
  inline void set_playerstatus(::google::protobuf::uint32 value);
  
  // optional uint32 ContacterID = 3;
  inline bool has_contacterid() const;
  inline void clear_contacterid();
  static const int kContacterIDFieldNumber = 3;
  inline ::google::protobuf::uint32 contacterid() const;
  inline void set_contacterid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 playerstatus_;
  ::google::protobuf::uint32 contacterid_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageContacterStatusNotifyG2S* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRebuildSwornRequest : public ::google::protobuf::Message {
 public:
  CMessageRebuildSwornRequest();
  virtual ~CMessageRebuildSwornRequest();
  
  CMessageRebuildSwornRequest(const CMessageRebuildSwornRequest& from);
  
  inline CMessageRebuildSwornRequest& operator=(const CMessageRebuildSwornRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRebuildSwornRequest& default_instance();
  void Swap(CMessageRebuildSwornRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRebuildSwornRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRebuildSwornRequest& from);
  void MergeFrom(const CMessageRebuildSwornRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRebuildSwornRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRebuildSwornResponse : public ::google::protobuf::Message {
 public:
  CMessageRebuildSwornResponse();
  virtual ~CMessageRebuildSwornResponse();
  
  CMessageRebuildSwornResponse(const CMessageRebuildSwornResponse& from);
  
  inline CMessageRebuildSwornResponse& operator=(const CMessageRebuildSwornResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRebuildSwornResponse& default_instance();
  void Swap(CMessageRebuildSwornResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRebuildSwornResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRebuildSwornResponse& from);
  void MergeFrom(const CMessageRebuildSwornResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRebuildSwornResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRebuildSwornNotify : public ::google::protobuf::Message {
 public:
  CMessageRebuildSwornNotify();
  virtual ~CMessageRebuildSwornNotify();
  
  CMessageRebuildSwornNotify(const CMessageRebuildSwornNotify& from);
  
  inline CMessageRebuildSwornNotify& operator=(const CMessageRebuildSwornNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRebuildSwornNotify& default_instance();
  void Swap(CMessageRebuildSwornNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRebuildSwornNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRebuildSwornNotify& from);
  void MergeFrom(const CMessageRebuildSwornNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgSwornMember SwornMember = 1;
  inline int swornmember_size() const;
  inline void clear_swornmember();
  static const int kSwornMemberFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >& swornmember() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >* mutable_swornmember();
  inline const ::CMsgSwornMember& swornmember(int index) const;
  inline ::CMsgSwornMember* mutable_swornmember(int index);
  inline ::CMsgSwornMember* add_swornmember();
  
  // optional string SwornName = 2;
  inline bool has_swornname() const;
  inline void clear_swornname();
  static const int kSwornNameFieldNumber = 2;
  inline const ::std::string& swornname() const;
  inline void set_swornname(const ::std::string& value);
  inline void set_swornname(const char* value);
  inline void set_swornname(const char* value, size_t size);
  inline ::std::string* mutable_swornname();
  
  // repeated uint32 NewMember = 3;
  inline int newmember_size() const;
  inline void clear_newmember();
  static const int kNewMemberFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& newmember() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_newmember();
  inline ::google::protobuf::uint32 newmember(int index) const;
  inline void set_newmember(int index, ::google::protobuf::uint32 value);
  inline void add_newmember(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember > swornmember_;
  ::std::string* swornname_;
  static const ::std::string _default_swornname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > newmember_;
  friend void  protobuf_AddDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_friendmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_friendmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRebuildSwornNotify* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageInviteFriendRequest

// optional uint32 PlayerID = 1;
inline bool CMessageInviteFriendRequest::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageInviteFriendRequest::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageInviteFriendRequest::playerid() const {
  return playerid_;
}
inline void CMessageInviteFriendRequest::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// -------------------------------------------------------------------

// CMessageInviteFriendRequestByName

// optional string InvitedPlayerName = 1;
inline bool CMessageInviteFriendRequestByName::has_invitedplayername() const {
  return _has_bit(0);
}
inline void CMessageInviteFriendRequestByName::clear_invitedplayername() {
  if (invitedplayername_ != &_default_invitedplayername_) {
    invitedplayername_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageInviteFriendRequestByName::invitedplayername() const {
  return *invitedplayername_;
}
inline void CMessageInviteFriendRequestByName::set_invitedplayername(const ::std::string& value) {
  _set_bit(0);
  if (invitedplayername_ == &_default_invitedplayername_) {
    invitedplayername_ = new ::std::string;
  }
  invitedplayername_->assign(value);
}
inline void CMessageInviteFriendRequestByName::set_invitedplayername(const char* value) {
  _set_bit(0);
  if (invitedplayername_ == &_default_invitedplayername_) {
    invitedplayername_ = new ::std::string;
  }
  invitedplayername_->assign(value);
}
inline void CMessageInviteFriendRequestByName::set_invitedplayername(const char* value, size_t size) {
  _set_bit(0);
  if (invitedplayername_ == &_default_invitedplayername_) {
    invitedplayername_ = new ::std::string;
  }
  invitedplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageInviteFriendRequestByName::mutable_invitedplayername() {
  _set_bit(0);
  if (invitedplayername_ == &_default_invitedplayername_) {
    invitedplayername_ = new ::std::string;
  }
  return invitedplayername_;
}

// -------------------------------------------------------------------

// CMessageInviteFriendNotice

// optional .CMessageRouter Router = 1;
inline bool CMessageInviteFriendNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessageInviteFriendNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageInviteFriendNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageInviteFriendNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 SrcHead = 2;
inline bool CMessageInviteFriendNotice::has_srchead() const {
  return _has_bit(1);
}
inline void CMessageInviteFriendNotice::clear_srchead() {
  srchead_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteFriendNotice::srchead() const {
  return srchead_;
}
inline void CMessageInviteFriendNotice::set_srchead(::google::protobuf::uint32 value) {
  _set_bit(1);
  srchead_ = value;
}

// optional uint32 SrcCharID = 3;
inline bool CMessageInviteFriendNotice::has_srccharid() const {
  return _has_bit(2);
}
inline void CMessageInviteFriendNotice::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageInviteFriendNotice::srccharid() const {
  return srccharid_;
}
inline void CMessageInviteFriendNotice::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srccharid_ = value;
}

// optional uint32 SrcMetier = 4;
inline bool CMessageInviteFriendNotice::has_srcmetier() const {
  return _has_bit(3);
}
inline void CMessageInviteFriendNotice::clear_srcmetier() {
  srcmetier_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageInviteFriendNotice::srcmetier() const {
  return srcmetier_;
}
inline void CMessageInviteFriendNotice::set_srcmetier(::google::protobuf::uint32 value) {
  _set_bit(3);
  srcmetier_ = value;
}

// optional uint32 SrcLevel = 5;
inline bool CMessageInviteFriendNotice::has_srclevel() const {
  return _has_bit(4);
}
inline void CMessageInviteFriendNotice::clear_srclevel() {
  srclevel_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageInviteFriendNotice::srclevel() const {
  return srclevel_;
}
inline void CMessageInviteFriendNotice::set_srclevel(::google::protobuf::uint32 value) {
  _set_bit(4);
  srclevel_ = value;
}

// optional uint32 SrcSex = 6;
inline bool CMessageInviteFriendNotice::has_srcsex() const {
  return _has_bit(5);
}
inline void CMessageInviteFriendNotice::clear_srcsex() {
  srcsex_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageInviteFriendNotice::srcsex() const {
  return srcsex_;
}
inline void CMessageInviteFriendNotice::set_srcsex(::google::protobuf::uint32 value) {
  _set_bit(5);
  srcsex_ = value;
}

// optional uint32 DesCharID = 7;
inline bool CMessageInviteFriendNotice::has_descharid() const {
  return _has_bit(6);
}
inline void CMessageInviteFriendNotice::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageInviteFriendNotice::descharid() const {
  return descharid_;
}
inline void CMessageInviteFriendNotice::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(6);
  descharid_ = value;
}

// -------------------------------------------------------------------

// CMessageInviteFriendOptionRequest

// optional uint32 InvitingPlayerID = 1;
inline bool CMessageInviteFriendOptionRequest::has_invitingplayerid() const {
  return _has_bit(0);
}
inline void CMessageInviteFriendOptionRequest::clear_invitingplayerid() {
  invitingplayerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageInviteFriendOptionRequest::invitingplayerid() const {
  return invitingplayerid_;
}
inline void CMessageInviteFriendOptionRequest::set_invitingplayerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  invitingplayerid_ = value;
}

// optional uint32 AgreeCode = 2;
inline bool CMessageInviteFriendOptionRequest::has_agreecode() const {
  return _has_bit(1);
}
inline void CMessageInviteFriendOptionRequest::clear_agreecode() {
  agreecode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteFriendOptionRequest::agreecode() const {
  return agreecode_;
}
inline void CMessageInviteFriendOptionRequest::set_agreecode(::google::protobuf::uint32 value) {
  _set_bit(1);
  agreecode_ = value;
}

// -------------------------------------------------------------------

// CMessageInviteFriendResponseMsg

// optional .CMessageRouter Router = 1;
inline bool CMessageInviteFriendResponseMsg::has_router() const {
  return _has_bit(0);
}
inline void CMessageInviteFriendResponseMsg::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageInviteFriendResponseMsg::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageInviteFriendResponseMsg::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 IsDesInMyLst = 2;
inline bool CMessageInviteFriendResponseMsg::has_isdesinmylst() const {
  return _has_bit(1);
}
inline void CMessageInviteFriendResponseMsg::clear_isdesinmylst() {
  isdesinmylst_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteFriendResponseMsg::isdesinmylst() const {
  return isdesinmylst_;
}
inline void CMessageInviteFriendResponseMsg::set_isdesinmylst(::google::protobuf::uint32 value) {
  _set_bit(1);
  isdesinmylst_ = value;
}

// optional uint32 BeInvitingPlayerNation = 3;
inline bool CMessageInviteFriendResponseMsg::has_beinvitingplayernation() const {
  return _has_bit(2);
}
inline void CMessageInviteFriendResponseMsg::clear_beinvitingplayernation() {
  beinvitingplayernation_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageInviteFriendResponseMsg::beinvitingplayernation() const {
  return beinvitingplayernation_;
}
inline void CMessageInviteFriendResponseMsg::set_beinvitingplayernation(::google::protobuf::uint32 value) {
  _set_bit(2);
  beinvitingplayernation_ = value;
}

// optional uint32 BeInvitingPlayerHead = 4;
inline bool CMessageInviteFriendResponseMsg::has_beinvitingplayerhead() const {
  return _has_bit(3);
}
inline void CMessageInviteFriendResponseMsg::clear_beinvitingplayerhead() {
  beinvitingplayerhead_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageInviteFriendResponseMsg::beinvitingplayerhead() const {
  return beinvitingplayerhead_;
}
inline void CMessageInviteFriendResponseMsg::set_beinvitingplayerhead(::google::protobuf::uint32 value) {
  _set_bit(3);
  beinvitingplayerhead_ = value;
}

// optional string BeInvitingPlayerName = 5;
inline bool CMessageInviteFriendResponseMsg::has_beinvitingplayername() const {
  return _has_bit(4);
}
inline void CMessageInviteFriendResponseMsg::clear_beinvitingplayername() {
  if (beinvitingplayername_ != &_default_beinvitingplayername_) {
    beinvitingplayername_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageInviteFriendResponseMsg::beinvitingplayername() const {
  return *beinvitingplayername_;
}
inline void CMessageInviteFriendResponseMsg::set_beinvitingplayername(const ::std::string& value) {
  _set_bit(4);
  if (beinvitingplayername_ == &_default_beinvitingplayername_) {
    beinvitingplayername_ = new ::std::string;
  }
  beinvitingplayername_->assign(value);
}
inline void CMessageInviteFriendResponseMsg::set_beinvitingplayername(const char* value) {
  _set_bit(4);
  if (beinvitingplayername_ == &_default_beinvitingplayername_) {
    beinvitingplayername_ = new ::std::string;
  }
  beinvitingplayername_->assign(value);
}
inline void CMessageInviteFriendResponseMsg::set_beinvitingplayername(const char* value, size_t size) {
  _set_bit(4);
  if (beinvitingplayername_ == &_default_beinvitingplayername_) {
    beinvitingplayername_ = new ::std::string;
  }
  beinvitingplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageInviteFriendResponseMsg::mutable_beinvitingplayername() {
  _set_bit(4);
  if (beinvitingplayername_ == &_default_beinvitingplayername_) {
    beinvitingplayername_ = new ::std::string;
  }
  return beinvitingplayername_;
}

// optional uint32 BeInvitingPlayerSex = 6;
inline bool CMessageInviteFriendResponseMsg::has_beinvitingplayersex() const {
  return _has_bit(5);
}
inline void CMessageInviteFriendResponseMsg::clear_beinvitingplayersex() {
  beinvitingplayersex_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageInviteFriendResponseMsg::beinvitingplayersex() const {
  return beinvitingplayersex_;
}
inline void CMessageInviteFriendResponseMsg::set_beinvitingplayersex(::google::protobuf::uint32 value) {
  _set_bit(5);
  beinvitingplayersex_ = value;
}

// optional uint32 IsFriendLstFull = 7;
inline bool CMessageInviteFriendResponseMsg::has_isfriendlstfull() const {
  return _has_bit(6);
}
inline void CMessageInviteFriendResponseMsg::clear_isfriendlstfull() {
  isfriendlstfull_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageInviteFriendResponseMsg::isfriendlstfull() const {
  return isfriendlstfull_;
}
inline void CMessageInviteFriendResponseMsg::set_isfriendlstfull(::google::protobuf::uint32 value) {
  _set_bit(6);
  isfriendlstfull_ = value;
}

// optional uint32 AgreeCode = 8;
inline bool CMessageInviteFriendResponseMsg::has_agreecode() const {
  return _has_bit(7);
}
inline void CMessageInviteFriendResponseMsg::clear_agreecode() {
  agreecode_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageInviteFriendResponseMsg::agreecode() const {
  return agreecode_;
}
inline void CMessageInviteFriendResponseMsg::set_agreecode(::google::protobuf::uint32 value) {
  _set_bit(7);
  agreecode_ = value;
}

// -------------------------------------------------------------------

// CMessageInviteFriendResponseNotice

// optional string BeInvitingPlayerName = 1;
inline bool CMessageInviteFriendResponseNotice::has_beinvitingplayername() const {
  return _has_bit(0);
}
inline void CMessageInviteFriendResponseNotice::clear_beinvitingplayername() {
  if (beinvitingplayername_ != &_default_beinvitingplayername_) {
    beinvitingplayername_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageInviteFriendResponseNotice::beinvitingplayername() const {
  return *beinvitingplayername_;
}
inline void CMessageInviteFriendResponseNotice::set_beinvitingplayername(const ::std::string& value) {
  _set_bit(0);
  if (beinvitingplayername_ == &_default_beinvitingplayername_) {
    beinvitingplayername_ = new ::std::string;
  }
  beinvitingplayername_->assign(value);
}
inline void CMessageInviteFriendResponseNotice::set_beinvitingplayername(const char* value) {
  _set_bit(0);
  if (beinvitingplayername_ == &_default_beinvitingplayername_) {
    beinvitingplayername_ = new ::std::string;
  }
  beinvitingplayername_->assign(value);
}
inline void CMessageInviteFriendResponseNotice::set_beinvitingplayername(const char* value, size_t size) {
  _set_bit(0);
  if (beinvitingplayername_ == &_default_beinvitingplayername_) {
    beinvitingplayername_ = new ::std::string;
  }
  beinvitingplayername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageInviteFriendResponseNotice::mutable_beinvitingplayername() {
  _set_bit(0);
  if (beinvitingplayername_ == &_default_beinvitingplayername_) {
    beinvitingplayername_ = new ::std::string;
  }
  return beinvitingplayername_;
}

// optional uint32 AgreeCode = 2;
inline bool CMessageInviteFriendResponseNotice::has_agreecode() const {
  return _has_bit(1);
}
inline void CMessageInviteFriendResponseNotice::clear_agreecode() {
  agreecode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageInviteFriendResponseNotice::agreecode() const {
  return agreecode_;
}
inline void CMessageInviteFriendResponseNotice::set_agreecode(::google::protobuf::uint32 value) {
  _set_bit(1);
  agreecode_ = value;
}

// -------------------------------------------------------------------

// CMessageDelFrientRequest

// optional uint32 Type = 1;
inline bool CMessageDelFrientRequest::has_type() const {
  return _has_bit(0);
}
inline void CMessageDelFrientRequest::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageDelFrientRequest::type() const {
  return type_;
}
inline void CMessageDelFrientRequest::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageDelFrientRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageDelFrientRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDelFrientRequest::charid() const {
  return charid_;
}
inline void CMessageDelFrientRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendErrorNotice

// optional .CMessageRouter Router = 1;
inline bool CMessageFriendErrorNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessageFriendErrorNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageFriendErrorNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageFriendErrorNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional int32 ErrorCode = 2;
inline bool CMessageFriendErrorNotice::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageFriendErrorNotice::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageFriendErrorNotice::errorcode() const {
  return errorcode_;
}
inline void CMessageFriendErrorNotice::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeFriendNotice

// optional .CMessageRouter Router = 1;
inline bool CMessageChangeFriendNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessageChangeFriendNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageChangeFriendNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageChangeFriendNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional string Name = 2;
inline bool CMessageChangeFriendNotice::has_name() const {
  return _has_bit(1);
}
inline void CMessageChangeFriendNotice::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageChangeFriendNotice::name() const {
  return *name_;
}
inline void CMessageChangeFriendNotice::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageChangeFriendNotice::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageChangeFriendNotice::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeFriendNotice::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 NationID = 3;
inline bool CMessageChangeFriendNotice::has_nationid() const {
  return _has_bit(2);
}
inline void CMessageChangeFriendNotice::clear_nationid() {
  nationid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::nationid() const {
  return nationid_;
}
inline void CMessageChangeFriendNotice::set_nationid(::google::protobuf::uint32 value) {
  _set_bit(2);
  nationid_ = value;
}

// optional uint32 Sex = 4;
inline bool CMessageChangeFriendNotice::has_sex() const {
  return _has_bit(3);
}
inline void CMessageChangeFriendNotice::clear_sex() {
  sex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::sex() const {
  return sex_;
}
inline void CMessageChangeFriendNotice::set_sex(::google::protobuf::uint32 value) {
  _set_bit(3);
  sex_ = value;
}

// optional uint32 ReltoMe = 5;
inline bool CMessageChangeFriendNotice::has_reltome() const {
  return _has_bit(4);
}
inline void CMessageChangeFriendNotice::clear_reltome() {
  reltome_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::reltome() const {
  return reltome_;
}
inline void CMessageChangeFriendNotice::set_reltome(::google::protobuf::uint32 value) {
  _set_bit(4);
  reltome_ = value;
}

// optional uint32 OprCode = 6;
inline bool CMessageChangeFriendNotice::has_oprcode() const {
  return _has_bit(5);
}
inline void CMessageChangeFriendNotice::clear_oprcode() {
  oprcode_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::oprcode() const {
  return oprcode_;
}
inline void CMessageChangeFriendNotice::set_oprcode(::google::protobuf::uint32 value) {
  _set_bit(5);
  oprcode_ = value;
}

// optional uint32 TimeOrder = 7;
inline bool CMessageChangeFriendNotice::has_timeorder() const {
  return _has_bit(6);
}
inline void CMessageChangeFriendNotice::clear_timeorder() {
  timeorder_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::timeorder() const {
  return timeorder_;
}
inline void CMessageChangeFriendNotice::set_timeorder(::google::protobuf::uint32 value) {
  _set_bit(6);
  timeorder_ = value;
}

// optional uint32 IsLock = 8;
inline bool CMessageChangeFriendNotice::has_islock() const {
  return _has_bit(7);
}
inline void CMessageChangeFriendNotice::clear_islock() {
  islock_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::islock() const {
  return islock_;
}
inline void CMessageChangeFriendNotice::set_islock(::google::protobuf::uint32 value) {
  _set_bit(7);
  islock_ = value;
}

// optional uint32 Status = 9;
inline bool CMessageChangeFriendNotice::has_status() const {
  return _has_bit(8);
}
inline void CMessageChangeFriendNotice::clear_status() {
  status_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::status() const {
  return status_;
}
inline void CMessageChangeFriendNotice::set_status(::google::protobuf::uint32 value) {
  _set_bit(8);
  status_ = value;
}

// optional uint32 CharID = 10;
inline bool CMessageChangeFriendNotice::has_charid() const {
  return _has_bit(9);
}
inline void CMessageChangeFriendNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::charid() const {
  return charid_;
}
inline void CMessageChangeFriendNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(9);
  charid_ = value;
}

// optional uint32 BeKilled = 11;
inline bool CMessageChangeFriendNotice::has_bekilled() const {
  return _has_bit(10);
}
inline void CMessageChangeFriendNotice::clear_bekilled() {
  bekilled_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::bekilled() const {
  return bekilled_;
}
inline void CMessageChangeFriendNotice::set_bekilled(::google::protobuf::uint32 value) {
  _set_bit(10);
  bekilled_ = value;
}

// optional uint32 Killed = 12;
inline bool CMessageChangeFriendNotice::has_killed() const {
  return _has_bit(11);
}
inline void CMessageChangeFriendNotice::clear_killed() {
  killed_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::killed() const {
  return killed_;
}
inline void CMessageChangeFriendNotice::set_killed(::google::protobuf::uint32 value) {
  _set_bit(11);
  killed_ = value;
}

// optional uint32 Head = 13;
inline bool CMessageChangeFriendNotice::has_head() const {
  return _has_bit(12);
}
inline void CMessageChangeFriendNotice::clear_head() {
  head_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::head() const {
  return head_;
}
inline void CMessageChangeFriendNotice::set_head(::google::protobuf::uint32 value) {
  _set_bit(12);
  head_ = value;
}

// optional uint32 GroupID = 14;
inline bool CMessageChangeFriendNotice::has_groupid() const {
  return _has_bit(13);
}
inline void CMessageChangeFriendNotice::clear_groupid() {
  groupid_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::groupid() const {
  return groupid_;
}
inline void CMessageChangeFriendNotice::set_groupid(::google::protobuf::uint32 value) {
  _set_bit(13);
  groupid_ = value;
}

// optional uint32 VipFlag = 15;
inline bool CMessageChangeFriendNotice::has_vipflag() const {
  return _has_bit(14);
}
inline void CMessageChangeFriendNotice::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 CMessageChangeFriendNotice::vipflag() const {
  return vipflag_;
}
inline void CMessageChangeFriendNotice::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(14);
  vipflag_ = value;
}

// -------------------------------------------------------------------

// SingleFriendData

// optional uint32 BeKilled = 1;
inline bool SingleFriendData::has_bekilled() const {
  return _has_bit(0);
}
inline void SingleFriendData::clear_bekilled() {
  bekilled_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SingleFriendData::bekilled() const {
  return bekilled_;
}
inline void SingleFriendData::set_bekilled(::google::protobuf::uint32 value) {
  _set_bit(0);
  bekilled_ = value;
}

// optional uint32 Head = 2;
inline bool SingleFriendData::has_head() const {
  return _has_bit(1);
}
inline void SingleFriendData::clear_head() {
  head_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SingleFriendData::head() const {
  return head_;
}
inline void SingleFriendData::set_head(::google::protobuf::uint32 value) {
  _set_bit(1);
  head_ = value;
}

// optional uint32 Status = 3;
inline bool SingleFriendData::has_status() const {
  return _has_bit(2);
}
inline void SingleFriendData::clear_status() {
  status_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 SingleFriendData::status() const {
  return status_;
}
inline void SingleFriendData::set_status(::google::protobuf::uint32 value) {
  _set_bit(2);
  status_ = value;
}

// optional uint32 GroupID = 4;
inline bool SingleFriendData::has_groupid() const {
  return _has_bit(3);
}
inline void SingleFriendData::clear_groupid() {
  groupid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 SingleFriendData::groupid() const {
  return groupid_;
}
inline void SingleFriendData::set_groupid(::google::protobuf::uint32 value) {
  _set_bit(3);
  groupid_ = value;
}

// optional uint32 CharID = 5;
inline bool SingleFriendData::has_charid() const {
  return _has_bit(4);
}
inline void SingleFriendData::clear_charid() {
  charid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 SingleFriendData::charid() const {
  return charid_;
}
inline void SingleFriendData::set_charid(::google::protobuf::uint32 value) {
  _set_bit(4);
  charid_ = value;
}

// optional string Name = 6;
inline bool SingleFriendData::has_name() const {
  return _has_bit(5);
}
inline void SingleFriendData::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& SingleFriendData::name() const {
  return *name_;
}
inline void SingleFriendData::set_name(const ::std::string& value) {
  _set_bit(5);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SingleFriendData::set_name(const char* value) {
  _set_bit(5);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SingleFriendData::set_name(const char* value, size_t size) {
  _set_bit(5);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SingleFriendData::mutable_name() {
  _set_bit(5);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 NationID = 7;
inline bool SingleFriendData::has_nationid() const {
  return _has_bit(6);
}
inline void SingleFriendData::clear_nationid() {
  nationid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 SingleFriendData::nationid() const {
  return nationid_;
}
inline void SingleFriendData::set_nationid(::google::protobuf::uint32 value) {
  _set_bit(6);
  nationid_ = value;
}

// optional uint32 Relation = 8;
inline bool SingleFriendData::has_relation() const {
  return _has_bit(7);
}
inline void SingleFriendData::clear_relation() {
  relation_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 SingleFriendData::relation() const {
  return relation_;
}
inline void SingleFriendData::set_relation(::google::protobuf::uint32 value) {
  _set_bit(7);
  relation_ = value;
}

// optional uint32 Sex = 9;
inline bool SingleFriendData::has_sex() const {
  return _has_bit(8);
}
inline void SingleFriendData::clear_sex() {
  sex_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 SingleFriendData::sex() const {
  return sex_;
}
inline void SingleFriendData::set_sex(::google::protobuf::uint32 value) {
  _set_bit(8);
  sex_ = value;
}

// optional uint32 IsLock = 10;
inline bool SingleFriendData::has_islock() const {
  return _has_bit(9);
}
inline void SingleFriendData::clear_islock() {
  islock_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 SingleFriendData::islock() const {
  return islock_;
}
inline void SingleFriendData::set_islock(::google::protobuf::uint32 value) {
  _set_bit(9);
  islock_ = value;
}

// optional uint32 TimeOrder = 11;
inline bool SingleFriendData::has_timeorder() const {
  return _has_bit(10);
}
inline void SingleFriendData::clear_timeorder() {
  timeorder_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 SingleFriendData::timeorder() const {
  return timeorder_;
}
inline void SingleFriendData::set_timeorder(::google::protobuf::uint32 value) {
  _set_bit(10);
  timeorder_ = value;
}

// optional uint32 Killed = 12;
inline bool SingleFriendData::has_killed() const {
  return _has_bit(11);
}
inline void SingleFriendData::clear_killed() {
  killed_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 SingleFriendData::killed() const {
  return killed_;
}
inline void SingleFriendData::set_killed(::google::protobuf::uint32 value) {
  _set_bit(11);
  killed_ = value;
}

// optional uint32 VipFlag = 13;
inline bool SingleFriendData::has_vipflag() const {
  return _has_bit(12);
}
inline void SingleFriendData::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 SingleFriendData::vipflag() const {
  return vipflag_;
}
inline void SingleFriendData::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(12);
  vipflag_ = value;
}

// optional uint32 IntimacyDegree = 14;
inline bool SingleFriendData::has_intimacydegree() const {
  return _has_bit(13);
}
inline void SingleFriendData::clear_intimacydegree() {
  intimacydegree_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 SingleFriendData::intimacydegree() const {
  return intimacydegree_;
}
inline void SingleFriendData::set_intimacydegree(::google::protobuf::uint32 value) {
  _set_bit(13);
  intimacydegree_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendGetListNotice

// repeated .SingleFriendData Friends = 1;
inline int CMessageFriendGetListNotice::friends_size() const {
  return friends_.size();
}
inline void CMessageFriendGetListNotice::clear_friends() {
  friends_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleFriendData >&
CMessageFriendGetListNotice::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleFriendData >*
CMessageFriendGetListNotice::mutable_friends() {
  return &friends_;
}
inline const ::SingleFriendData& CMessageFriendGetListNotice::friends(int index) const {
  return friends_.Get(index);
}
inline ::SingleFriendData* CMessageFriendGetListNotice::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::SingleFriendData* CMessageFriendGetListNotice::add_friends() {
  return friends_.Add();
}

// repeated string GroupName = 2;
inline int CMessageFriendGetListNotice::groupname_size() const {
  return groupname_.size();
}
inline void CMessageFriendGetListNotice::clear_groupname() {
  groupname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageFriendGetListNotice::groupname() const {
  return groupname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageFriendGetListNotice::mutable_groupname() {
  return &groupname_;
}
inline const ::std::string& CMessageFriendGetListNotice::groupname(int index) const {
  return groupname_.Get(index);
}
inline ::std::string* CMessageFriendGetListNotice::mutable_groupname(int index) {
  return groupname_.Mutable(index);
}
inline void CMessageFriendGetListNotice::set_groupname(int index, const ::std::string& value) {
  groupname_.Mutable(index)->assign(value);
}
inline void CMessageFriendGetListNotice::set_groupname(int index, const char* value) {
  groupname_.Mutable(index)->assign(value);
}
inline void CMessageFriendGetListNotice::set_groupname(int index, const char* value, size_t size) {
  groupname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendGetListNotice::add_groupname() {
  return groupname_.Add();
}
inline void CMessageFriendGetListNotice::add_groupname(const ::std::string& value) {
  groupname_.Add()->assign(value);
}
inline void CMessageFriendGetListNotice::add_groupname(const char* value) {
  groupname_.Add()->assign(value);
}
inline void CMessageFriendGetListNotice::add_groupname(const char* value, size_t size) {
  groupname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// CMessageFriendGetListRequest

// -------------------------------------------------------------------

// CMessageFriendGroupNameNotice

// repeated uint32 GroupID = 1;
inline int CMessageFriendGroupNameNotice::groupid_size() const {
  return groupid_.size();
}
inline void CMessageFriendGroupNameNotice::clear_groupid() {
  groupid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageFriendGroupNameNotice::groupid() const {
  return groupid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageFriendGroupNameNotice::mutable_groupid() {
  return &groupid_;
}
inline ::google::protobuf::uint32 CMessageFriendGroupNameNotice::groupid(int index) const {
  return groupid_.Get(index);
}
inline void CMessageFriendGroupNameNotice::set_groupid(int index, ::google::protobuf::uint32 value) {
  groupid_.Set(index, value);
}
inline void CMessageFriendGroupNameNotice::add_groupid(::google::protobuf::uint32 value) {
  groupid_.Add(value);
}

// repeated string GroupName = 2;
inline int CMessageFriendGroupNameNotice::groupname_size() const {
  return groupname_.size();
}
inline void CMessageFriendGroupNameNotice::clear_groupname() {
  groupname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMessageFriendGroupNameNotice::groupname() const {
  return groupname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMessageFriendGroupNameNotice::mutable_groupname() {
  return &groupname_;
}
inline const ::std::string& CMessageFriendGroupNameNotice::groupname(int index) const {
  return groupname_.Get(index);
}
inline ::std::string* CMessageFriendGroupNameNotice::mutable_groupname(int index) {
  return groupname_.Mutable(index);
}
inline void CMessageFriendGroupNameNotice::set_groupname(int index, const ::std::string& value) {
  groupname_.Mutable(index)->assign(value);
}
inline void CMessageFriendGroupNameNotice::set_groupname(int index, const char* value) {
  groupname_.Mutable(index)->assign(value);
}
inline void CMessageFriendGroupNameNotice::set_groupname(int index, const char* value, size_t size) {
  groupname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendGroupNameNotice::add_groupname() {
  return groupname_.Add();
}
inline void CMessageFriendGroupNameNotice::add_groupname(const ::std::string& value) {
  groupname_.Add()->assign(value);
}
inline void CMessageFriendGroupNameNotice::add_groupname(const char* value) {
  groupname_.Add()->assign(value);
}
inline void CMessageFriendGroupNameNotice::add_groupname(const char* value, size_t size) {
  groupname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// CMessageFriendChangeStatusNotice_R

// optional .CMessageRouter Router = 1;
inline bool CMessageFriendChangeStatusNotice_R::has_router() const {
  return _has_bit(0);
}
inline void CMessageFriendChangeStatusNotice_R::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageFriendChangeStatusNotice_R::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageFriendChangeStatusNotice_R::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 Status = 2;
inline bool CMessageFriendChangeStatusNotice_R::has_status() const {
  return _has_bit(1);
}
inline void CMessageFriendChangeStatusNotice_R::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendChangeStatusNotice_R::status() const {
  return status_;
}
inline void CMessageFriendChangeStatusNotice_R::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// optional uint32 Rels = 3;
inline bool CMessageFriendChangeStatusNotice_R::has_rels() const {
  return _has_bit(2);
}
inline void CMessageFriendChangeStatusNotice_R::clear_rels() {
  rels_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFriendChangeStatusNotice_R::rels() const {
  return rels_;
}
inline void CMessageFriendChangeStatusNotice_R::set_rels(::google::protobuf::uint32 value) {
  _set_bit(2);
  rels_ = value;
}

// optional uint32 VipFlag = 4;
inline bool CMessageFriendChangeStatusNotice_R::has_vipflag() const {
  return _has_bit(3);
}
inline void CMessageFriendChangeStatusNotice_R::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageFriendChangeStatusNotice_R::vipflag() const {
  return vipflag_;
}
inline void CMessageFriendChangeStatusNotice_R::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(3);
  vipflag_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendChangeStatusNotice

// optional uint32 CharID = 1;
inline bool CMessageFriendChangeStatusNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFriendChangeStatusNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendChangeStatusNotice::charid() const {
  return charid_;
}
inline void CMessageFriendChangeStatusNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Status = 2;
inline bool CMessageFriendChangeStatusNotice::has_status() const {
  return _has_bit(1);
}
inline void CMessageFriendChangeStatusNotice::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendChangeStatusNotice::status() const {
  return status_;
}
inline void CMessageFriendChangeStatusNotice::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// optional uint32 Rels = 3;
inline bool CMessageFriendChangeStatusNotice::has_rels() const {
  return _has_bit(2);
}
inline void CMessageFriendChangeStatusNotice::clear_rels() {
  rels_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFriendChangeStatusNotice::rels() const {
  return rels_;
}
inline void CMessageFriendChangeStatusNotice::set_rels(::google::protobuf::uint32 value) {
  _set_bit(2);
  rels_ = value;
}

// optional uint32 VipFlag = 4;
inline bool CMessageFriendChangeStatusNotice::has_vipflag() const {
  return _has_bit(3);
}
inline void CMessageFriendChangeStatusNotice::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageFriendChangeStatusNotice::vipflag() const {
  return vipflag_;
}
inline void CMessageFriendChangeStatusNotice::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(3);
  vipflag_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendChangeStatusRequest

// optional uint32 Status = 1;
inline bool CMessageFriendChangeStatusRequest::has_status() const {
  return _has_bit(0);
}
inline void CMessageFriendChangeStatusRequest::clear_status() {
  status_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendChangeStatusRequest::status() const {
  return status_;
}
inline void CMessageFriendChangeStatusRequest::set_status(::google::protobuf::uint32 value) {
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// CMessageAddFriendNotice

// optional .CMessageRouter Router = 1;
inline bool CMessageAddFriendNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessageAddFriendNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageAddFriendNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageAddFriendNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 CharID = 2;
inline bool CMessageAddFriendNotice::has_charid() const {
  return _has_bit(1);
}
inline void CMessageAddFriendNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAddFriendNotice::charid() const {
  return charid_;
}
inline void CMessageAddFriendNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 ReltoMe = 3;
inline bool CMessageAddFriendNotice::has_reltome() const {
  return _has_bit(2);
}
inline void CMessageAddFriendNotice::clear_reltome() {
  reltome_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAddFriendNotice::reltome() const {
  return reltome_;
}
inline void CMessageAddFriendNotice::set_reltome(::google::protobuf::uint32 value) {
  _set_bit(2);
  reltome_ = value;
}

// optional uint32 Status = 4;
inline bool CMessageAddFriendNotice::has_status() const {
  return _has_bit(3);
}
inline void CMessageAddFriendNotice::clear_status() {
  status_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageAddFriendNotice::status() const {
  return status_;
}
inline void CMessageAddFriendNotice::set_status(::google::protobuf::uint32 value) {
  _set_bit(3);
  status_ = value;
}

// optional uint32 GroupID = 5;
inline bool CMessageAddFriendNotice::has_groupid() const {
  return _has_bit(4);
}
inline void CMessageAddFriendNotice::clear_groupid() {
  groupid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageAddFriendNotice::groupid() const {
  return groupid_;
}
inline void CMessageAddFriendNotice::set_groupid(::google::protobuf::uint32 value) {
  _set_bit(4);
  groupid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendChgGroupNameRequest

// optional string NewName = 1;
inline bool CMessageFriendChgGroupNameRequest::has_newname() const {
  return _has_bit(0);
}
inline void CMessageFriendChgGroupNameRequest::clear_newname() {
  if (newname_ != &_default_newname_) {
    newname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageFriendChgGroupNameRequest::newname() const {
  return *newname_;
}
inline void CMessageFriendChgGroupNameRequest::set_newname(const ::std::string& value) {
  _set_bit(0);
  if (newname_ == &_default_newname_) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
}
inline void CMessageFriendChgGroupNameRequest::set_newname(const char* value) {
  _set_bit(0);
  if (newname_ == &_default_newname_) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
}
inline void CMessageFriendChgGroupNameRequest::set_newname(const char* value, size_t size) {
  _set_bit(0);
  if (newname_ == &_default_newname_) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendChgGroupNameRequest::mutable_newname() {
  _set_bit(0);
  if (newname_ == &_default_newname_) {
    newname_ = new ::std::string;
  }
  return newname_;
}

// optional uint32 GroupID = 2;
inline bool CMessageFriendChgGroupNameRequest::has_groupid() const {
  return _has_bit(1);
}
inline void CMessageFriendChgGroupNameRequest::clear_groupid() {
  groupid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendChgGroupNameRequest::groupid() const {
  return groupid_;
}
inline void CMessageFriendChgGroupNameRequest::set_groupid(::google::protobuf::uint32 value) {
  _set_bit(1);
  groupid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendChgFriendGroupRequest

// optional uint32 CharID = 1;
inline bool CMessageFriendChgFriendGroupRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFriendChgFriendGroupRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendChgFriendGroupRequest::charid() const {
  return charid_;
}
inline void CMessageFriendChgFriendGroupRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 DesGroupID = 2;
inline bool CMessageFriendChgFriendGroupRequest::has_desgroupid() const {
  return _has_bit(1);
}
inline void CMessageFriendChgFriendGroupRequest::clear_desgroupid() {
  desgroupid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendChgFriendGroupRequest::desgroupid() const {
  return desgroupid_;
}
inline void CMessageFriendChgFriendGroupRequest::set_desgroupid(::google::protobuf::uint32 value) {
  _set_bit(1);
  desgroupid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendSendMessageRequest

// optional string Msg = 1;
inline bool CMessageFriendSendMessageRequest::has_msg() const {
  return _has_bit(0);
}
inline void CMessageFriendSendMessageRequest::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageFriendSendMessageRequest::msg() const {
  return *msg_;
}
inline void CMessageFriendSendMessageRequest::set_msg(const ::std::string& value) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageFriendSendMessageRequest::set_msg(const char* value) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageFriendSendMessageRequest::set_msg(const char* value, size_t size) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendSendMessageRequest::mutable_msg() {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// optional uint32 CharID = 2;
inline bool CMessageFriendSendMessageRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageFriendSendMessageRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendSendMessageRequest::charid() const {
  return charid_;
}
inline void CMessageFriendSendMessageRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 AutoFlag = 3;
inline bool CMessageFriendSendMessageRequest::has_autoflag() const {
  return _has_bit(2);
}
inline void CMessageFriendSendMessageRequest::clear_autoflag() {
  autoflag_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFriendSendMessageRequest::autoflag() const {
  return autoflag_;
}
inline void CMessageFriendSendMessageRequest::set_autoflag(::google::protobuf::uint32 value) {
  _set_bit(2);
  autoflag_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendMessageNotice

// optional .CMessageRouter Router = 1;
inline bool CMessageFriendMessageNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessageFriendMessageNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageFriendMessageNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageFriendMessageNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 AutoFlag = 2;
inline bool CMessageFriendMessageNotice::has_autoflag() const {
  return _has_bit(1);
}
inline void CMessageFriendMessageNotice::clear_autoflag() {
  autoflag_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendMessageNotice::autoflag() const {
  return autoflag_;
}
inline void CMessageFriendMessageNotice::set_autoflag(::google::protobuf::uint32 value) {
  _set_bit(1);
  autoflag_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageFriendMessageNotice::has_charid() const {
  return _has_bit(2);
}
inline void CMessageFriendMessageNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFriendMessageNotice::charid() const {
  return charid_;
}
inline void CMessageFriendMessageNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 Sex = 4;
inline bool CMessageFriendMessageNotice::has_sex() const {
  return _has_bit(3);
}
inline void CMessageFriendMessageNotice::clear_sex() {
  sex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageFriendMessageNotice::sex() const {
  return sex_;
}
inline void CMessageFriendMessageNotice::set_sex(::google::protobuf::uint32 value) {
  _set_bit(3);
  sex_ = value;
}

// optional string Msg = 5;
inline bool CMessageFriendMessageNotice::has_msg() const {
  return _has_bit(4);
}
inline void CMessageFriendMessageNotice::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageFriendMessageNotice::msg() const {
  return *msg_;
}
inline void CMessageFriendMessageNotice::set_msg(const ::std::string& value) {
  _set_bit(4);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageFriendMessageNotice::set_msg(const char* value) {
  _set_bit(4);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CMessageFriendMessageNotice::set_msg(const char* value, size_t size) {
  _set_bit(4);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendMessageNotice::mutable_msg() {
  _set_bit(4);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// optional uint32 FaceID = 6;
inline bool CMessageFriendMessageNotice::has_faceid() const {
  return _has_bit(5);
}
inline void CMessageFriendMessageNotice::clear_faceid() {
  faceid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageFriendMessageNotice::faceid() const {
  return faceid_;
}
inline void CMessageFriendMessageNotice::set_faceid(::google::protobuf::uint32 value) {
  _set_bit(5);
  faceid_ = value;
}

// optional string Name = 7;
inline bool CMessageFriendMessageNotice::has_name() const {
  return _has_bit(6);
}
inline void CMessageFriendMessageNotice::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CMessageFriendMessageNotice::name() const {
  return *name_;
}
inline void CMessageFriendMessageNotice::set_name(const ::std::string& value) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageFriendMessageNotice::set_name(const char* value) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageFriendMessageNotice::set_name(const char* value, size_t size) {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendMessageNotice::mutable_name() {
  _set_bit(6);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 SendTime = 18;
inline bool CMessageFriendMessageNotice::has_sendtime() const {
  return _has_bit(7);
}
inline void CMessageFriendMessageNotice::clear_sendtime() {
  sendtime_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageFriendMessageNotice::sendtime() const {
  return sendtime_;
}
inline void CMessageFriendMessageNotice::set_sendtime(::google::protobuf::uint32 value) {
  _set_bit(7);
  sendtime_ = value;
}

// optional uint32 CampID = 19;
inline bool CMessageFriendMessageNotice::has_campid() const {
  return _has_bit(8);
}
inline void CMessageFriendMessageNotice::clear_campid() {
  campid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageFriendMessageNotice::campid() const {
  return campid_;
}
inline void CMessageFriendMessageNotice::set_campid(::google::protobuf::uint32 value) {
  _set_bit(8);
  campid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendMoveToBlackRequest

// optional uint32 CharID = 1;
inline bool CMessageFriendMoveToBlackRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFriendMoveToBlackRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendMoveToBlackRequest::charid() const {
  return charid_;
}
inline void CMessageFriendMoveToBlackRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendAddBlackRequest

// optional string DesName = 1;
inline bool CMessageFriendAddBlackRequest::has_desname() const {
  return _has_bit(0);
}
inline void CMessageFriendAddBlackRequest::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageFriendAddBlackRequest::desname() const {
  return *desname_;
}
inline void CMessageFriendAddBlackRequest::set_desname(const ::std::string& value) {
  _set_bit(0);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageFriendAddBlackRequest::set_desname(const char* value) {
  _set_bit(0);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageFriendAddBlackRequest::set_desname(const char* value, size_t size) {
  _set_bit(0);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendAddBlackRequest::mutable_desname() {
  _set_bit(0);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// -------------------------------------------------------------------

// CMessageFriendChgFriendGroupNotice

// optional uint32 CharID = 1;
inline bool CMessageFriendChgFriendGroupNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFriendChgFriendGroupNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendChgFriendGroupNotice::charid() const {
  return charid_;
}
inline void CMessageFriendChgFriendGroupNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 DesGroupID = 2;
inline bool CMessageFriendChgFriendGroupNotice::has_desgroupid() const {
  return _has_bit(1);
}
inline void CMessageFriendChgFriendGroupNotice::clear_desgroupid() {
  desgroupid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendChgFriendGroupNotice::desgroupid() const {
  return desgroupid_;
}
inline void CMessageFriendChgFriendGroupNotice::set_desgroupid(::google::protobuf::uint32 value) {
  _set_bit(1);
  desgroupid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendMoveToBlackNotice

// optional uint32 CharID = 1;
inline bool CMessageFriendMoveToBlackNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFriendMoveToBlackNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendMoveToBlackNotice::charid() const {
  return charid_;
}
inline void CMessageFriendMoveToBlackNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendLockEnemyRequest

// optional uint32 CharID = 1;
inline bool CMessageFriendLockEnemyRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageFriendLockEnemyRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendLockEnemyRequest::charid() const {
  return charid_;
}
inline void CMessageFriendLockEnemyRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 LockType = 2;
inline bool CMessageFriendLockEnemyRequest::has_locktype() const {
  return _has_bit(1);
}
inline void CMessageFriendLockEnemyRequest::clear_locktype() {
  locktype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendLockEnemyRequest::locktype() const {
  return locktype_;
}
inline void CMessageFriendLockEnemyRequest::set_locktype(::google::protobuf::uint32 value) {
  _set_bit(1);
  locktype_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendGetFriendsStateRequest

// -------------------------------------------------------------------

// CMessageFriendGetFriendsStateNotice

// repeated uint32 States = 1;
inline int CMessageFriendGetFriendsStateNotice::states_size() const {
  return states_.size();
}
inline void CMessageFriendGetFriendsStateNotice::clear_states() {
  states_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageFriendGetFriendsStateNotice::states() const {
  return states_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageFriendGetFriendsStateNotice::mutable_states() {
  return &states_;
}
inline ::google::protobuf::uint32 CMessageFriendGetFriendsStateNotice::states(int index) const {
  return states_.Get(index);
}
inline void CMessageFriendGetFriendsStateNotice::set_states(int index, ::google::protobuf::uint32 value) {
  states_.Set(index, value);
}
inline void CMessageFriendGetFriendsStateNotice::add_states(::google::protobuf::uint32 value) {
  states_.Add(value);
}

// repeated uint32 Rels = 2;
inline int CMessageFriendGetFriendsStateNotice::rels_size() const {
  return rels_.size();
}
inline void CMessageFriendGetFriendsStateNotice::clear_rels() {
  rels_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageFriendGetFriendsStateNotice::rels() const {
  return rels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageFriendGetFriendsStateNotice::mutable_rels() {
  return &rels_;
}
inline ::google::protobuf::uint32 CMessageFriendGetFriendsStateNotice::rels(int index) const {
  return rels_.Get(index);
}
inline void CMessageFriendGetFriendsStateNotice::set_rels(int index, ::google::protobuf::uint32 value) {
  rels_.Set(index, value);
}
inline void CMessageFriendGetFriendsStateNotice::add_rels(::google::protobuf::uint32 value) {
  rels_.Add(value);
}

// repeated uint32 CharIDs = 3;
inline int CMessageFriendGetFriendsStateNotice::charids_size() const {
  return charids_.size();
}
inline void CMessageFriendGetFriendsStateNotice::clear_charids() {
  charids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageFriendGetFriendsStateNotice::charids() const {
  return charids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageFriendGetFriendsStateNotice::mutable_charids() {
  return &charids_;
}
inline ::google::protobuf::uint32 CMessageFriendGetFriendsStateNotice::charids(int index) const {
  return charids_.Get(index);
}
inline void CMessageFriendGetFriendsStateNotice::set_charids(int index, ::google::protobuf::uint32 value) {
  charids_.Set(index, value);
}
inline void CMessageFriendGetFriendsStateNotice::add_charids(::google::protobuf::uint32 value) {
  charids_.Add(value);
}

// repeated uint32 VipFlag = 4;
inline int CMessageFriendGetFriendsStateNotice::vipflag_size() const {
  return vipflag_.size();
}
inline void CMessageFriendGetFriendsStateNotice::clear_vipflag() {
  vipflag_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageFriendGetFriendsStateNotice::vipflag() const {
  return vipflag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageFriendGetFriendsStateNotice::mutable_vipflag() {
  return &vipflag_;
}
inline ::google::protobuf::uint32 CMessageFriendGetFriendsStateNotice::vipflag(int index) const {
  return vipflag_.Get(index);
}
inline void CMessageFriendGetFriendsStateNotice::set_vipflag(int index, ::google::protobuf::uint32 value) {
  vipflag_.Set(index, value);
}
inline void CMessageFriendGetFriendsStateNotice::add_vipflag(::google::protobuf::uint32 value) {
  vipflag_.Add(value);
}

// -------------------------------------------------------------------

// CMessageFriendUpdateEnemyRequest

// optional uint32 KillerCharID = 1;
inline bool CMessageFriendUpdateEnemyRequest::has_killercharid() const {
  return _has_bit(0);
}
inline void CMessageFriendUpdateEnemyRequest::clear_killercharid() {
  killercharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendUpdateEnemyRequest::killercharid() const {
  return killercharid_;
}
inline void CMessageFriendUpdateEnemyRequest::set_killercharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  killercharid_ = value;
}

// optional uint32 DelEnemyCharID = 2;
inline bool CMessageFriendUpdateEnemyRequest::has_delenemycharid() const {
  return _has_bit(1);
}
inline void CMessageFriendUpdateEnemyRequest::clear_delenemycharid() {
  delenemycharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendUpdateEnemyRequest::delenemycharid() const {
  return delenemycharid_;
}
inline void CMessageFriendUpdateEnemyRequest::set_delenemycharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  delenemycharid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeMasterRequest

// optional string MasterName = 1;
inline bool CMessageChangeMasterRequest::has_mastername() const {
  return _has_bit(0);
}
inline void CMessageChangeMasterRequest::clear_mastername() {
  if (mastername_ != &_default_mastername_) {
    mastername_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageChangeMasterRequest::mastername() const {
  return *mastername_;
}
inline void CMessageChangeMasterRequest::set_mastername(const ::std::string& value) {
  _set_bit(0);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
}
inline void CMessageChangeMasterRequest::set_mastername(const char* value) {
  _set_bit(0);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
}
inline void CMessageChangeMasterRequest::set_mastername(const char* value, size_t size) {
  _set_bit(0);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeMasterRequest::mutable_mastername() {
  _set_bit(0);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  return mastername_;
}

// optional uint32 CharID = 2;
inline bool CMessageChangeMasterRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageChangeMasterRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeMasterRequest::charid() const {
  return charid_;
}
inline void CMessageChangeMasterRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageChangeMasterRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageChangeMasterRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageChangeMasterRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageChangeMasterRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// repeated uint32 MasterID = 4;
inline int CMessageChangeMasterRequest::masterid_size() const {
  return masterid_.size();
}
inline void CMessageChangeMasterRequest::clear_masterid() {
  masterid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageChangeMasterRequest::masterid() const {
  return masterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageChangeMasterRequest::mutable_masterid() {
  return &masterid_;
}
inline ::google::protobuf::uint32 CMessageChangeMasterRequest::masterid(int index) const {
  return masterid_.Get(index);
}
inline void CMessageChangeMasterRequest::set_masterid(int index, ::google::protobuf::uint32 value) {
  masterid_.Set(index, value);
}
inline void CMessageChangeMasterRequest::add_masterid(::google::protobuf::uint32 value) {
  masterid_.Add(value);
}

// -------------------------------------------------------------------

// CMessageChangeMasterResponse

// optional uint32 Result = 1;
inline bool CMessageChangeMasterResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageChangeMasterResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeMasterResponse::result() const {
  return result_;
}
inline void CMessageChangeMasterResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 MasterID = 2;
inline bool CMessageChangeMasterResponse::has_masterid() const {
  return _has_bit(1);
}
inline void CMessageChangeMasterResponse::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeMasterResponse::masterid() const {
  return masterid_;
}
inline void CMessageChangeMasterResponse::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(1);
  masterid_ = value;
}

// optional string MasterName = 3;
inline bool CMessageChangeMasterResponse::has_mastername() const {
  return _has_bit(2);
}
inline void CMessageChangeMasterResponse::clear_mastername() {
  if (mastername_ != &_default_mastername_) {
    mastername_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageChangeMasterResponse::mastername() const {
  return *mastername_;
}
inline void CMessageChangeMasterResponse::set_mastername(const ::std::string& value) {
  _set_bit(2);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
}
inline void CMessageChangeMasterResponse::set_mastername(const char* value) {
  _set_bit(2);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
}
inline void CMessageChangeMasterResponse::set_mastername(const char* value, size_t size) {
  _set_bit(2);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeMasterResponse::mutable_mastername() {
  _set_bit(2);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  return mastername_;
}

// optional uint32 CharID = 4;
inline bool CMessageChangeMasterResponse::has_charid() const {
  return _has_bit(3);
}
inline void CMessageChangeMasterResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageChangeMasterResponse::charid() const {
  return charid_;
}
inline void CMessageChangeMasterResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(3);
  charid_ = value;
}

// optional uint32 Level = 5;
inline bool CMessageChangeMasterResponse::has_level() const {
  return _has_bit(4);
}
inline void CMessageChangeMasterResponse::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageChangeMasterResponse::level() const {
  return level_;
}
inline void CMessageChangeMasterResponse::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint32 Metier = 6;
inline bool CMessageChangeMasterResponse::has_metier() const {
  return _has_bit(5);
}
inline void CMessageChangeMasterResponse::clear_metier() {
  metier_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageChangeMasterResponse::metier() const {
  return metier_;
}
inline void CMessageChangeMasterResponse::set_metier(::google::protobuf::uint32 value) {
  _set_bit(5);
  metier_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeMasterNotify

// optional .SlaveInfo Slave = 1;
inline bool CMessageChangeMasterNotify::has_slave() const {
  return _has_bit(0);
}
inline void CMessageChangeMasterNotify::clear_slave() {
  if (slave_ != NULL) slave_->::SlaveInfo::Clear();
  _clear_bit(0);
}
inline const ::SlaveInfo& CMessageChangeMasterNotify::slave() const {
  return slave_ != NULL ? *slave_ : *default_instance_->slave_;
}
inline ::SlaveInfo* CMessageChangeMasterNotify::mutable_slave() {
  _set_bit(0);
  if (slave_ == NULL) slave_ = new ::SlaveInfo;
  return slave_;
}

// optional uint32 CharID = 2;
inline bool CMessageChangeMasterNotify::has_charid() const {
  return _has_bit(1);
}
inline void CMessageChangeMasterNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageChangeMasterNotify::charid() const {
  return charid_;
}
inline void CMessageChangeMasterNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetSlaveRequest

// repeated uint32 SlaveID = 1;
inline int CMessageGetSlaveRequest::slaveid_size() const {
  return slaveid_.size();
}
inline void CMessageGetSlaveRequest::clear_slaveid() {
  slaveid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGetSlaveRequest::slaveid() const {
  return slaveid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGetSlaveRequest::mutable_slaveid() {
  return &slaveid_;
}
inline ::google::protobuf::uint32 CMessageGetSlaveRequest::slaveid(int index) const {
  return slaveid_.Get(index);
}
inline void CMessageGetSlaveRequest::set_slaveid(int index, ::google::protobuf::uint32 value) {
  slaveid_.Set(index, value);
}
inline void CMessageGetSlaveRequest::add_slaveid(::google::protobuf::uint32 value) {
  slaveid_.Add(value);
}

// optional uint32 CharID = 2;
inline bool CMessageGetSlaveRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageGetSlaveRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetSlaveRequest::charid() const {
  return charid_;
}
inline void CMessageGetSlaveRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageGetSlaveRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageGetSlaveRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetSlaveRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageGetSlaveRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// repeated uint32 MasterID = 4;
inline int CMessageGetSlaveRequest::masterid_size() const {
  return masterid_.size();
}
inline void CMessageGetSlaveRequest::clear_masterid() {
  masterid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageGetSlaveRequest::masterid() const {
  return masterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageGetSlaveRequest::mutable_masterid() {
  return &masterid_;
}
inline ::google::protobuf::uint32 CMessageGetSlaveRequest::masterid(int index) const {
  return masterid_.Get(index);
}
inline void CMessageGetSlaveRequest::set_masterid(int index, ::google::protobuf::uint32 value) {
  masterid_.Set(index, value);
}
inline void CMessageGetSlaveRequest::add_masterid(::google::protobuf::uint32 value) {
  masterid_.Add(value);
}

// -------------------------------------------------------------------

// SlaveInfo

// optional uint32 SlaveID = 1;
inline bool SlaveInfo::has_slaveid() const {
  return _has_bit(0);
}
inline void SlaveInfo::clear_slaveid() {
  slaveid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SlaveInfo::slaveid() const {
  return slaveid_;
}
inline void SlaveInfo::set_slaveid(::google::protobuf::uint32 value) {
  _set_bit(0);
  slaveid_ = value;
}

// optional string SlaveName = 2;
inline bool SlaveInfo::has_slavename() const {
  return _has_bit(1);
}
inline void SlaveInfo::clear_slavename() {
  if (slavename_ != &_default_slavename_) {
    slavename_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& SlaveInfo::slavename() const {
  return *slavename_;
}
inline void SlaveInfo::set_slavename(const ::std::string& value) {
  _set_bit(1);
  if (slavename_ == &_default_slavename_) {
    slavename_ = new ::std::string;
  }
  slavename_->assign(value);
}
inline void SlaveInfo::set_slavename(const char* value) {
  _set_bit(1);
  if (slavename_ == &_default_slavename_) {
    slavename_ = new ::std::string;
  }
  slavename_->assign(value);
}
inline void SlaveInfo::set_slavename(const char* value, size_t size) {
  _set_bit(1);
  if (slavename_ == &_default_slavename_) {
    slavename_ = new ::std::string;
  }
  slavename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SlaveInfo::mutable_slavename() {
  _set_bit(1);
  if (slavename_ == &_default_slavename_) {
    slavename_ = new ::std::string;
  }
  return slavename_;
}

// optional uint32 Level = 3;
inline bool SlaveInfo::has_level() const {
  return _has_bit(2);
}
inline void SlaveInfo::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 SlaveInfo::level() const {
  return level_;
}
inline void SlaveInfo::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// optional uint32 Metier = 4;
inline bool SlaveInfo::has_metier() const {
  return _has_bit(3);
}
inline void SlaveInfo::clear_metier() {
  metier_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 SlaveInfo::metier() const {
  return metier_;
}
inline void SlaveInfo::set_metier(::google::protobuf::uint32 value) {
  _set_bit(3);
  metier_ = value;
}

// optional uint32 Face = 5;
inline bool SlaveInfo::has_face() const {
  return _has_bit(4);
}
inline void SlaveInfo::clear_face() {
  face_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 SlaveInfo::face() const {
  return face_;
}
inline void SlaveInfo::set_face(::google::protobuf::uint32 value) {
  _set_bit(4);
  face_ = value;
}

// optional uint32 Sex = 6;
inline bool SlaveInfo::has_sex() const {
  return _has_bit(5);
}
inline void SlaveInfo::clear_sex() {
  sex_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 SlaveInfo::sex() const {
  return sex_;
}
inline void SlaveInfo::set_sex(::google::protobuf::uint32 value) {
  _set_bit(5);
  sex_ = value;
}

// optional uint32 Online = 7;
inline bool SlaveInfo::has_online() const {
  return _has_bit(6);
}
inline void SlaveInfo::clear_online() {
  online_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 SlaveInfo::online() const {
  return online_;
}
inline void SlaveInfo::set_online(::google::protobuf::uint32 value) {
  _set_bit(6);
  online_ = value;
}

// -------------------------------------------------------------------

// CMessageGetSlaveResponse

// optional uint32 Result = 1;
inline bool CMessageGetSlaveResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageGetSlaveResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetSlaveResponse::result() const {
  return result_;
}
inline void CMessageGetSlaveResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// repeated .SlaveInfo Slave = 2;
inline int CMessageGetSlaveResponse::slave_size() const {
  return slave_.size();
}
inline void CMessageGetSlaveResponse::clear_slave() {
  slave_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >&
CMessageGetSlaveResponse::slave() const {
  return slave_;
}
inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >*
CMessageGetSlaveResponse::mutable_slave() {
  return &slave_;
}
inline const ::SlaveInfo& CMessageGetSlaveResponse::slave(int index) const {
  return slave_.Get(index);
}
inline ::SlaveInfo* CMessageGetSlaveResponse::mutable_slave(int index) {
  return slave_.Mutable(index);
}
inline ::SlaveInfo* CMessageGetSlaveResponse::add_slave() {
  return slave_.Add();
}

// optional uint32 CharID = 3;
inline bool CMessageGetSlaveResponse::has_charid() const {
  return _has_bit(2);
}
inline void CMessageGetSlaveResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetSlaveResponse::charid() const {
  return charid_;
}
inline void CMessageGetSlaveResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// repeated .SlaveInfo Master = 4;
inline int CMessageGetSlaveResponse::master_size() const {
  return master_.size();
}
inline void CMessageGetSlaveResponse::clear_master() {
  master_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >&
CMessageGetSlaveResponse::master() const {
  return master_;
}
inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >*
CMessageGetSlaveResponse::mutable_master() {
  return &master_;
}
inline const ::SlaveInfo& CMessageGetSlaveResponse::master(int index) const {
  return master_.Get(index);
}
inline ::SlaveInfo* CMessageGetSlaveResponse::mutable_master(int index) {
  return master_.Mutable(index);
}
inline ::SlaveInfo* CMessageGetSlaveResponse::add_master() {
  return master_.Add();
}

// -------------------------------------------------------------------

// CMessageSlaveLevelUpNotify

// optional .SlaveInfo Slave = 1;
inline bool CMessageSlaveLevelUpNotify::has_slave() const {
  return _has_bit(0);
}
inline void CMessageSlaveLevelUpNotify::clear_slave() {
  if (slave_ != NULL) slave_->::SlaveInfo::Clear();
  _clear_bit(0);
}
inline const ::SlaveInfo& CMessageSlaveLevelUpNotify::slave() const {
  return slave_ != NULL ? *slave_ : *default_instance_->slave_;
}
inline ::SlaveInfo* CMessageSlaveLevelUpNotify::mutable_slave() {
  _set_bit(0);
  if (slave_ == NULL) slave_ = new ::SlaveInfo;
  return slave_;
}

// optional uint32 CharID = 2;
inline bool CMessageSlaveLevelUpNotify::has_charid() const {
  return _has_bit(1);
}
inline void CMessageSlaveLevelUpNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSlaveLevelUpNotify::charid() const {
  return charid_;
}
inline void CMessageSlaveLevelUpNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageAnswerChangeNotify

// optional .SlaveInfo Slave = 1;
inline bool CMessageAnswerChangeNotify::has_slave() const {
  return _has_bit(0);
}
inline void CMessageAnswerChangeNotify::clear_slave() {
  if (slave_ != NULL) slave_->::SlaveInfo::Clear();
  _clear_bit(0);
}
inline const ::SlaveInfo& CMessageAnswerChangeNotify::slave() const {
  return slave_ != NULL ? *slave_ : *default_instance_->slave_;
}
inline ::SlaveInfo* CMessageAnswerChangeNotify::mutable_slave() {
  _set_bit(0);
  if (slave_ == NULL) slave_ = new ::SlaveInfo;
  return slave_;
}

// optional uint32 CharID = 2;
inline bool CMessageAnswerChangeNotify::has_charid() const {
  return _has_bit(1);
}
inline void CMessageAnswerChangeNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAnswerChangeNotify::charid() const {
  return charid_;
}
inline void CMessageAnswerChangeNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageAnswerChangeRequest

// optional uint32 Result = 1;
inline bool CMessageAnswerChangeRequest::has_result() const {
  return _has_bit(0);
}
inline void CMessageAnswerChangeRequest::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAnswerChangeRequest::result() const {
  return result_;
}
inline void CMessageAnswerChangeRequest::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageAnswerChangeRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageAnswerChangeRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAnswerChangeRequest::charid() const {
  return charid_;
}
inline void CMessageAnswerChangeRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 SlaveID = 3;
inline bool CMessageAnswerChangeRequest::has_slaveid() const {
  return _has_bit(2);
}
inline void CMessageAnswerChangeRequest::clear_slaveid() {
  slaveid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAnswerChangeRequest::slaveid() const {
  return slaveid_;
}
inline void CMessageAnswerChangeRequest::set_slaveid(::google::protobuf::uint32 value) {
  _set_bit(2);
  slaveid_ = value;
}

// optional uint32 Error = 4;
inline bool CMessageAnswerChangeRequest::has_error() const {
  return _has_bit(3);
}
inline void CMessageAnswerChangeRequest::clear_error() {
  error_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageAnswerChangeRequest::error() const {
  return error_;
}
inline void CMessageAnswerChangeRequest::set_error(::google::protobuf::uint32 value) {
  _set_bit(3);
  error_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryPlayerRequest

// repeated uint32 QueryID = 1;
inline int CMessageQueryPlayerRequest::queryid_size() const {
  return queryid_.size();
}
inline void CMessageQueryPlayerRequest::clear_queryid() {
  queryid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageQueryPlayerRequest::queryid() const {
  return queryid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageQueryPlayerRequest::mutable_queryid() {
  return &queryid_;
}
inline ::google::protobuf::uint32 CMessageQueryPlayerRequest::queryid(int index) const {
  return queryid_.Get(index);
}
inline void CMessageQueryPlayerRequest::set_queryid(int index, ::google::protobuf::uint32 value) {
  queryid_.Set(index, value);
}
inline void CMessageQueryPlayerRequest::add_queryid(::google::protobuf::uint32 value) {
  queryid_.Add(value);
}

// optional uint32 CharID = 2;
inline bool CMessageQueryPlayerRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageQueryPlayerRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryPlayerRequest::charid() const {
  return charid_;
}
inline void CMessageQueryPlayerRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryPlayerResponse

// repeated .SlaveInfo Info = 1;
inline int CMessageQueryPlayerResponse::info_size() const {
  return info_.size();
}
inline void CMessageQueryPlayerResponse::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >&
CMessageQueryPlayerResponse::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >*
CMessageQueryPlayerResponse::mutable_info() {
  return &info_;
}
inline const ::SlaveInfo& CMessageQueryPlayerResponse::info(int index) const {
  return info_.Get(index);
}
inline ::SlaveInfo* CMessageQueryPlayerResponse::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::SlaveInfo* CMessageQueryPlayerResponse::add_info() {
  return info_.Add();
}

// optional uint32 CharID = 2;
inline bool CMessageQueryPlayerResponse::has_charid() const {
  return _has_bit(1);
}
inline void CMessageQueryPlayerResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryPlayerResponse::charid() const {
  return charid_;
}
inline void CMessageQueryPlayerResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageSlaveOnOffNotify

// optional uint32 SrcCharID = 1;
inline bool CMessageSlaveOnOffNotify::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessageSlaveOnOffNotify::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSlaveOnOffNotify::srccharid() const {
  return srccharid_;
}
inline void CMessageSlaveOnOffNotify::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// optional string SrcCharName = 2;
inline bool CMessageSlaveOnOffNotify::has_srccharname() const {
  return _has_bit(1);
}
inline void CMessageSlaveOnOffNotify::clear_srccharname() {
  if (srccharname_ != &_default_srccharname_) {
    srccharname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageSlaveOnOffNotify::srccharname() const {
  return *srccharname_;
}
inline void CMessageSlaveOnOffNotify::set_srccharname(const ::std::string& value) {
  _set_bit(1);
  if (srccharname_ == &_default_srccharname_) {
    srccharname_ = new ::std::string;
  }
  srccharname_->assign(value);
}
inline void CMessageSlaveOnOffNotify::set_srccharname(const char* value) {
  _set_bit(1);
  if (srccharname_ == &_default_srccharname_) {
    srccharname_ = new ::std::string;
  }
  srccharname_->assign(value);
}
inline void CMessageSlaveOnOffNotify::set_srccharname(const char* value, size_t size) {
  _set_bit(1);
  if (srccharname_ == &_default_srccharname_) {
    srccharname_ = new ::std::string;
  }
  srccharname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSlaveOnOffNotify::mutable_srccharname() {
  _set_bit(1);
  if (srccharname_ == &_default_srccharname_) {
    srccharname_ = new ::std::string;
  }
  return srccharname_;
}

// optional uint32 Online = 3;
inline bool CMessageSlaveOnOffNotify::has_online() const {
  return _has_bit(2);
}
inline void CMessageSlaveOnOffNotify::clear_online() {
  online_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSlaveOnOffNotify::online() const {
  return online_;
}
inline void CMessageSlaveOnOffNotify::set_online(::google::protobuf::uint32 value) {
  _set_bit(2);
  online_ = value;
}

// repeated uint32 DesCharID = 4;
inline int CMessageSlaveOnOffNotify::descharid_size() const {
  return descharid_.size();
}
inline void CMessageSlaveOnOffNotify::clear_descharid() {
  descharid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageSlaveOnOffNotify::descharid() const {
  return descharid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageSlaveOnOffNotify::mutable_descharid() {
  return &descharid_;
}
inline ::google::protobuf::uint32 CMessageSlaveOnOffNotify::descharid(int index) const {
  return descharid_.Get(index);
}
inline void CMessageSlaveOnOffNotify::set_descharid(int index, ::google::protobuf::uint32 value) {
  descharid_.Set(index, value);
}
inline void CMessageSlaveOnOffNotify::add_descharid(::google::protobuf::uint32 value) {
  descharid_.Add(value);
}

// optional uint32 Level = 5;
inline bool CMessageSlaveOnOffNotify::has_level() const {
  return _has_bit(4);
}
inline void CMessageSlaveOnOffNotify::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageSlaveOnOffNotify::level() const {
  return level_;
}
inline void CMessageSlaveOnOffNotify::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// -------------------------------------------------------------------

// CMessageSlaveNumNotify

// repeated uint32 SlaveValue = 1;
inline int CMessageSlaveNumNotify::slavevalue_size() const {
  return slavevalue_.size();
}
inline void CMessageSlaveNumNotify::clear_slavevalue() {
  slavevalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageSlaveNumNotify::slavevalue() const {
  return slavevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageSlaveNumNotify::mutable_slavevalue() {
  return &slavevalue_;
}
inline ::google::protobuf::uint32 CMessageSlaveNumNotify::slavevalue(int index) const {
  return slavevalue_.Get(index);
}
inline void CMessageSlaveNumNotify::set_slavevalue(int index, ::google::protobuf::uint32 value) {
  slavevalue_.Set(index, value);
}
inline void CMessageSlaveNumNotify::add_slavevalue(::google::protobuf::uint32 value) {
  slavevalue_.Add(value);
}

// optional uint32 SlavePoint = 2;
inline bool CMessageSlaveNumNotify::has_slavepoint() const {
  return _has_bit(1);
}
inline void CMessageSlaveNumNotify::clear_slavepoint() {
  slavepoint_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSlaveNumNotify::slavepoint() const {
  return slavepoint_;
}
inline void CMessageSlaveNumNotify::set_slavepoint(::google::protobuf::uint32 value) {
  _set_bit(1);
  slavepoint_ = value;
}

// optional uint32 MasterPoint = 3;
inline bool CMessageSlaveNumNotify::has_masterpoint() const {
  return _has_bit(2);
}
inline void CMessageSlaveNumNotify::clear_masterpoint() {
  masterpoint_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSlaveNumNotify::masterpoint() const {
  return masterpoint_;
}
inline void CMessageSlaveNumNotify::set_masterpoint(::google::protobuf::uint32 value) {
  _set_bit(2);
  masterpoint_ = value;
}

// optional uint32 SlaveTotal = 4;
inline bool CMessageSlaveNumNotify::has_slavetotal() const {
  return _has_bit(3);
}
inline void CMessageSlaveNumNotify::clear_slavetotal() {
  slavetotal_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSlaveNumNotify::slavetotal() const {
  return slavetotal_;
}
inline void CMessageSlaveNumNotify::set_slavetotal(::google::protobuf::uint32 value) {
  _set_bit(3);
  slavetotal_ = value;
}

// optional uint32 MasterTotal = 5;
inline bool CMessageSlaveNumNotify::has_mastertotal() const {
  return _has_bit(4);
}
inline void CMessageSlaveNumNotify::clear_mastertotal() {
  mastertotal_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageSlaveNumNotify::mastertotal() const {
  return mastertotal_;
}
inline void CMessageSlaveNumNotify::set_mastertotal(::google::protobuf::uint32 value) {
  _set_bit(4);
  mastertotal_ = value;
}

// -------------------------------------------------------------------

// CMessageRemoveSlaveRequest

// optional uint32 SlaveID = 1;
inline bool CMessageRemoveSlaveRequest::has_slaveid() const {
  return _has_bit(0);
}
inline void CMessageRemoveSlaveRequest::clear_slaveid() {
  slaveid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveRequest::slaveid() const {
  return slaveid_;
}
inline void CMessageRemoveSlaveRequest::set_slaveid(::google::protobuf::uint32 value) {
  _set_bit(0);
  slaveid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageRemoveSlaveRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageRemoveSlaveRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveRequest::charid() const {
  return charid_;
}
inline void CMessageRemoveSlaveRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageRemoveSlaveRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageRemoveSlaveRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageRemoveSlaveRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageRemoveSlaveResponse

// optional uint32 Result = 1;
inline bool CMessageRemoveSlaveResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageRemoveSlaveResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveResponse::result() const {
  return result_;
}
inline void CMessageRemoveSlaveResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageRemoveSlaveResponse::has_charid() const {
  return _has_bit(1);
}
inline void CMessageRemoveSlaveResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveResponse::charid() const {
  return charid_;
}
inline void CMessageRemoveSlaveResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 SlaveID = 3;
inline bool CMessageRemoveSlaveResponse::has_slaveid() const {
  return _has_bit(2);
}
inline void CMessageRemoveSlaveResponse::clear_slaveid() {
  slaveid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveResponse::slaveid() const {
  return slaveid_;
}
inline void CMessageRemoveSlaveResponse::set_slaveid(::google::protobuf::uint32 value) {
  _set_bit(2);
  slaveid_ = value;
}

// optional uint32 Param = 4;
inline bool CMessageRemoveSlaveResponse::has_param() const {
  return _has_bit(3);
}
inline void CMessageRemoveSlaveResponse::clear_param() {
  param_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveResponse::param() const {
  return param_;
}
inline void CMessageRemoveSlaveResponse::set_param(::google::protobuf::uint32 value) {
  _set_bit(3);
  param_ = value;
}

// -------------------------------------------------------------------

// CMessageRemoveSlaveNotify

// optional uint32 CharID = 1;
inline bool CMessageRemoveSlaveNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageRemoveSlaveNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveNotify::charid() const {
  return charid_;
}
inline void CMessageRemoveSlaveNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 MasterID = 2;
inline bool CMessageRemoveSlaveNotify::has_masterid() const {
  return _has_bit(1);
}
inline void CMessageRemoveSlaveNotify::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRemoveSlaveNotify::masterid() const {
  return masterid_;
}
inline void CMessageRemoveSlaveNotify::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(1);
  masterid_ = value;
}

// -------------------------------------------------------------------

// CMessageRemoveMasterRequest

// optional uint32 MasterID = 1;
inline bool CMessageRemoveMasterRequest::has_masterid() const {
  return _has_bit(0);
}
inline void CMessageRemoveMasterRequest::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterRequest::masterid() const {
  return masterid_;
}
inline void CMessageRemoveMasterRequest::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(0);
  masterid_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageRemoveMasterRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageRemoveMasterRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterRequest::charid() const {
  return charid_;
}
inline void CMessageRemoveMasterRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageRemoveMasterRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageRemoveMasterRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageRemoveMasterRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageRemoveMasterResponse

// optional uint32 Result = 1;
inline bool CMessageRemoveMasterResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageRemoveMasterResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterResponse::result() const {
  return result_;
}
inline void CMessageRemoveMasterResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageRemoveMasterResponse::has_charid() const {
  return _has_bit(1);
}
inline void CMessageRemoveMasterResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterResponse::charid() const {
  return charid_;
}
inline void CMessageRemoveMasterResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 MasterID = 3;
inline bool CMessageRemoveMasterResponse::has_masterid() const {
  return _has_bit(2);
}
inline void CMessageRemoveMasterResponse::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterResponse::masterid() const {
  return masterid_;
}
inline void CMessageRemoveMasterResponse::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(2);
  masterid_ = value;
}

// -------------------------------------------------------------------

// CMessageRemoveMasterNotify

// optional uint32 CharID = 1;
inline bool CMessageRemoveMasterNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageRemoveMasterNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterNotify::charid() const {
  return charid_;
}
inline void CMessageRemoveMasterNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 SlaveID = 2;
inline bool CMessageRemoveMasterNotify::has_slaveid() const {
  return _has_bit(1);
}
inline void CMessageRemoveMasterNotify::clear_slaveid() {
  slaveid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterNotify::slaveid() const {
  return slaveid_;
}
inline void CMessageRemoveMasterNotify::set_slaveid(::google::protobuf::uint32 value) {
  _set_bit(1);
  slaveid_ = value;
}

// optional uint32 Param = 3;
inline bool CMessageRemoveMasterNotify::has_param() const {
  return _has_bit(2);
}
inline void CMessageRemoveMasterNotify::clear_param() {
  param_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRemoveMasterNotify::param() const {
  return param_;
}
inline void CMessageRemoveMasterNotify::set_param(::google::protobuf::uint32 value) {
  _set_bit(2);
  param_ = value;
}

// -------------------------------------------------------------------

// CMessageAlterMasterPercentRequest

// optional uint32 MasterID = 1;
inline bool CMessageAlterMasterPercentRequest::has_masterid() const {
  return _has_bit(0);
}
inline void CMessageAlterMasterPercentRequest::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAlterMasterPercentRequest::masterid() const {
  return masterid_;
}
inline void CMessageAlterMasterPercentRequest::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(0);
  masterid_ = value;
}

// optional uint32 Percent = 2;
inline bool CMessageAlterMasterPercentRequest::has_percent() const {
  return _has_bit(1);
}
inline void CMessageAlterMasterPercentRequest::clear_percent() {
  percent_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAlterMasterPercentRequest::percent() const {
  return percent_;
}
inline void CMessageAlterMasterPercentRequest::set_percent(::google::protobuf::uint32 value) {
  _set_bit(1);
  percent_ = value;
}

// -------------------------------------------------------------------

// CMessageAlterMasterPercentResponse

// optional uint32 Result = 1;
inline bool CMessageAlterMasterPercentResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageAlterMasterPercentResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAlterMasterPercentResponse::result() const {
  return result_;
}
inline void CMessageAlterMasterPercentResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 MasterID = 2;
inline bool CMessageAlterMasterPercentResponse::has_masterid() const {
  return _has_bit(1);
}
inline void CMessageAlterMasterPercentResponse::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAlterMasterPercentResponse::masterid() const {
  return masterid_;
}
inline void CMessageAlterMasterPercentResponse::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(1);
  masterid_ = value;
}

// optional uint32 Percent = 3;
inline bool CMessageAlterMasterPercentResponse::has_percent() const {
  return _has_bit(2);
}
inline void CMessageAlterMasterPercentResponse::clear_percent() {
  percent_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAlterMasterPercentResponse::percent() const {
  return percent_;
}
inline void CMessageAlterMasterPercentResponse::set_percent(::google::protobuf::uint32 value) {
  _set_bit(2);
  percent_ = value;
}

// -------------------------------------------------------------------

// CMessageGetLowPlayerRequest

// optional uint32 NPCEntityID = 1;
inline bool CMessageGetLowPlayerRequest::has_npcentityid() const {
  return _has_bit(0);
}
inline void CMessageGetLowPlayerRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetLowPlayerRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageGetLowPlayerRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetLowPlayerResponse

// optional uint32 Result = 1;
inline bool CMessageGetLowPlayerResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageGetLowPlayerResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetLowPlayerResponse::result() const {
  return result_;
}
inline void CMessageGetLowPlayerResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// repeated .SlaveInfo Player = 2;
inline int CMessageGetLowPlayerResponse::player_size() const {
  return player_.size();
}
inline void CMessageGetLowPlayerResponse::clear_player() {
  player_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >&
CMessageGetLowPlayerResponse::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >*
CMessageGetLowPlayerResponse::mutable_player() {
  return &player_;
}
inline const ::SlaveInfo& CMessageGetLowPlayerResponse::player(int index) const {
  return player_.Get(index);
}
inline ::SlaveInfo* CMessageGetLowPlayerResponse::mutable_player(int index) {
  return player_.Mutable(index);
}
inline ::SlaveInfo* CMessageGetLowPlayerResponse::add_player() {
  return player_.Add();
}

// repeated .SlaveInfo Required = 3;
inline int CMessageGetLowPlayerResponse::required_size() const {
  return required_.size();
}
inline void CMessageGetLowPlayerResponse::clear_required() {
  required_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SlaveInfo >&
CMessageGetLowPlayerResponse::required() const {
  return required_;
}
inline ::google::protobuf::RepeatedPtrField< ::SlaveInfo >*
CMessageGetLowPlayerResponse::mutable_required() {
  return &required_;
}
inline const ::SlaveInfo& CMessageGetLowPlayerResponse::required(int index) const {
  return required_.Get(index);
}
inline ::SlaveInfo* CMessageGetLowPlayerResponse::mutable_required(int index) {
  return required_.Mutable(index);
}
inline ::SlaveInfo* CMessageGetLowPlayerResponse::add_required() {
  return required_.Add();
}

// -------------------------------------------------------------------

// CMessageFriendLevelUpNotify

// optional .CMessageRouter Router = 1;
inline bool CMessageFriendLevelUpNotify::has_router() const {
  return _has_bit(0);
}
inline void CMessageFriendLevelUpNotify::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageFriendLevelUpNotify::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageFriendLevelUpNotify::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 Level = 2;
inline bool CMessageFriendLevelUpNotify::has_level() const {
  return _has_bit(1);
}
inline void CMessageFriendLevelUpNotify::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageFriendLevelUpNotify::level() const {
  return level_;
}
inline void CMessageFriendLevelUpNotify::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional string Name = 3;
inline bool CMessageFriendLevelUpNotify::has_name() const {
  return _has_bit(2);
}
inline void CMessageFriendLevelUpNotify::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageFriendLevelUpNotify::name() const {
  return *name_;
}
inline void CMessageFriendLevelUpNotify::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageFriendLevelUpNotify::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageFriendLevelUpNotify::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendLevelUpNotify::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 RoleID = 4;
inline bool CMessageFriendLevelUpNotify::has_roleid() const {
  return _has_bit(3);
}
inline void CMessageFriendLevelUpNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageFriendLevelUpNotify::roleid() const {
  return roleid_;
}
inline void CMessageFriendLevelUpNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(3);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendBlessRequest

// optional uint32 RoleID = 1;
inline bool CMessageFriendBlessRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageFriendBlessRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendBlessRequest::roleid() const {
  return roleid_;
}
inline void CMessageFriendBlessRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendBlessResponse

// optional uint32 Errcode = 1;
inline bool CMessageFriendBlessResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageFriendBlessResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageFriendBlessResponse::errcode() const {
  return errcode_;
}
inline void CMessageFriendBlessResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageFriendBlessNotify

// optional .CMessageRouter Router = 1;
inline bool CMessageFriendBlessNotify::has_router() const {
  return _has_bit(0);
}
inline void CMessageFriendBlessNotify::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageFriendBlessNotify::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageFriendBlessNotify::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional string FriendName = 2;
inline bool CMessageFriendBlessNotify::has_friendname() const {
  return _has_bit(1);
}
inline void CMessageFriendBlessNotify::clear_friendname() {
  if (friendname_ != &_default_friendname_) {
    friendname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageFriendBlessNotify::friendname() const {
  return *friendname_;
}
inline void CMessageFriendBlessNotify::set_friendname(const ::std::string& value) {
  _set_bit(1);
  if (friendname_ == &_default_friendname_) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void CMessageFriendBlessNotify::set_friendname(const char* value) {
  _set_bit(1);
  if (friendname_ == &_default_friendname_) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
}
inline void CMessageFriendBlessNotify::set_friendname(const char* value, size_t size) {
  _set_bit(1);
  if (friendname_ == &_default_friendname_) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageFriendBlessNotify::mutable_friendname() {
  _set_bit(1);
  if (friendname_ == &_default_friendname_) {
    friendname_ = new ::std::string;
  }
  return friendname_;
}

// optional uint32 Exp = 3;
inline bool CMessageFriendBlessNotify::has_exp() const {
  return _has_bit(2);
}
inline void CMessageFriendBlessNotify::clear_exp() {
  exp_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageFriendBlessNotify::exp() const {
  return exp_;
}
inline void CMessageFriendBlessNotify::set_exp(::google::protobuf::uint32 value) {
  _set_bit(2);
  exp_ = value;
}

// -------------------------------------------------------------------

// CMessageModifyIntimacyNogify

// optional .CMessageRouter Router = 1;
inline bool CMessageModifyIntimacyNogify::has_router() const {
  return _has_bit(0);
}
inline void CMessageModifyIntimacyNogify::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageModifyIntimacyNogify::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageModifyIntimacyNogify::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 ChangeValue = 2;
inline bool CMessageModifyIntimacyNogify::has_changevalue() const {
  return _has_bit(1);
}
inline void CMessageModifyIntimacyNogify::clear_changevalue() {
  changevalue_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageModifyIntimacyNogify::changevalue() const {
  return changevalue_;
}
inline void CMessageModifyIntimacyNogify::set_changevalue(::google::protobuf::uint32 value) {
  _set_bit(1);
  changevalue_ = value;
}

// optional uint32 IntimacyDegree = 3;
inline bool CMessageModifyIntimacyNogify::has_intimacydegree() const {
  return _has_bit(2);
}
inline void CMessageModifyIntimacyNogify::clear_intimacydegree() {
  intimacydegree_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageModifyIntimacyNogify::intimacydegree() const {
  return intimacydegree_;
}
inline void CMessageModifyIntimacyNogify::set_intimacydegree(::google::protobuf::uint32 value) {
  _set_bit(2);
  intimacydegree_ = value;
}

// optional uint32 Type = 4;
inline bool CMessageModifyIntimacyNogify::has_type() const {
  return _has_bit(3);
}
inline void CMessageModifyIntimacyNogify::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageModifyIntimacyNogify::type() const {
  return type_;
}
inline void CMessageModifyIntimacyNogify::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// optional uint32 FriendID = 5;
inline bool CMessageModifyIntimacyNogify::has_friendid() const {
  return _has_bit(4);
}
inline void CMessageModifyIntimacyNogify::clear_friendid() {
  friendid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageModifyIntimacyNogify::friendid() const {
  return friendid_;
}
inline void CMessageModifyIntimacyNogify::set_friendid(::google::protobuf::uint32 value) {
  _set_bit(4);
  friendid_ = value;
}

// optional uint32 UpdateTime = 7;
inline bool CMessageModifyIntimacyNogify::has_updatetime() const {
  return _has_bit(5);
}
inline void CMessageModifyIntimacyNogify::clear_updatetime() {
  updatetime_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageModifyIntimacyNogify::updatetime() const {
  return updatetime_;
}
inline void CMessageModifyIntimacyNogify::set_updatetime(::google::protobuf::uint32 value) {
  _set_bit(5);
  updatetime_ = value;
}

// optional uint32 DailyIntimacy = 8;
inline bool CMessageModifyIntimacyNogify::has_dailyintimacy() const {
  return _has_bit(6);
}
inline void CMessageModifyIntimacyNogify::clear_dailyintimacy() {
  dailyintimacy_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageModifyIntimacyNogify::dailyintimacy() const {
  return dailyintimacy_;
}
inline void CMessageModifyIntimacyNogify::set_dailyintimacy(::google::protobuf::uint32 value) {
  _set_bit(6);
  dailyintimacy_ = value;
}

// -------------------------------------------------------------------

// CMessageModifyLastTimeAllOnLineNotify

// optional .CMessageRouter Router = 1;
inline bool CMessageModifyLastTimeAllOnLineNotify::has_router() const {
  return _has_bit(0);
}
inline void CMessageModifyLastTimeAllOnLineNotify::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageModifyLastTimeAllOnLineNotify::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageModifyLastTimeAllOnLineNotify::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 Time = 2;
inline bool CMessageModifyLastTimeAllOnLineNotify::has_time() const {
  return _has_bit(1);
}
inline void CMessageModifyLastTimeAllOnLineNotify::clear_time() {
  time_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageModifyLastTimeAllOnLineNotify::time() const {
  return time_;
}
inline void CMessageModifyLastTimeAllOnLineNotify::set_time(::google::protobuf::uint32 value) {
  _set_bit(1);
  time_ = value;
}

// optional uint32 FriendID = 3;
inline bool CMessageModifyLastTimeAllOnLineNotify::has_friendid() const {
  return _has_bit(2);
}
inline void CMessageModifyLastTimeAllOnLineNotify::clear_friendid() {
  friendid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageModifyLastTimeAllOnLineNotify::friendid() const {
  return friendid_;
}
inline void CMessageModifyLastTimeAllOnLineNotify::set_friendid(::google::protobuf::uint32 value) {
  _set_bit(2);
  friendid_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateSwornTeamRequest

// optional string SwornName = 1;
inline bool CMessageCreateSwornTeamRequest::has_swornname() const {
  return _has_bit(0);
}
inline void CMessageCreateSwornTeamRequest::clear_swornname() {
  if (swornname_ != &_default_swornname_) {
    swornname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageCreateSwornTeamRequest::swornname() const {
  return *swornname_;
}
inline void CMessageCreateSwornTeamRequest::set_swornname(const ::std::string& value) {
  _set_bit(0);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageCreateSwornTeamRequest::set_swornname(const char* value) {
  _set_bit(0);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageCreateSwornTeamRequest::set_swornname(const char* value, size_t size) {
  _set_bit(0);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateSwornTeamRequest::mutable_swornname() {
  _set_bit(0);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  return swornname_;
}

// -------------------------------------------------------------------

// CMessageCreateSwornTeamResponse

// optional uint32 Errcode = 1;
inline bool CMessageCreateSwornTeamResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageCreateSwornTeamResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCreateSwornTeamResponse::errcode() const {
  return errcode_;
}
inline void CMessageCreateSwornTeamResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageLeaveSwornTeamRequest

// -------------------------------------------------------------------

// CMessageLeaveSwornTeamResponse

// optional uint32 Errcode = 1;
inline bool CMessageLeaveSwornTeamResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageLeaveSwornTeamResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLeaveSwornTeamResponse::errcode() const {
  return errcode_;
}
inline void CMessageLeaveSwornTeamResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageKickSwornMemberRequest

// optional uint32 RoleID = 1;
inline bool CMessageKickSwornMemberRequest::has_roleid() const {
  return _has_bit(0);
}
inline void CMessageKickSwornMemberRequest::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickSwornMemberRequest::roleid() const {
  return roleid_;
}
inline void CMessageKickSwornMemberRequest::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickSwornMemberResponse

// optional uint32 Errcode = 1;
inline bool CMessageKickSwornMemberResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageKickSwornMemberResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKickSwornMemberResponse::errcode() const {
  return errcode_;
}
inline void CMessageKickSwornMemberResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageDisbandSwornTeamRequest

// -------------------------------------------------------------------

// CMessageDisbandSwornTeamResponse

// optional uint32 Errcode = 1;
inline bool CMessageDisbandSwornTeamResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageDisbandSwornTeamResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageDisbandSwornTeamResponse::errcode() const {
  return errcode_;
}
inline void CMessageDisbandSwornTeamResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMsgSwornMember

// optional uint32 RoleID = 1;
inline bool CMsgSwornMember::has_roleid() const {
  return _has_bit(0);
}
inline void CMsgSwornMember::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMsgSwornMember::roleid() const {
  return roleid_;
}
inline void CMsgSwornMember::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional string RoleName = 2;
inline bool CMsgSwornMember::has_rolename() const {
  return _has_bit(1);
}
inline void CMsgSwornMember::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMsgSwornMember::rolename() const {
  return *rolename_;
}
inline void CMsgSwornMember::set_rolename(const ::std::string& value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMsgSwornMember::set_rolename(const char* value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CMsgSwornMember::set_rolename(const char* value, size_t size) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSwornMember::mutable_rolename() {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional uint32 RolePos = 3;
inline bool CMsgSwornMember::has_rolepos() const {
  return _has_bit(2);
}
inline void CMsgSwornMember::clear_rolepos() {
  rolepos_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMsgSwornMember::rolepos() const {
  return rolepos_;
}
inline void CMsgSwornMember::set_rolepos(::google::protobuf::uint32 value) {
  _set_bit(2);
  rolepos_ = value;
}

// optional uint32 FaceID = 4;
inline bool CMsgSwornMember::has_faceid() const {
  return _has_bit(3);
}
inline void CMsgSwornMember::clear_faceid() {
  faceid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMsgSwornMember::faceid() const {
  return faceid_;
}
inline void CMsgSwornMember::set_faceid(::google::protobuf::uint32 value) {
  _set_bit(3);
  faceid_ = value;
}

// optional uint32 RoleLevel = 5;
inline bool CMsgSwornMember::has_rolelevel() const {
  return _has_bit(4);
}
inline void CMsgSwornMember::clear_rolelevel() {
  rolelevel_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMsgSwornMember::rolelevel() const {
  return rolelevel_;
}
inline void CMsgSwornMember::set_rolelevel(::google::protobuf::uint32 value) {
  _set_bit(4);
  rolelevel_ = value;
}

// optional uint32 MetierID = 6;
inline bool CMsgSwornMember::has_metierid() const {
  return _has_bit(5);
}
inline void CMsgSwornMember::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMsgSwornMember::metierid() const {
  return metierid_;
}
inline void CMsgSwornMember::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(5);
  metierid_ = value;
}

// optional uint32 GenderID = 7;
inline bool CMsgSwornMember::has_genderid() const {
  return _has_bit(6);
}
inline void CMsgSwornMember::clear_genderid() {
  genderid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMsgSwornMember::genderid() const {
  return genderid_;
}
inline void CMsgSwornMember::set_genderid(::google::protobuf::uint32 value) {
  _set_bit(6);
  genderid_ = value;
}

// -------------------------------------------------------------------

// CMessageSwornInfoNotify

// repeated .CMsgSwornMember SwornMember = 1;
inline int CMessageSwornInfoNotify::swornmember_size() const {
  return swornmember_.size();
}
inline void CMessageSwornInfoNotify::clear_swornmember() {
  swornmember_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >&
CMessageSwornInfoNotify::swornmember() const {
  return swornmember_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >*
CMessageSwornInfoNotify::mutable_swornmember() {
  return &swornmember_;
}
inline const ::CMsgSwornMember& CMessageSwornInfoNotify::swornmember(int index) const {
  return swornmember_.Get(index);
}
inline ::CMsgSwornMember* CMessageSwornInfoNotify::mutable_swornmember(int index) {
  return swornmember_.Mutable(index);
}
inline ::CMsgSwornMember* CMessageSwornInfoNotify::add_swornmember() {
  return swornmember_.Add();
}

// optional string SwornName = 2;
inline bool CMessageSwornInfoNotify::has_swornname() const {
  return _has_bit(1);
}
inline void CMessageSwornInfoNotify::clear_swornname() {
  if (swornname_ != &_default_swornname_) {
    swornname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageSwornInfoNotify::swornname() const {
  return *swornname_;
}
inline void CMessageSwornInfoNotify::set_swornname(const ::std::string& value) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageSwornInfoNotify::set_swornname(const char* value) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageSwornInfoNotify::set_swornname(const char* value, size_t size) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSwornInfoNotify::mutable_swornname() {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  return swornname_;
}

// optional uint32 RoleID = 3;
inline bool CMessageSwornInfoNotify::has_roleid() const {
  return _has_bit(2);
}
inline void CMessageSwornInfoNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSwornInfoNotify::roleid() const {
  return roleid_;
}
inline void CMessageSwornInfoNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageCreateSwornTeamNotify

// repeated .CMsgSwornMember SwornMember = 1;
inline int CMessageCreateSwornTeamNotify::swornmember_size() const {
  return swornmember_.size();
}
inline void CMessageCreateSwornTeamNotify::clear_swornmember() {
  swornmember_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >&
CMessageCreateSwornTeamNotify::swornmember() const {
  return swornmember_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >*
CMessageCreateSwornTeamNotify::mutable_swornmember() {
  return &swornmember_;
}
inline const ::CMsgSwornMember& CMessageCreateSwornTeamNotify::swornmember(int index) const {
  return swornmember_.Get(index);
}
inline ::CMsgSwornMember* CMessageCreateSwornTeamNotify::mutable_swornmember(int index) {
  return swornmember_.Mutable(index);
}
inline ::CMsgSwornMember* CMessageCreateSwornTeamNotify::add_swornmember() {
  return swornmember_.Add();
}

// optional string SwornName = 2;
inline bool CMessageCreateSwornTeamNotify::has_swornname() const {
  return _has_bit(1);
}
inline void CMessageCreateSwornTeamNotify::clear_swornname() {
  if (swornname_ != &_default_swornname_) {
    swornname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageCreateSwornTeamNotify::swornname() const {
  return *swornname_;
}
inline void CMessageCreateSwornTeamNotify::set_swornname(const ::std::string& value) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageCreateSwornTeamNotify::set_swornname(const char* value) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageCreateSwornTeamNotify::set_swornname(const char* value, size_t size) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCreateSwornTeamNotify::mutable_swornname() {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  return swornname_;
}

// optional uint32 MasterID = 3;
inline bool CMessageCreateSwornTeamNotify::has_masterid() const {
  return _has_bit(2);
}
inline void CMessageCreateSwornTeamNotify::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCreateSwornTeamNotify::masterid() const {
  return masterid_;
}
inline void CMessageCreateSwornTeamNotify::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(2);
  masterid_ = value;
}

// -------------------------------------------------------------------

// CMessageLeaveSwornTeamNotify

// optional .CMessageRouter Router = 1;
inline bool CMessageLeaveSwornTeamNotify::has_router() const {
  return _has_bit(0);
}
inline void CMessageLeaveSwornTeamNotify::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageLeaveSwornTeamNotify::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageLeaveSwornTeamNotify::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 RoleID = 2;
inline bool CMessageLeaveSwornTeamNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageLeaveSwornTeamNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLeaveSwornTeamNotify::roleid() const {
  return roleid_;
}
inline void CMessageLeaveSwornTeamNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// optional uint32 MasterID = 3;
inline bool CMessageLeaveSwornTeamNotify::has_masterid() const {
  return _has_bit(2);
}
inline void CMessageLeaveSwornTeamNotify::clear_masterid() {
  masterid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLeaveSwornTeamNotify::masterid() const {
  return masterid_;
}
inline void CMessageLeaveSwornTeamNotify::set_masterid(::google::protobuf::uint32 value) {
  _set_bit(2);
  masterid_ = value;
}

// -------------------------------------------------------------------

// CMessageKickSwornMemberNotify

// optional .CMessageRouter Router = 1;
inline bool CMessageKickSwornMemberNotify::has_router() const {
  return _has_bit(0);
}
inline void CMessageKickSwornMemberNotify::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageKickSwornMemberNotify::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageKickSwornMemberNotify::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 RoleID = 2;
inline bool CMessageKickSwornMemberNotify::has_roleid() const {
  return _has_bit(1);
}
inline void CMessageKickSwornMemberNotify::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKickSwornMemberNotify::roleid() const {
  return roleid_;
}
inline void CMessageKickSwornMemberNotify::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeSwornNameRequest

// optional string SwornName = 1;
inline bool CMessageChangeSwornNameRequest::has_swornname() const {
  return _has_bit(0);
}
inline void CMessageChangeSwornNameRequest::clear_swornname() {
  if (swornname_ != &_default_swornname_) {
    swornname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageChangeSwornNameRequest::swornname() const {
  return *swornname_;
}
inline void CMessageChangeSwornNameRequest::set_swornname(const ::std::string& value) {
  _set_bit(0);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageChangeSwornNameRequest::set_swornname(const char* value) {
  _set_bit(0);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageChangeSwornNameRequest::set_swornname(const char* value, size_t size) {
  _set_bit(0);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeSwornNameRequest::mutable_swornname() {
  _set_bit(0);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  return swornname_;
}

// -------------------------------------------------------------------

// CMessageChangeSwornNameResponse

// optional uint32 Errcode = 1;
inline bool CMessageChangeSwornNameResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageChangeSwornNameResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageChangeSwornNameResponse::errcode() const {
  return errcode_;
}
inline void CMessageChangeSwornNameResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageChangeSwornNameNotify

// optional .CMessageRouter Router = 1;
inline bool CMessageChangeSwornNameNotify::has_router() const {
  return _has_bit(0);
}
inline void CMessageChangeSwornNameNotify::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageChangeSwornNameNotify::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageChangeSwornNameNotify::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional string SwornName = 2;
inline bool CMessageChangeSwornNameNotify::has_swornname() const {
  return _has_bit(1);
}
inline void CMessageChangeSwornNameNotify::clear_swornname() {
  if (swornname_ != &_default_swornname_) {
    swornname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageChangeSwornNameNotify::swornname() const {
  return *swornname_;
}
inline void CMessageChangeSwornNameNotify::set_swornname(const ::std::string& value) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageChangeSwornNameNotify::set_swornname(const char* value) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageChangeSwornNameNotify::set_swornname(const char* value, size_t size) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageChangeSwornNameNotify::mutable_swornname() {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  return swornname_;
}

// -------------------------------------------------------------------

// CMessageDisbandSwornTeamNotify

// optional .CMessageRouter Router = 1;
inline bool CMessageDisbandSwornTeamNotify::has_router() const {
  return _has_bit(0);
}
inline void CMessageDisbandSwornTeamNotify::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageDisbandSwornTeamNotify::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageDisbandSwornTeamNotify::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 SwornID = 2;
inline bool CMessageDisbandSwornTeamNotify::has_swornid() const {
  return _has_bit(1);
}
inline void CMessageDisbandSwornTeamNotify::clear_swornid() {
  swornid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageDisbandSwornTeamNotify::swornid() const {
  return swornid_;
}
inline void CMessageDisbandSwornTeamNotify::set_swornid(::google::protobuf::uint32 value) {
  _set_bit(1);
  swornid_ = value;
}

// -------------------------------------------------------------------

// CMessageLatestContactChangeStatusNotice

// optional uint32 CharID = 1;
inline bool CMessageLatestContactChangeStatusNotice::has_charid() const {
  return _has_bit(0);
}
inline void CMessageLatestContactChangeStatusNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLatestContactChangeStatusNotice::charid() const {
  return charid_;
}
inline void CMessageLatestContactChangeStatusNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Status = 2;
inline bool CMessageLatestContactChangeStatusNotice::has_status() const {
  return _has_bit(1);
}
inline void CMessageLatestContactChangeStatusNotice::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLatestContactChangeStatusNotice::status() const {
  return status_;
}
inline void CMessageLatestContactChangeStatusNotice::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// optional uint32 VipFlag = 3;
inline bool CMessageLatestContactChangeStatusNotice::has_vipflag() const {
  return _has_bit(2);
}
inline void CMessageLatestContactChangeStatusNotice::clear_vipflag() {
  vipflag_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLatestContactChangeStatusNotice::vipflag() const {
  return vipflag_;
}
inline void CMessageLatestContactChangeStatusNotice::set_vipflag(::google::protobuf::uint32 value) {
  _set_bit(2);
  vipflag_ = value;
}

// -------------------------------------------------------------------

// CMessageLastContacterNotice

// optional .CMessageRouter Router = 1;
inline bool CMessageLastContacterNotice::has_router() const {
  return _has_bit(0);
}
inline void CMessageLastContacterNotice::clear_router() {
  if (router_ != NULL) router_->::CMessageRouter::Clear();
  _clear_bit(0);
}
inline const ::CMessageRouter& CMessageLastContacterNotice::router() const {
  return router_ != NULL ? *router_ : *default_instance_->router_;
}
inline ::CMessageRouter* CMessageLastContacterNotice::mutable_router() {
  _set_bit(0);
  if (router_ == NULL) router_ = new ::CMessageRouter;
  return router_;
}

// optional uint32 CharID = 2;
inline bool CMessageLastContacterNotice::has_charid() const {
  return _has_bit(1);
}
inline void CMessageLastContacterNotice::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLastContacterNotice::charid() const {
  return charid_;
}
inline void CMessageLastContacterNotice::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 Sex = 3;
inline bool CMessageLastContacterNotice::has_sex() const {
  return _has_bit(2);
}
inline void CMessageLastContacterNotice::clear_sex() {
  sex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLastContacterNotice::sex() const {
  return sex_;
}
inline void CMessageLastContacterNotice::set_sex(::google::protobuf::uint32 value) {
  _set_bit(2);
  sex_ = value;
}

// optional uint32 FaceID = 4;
inline bool CMessageLastContacterNotice::has_faceid() const {
  return _has_bit(3);
}
inline void CMessageLastContacterNotice::clear_faceid() {
  faceid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageLastContacterNotice::faceid() const {
  return faceid_;
}
inline void CMessageLastContacterNotice::set_faceid(::google::protobuf::uint32 value) {
  _set_bit(3);
  faceid_ = value;
}

// optional string Name = 5;
inline bool CMessageLastContacterNotice::has_name() const {
  return _has_bit(4);
}
inline void CMessageLastContacterNotice::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageLastContacterNotice::name() const {
  return *name_;
}
inline void CMessageLastContacterNotice::set_name(const ::std::string& value) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageLastContacterNotice::set_name(const char* value) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageLastContacterNotice::set_name(const char* value, size_t size) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageLastContacterNotice::mutable_name() {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 NationID = 6;
inline bool CMessageLastContacterNotice::has_nationid() const {
  return _has_bit(5);
}
inline void CMessageLastContacterNotice::clear_nationid() {
  nationid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageLastContacterNotice::nationid() const {
  return nationid_;
}
inline void CMessageLastContacterNotice::set_nationid(::google::protobuf::uint32 value) {
  _set_bit(5);
  nationid_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdateLastContacterNotice

// optional uint32 SenderID = 1;
inline bool CMessageUpdateLastContacterNotice::has_senderid() const {
  return _has_bit(0);
}
inline void CMessageUpdateLastContacterNotice::clear_senderid() {
  senderid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdateLastContacterNotice::senderid() const {
  return senderid_;
}
inline void CMessageUpdateLastContacterNotice::set_senderid(::google::protobuf::uint32 value) {
  _set_bit(0);
  senderid_ = value;
}

// optional uint32 ReceiverID = 2;
inline bool CMessageUpdateLastContacterNotice::has_receiverid() const {
  return _has_bit(1);
}
inline void CMessageUpdateLastContacterNotice::clear_receiverid() {
  receiverid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdateLastContacterNotice::receiverid() const {
  return receiverid_;
}
inline void CMessageUpdateLastContacterNotice::set_receiverid(::google::protobuf::uint32 value) {
  _set_bit(1);
  receiverid_ = value;
}

// -------------------------------------------------------------------

// CMessageUploadContacterList

// optional uint32 PlayerID = 1;
inline bool CMessageUploadContacterList::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageUploadContacterList::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUploadContacterList::playerid() const {
  return playerid_;
}
inline void CMessageUploadContacterList::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// repeated uint32 ContacterID = 2;
inline int CMessageUploadContacterList::contacterid_size() const {
  return contacterid_.size();
}
inline void CMessageUploadContacterList::clear_contacterid() {
  contacterid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageUploadContacterList::contacterid() const {
  return contacterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageUploadContacterList::mutable_contacterid() {
  return &contacterid_;
}
inline ::google::protobuf::uint32 CMessageUploadContacterList::contacterid(int index) const {
  return contacterid_.Get(index);
}
inline void CMessageUploadContacterList::set_contacterid(int index, ::google::protobuf::uint32 value) {
  contacterid_.Set(index, value);
}
inline void CMessageUploadContacterList::add_contacterid(::google::protobuf::uint32 value) {
  contacterid_.Add(value);
}

// -------------------------------------------------------------------

// CMessageContacterStatusNotifyG2S

// optional uint32 PlayerID = 1;
inline bool CMessageContacterStatusNotifyG2S::has_playerid() const {
  return _has_bit(0);
}
inline void CMessageContacterStatusNotifyG2S::clear_playerid() {
  playerid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageContacterStatusNotifyG2S::playerid() const {
  return playerid_;
}
inline void CMessageContacterStatusNotifyG2S::set_playerid(::google::protobuf::uint32 value) {
  _set_bit(0);
  playerid_ = value;
}

// optional uint32 PlayerStatus = 2;
inline bool CMessageContacterStatusNotifyG2S::has_playerstatus() const {
  return _has_bit(1);
}
inline void CMessageContacterStatusNotifyG2S::clear_playerstatus() {
  playerstatus_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageContacterStatusNotifyG2S::playerstatus() const {
  return playerstatus_;
}
inline void CMessageContacterStatusNotifyG2S::set_playerstatus(::google::protobuf::uint32 value) {
  _set_bit(1);
  playerstatus_ = value;
}

// optional uint32 ContacterID = 3;
inline bool CMessageContacterStatusNotifyG2S::has_contacterid() const {
  return _has_bit(2);
}
inline void CMessageContacterStatusNotifyG2S::clear_contacterid() {
  contacterid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageContacterStatusNotifyG2S::contacterid() const {
  return contacterid_;
}
inline void CMessageContacterStatusNotifyG2S::set_contacterid(::google::protobuf::uint32 value) {
  _set_bit(2);
  contacterid_ = value;
}

// -------------------------------------------------------------------

// CMessageRebuildSwornRequest

// -------------------------------------------------------------------

// CMessageRebuildSwornResponse

// optional uint32 Errcode = 1;
inline bool CMessageRebuildSwornResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageRebuildSwornResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRebuildSwornResponse::errcode() const {
  return errcode_;
}
inline void CMessageRebuildSwornResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageRebuildSwornNotify

// repeated .CMsgSwornMember SwornMember = 1;
inline int CMessageRebuildSwornNotify::swornmember_size() const {
  return swornmember_.size();
}
inline void CMessageRebuildSwornNotify::clear_swornmember() {
  swornmember_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >&
CMessageRebuildSwornNotify::swornmember() const {
  return swornmember_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSwornMember >*
CMessageRebuildSwornNotify::mutable_swornmember() {
  return &swornmember_;
}
inline const ::CMsgSwornMember& CMessageRebuildSwornNotify::swornmember(int index) const {
  return swornmember_.Get(index);
}
inline ::CMsgSwornMember* CMessageRebuildSwornNotify::mutable_swornmember(int index) {
  return swornmember_.Mutable(index);
}
inline ::CMsgSwornMember* CMessageRebuildSwornNotify::add_swornmember() {
  return swornmember_.Add();
}

// optional string SwornName = 2;
inline bool CMessageRebuildSwornNotify::has_swornname() const {
  return _has_bit(1);
}
inline void CMessageRebuildSwornNotify::clear_swornname() {
  if (swornname_ != &_default_swornname_) {
    swornname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageRebuildSwornNotify::swornname() const {
  return *swornname_;
}
inline void CMessageRebuildSwornNotify::set_swornname(const ::std::string& value) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageRebuildSwornNotify::set_swornname(const char* value) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(value);
}
inline void CMessageRebuildSwornNotify::set_swornname(const char* value, size_t size) {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  swornname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRebuildSwornNotify::mutable_swornname() {
  _set_bit(1);
  if (swornname_ == &_default_swornname_) {
    swornname_ = new ::std::string;
  }
  return swornname_;
}

// repeated uint32 NewMember = 3;
inline int CMessageRebuildSwornNotify::newmember_size() const {
  return newmember_.size();
}
inline void CMessageRebuildSwornNotify::clear_newmember() {
  newmember_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageRebuildSwornNotify::newmember() const {
  return newmember_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageRebuildSwornNotify::mutable_newmember() {
  return &newmember_;
}
inline ::google::protobuf::uint32 CMessageRebuildSwornNotify::newmember(int index) const {
  return newmember_.Get(index);
}
inline void CMessageRebuildSwornNotify::set_newmember(int index, ::google::protobuf::uint32 value) {
  newmember_.Set(index, value);
}
inline void CMessageRebuildSwornNotify::add_newmember(::google::protobuf::uint32 value) {
  newmember_.Add(value);
}

#endif  // PROTOBUF_friendmessage_5fpb_2ehxx__INCLUDED
