// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_countrymessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_countrymessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "corpsinfo_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();

class PBOfficialData;
class PBOfficialList;
class CMessageCountryInfoRequest;
class CMessageCountryInfoResponse;
class CMessageJoinCountryRequest;
class CMessageJoinCountryResponse;
class CMessageJoinCountryNotify;
class CMessageLeaveCountryRequest;
class CMessageLeaveCountryResponse;
class CMessageSetOfficialRequest;
class CMessageSetOfficialResponse;
class CMessageUnSetOfficialRequest;
class CMessageUnSetOfficialResponse;
class CMessageUseFunctionRequest;
class CMessageUseFunctionResponse;
class CMessageOfficialInfoRequest;
class CMessageOfficialInfoResponse;
class CMessageUseTimeRequest;
class CMessageUseTimeResponse;
class CMessageWorldQuestRequest;
class CMessageWorldQuestResponse;
class CMessageWorldAnswerRequest;
class CMessageWorldAnswerResponse;
class CMessageWorldAnswerNotify;
class CMessageWorldQuestNotify;
class CMessageWorldResultNotify;
class CWorldStatusData;
class CMessageWorldInfoRequest;
class CMessageWorldInfoResponse;
class CMessageOfficialChangeNotify;
class CMessagePlayerGSInfoRequest;
class PlayerGSInfo;
class WorldStatusInfo;
class GTAndLWInfo;
class CMessagePlayerGSInfoResponse;
class CMessagePlayerGSInfoNotify;
class CMessageKingChangeNotify;
class CMessageSummonPlayerNotify;
class CMessageGetAwardRequest;
class CMessageGetAwardResponse;
class CMessageStartCountryRedstoneNotify;
class TeleportData;
class CMessageSubmitWarRequest;
class CMessageSubmitWarResponse;
class CMessageEnterWarRequest;
class CMessageEnterWarResponse;
class CMessageQueryWarCampRequest;
class CMessageQueryWarCampResponse;
class CMessageQueryWarNumRequest;
class WarNumData;
class CMessageQueryWarNumResponse;
class WarDetailInfo;
class CMessageQueryWarInfoRequest;
class CMessageQueryWarInfoResponse;
class WarRankInfo;
class CMessageQueryWarRankRequest;
class CMessageQueryWarRankResponse;
class CMessageWarSourceNotify;
class CMessageBidCampRequest;
class CMessageBidCampResponse;
class CMessageCampBidInfoRequest;
class CMessageCampBidInfoResponse;
class CMessageCampResInfoRequest;
class CMessageCampResInfoResponse;
class CMessageGetWarAwardRequest;
class CMessageGetWarAwardResponse;
class NPCWarInfo;
class CMessageWarInfoNotify;
class CMessageQueryWarAwardRequest;
class CMessageQueryWarAwardResponse;
class CMessageWarHonorNotify;
class CMessageWarCampNotify;
class CMessageModifyRateRequest;
class CMessageModifyRateResponse;
class CMessageModifyRateNotify;
class CMessageGetTaxRequest;
class CMessageGetTaxResponse;
class CMessageQueryStoneNotify;
class CMessageRefuseSummonRequest;
class CMessageRefuseSummonNotify;
class PBCampWeakForceInfo;
class CMessageCampWeakListRequest;
class CMessageCampWeakListResponse;
class CMessageCampGetAwardRequest;
class CMessageCampGetAwardResponse;
class CMessageAccuseKingRequest;
class CMessageAccuseKingResponse;
class CMessageAccuseKingNotify;
class CMessageAccuseStatusNotify;
class CMessagePowerInfoRequest;
class PowerInfo;
class CMessagePowerInfoResponse;
class CMessageMakeGuoTanNotify;
class CMessageMakeLuanWuNotify;

enum CountryMessageID {
  ID_C2S_REQUEST_COUNTRYINFO = 21505,
  ID_S2C_RESPONSE_COUNTRYINFO = 21506,
  ID_C2S_REQUEST_JOINCOUNTRY = 21507,
  ID_S2C_RESPONSE_JOINCOUNTRY = 21508,
  ID_C2S_REQUEST_LEAVECOUNTRY = 21509,
  ID_S2C_RESPONSE_LEAVECOUNTRY = 21510,
  ID_C2S_REQUEST_SETOFFICIAL = 21511,
  ID_S2C_RESPONSE_SETOFFICIAL = 21512,
  ID_C2S_REQUEST_UNSETOFFICIAL = 21513,
  ID_S2C_RESPONSE_UNSETOFFICIAL = 21514,
  ID_C2S_REQUEST_USEFUNCTION = 21515,
  ID_S2C_RESPONSE_USEFUNCTION = 21516,
  ID_C2S_REQUEST_OFFICIALINFO = 21517,
  ID_S2C_RESPONSE_OFFICIALINFO = 21518,
  ID_C2S_REQUEST_USETIME = 21519,
  ID_S2C_RESPONSE_USETIME = 21520,
  ID_C2S_REQUEST_WORLDQUEST = 21521,
  ID_S2C_RESPONSE_WORLDQUEST = 21522,
  ID_S2C_NOTIFY_WORLDQUEST = 21523,
  ID_C2S_REQUEST_WORLDANSWER = 21524,
  ID_S2C_RESPONSE_WORLDANSWER = 21525,
  ID_S2C_NOTIFY_WORLDRESULT = 21526,
  ID_C2S_REQUEST_WORLDINFO = 21527,
  ID_S2C_RESPONSE_WORLDINFO = 21528,
  ID_S2C_NOTIFY_JOINCOUNTRY = 21529,
  ID_S2C_NOTIFY_OFFICIALCHANGE = 21530,
  ID_S2C_NOTIFY_WORLDANSWER = 21531,
  ID_C2S_REQUEST_PLAYERGSINFO = 21532,
  ID_S2C_RESPONSE_PLAYERGSINFO = 21533,
  ID_S2C_NOTIFY_PLAYERGSINFO = 21534,
  ID_S2C_NOTIFY_KINGCHANGE = 21536,
  ID_C2S_REQUEST_GETAWARD = 21537,
  ID_S2C_RESPONSE_GETAWARD = 21538,
  ID_S2C_NOTIFY_STARTCOUNTRYREDSTONE = 21539,
  ID_S2C_NOTIFY_SUMMONPLAYER = 21540,
  ID_C2S_REQUEST_SUBMITWAR = 21541,
  ID_S2C_RESPONSE_SUBMITWAR = 21542,
  ID_C2S_REQUEST_ENTERWAR = 21543,
  ID_S2C_RESPONSE_ENTERWAR = 21544,
  ID_C2S_REQUEST_QUERYWARCAMP = 21545,
  ID_S2C_RESPONSE_QUERYWARCAMP = 21546,
  ID_C2S_REQUEST_QUERYWARNUM = 21547,
  ID_S2C_RESPONSE_QUERYWARNUM = 21548,
  ID_C2S_REQUEST_QUERYWARINFO = 21549,
  ID_S2C_RESPONSE_QUERYWARINFO = 21550,
  ID_C2S_REQUEST_QUERYRANK = 21552,
  ID_S2C_RESPONSE_QUERYRANK = 21553,
  ID_S2C_NOTIFY_WARSOURCE = 21554,
  ID_C2S_REQUEST_BIDCAMP = 21555,
  ID_S2C_RESPONSE_BIDCAMP = 21556,
  ID_C2S_REQUEST_CAMPBIDINFO = 21557,
  ID_S2C_RESPONSE_CAMPBIDINFO = 21558,
  ID_C2S_REQUEST_CAMPRESINFO = 21559,
  ID_S2C_RESPONSE_CAMPRESINFO = 21560,
  ID_C2S_REQUEST_GETWARAWARD = 21561,
  ID_S2C_RESPONSE_GETWARAWARD = 21562,
  ID_S2C_NOTIFY_WARINFO = 21563,
  ID_C2S_REQUEST_QUERYWARAWARD = 21564,
  ID_S2C_RESPONSE_QUERYWARAWARD = 21565,
  ID_S2C_NOTIFY_WARHONOR = 21566,
  ID_S2C_NOTIFY_WARCAMP = 21568,
  ID_C2S_REQUEST_MODIFYRATE = 21569,
  ID_S2C_RESPONSE_MODIFYRATE = 21570,
  ID_S2C_NOTIFY_MODIFYRATE = 21571,
  ID_C2S_REQUEST_GETTAX = 21572,
  ID_S2C_RESPONSE_GETTAX = 21573,
  ID_S2C_NOTIFY_QUERYSTONE = 21574,
  ID_C2S_REQUEST_REFUSESUMMON = 21575,
  ID_S2C_NOTIFY_REFUSESUMMON = 21576,
  ID_C2S_REQUEST_ACCUSEKING = 21577,
  ID_S2C_RESPONSE_ACCUSEKING = 21578,
  ID_S2C_NOTIFY_ACCUSEKING = 21579,
  ID_S2C_NOTIFY_ACCUSESTATUS = 21580,
  ID_C2S_REQUEST_POWERINFO = 21581,
  ID_S2C_RESPONSE_POWERINFO = 21582,
  ID_S2C_NOTIFY_MAKEGUOTAN = 21584,
  ID_S2C_NOTIFY_MAKELUANWU = 21585
};
const ::google::protobuf::EnumDescriptor* CountryMessageID_descriptor();
bool CountryMessageID_IsValid(int value);
const CountryMessageID CountryMessageID_MIN = ID_C2S_REQUEST_COUNTRYINFO;
const CountryMessageID CountryMessageID_MAX = ID_S2C_NOTIFY_MAKELUANWU;

inline const ::std::string& CountryMessageID_Name(CountryMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CountryMessageID_descriptor(), value);
}
inline bool CountryMessageID_Parse(
    const ::std::string& name, CountryMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CountryMessageID>(
    CountryMessageID_descriptor(), name, value);
}
enum EM_CampMessageID {
  ID_C2S_CAMPWEAKLIST_REQUEST = 21761,
  ID_S2C_CAMPWEAKLIST_RESPONSE = 21762,
  ID_C2S_CAMPAWARDQUERY_REQUEST = 21763,
  ID_S2C_CAMPAWARDQUERY_RESPONSE = 21764,
  ID_C2S_CAMPGETAWARD_REQUEST = 21765,
  ID_S2C_CAMPGETAWARD_RESPONSE = 21766
};
const ::google::protobuf::EnumDescriptor* EM_CampMessageID_descriptor();
bool EM_CampMessageID_IsValid(int value);
const EM_CampMessageID EM_CampMessageID_MIN = ID_C2S_CAMPWEAKLIST_REQUEST;
const EM_CampMessageID EM_CampMessageID_MAX = ID_S2C_CAMPGETAWARD_RESPONSE;

inline const ::std::string& EM_CampMessageID_Name(EM_CampMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    EM_CampMessageID_descriptor(), value);
}
inline bool EM_CampMessageID_Parse(
    const ::std::string& name, EM_CampMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EM_CampMessageID>(
    EM_CampMessageID_descriptor(), name, value);
}
// ===================================================================

class PBOfficialData : public ::google::protobuf::Message {
 public:
  PBOfficialData();
  virtual ~PBOfficialData();
  
  PBOfficialData(const PBOfficialData& from);
  
  inline PBOfficialData& operator=(const PBOfficialData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOfficialData& default_instance();
  void Swap(PBOfficialData* other);
  
  // implements Message ----------------------------------------------
  
  PBOfficialData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOfficialData& from);
  void MergeFrom(const PBOfficialData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 OfficialLevel = 3;
  inline bool has_officiallevel() const;
  inline void clear_officiallevel();
  static const int kOfficialLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 officiallevel() const;
  inline void set_officiallevel(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialOrder = 4;
  inline bool has_officialorder() const;
  inline void clear_officialorder();
  static const int kOfficialOrderFieldNumber = 4;
  inline ::google::protobuf::uint32 officialorder() const;
  inline void set_officialorder(::google::protobuf::uint32 value);
  
  // repeated uint32 UseTimes = 5;
  inline int usetimes_size() const;
  inline void clear_usetimes();
  static const int kUseTimesFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& usetimes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_usetimes();
  inline ::google::protobuf::uint32 usetimes(int index) const;
  inline void set_usetimes(int index, ::google::protobuf::uint32 value);
  inline void add_usetimes(::google::protobuf::uint32 value);
  
  // repeated uint32 UseX = 6;
  inline int usex_size() const;
  inline void clear_usex();
  static const int kUseXFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& usex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_usex();
  inline ::google::protobuf::uint32 usex(int index) const;
  inline void set_usex(int index, ::google::protobuf::uint32 value);
  inline void add_usex(::google::protobuf::uint32 value);
  
  // repeated uint32 UseY = 7;
  inline int usey_size() const;
  inline void clear_usey();
  static const int kUseYFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& usey() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_usey();
  inline ::google::protobuf::uint32 usey(int index) const;
  inline void set_usey(int index, ::google::protobuf::uint32 value);
  inline void add_usey(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 officiallevel_;
  ::google::protobuf::uint32 officialorder_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > usetimes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > usex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > usey_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOfficialData* default_instance_;
};
// -------------------------------------------------------------------

class PBOfficialList : public ::google::protobuf::Message {
 public:
  PBOfficialList();
  virtual ~PBOfficialList();
  
  PBOfficialList(const PBOfficialList& from);
  
  inline PBOfficialList& operator=(const PBOfficialList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOfficialList& default_instance();
  void Swap(PBOfficialList* other);
  
  // implements Message ----------------------------------------------
  
  PBOfficialList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOfficialList& from);
  void MergeFrom(const PBOfficialList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBOfficialData OfficialData = 1;
  inline int officialdata_size() const;
  inline void clear_officialdata();
  static const int kOfficialDataFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBOfficialData >& officialdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBOfficialData >* mutable_officialdata();
  inline const ::PBOfficialData& officialdata(int index) const;
  inline ::PBOfficialData* mutable_officialdata(int index);
  inline ::PBOfficialData* add_officialdata();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBOfficialData > officialdata_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOfficialList* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCountryInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageCountryInfoRequest();
  virtual ~CMessageCountryInfoRequest();
  
  CMessageCountryInfoRequest(const CMessageCountryInfoRequest& from);
  
  inline CMessageCountryInfoRequest& operator=(const CMessageCountryInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCountryInfoRequest& default_instance();
  void Swap(CMessageCountryInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCountryInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCountryInfoRequest& from);
  void MergeFrom(const CMessageCountryInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 2;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedFull = 3;
  inline bool has_needfull() const;
  inline void clear_needfull();
  static const int kNeedFullFieldNumber = 3;
  inline ::google::protobuf::uint32 needfull() const;
  inline void set_needfull(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 4;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 4;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 needfull_;
  ::google::protobuf::uint32 worldid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCountryInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCountryInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageCountryInfoResponse();
  virtual ~CMessageCountryInfoResponse();
  
  CMessageCountryInfoResponse(const CMessageCountryInfoResponse& from);
  
  inline CMessageCountryInfoResponse& operator=(const CMessageCountryInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCountryInfoResponse& default_instance();
  void Swap(CMessageCountryInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCountryInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCountryInfoResponse& from);
  void MergeFrom(const CMessageCountryInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 2;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 KingID = 3;
  inline bool has_kingid() const;
  inline void clear_kingid();
  static const int kKingIDFieldNumber = 3;
  inline ::google::protobuf::uint32 kingid() const;
  inline void set_kingid(::google::protobuf::uint32 value);
  
  // optional string KingName = 4;
  inline bool has_kingname() const;
  inline void clear_kingname();
  static const int kKingNameFieldNumber = 4;
  inline const ::std::string& kingname() const;
  inline void set_kingname(const ::std::string& value);
  inline void set_kingname(const char* value);
  inline void set_kingname(const char* value, size_t size);
  inline ::std::string* mutable_kingname();
  
  // optional uint32 CorpsID = 5;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 5;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 6;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 6;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 UnionID = 7;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 7;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 8;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 8;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional uint32 PeopleNum = 9;
  inline bool has_peoplenum() const;
  inline void clear_peoplenum();
  static const int kPeopleNumFieldNumber = 9;
  inline ::google::protobuf::uint32 peoplenum() const;
  inline void set_peoplenum(::google::protobuf::uint32 value);
  
  // optional uint32 KingPower = 10;
  inline bool has_kingpower() const;
  inline void clear_kingpower();
  static const int kKingPowerFieldNumber = 10;
  inline ::google::protobuf::uint32 kingpower() const;
  inline void set_kingpower(::google::protobuf::uint32 value);
  
  // optional uint32 Map = 11;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 11;
  inline ::google::protobuf::uint32 map() const;
  inline void set_map(::google::protobuf::uint32 value);
  
  // optional uint32 Gold = 12;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 12;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);
  
  // repeated uint32 Wizard = 13;
  inline int wizard_size() const;
  inline void clear_wizard();
  static const int kWizardFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wizard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wizard();
  inline ::google::protobuf::uint32 wizard(int index) const;
  inline void set_wizard(int index, ::google::protobuf::uint32 value);
  inline void add_wizard(::google::protobuf::uint32 value);
  
  // repeated uint32 ConstructValue = 14;
  inline int constructvalue_size() const;
  inline void clear_constructvalue();
  static const int kConstructValueFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& constructvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_constructvalue();
  inline ::google::protobuf::uint32 constructvalue(int index) const;
  inline void set_constructvalue(int index, ::google::protobuf::uint32 value);
  inline void add_constructvalue(::google::protobuf::uint32 value);
  
  // repeated uint32 ConstructLevel = 15;
  inline int constructlevel_size() const;
  inline void clear_constructlevel();
  static const int kConstructLevelFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& constructlevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_constructlevel();
  inline ::google::protobuf::uint32 constructlevel(int index) const;
  inline void set_constructlevel(int index, ::google::protobuf::uint32 value);
  inline void add_constructlevel(::google::protobuf::uint32 value);
  
  // optional string Notice = 16;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 16;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  
  // optional .PBCorpsBattleList BattleInfo = 17;
  inline bool has_battleinfo() const;
  inline void clear_battleinfo();
  static const int kBattleInfoFieldNumber = 17;
  inline const ::PBCorpsBattleList& battleinfo() const;
  inline ::PBCorpsBattleList* mutable_battleinfo();
  
  // optional uint32 NeedFull = 18;
  inline bool has_needfull() const;
  inline void clear_needfull();
  static const int kNeedFullFieldNumber = 18;
  inline ::google::protobuf::uint32 needfull() const;
  inline void set_needfull(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 19;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 19;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 WorldLevel = 20;
  inline bool has_worldlevel() const;
  inline void clear_worldlevel();
  static const int kWorldLevelFieldNumber = 20;
  inline ::google::protobuf::uint32 worldlevel() const;
  inline void set_worldlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 kingid_;
  ::std::string* kingname_;
  static const ::std::string _default_kingname_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::google::protobuf::uint32 peoplenum_;
  ::google::protobuf::uint32 kingpower_;
  ::google::protobuf::uint32 map_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wizard_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > constructvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > constructlevel_;
  ::std::string* notice_;
  static const ::std::string _default_notice_;
  ::PBCorpsBattleList* battleinfo_;
  ::google::protobuf::uint32 needfull_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 worldlevel_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCountryInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageJoinCountryRequest : public ::google::protobuf::Message {
 public:
  CMessageJoinCountryRequest();
  virtual ~CMessageJoinCountryRequest();
  
  CMessageJoinCountryRequest(const CMessageJoinCountryRequest& from);
  
  inline CMessageJoinCountryRequest& operator=(const CMessageJoinCountryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageJoinCountryRequest& default_instance();
  void Swap(CMessageJoinCountryRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageJoinCountryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageJoinCountryRequest& from);
  void MergeFrom(const CMessageJoinCountryRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 2;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageJoinCountryRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageJoinCountryResponse : public ::google::protobuf::Message {
 public:
  CMessageJoinCountryResponse();
  virtual ~CMessageJoinCountryResponse();
  
  CMessageJoinCountryResponse(const CMessageJoinCountryResponse& from);
  
  inline CMessageJoinCountryResponse& operator=(const CMessageJoinCountryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageJoinCountryResponse& default_instance();
  void Swap(CMessageJoinCountryResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageJoinCountryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageJoinCountryResponse& from);
  void MergeFrom(const CMessageJoinCountryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 3;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 3;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 countryid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageJoinCountryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageJoinCountryNotify : public ::google::protobuf::Message {
 public:
  CMessageJoinCountryNotify();
  virtual ~CMessageJoinCountryNotify();
  
  CMessageJoinCountryNotify(const CMessageJoinCountryNotify& from);
  
  inline CMessageJoinCountryNotify& operator=(const CMessageJoinCountryNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageJoinCountryNotify& default_instance();
  void Swap(CMessageJoinCountryNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageJoinCountryNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageJoinCountryNotify& from);
  void MergeFrom(const CMessageJoinCountryNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 2;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 KingID = 3;
  inline bool has_kingid() const;
  inline void clear_kingid();
  static const int kKingIDFieldNumber = 3;
  inline ::google::protobuf::uint32 kingid() const;
  inline void set_kingid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 kingid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageJoinCountryNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLeaveCountryRequest : public ::google::protobuf::Message {
 public:
  CMessageLeaveCountryRequest();
  virtual ~CMessageLeaveCountryRequest();
  
  CMessageLeaveCountryRequest(const CMessageLeaveCountryRequest& from);
  
  inline CMessageLeaveCountryRequest& operator=(const CMessageLeaveCountryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLeaveCountryRequest& default_instance();
  void Swap(CMessageLeaveCountryRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLeaveCountryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLeaveCountryRequest& from);
  void MergeFrom(const CMessageLeaveCountryRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 2;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLeaveCountryRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageLeaveCountryResponse : public ::google::protobuf::Message {
 public:
  CMessageLeaveCountryResponse();
  virtual ~CMessageLeaveCountryResponse();
  
  CMessageLeaveCountryResponse(const CMessageLeaveCountryResponse& from);
  
  inline CMessageLeaveCountryResponse& operator=(const CMessageLeaveCountryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLeaveCountryResponse& default_instance();
  void Swap(CMessageLeaveCountryResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageLeaveCountryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLeaveCountryResponse& from);
  void MergeFrom(const CMessageLeaveCountryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 3;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 3;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 countryid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageLeaveCountryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSetOfficialRequest : public ::google::protobuf::Message {
 public:
  CMessageSetOfficialRequest();
  virtual ~CMessageSetOfficialRequest();
  
  CMessageSetOfficialRequest(const CMessageSetOfficialRequest& from);
  
  inline CMessageSetOfficialRequest& operator=(const CMessageSetOfficialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSetOfficialRequest& default_instance();
  void Swap(CMessageSetOfficialRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSetOfficialRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSetOfficialRequest& from);
  void MergeFrom(const CMessageSetOfficialRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 OfficialLevel = 3;
  inline bool has_officiallevel() const;
  inline void clear_officiallevel();
  static const int kOfficialLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 officiallevel() const;
  inline void set_officiallevel(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialOrder = 4;
  inline bool has_officialorder() const;
  inline void clear_officialorder();
  static const int kOfficialOrderFieldNumber = 4;
  inline ::google::protobuf::uint32 officialorder() const;
  inline void set_officialorder(::google::protobuf::uint32 value);
  
  // optional uint32 NormalSet = 5;
  inline bool has_normalset() const;
  inline void clear_normalset();
  static const int kNormalSetFieldNumber = 5;
  inline ::google::protobuf::uint32 normalset() const;
  inline void set_normalset(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 officiallevel_;
  ::google::protobuf::uint32 officialorder_;
  ::google::protobuf::uint32 normalset_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSetOfficialRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSetOfficialResponse : public ::google::protobuf::Message {
 public:
  CMessageSetOfficialResponse();
  virtual ~CMessageSetOfficialResponse();
  
  CMessageSetOfficialResponse(const CMessageSetOfficialResponse& from);
  
  inline CMessageSetOfficialResponse& operator=(const CMessageSetOfficialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSetOfficialResponse& default_instance();
  void Swap(CMessageSetOfficialResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSetOfficialResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSetOfficialResponse& from);
  void MergeFrom(const CMessageSetOfficialResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional string CharName = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 OfficialLevel = 4;
  inline bool has_officiallevel() const;
  inline void clear_officiallevel();
  static const int kOfficialLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 officiallevel() const;
  inline void set_officiallevel(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialOrder = 5;
  inline bool has_officialorder() const;
  inline void clear_officialorder();
  static const int kOfficialOrderFieldNumber = 5;
  inline ::google::protobuf::uint32 officialorder() const;
  inline void set_officialorder(::google::protobuf::uint32 value);
  
  // optional uint32 NormalSet = 6;
  inline bool has_normalset() const;
  inline void clear_normalset();
  static const int kNormalSetFieldNumber = 6;
  inline ::google::protobuf::uint32 normalset() const;
  inline void set_normalset(::google::protobuf::uint32 value);
  
  // optional uint32 TargetID = 7;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIDFieldNumber = 7;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 officiallevel_;
  ::google::protobuf::uint32 officialorder_;
  ::google::protobuf::uint32 normalset_;
  ::google::protobuf::uint32 targetid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSetOfficialResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnSetOfficialRequest : public ::google::protobuf::Message {
 public:
  CMessageUnSetOfficialRequest();
  virtual ~CMessageUnSetOfficialRequest();
  
  CMessageUnSetOfficialRequest(const CMessageUnSetOfficialRequest& from);
  
  inline CMessageUnSetOfficialRequest& operator=(const CMessageUnSetOfficialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnSetOfficialRequest& default_instance();
  void Swap(CMessageUnSetOfficialRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnSetOfficialRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnSetOfficialRequest& from);
  void MergeFrom(const CMessageUnSetOfficialRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialLevel = 2;
  inline bool has_officiallevel() const;
  inline void clear_officiallevel();
  static const int kOfficialLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 officiallevel() const;
  inline void set_officiallevel(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialOrder = 3;
  inline bool has_officialorder() const;
  inline void clear_officialorder();
  static const int kOfficialOrderFieldNumber = 3;
  inline ::google::protobuf::uint32 officialorder() const;
  inline void set_officialorder(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 officiallevel_;
  ::google::protobuf::uint32 officialorder_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnSetOfficialRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUnSetOfficialResponse : public ::google::protobuf::Message {
 public:
  CMessageUnSetOfficialResponse();
  virtual ~CMessageUnSetOfficialResponse();
  
  CMessageUnSetOfficialResponse(const CMessageUnSetOfficialResponse& from);
  
  inline CMessageUnSetOfficialResponse& operator=(const CMessageUnSetOfficialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUnSetOfficialResponse& default_instance();
  void Swap(CMessageUnSetOfficialResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUnSetOfficialResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUnSetOfficialResponse& from);
  void MergeFrom(const CMessageUnSetOfficialResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional string CharName = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 OfficialLevel = 4;
  inline bool has_officiallevel() const;
  inline void clear_officiallevel();
  static const int kOfficialLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 officiallevel() const;
  inline void set_officiallevel(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialOrder = 5;
  inline bool has_officialorder() const;
  inline void clear_officialorder();
  static const int kOfficialOrderFieldNumber = 5;
  inline ::google::protobuf::uint32 officialorder() const;
  inline void set_officialorder(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 officiallevel_;
  ::google::protobuf::uint32 officialorder_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUnSetOfficialResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUseFunctionRequest : public ::google::protobuf::Message {
 public:
  CMessageUseFunctionRequest();
  virtual ~CMessageUseFunctionRequest();
  
  CMessageUseFunctionRequest(const CMessageUseFunctionRequest& from);
  
  inline CMessageUseFunctionRequest& operator=(const CMessageUseFunctionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUseFunctionRequest& default_instance();
  void Swap(CMessageUseFunctionRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUseFunctionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUseFunctionRequest& from);
  void MergeFrom(const CMessageUseFunctionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 FunctionType = 2;
  inline bool has_functiontype() const;
  inline void clear_functiontype();
  static const int kFunctionTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 functiontype() const;
  inline void set_functiontype(::google::protobuf::uint32 value);
  
  // optional uint32 FunctionOrder = 3;
  inline bool has_functionorder() const;
  inline void clear_functionorder();
  static const int kFunctionOrderFieldNumber = 3;
  inline ::google::protobuf::uint32 functionorder() const;
  inline void set_functionorder(::google::protobuf::uint32 value);
  
  // optional string TargetName = 4;
  inline bool has_targetname() const;
  inline void clear_targetname();
  static const int kTargetNameFieldNumber = 4;
  inline const ::std::string& targetname() const;
  inline void set_targetname(const ::std::string& value);
  inline void set_targetname(const char* value);
  inline void set_targetname(const char* value, size_t size);
  inline ::std::string* mutable_targetname();
  
  // optional .TeleportData Teleport = 5;
  inline bool has_teleport() const;
  inline void clear_teleport();
  static const int kTeleportFieldNumber = 5;
  inline const ::TeleportData& teleport() const;
  inline ::TeleportData* mutable_teleport();
  
  // optional uint32 IntParam1 = 6;
  inline bool has_intparam1() const;
  inline void clear_intparam1();
  static const int kIntParam1FieldNumber = 6;
  inline ::google::protobuf::uint32 intparam1() const;
  inline void set_intparam1(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 functiontype_;
  ::google::protobuf::uint32 functionorder_;
  ::std::string* targetname_;
  static const ::std::string _default_targetname_;
  ::TeleportData* teleport_;
  ::google::protobuf::uint32 intparam1_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUseFunctionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUseFunctionResponse : public ::google::protobuf::Message {
 public:
  CMessageUseFunctionResponse();
  virtual ~CMessageUseFunctionResponse();
  
  CMessageUseFunctionResponse(const CMessageUseFunctionResponse& from);
  
  inline CMessageUseFunctionResponse& operator=(const CMessageUseFunctionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUseFunctionResponse& default_instance();
  void Swap(CMessageUseFunctionResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUseFunctionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUseFunctionResponse& from);
  void MergeFrom(const CMessageUseFunctionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 FunctionType = 3;
  inline bool has_functiontype() const;
  inline void clear_functiontype();
  static const int kFunctionTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 functiontype() const;
  inline void set_functiontype(::google::protobuf::uint32 value);
  
  // optional uint32 FunctionOrder = 4;
  inline bool has_functionorder() const;
  inline void clear_functionorder();
  static const int kFunctionOrderFieldNumber = 4;
  inline ::google::protobuf::uint32 functionorder() const;
  inline void set_functionorder(::google::protobuf::uint32 value);
  
  // optional string TargetName = 5;
  inline bool has_targetname() const;
  inline void clear_targetname();
  static const int kTargetNameFieldNumber = 5;
  inline const ::std::string& targetname() const;
  inline void set_targetname(const ::std::string& value);
  inline void set_targetname(const char* value);
  inline void set_targetname(const char* value, size_t size);
  inline ::std::string* mutable_targetname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 functiontype_;
  ::google::protobuf::uint32 functionorder_;
  ::std::string* targetname_;
  static const ::std::string _default_targetname_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUseFunctionResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageOfficialInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageOfficialInfoRequest();
  virtual ~CMessageOfficialInfoRequest();
  
  CMessageOfficialInfoRequest(const CMessageOfficialInfoRequest& from);
  
  inline CMessageOfficialInfoRequest& operator=(const CMessageOfficialInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageOfficialInfoRequest& default_instance();
  void Swap(CMessageOfficialInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageOfficialInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageOfficialInfoRequest& from);
  void MergeFrom(const CMessageOfficialInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageOfficialInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageOfficialInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageOfficialInfoResponse();
  virtual ~CMessageOfficialInfoResponse();
  
  CMessageOfficialInfoResponse(const CMessageOfficialInfoResponse& from);
  
  inline CMessageOfficialInfoResponse& operator=(const CMessageOfficialInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageOfficialInfoResponse& default_instance();
  void Swap(CMessageOfficialInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageOfficialInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageOfficialInfoResponse& from);
  void MergeFrom(const CMessageOfficialInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional .PBOfficialList OfficialList = 3;
  inline bool has_officiallist() const;
  inline void clear_officiallist();
  static const int kOfficialListFieldNumber = 3;
  inline const ::PBOfficialList& officiallist() const;
  inline ::PBOfficialList* mutable_officiallist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::PBOfficialList* officiallist_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageOfficialInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUseTimeRequest : public ::google::protobuf::Message {
 public:
  CMessageUseTimeRequest();
  virtual ~CMessageUseTimeRequest();
  
  CMessageUseTimeRequest(const CMessageUseTimeRequest& from);
  
  inline CMessageUseTimeRequest& operator=(const CMessageUseTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUseTimeRequest& default_instance();
  void Swap(CMessageUseTimeRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUseTimeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUseTimeRequest& from);
  void MergeFrom(const CMessageUseTimeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUseTimeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUseTimeResponse : public ::google::protobuf::Message {
 public:
  CMessageUseTimeResponse();
  virtual ~CMessageUseTimeResponse();
  
  CMessageUseTimeResponse(const CMessageUseTimeResponse& from);
  
  inline CMessageUseTimeResponse& operator=(const CMessageUseTimeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUseTimeResponse& default_instance();
  void Swap(CMessageUseTimeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUseTimeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUseTimeResponse& from);
  void MergeFrom(const CMessageUseTimeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional .PBOfficialData OfficialData = 3;
  inline bool has_officialdata() const;
  inline void clear_officialdata();
  static const int kOfficialDataFieldNumber = 3;
  inline const ::PBOfficialData& officialdata() const;
  inline ::PBOfficialData* mutable_officialdata();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::PBOfficialData* officialdata_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUseTimeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldQuestRequest : public ::google::protobuf::Message {
 public:
  CMessageWorldQuestRequest();
  virtual ~CMessageWorldQuestRequest();
  
  CMessageWorldQuestRequest(const CMessageWorldQuestRequest& from);
  
  inline CMessageWorldQuestRequest& operator=(const CMessageWorldQuestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldQuestRequest& default_instance();
  void Swap(CMessageWorldQuestRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldQuestRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldQuestRequest& from);
  void MergeFrom(const CMessageWorldQuestRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 4;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 4;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldQuestRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldQuestResponse : public ::google::protobuf::Message {
 public:
  CMessageWorldQuestResponse();
  virtual ~CMessageWorldQuestResponse();
  
  CMessageWorldQuestResponse(const CMessageWorldQuestResponse& from);
  
  inline CMessageWorldQuestResponse& operator=(const CMessageWorldQuestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldQuestResponse& default_instance();
  void Swap(CMessageWorldQuestResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldQuestResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldQuestResponse& from);
  void MergeFrom(const CMessageWorldQuestResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 3;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 3;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 4;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldQuestResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldAnswerRequest : public ::google::protobuf::Message {
 public:
  CMessageWorldAnswerRequest();
  virtual ~CMessageWorldAnswerRequest();
  
  CMessageWorldAnswerRequest(const CMessageWorldAnswerRequest& from);
  
  inline CMessageWorldAnswerRequest& operator=(const CMessageWorldAnswerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldAnswerRequest& default_instance();
  void Swap(CMessageWorldAnswerRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldAnswerRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldAnswerRequest& from);
  void MergeFrom(const CMessageWorldAnswerRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
  // optional uint32 Answer = 4;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 4;
  inline ::google::protobuf::uint32 answer() const;
  inline void set_answer(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 answer_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldAnswerRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldAnswerResponse : public ::google::protobuf::Message {
 public:
  CMessageWorldAnswerResponse();
  virtual ~CMessageWorldAnswerResponse();
  
  CMessageWorldAnswerResponse(const CMessageWorldAnswerResponse& from);
  
  inline CMessageWorldAnswerResponse& operator=(const CMessageWorldAnswerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldAnswerResponse& default_instance();
  void Swap(CMessageWorldAnswerResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldAnswerResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldAnswerResponse& from);
  void MergeFrom(const CMessageWorldAnswerResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 3;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 3;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 4;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
  // optional uint32 Answer = 5;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 5;
  inline ::google::protobuf::uint32 answer() const;
  inline void set_answer(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 answer_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldAnswerResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldAnswerNotify : public ::google::protobuf::Message {
 public:
  CMessageWorldAnswerNotify();
  virtual ~CMessageWorldAnswerNotify();
  
  CMessageWorldAnswerNotify(const CMessageWorldAnswerNotify& from);
  
  inline CMessageWorldAnswerNotify& operator=(const CMessageWorldAnswerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldAnswerNotify& default_instance();
  void Swap(CMessageWorldAnswerNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldAnswerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldAnswerNotify& from);
  void MergeFrom(const CMessageWorldAnswerNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcWorldID = 2;
  inline bool has_srcworldid() const;
  inline void clear_srcworldid();
  static const int kSrcWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 srcworldid() const;
  inline void set_srcworldid(::google::protobuf::uint32 value);
  
  // optional uint32 DesWorldID = 3;
  inline bool has_desworldid() const;
  inline void clear_desworldid();
  static const int kDesWorldIDFieldNumber = 3;
  inline ::google::protobuf::uint32 desworldid() const;
  inline void set_desworldid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 4;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
  // optional uint32 Answer = 5;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 5;
  inline ::google::protobuf::uint32 answer() const;
  inline void set_answer(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 srcworldid_;
  ::google::protobuf::uint32 desworldid_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 answer_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldAnswerNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldQuestNotify : public ::google::protobuf::Message {
 public:
  CMessageWorldQuestNotify();
  virtual ~CMessageWorldQuestNotify();
  
  CMessageWorldQuestNotify(const CMessageWorldQuestNotify& from);
  
  inline CMessageWorldQuestNotify& operator=(const CMessageWorldQuestNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldQuestNotify& default_instance();
  void Swap(CMessageWorldQuestNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldQuestNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldQuestNotify& from);
  void MergeFrom(const CMessageWorldQuestNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldQuestNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldResultNotify : public ::google::protobuf::Message {
 public:
  CMessageWorldResultNotify();
  virtual ~CMessageWorldResultNotify();
  
  CMessageWorldResultNotify(const CMessageWorldResultNotify& from);
  
  inline CMessageWorldResultNotify& operator=(const CMessageWorldResultNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldResultNotify& default_instance();
  void Swap(CMessageWorldResultNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldResultNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldResultNotify& from);
  void MergeFrom(const CMessageWorldResultNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 SrcWorldID = 3;
  inline bool has_srcworldid() const;
  inline void clear_srcworldid();
  static const int kSrcWorldIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srcworldid() const;
  inline void set_srcworldid(::google::protobuf::uint32 value);
  
  // optional uint32 DesWorldID = 4;
  inline bool has_desworldid() const;
  inline void clear_desworldid();
  static const int kDesWorldIDFieldNumber = 4;
  inline ::google::protobuf::uint32 desworldid() const;
  inline void set_desworldid(::google::protobuf::uint32 value);
  
  // optional uint32 OpType = 5;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOpTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 srcworldid_;
  ::google::protobuf::uint32 desworldid_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldResultNotify* default_instance_;
};
// -------------------------------------------------------------------

class CWorldStatusData : public ::google::protobuf::Message {
 public:
  CWorldStatusData();
  virtual ~CWorldStatusData();
  
  CWorldStatusData(const CWorldStatusData& from);
  
  inline CWorldStatusData& operator=(const CWorldStatusData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CWorldStatusData& default_instance();
  void Swap(CWorldStatusData* other);
  
  // implements Message ----------------------------------------------
  
  CWorldStatusData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWorldStatusData& from);
  void MergeFrom(const CWorldStatusData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 Friends = 2;
  inline bool has_friends() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 2;
  inline ::google::protobuf::uint32 friends() const;
  inline void set_friends(::google::protobuf::uint32 value);
  
  // optional uint32 Nation = 3;
  inline bool has_nation() const;
  inline void clear_nation();
  static const int kNationFieldNumber = 3;
  inline ::google::protobuf::uint32 nation() const;
  inline void set_nation(::google::protobuf::uint32 value);
  
  // optional uint32 KingID = 4;
  inline bool has_kingid() const;
  inline void clear_kingid();
  static const int kKingIDFieldNumber = 4;
  inline ::google::protobuf::uint32 kingid() const;
  inline void set_kingid(::google::protobuf::uint32 value);
  
  // optional string KingName = 5;
  inline bool has_kingname() const;
  inline void clear_kingname();
  static const int kKingNameFieldNumber = 5;
  inline const ::std::string& kingname() const;
  inline void set_kingname(const ::std::string& value);
  inline void set_kingname(const char* value);
  inline void set_kingname(const char* value, size_t size);
  inline ::std::string* mutable_kingname();
  
  // optional uint32 CorpsID = 6;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 6;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 7;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 7;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 UnionID = 8;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 8;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 9;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 9;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 friends_;
  ::google::protobuf::uint32 nation_;
  ::google::protobuf::uint32 kingid_;
  ::std::string* kingname_;
  static const ::std::string _default_kingname_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CWorldStatusData* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageWorldInfoRequest();
  virtual ~CMessageWorldInfoRequest();
  
  CMessageWorldInfoRequest(const CMessageWorldInfoRequest& from);
  
  inline CMessageWorldInfoRequest& operator=(const CMessageWorldInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldInfoRequest& default_instance();
  void Swap(CMessageWorldInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldInfoRequest& from);
  void MergeFrom(const CMessageWorldInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 worldid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWorldInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageWorldInfoResponse();
  virtual ~CMessageWorldInfoResponse();
  
  CMessageWorldInfoResponse(const CMessageWorldInfoResponse& from);
  
  inline CMessageWorldInfoResponse& operator=(const CMessageWorldInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWorldInfoResponse& default_instance();
  void Swap(CMessageWorldInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWorldInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWorldInfoResponse& from);
  void MergeFrom(const CMessageWorldInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 3;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 3;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // repeated .CWorldStatusData WorldData = 4;
  inline int worlddata_size() const;
  inline void clear_worlddata();
  static const int kWorldDataFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::CWorldStatusData >& worlddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::CWorldStatusData >* mutable_worlddata();
  inline const ::CWorldStatusData& worlddata(int index) const;
  inline ::CWorldStatusData* mutable_worlddata(int index);
  inline ::CWorldStatusData* add_worlddata();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::RepeatedPtrField< ::CWorldStatusData > worlddata_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWorldInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageOfficialChangeNotify : public ::google::protobuf::Message {
 public:
  CMessageOfficialChangeNotify();
  virtual ~CMessageOfficialChangeNotify();
  
  CMessageOfficialChangeNotify(const CMessageOfficialChangeNotify& from);
  
  inline CMessageOfficialChangeNotify& operator=(const CMessageOfficialChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageOfficialChangeNotify& default_instance();
  void Swap(CMessageOfficialChangeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageOfficialChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageOfficialChangeNotify& from);
  void MergeFrom(const CMessageOfficialChangeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional string CharName = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 OfficialLevel = 3;
  inline bool has_officiallevel() const;
  inline void clear_officiallevel();
  static const int kOfficialLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 officiallevel() const;
  inline void set_officiallevel(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialOrder = 4;
  inline bool has_officialorder() const;
  inline void clear_officialorder();
  static const int kOfficialOrderFieldNumber = 4;
  inline ::google::protobuf::uint32 officialorder() const;
  inline void set_officialorder(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 5;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 5;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 7;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 7;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 officiallevel_;
  ::google::protobuf::uint32 officialorder_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 worldid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageOfficialChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerGSInfoRequest : public ::google::protobuf::Message {
 public:
  CMessagePlayerGSInfoRequest();
  virtual ~CMessagePlayerGSInfoRequest();
  
  CMessagePlayerGSInfoRequest(const CMessagePlayerGSInfoRequest& from);
  
  inline CMessagePlayerGSInfoRequest& operator=(const CMessagePlayerGSInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerGSInfoRequest& default_instance();
  void Swap(CMessagePlayerGSInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerGSInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerGSInfoRequest& from);
  void MergeFrom(const CMessagePlayerGSInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 SrcCharID = 1;
  inline int srccharid_size() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& srccharid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_srccharid();
  inline ::google::protobuf::uint32 srccharid(int index) const;
  inline void set_srccharid(int index, ::google::protobuf::uint32 value);
  inline void add_srccharid(::google::protobuf::uint32 value);
  
  // repeated uint32 InfoCharID = 2;
  inline int infocharid_size() const;
  inline void clear_infocharid();
  static const int kInfoCharIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& infocharid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_infocharid();
  inline ::google::protobuf::uint32 infocharid(int index) const;
  inline void set_infocharid(int index, ::google::protobuf::uint32 value);
  inline void add_infocharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > srccharid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > infocharid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerGSInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerGSInfo : public ::google::protobuf::Message {
 public:
  PlayerGSInfo();
  virtual ~PlayerGSInfo();
  
  PlayerGSInfo(const PlayerGSInfo& from);
  
  inline PlayerGSInfo& operator=(const PlayerGSInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGSInfo& default_instance();
  void Swap(PlayerGSInfo* other);
  
  // implements Message ----------------------------------------------
  
  PlayerGSInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerGSInfo& from);
  void MergeFrom(const PlayerGSInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyID = 2;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyIDFieldNumber = 2;
  inline ::google::protobuf::uint32 familyid() const;
  inline void set_familyid(::google::protobuf::uint32 value);
  
  // optional string FamilyName = 3;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilyNameFieldNumber = 3;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  
  // optional uint32 FamilyHead = 4;
  inline bool has_familyhead() const;
  inline void clear_familyhead();
  static const int kFamilyHeadFieldNumber = 4;
  inline ::google::protobuf::uint32 familyhead() const;
  inline void set_familyhead(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsID = 5;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsIDFieldNumber = 5;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // optional string CorpsName = 6;
  inline bool has_corpsname() const;
  inline void clear_corpsname();
  static const int kCorpsNameFieldNumber = 6;
  inline const ::std::string& corpsname() const;
  inline void set_corpsname(const ::std::string& value);
  inline void set_corpsname(const char* value);
  inline void set_corpsname(const char* value, size_t size);
  inline ::std::string* mutable_corpsname();
  
  // optional uint32 CorpsHead = 7;
  inline bool has_corpshead() const;
  inline void clear_corpshead();
  static const int kCorpsHeadFieldNumber = 7;
  inline ::google::protobuf::uint32 corpshead() const;
  inline void set_corpshead(::google::protobuf::uint32 value);
  
  // optional uint32 UnionID = 8;
  inline bool has_unionid() const;
  inline void clear_unionid();
  static const int kUnionIDFieldNumber = 8;
  inline ::google::protobuf::uint32 unionid() const;
  inline void set_unionid(::google::protobuf::uint32 value);
  
  // optional string UnionName = 9;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionNameFieldNumber = 9;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  
  // optional uint32 UnionHead = 10;
  inline bool has_unionhead() const;
  inline void clear_unionhead();
  static const int kUnionHeadFieldNumber = 10;
  inline ::google::protobuf::uint32 unionhead() const;
  inline void set_unionhead(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 11;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 11;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 OfficialID = 12;
  inline bool has_officialid() const;
  inline void clear_officialid();
  static const int kOfficialIDFieldNumber = 12;
  inline ::google::protobuf::uint32 officialid() const;
  inline void set_officialid(::google::protobuf::uint32 value);
  
  // optional uint32 KingID = 13;
  inline bool has_kingid() const;
  inline void clear_kingid();
  static const int kKingIDFieldNumber = 13;
  inline ::google::protobuf::uint32 kingid() const;
  inline void set_kingid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 familyid_;
  ::std::string* familyname_;
  static const ::std::string _default_familyname_;
  ::google::protobuf::uint32 familyhead_;
  ::google::protobuf::uint32 corpsid_;
  ::std::string* corpsname_;
  static const ::std::string _default_corpsname_;
  ::google::protobuf::uint32 corpshead_;
  ::google::protobuf::uint32 unionid_;
  ::std::string* unionname_;
  static const ::std::string _default_unionname_;
  ::google::protobuf::uint32 unionhead_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 officialid_;
  ::google::protobuf::uint32 kingid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PlayerGSInfo* default_instance_;
};
// -------------------------------------------------------------------

class WorldStatusInfo : public ::google::protobuf::Message {
 public:
  WorldStatusInfo();
  virtual ~WorldStatusInfo();
  
  WorldStatusInfo(const WorldStatusInfo& from);
  
  inline WorldStatusInfo& operator=(const WorldStatusInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldStatusInfo& default_instance();
  void Swap(WorldStatusInfo* other);
  
  // implements Message ----------------------------------------------
  
  WorldStatusInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldStatusInfo& from);
  void MergeFrom(const WorldStatusInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcWorldID = 1;
  inline bool has_srcworldid() const;
  inline void clear_srcworldid();
  static const int kSrcWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srcworldid() const;
  inline void set_srcworldid(::google::protobuf::uint32 value);
  
  // optional uint32 DesWorldID = 2;
  inline bool has_desworldid() const;
  inline void clear_desworldid();
  static const int kDesWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 desworldid() const;
  inline void set_desworldid(::google::protobuf::uint32 value);
  
  // optional uint32 Status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srcworldid_;
  ::google::protobuf::uint32 desworldid_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static WorldStatusInfo* default_instance_;
};
// -------------------------------------------------------------------

class GTAndLWInfo : public ::google::protobuf::Message {
 public:
  GTAndLWInfo();
  virtual ~GTAndLWInfo();
  
  GTAndLWInfo(const GTAndLWInfo& from);
  
  inline GTAndLWInfo& operator=(const GTAndLWInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GTAndLWInfo& default_instance();
  void Swap(GTAndLWInfo* other);
  
  // implements Message ----------------------------------------------
  
  GTAndLWInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GTAndLWInfo& from);
  void MergeFrom(const GTAndLWInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcWorldID = 1;
  inline bool has_srcworldid() const;
  inline void clear_srcworldid();
  static const int kSrcWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srcworldid() const;
  inline void set_srcworldid(::google::protobuf::uint32 value);
  
  // optional uint32 DesWorldID = 2;
  inline bool has_desworldid() const;
  inline void clear_desworldid();
  static const int kDesWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 desworldid() const;
  inline void set_desworldid(::google::protobuf::uint32 value);
  
  // optional uint32 TargetTime = 3;
  inline bool has_targettime() const;
  inline void clear_targettime();
  static const int kTargetTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 targettime() const;
  inline void set_targettime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srcworldid_;
  ::google::protobuf::uint32 desworldid_;
  ::google::protobuf::uint32 targettime_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GTAndLWInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerGSInfoResponse : public ::google::protobuf::Message {
 public:
  CMessagePlayerGSInfoResponse();
  virtual ~CMessagePlayerGSInfoResponse();
  
  CMessagePlayerGSInfoResponse(const CMessagePlayerGSInfoResponse& from);
  
  inline CMessagePlayerGSInfoResponse& operator=(const CMessagePlayerGSInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerGSInfoResponse& default_instance();
  void Swap(CMessagePlayerGSInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerGSInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerGSInfoResponse& from);
  void MergeFrom(const CMessagePlayerGSInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // repeated .PlayerGSInfo PlayerInfo = 2;
  inline int playerinfo_size() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo >& playerinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo >* mutable_playerinfo();
  inline const ::PlayerGSInfo& playerinfo(int index) const;
  inline ::PlayerGSInfo* mutable_playerinfo(int index);
  inline ::PlayerGSInfo* add_playerinfo();
  
  // repeated .WorldStatusInfo WorldInfo = 3;
  inline int worldinfo_size() const;
  inline void clear_worldinfo();
  static const int kWorldInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo >& worldinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo >* mutable_worldinfo();
  inline const ::WorldStatusInfo& worldinfo(int index) const;
  inline ::WorldStatusInfo* mutable_worldinfo(int index);
  inline ::WorldStatusInfo* add_worldinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo > playerinfo_;
  ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo > worldinfo_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerGSInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePlayerGSInfoNotify : public ::google::protobuf::Message {
 public:
  CMessagePlayerGSInfoNotify();
  virtual ~CMessagePlayerGSInfoNotify();
  
  CMessagePlayerGSInfoNotify(const CMessagePlayerGSInfoNotify& from);
  
  inline CMessagePlayerGSInfoNotify& operator=(const CMessagePlayerGSInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePlayerGSInfoNotify& default_instance();
  void Swap(CMessagePlayerGSInfoNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePlayerGSInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePlayerGSInfoNotify& from);
  void MergeFrom(const CMessagePlayerGSInfoNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcCharID = 1;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // repeated .PlayerGSInfo PlayerInfo = 2;
  inline int playerinfo_size() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo >& playerinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo >* mutable_playerinfo();
  inline const ::PlayerGSInfo& playerinfo(int index) const;
  inline ::PlayerGSInfo* mutable_playerinfo(int index);
  inline ::PlayerGSInfo* add_playerinfo();
  
  // repeated .WorldStatusInfo WorldInfo = 3;
  inline int worldinfo_size() const;
  inline void clear_worldinfo();
  static const int kWorldInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo >& worldinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo >* mutable_worldinfo();
  inline const ::WorldStatusInfo& worldinfo(int index) const;
  inline ::WorldStatusInfo* mutable_worldinfo(int index);
  inline ::WorldStatusInfo* add_worldinfo();
  
  // optional uint32 WarState = 4;
  inline bool has_warstate() const;
  inline void clear_warstate();
  static const int kWarStateFieldNumber = 4;
  inline ::google::protobuf::uint32 warstate() const;
  inline void set_warstate(::google::protobuf::uint32 value);
  
  // optional uint32 WinWorld = 5;
  inline bool has_winworld() const;
  inline void clear_winworld();
  static const int kWinWorldFieldNumber = 5;
  inline ::google::protobuf::uint32 winworld() const;
  inline void set_winworld(::google::protobuf::uint32 value);
  
  // optional uint32 TaxRate = 6;
  inline bool has_taxrate() const;
  inline void clear_taxrate();
  static const int kTaxRateFieldNumber = 6;
  inline ::google::protobuf::uint32 taxrate() const;
  inline void set_taxrate(::google::protobuf::uint32 value);
  
  // repeated .GTAndLWInfo GTInfo = 7;
  inline int gtinfo_size() const;
  inline void clear_gtinfo();
  static const int kGTInfoFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >& gtinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >* mutable_gtinfo();
  inline const ::GTAndLWInfo& gtinfo(int index) const;
  inline ::GTAndLWInfo* mutable_gtinfo(int index);
  inline ::GTAndLWInfo* add_gtinfo();
  
  // repeated .GTAndLWInfo LWInfo = 8;
  inline int lwinfo_size() const;
  inline void clear_lwinfo();
  static const int kLWInfoFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >& lwinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >* mutable_lwinfo();
  inline const ::GTAndLWInfo& lwinfo(int index) const;
  inline ::GTAndLWInfo* mutable_lwinfo(int index);
  inline ::GTAndLWInfo* add_lwinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo > playerinfo_;
  ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo > worldinfo_;
  ::google::protobuf::uint32 warstate_;
  ::google::protobuf::uint32 winworld_;
  ::google::protobuf::uint32 taxrate_;
  ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo > gtinfo_;
  ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo > lwinfo_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePlayerGSInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageKingChangeNotify : public ::google::protobuf::Message {
 public:
  CMessageKingChangeNotify();
  virtual ~CMessageKingChangeNotify();
  
  CMessageKingChangeNotify(const CMessageKingChangeNotify& from);
  
  inline CMessageKingChangeNotify& operator=(const CMessageKingChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageKingChangeNotify& default_instance();
  void Swap(CMessageKingChangeNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageKingChangeNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageKingChangeNotify& from);
  void MergeFrom(const CMessageKingChangeNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 2;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 KingID = 3;
  inline bool has_kingid() const;
  inline void clear_kingid();
  static const int kKingIDFieldNumber = 3;
  inline ::google::protobuf::uint32 kingid() const;
  inline void set_kingid(::google::protobuf::uint32 value);
  
  // optional string KingName = 4;
  inline bool has_kingname() const;
  inline void clear_kingname();
  static const int kKingNameFieldNumber = 4;
  inline const ::std::string& kingname() const;
  inline void set_kingname(const ::std::string& value);
  inline void set_kingname(const char* value);
  inline void set_kingname(const char* value, size_t size);
  inline ::std::string* mutable_kingname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 kingid_;
  ::std::string* kingname_;
  static const ::std::string _default_kingname_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageKingChangeNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSummonPlayerNotify : public ::google::protobuf::Message {
 public:
  CMessageSummonPlayerNotify();
  virtual ~CMessageSummonPlayerNotify();
  
  CMessageSummonPlayerNotify(const CMessageSummonPlayerNotify& from);
  
  inline CMessageSummonPlayerNotify& operator=(const CMessageSummonPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSummonPlayerNotify& default_instance();
  void Swap(CMessageSummonPlayerNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSummonPlayerNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSummonPlayerNotify& from);
  void MergeFrom(const CMessageSummonPlayerNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SrcName = 1;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 1;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 TokenID = 6;
  inline bool has_tokenid() const;
  inline void clear_tokenid();
  static const int kTokenIDFieldNumber = 6;
  inline ::google::protobuf::uint32 tokenid() const;
  inline void set_tokenid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 tokenid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSummonPlayerNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetAwardRequest : public ::google::protobuf::Message {
 public:
  CMessageGetAwardRequest();
  virtual ~CMessageGetAwardRequest();
  
  CMessageGetAwardRequest(const CMessageGetAwardRequest& from);
  
  inline CMessageGetAwardRequest& operator=(const CMessageGetAwardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetAwardRequest& default_instance();
  void Swap(CMessageGetAwardRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetAwardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetAwardRequest& from);
  void MergeFrom(const CMessageGetAwardRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NPCEntityID = 1;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 AwardID = 2;
  inline bool has_awardid() const;
  inline void clear_awardid();
  static const int kAwardIDFieldNumber = 2;
  inline ::google::protobuf::uint32 awardid() const;
  inline void set_awardid(::google::protobuf::uint32 value);
  
  // optional uint32 TempID = 3;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 3;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 awardid_;
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetAwardRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetAwardResponse : public ::google::protobuf::Message {
 public:
  CMessageGetAwardResponse();
  virtual ~CMessageGetAwardResponse();
  
  CMessageGetAwardResponse(const CMessageGetAwardResponse& from);
  
  inline CMessageGetAwardResponse& operator=(const CMessageGetAwardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetAwardResponse& default_instance();
  void Swap(CMessageGetAwardResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetAwardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetAwardResponse& from);
  void MergeFrom(const CMessageGetAwardResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 AwardID = 2;
  inline bool has_awardid() const;
  inline void clear_awardid();
  static const int kAwardIDFieldNumber = 2;
  inline ::google::protobuf::uint32 awardid() const;
  inline void set_awardid(::google::protobuf::uint32 value);
  
  // optional uint32 TempID = 3;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 3;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 awardid_;
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetAwardResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageStartCountryRedstoneNotify : public ::google::protobuf::Message {
 public:
  CMessageStartCountryRedstoneNotify();
  virtual ~CMessageStartCountryRedstoneNotify();
  
  CMessageStartCountryRedstoneNotify(const CMessageStartCountryRedstoneNotify& from);
  
  inline CMessageStartCountryRedstoneNotify& operator=(const CMessageStartCountryRedstoneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageStartCountryRedstoneNotify& default_instance();
  void Swap(CMessageStartCountryRedstoneNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageStartCountryRedstoneNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageStartCountryRedstoneNotify& from);
  void MergeFrom(const CMessageStartCountryRedstoneNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string ManagerName = 1;
  inline bool has_managername() const;
  inline void clear_managername();
  static const int kManagerNameFieldNumber = 1;
  inline const ::std::string& managername() const;
  inline void set_managername(const ::std::string& value);
  inline void set_managername(const char* value);
  inline void set_managername(const char* value, size_t size);
  inline ::std::string* mutable_managername();
  
  // optional uint32 ManagerID = 2;
  inline bool has_managerid() const;
  inline void clear_managerid();
  static const int kManagerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 managerid() const;
  inline void set_managerid(::google::protobuf::uint32 value);
  
  // optional uint32 LineID = 3;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 3;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 4;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 5;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 6;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 6;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 CountryID = 7;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 7;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
  // optional uint32 RedstoneType = 8;
  inline bool has_redstonetype() const;
  inline void clear_redstonetype();
  static const int kRedstoneTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 redstonetype() const;
  inline void set_redstonetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* managername_;
  static const ::std::string _default_managername_;
  ::google::protobuf::uint32 managerid_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 redstonetype_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageStartCountryRedstoneNotify* default_instance_;
};
// -------------------------------------------------------------------

class TeleportData : public ::google::protobuf::Message {
 public:
  TeleportData();
  virtual ~TeleportData();
  
  TeleportData(const TeleportData& from);
  
  inline TeleportData& operator=(const TeleportData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TeleportData& default_instance();
  void Swap(TeleportData* other);
  
  // implements Message ----------------------------------------------
  
  TeleportData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeleportData& from);
  void MergeFrom(const TeleportData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LineID = 1;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 1;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 TokenID = 5;
  inline bool has_tokenid() const;
  inline void clear_tokenid();
  static const int kTokenIDFieldNumber = 5;
  inline ::google::protobuf::uint32 tokenid() const;
  inline void set_tokenid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 tokenid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TeleportData* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSubmitWarRequest : public ::google::protobuf::Message {
 public:
  CMessageSubmitWarRequest();
  virtual ~CMessageSubmitWarRequest();
  
  CMessageSubmitWarRequest(const CMessageSubmitWarRequest& from);
  
  inline CMessageSubmitWarRequest& operator=(const CMessageSubmitWarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSubmitWarRequest& default_instance();
  void Swap(CMessageSubmitWarRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSubmitWarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSubmitWarRequest& from);
  void MergeFrom(const CMessageSubmitWarRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 WarSerial = 3;
  inline bool has_warserial() const;
  inline void clear_warserial();
  static const int kWarSerialFieldNumber = 3;
  inline ::google::protobuf::uint32 warserial() const;
  inline void set_warserial(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 warserial_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSubmitWarRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageSubmitWarResponse : public ::google::protobuf::Message {
 public:
  CMessageSubmitWarResponse();
  virtual ~CMessageSubmitWarResponse();
  
  CMessageSubmitWarResponse(const CMessageSubmitWarResponse& from);
  
  inline CMessageSubmitWarResponse& operator=(const CMessageSubmitWarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageSubmitWarResponse& default_instance();
  void Swap(CMessageSubmitWarResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageSubmitWarResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageSubmitWarResponse& from);
  void MergeFrom(const CMessageSubmitWarResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 WarSerial = 3;
  inline bool has_warserial() const;
  inline void clear_warserial();
  static const int kWarSerialFieldNumber = 3;
  inline ::google::protobuf::uint32 warserial() const;
  inline void set_warserial(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 warserial_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageSubmitWarResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEnterWarRequest : public ::google::protobuf::Message {
 public:
  CMessageEnterWarRequest();
  virtual ~CMessageEnterWarRequest();
  
  CMessageEnterWarRequest(const CMessageEnterWarRequest& from);
  
  inline CMessageEnterWarRequest& operator=(const CMessageEnterWarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEnterWarRequest& default_instance();
  void Swap(CMessageEnterWarRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEnterWarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEnterWarRequest& from);
  void MergeFrom(const CMessageEnterWarRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WarID = 2;
  inline bool has_warid() const;
  inline void clear_warid();
  static const int kWarIDFieldNumber = 2;
  inline ::google::protobuf::uint32 warid() const;
  inline void set_warid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 WarSerial = 4;
  inline bool has_warserial() const;
  inline void clear_warserial();
  static const int kWarSerialFieldNumber = 4;
  inline ::google::protobuf::uint32 warserial() const;
  inline void set_warserial(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 warid_;
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 warserial_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEnterWarRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageEnterWarResponse : public ::google::protobuf::Message {
 public:
  CMessageEnterWarResponse();
  virtual ~CMessageEnterWarResponse();
  
  CMessageEnterWarResponse(const CMessageEnterWarResponse& from);
  
  inline CMessageEnterWarResponse& operator=(const CMessageEnterWarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageEnterWarResponse& default_instance();
  void Swap(CMessageEnterWarResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageEnterWarResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageEnterWarResponse& from);
  void MergeFrom(const CMessageEnterWarResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WarID = 2;
  inline bool has_warid() const;
  inline void clear_warid();
  static const int kWarIDFieldNumber = 2;
  inline ::google::protobuf::uint32 warid() const;
  inline void set_warid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 warid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageEnterWarResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarCampRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryWarCampRequest();
  virtual ~CMessageQueryWarCampRequest();
  
  CMessageQueryWarCampRequest(const CMessageQueryWarCampRequest& from);
  
  inline CMessageQueryWarCampRequest& operator=(const CMessageQueryWarCampRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarCampRequest& default_instance();
  void Swap(CMessageQueryWarCampRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarCampRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarCampRequest& from);
  void MergeFrom(const CMessageQueryWarCampRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarCampRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarCampResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryWarCampResponse();
  virtual ~CMessageQueryWarCampResponse();
  
  CMessageQueryWarCampResponse(const CMessageQueryWarCampResponse& from);
  
  inline CMessageQueryWarCampResponse& operator=(const CMessageQueryWarCampResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarCampResponse& default_instance();
  void Swap(CMessageQueryWarCampResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarCampResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarCampResponse& from);
  void MergeFrom(const CMessageQueryWarCampResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated uint32 WorldID = 2;
  inline int worldid_size() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& worldid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_worldid();
  inline ::google::protobuf::uint32 worldid(int index) const;
  inline void set_worldid(int index, ::google::protobuf::uint32 value);
  inline void add_worldid(::google::protobuf::uint32 value);
  
  // repeated uint32 CampID = 3;
  inline int campid_size() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& campid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_campid();
  inline ::google::protobuf::uint32 campid(int index) const;
  inline void set_campid(int index, ::google::protobuf::uint32 value);
  inline void add_campid(::google::protobuf::uint32 value);
  
  // repeated uint32 Money = 4;
  inline int money_size() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& money() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_money();
  inline ::google::protobuf::uint32 money(int index) const;
  inline void set_money(int index, ::google::protobuf::uint32 value);
  inline void add_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > worldid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > campid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > money_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarCampResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarNumRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryWarNumRequest();
  virtual ~CMessageQueryWarNumRequest();
  
  CMessageQueryWarNumRequest(const CMessageQueryWarNumRequest& from);
  
  inline CMessageQueryWarNumRequest& operator=(const CMessageQueryWarNumRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarNumRequest& default_instance();
  void Swap(CMessageQueryWarNumRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarNumRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarNumRequest& from);
  void MergeFrom(const CMessageQueryWarNumRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarNumRequest* default_instance_;
};
// -------------------------------------------------------------------

class WarNumData : public ::google::protobuf::Message {
 public:
  WarNumData();
  virtual ~WarNumData();
  
  WarNumData(const WarNumData& from);
  
  inline WarNumData& operator=(const WarNumData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WarNumData& default_instance();
  void Swap(WarNumData* other);
  
  // implements Message ----------------------------------------------
  
  WarNumData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarNumData& from);
  void MergeFrom(const WarNumData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 CampID = 2;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 2;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 CurrentNum = 3;
  inline bool has_currentnum() const;
  inline void clear_currentnum();
  static const int kCurrentNumFieldNumber = 3;
  inline ::google::protobuf::uint32 currentnum() const;
  inline void set_currentnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 currentnum_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static WarNumData* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarNumResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryWarNumResponse();
  virtual ~CMessageQueryWarNumResponse();
  
  CMessageQueryWarNumResponse(const CMessageQueryWarNumResponse& from);
  
  inline CMessageQueryWarNumResponse& operator=(const CMessageQueryWarNumResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarNumResponse& default_instance();
  void Swap(CMessageQueryWarNumResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarNumResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarNumResponse& from);
  void MergeFrom(const CMessageQueryWarNumResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated .WarNumData WarData = 2;
  inline int wardata_size() const;
  inline void clear_wardata();
  static const int kWarDataFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::WarNumData >& wardata() const;
  inline ::google::protobuf::RepeatedPtrField< ::WarNumData >* mutable_wardata();
  inline const ::WarNumData& wardata(int index) const;
  inline ::WarNumData* mutable_wardata(int index);
  inline ::WarNumData* add_wardata();
  
  // optional uint32 CampID = 3;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 3;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedPtrField< ::WarNumData > wardata_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarNumResponse* default_instance_;
};
// -------------------------------------------------------------------

class WarDetailInfo : public ::google::protobuf::Message {
 public:
  WarDetailInfo();
  virtual ~WarDetailInfo();
  
  WarDetailInfo(const WarDetailInfo& from);
  
  inline WarDetailInfo& operator=(const WarDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WarDetailInfo& default_instance();
  void Swap(WarDetailInfo* other);
  
  // implements Message ----------------------------------------------
  
  WarDetailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarDetailInfo& from);
  void MergeFrom(const WarDetailInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 CurrentNum = 2;
  inline bool has_currentnum() const;
  inline void clear_currentnum();
  static const int kCurrentNumFieldNumber = 2;
  inline ::google::protobuf::uint32 currentnum() const;
  inline void set_currentnum(::google::protobuf::uint32 value);
  
  // optional uint32 Power = 3;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 3;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);
  
  // optional uint32 Flag = 4;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);
  
  // optional uint32 Resource = 5;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 5;
  inline ::google::protobuf::uint32 resource() const;
  inline void set_resource(::google::protobuf::uint32 value);
  
  // optional uint32 Kill = 6;
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 6;
  inline ::google::protobuf::uint32 kill() const;
  inline void set_kill(::google::protobuf::uint32 value);
  
  // optional uint32 CampID = 7;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 7;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 currentnum_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 resource_;
  ::google::protobuf::uint32 kill_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static WarDetailInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryWarInfoRequest();
  virtual ~CMessageQueryWarInfoRequest();
  
  CMessageQueryWarInfoRequest(const CMessageQueryWarInfoRequest& from);
  
  inline CMessageQueryWarInfoRequest& operator=(const CMessageQueryWarInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarInfoRequest& default_instance();
  void Swap(CMessageQueryWarInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarInfoRequest& from);
  void MergeFrom(const CMessageQueryWarInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated uint32 CampID = 2;
  inline int campid_size() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& campid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_campid();
  inline ::google::protobuf::uint32 campid(int index) const;
  inline void set_campid(int index, ::google::protobuf::uint32 value);
  inline void add_campid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > campid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryWarInfoResponse();
  virtual ~CMessageQueryWarInfoResponse();
  
  CMessageQueryWarInfoResponse(const CMessageQueryWarInfoResponse& from);
  
  inline CMessageQueryWarInfoResponse& operator=(const CMessageQueryWarInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarInfoResponse& default_instance();
  void Swap(CMessageQueryWarInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarInfoResponse& from);
  void MergeFrom(const CMessageQueryWarInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated .WarDetailInfo CampInfo = 2;
  inline int campinfo_size() const;
  inline void clear_campinfo();
  static const int kCampInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::WarDetailInfo >& campinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::WarDetailInfo >* mutable_campinfo();
  inline const ::WarDetailInfo& campinfo(int index) const;
  inline ::WarDetailInfo* mutable_campinfo(int index);
  inline ::WarDetailInfo* add_campinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedPtrField< ::WarDetailInfo > campinfo_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class WarRankInfo : public ::google::protobuf::Message {
 public:
  WarRankInfo();
  virtual ~WarRankInfo();
  
  WarRankInfo(const WarRankInfo& from);
  
  inline WarRankInfo& operator=(const WarRankInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WarRankInfo& default_instance();
  void Swap(WarRankInfo* other);
  
  // implements Message ----------------------------------------------
  
  WarRankInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarRankInfo& from);
  void MergeFrom(const WarRankInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 MetierID = 2;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 2;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // optional uint32 Kill = 3;
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 3;
  inline ::google::protobuf::uint32 kill() const;
  inline void set_kill(::google::protobuf::uint32 value);
  
  // optional string CharName = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharNameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  
  // optional uint32 Rank = 5;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 5;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // optional uint32 Honor = 6;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 6;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::uint32 kill_;
  ::std::string* charname_;
  static const ::std::string _default_charname_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 honor_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static WarRankInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarRankRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryWarRankRequest();
  virtual ~CMessageQueryWarRankRequest();
  
  CMessageQueryWarRankRequest(const CMessageQueryWarRankRequest& from);
  
  inline CMessageQueryWarRankRequest& operator=(const CMessageQueryWarRankRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarRankRequest& default_instance();
  void Swap(CMessageQueryWarRankRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarRankRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarRankRequest& from);
  void MergeFrom(const CMessageQueryWarRankRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarRankRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarRankResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryWarRankResponse();
  virtual ~CMessageQueryWarRankResponse();
  
  CMessageQueryWarRankResponse(const CMessageQueryWarRankResponse& from);
  
  inline CMessageQueryWarRankResponse& operator=(const CMessageQueryWarRankResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarRankResponse& default_instance();
  void Swap(CMessageQueryWarRankResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarRankResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarRankResponse& from);
  void MergeFrom(const CMessageQueryWarRankResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // repeated .WarRankInfo RankInfo = 2;
  inline int rankinfo_size() const;
  inline void clear_rankinfo();
  static const int kRankInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::WarRankInfo >& rankinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::WarRankInfo >* mutable_rankinfo();
  inline const ::WarRankInfo& rankinfo(int index) const;
  inline ::WarRankInfo* mutable_rankinfo(int index);
  inline ::WarRankInfo* add_rankinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::RepeatedPtrField< ::WarRankInfo > rankinfo_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarRankResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarSourceNotify : public ::google::protobuf::Message {
 public:
  CMessageWarSourceNotify();
  virtual ~CMessageWarSourceNotify();
  
  CMessageWarSourceNotify(const CMessageWarSourceNotify& from);
  
  inline CMessageWarSourceNotify& operator=(const CMessageWarSourceNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarSourceNotify& default_instance();
  void Swap(CMessageWarSourceNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarSourceNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarSourceNotify& from);
  void MergeFrom(const CMessageWarSourceNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WorldID = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 Resource = 3;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 3;
  inline ::google::protobuf::uint32 resource() const;
  inline void set_resource(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 SourceNum = 5;
  inline bool has_sourcenum() const;
  inline void clear_sourcenum();
  static const int kSourceNumFieldNumber = 5;
  inline ::google::protobuf::uint32 sourcenum() const;
  inline void set_sourcenum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 resource_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 sourcenum_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarSourceNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBidCampRequest : public ::google::protobuf::Message {
 public:
  CMessageBidCampRequest();
  virtual ~CMessageBidCampRequest();
  
  CMessageBidCampRequest(const CMessageBidCampRequest& from);
  
  inline CMessageBidCampRequest& operator=(const CMessageBidCampRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBidCampRequest& default_instance();
  void Swap(CMessageBidCampRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBidCampRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBidCampRequest& from);
  void MergeFrom(const CMessageBidCampRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 CampID = 4;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 4;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBidCampRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBidCampResponse : public ::google::protobuf::Message {
 public:
  CMessageBidCampResponse();
  virtual ~CMessageBidCampResponse();
  
  CMessageBidCampResponse(const CMessageBidCampResponse& from);
  
  inline CMessageBidCampResponse& operator=(const CMessageBidCampResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBidCampResponse& default_instance();
  void Swap(CMessageBidCampResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBidCampResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBidCampResponse& from);
  void MergeFrom(const CMessageBidCampResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 CampID = 4;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 4;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBidCampResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampBidInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageCampBidInfoRequest();
  virtual ~CMessageCampBidInfoRequest();
  
  CMessageCampBidInfoRequest(const CMessageCampBidInfoRequest& from);
  
  inline CMessageCampBidInfoRequest& operator=(const CMessageCampBidInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampBidInfoRequest& default_instance();
  void Swap(CMessageCampBidInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampBidInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampBidInfoRequest& from);
  void MergeFrom(const CMessageCampBidInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampBidInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampBidInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageCampBidInfoResponse();
  virtual ~CMessageCampBidInfoResponse();
  
  CMessageCampBidInfoResponse(const CMessageCampBidInfoResponse& from);
  
  inline CMessageCampBidInfoResponse& operator=(const CMessageCampBidInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampBidInfoResponse& default_instance();
  void Swap(CMessageCampBidInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampBidInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampBidInfoResponse& from);
  void MergeFrom(const CMessageCampBidInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 CampID = 4;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 4;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 campid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampBidInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampResInfoRequest : public ::google::protobuf::Message {
 public:
  CMessageCampResInfoRequest();
  virtual ~CMessageCampResInfoRequest();
  
  CMessageCampResInfoRequest(const CMessageCampResInfoRequest& from);
  
  inline CMessageCampResInfoRequest& operator=(const CMessageCampResInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampResInfoRequest& default_instance();
  void Swap(CMessageCampResInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampResInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampResInfoRequest& from);
  void MergeFrom(const CMessageCampResInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 2;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampResInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampResInfoResponse : public ::google::protobuf::Message {
 public:
  CMessageCampResInfoResponse();
  virtual ~CMessageCampResInfoResponse();
  
  CMessageCampResInfoResponse(const CMessageCampResInfoResponse& from);
  
  inline CMessageCampResInfoResponse& operator=(const CMessageCampResInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampResInfoResponse& default_instance();
  void Swap(CMessageCampResInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampResInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampResInfoResponse& from);
  void MergeFrom(const CMessageCampResInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // repeated uint32 WorldID = 3;
  inline int worldid_size() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& worldid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_worldid();
  inline ::google::protobuf::uint32 worldid(int index) const;
  inline void set_worldid(int index, ::google::protobuf::uint32 value);
  inline void add_worldid(::google::protobuf::uint32 value);
  
  // repeated uint32 CampID = 4;
  inline int campid_size() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& campid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_campid();
  inline ::google::protobuf::uint32 campid(int index) const;
  inline void set_campid(int index, ::google::protobuf::uint32 value);
  inline void add_campid(::google::protobuf::uint32 value);
  
  // repeated uint32 Money = 5;
  inline int money_size() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& money() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_money();
  inline ::google::protobuf::uint32 money(int index) const;
  inline void set_money(int index, ::google::protobuf::uint32 value);
  inline void add_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > worldid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > campid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > money_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampResInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetWarAwardRequest : public ::google::protobuf::Message {
 public:
  CMessageGetWarAwardRequest();
  virtual ~CMessageGetWarAwardRequest();
  
  CMessageGetWarAwardRequest(const CMessageGetWarAwardRequest& from);
  
  inline CMessageGetWarAwardRequest& operator=(const CMessageGetWarAwardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetWarAwardRequest& default_instance();
  void Swap(CMessageGetWarAwardRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetWarAwardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetWarAwardRequest& from);
  void MergeFrom(const CMessageGetWarAwardRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WarSerial = 2;
  inline bool has_warserial() const;
  inline void clear_warserial();
  static const int kWarSerialFieldNumber = 2;
  inline ::google::protobuf::uint32 warserial() const;
  inline void set_warserial(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 warserial_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetWarAwardRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetWarAwardResponse : public ::google::protobuf::Message {
 public:
  CMessageGetWarAwardResponse();
  virtual ~CMessageGetWarAwardResponse();
  
  CMessageGetWarAwardResponse(const CMessageGetWarAwardResponse& from);
  
  inline CMessageGetWarAwardResponse& operator=(const CMessageGetWarAwardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetWarAwardResponse& default_instance();
  void Swap(CMessageGetWarAwardResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetWarAwardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetWarAwardResponse& from);
  void MergeFrom(const CMessageGetWarAwardResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 Rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // optional uint32 ValidTime = 5;
  inline bool has_validtime() const;
  inline void clear_validtime();
  static const int kValidTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 validtime() const;
  inline void set_validtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 validtime_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetWarAwardResponse* default_instance_;
};
// -------------------------------------------------------------------

class NPCWarInfo : public ::google::protobuf::Message {
 public:
  NPCWarInfo();
  virtual ~NPCWarInfo();
  
  NPCWarInfo(const NPCWarInfo& from);
  
  inline NPCWarInfo& operator=(const NPCWarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NPCWarInfo& default_instance();
  void Swap(NPCWarInfo* other);
  
  // implements Message ----------------------------------------------
  
  NPCWarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NPCWarInfo& from);
  void MergeFrom(const NPCWarInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PosX = 1;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 1;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 2;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 2;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 3;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 3;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 TempID = 4;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 4;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 tempid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static NPCWarInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarInfoNotify : public ::google::protobuf::Message {
 public:
  CMessageWarInfoNotify();
  virtual ~CMessageWarInfoNotify();
  
  CMessageWarInfoNotify(const CMessageWarInfoNotify& from);
  
  inline CMessageWarInfoNotify& operator=(const CMessageWarInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarInfoNotify& default_instance();
  void Swap(CMessageWarInfoNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarInfoNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarInfoNotify& from);
  void MergeFrom(const CMessageWarInfoNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // repeated .NPCWarInfo WarInfo = 2;
  inline int warinfo_size() const;
  inline void clear_warinfo();
  static const int kWarInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::NPCWarInfo >& warinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::NPCWarInfo >* mutable_warinfo();
  inline const ::NPCWarInfo& warinfo(int index) const;
  inline ::NPCWarInfo* mutable_warinfo(int index);
  inline ::NPCWarInfo* add_warinfo();
  
  // optional uint32 StoneID = 3;
  inline bool has_stoneid() const;
  inline void clear_stoneid();
  static const int kStoneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 stoneid() const;
  inline void set_stoneid(::google::protobuf::uint32 value);
  
  // optional uint32 StoneX = 4;
  inline bool has_stonex() const;
  inline void clear_stonex();
  static const int kStoneXFieldNumber = 4;
  inline ::google::protobuf::uint32 stonex() const;
  inline void set_stonex(::google::protobuf::uint32 value);
  
  // optional uint32 StoneY = 5;
  inline bool has_stoney() const;
  inline void clear_stoney();
  static const int kStoneYFieldNumber = 5;
  inline ::google::protobuf::uint32 stoney() const;
  inline void set_stoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::RepeatedPtrField< ::NPCWarInfo > warinfo_;
  ::google::protobuf::uint32 stoneid_;
  ::google::protobuf::uint32 stonex_;
  ::google::protobuf::uint32 stoney_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarAwardRequest : public ::google::protobuf::Message {
 public:
  CMessageQueryWarAwardRequest();
  virtual ~CMessageQueryWarAwardRequest();
  
  CMessageQueryWarAwardRequest(const CMessageQueryWarAwardRequest& from);
  
  inline CMessageQueryWarAwardRequest& operator=(const CMessageQueryWarAwardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarAwardRequest& default_instance();
  void Swap(CMessageQueryWarAwardRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarAwardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarAwardRequest& from);
  void MergeFrom(const CMessageQueryWarAwardRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 WarSerial = 2;
  inline bool has_warserial() const;
  inline void clear_warserial();
  static const int kWarSerialFieldNumber = 2;
  inline ::google::protobuf::uint32 warserial() const;
  inline void set_warserial(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 warserial_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarAwardRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryWarAwardResponse : public ::google::protobuf::Message {
 public:
  CMessageQueryWarAwardResponse();
  virtual ~CMessageQueryWarAwardResponse();
  
  CMessageQueryWarAwardResponse(const CMessageQueryWarAwardResponse& from);
  
  inline CMessageQueryWarAwardResponse& operator=(const CMessageQueryWarAwardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryWarAwardResponse& default_instance();
  void Swap(CMessageQueryWarAwardResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryWarAwardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryWarAwardResponse& from);
  void MergeFrom(const CMessageQueryWarAwardResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 WinMoney = 3;
  inline bool has_winmoney() const;
  inline void clear_winmoney();
  static const int kWinMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 winmoney() const;
  inline void set_winmoney(::google::protobuf::uint32 value);
  
  // optional uint32 BestMoney = 4;
  inline bool has_bestmoney() const;
  inline void clear_bestmoney();
  static const int kBestMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 bestmoney() const;
  inline void set_bestmoney(::google::protobuf::uint32 value);
  
  // repeated uint32 WinItem = 5;
  inline int winitem_size() const;
  inline void clear_winitem();
  static const int kWinItemFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& winitem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_winitem();
  inline ::google::protobuf::uint32 winitem(int index) const;
  inline void set_winitem(int index, ::google::protobuf::uint32 value);
  inline void add_winitem(::google::protobuf::uint32 value);
  
  // optional uint32 Rank = 6;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 6;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 winmoney_;
  ::google::protobuf::uint32 bestmoney_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > winitem_;
  ::google::protobuf::uint32 rank_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryWarAwardResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarHonorNotify : public ::google::protobuf::Message {
 public:
  CMessageWarHonorNotify();
  virtual ~CMessageWarHonorNotify();
  
  CMessageWarHonorNotify(const CMessageWarHonorNotify& from);
  
  inline CMessageWarHonorNotify& operator=(const CMessageWarHonorNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarHonorNotify& default_instance();
  void Swap(CMessageWarHonorNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarHonorNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarHonorNotify& from);
  void MergeFrom(const CMessageWarHonorNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TotalHonor = 1;
  inline bool has_totalhonor() const;
  inline void clear_totalhonor();
  static const int kTotalHonorFieldNumber = 1;
  inline ::google::protobuf::uint32 totalhonor() const;
  inline void set_totalhonor(::google::protobuf::uint32 value);
  
  // optional uint32 FreeHonor = 2;
  inline bool has_freehonor() const;
  inline void clear_freehonor();
  static const int kFreeHonorFieldNumber = 2;
  inline ::google::protobuf::uint32 freehonor() const;
  inline void set_freehonor(::google::protobuf::uint32 value);
  
  // optional uint32 WarHonor = 3;
  inline bool has_warhonor() const;
  inline void clear_warhonor();
  static const int kWarHonorFieldNumber = 3;
  inline ::google::protobuf::uint32 warhonor() const;
  inline void set_warhonor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 totalhonor_;
  ::google::protobuf::uint32 freehonor_;
  ::google::protobuf::uint32 warhonor_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarHonorNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageWarCampNotify : public ::google::protobuf::Message {
 public:
  CMessageWarCampNotify();
  virtual ~CMessageWarCampNotify();
  
  CMessageWarCampNotify(const CMessageWarCampNotify& from);
  
  inline CMessageWarCampNotify& operator=(const CMessageWarCampNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageWarCampNotify& default_instance();
  void Swap(CMessageWarCampNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageWarCampNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageWarCampNotify& from);
  void MergeFrom(const CMessageWarCampNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 WorldID = 1;
  inline int worldid_size() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& worldid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_worldid();
  inline ::google::protobuf::uint32 worldid(int index) const;
  inline void set_worldid(int index, ::google::protobuf::uint32 value);
  inline void add_worldid(::google::protobuf::uint32 value);
  
  // repeated uint32 CampID = 2;
  inline int campid_size() const;
  inline void clear_campid();
  static const int kCampIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& campid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_campid();
  inline ::google::protobuf::uint32 campid(int index) const;
  inline void set_campid(int index, ::google::protobuf::uint32 value);
  inline void add_campid(::google::protobuf::uint32 value);
  
  // repeated uint32 Money = 3;
  inline int money_size() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& money() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_money();
  inline ::google::protobuf::uint32 money(int index) const;
  inline void set_money(int index, ::google::protobuf::uint32 value);
  inline void add_money(::google::protobuf::uint32 value);
  
  // repeated uint32 BidCampID = 4;
  inline int bidcampid_size() const;
  inline void clear_bidcampid();
  static const int kBidCampIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bidcampid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bidcampid();
  inline ::google::protobuf::uint32 bidcampid(int index) const;
  inline void set_bidcampid(int index, ::google::protobuf::uint32 value);
  inline void add_bidcampid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > worldid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > campid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > money_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bidcampid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageWarCampNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifyRateRequest : public ::google::protobuf::Message {
 public:
  CMessageModifyRateRequest();
  virtual ~CMessageModifyRateRequest();
  
  CMessageModifyRateRequest(const CMessageModifyRateRequest& from);
  
  inline CMessageModifyRateRequest& operator=(const CMessageModifyRateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifyRateRequest& default_instance();
  void Swap(CMessageModifyRateRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifyRateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifyRateRequest& from);
  void MergeFrom(const CMessageModifyRateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RateOrder = 1;
  inline bool has_rateorder() const;
  inline void clear_rateorder();
  static const int kRateOrderFieldNumber = 1;
  inline ::google::protobuf::uint32 rateorder() const;
  inline void set_rateorder(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rateorder_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifyRateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifyRateResponse : public ::google::protobuf::Message {
 public:
  CMessageModifyRateResponse();
  virtual ~CMessageModifyRateResponse();
  
  CMessageModifyRateResponse(const CMessageModifyRateResponse& from);
  
  inline CMessageModifyRateResponse& operator=(const CMessageModifyRateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifyRateResponse& default_instance();
  void Swap(CMessageModifyRateResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifyRateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifyRateResponse& from);
  void MergeFrom(const CMessageModifyRateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RateOrder = 1;
  inline bool has_rateorder() const;
  inline void clear_rateorder();
  static const int kRateOrderFieldNumber = 1;
  inline ::google::protobuf::uint32 rateorder() const;
  inline void set_rateorder(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rateorder_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifyRateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageModifyRateNotify : public ::google::protobuf::Message {
 public:
  CMessageModifyRateNotify();
  virtual ~CMessageModifyRateNotify();
  
  CMessageModifyRateNotify(const CMessageModifyRateNotify& from);
  
  inline CMessageModifyRateNotify& operator=(const CMessageModifyRateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageModifyRateNotify& default_instance();
  void Swap(CMessageModifyRateNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageModifyRateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageModifyRateNotify& from);
  void MergeFrom(const CMessageModifyRateNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Rate = 1;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 1;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Real = 3;
  inline bool has_real() const;
  inline void clear_real();
  static const int kRealFieldNumber = 3;
  inline ::google::protobuf::uint32 real() const;
  inline void set_real(::google::protobuf::uint32 value);
  
  // optional uint32 WinWorld = 4;
  inline bool has_winworld() const;
  inline void clear_winworld();
  static const int kWinWorldFieldNumber = 4;
  inline ::google::protobuf::uint32 winworld() const;
  inline void set_winworld(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rate_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 real_;
  ::google::protobuf::uint32 winworld_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageModifyRateNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetTaxRequest : public ::google::protobuf::Message {
 public:
  CMessageGetTaxRequest();
  virtual ~CMessageGetTaxRequest();
  
  CMessageGetTaxRequest(const CMessageGetTaxRequest& from);
  
  inline CMessageGetTaxRequest& operator=(const CMessageGetTaxRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetTaxRequest& default_instance();
  void Swap(CMessageGetTaxRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetTaxRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetTaxRequest& from);
  void MergeFrom(const CMessageGetTaxRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Query = 2;
  inline bool has_query() const;
  inline void clear_query();
  static const int kQueryFieldNumber = 2;
  inline ::google::protobuf::uint32 query() const;
  inline void set_query(::google::protobuf::uint32 value);
  
  // optional uint32 NPCEntityID = 3;
  inline bool has_npcentityid() const;
  inline void clear_npcentityid();
  static const int kNPCEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 npcentityid() const;
  inline void set_npcentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 query_;
  ::google::protobuf::uint32 npcentityid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetTaxRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageGetTaxResponse : public ::google::protobuf::Message {
 public:
  CMessageGetTaxResponse();
  virtual ~CMessageGetTaxResponse();
  
  CMessageGetTaxResponse(const CMessageGetTaxResponse& from);
  
  inline CMessageGetTaxResponse& operator=(const CMessageGetTaxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageGetTaxResponse& default_instance();
  void Swap(CMessageGetTaxResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageGetTaxResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageGetTaxResponse& from);
  void MergeFrom(const CMessageGetTaxResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
  // optional uint32 Query = 4;
  inline bool has_query() const;
  inline void clear_query();
  static const int kQueryFieldNumber = 4;
  inline ::google::protobuf::uint32 query() const;
  inline void set_query(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 query_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageGetTaxResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageQueryStoneNotify : public ::google::protobuf::Message {
 public:
  CMessageQueryStoneNotify();
  virtual ~CMessageQueryStoneNotify();
  
  CMessageQueryStoneNotify(const CMessageQueryStoneNotify& from);
  
  inline CMessageQueryStoneNotify& operator=(const CMessageQueryStoneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageQueryStoneNotify& default_instance();
  void Swap(CMessageQueryStoneNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageQueryStoneNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageQueryStoneNotify& from);
  void MergeFrom(const CMessageQueryStoneNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 StoneID = 1;
  inline bool has_stoneid() const;
  inline void clear_stoneid();
  static const int kStoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 stoneid() const;
  inline void set_stoneid(::google::protobuf::uint32 value);
  
  // optional uint32 StoneX = 2;
  inline bool has_stonex() const;
  inline void clear_stonex();
  static const int kStoneXFieldNumber = 2;
  inline ::google::protobuf::uint32 stonex() const;
  inline void set_stonex(::google::protobuf::uint32 value);
  
  // optional uint32 StoneY = 3;
  inline bool has_stoney() const;
  inline void clear_stoney();
  static const int kStoneYFieldNumber = 3;
  inline ::google::protobuf::uint32 stoney() const;
  inline void set_stoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 stoneid_;
  ::google::protobuf::uint32 stonex_;
  ::google::protobuf::uint32 stoney_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageQueryStoneNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRefuseSummonRequest : public ::google::protobuf::Message {
 public:
  CMessageRefuseSummonRequest();
  virtual ~CMessageRefuseSummonRequest();
  
  CMessageRefuseSummonRequest(const CMessageRefuseSummonRequest& from);
  
  inline CMessageRefuseSummonRequest& operator=(const CMessageRefuseSummonRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRefuseSummonRequest& default_instance();
  void Swap(CMessageRefuseSummonRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRefuseSummonRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRefuseSummonRequest& from);
  void MergeFrom(const CMessageRefuseSummonRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AsynTeleTokenID = 1;
  inline bool has_asynteletokenid() const;
  inline void clear_asynteletokenid();
  static const int kAsynTeleTokenIDFieldNumber = 1;
  inline ::google::protobuf::uint32 asynteletokenid() const;
  inline void set_asynteletokenid(::google::protobuf::uint32 value);
  
  // optional uint32 SrcCharID = 2;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 3;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 asynteletokenid_;
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRefuseSummonRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageRefuseSummonNotify : public ::google::protobuf::Message {
 public:
  CMessageRefuseSummonNotify();
  virtual ~CMessageRefuseSummonNotify();
  
  CMessageRefuseSummonNotify(const CMessageRefuseSummonNotify& from);
  
  inline CMessageRefuseSummonNotify& operator=(const CMessageRefuseSummonNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageRefuseSummonNotify& default_instance();
  void Swap(CMessageRefuseSummonNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageRefuseSummonNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageRefuseSummonNotify& from);
  void MergeFrom(const CMessageRefuseSummonNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string SrcName = 1;
  inline bool has_srcname() const;
  inline void clear_srcname();
  static const int kSrcNameFieldNumber = 1;
  inline const ::std::string& srcname() const;
  inline void set_srcname(const ::std::string& value);
  inline void set_srcname(const char* value);
  inline void set_srcname(const char* value, size_t size);
  inline ::std::string* mutable_srcname();
  
  // optional string DesName = 2;
  inline bool has_desname() const;
  inline void clear_desname();
  static const int kDesNameFieldNumber = 2;
  inline const ::std::string& desname() const;
  inline void set_desname(const ::std::string& value);
  inline void set_desname(const char* value);
  inline void set_desname(const char* value, size_t size);
  inline ::std::string* mutable_desname();
  
  // optional uint32 SrcCharID = 3;
  inline bool has_srccharid() const;
  inline void clear_srccharid();
  static const int kSrcCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 srccharid() const;
  inline void set_srccharid(::google::protobuf::uint32 value);
  
  // optional uint32 DesCharID = 4;
  inline bool has_descharid() const;
  inline void clear_descharid();
  static const int kDesCharIDFieldNumber = 4;
  inline ::google::protobuf::uint32 descharid() const;
  inline void set_descharid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* srcname_;
  static const ::std::string _default_srcname_;
  ::std::string* desname_;
  static const ::std::string _default_desname_;
  ::google::protobuf::uint32 srccharid_;
  ::google::protobuf::uint32 descharid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageRefuseSummonNotify* default_instance_;
};
// -------------------------------------------------------------------

class PBCampWeakForceInfo : public ::google::protobuf::Message {
 public:
  PBCampWeakForceInfo();
  virtual ~PBCampWeakForceInfo();
  
  PBCampWeakForceInfo(const PBCampWeakForceInfo& from);
  
  inline PBCampWeakForceInfo& operator=(const PBCampWeakForceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCampWeakForceInfo& default_instance();
  void Swap(PBCampWeakForceInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBCampWeakForceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCampWeakForceInfo& from);
  void MergeFrom(const PBCampWeakForceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 camp_id = 1;
  inline bool has_camp_id() const;
  inline void clear_camp_id();
  static const int kCampIdFieldNumber = 1;
  inline ::google::protobuf::uint32 camp_id() const;
  inline void set_camp_id(::google::protobuf::uint32 value);
  
  // optional uint32 level_score = 2;
  inline bool has_level_score() const;
  inline void clear_level_score();
  static const int kLevelScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 level_score() const;
  inline void set_level_score(::google::protobuf::uint32 value);
  
  // optional uint32 honer_score = 3;
  inline bool has_honer_score() const;
  inline void clear_honer_score();
  static const int kHonerScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 honer_score() const;
  inline void set_honer_score(::google::protobuf::uint32 value);
  
  // optional uint32 total_score = 4;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 total_score() const;
  inline void set_total_score(::google::protobuf::uint32 value);
  
  // optional uint32 weak_level = 5;
  inline bool has_weak_level() const;
  inline void clear_weak_level();
  static const int kWeakLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 weak_level() const;
  inline void set_weak_level(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 camp_id_;
  ::google::protobuf::uint32 level_score_;
  ::google::protobuf::uint32 honer_score_;
  ::google::protobuf::uint32 total_score_;
  ::google::protobuf::uint32 weak_level_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCampWeakForceInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampWeakListRequest : public ::google::protobuf::Message {
 public:
  CMessageCampWeakListRequest();
  virtual ~CMessageCampWeakListRequest();
  
  CMessageCampWeakListRequest(const CMessageCampWeakListRequest& from);
  
  inline CMessageCampWeakListRequest& operator=(const CMessageCampWeakListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampWeakListRequest& default_instance();
  void Swap(CMessageCampWeakListRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampWeakListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampWeakListRequest& from);
  void MergeFrom(const CMessageCampWeakListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampWeakListRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampWeakListResponse : public ::google::protobuf::Message {
 public:
  CMessageCampWeakListResponse();
  virtual ~CMessageCampWeakListResponse();
  
  CMessageCampWeakListResponse(const CMessageCampWeakListResponse& from);
  
  inline CMessageCampWeakListResponse& operator=(const CMessageCampWeakListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampWeakListResponse& default_instance();
  void Swap(CMessageCampWeakListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampWeakListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampWeakListResponse& from);
  void MergeFrom(const CMessageCampWeakListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // repeated .PBCampWeakForceInfo camp_info = 2;
  inline int camp_info_size() const;
  inline void clear_camp_info();
  static const int kCampInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCampWeakForceInfo >& camp_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCampWeakForceInfo >* mutable_camp_info();
  inline const ::PBCampWeakForceInfo& camp_info(int index) const;
  inline ::PBCampWeakForceInfo* mutable_camp_info(int index);
  inline ::PBCampWeakForceInfo* add_camp_info();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  ::google::protobuf::RepeatedPtrField< ::PBCampWeakForceInfo > camp_info_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampWeakListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampGetAwardRequest : public ::google::protobuf::Message {
 public:
  CMessageCampGetAwardRequest();
  virtual ~CMessageCampGetAwardRequest();
  
  CMessageCampGetAwardRequest(const CMessageCampGetAwardRequest& from);
  
  inline CMessageCampGetAwardRequest& operator=(const CMessageCampGetAwardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampGetAwardRequest& default_instance();
  void Swap(CMessageCampGetAwardRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampGetAwardRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampGetAwardRequest& from);
  void MergeFrom(const CMessageCampGetAwardRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 npc_entity_id = 1;
  inline bool has_npc_entity_id() const;
  inline void clear_npc_entity_id();
  static const int kNpcEntityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 npc_entity_id() const;
  inline void set_npc_entity_id(::google::protobuf::uint32 value);
  
  // optional uint32 award_type = 2;
  inline bool has_award_type() const;
  inline void clear_award_type();
  static const int kAwardTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 award_type() const;
  inline void set_award_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npc_entity_id_;
  ::google::protobuf::uint32 award_type_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampGetAwardRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCampGetAwardResponse : public ::google::protobuf::Message {
 public:
  CMessageCampGetAwardResponse();
  virtual ~CMessageCampGetAwardResponse();
  
  CMessageCampGetAwardResponse(const CMessageCampGetAwardResponse& from);
  
  inline CMessageCampGetAwardResponse& operator=(const CMessageCampGetAwardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCampGetAwardResponse& default_instance();
  void Swap(CMessageCampGetAwardResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCampGetAwardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCampGetAwardResponse& from);
  void MergeFrom(const CMessageCampGetAwardResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 errcode_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCampGetAwardResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAccuseKingRequest : public ::google::protobuf::Message {
 public:
  CMessageAccuseKingRequest();
  virtual ~CMessageAccuseKingRequest();
  
  CMessageAccuseKingRequest(const CMessageAccuseKingRequest& from);
  
  inline CMessageAccuseKingRequest& operator=(const CMessageAccuseKingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAccuseKingRequest& default_instance();
  void Swap(CMessageAccuseKingRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAccuseKingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAccuseKingRequest& from);
  void MergeFrom(const CMessageAccuseKingRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AccuseResult = 1;
  inline bool has_accuseresult() const;
  inline void clear_accuseresult();
  static const int kAccuseResultFieldNumber = 1;
  inline ::google::protobuf::uint32 accuseresult() const;
  inline void set_accuseresult(::google::protobuf::uint32 value);
  
  // optional uint32 WorldID = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 accuseresult_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAccuseKingRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAccuseKingResponse : public ::google::protobuf::Message {
 public:
  CMessageAccuseKingResponse();
  virtual ~CMessageAccuseKingResponse();
  
  CMessageAccuseKingResponse(const CMessageAccuseKingResponse& from);
  
  inline CMessageAccuseKingResponse& operator=(const CMessageAccuseKingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAccuseKingResponse& default_instance();
  void Swap(CMessageAccuseKingResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAccuseKingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAccuseKingResponse& from);
  void MergeFrom(const CMessageAccuseKingResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ResponseResult = 1;
  inline bool has_responseresult() const;
  inline void clear_responseresult();
  static const int kResponseResultFieldNumber = 1;
  inline ::google::protobuf::uint32 responseresult() const;
  inline void set_responseresult(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseResult = 2;
  inline bool has_accuseresult() const;
  inline void clear_accuseresult();
  static const int kAccuseResultFieldNumber = 2;
  inline ::google::protobuf::uint32 accuseresult() const;
  inline void set_accuseresult(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 responseresult_;
  ::google::protobuf::uint32 accuseresult_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAccuseKingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAccuseKingNotify : public ::google::protobuf::Message {
 public:
  CMessageAccuseKingNotify();
  virtual ~CMessageAccuseKingNotify();
  
  CMessageAccuseKingNotify(const CMessageAccuseKingNotify& from);
  
  inline CMessageAccuseKingNotify& operator=(const CMessageAccuseKingNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAccuseKingNotify& default_instance();
  void Swap(CMessageAccuseKingNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAccuseKingNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAccuseKingNotify& from);
  void MergeFrom(const CMessageAccuseKingNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string KingName = 1;
  inline bool has_kingname() const;
  inline void clear_kingname();
  static const int kKingNameFieldNumber = 1;
  inline const ::std::string& kingname() const;
  inline void set_kingname(const ::std::string& value);
  inline void set_kingname(const char* value);
  inline void set_kingname(const char* value, size_t size);
  inline ::std::string* mutable_kingname();
  
  // optional uint32 CharID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* kingname_;
  static const ::std::string _default_kingname_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAccuseKingNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageAccuseStatusNotify : public ::google::protobuf::Message {
 public:
  CMessageAccuseStatusNotify();
  virtual ~CMessageAccuseStatusNotify();
  
  CMessageAccuseStatusNotify(const CMessageAccuseStatusNotify& from);
  
  inline CMessageAccuseStatusNotify& operator=(const CMessageAccuseStatusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageAccuseStatusNotify& default_instance();
  void Swap(CMessageAccuseStatusNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageAccuseStatusNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageAccuseStatusNotify& from);
  void MergeFrom(const CMessageAccuseStatusNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string KingName = 1;
  inline bool has_kingname() const;
  inline void clear_kingname();
  static const int kKingNameFieldNumber = 1;
  inline const ::std::string& kingname() const;
  inline void set_kingname(const ::std::string& value);
  inline void set_kingname(const char* value);
  inline void set_kingname(const char* value, size_t size);
  inline ::std::string* mutable_kingname();
  
  // optional uint32 YesNum = 2;
  inline bool has_yesnum() const;
  inline void clear_yesnum();
  static const int kYesNumFieldNumber = 2;
  inline ::google::protobuf::uint32 yesnum() const;
  inline void set_yesnum(::google::protobuf::uint32 value);
  
  // optional uint32 NoNum = 3;
  inline bool has_nonum() const;
  inline void clear_nonum();
  static const int kNoNumFieldNumber = 3;
  inline ::google::protobuf::uint32 nonum() const;
  inline void set_nonum(::google::protobuf::uint32 value);
  
  // optional uint32 AbortNum = 4;
  inline bool has_abortnum() const;
  inline void clear_abortnum();
  static const int kAbortNumFieldNumber = 4;
  inline ::google::protobuf::uint32 abortnum() const;
  inline void set_abortnum(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 5;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* kingname_;
  static const ::std::string _default_kingname_;
  ::google::protobuf::uint32 yesnum_;
  ::google::protobuf::uint32 nonum_;
  ::google::protobuf::uint32 abortnum_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageAccuseStatusNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePowerInfoRequest : public ::google::protobuf::Message {
 public:
  CMessagePowerInfoRequest();
  virtual ~CMessagePowerInfoRequest();
  
  CMessagePowerInfoRequest(const CMessagePowerInfoRequest& from);
  
  inline CMessagePowerInfoRequest& operator=(const CMessagePowerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePowerInfoRequest& default_instance();
  void Swap(CMessagePowerInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePowerInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePowerInfoRequest& from);
  void MergeFrom(const CMessagePowerInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CharID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePowerInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class PowerInfo : public ::google::protobuf::Message {
 public:
  PowerInfo();
  virtual ~PowerInfo();
  
  PowerInfo(const PowerInfo& from);
  
  inline PowerInfo& operator=(const PowerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerInfo& default_instance();
  void Swap(PowerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PowerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PowerInfo& from);
  void MergeFrom(const PowerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PowerType = 1;
  inline bool has_powertype() const;
  inline void clear_powertype();
  static const int kPowerTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 powertype() const;
  inline void set_powertype(::google::protobuf::uint32 value);
  
  // optional uint32 World = 2;
  inline bool has_world() const;
  inline void clear_world();
  static const int kWorldFieldNumber = 2;
  inline ::google::protobuf::uint32 world() const;
  inline void set_world(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeType = 3;
  inline bool has_changetype() const;
  inline void clear_changetype();
  static const int kChangeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 changetype() const;
  inline void set_changetype(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeValue = 4;
  inline bool has_changevalue() const;
  inline void clear_changevalue();
  static const int kChangeValueFieldNumber = 4;
  inline ::google::protobuf::uint32 changevalue() const;
  inline void set_changevalue(::google::protobuf::uint32 value);
  
  // optional uint32 Time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 powertype_;
  ::google::protobuf::uint32 world_;
  ::google::protobuf::uint32 changetype_;
  ::google::protobuf::uint32 changevalue_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PowerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMessagePowerInfoResponse : public ::google::protobuf::Message {
 public:
  CMessagePowerInfoResponse();
  virtual ~CMessagePowerInfoResponse();
  
  CMessagePowerInfoResponse(const CMessagePowerInfoResponse& from);
  
  inline CMessagePowerInfoResponse& operator=(const CMessagePowerInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessagePowerInfoResponse& default_instance();
  void Swap(CMessagePowerInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessagePowerInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessagePowerInfoResponse& from);
  void MergeFrom(const CMessagePowerInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PowerInfo PowerHistory = 1;
  inline int powerhistory_size() const;
  inline void clear_powerhistory();
  static const int kPowerHistoryFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PowerInfo >& powerhistory() const;
  inline ::google::protobuf::RepeatedPtrField< ::PowerInfo >* mutable_powerhistory();
  inline const ::PowerInfo& powerhistory(int index) const;
  inline ::PowerInfo* mutable_powerhistory(int index);
  inline ::PowerInfo* add_powerhistory();
  
  // optional uint32 PowerAdd = 2;
  inline bool has_poweradd() const;
  inline void clear_poweradd();
  static const int kPowerAddFieldNumber = 2;
  inline ::google::protobuf::uint32 poweradd() const;
  inline void set_poweradd(::google::protobuf::uint32 value);
  
  // optional uint32 PowerDel = 3;
  inline bool has_powerdel() const;
  inline void clear_powerdel();
  static const int kPowerDelFieldNumber = 3;
  inline ::google::protobuf::uint32 powerdel() const;
  inline void set_powerdel(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 4;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 CharID = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 5;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PowerInfo > powerhistory_;
  ::google::protobuf::uint32 poweradd_;
  ::google::protobuf::uint32 powerdel_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 charid_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessagePowerInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageMakeGuoTanNotify : public ::google::protobuf::Message {
 public:
  CMessageMakeGuoTanNotify();
  virtual ~CMessageMakeGuoTanNotify();
  
  CMessageMakeGuoTanNotify(const CMessageMakeGuoTanNotify& from);
  
  inline CMessageMakeGuoTanNotify& operator=(const CMessageMakeGuoTanNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMakeGuoTanNotify& default_instance();
  void Swap(CMessageMakeGuoTanNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageMakeGuoTanNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageMakeGuoTanNotify& from);
  void MergeFrom(const CMessageMakeGuoTanNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcWorldID = 1;
  inline bool has_srcworldid() const;
  inline void clear_srcworldid();
  static const int kSrcWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srcworldid() const;
  inline void set_srcworldid(::google::protobuf::uint32 value);
  
  // optional uint32 DesWorldID = 2;
  inline bool has_desworldid() const;
  inline void clear_desworldid();
  static const int kDesWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 desworldid() const;
  inline void set_desworldid(::google::protobuf::uint32 value);
  
  // optional uint32 TargetTime = 3;
  inline bool has_targettime() const;
  inline void clear_targettime();
  static const int kTargetTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 targettime() const;
  inline void set_targettime(::google::protobuf::uint32 value);
  
  // optional string KingName = 4;
  inline bool has_kingname() const;
  inline void clear_kingname();
  static const int kKingNameFieldNumber = 4;
  inline const ::std::string& kingname() const;
  inline void set_kingname(const ::std::string& value);
  inline void set_kingname(const char* value);
  inline void set_kingname(const char* value, size_t size);
  inline ::std::string* mutable_kingname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srcworldid_;
  ::google::protobuf::uint32 desworldid_;
  ::google::protobuf::uint32 targettime_;
  ::std::string* kingname_;
  static const ::std::string _default_kingname_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageMakeGuoTanNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageMakeLuanWuNotify : public ::google::protobuf::Message {
 public:
  CMessageMakeLuanWuNotify();
  virtual ~CMessageMakeLuanWuNotify();
  
  CMessageMakeLuanWuNotify(const CMessageMakeLuanWuNotify& from);
  
  inline CMessageMakeLuanWuNotify& operator=(const CMessageMakeLuanWuNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageMakeLuanWuNotify& default_instance();
  void Swap(CMessageMakeLuanWuNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageMakeLuanWuNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageMakeLuanWuNotify& from);
  void MergeFrom(const CMessageMakeLuanWuNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SrcWorldID = 1;
  inline bool has_srcworldid() const;
  inline void clear_srcworldid();
  static const int kSrcWorldIDFieldNumber = 1;
  inline ::google::protobuf::uint32 srcworldid() const;
  inline void set_srcworldid(::google::protobuf::uint32 value);
  
  // optional uint32 DesWorldID = 2;
  inline bool has_desworldid() const;
  inline void clear_desworldid();
  static const int kDesWorldIDFieldNumber = 2;
  inline ::google::protobuf::uint32 desworldid() const;
  inline void set_desworldid(::google::protobuf::uint32 value);
  
  // optional uint32 TargetTime = 3;
  inline bool has_targettime() const;
  inline void clear_targettime();
  static const int kTargetTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 targettime() const;
  inline void set_targettime(::google::protobuf::uint32 value);
  
  // optional string KingName = 4;
  inline bool has_kingname() const;
  inline void clear_kingname();
  static const int kKingNameFieldNumber = 4;
  inline const ::std::string& kingname() const;
  inline void set_kingname(const ::std::string& value);
  inline void set_kingname(const char* value);
  inline void set_kingname(const char* value, size_t size);
  inline ::std::string* mutable_kingname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 srcworldid_;
  ::google::protobuf::uint32 desworldid_;
  ::google::protobuf::uint32 targettime_;
  ::std::string* kingname_;
  static const ::std::string _default_kingname_;
  friend void  protobuf_AddDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_countrymessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_countrymessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageMakeLuanWuNotify* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// PBOfficialData

// optional uint32 CharID = 1;
inline bool PBOfficialData::has_charid() const {
  return _has_bit(0);
}
inline void PBOfficialData::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBOfficialData::charid() const {
  return charid_;
}
inline void PBOfficialData::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CharName = 2;
inline bool PBOfficialData::has_charname() const {
  return _has_bit(1);
}
inline void PBOfficialData::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBOfficialData::charname() const {
  return *charname_;
}
inline void PBOfficialData::set_charname(const ::std::string& value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PBOfficialData::set_charname(const char* value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void PBOfficialData::set_charname(const char* value, size_t size) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBOfficialData::mutable_charname() {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 OfficialLevel = 3;
inline bool PBOfficialData::has_officiallevel() const {
  return _has_bit(2);
}
inline void PBOfficialData::clear_officiallevel() {
  officiallevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBOfficialData::officiallevel() const {
  return officiallevel_;
}
inline void PBOfficialData::set_officiallevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  officiallevel_ = value;
}

// optional uint32 OfficialOrder = 4;
inline bool PBOfficialData::has_officialorder() const {
  return _has_bit(3);
}
inline void PBOfficialData::clear_officialorder() {
  officialorder_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBOfficialData::officialorder() const {
  return officialorder_;
}
inline void PBOfficialData::set_officialorder(::google::protobuf::uint32 value) {
  _set_bit(3);
  officialorder_ = value;
}

// repeated uint32 UseTimes = 5;
inline int PBOfficialData::usetimes_size() const {
  return usetimes_.size();
}
inline void PBOfficialData::clear_usetimes() {
  usetimes_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOfficialData::usetimes() const {
  return usetimes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOfficialData::mutable_usetimes() {
  return &usetimes_;
}
inline ::google::protobuf::uint32 PBOfficialData::usetimes(int index) const {
  return usetimes_.Get(index);
}
inline void PBOfficialData::set_usetimes(int index, ::google::protobuf::uint32 value) {
  usetimes_.Set(index, value);
}
inline void PBOfficialData::add_usetimes(::google::protobuf::uint32 value) {
  usetimes_.Add(value);
}

// repeated uint32 UseX = 6;
inline int PBOfficialData::usex_size() const {
  return usex_.size();
}
inline void PBOfficialData::clear_usex() {
  usex_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOfficialData::usex() const {
  return usex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOfficialData::mutable_usex() {
  return &usex_;
}
inline ::google::protobuf::uint32 PBOfficialData::usex(int index) const {
  return usex_.Get(index);
}
inline void PBOfficialData::set_usex(int index, ::google::protobuf::uint32 value) {
  usex_.Set(index, value);
}
inline void PBOfficialData::add_usex(::google::protobuf::uint32 value) {
  usex_.Add(value);
}

// repeated uint32 UseY = 7;
inline int PBOfficialData::usey_size() const {
  return usey_.size();
}
inline void PBOfficialData::clear_usey() {
  usey_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOfficialData::usey() const {
  return usey_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOfficialData::mutable_usey() {
  return &usey_;
}
inline ::google::protobuf::uint32 PBOfficialData::usey(int index) const {
  return usey_.Get(index);
}
inline void PBOfficialData::set_usey(int index, ::google::protobuf::uint32 value) {
  usey_.Set(index, value);
}
inline void PBOfficialData::add_usey(::google::protobuf::uint32 value) {
  usey_.Add(value);
}

// -------------------------------------------------------------------

// PBOfficialList

// repeated .PBOfficialData OfficialData = 1;
inline int PBOfficialList::officialdata_size() const {
  return officialdata_.size();
}
inline void PBOfficialList::clear_officialdata() {
  officialdata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBOfficialData >&
PBOfficialList::officialdata() const {
  return officialdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBOfficialData >*
PBOfficialList::mutable_officialdata() {
  return &officialdata_;
}
inline const ::PBOfficialData& PBOfficialList::officialdata(int index) const {
  return officialdata_.Get(index);
}
inline ::PBOfficialData* PBOfficialList::mutable_officialdata(int index) {
  return officialdata_.Mutable(index);
}
inline ::PBOfficialData* PBOfficialList::add_officialdata() {
  return officialdata_.Add();
}

// -------------------------------------------------------------------

// CMessageCountryInfoRequest

// optional uint32 CharID = 1;
inline bool CMessageCountryInfoRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCountryInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCountryInfoRequest::charid() const {
  return charid_;
}
inline void CMessageCountryInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 CountryID = 2;
inline bool CMessageCountryInfoRequest::has_countryid() const {
  return _has_bit(1);
}
inline void CMessageCountryInfoRequest::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCountryInfoRequest::countryid() const {
  return countryid_;
}
inline void CMessageCountryInfoRequest::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(1);
  countryid_ = value;
}

// optional uint32 NeedFull = 3;
inline bool CMessageCountryInfoRequest::has_needfull() const {
  return _has_bit(2);
}
inline void CMessageCountryInfoRequest::clear_needfull() {
  needfull_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCountryInfoRequest::needfull() const {
  return needfull_;
}
inline void CMessageCountryInfoRequest::set_needfull(::google::protobuf::uint32 value) {
  _set_bit(2);
  needfull_ = value;
}

// optional uint32 WorldID = 4;
inline bool CMessageCountryInfoRequest::has_worldid() const {
  return _has_bit(3);
}
inline void CMessageCountryInfoRequest::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCountryInfoRequest::worldid() const {
  return worldid_;
}
inline void CMessageCountryInfoRequest::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(3);
  worldid_ = value;
}

// -------------------------------------------------------------------

// CMessageCountryInfoResponse

// optional uint32 CharID = 1;
inline bool CMessageCountryInfoResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCountryInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::charid() const {
  return charid_;
}
inline void CMessageCountryInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 CountryID = 2;
inline bool CMessageCountryInfoResponse::has_countryid() const {
  return _has_bit(1);
}
inline void CMessageCountryInfoResponse::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::countryid() const {
  return countryid_;
}
inline void CMessageCountryInfoResponse::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(1);
  countryid_ = value;
}

// optional uint32 KingID = 3;
inline bool CMessageCountryInfoResponse::has_kingid() const {
  return _has_bit(2);
}
inline void CMessageCountryInfoResponse::clear_kingid() {
  kingid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::kingid() const {
  return kingid_;
}
inline void CMessageCountryInfoResponse::set_kingid(::google::protobuf::uint32 value) {
  _set_bit(2);
  kingid_ = value;
}

// optional string KingName = 4;
inline bool CMessageCountryInfoResponse::has_kingname() const {
  return _has_bit(3);
}
inline void CMessageCountryInfoResponse::clear_kingname() {
  if (kingname_ != &_default_kingname_) {
    kingname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageCountryInfoResponse::kingname() const {
  return *kingname_;
}
inline void CMessageCountryInfoResponse::set_kingname(const ::std::string& value) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageCountryInfoResponse::set_kingname(const char* value) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageCountryInfoResponse::set_kingname(const char* value, size_t size) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCountryInfoResponse::mutable_kingname() {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  return kingname_;
}

// optional uint32 CorpsID = 5;
inline bool CMessageCountryInfoResponse::has_corpsid() const {
  return _has_bit(4);
}
inline void CMessageCountryInfoResponse::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::corpsid() const {
  return corpsid_;
}
inline void CMessageCountryInfoResponse::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(4);
  corpsid_ = value;
}

// optional string CorpsName = 6;
inline bool CMessageCountryInfoResponse::has_corpsname() const {
  return _has_bit(5);
}
inline void CMessageCountryInfoResponse::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& CMessageCountryInfoResponse::corpsname() const {
  return *corpsname_;
}
inline void CMessageCountryInfoResponse::set_corpsname(const ::std::string& value) {
  _set_bit(5);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCountryInfoResponse::set_corpsname(const char* value) {
  _set_bit(5);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CMessageCountryInfoResponse::set_corpsname(const char* value, size_t size) {
  _set_bit(5);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCountryInfoResponse::mutable_corpsname() {
  _set_bit(5);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 UnionID = 7;
inline bool CMessageCountryInfoResponse::has_unionid() const {
  return _has_bit(6);
}
inline void CMessageCountryInfoResponse::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::unionid() const {
  return unionid_;
}
inline void CMessageCountryInfoResponse::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(6);
  unionid_ = value;
}

// optional string UnionName = 8;
inline bool CMessageCountryInfoResponse::has_unionname() const {
  return _has_bit(7);
}
inline void CMessageCountryInfoResponse::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& CMessageCountryInfoResponse::unionname() const {
  return *unionname_;
}
inline void CMessageCountryInfoResponse::set_unionname(const ::std::string& value) {
  _set_bit(7);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageCountryInfoResponse::set_unionname(const char* value) {
  _set_bit(7);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CMessageCountryInfoResponse::set_unionname(const char* value, size_t size) {
  _set_bit(7);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCountryInfoResponse::mutable_unionname() {
  _set_bit(7);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional uint32 PeopleNum = 9;
inline bool CMessageCountryInfoResponse::has_peoplenum() const {
  return _has_bit(8);
}
inline void CMessageCountryInfoResponse::clear_peoplenum() {
  peoplenum_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::peoplenum() const {
  return peoplenum_;
}
inline void CMessageCountryInfoResponse::set_peoplenum(::google::protobuf::uint32 value) {
  _set_bit(8);
  peoplenum_ = value;
}

// optional uint32 KingPower = 10;
inline bool CMessageCountryInfoResponse::has_kingpower() const {
  return _has_bit(9);
}
inline void CMessageCountryInfoResponse::clear_kingpower() {
  kingpower_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::kingpower() const {
  return kingpower_;
}
inline void CMessageCountryInfoResponse::set_kingpower(::google::protobuf::uint32 value) {
  _set_bit(9);
  kingpower_ = value;
}

// optional uint32 Map = 11;
inline bool CMessageCountryInfoResponse::has_map() const {
  return _has_bit(10);
}
inline void CMessageCountryInfoResponse::clear_map() {
  map_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::map() const {
  return map_;
}
inline void CMessageCountryInfoResponse::set_map(::google::protobuf::uint32 value) {
  _set_bit(10);
  map_ = value;
}

// optional uint32 Gold = 12;
inline bool CMessageCountryInfoResponse::has_gold() const {
  return _has_bit(11);
}
inline void CMessageCountryInfoResponse::clear_gold() {
  gold_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::gold() const {
  return gold_;
}
inline void CMessageCountryInfoResponse::set_gold(::google::protobuf::uint32 value) {
  _set_bit(11);
  gold_ = value;
}

// repeated uint32 Wizard = 13;
inline int CMessageCountryInfoResponse::wizard_size() const {
  return wizard_.size();
}
inline void CMessageCountryInfoResponse::clear_wizard() {
  wizard_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCountryInfoResponse::wizard() const {
  return wizard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCountryInfoResponse::mutable_wizard() {
  return &wizard_;
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::wizard(int index) const {
  return wizard_.Get(index);
}
inline void CMessageCountryInfoResponse::set_wizard(int index, ::google::protobuf::uint32 value) {
  wizard_.Set(index, value);
}
inline void CMessageCountryInfoResponse::add_wizard(::google::protobuf::uint32 value) {
  wizard_.Add(value);
}

// repeated uint32 ConstructValue = 14;
inline int CMessageCountryInfoResponse::constructvalue_size() const {
  return constructvalue_.size();
}
inline void CMessageCountryInfoResponse::clear_constructvalue() {
  constructvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCountryInfoResponse::constructvalue() const {
  return constructvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCountryInfoResponse::mutable_constructvalue() {
  return &constructvalue_;
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::constructvalue(int index) const {
  return constructvalue_.Get(index);
}
inline void CMessageCountryInfoResponse::set_constructvalue(int index, ::google::protobuf::uint32 value) {
  constructvalue_.Set(index, value);
}
inline void CMessageCountryInfoResponse::add_constructvalue(::google::protobuf::uint32 value) {
  constructvalue_.Add(value);
}

// repeated uint32 ConstructLevel = 15;
inline int CMessageCountryInfoResponse::constructlevel_size() const {
  return constructlevel_.size();
}
inline void CMessageCountryInfoResponse::clear_constructlevel() {
  constructlevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCountryInfoResponse::constructlevel() const {
  return constructlevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCountryInfoResponse::mutable_constructlevel() {
  return &constructlevel_;
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::constructlevel(int index) const {
  return constructlevel_.Get(index);
}
inline void CMessageCountryInfoResponse::set_constructlevel(int index, ::google::protobuf::uint32 value) {
  constructlevel_.Set(index, value);
}
inline void CMessageCountryInfoResponse::add_constructlevel(::google::protobuf::uint32 value) {
  constructlevel_.Add(value);
}

// optional string Notice = 16;
inline bool CMessageCountryInfoResponse::has_notice() const {
  return _has_bit(15);
}
inline void CMessageCountryInfoResponse::clear_notice() {
  if (notice_ != &_default_notice_) {
    notice_->clear();
  }
  _clear_bit(15);
}
inline const ::std::string& CMessageCountryInfoResponse::notice() const {
  return *notice_;
}
inline void CMessageCountryInfoResponse::set_notice(const ::std::string& value) {
  _set_bit(15);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CMessageCountryInfoResponse::set_notice(const char* value) {
  _set_bit(15);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CMessageCountryInfoResponse::set_notice(const char* value, size_t size) {
  _set_bit(15);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageCountryInfoResponse::mutable_notice() {
  _set_bit(15);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  return notice_;
}

// optional .PBCorpsBattleList BattleInfo = 17;
inline bool CMessageCountryInfoResponse::has_battleinfo() const {
  return _has_bit(16);
}
inline void CMessageCountryInfoResponse::clear_battleinfo() {
  if (battleinfo_ != NULL) battleinfo_->::PBCorpsBattleList::Clear();
  _clear_bit(16);
}
inline const ::PBCorpsBattleList& CMessageCountryInfoResponse::battleinfo() const {
  return battleinfo_ != NULL ? *battleinfo_ : *default_instance_->battleinfo_;
}
inline ::PBCorpsBattleList* CMessageCountryInfoResponse::mutable_battleinfo() {
  _set_bit(16);
  if (battleinfo_ == NULL) battleinfo_ = new ::PBCorpsBattleList;
  return battleinfo_;
}

// optional uint32 NeedFull = 18;
inline bool CMessageCountryInfoResponse::has_needfull() const {
  return _has_bit(17);
}
inline void CMessageCountryInfoResponse::clear_needfull() {
  needfull_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::needfull() const {
  return needfull_;
}
inline void CMessageCountryInfoResponse::set_needfull(::google::protobuf::uint32 value) {
  _set_bit(17);
  needfull_ = value;
}

// optional uint32 WorldID = 19;
inline bool CMessageCountryInfoResponse::has_worldid() const {
  return _has_bit(18);
}
inline void CMessageCountryInfoResponse::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::worldid() const {
  return worldid_;
}
inline void CMessageCountryInfoResponse::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(18);
  worldid_ = value;
}

// optional uint32 WorldLevel = 20;
inline bool CMessageCountryInfoResponse::has_worldlevel() const {
  return _has_bit(19);
}
inline void CMessageCountryInfoResponse::clear_worldlevel() {
  worldlevel_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 CMessageCountryInfoResponse::worldlevel() const {
  return worldlevel_;
}
inline void CMessageCountryInfoResponse::set_worldlevel(::google::protobuf::uint32 value) {
  _set_bit(19);
  worldlevel_ = value;
}

// -------------------------------------------------------------------

// CMessageJoinCountryRequest

// optional uint32 CharID = 1;
inline bool CMessageJoinCountryRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageJoinCountryRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageJoinCountryRequest::charid() const {
  return charid_;
}
inline void CMessageJoinCountryRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 CountryID = 2;
inline bool CMessageJoinCountryRequest::has_countryid() const {
  return _has_bit(1);
}
inline void CMessageJoinCountryRequest::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageJoinCountryRequest::countryid() const {
  return countryid_;
}
inline void CMessageJoinCountryRequest::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(1);
  countryid_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageJoinCountryRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageJoinCountryRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageJoinCountryRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageJoinCountryRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageJoinCountryResponse

// optional uint32 CharID = 1;
inline bool CMessageJoinCountryResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageJoinCountryResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageJoinCountryResponse::charid() const {
  return charid_;
}
inline void CMessageJoinCountryResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageJoinCountryResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageJoinCountryResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageJoinCountryResponse::result() const {
  return result_;
}
inline void CMessageJoinCountryResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 CountryID = 3;
inline bool CMessageJoinCountryResponse::has_countryid() const {
  return _has_bit(2);
}
inline void CMessageJoinCountryResponse::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageJoinCountryResponse::countryid() const {
  return countryid_;
}
inline void CMessageJoinCountryResponse::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(2);
  countryid_ = value;
}

// -------------------------------------------------------------------

// CMessageJoinCountryNotify

// optional uint32 CharID = 1;
inline bool CMessageJoinCountryNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageJoinCountryNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageJoinCountryNotify::charid() const {
  return charid_;
}
inline void CMessageJoinCountryNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 CountryID = 2;
inline bool CMessageJoinCountryNotify::has_countryid() const {
  return _has_bit(1);
}
inline void CMessageJoinCountryNotify::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageJoinCountryNotify::countryid() const {
  return countryid_;
}
inline void CMessageJoinCountryNotify::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(1);
  countryid_ = value;
}

// optional uint32 KingID = 3;
inline bool CMessageJoinCountryNotify::has_kingid() const {
  return _has_bit(2);
}
inline void CMessageJoinCountryNotify::clear_kingid() {
  kingid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageJoinCountryNotify::kingid() const {
  return kingid_;
}
inline void CMessageJoinCountryNotify::set_kingid(::google::protobuf::uint32 value) {
  _set_bit(2);
  kingid_ = value;
}

// -------------------------------------------------------------------

// CMessageLeaveCountryRequest

// optional uint32 CharID = 1;
inline bool CMessageLeaveCountryRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageLeaveCountryRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLeaveCountryRequest::charid() const {
  return charid_;
}
inline void CMessageLeaveCountryRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 CountryID = 2;
inline bool CMessageLeaveCountryRequest::has_countryid() const {
  return _has_bit(1);
}
inline void CMessageLeaveCountryRequest::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLeaveCountryRequest::countryid() const {
  return countryid_;
}
inline void CMessageLeaveCountryRequest::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(1);
  countryid_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageLeaveCountryRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageLeaveCountryRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLeaveCountryRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageLeaveCountryRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageLeaveCountryResponse

// optional uint32 CharID = 1;
inline bool CMessageLeaveCountryResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageLeaveCountryResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageLeaveCountryResponse::charid() const {
  return charid_;
}
inline void CMessageLeaveCountryResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageLeaveCountryResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageLeaveCountryResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageLeaveCountryResponse::result() const {
  return result_;
}
inline void CMessageLeaveCountryResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 CountryID = 3;
inline bool CMessageLeaveCountryResponse::has_countryid() const {
  return _has_bit(2);
}
inline void CMessageLeaveCountryResponse::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageLeaveCountryResponse::countryid() const {
  return countryid_;
}
inline void CMessageLeaveCountryResponse::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(2);
  countryid_ = value;
}

// -------------------------------------------------------------------

// CMessageSetOfficialRequest

// optional uint32 CharID = 1;
inline bool CMessageSetOfficialRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageSetOfficialRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSetOfficialRequest::charid() const {
  return charid_;
}
inline void CMessageSetOfficialRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CharName = 2;
inline bool CMessageSetOfficialRequest::has_charname() const {
  return _has_bit(1);
}
inline void CMessageSetOfficialRequest::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageSetOfficialRequest::charname() const {
  return *charname_;
}
inline void CMessageSetOfficialRequest::set_charname(const ::std::string& value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageSetOfficialRequest::set_charname(const char* value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageSetOfficialRequest::set_charname(const char* value, size_t size) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSetOfficialRequest::mutable_charname() {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 OfficialLevel = 3;
inline bool CMessageSetOfficialRequest::has_officiallevel() const {
  return _has_bit(2);
}
inline void CMessageSetOfficialRequest::clear_officiallevel() {
  officiallevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSetOfficialRequest::officiallevel() const {
  return officiallevel_;
}
inline void CMessageSetOfficialRequest::set_officiallevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  officiallevel_ = value;
}

// optional uint32 OfficialOrder = 4;
inline bool CMessageSetOfficialRequest::has_officialorder() const {
  return _has_bit(3);
}
inline void CMessageSetOfficialRequest::clear_officialorder() {
  officialorder_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSetOfficialRequest::officialorder() const {
  return officialorder_;
}
inline void CMessageSetOfficialRequest::set_officialorder(::google::protobuf::uint32 value) {
  _set_bit(3);
  officialorder_ = value;
}

// optional uint32 NormalSet = 5;
inline bool CMessageSetOfficialRequest::has_normalset() const {
  return _has_bit(4);
}
inline void CMessageSetOfficialRequest::clear_normalset() {
  normalset_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageSetOfficialRequest::normalset() const {
  return normalset_;
}
inline void CMessageSetOfficialRequest::set_normalset(::google::protobuf::uint32 value) {
  _set_bit(4);
  normalset_ = value;
}

// -------------------------------------------------------------------

// CMessageSetOfficialResponse

// optional uint32 CharID = 1;
inline bool CMessageSetOfficialResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageSetOfficialResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSetOfficialResponse::charid() const {
  return charid_;
}
inline void CMessageSetOfficialResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageSetOfficialResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageSetOfficialResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSetOfficialResponse::result() const {
  return result_;
}
inline void CMessageSetOfficialResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional string CharName = 3;
inline bool CMessageSetOfficialResponse::has_charname() const {
  return _has_bit(2);
}
inline void CMessageSetOfficialResponse::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageSetOfficialResponse::charname() const {
  return *charname_;
}
inline void CMessageSetOfficialResponse::set_charname(const ::std::string& value) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageSetOfficialResponse::set_charname(const char* value) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageSetOfficialResponse::set_charname(const char* value, size_t size) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSetOfficialResponse::mutable_charname() {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 OfficialLevel = 4;
inline bool CMessageSetOfficialResponse::has_officiallevel() const {
  return _has_bit(3);
}
inline void CMessageSetOfficialResponse::clear_officiallevel() {
  officiallevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSetOfficialResponse::officiallevel() const {
  return officiallevel_;
}
inline void CMessageSetOfficialResponse::set_officiallevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  officiallevel_ = value;
}

// optional uint32 OfficialOrder = 5;
inline bool CMessageSetOfficialResponse::has_officialorder() const {
  return _has_bit(4);
}
inline void CMessageSetOfficialResponse::clear_officialorder() {
  officialorder_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageSetOfficialResponse::officialorder() const {
  return officialorder_;
}
inline void CMessageSetOfficialResponse::set_officialorder(::google::protobuf::uint32 value) {
  _set_bit(4);
  officialorder_ = value;
}

// optional uint32 NormalSet = 6;
inline bool CMessageSetOfficialResponse::has_normalset() const {
  return _has_bit(5);
}
inline void CMessageSetOfficialResponse::clear_normalset() {
  normalset_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageSetOfficialResponse::normalset() const {
  return normalset_;
}
inline void CMessageSetOfficialResponse::set_normalset(::google::protobuf::uint32 value) {
  _set_bit(5);
  normalset_ = value;
}

// optional uint32 TargetID = 7;
inline bool CMessageSetOfficialResponse::has_targetid() const {
  return _has_bit(6);
}
inline void CMessageSetOfficialResponse::clear_targetid() {
  targetid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageSetOfficialResponse::targetid() const {
  return targetid_;
}
inline void CMessageSetOfficialResponse::set_targetid(::google::protobuf::uint32 value) {
  _set_bit(6);
  targetid_ = value;
}

// -------------------------------------------------------------------

// CMessageUnSetOfficialRequest

// optional uint32 CharID = 1;
inline bool CMessageUnSetOfficialRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUnSetOfficialRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUnSetOfficialRequest::charid() const {
  return charid_;
}
inline void CMessageUnSetOfficialRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 OfficialLevel = 2;
inline bool CMessageUnSetOfficialRequest::has_officiallevel() const {
  return _has_bit(1);
}
inline void CMessageUnSetOfficialRequest::clear_officiallevel() {
  officiallevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUnSetOfficialRequest::officiallevel() const {
  return officiallevel_;
}
inline void CMessageUnSetOfficialRequest::set_officiallevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  officiallevel_ = value;
}

// optional uint32 OfficialOrder = 3;
inline bool CMessageUnSetOfficialRequest::has_officialorder() const {
  return _has_bit(2);
}
inline void CMessageUnSetOfficialRequest::clear_officialorder() {
  officialorder_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUnSetOfficialRequest::officialorder() const {
  return officialorder_;
}
inline void CMessageUnSetOfficialRequest::set_officialorder(::google::protobuf::uint32 value) {
  _set_bit(2);
  officialorder_ = value;
}

// -------------------------------------------------------------------

// CMessageUnSetOfficialResponse

// optional uint32 CharID = 1;
inline bool CMessageUnSetOfficialResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUnSetOfficialResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUnSetOfficialResponse::charid() const {
  return charid_;
}
inline void CMessageUnSetOfficialResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageUnSetOfficialResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageUnSetOfficialResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUnSetOfficialResponse::result() const {
  return result_;
}
inline void CMessageUnSetOfficialResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional string CharName = 3;
inline bool CMessageUnSetOfficialResponse::has_charname() const {
  return _has_bit(2);
}
inline void CMessageUnSetOfficialResponse::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageUnSetOfficialResponse::charname() const {
  return *charname_;
}
inline void CMessageUnSetOfficialResponse::set_charname(const ::std::string& value) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageUnSetOfficialResponse::set_charname(const char* value) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageUnSetOfficialResponse::set_charname(const char* value, size_t size) {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUnSetOfficialResponse::mutable_charname() {
  _set_bit(2);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 OfficialLevel = 4;
inline bool CMessageUnSetOfficialResponse::has_officiallevel() const {
  return _has_bit(3);
}
inline void CMessageUnSetOfficialResponse::clear_officiallevel() {
  officiallevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUnSetOfficialResponse::officiallevel() const {
  return officiallevel_;
}
inline void CMessageUnSetOfficialResponse::set_officiallevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  officiallevel_ = value;
}

// optional uint32 OfficialOrder = 5;
inline bool CMessageUnSetOfficialResponse::has_officialorder() const {
  return _has_bit(4);
}
inline void CMessageUnSetOfficialResponse::clear_officialorder() {
  officialorder_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUnSetOfficialResponse::officialorder() const {
  return officialorder_;
}
inline void CMessageUnSetOfficialResponse::set_officialorder(::google::protobuf::uint32 value) {
  _set_bit(4);
  officialorder_ = value;
}

// -------------------------------------------------------------------

// CMessageUseFunctionRequest

// optional uint32 CharID = 1;
inline bool CMessageUseFunctionRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUseFunctionRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUseFunctionRequest::charid() const {
  return charid_;
}
inline void CMessageUseFunctionRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 FunctionType = 2;
inline bool CMessageUseFunctionRequest::has_functiontype() const {
  return _has_bit(1);
}
inline void CMessageUseFunctionRequest::clear_functiontype() {
  functiontype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUseFunctionRequest::functiontype() const {
  return functiontype_;
}
inline void CMessageUseFunctionRequest::set_functiontype(::google::protobuf::uint32 value) {
  _set_bit(1);
  functiontype_ = value;
}

// optional uint32 FunctionOrder = 3;
inline bool CMessageUseFunctionRequest::has_functionorder() const {
  return _has_bit(2);
}
inline void CMessageUseFunctionRequest::clear_functionorder() {
  functionorder_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUseFunctionRequest::functionorder() const {
  return functionorder_;
}
inline void CMessageUseFunctionRequest::set_functionorder(::google::protobuf::uint32 value) {
  _set_bit(2);
  functionorder_ = value;
}

// optional string TargetName = 4;
inline bool CMessageUseFunctionRequest::has_targetname() const {
  return _has_bit(3);
}
inline void CMessageUseFunctionRequest::clear_targetname() {
  if (targetname_ != &_default_targetname_) {
    targetname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageUseFunctionRequest::targetname() const {
  return *targetname_;
}
inline void CMessageUseFunctionRequest::set_targetname(const ::std::string& value) {
  _set_bit(3);
  if (targetname_ == &_default_targetname_) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
}
inline void CMessageUseFunctionRequest::set_targetname(const char* value) {
  _set_bit(3);
  if (targetname_ == &_default_targetname_) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
}
inline void CMessageUseFunctionRequest::set_targetname(const char* value, size_t size) {
  _set_bit(3);
  if (targetname_ == &_default_targetname_) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUseFunctionRequest::mutable_targetname() {
  _set_bit(3);
  if (targetname_ == &_default_targetname_) {
    targetname_ = new ::std::string;
  }
  return targetname_;
}

// optional .TeleportData Teleport = 5;
inline bool CMessageUseFunctionRequest::has_teleport() const {
  return _has_bit(4);
}
inline void CMessageUseFunctionRequest::clear_teleport() {
  if (teleport_ != NULL) teleport_->::TeleportData::Clear();
  _clear_bit(4);
}
inline const ::TeleportData& CMessageUseFunctionRequest::teleport() const {
  return teleport_ != NULL ? *teleport_ : *default_instance_->teleport_;
}
inline ::TeleportData* CMessageUseFunctionRequest::mutable_teleport() {
  _set_bit(4);
  if (teleport_ == NULL) teleport_ = new ::TeleportData;
  return teleport_;
}

// optional uint32 IntParam1 = 6;
inline bool CMessageUseFunctionRequest::has_intparam1() const {
  return _has_bit(5);
}
inline void CMessageUseFunctionRequest::clear_intparam1() {
  intparam1_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUseFunctionRequest::intparam1() const {
  return intparam1_;
}
inline void CMessageUseFunctionRequest::set_intparam1(::google::protobuf::uint32 value) {
  _set_bit(5);
  intparam1_ = value;
}

// -------------------------------------------------------------------

// CMessageUseFunctionResponse

// optional uint32 CharID = 1;
inline bool CMessageUseFunctionResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUseFunctionResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUseFunctionResponse::charid() const {
  return charid_;
}
inline void CMessageUseFunctionResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageUseFunctionResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageUseFunctionResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUseFunctionResponse::result() const {
  return result_;
}
inline void CMessageUseFunctionResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 FunctionType = 3;
inline bool CMessageUseFunctionResponse::has_functiontype() const {
  return _has_bit(2);
}
inline void CMessageUseFunctionResponse::clear_functiontype() {
  functiontype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUseFunctionResponse::functiontype() const {
  return functiontype_;
}
inline void CMessageUseFunctionResponse::set_functiontype(::google::protobuf::uint32 value) {
  _set_bit(2);
  functiontype_ = value;
}

// optional uint32 FunctionOrder = 4;
inline bool CMessageUseFunctionResponse::has_functionorder() const {
  return _has_bit(3);
}
inline void CMessageUseFunctionResponse::clear_functionorder() {
  functionorder_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUseFunctionResponse::functionorder() const {
  return functionorder_;
}
inline void CMessageUseFunctionResponse::set_functionorder(::google::protobuf::uint32 value) {
  _set_bit(3);
  functionorder_ = value;
}

// optional string TargetName = 5;
inline bool CMessageUseFunctionResponse::has_targetname() const {
  return _has_bit(4);
}
inline void CMessageUseFunctionResponse::clear_targetname() {
  if (targetname_ != &_default_targetname_) {
    targetname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CMessageUseFunctionResponse::targetname() const {
  return *targetname_;
}
inline void CMessageUseFunctionResponse::set_targetname(const ::std::string& value) {
  _set_bit(4);
  if (targetname_ == &_default_targetname_) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
}
inline void CMessageUseFunctionResponse::set_targetname(const char* value) {
  _set_bit(4);
  if (targetname_ == &_default_targetname_) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
}
inline void CMessageUseFunctionResponse::set_targetname(const char* value, size_t size) {
  _set_bit(4);
  if (targetname_ == &_default_targetname_) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUseFunctionResponse::mutable_targetname() {
  _set_bit(4);
  if (targetname_ == &_default_targetname_) {
    targetname_ = new ::std::string;
  }
  return targetname_;
}

// -------------------------------------------------------------------

// CMessageOfficialInfoRequest

// optional uint32 CharID = 1;
inline bool CMessageOfficialInfoRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageOfficialInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageOfficialInfoRequest::charid() const {
  return charid_;
}
inline void CMessageOfficialInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageOfficialInfoResponse

// optional uint32 CharID = 1;
inline bool CMessageOfficialInfoResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageOfficialInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageOfficialInfoResponse::charid() const {
  return charid_;
}
inline void CMessageOfficialInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageOfficialInfoResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageOfficialInfoResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageOfficialInfoResponse::result() const {
  return result_;
}
inline void CMessageOfficialInfoResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional .PBOfficialList OfficialList = 3;
inline bool CMessageOfficialInfoResponse::has_officiallist() const {
  return _has_bit(2);
}
inline void CMessageOfficialInfoResponse::clear_officiallist() {
  if (officiallist_ != NULL) officiallist_->::PBOfficialList::Clear();
  _clear_bit(2);
}
inline const ::PBOfficialList& CMessageOfficialInfoResponse::officiallist() const {
  return officiallist_ != NULL ? *officiallist_ : *default_instance_->officiallist_;
}
inline ::PBOfficialList* CMessageOfficialInfoResponse::mutable_officiallist() {
  _set_bit(2);
  if (officiallist_ == NULL) officiallist_ = new ::PBOfficialList;
  return officiallist_;
}

// -------------------------------------------------------------------

// CMessageUseTimeRequest

// optional uint32 CharID = 1;
inline bool CMessageUseTimeRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUseTimeRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUseTimeRequest::charid() const {
  return charid_;
}
inline void CMessageUseTimeRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageUseTimeResponse

// optional uint32 CharID = 1;
inline bool CMessageUseTimeResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageUseTimeResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUseTimeResponse::charid() const {
  return charid_;
}
inline void CMessageUseTimeResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageUseTimeResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageUseTimeResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUseTimeResponse::result() const {
  return result_;
}
inline void CMessageUseTimeResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional .PBOfficialData OfficialData = 3;
inline bool CMessageUseTimeResponse::has_officialdata() const {
  return _has_bit(2);
}
inline void CMessageUseTimeResponse::clear_officialdata() {
  if (officialdata_ != NULL) officialdata_->::PBOfficialData::Clear();
  _clear_bit(2);
}
inline const ::PBOfficialData& CMessageUseTimeResponse::officialdata() const {
  return officialdata_ != NULL ? *officialdata_ : *default_instance_->officialdata_;
}
inline ::PBOfficialData* CMessageUseTimeResponse::mutable_officialdata() {
  _set_bit(2);
  if (officialdata_ == NULL) officialdata_ = new ::PBOfficialData;
  return officialdata_;
}

// -------------------------------------------------------------------

// CMessageWorldQuestRequest

// optional uint32 CharID = 1;
inline bool CMessageWorldQuestRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldQuestRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldQuestRequest::charid() const {
  return charid_;
}
inline void CMessageWorldQuestRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WorldID = 2;
inline bool CMessageWorldQuestRequest::has_worldid() const {
  return _has_bit(1);
}
inline void CMessageWorldQuestRequest::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldQuestRequest::worldid() const {
  return worldid_;
}
inline void CMessageWorldQuestRequest::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  worldid_ = value;
}

// optional uint32 OpType = 3;
inline bool CMessageWorldQuestRequest::has_optype() const {
  return _has_bit(2);
}
inline void CMessageWorldQuestRequest::clear_optype() {
  optype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWorldQuestRequest::optype() const {
  return optype_;
}
inline void CMessageWorldQuestRequest::set_optype(::google::protobuf::uint32 value) {
  _set_bit(2);
  optype_ = value;
}

// optional uint32 NPCEntityID = 4;
inline bool CMessageWorldQuestRequest::has_npcentityid() const {
  return _has_bit(3);
}
inline void CMessageWorldQuestRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWorldQuestRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageWorldQuestRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(3);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageWorldQuestResponse

// optional uint32 CharID = 1;
inline bool CMessageWorldQuestResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldQuestResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldQuestResponse::charid() const {
  return charid_;
}
inline void CMessageWorldQuestResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageWorldQuestResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageWorldQuestResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldQuestResponse::result() const {
  return result_;
}
inline void CMessageWorldQuestResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 WorldID = 3;
inline bool CMessageWorldQuestResponse::has_worldid() const {
  return _has_bit(2);
}
inline void CMessageWorldQuestResponse::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWorldQuestResponse::worldid() const {
  return worldid_;
}
inline void CMessageWorldQuestResponse::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(2);
  worldid_ = value;
}

// optional uint32 OpType = 4;
inline bool CMessageWorldQuestResponse::has_optype() const {
  return _has_bit(3);
}
inline void CMessageWorldQuestResponse::clear_optype() {
  optype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWorldQuestResponse::optype() const {
  return optype_;
}
inline void CMessageWorldQuestResponse::set_optype(::google::protobuf::uint32 value) {
  _set_bit(3);
  optype_ = value;
}

// -------------------------------------------------------------------

// CMessageWorldAnswerRequest

// optional uint32 CharID = 1;
inline bool CMessageWorldAnswerRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldAnswerRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerRequest::charid() const {
  return charid_;
}
inline void CMessageWorldAnswerRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WorldID = 2;
inline bool CMessageWorldAnswerRequest::has_worldid() const {
  return _has_bit(1);
}
inline void CMessageWorldAnswerRequest::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerRequest::worldid() const {
  return worldid_;
}
inline void CMessageWorldAnswerRequest::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  worldid_ = value;
}

// optional uint32 OpType = 3;
inline bool CMessageWorldAnswerRequest::has_optype() const {
  return _has_bit(2);
}
inline void CMessageWorldAnswerRequest::clear_optype() {
  optype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerRequest::optype() const {
  return optype_;
}
inline void CMessageWorldAnswerRequest::set_optype(::google::protobuf::uint32 value) {
  _set_bit(2);
  optype_ = value;
}

// optional uint32 Answer = 4;
inline bool CMessageWorldAnswerRequest::has_answer() const {
  return _has_bit(3);
}
inline void CMessageWorldAnswerRequest::clear_answer() {
  answer_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerRequest::answer() const {
  return answer_;
}
inline void CMessageWorldAnswerRequest::set_answer(::google::protobuf::uint32 value) {
  _set_bit(3);
  answer_ = value;
}

// -------------------------------------------------------------------

// CMessageWorldAnswerResponse

// optional uint32 CharID = 1;
inline bool CMessageWorldAnswerResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldAnswerResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerResponse::charid() const {
  return charid_;
}
inline void CMessageWorldAnswerResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageWorldAnswerResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageWorldAnswerResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerResponse::result() const {
  return result_;
}
inline void CMessageWorldAnswerResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 WorldID = 3;
inline bool CMessageWorldAnswerResponse::has_worldid() const {
  return _has_bit(2);
}
inline void CMessageWorldAnswerResponse::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerResponse::worldid() const {
  return worldid_;
}
inline void CMessageWorldAnswerResponse::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(2);
  worldid_ = value;
}

// optional uint32 OpType = 4;
inline bool CMessageWorldAnswerResponse::has_optype() const {
  return _has_bit(3);
}
inline void CMessageWorldAnswerResponse::clear_optype() {
  optype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerResponse::optype() const {
  return optype_;
}
inline void CMessageWorldAnswerResponse::set_optype(::google::protobuf::uint32 value) {
  _set_bit(3);
  optype_ = value;
}

// optional uint32 Answer = 5;
inline bool CMessageWorldAnswerResponse::has_answer() const {
  return _has_bit(4);
}
inline void CMessageWorldAnswerResponse::clear_answer() {
  answer_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerResponse::answer() const {
  return answer_;
}
inline void CMessageWorldAnswerResponse::set_answer(::google::protobuf::uint32 value) {
  _set_bit(4);
  answer_ = value;
}

// -------------------------------------------------------------------

// CMessageWorldAnswerNotify

// optional uint32 CharID = 1;
inline bool CMessageWorldAnswerNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldAnswerNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerNotify::charid() const {
  return charid_;
}
inline void CMessageWorldAnswerNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 SrcWorldID = 2;
inline bool CMessageWorldAnswerNotify::has_srcworldid() const {
  return _has_bit(1);
}
inline void CMessageWorldAnswerNotify::clear_srcworldid() {
  srcworldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerNotify::srcworldid() const {
  return srcworldid_;
}
inline void CMessageWorldAnswerNotify::set_srcworldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  srcworldid_ = value;
}

// optional uint32 DesWorldID = 3;
inline bool CMessageWorldAnswerNotify::has_desworldid() const {
  return _has_bit(2);
}
inline void CMessageWorldAnswerNotify::clear_desworldid() {
  desworldid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerNotify::desworldid() const {
  return desworldid_;
}
inline void CMessageWorldAnswerNotify::set_desworldid(::google::protobuf::uint32 value) {
  _set_bit(2);
  desworldid_ = value;
}

// optional uint32 OpType = 4;
inline bool CMessageWorldAnswerNotify::has_optype() const {
  return _has_bit(3);
}
inline void CMessageWorldAnswerNotify::clear_optype() {
  optype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerNotify::optype() const {
  return optype_;
}
inline void CMessageWorldAnswerNotify::set_optype(::google::protobuf::uint32 value) {
  _set_bit(3);
  optype_ = value;
}

// optional uint32 Answer = 5;
inline bool CMessageWorldAnswerNotify::has_answer() const {
  return _has_bit(4);
}
inline void CMessageWorldAnswerNotify::clear_answer() {
  answer_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageWorldAnswerNotify::answer() const {
  return answer_;
}
inline void CMessageWorldAnswerNotify::set_answer(::google::protobuf::uint32 value) {
  _set_bit(4);
  answer_ = value;
}

// -------------------------------------------------------------------

// CMessageWorldQuestNotify

// optional uint32 CharID = 1;
inline bool CMessageWorldQuestNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldQuestNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldQuestNotify::charid() const {
  return charid_;
}
inline void CMessageWorldQuestNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WorldID = 2;
inline bool CMessageWorldQuestNotify::has_worldid() const {
  return _has_bit(1);
}
inline void CMessageWorldQuestNotify::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldQuestNotify::worldid() const {
  return worldid_;
}
inline void CMessageWorldQuestNotify::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  worldid_ = value;
}

// optional uint32 OpType = 3;
inline bool CMessageWorldQuestNotify::has_optype() const {
  return _has_bit(2);
}
inline void CMessageWorldQuestNotify::clear_optype() {
  optype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWorldQuestNotify::optype() const {
  return optype_;
}
inline void CMessageWorldQuestNotify::set_optype(::google::protobuf::uint32 value) {
  _set_bit(2);
  optype_ = value;
}

// -------------------------------------------------------------------

// CMessageWorldResultNotify

// optional uint32 CharID = 1;
inline bool CMessageWorldResultNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldResultNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldResultNotify::charid() const {
  return charid_;
}
inline void CMessageWorldResultNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageWorldResultNotify::has_result() const {
  return _has_bit(1);
}
inline void CMessageWorldResultNotify::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldResultNotify::result() const {
  return result_;
}
inline void CMessageWorldResultNotify::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 SrcWorldID = 3;
inline bool CMessageWorldResultNotify::has_srcworldid() const {
  return _has_bit(2);
}
inline void CMessageWorldResultNotify::clear_srcworldid() {
  srcworldid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWorldResultNotify::srcworldid() const {
  return srcworldid_;
}
inline void CMessageWorldResultNotify::set_srcworldid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srcworldid_ = value;
}

// optional uint32 DesWorldID = 4;
inline bool CMessageWorldResultNotify::has_desworldid() const {
  return _has_bit(3);
}
inline void CMessageWorldResultNotify::clear_desworldid() {
  desworldid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWorldResultNotify::desworldid() const {
  return desworldid_;
}
inline void CMessageWorldResultNotify::set_desworldid(::google::protobuf::uint32 value) {
  _set_bit(3);
  desworldid_ = value;
}

// optional uint32 OpType = 5;
inline bool CMessageWorldResultNotify::has_optype() const {
  return _has_bit(4);
}
inline void CMessageWorldResultNotify::clear_optype() {
  optype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageWorldResultNotify::optype() const {
  return optype_;
}
inline void CMessageWorldResultNotify::set_optype(::google::protobuf::uint32 value) {
  _set_bit(4);
  optype_ = value;
}

// -------------------------------------------------------------------

// CWorldStatusData

// optional uint32 WorldID = 1;
inline bool CWorldStatusData::has_worldid() const {
  return _has_bit(0);
}
inline void CWorldStatusData::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CWorldStatusData::worldid() const {
  return worldid_;
}
inline void CWorldStatusData::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 Friends = 2;
inline bool CWorldStatusData::has_friends() const {
  return _has_bit(1);
}
inline void CWorldStatusData::clear_friends() {
  friends_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CWorldStatusData::friends() const {
  return friends_;
}
inline void CWorldStatusData::set_friends(::google::protobuf::uint32 value) {
  _set_bit(1);
  friends_ = value;
}

// optional uint32 Nation = 3;
inline bool CWorldStatusData::has_nation() const {
  return _has_bit(2);
}
inline void CWorldStatusData::clear_nation() {
  nation_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CWorldStatusData::nation() const {
  return nation_;
}
inline void CWorldStatusData::set_nation(::google::protobuf::uint32 value) {
  _set_bit(2);
  nation_ = value;
}

// optional uint32 KingID = 4;
inline bool CWorldStatusData::has_kingid() const {
  return _has_bit(3);
}
inline void CWorldStatusData::clear_kingid() {
  kingid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CWorldStatusData::kingid() const {
  return kingid_;
}
inline void CWorldStatusData::set_kingid(::google::protobuf::uint32 value) {
  _set_bit(3);
  kingid_ = value;
}

// optional string KingName = 5;
inline bool CWorldStatusData::has_kingname() const {
  return _has_bit(4);
}
inline void CWorldStatusData::clear_kingname() {
  if (kingname_ != &_default_kingname_) {
    kingname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& CWorldStatusData::kingname() const {
  return *kingname_;
}
inline void CWorldStatusData::set_kingname(const ::std::string& value) {
  _set_bit(4);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CWorldStatusData::set_kingname(const char* value) {
  _set_bit(4);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CWorldStatusData::set_kingname(const char* value, size_t size) {
  _set_bit(4);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CWorldStatusData::mutable_kingname() {
  _set_bit(4);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  return kingname_;
}

// optional uint32 CorpsID = 6;
inline bool CWorldStatusData::has_corpsid() const {
  return _has_bit(5);
}
inline void CWorldStatusData::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CWorldStatusData::corpsid() const {
  return corpsid_;
}
inline void CWorldStatusData::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(5);
  corpsid_ = value;
}

// optional string CorpsName = 7;
inline bool CWorldStatusData::has_corpsname() const {
  return _has_bit(6);
}
inline void CWorldStatusData::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CWorldStatusData::corpsname() const {
  return *corpsname_;
}
inline void CWorldStatusData::set_corpsname(const ::std::string& value) {
  _set_bit(6);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CWorldStatusData::set_corpsname(const char* value) {
  _set_bit(6);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void CWorldStatusData::set_corpsname(const char* value, size_t size) {
  _set_bit(6);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CWorldStatusData::mutable_corpsname() {
  _set_bit(6);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 UnionID = 8;
inline bool CWorldStatusData::has_unionid() const {
  return _has_bit(7);
}
inline void CWorldStatusData::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CWorldStatusData::unionid() const {
  return unionid_;
}
inline void CWorldStatusData::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(7);
  unionid_ = value;
}

// optional string UnionName = 9;
inline bool CWorldStatusData::has_unionname() const {
  return _has_bit(8);
}
inline void CWorldStatusData::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& CWorldStatusData::unionname() const {
  return *unionname_;
}
inline void CWorldStatusData::set_unionname(const ::std::string& value) {
  _set_bit(8);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CWorldStatusData::set_unionname(const char* value) {
  _set_bit(8);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void CWorldStatusData::set_unionname(const char* value, size_t size) {
  _set_bit(8);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CWorldStatusData::mutable_unionname() {
  _set_bit(8);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// -------------------------------------------------------------------

// CMessageWorldInfoRequest

// optional uint32 CharID = 1;
inline bool CMessageWorldInfoRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldInfoRequest::charid() const {
  return charid_;
}
inline void CMessageWorldInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WorldID = 2;
inline bool CMessageWorldInfoRequest::has_worldid() const {
  return _has_bit(1);
}
inline void CMessageWorldInfoRequest::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldInfoRequest::worldid() const {
  return worldid_;
}
inline void CMessageWorldInfoRequest::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  worldid_ = value;
}

// -------------------------------------------------------------------

// CMessageWorldInfoResponse

// optional uint32 CharID = 1;
inline bool CMessageWorldInfoResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageWorldInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWorldInfoResponse::charid() const {
  return charid_;
}
inline void CMessageWorldInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageWorldInfoResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageWorldInfoResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWorldInfoResponse::result() const {
  return result_;
}
inline void CMessageWorldInfoResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 WorldID = 3;
inline bool CMessageWorldInfoResponse::has_worldid() const {
  return _has_bit(2);
}
inline void CMessageWorldInfoResponse::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWorldInfoResponse::worldid() const {
  return worldid_;
}
inline void CMessageWorldInfoResponse::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(2);
  worldid_ = value;
}

// repeated .CWorldStatusData WorldData = 4;
inline int CMessageWorldInfoResponse::worlddata_size() const {
  return worlddata_.size();
}
inline void CMessageWorldInfoResponse::clear_worlddata() {
  worlddata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::CWorldStatusData >&
CMessageWorldInfoResponse::worlddata() const {
  return worlddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::CWorldStatusData >*
CMessageWorldInfoResponse::mutable_worlddata() {
  return &worlddata_;
}
inline const ::CWorldStatusData& CMessageWorldInfoResponse::worlddata(int index) const {
  return worlddata_.Get(index);
}
inline ::CWorldStatusData* CMessageWorldInfoResponse::mutable_worlddata(int index) {
  return worlddata_.Mutable(index);
}
inline ::CWorldStatusData* CMessageWorldInfoResponse::add_worlddata() {
  return worlddata_.Add();
}

// -------------------------------------------------------------------

// CMessageOfficialChangeNotify

// optional uint32 CharID = 1;
inline bool CMessageOfficialChangeNotify::has_charid() const {
  return _has_bit(0);
}
inline void CMessageOfficialChangeNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageOfficialChangeNotify::charid() const {
  return charid_;
}
inline void CMessageOfficialChangeNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional string CharName = 2;
inline bool CMessageOfficialChangeNotify::has_charname() const {
  return _has_bit(1);
}
inline void CMessageOfficialChangeNotify::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageOfficialChangeNotify::charname() const {
  return *charname_;
}
inline void CMessageOfficialChangeNotify::set_charname(const ::std::string& value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageOfficialChangeNotify::set_charname(const char* value) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void CMessageOfficialChangeNotify::set_charname(const char* value, size_t size) {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageOfficialChangeNotify::mutable_charname() {
  _set_bit(1);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 OfficialLevel = 3;
inline bool CMessageOfficialChangeNotify::has_officiallevel() const {
  return _has_bit(2);
}
inline void CMessageOfficialChangeNotify::clear_officiallevel() {
  officiallevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageOfficialChangeNotify::officiallevel() const {
  return officiallevel_;
}
inline void CMessageOfficialChangeNotify::set_officiallevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  officiallevel_ = value;
}

// optional uint32 OfficialOrder = 4;
inline bool CMessageOfficialChangeNotify::has_officialorder() const {
  return _has_bit(3);
}
inline void CMessageOfficialChangeNotify::clear_officialorder() {
  officialorder_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageOfficialChangeNotify::officialorder() const {
  return officialorder_;
}
inline void CMessageOfficialChangeNotify::set_officialorder(::google::protobuf::uint32 value) {
  _set_bit(3);
  officialorder_ = value;
}

// optional uint32 CountryID = 5;
inline bool CMessageOfficialChangeNotify::has_countryid() const {
  return _has_bit(4);
}
inline void CMessageOfficialChangeNotify::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageOfficialChangeNotify::countryid() const {
  return countryid_;
}
inline void CMessageOfficialChangeNotify::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(4);
  countryid_ = value;
}

// optional uint32 Type = 6;
inline bool CMessageOfficialChangeNotify::has_type() const {
  return _has_bit(5);
}
inline void CMessageOfficialChangeNotify::clear_type() {
  type_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageOfficialChangeNotify::type() const {
  return type_;
}
inline void CMessageOfficialChangeNotify::set_type(::google::protobuf::uint32 value) {
  _set_bit(5);
  type_ = value;
}

// optional uint32 WorldID = 7;
inline bool CMessageOfficialChangeNotify::has_worldid() const {
  return _has_bit(6);
}
inline void CMessageOfficialChangeNotify::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageOfficialChangeNotify::worldid() const {
  return worldid_;
}
inline void CMessageOfficialChangeNotify::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(6);
  worldid_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerGSInfoRequest

// repeated uint32 SrcCharID = 1;
inline int CMessagePlayerGSInfoRequest::srccharid_size() const {
  return srccharid_.size();
}
inline void CMessagePlayerGSInfoRequest::clear_srccharid() {
  srccharid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessagePlayerGSInfoRequest::srccharid() const {
  return srccharid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessagePlayerGSInfoRequest::mutable_srccharid() {
  return &srccharid_;
}
inline ::google::protobuf::uint32 CMessagePlayerGSInfoRequest::srccharid(int index) const {
  return srccharid_.Get(index);
}
inline void CMessagePlayerGSInfoRequest::set_srccharid(int index, ::google::protobuf::uint32 value) {
  srccharid_.Set(index, value);
}
inline void CMessagePlayerGSInfoRequest::add_srccharid(::google::protobuf::uint32 value) {
  srccharid_.Add(value);
}

// repeated uint32 InfoCharID = 2;
inline int CMessagePlayerGSInfoRequest::infocharid_size() const {
  return infocharid_.size();
}
inline void CMessagePlayerGSInfoRequest::clear_infocharid() {
  infocharid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessagePlayerGSInfoRequest::infocharid() const {
  return infocharid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessagePlayerGSInfoRequest::mutable_infocharid() {
  return &infocharid_;
}
inline ::google::protobuf::uint32 CMessagePlayerGSInfoRequest::infocharid(int index) const {
  return infocharid_.Get(index);
}
inline void CMessagePlayerGSInfoRequest::set_infocharid(int index, ::google::protobuf::uint32 value) {
  infocharid_.Set(index, value);
}
inline void CMessagePlayerGSInfoRequest::add_infocharid(::google::protobuf::uint32 value) {
  infocharid_.Add(value);
}

// -------------------------------------------------------------------

// PlayerGSInfo

// optional uint32 CharID = 1;
inline bool PlayerGSInfo::has_charid() const {
  return _has_bit(0);
}
inline void PlayerGSInfo::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PlayerGSInfo::charid() const {
  return charid_;
}
inline void PlayerGSInfo::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 FamilyID = 2;
inline bool PlayerGSInfo::has_familyid() const {
  return _has_bit(1);
}
inline void PlayerGSInfo::clear_familyid() {
  familyid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PlayerGSInfo::familyid() const {
  return familyid_;
}
inline void PlayerGSInfo::set_familyid(::google::protobuf::uint32 value) {
  _set_bit(1);
  familyid_ = value;
}

// optional string FamilyName = 3;
inline bool PlayerGSInfo::has_familyname() const {
  return _has_bit(2);
}
inline void PlayerGSInfo::clear_familyname() {
  if (familyname_ != &_default_familyname_) {
    familyname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PlayerGSInfo::familyname() const {
  return *familyname_;
}
inline void PlayerGSInfo::set_familyname(const ::std::string& value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void PlayerGSInfo::set_familyname(const char* value) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void PlayerGSInfo::set_familyname(const char* value, size_t size) {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerGSInfo::mutable_familyname() {
  _set_bit(2);
  if (familyname_ == &_default_familyname_) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}

// optional uint32 FamilyHead = 4;
inline bool PlayerGSInfo::has_familyhead() const {
  return _has_bit(3);
}
inline void PlayerGSInfo::clear_familyhead() {
  familyhead_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PlayerGSInfo::familyhead() const {
  return familyhead_;
}
inline void PlayerGSInfo::set_familyhead(::google::protobuf::uint32 value) {
  _set_bit(3);
  familyhead_ = value;
}

// optional uint32 CorpsID = 5;
inline bool PlayerGSInfo::has_corpsid() const {
  return _has_bit(4);
}
inline void PlayerGSInfo::clear_corpsid() {
  corpsid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PlayerGSInfo::corpsid() const {
  return corpsid_;
}
inline void PlayerGSInfo::set_corpsid(::google::protobuf::uint32 value) {
  _set_bit(4);
  corpsid_ = value;
}

// optional string CorpsName = 6;
inline bool PlayerGSInfo::has_corpsname() const {
  return _has_bit(5);
}
inline void PlayerGSInfo::clear_corpsname() {
  if (corpsname_ != &_default_corpsname_) {
    corpsname_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& PlayerGSInfo::corpsname() const {
  return *corpsname_;
}
inline void PlayerGSInfo::set_corpsname(const ::std::string& value) {
  _set_bit(5);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PlayerGSInfo::set_corpsname(const char* value) {
  _set_bit(5);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(value);
}
inline void PlayerGSInfo::set_corpsname(const char* value, size_t size) {
  _set_bit(5);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  corpsname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerGSInfo::mutable_corpsname() {
  _set_bit(5);
  if (corpsname_ == &_default_corpsname_) {
    corpsname_ = new ::std::string;
  }
  return corpsname_;
}

// optional uint32 CorpsHead = 7;
inline bool PlayerGSInfo::has_corpshead() const {
  return _has_bit(6);
}
inline void PlayerGSInfo::clear_corpshead() {
  corpshead_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PlayerGSInfo::corpshead() const {
  return corpshead_;
}
inline void PlayerGSInfo::set_corpshead(::google::protobuf::uint32 value) {
  _set_bit(6);
  corpshead_ = value;
}

// optional uint32 UnionID = 8;
inline bool PlayerGSInfo::has_unionid() const {
  return _has_bit(7);
}
inline void PlayerGSInfo::clear_unionid() {
  unionid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PlayerGSInfo::unionid() const {
  return unionid_;
}
inline void PlayerGSInfo::set_unionid(::google::protobuf::uint32 value) {
  _set_bit(7);
  unionid_ = value;
}

// optional string UnionName = 9;
inline bool PlayerGSInfo::has_unionname() const {
  return _has_bit(8);
}
inline void PlayerGSInfo::clear_unionname() {
  if (unionname_ != &_default_unionname_) {
    unionname_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& PlayerGSInfo::unionname() const {
  return *unionname_;
}
inline void PlayerGSInfo::set_unionname(const ::std::string& value) {
  _set_bit(8);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void PlayerGSInfo::set_unionname(const char* value) {
  _set_bit(8);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void PlayerGSInfo::set_unionname(const char* value, size_t size) {
  _set_bit(8);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerGSInfo::mutable_unionname() {
  _set_bit(8);
  if (unionname_ == &_default_unionname_) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}

// optional uint32 UnionHead = 10;
inline bool PlayerGSInfo::has_unionhead() const {
  return _has_bit(9);
}
inline void PlayerGSInfo::clear_unionhead() {
  unionhead_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PlayerGSInfo::unionhead() const {
  return unionhead_;
}
inline void PlayerGSInfo::set_unionhead(::google::protobuf::uint32 value) {
  _set_bit(9);
  unionhead_ = value;
}

// optional uint32 CountryID = 11;
inline bool PlayerGSInfo::has_countryid() const {
  return _has_bit(10);
}
inline void PlayerGSInfo::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PlayerGSInfo::countryid() const {
  return countryid_;
}
inline void PlayerGSInfo::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(10);
  countryid_ = value;
}

// optional uint32 OfficialID = 12;
inline bool PlayerGSInfo::has_officialid() const {
  return _has_bit(11);
}
inline void PlayerGSInfo::clear_officialid() {
  officialid_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PlayerGSInfo::officialid() const {
  return officialid_;
}
inline void PlayerGSInfo::set_officialid(::google::protobuf::uint32 value) {
  _set_bit(11);
  officialid_ = value;
}

// optional uint32 KingID = 13;
inline bool PlayerGSInfo::has_kingid() const {
  return _has_bit(12);
}
inline void PlayerGSInfo::clear_kingid() {
  kingid_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PlayerGSInfo::kingid() const {
  return kingid_;
}
inline void PlayerGSInfo::set_kingid(::google::protobuf::uint32 value) {
  _set_bit(12);
  kingid_ = value;
}

// -------------------------------------------------------------------

// WorldStatusInfo

// optional uint32 SrcWorldID = 1;
inline bool WorldStatusInfo::has_srcworldid() const {
  return _has_bit(0);
}
inline void WorldStatusInfo::clear_srcworldid() {
  srcworldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 WorldStatusInfo::srcworldid() const {
  return srcworldid_;
}
inline void WorldStatusInfo::set_srcworldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srcworldid_ = value;
}

// optional uint32 DesWorldID = 2;
inline bool WorldStatusInfo::has_desworldid() const {
  return _has_bit(1);
}
inline void WorldStatusInfo::clear_desworldid() {
  desworldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 WorldStatusInfo::desworldid() const {
  return desworldid_;
}
inline void WorldStatusInfo::set_desworldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  desworldid_ = value;
}

// optional uint32 Status = 3;
inline bool WorldStatusInfo::has_status() const {
  return _has_bit(2);
}
inline void WorldStatusInfo::clear_status() {
  status_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 WorldStatusInfo::status() const {
  return status_;
}
inline void WorldStatusInfo::set_status(::google::protobuf::uint32 value) {
  _set_bit(2);
  status_ = value;
}

// -------------------------------------------------------------------

// GTAndLWInfo

// optional uint32 SrcWorldID = 1;
inline bool GTAndLWInfo::has_srcworldid() const {
  return _has_bit(0);
}
inline void GTAndLWInfo::clear_srcworldid() {
  srcworldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 GTAndLWInfo::srcworldid() const {
  return srcworldid_;
}
inline void GTAndLWInfo::set_srcworldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srcworldid_ = value;
}

// optional uint32 DesWorldID = 2;
inline bool GTAndLWInfo::has_desworldid() const {
  return _has_bit(1);
}
inline void GTAndLWInfo::clear_desworldid() {
  desworldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 GTAndLWInfo::desworldid() const {
  return desworldid_;
}
inline void GTAndLWInfo::set_desworldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  desworldid_ = value;
}

// optional uint32 TargetTime = 3;
inline bool GTAndLWInfo::has_targettime() const {
  return _has_bit(2);
}
inline void GTAndLWInfo::clear_targettime() {
  targettime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 GTAndLWInfo::targettime() const {
  return targettime_;
}
inline void GTAndLWInfo::set_targettime(::google::protobuf::uint32 value) {
  _set_bit(2);
  targettime_ = value;
}

// -------------------------------------------------------------------

// CMessagePlayerGSInfoResponse

// optional uint32 SrcCharID = 1;
inline bool CMessagePlayerGSInfoResponse::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessagePlayerGSInfoResponse::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerGSInfoResponse::srccharid() const {
  return srccharid_;
}
inline void CMessagePlayerGSInfoResponse::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// repeated .PlayerGSInfo PlayerInfo = 2;
inline int CMessagePlayerGSInfoResponse::playerinfo_size() const {
  return playerinfo_.size();
}
inline void CMessagePlayerGSInfoResponse::clear_playerinfo() {
  playerinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo >&
CMessagePlayerGSInfoResponse::playerinfo() const {
  return playerinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo >*
CMessagePlayerGSInfoResponse::mutable_playerinfo() {
  return &playerinfo_;
}
inline const ::PlayerGSInfo& CMessagePlayerGSInfoResponse::playerinfo(int index) const {
  return playerinfo_.Get(index);
}
inline ::PlayerGSInfo* CMessagePlayerGSInfoResponse::mutable_playerinfo(int index) {
  return playerinfo_.Mutable(index);
}
inline ::PlayerGSInfo* CMessagePlayerGSInfoResponse::add_playerinfo() {
  return playerinfo_.Add();
}

// repeated .WorldStatusInfo WorldInfo = 3;
inline int CMessagePlayerGSInfoResponse::worldinfo_size() const {
  return worldinfo_.size();
}
inline void CMessagePlayerGSInfoResponse::clear_worldinfo() {
  worldinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo >&
CMessagePlayerGSInfoResponse::worldinfo() const {
  return worldinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo >*
CMessagePlayerGSInfoResponse::mutable_worldinfo() {
  return &worldinfo_;
}
inline const ::WorldStatusInfo& CMessagePlayerGSInfoResponse::worldinfo(int index) const {
  return worldinfo_.Get(index);
}
inline ::WorldStatusInfo* CMessagePlayerGSInfoResponse::mutable_worldinfo(int index) {
  return worldinfo_.Mutable(index);
}
inline ::WorldStatusInfo* CMessagePlayerGSInfoResponse::add_worldinfo() {
  return worldinfo_.Add();
}

// -------------------------------------------------------------------

// CMessagePlayerGSInfoNotify

// optional uint32 SrcCharID = 1;
inline bool CMessagePlayerGSInfoNotify::has_srccharid() const {
  return _has_bit(0);
}
inline void CMessagePlayerGSInfoNotify::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePlayerGSInfoNotify::srccharid() const {
  return srccharid_;
}
inline void CMessagePlayerGSInfoNotify::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srccharid_ = value;
}

// repeated .PlayerGSInfo PlayerInfo = 2;
inline int CMessagePlayerGSInfoNotify::playerinfo_size() const {
  return playerinfo_.size();
}
inline void CMessagePlayerGSInfoNotify::clear_playerinfo() {
  playerinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo >&
CMessagePlayerGSInfoNotify::playerinfo() const {
  return playerinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerGSInfo >*
CMessagePlayerGSInfoNotify::mutable_playerinfo() {
  return &playerinfo_;
}
inline const ::PlayerGSInfo& CMessagePlayerGSInfoNotify::playerinfo(int index) const {
  return playerinfo_.Get(index);
}
inline ::PlayerGSInfo* CMessagePlayerGSInfoNotify::mutable_playerinfo(int index) {
  return playerinfo_.Mutable(index);
}
inline ::PlayerGSInfo* CMessagePlayerGSInfoNotify::add_playerinfo() {
  return playerinfo_.Add();
}

// repeated .WorldStatusInfo WorldInfo = 3;
inline int CMessagePlayerGSInfoNotify::worldinfo_size() const {
  return worldinfo_.size();
}
inline void CMessagePlayerGSInfoNotify::clear_worldinfo() {
  worldinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo >&
CMessagePlayerGSInfoNotify::worldinfo() const {
  return worldinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::WorldStatusInfo >*
CMessagePlayerGSInfoNotify::mutable_worldinfo() {
  return &worldinfo_;
}
inline const ::WorldStatusInfo& CMessagePlayerGSInfoNotify::worldinfo(int index) const {
  return worldinfo_.Get(index);
}
inline ::WorldStatusInfo* CMessagePlayerGSInfoNotify::mutable_worldinfo(int index) {
  return worldinfo_.Mutable(index);
}
inline ::WorldStatusInfo* CMessagePlayerGSInfoNotify::add_worldinfo() {
  return worldinfo_.Add();
}

// optional uint32 WarState = 4;
inline bool CMessagePlayerGSInfoNotify::has_warstate() const {
  return _has_bit(3);
}
inline void CMessagePlayerGSInfoNotify::clear_warstate() {
  warstate_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePlayerGSInfoNotify::warstate() const {
  return warstate_;
}
inline void CMessagePlayerGSInfoNotify::set_warstate(::google::protobuf::uint32 value) {
  _set_bit(3);
  warstate_ = value;
}

// optional uint32 WinWorld = 5;
inline bool CMessagePlayerGSInfoNotify::has_winworld() const {
  return _has_bit(4);
}
inline void CMessagePlayerGSInfoNotify::clear_winworld() {
  winworld_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePlayerGSInfoNotify::winworld() const {
  return winworld_;
}
inline void CMessagePlayerGSInfoNotify::set_winworld(::google::protobuf::uint32 value) {
  _set_bit(4);
  winworld_ = value;
}

// optional uint32 TaxRate = 6;
inline bool CMessagePlayerGSInfoNotify::has_taxrate() const {
  return _has_bit(5);
}
inline void CMessagePlayerGSInfoNotify::clear_taxrate() {
  taxrate_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessagePlayerGSInfoNotify::taxrate() const {
  return taxrate_;
}
inline void CMessagePlayerGSInfoNotify::set_taxrate(::google::protobuf::uint32 value) {
  _set_bit(5);
  taxrate_ = value;
}

// repeated .GTAndLWInfo GTInfo = 7;
inline int CMessagePlayerGSInfoNotify::gtinfo_size() const {
  return gtinfo_.size();
}
inline void CMessagePlayerGSInfoNotify::clear_gtinfo() {
  gtinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >&
CMessagePlayerGSInfoNotify::gtinfo() const {
  return gtinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >*
CMessagePlayerGSInfoNotify::mutable_gtinfo() {
  return &gtinfo_;
}
inline const ::GTAndLWInfo& CMessagePlayerGSInfoNotify::gtinfo(int index) const {
  return gtinfo_.Get(index);
}
inline ::GTAndLWInfo* CMessagePlayerGSInfoNotify::mutable_gtinfo(int index) {
  return gtinfo_.Mutable(index);
}
inline ::GTAndLWInfo* CMessagePlayerGSInfoNotify::add_gtinfo() {
  return gtinfo_.Add();
}

// repeated .GTAndLWInfo LWInfo = 8;
inline int CMessagePlayerGSInfoNotify::lwinfo_size() const {
  return lwinfo_.size();
}
inline void CMessagePlayerGSInfoNotify::clear_lwinfo() {
  lwinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >&
CMessagePlayerGSInfoNotify::lwinfo() const {
  return lwinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GTAndLWInfo >*
CMessagePlayerGSInfoNotify::mutable_lwinfo() {
  return &lwinfo_;
}
inline const ::GTAndLWInfo& CMessagePlayerGSInfoNotify::lwinfo(int index) const {
  return lwinfo_.Get(index);
}
inline ::GTAndLWInfo* CMessagePlayerGSInfoNotify::mutable_lwinfo(int index) {
  return lwinfo_.Mutable(index);
}
inline ::GTAndLWInfo* CMessagePlayerGSInfoNotify::add_lwinfo() {
  return lwinfo_.Add();
}

// -------------------------------------------------------------------

// CMessageKingChangeNotify

// optional uint32 WorldID = 1;
inline bool CMessageKingChangeNotify::has_worldid() const {
  return _has_bit(0);
}
inline void CMessageKingChangeNotify::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageKingChangeNotify::worldid() const {
  return worldid_;
}
inline void CMessageKingChangeNotify::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 CountryID = 2;
inline bool CMessageKingChangeNotify::has_countryid() const {
  return _has_bit(1);
}
inline void CMessageKingChangeNotify::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageKingChangeNotify::countryid() const {
  return countryid_;
}
inline void CMessageKingChangeNotify::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(1);
  countryid_ = value;
}

// optional uint32 KingID = 3;
inline bool CMessageKingChangeNotify::has_kingid() const {
  return _has_bit(2);
}
inline void CMessageKingChangeNotify::clear_kingid() {
  kingid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageKingChangeNotify::kingid() const {
  return kingid_;
}
inline void CMessageKingChangeNotify::set_kingid(::google::protobuf::uint32 value) {
  _set_bit(2);
  kingid_ = value;
}

// optional string KingName = 4;
inline bool CMessageKingChangeNotify::has_kingname() const {
  return _has_bit(3);
}
inline void CMessageKingChangeNotify::clear_kingname() {
  if (kingname_ != &_default_kingname_) {
    kingname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageKingChangeNotify::kingname() const {
  return *kingname_;
}
inline void CMessageKingChangeNotify::set_kingname(const ::std::string& value) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageKingChangeNotify::set_kingname(const char* value) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageKingChangeNotify::set_kingname(const char* value, size_t size) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageKingChangeNotify::mutable_kingname() {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  return kingname_;
}

// -------------------------------------------------------------------

// CMessageSummonPlayerNotify

// optional string SrcName = 1;
inline bool CMessageSummonPlayerNotify::has_srcname() const {
  return _has_bit(0);
}
inline void CMessageSummonPlayerNotify::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageSummonPlayerNotify::srcname() const {
  return *srcname_;
}
inline void CMessageSummonPlayerNotify::set_srcname(const ::std::string& value) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageSummonPlayerNotify::set_srcname(const char* value) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageSummonPlayerNotify::set_srcname(const char* value, size_t size) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageSummonPlayerNotify::mutable_srcname() {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// optional uint32 LineID = 2;
inline bool CMessageSummonPlayerNotify::has_lineid() const {
  return _has_bit(1);
}
inline void CMessageSummonPlayerNotify::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSummonPlayerNotify::lineid() const {
  return lineid_;
}
inline void CMessageSummonPlayerNotify::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 MapID = 3;
inline bool CMessageSummonPlayerNotify::has_mapid() const {
  return _has_bit(2);
}
inline void CMessageSummonPlayerNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSummonPlayerNotify::mapid() const {
  return mapid_;
}
inline void CMessageSummonPlayerNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 PosX = 4;
inline bool CMessageSummonPlayerNotify::has_posx() const {
  return _has_bit(3);
}
inline void CMessageSummonPlayerNotify::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageSummonPlayerNotify::posx() const {
  return posx_;
}
inline void CMessageSummonPlayerNotify::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool CMessageSummonPlayerNotify::has_posy() const {
  return _has_bit(4);
}
inline void CMessageSummonPlayerNotify::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageSummonPlayerNotify::posy() const {
  return posy_;
}
inline void CMessageSummonPlayerNotify::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional uint32 TokenID = 6;
inline bool CMessageSummonPlayerNotify::has_tokenid() const {
  return _has_bit(5);
}
inline void CMessageSummonPlayerNotify::clear_tokenid() {
  tokenid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageSummonPlayerNotify::tokenid() const {
  return tokenid_;
}
inline void CMessageSummonPlayerNotify::set_tokenid(::google::protobuf::uint32 value) {
  _set_bit(5);
  tokenid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetAwardRequest

// optional uint32 NPCEntityID = 1;
inline bool CMessageGetAwardRequest::has_npcentityid() const {
  return _has_bit(0);
}
inline void CMessageGetAwardRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetAwardRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageGetAwardRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcentityid_ = value;
}

// optional uint32 AwardID = 2;
inline bool CMessageGetAwardRequest::has_awardid() const {
  return _has_bit(1);
}
inline void CMessageGetAwardRequest::clear_awardid() {
  awardid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetAwardRequest::awardid() const {
  return awardid_;
}
inline void CMessageGetAwardRequest::set_awardid(::google::protobuf::uint32 value) {
  _set_bit(1);
  awardid_ = value;
}

// optional uint32 TempID = 3;
inline bool CMessageGetAwardRequest::has_tempid() const {
  return _has_bit(2);
}
inline void CMessageGetAwardRequest::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetAwardRequest::tempid() const {
  return tempid_;
}
inline void CMessageGetAwardRequest::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(2);
  tempid_ = value;
}

// optional uint32 Type = 4;
inline bool CMessageGetAwardRequest::has_type() const {
  return _has_bit(3);
}
inline void CMessageGetAwardRequest::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetAwardRequest::type() const {
  return type_;
}
inline void CMessageGetAwardRequest::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// CMessageGetAwardResponse

// optional uint32 Result = 1;
inline bool CMessageGetAwardResponse::has_result() const {
  return _has_bit(0);
}
inline void CMessageGetAwardResponse::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetAwardResponse::result() const {
  return result_;
}
inline void CMessageGetAwardResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// optional uint32 AwardID = 2;
inline bool CMessageGetAwardResponse::has_awardid() const {
  return _has_bit(1);
}
inline void CMessageGetAwardResponse::clear_awardid() {
  awardid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetAwardResponse::awardid() const {
  return awardid_;
}
inline void CMessageGetAwardResponse::set_awardid(::google::protobuf::uint32 value) {
  _set_bit(1);
  awardid_ = value;
}

// optional uint32 TempID = 3;
inline bool CMessageGetAwardResponse::has_tempid() const {
  return _has_bit(2);
}
inline void CMessageGetAwardResponse::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetAwardResponse::tempid() const {
  return tempid_;
}
inline void CMessageGetAwardResponse::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(2);
  tempid_ = value;
}

// optional uint32 Type = 4;
inline bool CMessageGetAwardResponse::has_type() const {
  return _has_bit(3);
}
inline void CMessageGetAwardResponse::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetAwardResponse::type() const {
  return type_;
}
inline void CMessageGetAwardResponse::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// CMessageStartCountryRedstoneNotify

// optional string ManagerName = 1;
inline bool CMessageStartCountryRedstoneNotify::has_managername() const {
  return _has_bit(0);
}
inline void CMessageStartCountryRedstoneNotify::clear_managername() {
  if (managername_ != &_default_managername_) {
    managername_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageStartCountryRedstoneNotify::managername() const {
  return *managername_;
}
inline void CMessageStartCountryRedstoneNotify::set_managername(const ::std::string& value) {
  _set_bit(0);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(value);
}
inline void CMessageStartCountryRedstoneNotify::set_managername(const char* value) {
  _set_bit(0);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(value);
}
inline void CMessageStartCountryRedstoneNotify::set_managername(const char* value, size_t size) {
  _set_bit(0);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  managername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageStartCountryRedstoneNotify::mutable_managername() {
  _set_bit(0);
  if (managername_ == &_default_managername_) {
    managername_ = new ::std::string;
  }
  return managername_;
}

// optional uint32 ManagerID = 2;
inline bool CMessageStartCountryRedstoneNotify::has_managerid() const {
  return _has_bit(1);
}
inline void CMessageStartCountryRedstoneNotify::clear_managerid() {
  managerid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageStartCountryRedstoneNotify::managerid() const {
  return managerid_;
}
inline void CMessageStartCountryRedstoneNotify::set_managerid(::google::protobuf::uint32 value) {
  _set_bit(1);
  managerid_ = value;
}

// optional uint32 LineID = 3;
inline bool CMessageStartCountryRedstoneNotify::has_lineid() const {
  return _has_bit(2);
}
inline void CMessageStartCountryRedstoneNotify::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageStartCountryRedstoneNotify::lineid() const {
  return lineid_;
}
inline void CMessageStartCountryRedstoneNotify::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(2);
  lineid_ = value;
}

// optional uint32 MapID = 4;
inline bool CMessageStartCountryRedstoneNotify::has_mapid() const {
  return _has_bit(3);
}
inline void CMessageStartCountryRedstoneNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageStartCountryRedstoneNotify::mapid() const {
  return mapid_;
}
inline void CMessageStartCountryRedstoneNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  mapid_ = value;
}

// optional uint32 PosX = 5;
inline bool CMessageStartCountryRedstoneNotify::has_posx() const {
  return _has_bit(4);
}
inline void CMessageStartCountryRedstoneNotify::clear_posx() {
  posx_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageStartCountryRedstoneNotify::posx() const {
  return posx_;
}
inline void CMessageStartCountryRedstoneNotify::set_posx(::google::protobuf::uint32 value) {
  _set_bit(4);
  posx_ = value;
}

// optional uint32 PosY = 6;
inline bool CMessageStartCountryRedstoneNotify::has_posy() const {
  return _has_bit(5);
}
inline void CMessageStartCountryRedstoneNotify::clear_posy() {
  posy_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageStartCountryRedstoneNotify::posy() const {
  return posy_;
}
inline void CMessageStartCountryRedstoneNotify::set_posy(::google::protobuf::uint32 value) {
  _set_bit(5);
  posy_ = value;
}

// optional uint32 CountryID = 7;
inline bool CMessageStartCountryRedstoneNotify::has_countryid() const {
  return _has_bit(6);
}
inline void CMessageStartCountryRedstoneNotify::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 CMessageStartCountryRedstoneNotify::countryid() const {
  return countryid_;
}
inline void CMessageStartCountryRedstoneNotify::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(6);
  countryid_ = value;
}

// optional uint32 RedstoneType = 8;
inline bool CMessageStartCountryRedstoneNotify::has_redstonetype() const {
  return _has_bit(7);
}
inline void CMessageStartCountryRedstoneNotify::clear_redstonetype() {
  redstonetype_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 CMessageStartCountryRedstoneNotify::redstonetype() const {
  return redstonetype_;
}
inline void CMessageStartCountryRedstoneNotify::set_redstonetype(::google::protobuf::uint32 value) {
  _set_bit(7);
  redstonetype_ = value;
}

// -------------------------------------------------------------------

// TeleportData

// optional uint32 LineID = 1;
inline bool TeleportData::has_lineid() const {
  return _has_bit(0);
}
inline void TeleportData::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 TeleportData::lineid() const {
  return lineid_;
}
inline void TeleportData::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(0);
  lineid_ = value;
}

// optional uint32 MapID = 2;
inline bool TeleportData::has_mapid() const {
  return _has_bit(1);
}
inline void TeleportData::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 TeleportData::mapid() const {
  return mapid_;
}
inline void TeleportData::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 PosX = 3;
inline bool TeleportData::has_posx() const {
  return _has_bit(2);
}
inline void TeleportData::clear_posx() {
  posx_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 TeleportData::posx() const {
  return posx_;
}
inline void TeleportData::set_posx(::google::protobuf::uint32 value) {
  _set_bit(2);
  posx_ = value;
}

// optional uint32 PosY = 4;
inline bool TeleportData::has_posy() const {
  return _has_bit(3);
}
inline void TeleportData::clear_posy() {
  posy_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 TeleportData::posy() const {
  return posy_;
}
inline void TeleportData::set_posy(::google::protobuf::uint32 value) {
  _set_bit(3);
  posy_ = value;
}

// optional uint32 TokenID = 5;
inline bool TeleportData::has_tokenid() const {
  return _has_bit(4);
}
inline void TeleportData::clear_tokenid() {
  tokenid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 TeleportData::tokenid() const {
  return tokenid_;
}
inline void TeleportData::set_tokenid(::google::protobuf::uint32 value) {
  _set_bit(4);
  tokenid_ = value;
}

// -------------------------------------------------------------------

// CMessageSubmitWarRequest

// optional uint32 CharID = 1;
inline bool CMessageSubmitWarRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageSubmitWarRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSubmitWarRequest::charid() const {
  return charid_;
}
inline void CMessageSubmitWarRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 NPCEntityID = 2;
inline bool CMessageSubmitWarRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageSubmitWarRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSubmitWarRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageSubmitWarRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// optional uint32 WarSerial = 3;
inline bool CMessageSubmitWarRequest::has_warserial() const {
  return _has_bit(2);
}
inline void CMessageSubmitWarRequest::clear_warserial() {
  warserial_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSubmitWarRequest::warserial() const {
  return warserial_;
}
inline void CMessageSubmitWarRequest::set_warserial(::google::protobuf::uint32 value) {
  _set_bit(2);
  warserial_ = value;
}

// -------------------------------------------------------------------

// CMessageSubmitWarResponse

// optional uint32 CharID = 1;
inline bool CMessageSubmitWarResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageSubmitWarResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageSubmitWarResponse::charid() const {
  return charid_;
}
inline void CMessageSubmitWarResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageSubmitWarResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageSubmitWarResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageSubmitWarResponse::result() const {
  return result_;
}
inline void CMessageSubmitWarResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 WarSerial = 3;
inline bool CMessageSubmitWarResponse::has_warserial() const {
  return _has_bit(2);
}
inline void CMessageSubmitWarResponse::clear_warserial() {
  warserial_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageSubmitWarResponse::warserial() const {
  return warserial_;
}
inline void CMessageSubmitWarResponse::set_warserial(::google::protobuf::uint32 value) {
  _set_bit(2);
  warserial_ = value;
}

// -------------------------------------------------------------------

// CMessageEnterWarRequest

// optional uint32 CharID = 1;
inline bool CMessageEnterWarRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageEnterWarRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEnterWarRequest::charid() const {
  return charid_;
}
inline void CMessageEnterWarRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WarID = 2;
inline bool CMessageEnterWarRequest::has_warid() const {
  return _has_bit(1);
}
inline void CMessageEnterWarRequest::clear_warid() {
  warid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageEnterWarRequest::warid() const {
  return warid_;
}
inline void CMessageEnterWarRequest::set_warid(::google::protobuf::uint32 value) {
  _set_bit(1);
  warid_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageEnterWarRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageEnterWarRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageEnterWarRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageEnterWarRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// optional uint32 WarSerial = 4;
inline bool CMessageEnterWarRequest::has_warserial() const {
  return _has_bit(3);
}
inline void CMessageEnterWarRequest::clear_warserial() {
  warserial_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageEnterWarRequest::warserial() const {
  return warserial_;
}
inline void CMessageEnterWarRequest::set_warserial(::google::protobuf::uint32 value) {
  _set_bit(3);
  warserial_ = value;
}

// -------------------------------------------------------------------

// CMessageEnterWarResponse

// optional uint32 CharID = 1;
inline bool CMessageEnterWarResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageEnterWarResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageEnterWarResponse::charid() const {
  return charid_;
}
inline void CMessageEnterWarResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WarID = 2;
inline bool CMessageEnterWarResponse::has_warid() const {
  return _has_bit(1);
}
inline void CMessageEnterWarResponse::clear_warid() {
  warid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageEnterWarResponse::warid() const {
  return warid_;
}
inline void CMessageEnterWarResponse::set_warid(::google::protobuf::uint32 value) {
  _set_bit(1);
  warid_ = value;
}

// optional uint32 Result = 3;
inline bool CMessageEnterWarResponse::has_result() const {
  return _has_bit(2);
}
inline void CMessageEnterWarResponse::clear_result() {
  result_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageEnterWarResponse::result() const {
  return result_;
}
inline void CMessageEnterWarResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(2);
  result_ = value;
}

// optional uint32 PosX = 4;
inline bool CMessageEnterWarResponse::has_posx() const {
  return _has_bit(3);
}
inline void CMessageEnterWarResponse::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageEnterWarResponse::posx() const {
  return posx_;
}
inline void CMessageEnterWarResponse::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool CMessageEnterWarResponse::has_posy() const {
  return _has_bit(4);
}
inline void CMessageEnterWarResponse::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageEnterWarResponse::posy() const {
  return posy_;
}
inline void CMessageEnterWarResponse::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarCampRequest

// optional uint32 CharID = 1;
inline bool CMessageQueryWarCampRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarCampRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarCampRequest::charid() const {
  return charid_;
}
inline void CMessageQueryWarCampRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 NPCEntityID = 2;
inline bool CMessageQueryWarCampRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageQueryWarCampRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryWarCampRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageQueryWarCampRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarCampResponse

// optional uint32 CharID = 1;
inline bool CMessageQueryWarCampResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarCampResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarCampResponse::charid() const {
  return charid_;
}
inline void CMessageQueryWarCampResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// repeated uint32 WorldID = 2;
inline int CMessageQueryWarCampResponse::worldid_size() const {
  return worldid_.size();
}
inline void CMessageQueryWarCampResponse::clear_worldid() {
  worldid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageQueryWarCampResponse::worldid() const {
  return worldid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageQueryWarCampResponse::mutable_worldid() {
  return &worldid_;
}
inline ::google::protobuf::uint32 CMessageQueryWarCampResponse::worldid(int index) const {
  return worldid_.Get(index);
}
inline void CMessageQueryWarCampResponse::set_worldid(int index, ::google::protobuf::uint32 value) {
  worldid_.Set(index, value);
}
inline void CMessageQueryWarCampResponse::add_worldid(::google::protobuf::uint32 value) {
  worldid_.Add(value);
}

// repeated uint32 CampID = 3;
inline int CMessageQueryWarCampResponse::campid_size() const {
  return campid_.size();
}
inline void CMessageQueryWarCampResponse::clear_campid() {
  campid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageQueryWarCampResponse::campid() const {
  return campid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageQueryWarCampResponse::mutable_campid() {
  return &campid_;
}
inline ::google::protobuf::uint32 CMessageQueryWarCampResponse::campid(int index) const {
  return campid_.Get(index);
}
inline void CMessageQueryWarCampResponse::set_campid(int index, ::google::protobuf::uint32 value) {
  campid_.Set(index, value);
}
inline void CMessageQueryWarCampResponse::add_campid(::google::protobuf::uint32 value) {
  campid_.Add(value);
}

// repeated uint32 Money = 4;
inline int CMessageQueryWarCampResponse::money_size() const {
  return money_.size();
}
inline void CMessageQueryWarCampResponse::clear_money() {
  money_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageQueryWarCampResponse::money() const {
  return money_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageQueryWarCampResponse::mutable_money() {
  return &money_;
}
inline ::google::protobuf::uint32 CMessageQueryWarCampResponse::money(int index) const {
  return money_.Get(index);
}
inline void CMessageQueryWarCampResponse::set_money(int index, ::google::protobuf::uint32 value) {
  money_.Set(index, value);
}
inline void CMessageQueryWarCampResponse::add_money(::google::protobuf::uint32 value) {
  money_.Add(value);
}

// -------------------------------------------------------------------

// CMessageQueryWarNumRequest

// optional uint32 CharID = 1;
inline bool CMessageQueryWarNumRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarNumRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarNumRequest::charid() const {
  return charid_;
}
inline void CMessageQueryWarNumRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 NPCEntityID = 2;
inline bool CMessageQueryWarNumRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageQueryWarNumRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryWarNumRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageQueryWarNumRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// WarNumData

// optional uint32 WorldID = 1;
inline bool WarNumData::has_worldid() const {
  return _has_bit(0);
}
inline void WarNumData::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 WarNumData::worldid() const {
  return worldid_;
}
inline void WarNumData::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 CampID = 2;
inline bool WarNumData::has_campid() const {
  return _has_bit(1);
}
inline void WarNumData::clear_campid() {
  campid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 WarNumData::campid() const {
  return campid_;
}
inline void WarNumData::set_campid(::google::protobuf::uint32 value) {
  _set_bit(1);
  campid_ = value;
}

// optional uint32 CurrentNum = 3;
inline bool WarNumData::has_currentnum() const {
  return _has_bit(2);
}
inline void WarNumData::clear_currentnum() {
  currentnum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 WarNumData::currentnum() const {
  return currentnum_;
}
inline void WarNumData::set_currentnum(::google::protobuf::uint32 value) {
  _set_bit(2);
  currentnum_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarNumResponse

// optional uint32 CharID = 1;
inline bool CMessageQueryWarNumResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarNumResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarNumResponse::charid() const {
  return charid_;
}
inline void CMessageQueryWarNumResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// repeated .WarNumData WarData = 2;
inline int CMessageQueryWarNumResponse::wardata_size() const {
  return wardata_.size();
}
inline void CMessageQueryWarNumResponse::clear_wardata() {
  wardata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::WarNumData >&
CMessageQueryWarNumResponse::wardata() const {
  return wardata_;
}
inline ::google::protobuf::RepeatedPtrField< ::WarNumData >*
CMessageQueryWarNumResponse::mutable_wardata() {
  return &wardata_;
}
inline const ::WarNumData& CMessageQueryWarNumResponse::wardata(int index) const {
  return wardata_.Get(index);
}
inline ::WarNumData* CMessageQueryWarNumResponse::mutable_wardata(int index) {
  return wardata_.Mutable(index);
}
inline ::WarNumData* CMessageQueryWarNumResponse::add_wardata() {
  return wardata_.Add();
}

// optional uint32 CampID = 3;
inline bool CMessageQueryWarNumResponse::has_campid() const {
  return _has_bit(2);
}
inline void CMessageQueryWarNumResponse::clear_campid() {
  campid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryWarNumResponse::campid() const {
  return campid_;
}
inline void CMessageQueryWarNumResponse::set_campid(::google::protobuf::uint32 value) {
  _set_bit(2);
  campid_ = value;
}

// -------------------------------------------------------------------

// WarDetailInfo

// optional uint32 WorldID = 1;
inline bool WarDetailInfo::has_worldid() const {
  return _has_bit(0);
}
inline void WarDetailInfo::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 WarDetailInfo::worldid() const {
  return worldid_;
}
inline void WarDetailInfo::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 CurrentNum = 2;
inline bool WarDetailInfo::has_currentnum() const {
  return _has_bit(1);
}
inline void WarDetailInfo::clear_currentnum() {
  currentnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 WarDetailInfo::currentnum() const {
  return currentnum_;
}
inline void WarDetailInfo::set_currentnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  currentnum_ = value;
}

// optional uint32 Power = 3;
inline bool WarDetailInfo::has_power() const {
  return _has_bit(2);
}
inline void WarDetailInfo::clear_power() {
  power_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 WarDetailInfo::power() const {
  return power_;
}
inline void WarDetailInfo::set_power(::google::protobuf::uint32 value) {
  _set_bit(2);
  power_ = value;
}

// optional uint32 Flag = 4;
inline bool WarDetailInfo::has_flag() const {
  return _has_bit(3);
}
inline void WarDetailInfo::clear_flag() {
  flag_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 WarDetailInfo::flag() const {
  return flag_;
}
inline void WarDetailInfo::set_flag(::google::protobuf::uint32 value) {
  _set_bit(3);
  flag_ = value;
}

// optional uint32 Resource = 5;
inline bool WarDetailInfo::has_resource() const {
  return _has_bit(4);
}
inline void WarDetailInfo::clear_resource() {
  resource_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 WarDetailInfo::resource() const {
  return resource_;
}
inline void WarDetailInfo::set_resource(::google::protobuf::uint32 value) {
  _set_bit(4);
  resource_ = value;
}

// optional uint32 Kill = 6;
inline bool WarDetailInfo::has_kill() const {
  return _has_bit(5);
}
inline void WarDetailInfo::clear_kill() {
  kill_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 WarDetailInfo::kill() const {
  return kill_;
}
inline void WarDetailInfo::set_kill(::google::protobuf::uint32 value) {
  _set_bit(5);
  kill_ = value;
}

// optional uint32 CampID = 7;
inline bool WarDetailInfo::has_campid() const {
  return _has_bit(6);
}
inline void WarDetailInfo::clear_campid() {
  campid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 WarDetailInfo::campid() const {
  return campid_;
}
inline void WarDetailInfo::set_campid(::google::protobuf::uint32 value) {
  _set_bit(6);
  campid_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarInfoRequest

// optional uint32 CharID = 1;
inline bool CMessageQueryWarInfoRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarInfoRequest::charid() const {
  return charid_;
}
inline void CMessageQueryWarInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// repeated uint32 CampID = 2;
inline int CMessageQueryWarInfoRequest::campid_size() const {
  return campid_.size();
}
inline void CMessageQueryWarInfoRequest::clear_campid() {
  campid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageQueryWarInfoRequest::campid() const {
  return campid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageQueryWarInfoRequest::mutable_campid() {
  return &campid_;
}
inline ::google::protobuf::uint32 CMessageQueryWarInfoRequest::campid(int index) const {
  return campid_.Get(index);
}
inline void CMessageQueryWarInfoRequest::set_campid(int index, ::google::protobuf::uint32 value) {
  campid_.Set(index, value);
}
inline void CMessageQueryWarInfoRequest::add_campid(::google::protobuf::uint32 value) {
  campid_.Add(value);
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageQueryWarInfoRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageQueryWarInfoRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryWarInfoRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageQueryWarInfoRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarInfoResponse

// optional uint32 CharID = 1;
inline bool CMessageQueryWarInfoResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarInfoResponse::charid() const {
  return charid_;
}
inline void CMessageQueryWarInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// repeated .WarDetailInfo CampInfo = 2;
inline int CMessageQueryWarInfoResponse::campinfo_size() const {
  return campinfo_.size();
}
inline void CMessageQueryWarInfoResponse::clear_campinfo() {
  campinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::WarDetailInfo >&
CMessageQueryWarInfoResponse::campinfo() const {
  return campinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::WarDetailInfo >*
CMessageQueryWarInfoResponse::mutable_campinfo() {
  return &campinfo_;
}
inline const ::WarDetailInfo& CMessageQueryWarInfoResponse::campinfo(int index) const {
  return campinfo_.Get(index);
}
inline ::WarDetailInfo* CMessageQueryWarInfoResponse::mutable_campinfo(int index) {
  return campinfo_.Mutable(index);
}
inline ::WarDetailInfo* CMessageQueryWarInfoResponse::add_campinfo() {
  return campinfo_.Add();
}

// -------------------------------------------------------------------

// WarRankInfo

// optional uint32 WorldID = 1;
inline bool WarRankInfo::has_worldid() const {
  return _has_bit(0);
}
inline void WarRankInfo::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 WarRankInfo::worldid() const {
  return worldid_;
}
inline void WarRankInfo::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 MetierID = 2;
inline bool WarRankInfo::has_metierid() const {
  return _has_bit(1);
}
inline void WarRankInfo::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 WarRankInfo::metierid() const {
  return metierid_;
}
inline void WarRankInfo::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(1);
  metierid_ = value;
}

// optional uint32 Kill = 3;
inline bool WarRankInfo::has_kill() const {
  return _has_bit(2);
}
inline void WarRankInfo::clear_kill() {
  kill_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 WarRankInfo::kill() const {
  return kill_;
}
inline void WarRankInfo::set_kill(::google::protobuf::uint32 value) {
  _set_bit(2);
  kill_ = value;
}

// optional string CharName = 4;
inline bool WarRankInfo::has_charname() const {
  return _has_bit(3);
}
inline void WarRankInfo::clear_charname() {
  if (charname_ != &_default_charname_) {
    charname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& WarRankInfo::charname() const {
  return *charname_;
}
inline void WarRankInfo::set_charname(const ::std::string& value) {
  _set_bit(3);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void WarRankInfo::set_charname(const char* value) {
  _set_bit(3);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
}
inline void WarRankInfo::set_charname(const char* value, size_t size) {
  _set_bit(3);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WarRankInfo::mutable_charname() {
  _set_bit(3);
  if (charname_ == &_default_charname_) {
    charname_ = new ::std::string;
  }
  return charname_;
}

// optional uint32 Rank = 5;
inline bool WarRankInfo::has_rank() const {
  return _has_bit(4);
}
inline void WarRankInfo::clear_rank() {
  rank_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 WarRankInfo::rank() const {
  return rank_;
}
inline void WarRankInfo::set_rank(::google::protobuf::uint32 value) {
  _set_bit(4);
  rank_ = value;
}

// optional uint32 Honor = 6;
inline bool WarRankInfo::has_honor() const {
  return _has_bit(5);
}
inline void WarRankInfo::clear_honor() {
  honor_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 WarRankInfo::honor() const {
  return honor_;
}
inline void WarRankInfo::set_honor(::google::protobuf::uint32 value) {
  _set_bit(5);
  honor_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarRankRequest

// optional uint32 CharID = 1;
inline bool CMessageQueryWarRankRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarRankRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarRankRequest::charid() const {
  return charid_;
}
inline void CMessageQueryWarRankRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 NPCEntityID = 2;
inline bool CMessageQueryWarRankRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageQueryWarRankRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryWarRankRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageQueryWarRankRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarRankResponse

// optional uint32 CharID = 1;
inline bool CMessageQueryWarRankResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarRankResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarRankResponse::charid() const {
  return charid_;
}
inline void CMessageQueryWarRankResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// repeated .WarRankInfo RankInfo = 2;
inline int CMessageQueryWarRankResponse::rankinfo_size() const {
  return rankinfo_.size();
}
inline void CMessageQueryWarRankResponse::clear_rankinfo() {
  rankinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::WarRankInfo >&
CMessageQueryWarRankResponse::rankinfo() const {
  return rankinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::WarRankInfo >*
CMessageQueryWarRankResponse::mutable_rankinfo() {
  return &rankinfo_;
}
inline const ::WarRankInfo& CMessageQueryWarRankResponse::rankinfo(int index) const {
  return rankinfo_.Get(index);
}
inline ::WarRankInfo* CMessageQueryWarRankResponse::mutable_rankinfo(int index) {
  return rankinfo_.Mutable(index);
}
inline ::WarRankInfo* CMessageQueryWarRankResponse::add_rankinfo() {
  return rankinfo_.Add();
}

// -------------------------------------------------------------------

// CMessageWarSourceNotify

// optional uint32 WorldID = 1;
inline bool CMessageWarSourceNotify::has_worldid() const {
  return _has_bit(0);
}
inline void CMessageWarSourceNotify::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWarSourceNotify::worldid() const {
  return worldid_;
}
inline void CMessageWarSourceNotify::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  worldid_ = value;
}

// optional uint32 MapID = 2;
inline bool CMessageWarSourceNotify::has_mapid() const {
  return _has_bit(1);
}
inline void CMessageWarSourceNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWarSourceNotify::mapid() const {
  return mapid_;
}
inline void CMessageWarSourceNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 Resource = 3;
inline bool CMessageWarSourceNotify::has_resource() const {
  return _has_bit(2);
}
inline void CMessageWarSourceNotify::clear_resource() {
  resource_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWarSourceNotify::resource() const {
  return resource_;
}
inline void CMessageWarSourceNotify::set_resource(::google::protobuf::uint32 value) {
  _set_bit(2);
  resource_ = value;
}

// optional uint32 CharID = 4;
inline bool CMessageWarSourceNotify::has_charid() const {
  return _has_bit(3);
}
inline void CMessageWarSourceNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWarSourceNotify::charid() const {
  return charid_;
}
inline void CMessageWarSourceNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(3);
  charid_ = value;
}

// optional uint32 SourceNum = 5;
inline bool CMessageWarSourceNotify::has_sourcenum() const {
  return _has_bit(4);
}
inline void CMessageWarSourceNotify::clear_sourcenum() {
  sourcenum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageWarSourceNotify::sourcenum() const {
  return sourcenum_;
}
inline void CMessageWarSourceNotify::set_sourcenum(::google::protobuf::uint32 value) {
  _set_bit(4);
  sourcenum_ = value;
}

// -------------------------------------------------------------------

// CMessageBidCampRequest

// optional uint32 CharID = 1;
inline bool CMessageBidCampRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBidCampRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBidCampRequest::charid() const {
  return charid_;
}
inline void CMessageBidCampRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 NPCEntityID = 2;
inline bool CMessageBidCampRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageBidCampRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBidCampRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageBidCampRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageBidCampRequest::has_money() const {
  return _has_bit(2);
}
inline void CMessageBidCampRequest::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBidCampRequest::money() const {
  return money_;
}
inline void CMessageBidCampRequest::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional uint32 CampID = 4;
inline bool CMessageBidCampRequest::has_campid() const {
  return _has_bit(3);
}
inline void CMessageBidCampRequest::clear_campid() {
  campid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBidCampRequest::campid() const {
  return campid_;
}
inline void CMessageBidCampRequest::set_campid(::google::protobuf::uint32 value) {
  _set_bit(3);
  campid_ = value;
}

// -------------------------------------------------------------------

// CMessageBidCampResponse

// optional uint32 CharID = 1;
inline bool CMessageBidCampResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageBidCampResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBidCampResponse::charid() const {
  return charid_;
}
inline void CMessageBidCampResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageBidCampResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageBidCampResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBidCampResponse::result() const {
  return result_;
}
inline void CMessageBidCampResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageBidCampResponse::has_money() const {
  return _has_bit(2);
}
inline void CMessageBidCampResponse::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBidCampResponse::money() const {
  return money_;
}
inline void CMessageBidCampResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional uint32 CampID = 4;
inline bool CMessageBidCampResponse::has_campid() const {
  return _has_bit(3);
}
inline void CMessageBidCampResponse::clear_campid() {
  campid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBidCampResponse::campid() const {
  return campid_;
}
inline void CMessageBidCampResponse::set_campid(::google::protobuf::uint32 value) {
  _set_bit(3);
  campid_ = value;
}

// -------------------------------------------------------------------

// CMessageCampBidInfoRequest

// optional uint32 CharID = 1;
inline bool CMessageCampBidInfoRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCampBidInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCampBidInfoRequest::charid() const {
  return charid_;
}
inline void CMessageCampBidInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 NPCEntityID = 2;
inline bool CMessageCampBidInfoRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageCampBidInfoRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCampBidInfoRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageCampBidInfoRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageCampBidInfoResponse

// optional uint32 CharID = 1;
inline bool CMessageCampBidInfoResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCampBidInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCampBidInfoResponse::charid() const {
  return charid_;
}
inline void CMessageCampBidInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageCampBidInfoResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageCampBidInfoResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCampBidInfoResponse::result() const {
  return result_;
}
inline void CMessageCampBidInfoResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageCampBidInfoResponse::has_money() const {
  return _has_bit(2);
}
inline void CMessageCampBidInfoResponse::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageCampBidInfoResponse::money() const {
  return money_;
}
inline void CMessageCampBidInfoResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional uint32 CampID = 4;
inline bool CMessageCampBidInfoResponse::has_campid() const {
  return _has_bit(3);
}
inline void CMessageCampBidInfoResponse::clear_campid() {
  campid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageCampBidInfoResponse::campid() const {
  return campid_;
}
inline void CMessageCampBidInfoResponse::set_campid(::google::protobuf::uint32 value) {
  _set_bit(3);
  campid_ = value;
}

// -------------------------------------------------------------------

// CMessageCampResInfoRequest

// optional uint32 CharID = 1;
inline bool CMessageCampResInfoRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCampResInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCampResInfoRequest::charid() const {
  return charid_;
}
inline void CMessageCampResInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 NPCEntityID = 2;
inline bool CMessageCampResInfoRequest::has_npcentityid() const {
  return _has_bit(1);
}
inline void CMessageCampResInfoRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCampResInfoRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageCampResInfoRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageCampResInfoResponse

// optional uint32 CharID = 1;
inline bool CMessageCampResInfoResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageCampResInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCampResInfoResponse::charid() const {
  return charid_;
}
inline void CMessageCampResInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageCampResInfoResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageCampResInfoResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCampResInfoResponse::result() const {
  return result_;
}
inline void CMessageCampResInfoResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// repeated uint32 WorldID = 3;
inline int CMessageCampResInfoResponse::worldid_size() const {
  return worldid_.size();
}
inline void CMessageCampResInfoResponse::clear_worldid() {
  worldid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCampResInfoResponse::worldid() const {
  return worldid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCampResInfoResponse::mutable_worldid() {
  return &worldid_;
}
inline ::google::protobuf::uint32 CMessageCampResInfoResponse::worldid(int index) const {
  return worldid_.Get(index);
}
inline void CMessageCampResInfoResponse::set_worldid(int index, ::google::protobuf::uint32 value) {
  worldid_.Set(index, value);
}
inline void CMessageCampResInfoResponse::add_worldid(::google::protobuf::uint32 value) {
  worldid_.Add(value);
}

// repeated uint32 CampID = 4;
inline int CMessageCampResInfoResponse::campid_size() const {
  return campid_.size();
}
inline void CMessageCampResInfoResponse::clear_campid() {
  campid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCampResInfoResponse::campid() const {
  return campid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCampResInfoResponse::mutable_campid() {
  return &campid_;
}
inline ::google::protobuf::uint32 CMessageCampResInfoResponse::campid(int index) const {
  return campid_.Get(index);
}
inline void CMessageCampResInfoResponse::set_campid(int index, ::google::protobuf::uint32 value) {
  campid_.Set(index, value);
}
inline void CMessageCampResInfoResponse::add_campid(::google::protobuf::uint32 value) {
  campid_.Add(value);
}

// repeated uint32 Money = 5;
inline int CMessageCampResInfoResponse::money_size() const {
  return money_.size();
}
inline void CMessageCampResInfoResponse::clear_money() {
  money_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageCampResInfoResponse::money() const {
  return money_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageCampResInfoResponse::mutable_money() {
  return &money_;
}
inline ::google::protobuf::uint32 CMessageCampResInfoResponse::money(int index) const {
  return money_.Get(index);
}
inline void CMessageCampResInfoResponse::set_money(int index, ::google::protobuf::uint32 value) {
  money_.Set(index, value);
}
inline void CMessageCampResInfoResponse::add_money(::google::protobuf::uint32 value) {
  money_.Add(value);
}

// -------------------------------------------------------------------

// CMessageGetWarAwardRequest

// optional uint32 CharID = 1;
inline bool CMessageGetWarAwardRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGetWarAwardRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetWarAwardRequest::charid() const {
  return charid_;
}
inline void CMessageGetWarAwardRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WarSerial = 2;
inline bool CMessageGetWarAwardRequest::has_warserial() const {
  return _has_bit(1);
}
inline void CMessageGetWarAwardRequest::clear_warserial() {
  warserial_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetWarAwardRequest::warserial() const {
  return warserial_;
}
inline void CMessageGetWarAwardRequest::set_warserial(::google::protobuf::uint32 value) {
  _set_bit(1);
  warserial_ = value;
}

// -------------------------------------------------------------------

// CMessageGetWarAwardResponse

// optional uint32 CharID = 1;
inline bool CMessageGetWarAwardResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGetWarAwardResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetWarAwardResponse::charid() const {
  return charid_;
}
inline void CMessageGetWarAwardResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageGetWarAwardResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageGetWarAwardResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetWarAwardResponse::result() const {
  return result_;
}
inline void CMessageGetWarAwardResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 Money = 3;
inline bool CMessageGetWarAwardResponse::has_money() const {
  return _has_bit(2);
}
inline void CMessageGetWarAwardResponse::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetWarAwardResponse::money() const {
  return money_;
}
inline void CMessageGetWarAwardResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional uint32 Rank = 4;
inline bool CMessageGetWarAwardResponse::has_rank() const {
  return _has_bit(3);
}
inline void CMessageGetWarAwardResponse::clear_rank() {
  rank_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetWarAwardResponse::rank() const {
  return rank_;
}
inline void CMessageGetWarAwardResponse::set_rank(::google::protobuf::uint32 value) {
  _set_bit(3);
  rank_ = value;
}

// optional uint32 ValidTime = 5;
inline bool CMessageGetWarAwardResponse::has_validtime() const {
  return _has_bit(4);
}
inline void CMessageGetWarAwardResponse::clear_validtime() {
  validtime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageGetWarAwardResponse::validtime() const {
  return validtime_;
}
inline void CMessageGetWarAwardResponse::set_validtime(::google::protobuf::uint32 value) {
  _set_bit(4);
  validtime_ = value;
}

// -------------------------------------------------------------------

// NPCWarInfo

// optional uint32 PosX = 1;
inline bool NPCWarInfo::has_posx() const {
  return _has_bit(0);
}
inline void NPCWarInfo::clear_posx() {
  posx_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 NPCWarInfo::posx() const {
  return posx_;
}
inline void NPCWarInfo::set_posx(::google::protobuf::uint32 value) {
  _set_bit(0);
  posx_ = value;
}

// optional uint32 PosY = 2;
inline bool NPCWarInfo::has_posy() const {
  return _has_bit(1);
}
inline void NPCWarInfo::clear_posy() {
  posy_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 NPCWarInfo::posy() const {
  return posy_;
}
inline void NPCWarInfo::set_posy(::google::protobuf::uint32 value) {
  _set_bit(1);
  posy_ = value;
}

// optional uint32 WorldID = 3;
inline bool NPCWarInfo::has_worldid() const {
  return _has_bit(2);
}
inline void NPCWarInfo::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 NPCWarInfo::worldid() const {
  return worldid_;
}
inline void NPCWarInfo::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(2);
  worldid_ = value;
}

// optional uint32 TempID = 4;
inline bool NPCWarInfo::has_tempid() const {
  return _has_bit(3);
}
inline void NPCWarInfo::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 NPCWarInfo::tempid() const {
  return tempid_;
}
inline void NPCWarInfo::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(3);
  tempid_ = value;
}

// -------------------------------------------------------------------

// CMessageWarInfoNotify

// optional uint32 MapID = 1;
inline bool CMessageWarInfoNotify::has_mapid() const {
  return _has_bit(0);
}
inline void CMessageWarInfoNotify::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWarInfoNotify::mapid() const {
  return mapid_;
}
inline void CMessageWarInfoNotify::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// repeated .NPCWarInfo WarInfo = 2;
inline int CMessageWarInfoNotify::warinfo_size() const {
  return warinfo_.size();
}
inline void CMessageWarInfoNotify::clear_warinfo() {
  warinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::NPCWarInfo >&
CMessageWarInfoNotify::warinfo() const {
  return warinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::NPCWarInfo >*
CMessageWarInfoNotify::mutable_warinfo() {
  return &warinfo_;
}
inline const ::NPCWarInfo& CMessageWarInfoNotify::warinfo(int index) const {
  return warinfo_.Get(index);
}
inline ::NPCWarInfo* CMessageWarInfoNotify::mutable_warinfo(int index) {
  return warinfo_.Mutable(index);
}
inline ::NPCWarInfo* CMessageWarInfoNotify::add_warinfo() {
  return warinfo_.Add();
}

// optional uint32 StoneID = 3;
inline bool CMessageWarInfoNotify::has_stoneid() const {
  return _has_bit(2);
}
inline void CMessageWarInfoNotify::clear_stoneid() {
  stoneid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWarInfoNotify::stoneid() const {
  return stoneid_;
}
inline void CMessageWarInfoNotify::set_stoneid(::google::protobuf::uint32 value) {
  _set_bit(2);
  stoneid_ = value;
}

// optional uint32 StoneX = 4;
inline bool CMessageWarInfoNotify::has_stonex() const {
  return _has_bit(3);
}
inline void CMessageWarInfoNotify::clear_stonex() {
  stonex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageWarInfoNotify::stonex() const {
  return stonex_;
}
inline void CMessageWarInfoNotify::set_stonex(::google::protobuf::uint32 value) {
  _set_bit(3);
  stonex_ = value;
}

// optional uint32 StoneY = 5;
inline bool CMessageWarInfoNotify::has_stoney() const {
  return _has_bit(4);
}
inline void CMessageWarInfoNotify::clear_stoney() {
  stoney_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageWarInfoNotify::stoney() const {
  return stoney_;
}
inline void CMessageWarInfoNotify::set_stoney(::google::protobuf::uint32 value) {
  _set_bit(4);
  stoney_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarAwardRequest

// optional uint32 CharID = 1;
inline bool CMessageQueryWarAwardRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarAwardRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarAwardRequest::charid() const {
  return charid_;
}
inline void CMessageQueryWarAwardRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 WarSerial = 2;
inline bool CMessageQueryWarAwardRequest::has_warserial() const {
  return _has_bit(1);
}
inline void CMessageQueryWarAwardRequest::clear_warserial() {
  warserial_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryWarAwardRequest::warserial() const {
  return warserial_;
}
inline void CMessageQueryWarAwardRequest::set_warserial(::google::protobuf::uint32 value) {
  _set_bit(1);
  warserial_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryWarAwardResponse

// optional uint32 CharID = 1;
inline bool CMessageQueryWarAwardResponse::has_charid() const {
  return _has_bit(0);
}
inline void CMessageQueryWarAwardResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryWarAwardResponse::charid() const {
  return charid_;
}
inline void CMessageQueryWarAwardResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageQueryWarAwardResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageQueryWarAwardResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryWarAwardResponse::result() const {
  return result_;
}
inline void CMessageQueryWarAwardResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 WinMoney = 3;
inline bool CMessageQueryWarAwardResponse::has_winmoney() const {
  return _has_bit(2);
}
inline void CMessageQueryWarAwardResponse::clear_winmoney() {
  winmoney_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryWarAwardResponse::winmoney() const {
  return winmoney_;
}
inline void CMessageQueryWarAwardResponse::set_winmoney(::google::protobuf::uint32 value) {
  _set_bit(2);
  winmoney_ = value;
}

// optional uint32 BestMoney = 4;
inline bool CMessageQueryWarAwardResponse::has_bestmoney() const {
  return _has_bit(3);
}
inline void CMessageQueryWarAwardResponse::clear_bestmoney() {
  bestmoney_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageQueryWarAwardResponse::bestmoney() const {
  return bestmoney_;
}
inline void CMessageQueryWarAwardResponse::set_bestmoney(::google::protobuf::uint32 value) {
  _set_bit(3);
  bestmoney_ = value;
}

// repeated uint32 WinItem = 5;
inline int CMessageQueryWarAwardResponse::winitem_size() const {
  return winitem_.size();
}
inline void CMessageQueryWarAwardResponse::clear_winitem() {
  winitem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageQueryWarAwardResponse::winitem() const {
  return winitem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageQueryWarAwardResponse::mutable_winitem() {
  return &winitem_;
}
inline ::google::protobuf::uint32 CMessageQueryWarAwardResponse::winitem(int index) const {
  return winitem_.Get(index);
}
inline void CMessageQueryWarAwardResponse::set_winitem(int index, ::google::protobuf::uint32 value) {
  winitem_.Set(index, value);
}
inline void CMessageQueryWarAwardResponse::add_winitem(::google::protobuf::uint32 value) {
  winitem_.Add(value);
}

// optional uint32 Rank = 6;
inline bool CMessageQueryWarAwardResponse::has_rank() const {
  return _has_bit(5);
}
inline void CMessageQueryWarAwardResponse::clear_rank() {
  rank_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageQueryWarAwardResponse::rank() const {
  return rank_;
}
inline void CMessageQueryWarAwardResponse::set_rank(::google::protobuf::uint32 value) {
  _set_bit(5);
  rank_ = value;
}

// -------------------------------------------------------------------

// CMessageWarHonorNotify

// optional uint32 TotalHonor = 1;
inline bool CMessageWarHonorNotify::has_totalhonor() const {
  return _has_bit(0);
}
inline void CMessageWarHonorNotify::clear_totalhonor() {
  totalhonor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageWarHonorNotify::totalhonor() const {
  return totalhonor_;
}
inline void CMessageWarHonorNotify::set_totalhonor(::google::protobuf::uint32 value) {
  _set_bit(0);
  totalhonor_ = value;
}

// optional uint32 FreeHonor = 2;
inline bool CMessageWarHonorNotify::has_freehonor() const {
  return _has_bit(1);
}
inline void CMessageWarHonorNotify::clear_freehonor() {
  freehonor_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageWarHonorNotify::freehonor() const {
  return freehonor_;
}
inline void CMessageWarHonorNotify::set_freehonor(::google::protobuf::uint32 value) {
  _set_bit(1);
  freehonor_ = value;
}

// optional uint32 WarHonor = 3;
inline bool CMessageWarHonorNotify::has_warhonor() const {
  return _has_bit(2);
}
inline void CMessageWarHonorNotify::clear_warhonor() {
  warhonor_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageWarHonorNotify::warhonor() const {
  return warhonor_;
}
inline void CMessageWarHonorNotify::set_warhonor(::google::protobuf::uint32 value) {
  _set_bit(2);
  warhonor_ = value;
}

// -------------------------------------------------------------------

// CMessageWarCampNotify

// repeated uint32 WorldID = 1;
inline int CMessageWarCampNotify::worldid_size() const {
  return worldid_.size();
}
inline void CMessageWarCampNotify::clear_worldid() {
  worldid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageWarCampNotify::worldid() const {
  return worldid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageWarCampNotify::mutable_worldid() {
  return &worldid_;
}
inline ::google::protobuf::uint32 CMessageWarCampNotify::worldid(int index) const {
  return worldid_.Get(index);
}
inline void CMessageWarCampNotify::set_worldid(int index, ::google::protobuf::uint32 value) {
  worldid_.Set(index, value);
}
inline void CMessageWarCampNotify::add_worldid(::google::protobuf::uint32 value) {
  worldid_.Add(value);
}

// repeated uint32 CampID = 2;
inline int CMessageWarCampNotify::campid_size() const {
  return campid_.size();
}
inline void CMessageWarCampNotify::clear_campid() {
  campid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageWarCampNotify::campid() const {
  return campid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageWarCampNotify::mutable_campid() {
  return &campid_;
}
inline ::google::protobuf::uint32 CMessageWarCampNotify::campid(int index) const {
  return campid_.Get(index);
}
inline void CMessageWarCampNotify::set_campid(int index, ::google::protobuf::uint32 value) {
  campid_.Set(index, value);
}
inline void CMessageWarCampNotify::add_campid(::google::protobuf::uint32 value) {
  campid_.Add(value);
}

// repeated uint32 Money = 3;
inline int CMessageWarCampNotify::money_size() const {
  return money_.size();
}
inline void CMessageWarCampNotify::clear_money() {
  money_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageWarCampNotify::money() const {
  return money_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageWarCampNotify::mutable_money() {
  return &money_;
}
inline ::google::protobuf::uint32 CMessageWarCampNotify::money(int index) const {
  return money_.Get(index);
}
inline void CMessageWarCampNotify::set_money(int index, ::google::protobuf::uint32 value) {
  money_.Set(index, value);
}
inline void CMessageWarCampNotify::add_money(::google::protobuf::uint32 value) {
  money_.Add(value);
}

// repeated uint32 BidCampID = 4;
inline int CMessageWarCampNotify::bidcampid_size() const {
  return bidcampid_.size();
}
inline void CMessageWarCampNotify::clear_bidcampid() {
  bidcampid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageWarCampNotify::bidcampid() const {
  return bidcampid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageWarCampNotify::mutable_bidcampid() {
  return &bidcampid_;
}
inline ::google::protobuf::uint32 CMessageWarCampNotify::bidcampid(int index) const {
  return bidcampid_.Get(index);
}
inline void CMessageWarCampNotify::set_bidcampid(int index, ::google::protobuf::uint32 value) {
  bidcampid_.Set(index, value);
}
inline void CMessageWarCampNotify::add_bidcampid(::google::protobuf::uint32 value) {
  bidcampid_.Add(value);
}

// -------------------------------------------------------------------

// CMessageModifyRateRequest

// optional uint32 RateOrder = 1;
inline bool CMessageModifyRateRequest::has_rateorder() const {
  return _has_bit(0);
}
inline void CMessageModifyRateRequest::clear_rateorder() {
  rateorder_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageModifyRateRequest::rateorder() const {
  return rateorder_;
}
inline void CMessageModifyRateRequest::set_rateorder(::google::protobuf::uint32 value) {
  _set_bit(0);
  rateorder_ = value;
}

// optional uint32 CharID = 2;
inline bool CMessageModifyRateRequest::has_charid() const {
  return _has_bit(1);
}
inline void CMessageModifyRateRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageModifyRateRequest::charid() const {
  return charid_;
}
inline void CMessageModifyRateRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageModifyRateRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageModifyRateRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageModifyRateRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageModifyRateRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageModifyRateResponse

// optional uint32 RateOrder = 1;
inline bool CMessageModifyRateResponse::has_rateorder() const {
  return _has_bit(0);
}
inline void CMessageModifyRateResponse::clear_rateorder() {
  rateorder_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageModifyRateResponse::rateorder() const {
  return rateorder_;
}
inline void CMessageModifyRateResponse::set_rateorder(::google::protobuf::uint32 value) {
  _set_bit(0);
  rateorder_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageModifyRateResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageModifyRateResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageModifyRateResponse::result() const {
  return result_;
}
inline void CMessageModifyRateResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageModifyRateResponse::has_charid() const {
  return _has_bit(2);
}
inline void CMessageModifyRateResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageModifyRateResponse::charid() const {
  return charid_;
}
inline void CMessageModifyRateResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageModifyRateNotify

// optional uint32 Rate = 1;
inline bool CMessageModifyRateNotify::has_rate() const {
  return _has_bit(0);
}
inline void CMessageModifyRateNotify::clear_rate() {
  rate_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageModifyRateNotify::rate() const {
  return rate_;
}
inline void CMessageModifyRateNotify::set_rate(::google::protobuf::uint32 value) {
  _set_bit(0);
  rate_ = value;
}

// optional string Name = 2;
inline bool CMessageModifyRateNotify::has_name() const {
  return _has_bit(1);
}
inline void CMessageModifyRateNotify::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageModifyRateNotify::name() const {
  return *name_;
}
inline void CMessageModifyRateNotify::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageModifyRateNotify::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMessageModifyRateNotify::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageModifyRateNotify::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Real = 3;
inline bool CMessageModifyRateNotify::has_real() const {
  return _has_bit(2);
}
inline void CMessageModifyRateNotify::clear_real() {
  real_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageModifyRateNotify::real() const {
  return real_;
}
inline void CMessageModifyRateNotify::set_real(::google::protobuf::uint32 value) {
  _set_bit(2);
  real_ = value;
}

// optional uint32 WinWorld = 4;
inline bool CMessageModifyRateNotify::has_winworld() const {
  return _has_bit(3);
}
inline void CMessageModifyRateNotify::clear_winworld() {
  winworld_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageModifyRateNotify::winworld() const {
  return winworld_;
}
inline void CMessageModifyRateNotify::set_winworld(::google::protobuf::uint32 value) {
  _set_bit(3);
  winworld_ = value;
}

// -------------------------------------------------------------------

// CMessageGetTaxRequest

// optional uint32 CharID = 1;
inline bool CMessageGetTaxRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessageGetTaxRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetTaxRequest::charid() const {
  return charid_;
}
inline void CMessageGetTaxRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// optional uint32 Query = 2;
inline bool CMessageGetTaxRequest::has_query() const {
  return _has_bit(1);
}
inline void CMessageGetTaxRequest::clear_query() {
  query_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetTaxRequest::query() const {
  return query_;
}
inline void CMessageGetTaxRequest::set_query(::google::protobuf::uint32 value) {
  _set_bit(1);
  query_ = value;
}

// optional uint32 NPCEntityID = 3;
inline bool CMessageGetTaxRequest::has_npcentityid() const {
  return _has_bit(2);
}
inline void CMessageGetTaxRequest::clear_npcentityid() {
  npcentityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetTaxRequest::npcentityid() const {
  return npcentityid_;
}
inline void CMessageGetTaxRequest::set_npcentityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  npcentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageGetTaxResponse

// optional uint32 Money = 1;
inline bool CMessageGetTaxResponse::has_money() const {
  return _has_bit(0);
}
inline void CMessageGetTaxResponse::clear_money() {
  money_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageGetTaxResponse::money() const {
  return money_;
}
inline void CMessageGetTaxResponse::set_money(::google::protobuf::uint32 value) {
  _set_bit(0);
  money_ = value;
}

// optional uint32 Result = 2;
inline bool CMessageGetTaxResponse::has_result() const {
  return _has_bit(1);
}
inline void CMessageGetTaxResponse::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageGetTaxResponse::result() const {
  return result_;
}
inline void CMessageGetTaxResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageGetTaxResponse::has_charid() const {
  return _has_bit(2);
}
inline void CMessageGetTaxResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageGetTaxResponse::charid() const {
  return charid_;
}
inline void CMessageGetTaxResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// optional uint32 Query = 4;
inline bool CMessageGetTaxResponse::has_query() const {
  return _has_bit(3);
}
inline void CMessageGetTaxResponse::clear_query() {
  query_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageGetTaxResponse::query() const {
  return query_;
}
inline void CMessageGetTaxResponse::set_query(::google::protobuf::uint32 value) {
  _set_bit(3);
  query_ = value;
}

// -------------------------------------------------------------------

// CMessageQueryStoneNotify

// optional uint32 StoneID = 1;
inline bool CMessageQueryStoneNotify::has_stoneid() const {
  return _has_bit(0);
}
inline void CMessageQueryStoneNotify::clear_stoneid() {
  stoneid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageQueryStoneNotify::stoneid() const {
  return stoneid_;
}
inline void CMessageQueryStoneNotify::set_stoneid(::google::protobuf::uint32 value) {
  _set_bit(0);
  stoneid_ = value;
}

// optional uint32 StoneX = 2;
inline bool CMessageQueryStoneNotify::has_stonex() const {
  return _has_bit(1);
}
inline void CMessageQueryStoneNotify::clear_stonex() {
  stonex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageQueryStoneNotify::stonex() const {
  return stonex_;
}
inline void CMessageQueryStoneNotify::set_stonex(::google::protobuf::uint32 value) {
  _set_bit(1);
  stonex_ = value;
}

// optional uint32 StoneY = 3;
inline bool CMessageQueryStoneNotify::has_stoney() const {
  return _has_bit(2);
}
inline void CMessageQueryStoneNotify::clear_stoney() {
  stoney_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageQueryStoneNotify::stoney() const {
  return stoney_;
}
inline void CMessageQueryStoneNotify::set_stoney(::google::protobuf::uint32 value) {
  _set_bit(2);
  stoney_ = value;
}

// -------------------------------------------------------------------

// CMessageRefuseSummonRequest

// optional uint32 AsynTeleTokenID = 1;
inline bool CMessageRefuseSummonRequest::has_asynteletokenid() const {
  return _has_bit(0);
}
inline void CMessageRefuseSummonRequest::clear_asynteletokenid() {
  asynteletokenid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageRefuseSummonRequest::asynteletokenid() const {
  return asynteletokenid_;
}
inline void CMessageRefuseSummonRequest::set_asynteletokenid(::google::protobuf::uint32 value) {
  _set_bit(0);
  asynteletokenid_ = value;
}

// optional uint32 SrcCharID = 2;
inline bool CMessageRefuseSummonRequest::has_srccharid() const {
  return _has_bit(1);
}
inline void CMessageRefuseSummonRequest::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageRefuseSummonRequest::srccharid() const {
  return srccharid_;
}
inline void CMessageRefuseSummonRequest::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(1);
  srccharid_ = value;
}

// optional uint32 DesCharID = 3;
inline bool CMessageRefuseSummonRequest::has_descharid() const {
  return _has_bit(2);
}
inline void CMessageRefuseSummonRequest::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRefuseSummonRequest::descharid() const {
  return descharid_;
}
inline void CMessageRefuseSummonRequest::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(2);
  descharid_ = value;
}

// -------------------------------------------------------------------

// CMessageRefuseSummonNotify

// optional string SrcName = 1;
inline bool CMessageRefuseSummonNotify::has_srcname() const {
  return _has_bit(0);
}
inline void CMessageRefuseSummonNotify::clear_srcname() {
  if (srcname_ != &_default_srcname_) {
    srcname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageRefuseSummonNotify::srcname() const {
  return *srcname_;
}
inline void CMessageRefuseSummonNotify::set_srcname(const ::std::string& value) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageRefuseSummonNotify::set_srcname(const char* value) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(value);
}
inline void CMessageRefuseSummonNotify::set_srcname(const char* value, size_t size) {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  srcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRefuseSummonNotify::mutable_srcname() {
  _set_bit(0);
  if (srcname_ == &_default_srcname_) {
    srcname_ = new ::std::string;
  }
  return srcname_;
}

// optional string DesName = 2;
inline bool CMessageRefuseSummonNotify::has_desname() const {
  return _has_bit(1);
}
inline void CMessageRefuseSummonNotify::clear_desname() {
  if (desname_ != &_default_desname_) {
    desname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageRefuseSummonNotify::desname() const {
  return *desname_;
}
inline void CMessageRefuseSummonNotify::set_desname(const ::std::string& value) {
  _set_bit(1);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageRefuseSummonNotify::set_desname(const char* value) {
  _set_bit(1);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(value);
}
inline void CMessageRefuseSummonNotify::set_desname(const char* value, size_t size) {
  _set_bit(1);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  desname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageRefuseSummonNotify::mutable_desname() {
  _set_bit(1);
  if (desname_ == &_default_desname_) {
    desname_ = new ::std::string;
  }
  return desname_;
}

// optional uint32 SrcCharID = 3;
inline bool CMessageRefuseSummonNotify::has_srccharid() const {
  return _has_bit(2);
}
inline void CMessageRefuseSummonNotify::clear_srccharid() {
  srccharid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageRefuseSummonNotify::srccharid() const {
  return srccharid_;
}
inline void CMessageRefuseSummonNotify::set_srccharid(::google::protobuf::uint32 value) {
  _set_bit(2);
  srccharid_ = value;
}

// optional uint32 DesCharID = 4;
inline bool CMessageRefuseSummonNotify::has_descharid() const {
  return _has_bit(3);
}
inline void CMessageRefuseSummonNotify::clear_descharid() {
  descharid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageRefuseSummonNotify::descharid() const {
  return descharid_;
}
inline void CMessageRefuseSummonNotify::set_descharid(::google::protobuf::uint32 value) {
  _set_bit(3);
  descharid_ = value;
}

// -------------------------------------------------------------------

// PBCampWeakForceInfo

// optional uint32 camp_id = 1;
inline bool PBCampWeakForceInfo::has_camp_id() const {
  return _has_bit(0);
}
inline void PBCampWeakForceInfo::clear_camp_id() {
  camp_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCampWeakForceInfo::camp_id() const {
  return camp_id_;
}
inline void PBCampWeakForceInfo::set_camp_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  camp_id_ = value;
}

// optional uint32 level_score = 2;
inline bool PBCampWeakForceInfo::has_level_score() const {
  return _has_bit(1);
}
inline void PBCampWeakForceInfo::clear_level_score() {
  level_score_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBCampWeakForceInfo::level_score() const {
  return level_score_;
}
inline void PBCampWeakForceInfo::set_level_score(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_score_ = value;
}

// optional uint32 honer_score = 3;
inline bool PBCampWeakForceInfo::has_honer_score() const {
  return _has_bit(2);
}
inline void PBCampWeakForceInfo::clear_honer_score() {
  honer_score_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBCampWeakForceInfo::honer_score() const {
  return honer_score_;
}
inline void PBCampWeakForceInfo::set_honer_score(::google::protobuf::uint32 value) {
  _set_bit(2);
  honer_score_ = value;
}

// optional uint32 total_score = 4;
inline bool PBCampWeakForceInfo::has_total_score() const {
  return _has_bit(3);
}
inline void PBCampWeakForceInfo::clear_total_score() {
  total_score_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBCampWeakForceInfo::total_score() const {
  return total_score_;
}
inline void PBCampWeakForceInfo::set_total_score(::google::protobuf::uint32 value) {
  _set_bit(3);
  total_score_ = value;
}

// optional uint32 weak_level = 5;
inline bool PBCampWeakForceInfo::has_weak_level() const {
  return _has_bit(4);
}
inline void PBCampWeakForceInfo::clear_weak_level() {
  weak_level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBCampWeakForceInfo::weak_level() const {
  return weak_level_;
}
inline void PBCampWeakForceInfo::set_weak_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  weak_level_ = value;
}

// -------------------------------------------------------------------

// CMessageCampWeakListRequest

// -------------------------------------------------------------------

// CMessageCampWeakListResponse

// optional uint32 errcode = 1;
inline bool CMessageCampWeakListResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageCampWeakListResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCampWeakListResponse::errcode() const {
  return errcode_;
}
inline void CMessageCampWeakListResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// repeated .PBCampWeakForceInfo camp_info = 2;
inline int CMessageCampWeakListResponse::camp_info_size() const {
  return camp_info_.size();
}
inline void CMessageCampWeakListResponse::clear_camp_info() {
  camp_info_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCampWeakForceInfo >&
CMessageCampWeakListResponse::camp_info() const {
  return camp_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCampWeakForceInfo >*
CMessageCampWeakListResponse::mutable_camp_info() {
  return &camp_info_;
}
inline const ::PBCampWeakForceInfo& CMessageCampWeakListResponse::camp_info(int index) const {
  return camp_info_.Get(index);
}
inline ::PBCampWeakForceInfo* CMessageCampWeakListResponse::mutable_camp_info(int index) {
  return camp_info_.Mutable(index);
}
inline ::PBCampWeakForceInfo* CMessageCampWeakListResponse::add_camp_info() {
  return camp_info_.Add();
}

// -------------------------------------------------------------------

// CMessageCampGetAwardRequest

// optional uint32 npc_entity_id = 1;
inline bool CMessageCampGetAwardRequest::has_npc_entity_id() const {
  return _has_bit(0);
}
inline void CMessageCampGetAwardRequest::clear_npc_entity_id() {
  npc_entity_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCampGetAwardRequest::npc_entity_id() const {
  return npc_entity_id_;
}
inline void CMessageCampGetAwardRequest::set_npc_entity_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  npc_entity_id_ = value;
}

// optional uint32 award_type = 2;
inline bool CMessageCampGetAwardRequest::has_award_type() const {
  return _has_bit(1);
}
inline void CMessageCampGetAwardRequest::clear_award_type() {
  award_type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageCampGetAwardRequest::award_type() const {
  return award_type_;
}
inline void CMessageCampGetAwardRequest::set_award_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  award_type_ = value;
}

// -------------------------------------------------------------------

// CMessageCampGetAwardResponse

// optional uint32 errcode = 1;
inline bool CMessageCampGetAwardResponse::has_errcode() const {
  return _has_bit(0);
}
inline void CMessageCampGetAwardResponse::clear_errcode() {
  errcode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCampGetAwardResponse::errcode() const {
  return errcode_;
}
inline void CMessageCampGetAwardResponse::set_errcode(::google::protobuf::uint32 value) {
  _set_bit(0);
  errcode_ = value;
}

// -------------------------------------------------------------------

// CMessageAccuseKingRequest

// optional uint32 AccuseResult = 1;
inline bool CMessageAccuseKingRequest::has_accuseresult() const {
  return _has_bit(0);
}
inline void CMessageAccuseKingRequest::clear_accuseresult() {
  accuseresult_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAccuseKingRequest::accuseresult() const {
  return accuseresult_;
}
inline void CMessageAccuseKingRequest::set_accuseresult(::google::protobuf::uint32 value) {
  _set_bit(0);
  accuseresult_ = value;
}

// optional uint32 WorldID = 2;
inline bool CMessageAccuseKingRequest::has_worldid() const {
  return _has_bit(1);
}
inline void CMessageAccuseKingRequest::clear_worldid() {
  worldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAccuseKingRequest::worldid() const {
  return worldid_;
}
inline void CMessageAccuseKingRequest::set_worldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  worldid_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageAccuseKingRequest::has_charid() const {
  return _has_bit(2);
}
inline void CMessageAccuseKingRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAccuseKingRequest::charid() const {
  return charid_;
}
inline void CMessageAccuseKingRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageAccuseKingResponse

// optional uint32 ResponseResult = 1;
inline bool CMessageAccuseKingResponse::has_responseresult() const {
  return _has_bit(0);
}
inline void CMessageAccuseKingResponse::clear_responseresult() {
  responseresult_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageAccuseKingResponse::responseresult() const {
  return responseresult_;
}
inline void CMessageAccuseKingResponse::set_responseresult(::google::protobuf::uint32 value) {
  _set_bit(0);
  responseresult_ = value;
}

// optional uint32 AccuseResult = 2;
inline bool CMessageAccuseKingResponse::has_accuseresult() const {
  return _has_bit(1);
}
inline void CMessageAccuseKingResponse::clear_accuseresult() {
  accuseresult_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAccuseKingResponse::accuseresult() const {
  return accuseresult_;
}
inline void CMessageAccuseKingResponse::set_accuseresult(::google::protobuf::uint32 value) {
  _set_bit(1);
  accuseresult_ = value;
}

// optional uint32 CharID = 3;
inline bool CMessageAccuseKingResponse::has_charid() const {
  return _has_bit(2);
}
inline void CMessageAccuseKingResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAccuseKingResponse::charid() const {
  return charid_;
}
inline void CMessageAccuseKingResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(2);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageAccuseKingNotify

// optional string KingName = 1;
inline bool CMessageAccuseKingNotify::has_kingname() const {
  return _has_bit(0);
}
inline void CMessageAccuseKingNotify::clear_kingname() {
  if (kingname_ != &_default_kingname_) {
    kingname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageAccuseKingNotify::kingname() const {
  return *kingname_;
}
inline void CMessageAccuseKingNotify::set_kingname(const ::std::string& value) {
  _set_bit(0);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageAccuseKingNotify::set_kingname(const char* value) {
  _set_bit(0);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageAccuseKingNotify::set_kingname(const char* value, size_t size) {
  _set_bit(0);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageAccuseKingNotify::mutable_kingname() {
  _set_bit(0);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  return kingname_;
}

// optional uint32 CharID = 2;
inline bool CMessageAccuseKingNotify::has_charid() const {
  return _has_bit(1);
}
inline void CMessageAccuseKingNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAccuseKingNotify::charid() const {
  return charid_;
}
inline void CMessageAccuseKingNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(1);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageAccuseStatusNotify

// optional string KingName = 1;
inline bool CMessageAccuseStatusNotify::has_kingname() const {
  return _has_bit(0);
}
inline void CMessageAccuseStatusNotify::clear_kingname() {
  if (kingname_ != &_default_kingname_) {
    kingname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageAccuseStatusNotify::kingname() const {
  return *kingname_;
}
inline void CMessageAccuseStatusNotify::set_kingname(const ::std::string& value) {
  _set_bit(0);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageAccuseStatusNotify::set_kingname(const char* value) {
  _set_bit(0);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageAccuseStatusNotify::set_kingname(const char* value, size_t size) {
  _set_bit(0);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageAccuseStatusNotify::mutable_kingname() {
  _set_bit(0);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  return kingname_;
}

// optional uint32 YesNum = 2;
inline bool CMessageAccuseStatusNotify::has_yesnum() const {
  return _has_bit(1);
}
inline void CMessageAccuseStatusNotify::clear_yesnum() {
  yesnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageAccuseStatusNotify::yesnum() const {
  return yesnum_;
}
inline void CMessageAccuseStatusNotify::set_yesnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  yesnum_ = value;
}

// optional uint32 NoNum = 3;
inline bool CMessageAccuseStatusNotify::has_nonum() const {
  return _has_bit(2);
}
inline void CMessageAccuseStatusNotify::clear_nonum() {
  nonum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageAccuseStatusNotify::nonum() const {
  return nonum_;
}
inline void CMessageAccuseStatusNotify::set_nonum(::google::protobuf::uint32 value) {
  _set_bit(2);
  nonum_ = value;
}

// optional uint32 AbortNum = 4;
inline bool CMessageAccuseStatusNotify::has_abortnum() const {
  return _has_bit(3);
}
inline void CMessageAccuseStatusNotify::clear_abortnum() {
  abortnum_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageAccuseStatusNotify::abortnum() const {
  return abortnum_;
}
inline void CMessageAccuseStatusNotify::set_abortnum(::google::protobuf::uint32 value) {
  _set_bit(3);
  abortnum_ = value;
}

// optional uint32 CharID = 5;
inline bool CMessageAccuseStatusNotify::has_charid() const {
  return _has_bit(4);
}
inline void CMessageAccuseStatusNotify::clear_charid() {
  charid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageAccuseStatusNotify::charid() const {
  return charid_;
}
inline void CMessageAccuseStatusNotify::set_charid(::google::protobuf::uint32 value) {
  _set_bit(4);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessagePowerInfoRequest

// optional uint32 CharID = 1;
inline bool CMessagePowerInfoRequest::has_charid() const {
  return _has_bit(0);
}
inline void CMessagePowerInfoRequest::clear_charid() {
  charid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessagePowerInfoRequest::charid() const {
  return charid_;
}
inline void CMessagePowerInfoRequest::set_charid(::google::protobuf::uint32 value) {
  _set_bit(0);
  charid_ = value;
}

// -------------------------------------------------------------------

// PowerInfo

// optional uint32 PowerType = 1;
inline bool PowerInfo::has_powertype() const {
  return _has_bit(0);
}
inline void PowerInfo::clear_powertype() {
  powertype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PowerInfo::powertype() const {
  return powertype_;
}
inline void PowerInfo::set_powertype(::google::protobuf::uint32 value) {
  _set_bit(0);
  powertype_ = value;
}

// optional uint32 World = 2;
inline bool PowerInfo::has_world() const {
  return _has_bit(1);
}
inline void PowerInfo::clear_world() {
  world_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PowerInfo::world() const {
  return world_;
}
inline void PowerInfo::set_world(::google::protobuf::uint32 value) {
  _set_bit(1);
  world_ = value;
}

// optional uint32 ChangeType = 3;
inline bool PowerInfo::has_changetype() const {
  return _has_bit(2);
}
inline void PowerInfo::clear_changetype() {
  changetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PowerInfo::changetype() const {
  return changetype_;
}
inline void PowerInfo::set_changetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  changetype_ = value;
}

// optional uint32 ChangeValue = 4;
inline bool PowerInfo::has_changevalue() const {
  return _has_bit(3);
}
inline void PowerInfo::clear_changevalue() {
  changevalue_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PowerInfo::changevalue() const {
  return changevalue_;
}
inline void PowerInfo::set_changevalue(::google::protobuf::uint32 value) {
  _set_bit(3);
  changevalue_ = value;
}

// optional uint32 Time = 5;
inline bool PowerInfo::has_time() const {
  return _has_bit(4);
}
inline void PowerInfo::clear_time() {
  time_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PowerInfo::time() const {
  return time_;
}
inline void PowerInfo::set_time(::google::protobuf::uint32 value) {
  _set_bit(4);
  time_ = value;
}

// -------------------------------------------------------------------

// CMessagePowerInfoResponse

// repeated .PowerInfo PowerHistory = 1;
inline int CMessagePowerInfoResponse::powerhistory_size() const {
  return powerhistory_.size();
}
inline void CMessagePowerInfoResponse::clear_powerhistory() {
  powerhistory_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PowerInfo >&
CMessagePowerInfoResponse::powerhistory() const {
  return powerhistory_;
}
inline ::google::protobuf::RepeatedPtrField< ::PowerInfo >*
CMessagePowerInfoResponse::mutable_powerhistory() {
  return &powerhistory_;
}
inline const ::PowerInfo& CMessagePowerInfoResponse::powerhistory(int index) const {
  return powerhistory_.Get(index);
}
inline ::PowerInfo* CMessagePowerInfoResponse::mutable_powerhistory(int index) {
  return powerhistory_.Mutable(index);
}
inline ::PowerInfo* CMessagePowerInfoResponse::add_powerhistory() {
  return powerhistory_.Add();
}

// optional uint32 PowerAdd = 2;
inline bool CMessagePowerInfoResponse::has_poweradd() const {
  return _has_bit(1);
}
inline void CMessagePowerInfoResponse::clear_poweradd() {
  poweradd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessagePowerInfoResponse::poweradd() const {
  return poweradd_;
}
inline void CMessagePowerInfoResponse::set_poweradd(::google::protobuf::uint32 value) {
  _set_bit(1);
  poweradd_ = value;
}

// optional uint32 PowerDel = 3;
inline bool CMessagePowerInfoResponse::has_powerdel() const {
  return _has_bit(2);
}
inline void CMessagePowerInfoResponse::clear_powerdel() {
  powerdel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessagePowerInfoResponse::powerdel() const {
  return powerdel_;
}
inline void CMessagePowerInfoResponse::set_powerdel(::google::protobuf::uint32 value) {
  _set_bit(2);
  powerdel_ = value;
}

// optional uint32 Result = 4;
inline bool CMessagePowerInfoResponse::has_result() const {
  return _has_bit(3);
}
inline void CMessagePowerInfoResponse::clear_result() {
  result_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessagePowerInfoResponse::result() const {
  return result_;
}
inline void CMessagePowerInfoResponse::set_result(::google::protobuf::uint32 value) {
  _set_bit(3);
  result_ = value;
}

// optional uint32 CharID = 5;
inline bool CMessagePowerInfoResponse::has_charid() const {
  return _has_bit(4);
}
inline void CMessagePowerInfoResponse::clear_charid() {
  charid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessagePowerInfoResponse::charid() const {
  return charid_;
}
inline void CMessagePowerInfoResponse::set_charid(::google::protobuf::uint32 value) {
  _set_bit(4);
  charid_ = value;
}

// -------------------------------------------------------------------

// CMessageMakeGuoTanNotify

// optional uint32 SrcWorldID = 1;
inline bool CMessageMakeGuoTanNotify::has_srcworldid() const {
  return _has_bit(0);
}
inline void CMessageMakeGuoTanNotify::clear_srcworldid() {
  srcworldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageMakeGuoTanNotify::srcworldid() const {
  return srcworldid_;
}
inline void CMessageMakeGuoTanNotify::set_srcworldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srcworldid_ = value;
}

// optional uint32 DesWorldID = 2;
inline bool CMessageMakeGuoTanNotify::has_desworldid() const {
  return _has_bit(1);
}
inline void CMessageMakeGuoTanNotify::clear_desworldid() {
  desworldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageMakeGuoTanNotify::desworldid() const {
  return desworldid_;
}
inline void CMessageMakeGuoTanNotify::set_desworldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  desworldid_ = value;
}

// optional uint32 TargetTime = 3;
inline bool CMessageMakeGuoTanNotify::has_targettime() const {
  return _has_bit(2);
}
inline void CMessageMakeGuoTanNotify::clear_targettime() {
  targettime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageMakeGuoTanNotify::targettime() const {
  return targettime_;
}
inline void CMessageMakeGuoTanNotify::set_targettime(::google::protobuf::uint32 value) {
  _set_bit(2);
  targettime_ = value;
}

// optional string KingName = 4;
inline bool CMessageMakeGuoTanNotify::has_kingname() const {
  return _has_bit(3);
}
inline void CMessageMakeGuoTanNotify::clear_kingname() {
  if (kingname_ != &_default_kingname_) {
    kingname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageMakeGuoTanNotify::kingname() const {
  return *kingname_;
}
inline void CMessageMakeGuoTanNotify::set_kingname(const ::std::string& value) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageMakeGuoTanNotify::set_kingname(const char* value) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageMakeGuoTanNotify::set_kingname(const char* value, size_t size) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageMakeGuoTanNotify::mutable_kingname() {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  return kingname_;
}

// -------------------------------------------------------------------

// CMessageMakeLuanWuNotify

// optional uint32 SrcWorldID = 1;
inline bool CMessageMakeLuanWuNotify::has_srcworldid() const {
  return _has_bit(0);
}
inline void CMessageMakeLuanWuNotify::clear_srcworldid() {
  srcworldid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageMakeLuanWuNotify::srcworldid() const {
  return srcworldid_;
}
inline void CMessageMakeLuanWuNotify::set_srcworldid(::google::protobuf::uint32 value) {
  _set_bit(0);
  srcworldid_ = value;
}

// optional uint32 DesWorldID = 2;
inline bool CMessageMakeLuanWuNotify::has_desworldid() const {
  return _has_bit(1);
}
inline void CMessageMakeLuanWuNotify::clear_desworldid() {
  desworldid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageMakeLuanWuNotify::desworldid() const {
  return desworldid_;
}
inline void CMessageMakeLuanWuNotify::set_desworldid(::google::protobuf::uint32 value) {
  _set_bit(1);
  desworldid_ = value;
}

// optional uint32 TargetTime = 3;
inline bool CMessageMakeLuanWuNotify::has_targettime() const {
  return _has_bit(2);
}
inline void CMessageMakeLuanWuNotify::clear_targettime() {
  targettime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageMakeLuanWuNotify::targettime() const {
  return targettime_;
}
inline void CMessageMakeLuanWuNotify::set_targettime(::google::protobuf::uint32 value) {
  _set_bit(2);
  targettime_ = value;
}

// optional string KingName = 4;
inline bool CMessageMakeLuanWuNotify::has_kingname() const {
  return _has_bit(3);
}
inline void CMessageMakeLuanWuNotify::clear_kingname() {
  if (kingname_ != &_default_kingname_) {
    kingname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageMakeLuanWuNotify::kingname() const {
  return *kingname_;
}
inline void CMessageMakeLuanWuNotify::set_kingname(const ::std::string& value) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageMakeLuanWuNotify::set_kingname(const char* value) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CMessageMakeLuanWuNotify::set_kingname(const char* value, size_t size) {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageMakeLuanWuNotify::mutable_kingname() {
  _set_bit(3);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  return kingname_;
}

#endif  // PROTOBUF_countrymessage_5fpb_2ehxx__INCLUDED
