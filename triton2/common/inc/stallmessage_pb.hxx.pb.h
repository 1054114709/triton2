// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_stallmessage_5fpb_2ehxx__INCLUDED
#define PROTOBUF_stallmessage_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "coremessage_pb.hxx.pb.h"
#include "property_pb.hxx.pb.h"

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();

class CMessageOpenStallRequest;
class CMessageOpenStallResponse;
class CMessageProcessReadResult;
class CMessageStartStallNotify;
class CMessageUpdateTextRequest;
class CMessageUpdateTextResponse;
class CMessageUpdateStallRequest;
class CMessageUpdateStallResponse;
class CMessageUpdatePriceRequest;
class CMessageUpdatePriceResponse;
class CMessageCloseStallRequest;
class CMessageCloseStallResponse;
class CMessageClickStallRequest;
class CMessageClickStallResponse;
class CMessageBuyGoodsRequest;
class CMessageBuyGoodsResponse;
class CMessageCloseStallDlgRequest;
class PBStallRecord;
class CMessageStallGetRecordRequest;
class CMessageStallGetRecordResponse;
class CMessageStallCleanRecordRequest;
class CMessageStallCleanRecordResponse;

enum StallMessageID {
  ID_C2S_REQUEST_OPENSTALL = 10240,
  ID_S2C_RESPONSE_OPENSTALL = 10241,
  ID_C2S_REQUEST_READPROCESS = 10242,
  ID_S2C_NOTIFY_STARTSTALL = 10243,
  ID_C2S_REQUEST_UPDATEGOODS = 10244,
  ID_S2C_RESPONSE_UPDATEGOODS = 10245,
  ID_C2S_REQUEST_UPDATEPRICE = 10246,
  ID_S2C_RESPONSE_UPDATEPRICE = 10247,
  ID_C2S_REQUEST_CLICKSTALL = 10249,
  ID_S2C_RESPONSE_CLICKSTALL = 10250,
  ID_C2S_REQUEST_BUYGOODS = 10251,
  ID_S2C_RESPONSE_BUYGOODS = 10252,
  ID_C2S_REQUEST_CLOSESTALL = 10253,
  ID_S2C_RESPONSE_CLOSESTALL = 10254,
  ID_C2S_REQUEST_CLOSEDIALOG = 10255,
  ID_C2S_REQUEST_UPDATETEXT = 10256,
  ID_S2C_RESPONSE_UPDATETEXT = 10257,
  ID_C2S_REQUEST_STALLRECORD = 10258,
  ID_S2C_RESPONSE_STALLRECORD = 10259,
  ID_C2S_REQUEST_CLEANRECORD = 10260,
  ID_S2C_RESPONSE_CLEANRECORD = 10261
};
const ::google::protobuf::EnumDescriptor* StallMessageID_descriptor();
bool StallMessageID_IsValid(int value);
const StallMessageID StallMessageID_MIN = ID_C2S_REQUEST_OPENSTALL;
const StallMessageID StallMessageID_MAX = ID_S2C_RESPONSE_CLEANRECORD;

inline const ::std::string& StallMessageID_Name(StallMessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    StallMessageID_descriptor(), value);
}
inline bool StallMessageID_Parse(
    const ::std::string& name, StallMessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StallMessageID>(
    StallMessageID_descriptor(), name, value);
}
// ===================================================================

class CMessageOpenStallRequest : public ::google::protobuf::Message {
 public:
  CMessageOpenStallRequest();
  virtual ~CMessageOpenStallRequest();
  
  CMessageOpenStallRequest(const CMessageOpenStallRequest& from);
  
  inline CMessageOpenStallRequest& operator=(const CMessageOpenStallRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageOpenStallRequest& default_instance();
  void Swap(CMessageOpenStallRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageOpenStallRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageOpenStallRequest& from);
  void MergeFrom(const CMessageOpenStallRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string StallName = 1;
  inline bool has_stallname() const;
  inline void clear_stallname();
  static const int kStallNameFieldNumber = 1;
  inline const ::std::string& stallname() const;
  inline void set_stallname(const ::std::string& value);
  inline void set_stallname(const char* value);
  inline void set_stallname(const char* value, size_t size);
  inline ::std::string* mutable_stallname();
  
  // optional string AdContent = 2;
  inline bool has_adcontent() const;
  inline void clear_adcontent();
  static const int kAdContentFieldNumber = 2;
  inline const ::std::string& adcontent() const;
  inline void set_adcontent(const ::std::string& value);
  inline void set_adcontent(const char* value);
  inline void set_adcontent(const char* value, size_t size);
  inline ::std::string* mutable_adcontent();
  
  // optional int32 StallType = 3;
  inline bool has_stalltype() const;
  inline void clear_stalltype();
  static const int kStallTypeFieldNumber = 3;
  inline ::google::protobuf::int32 stalltype() const;
  inline void set_stalltype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* stallname_;
  static const ::std::string _default_stallname_;
  ::std::string* adcontent_;
  static const ::std::string _default_adcontent_;
  ::google::protobuf::int32 stalltype_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageOpenStallRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageOpenStallResponse : public ::google::protobuf::Message {
 public:
  CMessageOpenStallResponse();
  virtual ~CMessageOpenStallResponse();
  
  CMessageOpenStallResponse(const CMessageOpenStallResponse& from);
  
  inline CMessageOpenStallResponse& operator=(const CMessageOpenStallResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageOpenStallResponse& default_instance();
  void Swap(CMessageOpenStallResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageOpenStallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageOpenStallResponse& from);
  void MergeFrom(const CMessageOpenStallResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional int32 ErrorCode = 2;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageOpenStallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageProcessReadResult : public ::google::protobuf::Message {
 public:
  CMessageProcessReadResult();
  virtual ~CMessageProcessReadResult();
  
  CMessageProcessReadResult(const CMessageProcessReadResult& from);
  
  inline CMessageProcessReadResult& operator=(const CMessageProcessReadResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageProcessReadResult& default_instance();
  void Swap(CMessageProcessReadResult* other);
  
  // implements Message ----------------------------------------------
  
  CMessageProcessReadResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageProcessReadResult& from);
  void MergeFrom(const CMessageProcessReadResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RtnCode = 1;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageProcessReadResult* default_instance_;
};
// -------------------------------------------------------------------

class CMessageStartStallNotify : public ::google::protobuf::Message {
 public:
  CMessageStartStallNotify();
  virtual ~CMessageStartStallNotify();
  
  CMessageStartStallNotify(const CMessageStartStallNotify& from);
  
  inline CMessageStartStallNotify& operator=(const CMessageStartStallNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageStartStallNotify& default_instance();
  void Swap(CMessageStartStallNotify* other);
  
  // implements Message ----------------------------------------------
  
  CMessageStartStallNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageStartStallNotify& from);
  void MergeFrom(const CMessageStartStallNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional string AdContent = 2;
  inline bool has_adcontent() const;
  inline void clear_adcontent();
  static const int kAdContentFieldNumber = 2;
  inline const ::std::string& adcontent() const;
  inline void set_adcontent(const ::std::string& value);
  inline void set_adcontent(const char* value);
  inline void set_adcontent(const char* value, size_t size);
  inline ::std::string* mutable_adcontent();
  
  // optional string StallName = 3;
  inline bool has_stallname() const;
  inline void clear_stallname();
  static const int kStallNameFieldNumber = 3;
  inline const ::std::string& stallname() const;
  inline void set_stallname(const ::std::string& value);
  inline void set_stallname(const char* value);
  inline void set_stallname(const char* value, size_t size);
  inline ::std::string* mutable_stallname();
  
  // repeated uint32 StallIndex = 4;
  inline int stallindex_size() const;
  inline void clear_stallindex();
  static const int kStallIndexFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& stallindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_stallindex();
  inline ::google::protobuf::uint32 stallindex(int index) const;
  inline void set_stallindex(int index, ::google::protobuf::uint32 value);
  inline void add_stallindex(::google::protobuf::uint32 value);
  
  // repeated uint32 Price = 5;
  inline int price_size() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& price() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_price();
  inline ::google::protobuf::uint32 price(int index) const;
  inline void set_price(int index, ::google::protobuf::uint32 value);
  inline void add_price(::google::protobuf::uint32 value);
  
  // repeated .PBItemObject ItemList = 6;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >& itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >* mutable_itemlist();
  inline const ::PBItemObject& itemlist(int index) const;
  inline ::PBItemObject* mutable_itemlist(int index);
  inline ::PBItemObject* add_itemlist();
  
  // repeated uint32 PriceType = 7;
  inline int pricetype_size() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pricetype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pricetype();
  inline ::google::protobuf::uint32 pricetype(int index) const;
  inline void set_pricetype(int index, ::google::protobuf::uint32 value);
  inline void add_pricetype(::google::protobuf::uint32 value);
  
  // optional int32 StallType = 8;
  inline bool has_stalltype() const;
  inline void clear_stalltype();
  static const int kStallTypeFieldNumber = 8;
  inline ::google::protobuf::int32 stalltype() const;
  inline void set_stalltype(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::std::string* adcontent_;
  static const ::std::string _default_adcontent_;
  ::std::string* stallname_;
  static const ::std::string _default_stallname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stallindex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > price_;
  ::google::protobuf::RepeatedPtrField< ::PBItemObject > itemlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pricetype_;
  ::google::protobuf::int32 stalltype_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageStartStallNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateTextRequest : public ::google::protobuf::Message {
 public:
  CMessageUpdateTextRequest();
  virtual ~CMessageUpdateTextRequest();
  
  CMessageUpdateTextRequest(const CMessageUpdateTextRequest& from);
  
  inline CMessageUpdateTextRequest& operator=(const CMessageUpdateTextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateTextRequest& default_instance();
  void Swap(CMessageUpdateTextRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateTextRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateTextRequest& from);
  void MergeFrom(const CMessageUpdateTextRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string AdContent = 1;
  inline bool has_adcontent() const;
  inline void clear_adcontent();
  static const int kAdContentFieldNumber = 1;
  inline const ::std::string& adcontent() const;
  inline void set_adcontent(const ::std::string& value);
  inline void set_adcontent(const char* value);
  inline void set_adcontent(const char* value, size_t size);
  inline ::std::string* mutable_adcontent();
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional string StallName = 3;
  inline bool has_stallname() const;
  inline void clear_stallname();
  static const int kStallNameFieldNumber = 3;
  inline const ::std::string& stallname() const;
  inline void set_stallname(const ::std::string& value);
  inline void set_stallname(const char* value);
  inline void set_stallname(const char* value, size_t size);
  inline ::std::string* mutable_stallname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* adcontent_;
  static const ::std::string _default_adcontent_;
  ::google::protobuf::uint32 type_;
  ::std::string* stallname_;
  static const ::std::string _default_stallname_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateTextRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateTextResponse : public ::google::protobuf::Message {
 public:
  CMessageUpdateTextResponse();
  virtual ~CMessageUpdateTextResponse();
  
  CMessageUpdateTextResponse(const CMessageUpdateTextResponse& from);
  
  inline CMessageUpdateTextResponse& operator=(const CMessageUpdateTextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateTextResponse& default_instance();
  void Swap(CMessageUpdateTextResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateTextResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateTextResponse& from);
  void MergeFrom(const CMessageUpdateTextResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional string AdContent = 3;
  inline bool has_adcontent() const;
  inline void clear_adcontent();
  static const int kAdContentFieldNumber = 3;
  inline const ::std::string& adcontent() const;
  inline void set_adcontent(const ::std::string& value);
  inline void set_adcontent(const char* value);
  inline void set_adcontent(const char* value, size_t size);
  inline ::std::string* mutable_adcontent();
  
  // optional string StallName = 4;
  inline bool has_stallname() const;
  inline void clear_stallname();
  static const int kStallNameFieldNumber = 4;
  inline const ::std::string& stallname() const;
  inline void set_stallname(const ::std::string& value);
  inline void set_stallname(const char* value);
  inline void set_stallname(const char* value, size_t size);
  inline ::std::string* mutable_stallname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 type_;
  ::std::string* adcontent_;
  static const ::std::string _default_adcontent_;
  ::std::string* stallname_;
  static const ::std::string _default_stallname_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateTextResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateStallRequest : public ::google::protobuf::Message {
 public:
  CMessageUpdateStallRequest();
  virtual ~CMessageUpdateStallRequest();
  
  CMessageUpdateStallRequest(const CMessageUpdateStallRequest& from);
  
  inline CMessageUpdateStallRequest& operator=(const CMessageUpdateStallRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateStallRequest& default_instance();
  void Swap(CMessageUpdateStallRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateStallRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateStallRequest& from);
  void MergeFrom(const CMessageUpdateStallRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemIndex = 1;
  inline bool has_itemindex() const;
  inline void clear_itemindex();
  static const int kItemIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 itemindex() const;
  inline void set_itemindex(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 StallIndex = 3;
  inline bool has_stallindex() const;
  inline void clear_stallindex();
  static const int kStallIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 stallindex() const;
  inline void set_stallindex(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 4;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 4;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 Price = 5;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 5;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 PriceType = 6;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 pricetype() const;
  inline void set_pricetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemindex_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 stallindex_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 pricetype_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateStallRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdateStallResponse : public ::google::protobuf::Message {
 public:
  CMessageUpdateStallResponse();
  virtual ~CMessageUpdateStallResponse();
  
  CMessageUpdateStallResponse(const CMessageUpdateStallResponse& from);
  
  inline CMessageUpdateStallResponse& operator=(const CMessageUpdateStallResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdateStallResponse& default_instance();
  void Swap(CMessageUpdateStallResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdateStallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdateStallResponse& from);
  void MergeFrom(const CMessageUpdateStallResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 StallIndex = 2;
  inline bool has_stallindex() const;
  inline void clear_stallindex();
  static const int kStallIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 stallindex() const;
  inline void set_stallindex(::google::protobuf::uint32 value);
  
  // optional .PBItemObject Item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::PBItemObject& item() const;
  inline ::PBItemObject* mutable_item();
  
  // optional uint32 Price = 4;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 PriceType = 6;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 pricetype() const;
  inline void set_pricetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 stallindex_;
  ::PBItemObject* item_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 pricetype_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdateStallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdatePriceRequest : public ::google::protobuf::Message {
 public:
  CMessageUpdatePriceRequest();
  virtual ~CMessageUpdatePriceRequest();
  
  CMessageUpdatePriceRequest(const CMessageUpdatePriceRequest& from);
  
  inline CMessageUpdatePriceRequest& operator=(const CMessageUpdatePriceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdatePriceRequest& default_instance();
  void Swap(CMessageUpdatePriceRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdatePriceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdatePriceRequest& from);
  void MergeFrom(const CMessageUpdatePriceRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 StallIndex = 2;
  inline bool has_stallindex() const;
  inline void clear_stallindex();
  static const int kStallIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 stallindex() const;
  inline void set_stallindex(::google::protobuf::uint32 value);
  
  // optional uint32 PriceType = 3;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 pricetype() const;
  inline void set_pricetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 stallindex_;
  ::google::protobuf::uint32 pricetype_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdatePriceRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageUpdatePriceResponse : public ::google::protobuf::Message {
 public:
  CMessageUpdatePriceResponse();
  virtual ~CMessageUpdatePriceResponse();
  
  CMessageUpdatePriceResponse(const CMessageUpdatePriceResponse& from);
  
  inline CMessageUpdatePriceResponse& operator=(const CMessageUpdatePriceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageUpdatePriceResponse& default_instance();
  void Swap(CMessageUpdatePriceResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageUpdatePriceResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageUpdatePriceResponse& from);
  void MergeFrom(const CMessageUpdatePriceResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 StallIndex = 2;
  inline bool has_stallindex() const;
  inline void clear_stallindex();
  static const int kStallIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 stallindex() const;
  inline void set_stallindex(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 PriceType = 4;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 pricetype() const;
  inline void set_pricetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 stallindex_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 pricetype_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageUpdatePriceResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCloseStallRequest : public ::google::protobuf::Message {
 public:
  CMessageCloseStallRequest();
  virtual ~CMessageCloseStallRequest();
  
  CMessageCloseStallRequest(const CMessageCloseStallRequest& from);
  
  inline CMessageCloseStallRequest& operator=(const CMessageCloseStallRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCloseStallRequest& default_instance();
  void Swap(CMessageCloseStallRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCloseStallRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCloseStallRequest& from);
  void MergeFrom(const CMessageCloseStallRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 IsSaved = 1;
  inline bool has_issaved() const;
  inline void clear_issaved();
  static const int kIsSavedFieldNumber = 1;
  inline ::google::protobuf::uint32 issaved() const;
  inline void set_issaved(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 issaved_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCloseStallRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCloseStallResponse : public ::google::protobuf::Message {
 public:
  CMessageCloseStallResponse();
  virtual ~CMessageCloseStallResponse();
  
  CMessageCloseStallResponse(const CMessageCloseStallResponse& from);
  
  inline CMessageCloseStallResponse& operator=(const CMessageCloseStallResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCloseStallResponse& default_instance();
  void Swap(CMessageCloseStallResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCloseStallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCloseStallResponse& from);
  void MergeFrom(const CMessageCloseStallResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCloseStallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClickStallRequest : public ::google::protobuf::Message {
 public:
  CMessageClickStallRequest();
  virtual ~CMessageClickStallRequest();
  
  CMessageClickStallRequest(const CMessageClickStallRequest& from);
  
  inline CMessageClickStallRequest& operator=(const CMessageClickStallRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClickStallRequest& default_instance();
  void Swap(CMessageClickStallRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClickStallRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClickStallRequest& from);
  void MergeFrom(const CMessageClickStallRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClickStallRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageClickStallResponse : public ::google::protobuf::Message {
 public:
  CMessageClickStallResponse();
  virtual ~CMessageClickStallResponse();
  
  CMessageClickStallResponse(const CMessageClickStallResponse& from);
  
  inline CMessageClickStallResponse& operator=(const CMessageClickStallResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageClickStallResponse& default_instance();
  void Swap(CMessageClickStallResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageClickStallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageClickStallResponse& from);
  void MergeFrom(const CMessageClickStallResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBItemObject ItemList = 1;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >& itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >* mutable_itemlist();
  inline const ::PBItemObject& itemlist(int index) const;
  inline ::PBItemObject* mutable_itemlist(int index);
  inline ::PBItemObject* add_itemlist();
  
  // repeated uint32 StallIndex = 2;
  inline int stallindex_size() const;
  inline void clear_stallindex();
  static const int kStallIndexFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& stallindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_stallindex();
  inline ::google::protobuf::uint32 stallindex(int index) const;
  inline void set_stallindex(int index, ::google::protobuf::uint32 value);
  inline void add_stallindex(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 3;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 3;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // repeated uint32 Price = 4;
  inline int price_size() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& price() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_price();
  inline ::google::protobuf::uint32 price(int index) const;
  inline void set_price(int index, ::google::protobuf::uint32 value);
  inline void add_price(::google::protobuf::uint32 value);
  
  // repeated uint32 PriceType = 5;
  inline int pricetype_size() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pricetype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pricetype();
  inline ::google::protobuf::uint32 pricetype(int index) const;
  inline void set_pricetype(int index, ::google::protobuf::uint32 value);
  inline void add_pricetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBItemObject > itemlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stallindex_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > price_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pricetype_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageClickStallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBuyGoodsRequest : public ::google::protobuf::Message {
 public:
  CMessageBuyGoodsRequest();
  virtual ~CMessageBuyGoodsRequest();
  
  CMessageBuyGoodsRequest(const CMessageBuyGoodsRequest& from);
  
  inline CMessageBuyGoodsRequest& operator=(const CMessageBuyGoodsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBuyGoodsRequest& default_instance();
  void Swap(CMessageBuyGoodsRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBuyGoodsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBuyGoodsRequest& from);
  void MergeFrom(const CMessageBuyGoodsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 EntityID = 2;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 Number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
  // optional uint32 StallIndex = 4;
  inline bool has_stallindex() const;
  inline void clear_stallindex();
  static const int kStallIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 stallindex() const;
  inline void set_stallindex(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 5;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 5;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 PriceType = 6;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 pricetype() const;
  inline void set_pricetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::uint32 stallindex_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 pricetype_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBuyGoodsRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageBuyGoodsResponse : public ::google::protobuf::Message {
 public:
  CMessageBuyGoodsResponse();
  virtual ~CMessageBuyGoodsResponse();
  
  CMessageBuyGoodsResponse(const CMessageBuyGoodsResponse& from);
  
  inline CMessageBuyGoodsResponse& operator=(const CMessageBuyGoodsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageBuyGoodsResponse& default_instance();
  void Swap(CMessageBuyGoodsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageBuyGoodsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageBuyGoodsResponse& from);
  void MergeFrom(const CMessageBuyGoodsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // optional uint32 StallIndex = 2;
  inline bool has_stallindex() const;
  inline void clear_stallindex();
  static const int kStallIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 stallindex() const;
  inline void set_stallindex(::google::protobuf::uint32 value);
  
  // optional uint32 Number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
  // optional uint32 BuyerEntityID = 4;
  inline bool has_buyerentityid() const;
  inline void clear_buyerentityid();
  static const int kBuyerEntityIDFieldNumber = 4;
  inline ::google::protobuf::uint32 buyerentityid() const;
  inline void set_buyerentityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::uint32 stallindex_;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::uint32 buyerentityid_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageBuyGoodsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageCloseStallDlgRequest : public ::google::protobuf::Message {
 public:
  CMessageCloseStallDlgRequest();
  virtual ~CMessageCloseStallDlgRequest();
  
  CMessageCloseStallDlgRequest(const CMessageCloseStallDlgRequest& from);
  
  inline CMessageCloseStallDlgRequest& operator=(const CMessageCloseStallDlgRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageCloseStallDlgRequest& default_instance();
  void Swap(CMessageCloseStallDlgRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageCloseStallDlgRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageCloseStallDlgRequest& from);
  void MergeFrom(const CMessageCloseStallDlgRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageCloseStallDlgRequest* default_instance_;
};
// -------------------------------------------------------------------

class PBStallRecord : public ::google::protobuf::Message {
 public:
  PBStallRecord();
  virtual ~PBStallRecord();
  
  PBStallRecord(const PBStallRecord& from);
  
  inline PBStallRecord& operator=(const PBStallRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStallRecord& default_instance();
  void Swap(PBStallRecord* other);
  
  // implements Message ----------------------------------------------
  
  PBStallRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStallRecord& from);
  void MergeFrom(const PBStallRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string MasterName = 1;
  inline bool has_mastername() const;
  inline void clear_mastername();
  static const int kMasterNameFieldNumber = 1;
  inline const ::std::string& mastername() const;
  inline void set_mastername(const ::std::string& value);
  inline void set_mastername(const char* value);
  inline void set_mastername(const char* value, size_t size);
  inline ::std::string* mutable_mastername();
  
  // optional string BuyerName = 2;
  inline bool has_buyername() const;
  inline void clear_buyername();
  static const int kBuyerNameFieldNumber = 2;
  inline const ::std::string& buyername() const;
  inline void set_buyername(const ::std::string& value);
  inline void set_buyername(const char* value);
  inline void set_buyername(const char* value, size_t size);
  inline ::std::string* mutable_buyername();
  
  // optional uint32 ItemID = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 3;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 Number = 4;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 4;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
  // optional uint32 Price = 5;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 5;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);
  
  // optional uint32 Time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 Action = 7;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 7;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);
  
  // optional uint32 Tax = 8;
  inline bool has_tax() const;
  inline void clear_tax();
  static const int kTaxFieldNumber = 8;
  inline ::google::protobuf::uint32 tax() const;
  inline void set_tax(::google::protobuf::uint32 value);
  
  // optional uint32 PriceType = 9;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 pricetype() const;
  inline void set_pricetype(::google::protobuf::uint32 value);
  
  // optional uint32 Fee = 10;
  inline bool has_fee() const;
  inline void clear_fee();
  static const int kFeeFieldNumber = 10;
  inline ::google::protobuf::uint32 fee() const;
  inline void set_fee(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* mastername_;
  static const ::std::string _default_mastername_;
  ::std::string* buyername_;
  static const ::std::string _default_buyername_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 action_;
  ::google::protobuf::uint32 tax_;
  ::google::protobuf::uint32 pricetype_;
  ::google::protobuf::uint32 fee_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBStallRecord* default_instance_;
};
// -------------------------------------------------------------------

class CMessageStallGetRecordRequest : public ::google::protobuf::Message {
 public:
  CMessageStallGetRecordRequest();
  virtual ~CMessageStallGetRecordRequest();
  
  CMessageStallGetRecordRequest(const CMessageStallGetRecordRequest& from);
  
  inline CMessageStallGetRecordRequest& operator=(const CMessageStallGetRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageStallGetRecordRequest& default_instance();
  void Swap(CMessageStallGetRecordRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageStallGetRecordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageStallGetRecordRequest& from);
  void MergeFrom(const CMessageStallGetRecordRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageStallGetRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageStallGetRecordResponse : public ::google::protobuf::Message {
 public:
  CMessageStallGetRecordResponse();
  virtual ~CMessageStallGetRecordResponse();
  
  CMessageStallGetRecordResponse(const CMessageStallGetRecordResponse& from);
  
  inline CMessageStallGetRecordResponse& operator=(const CMessageStallGetRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageStallGetRecordResponse& default_instance();
  void Swap(CMessageStallGetRecordResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageStallGetRecordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageStallGetRecordResponse& from);
  void MergeFrom(const CMessageStallGetRecordResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EntityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint32 entityid() const;
  inline void set_entityid(::google::protobuf::uint32 value);
  
  // repeated .PBStallRecord Record = 2;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBStallRecord >& record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBStallRecord >* mutable_record();
  inline const ::PBStallRecord& record(int index) const;
  inline ::PBStallRecord* mutable_record(int index);
  inline ::PBStallRecord* add_record();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 entityid_;
  ::google::protobuf::RepeatedPtrField< ::PBStallRecord > record_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageStallGetRecordResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMessageStallCleanRecordRequest : public ::google::protobuf::Message {
 public:
  CMessageStallCleanRecordRequest();
  virtual ~CMessageStallCleanRecordRequest();
  
  CMessageStallCleanRecordRequest(const CMessageStallCleanRecordRequest& from);
  
  inline CMessageStallCleanRecordRequest& operator=(const CMessageStallCleanRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageStallCleanRecordRequest& default_instance();
  void Swap(CMessageStallCleanRecordRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMessageStallCleanRecordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageStallCleanRecordRequest& from);
  void MergeFrom(const CMessageStallCleanRecordRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageStallCleanRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMessageStallCleanRecordResponse : public ::google::protobuf::Message {
 public:
  CMessageStallCleanRecordResponse();
  virtual ~CMessageStallCleanRecordResponse();
  
  CMessageStallCleanRecordResponse(const CMessageStallCleanRecordResponse& from);
  
  inline CMessageStallCleanRecordResponse& operator=(const CMessageStallCleanRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageStallCleanRecordResponse& default_instance();
  void Swap(CMessageStallCleanRecordResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMessageStallCleanRecordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageStallCleanRecordResponse& from);
  void MergeFrom(const CMessageStallCleanRecordResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 RtnCode = 1;
  inline bool has_rtncode() const;
  inline void clear_rtncode();
  static const int kRtnCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 rtncode() const;
  inline void set_rtncode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 rtncode_;
  friend void  protobuf_AddDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_AssignDesc_stallmessage_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_stallmessage_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CMessageStallCleanRecordResponse* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// CMessageOpenStallRequest

// optional string StallName = 1;
inline bool CMessageOpenStallRequest::has_stallname() const {
  return _has_bit(0);
}
inline void CMessageOpenStallRequest::clear_stallname() {
  if (stallname_ != &_default_stallname_) {
    stallname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageOpenStallRequest::stallname() const {
  return *stallname_;
}
inline void CMessageOpenStallRequest::set_stallname(const ::std::string& value) {
  _set_bit(0);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void CMessageOpenStallRequest::set_stallname(const char* value) {
  _set_bit(0);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void CMessageOpenStallRequest::set_stallname(const char* value, size_t size) {
  _set_bit(0);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageOpenStallRequest::mutable_stallname() {
  _set_bit(0);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  return stallname_;
}

// optional string AdContent = 2;
inline bool CMessageOpenStallRequest::has_adcontent() const {
  return _has_bit(1);
}
inline void CMessageOpenStallRequest::clear_adcontent() {
  if (adcontent_ != &_default_adcontent_) {
    adcontent_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageOpenStallRequest::adcontent() const {
  return *adcontent_;
}
inline void CMessageOpenStallRequest::set_adcontent(const ::std::string& value) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void CMessageOpenStallRequest::set_adcontent(const char* value) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void CMessageOpenStallRequest::set_adcontent(const char* value, size_t size) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageOpenStallRequest::mutable_adcontent() {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  return adcontent_;
}

// optional int32 StallType = 3;
inline bool CMessageOpenStallRequest::has_stalltype() const {
  return _has_bit(2);
}
inline void CMessageOpenStallRequest::clear_stalltype() {
  stalltype_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CMessageOpenStallRequest::stalltype() const {
  return stalltype_;
}
inline void CMessageOpenStallRequest::set_stalltype(::google::protobuf::int32 value) {
  _set_bit(2);
  stalltype_ = value;
}

// -------------------------------------------------------------------

// CMessageOpenStallResponse

// optional uint32 EntityID = 1;
inline bool CMessageOpenStallResponse::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageOpenStallResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageOpenStallResponse::entityid() const {
  return entityid_;
}
inline void CMessageOpenStallResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional int32 ErrorCode = 2;
inline bool CMessageOpenStallResponse::has_errorcode() const {
  return _has_bit(1);
}
inline void CMessageOpenStallResponse::clear_errorcode() {
  errorcode_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CMessageOpenStallResponse::errorcode() const {
  return errorcode_;
}
inline void CMessageOpenStallResponse::set_errorcode(::google::protobuf::int32 value) {
  _set_bit(1);
  errorcode_ = value;
}

// -------------------------------------------------------------------

// CMessageProcessReadResult

// optional uint32 RtnCode = 1;
inline bool CMessageProcessReadResult::has_rtncode() const {
  return _has_bit(0);
}
inline void CMessageProcessReadResult::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageProcessReadResult::rtncode() const {
  return rtncode_;
}
inline void CMessageProcessReadResult::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(0);
  rtncode_ = value;
}

// -------------------------------------------------------------------

// CMessageStartStallNotify

// optional uint32 EntityID = 1;
inline bool CMessageStartStallNotify::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageStartStallNotify::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageStartStallNotify::entityid() const {
  return entityid_;
}
inline void CMessageStartStallNotify::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional string AdContent = 2;
inline bool CMessageStartStallNotify::has_adcontent() const {
  return _has_bit(1);
}
inline void CMessageStartStallNotify::clear_adcontent() {
  if (adcontent_ != &_default_adcontent_) {
    adcontent_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& CMessageStartStallNotify::adcontent() const {
  return *adcontent_;
}
inline void CMessageStartStallNotify::set_adcontent(const ::std::string& value) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void CMessageStartStallNotify::set_adcontent(const char* value) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void CMessageStartStallNotify::set_adcontent(const char* value, size_t size) {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageStartStallNotify::mutable_adcontent() {
  _set_bit(1);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  return adcontent_;
}

// optional string StallName = 3;
inline bool CMessageStartStallNotify::has_stallname() const {
  return _has_bit(2);
}
inline void CMessageStartStallNotify::clear_stallname() {
  if (stallname_ != &_default_stallname_) {
    stallname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageStartStallNotify::stallname() const {
  return *stallname_;
}
inline void CMessageStartStallNotify::set_stallname(const ::std::string& value) {
  _set_bit(2);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void CMessageStartStallNotify::set_stallname(const char* value) {
  _set_bit(2);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void CMessageStartStallNotify::set_stallname(const char* value, size_t size) {
  _set_bit(2);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageStartStallNotify::mutable_stallname() {
  _set_bit(2);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  return stallname_;
}

// repeated uint32 StallIndex = 4;
inline int CMessageStartStallNotify::stallindex_size() const {
  return stallindex_.size();
}
inline void CMessageStartStallNotify::clear_stallindex() {
  stallindex_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageStartStallNotify::stallindex() const {
  return stallindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageStartStallNotify::mutable_stallindex() {
  return &stallindex_;
}
inline ::google::protobuf::uint32 CMessageStartStallNotify::stallindex(int index) const {
  return stallindex_.Get(index);
}
inline void CMessageStartStallNotify::set_stallindex(int index, ::google::protobuf::uint32 value) {
  stallindex_.Set(index, value);
}
inline void CMessageStartStallNotify::add_stallindex(::google::protobuf::uint32 value) {
  stallindex_.Add(value);
}

// repeated uint32 Price = 5;
inline int CMessageStartStallNotify::price_size() const {
  return price_.size();
}
inline void CMessageStartStallNotify::clear_price() {
  price_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageStartStallNotify::price() const {
  return price_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageStartStallNotify::mutable_price() {
  return &price_;
}
inline ::google::protobuf::uint32 CMessageStartStallNotify::price(int index) const {
  return price_.Get(index);
}
inline void CMessageStartStallNotify::set_price(int index, ::google::protobuf::uint32 value) {
  price_.Set(index, value);
}
inline void CMessageStartStallNotify::add_price(::google::protobuf::uint32 value) {
  price_.Add(value);
}

// repeated .PBItemObject ItemList = 6;
inline int CMessageStartStallNotify::itemlist_size() const {
  return itemlist_.size();
}
inline void CMessageStartStallNotify::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >&
CMessageStartStallNotify::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >*
CMessageStartStallNotify::mutable_itemlist() {
  return &itemlist_;
}
inline const ::PBItemObject& CMessageStartStallNotify::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::PBItemObject* CMessageStartStallNotify::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::PBItemObject* CMessageStartStallNotify::add_itemlist() {
  return itemlist_.Add();
}

// repeated uint32 PriceType = 7;
inline int CMessageStartStallNotify::pricetype_size() const {
  return pricetype_.size();
}
inline void CMessageStartStallNotify::clear_pricetype() {
  pricetype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageStartStallNotify::pricetype() const {
  return pricetype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageStartStallNotify::mutable_pricetype() {
  return &pricetype_;
}
inline ::google::protobuf::uint32 CMessageStartStallNotify::pricetype(int index) const {
  return pricetype_.Get(index);
}
inline void CMessageStartStallNotify::set_pricetype(int index, ::google::protobuf::uint32 value) {
  pricetype_.Set(index, value);
}
inline void CMessageStartStallNotify::add_pricetype(::google::protobuf::uint32 value) {
  pricetype_.Add(value);
}

// optional int32 StallType = 8;
inline bool CMessageStartStallNotify::has_stalltype() const {
  return _has_bit(7);
}
inline void CMessageStartStallNotify::clear_stalltype() {
  stalltype_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 CMessageStartStallNotify::stalltype() const {
  return stalltype_;
}
inline void CMessageStartStallNotify::set_stalltype(::google::protobuf::int32 value) {
  _set_bit(7);
  stalltype_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdateTextRequest

// optional string AdContent = 1;
inline bool CMessageUpdateTextRequest::has_adcontent() const {
  return _has_bit(0);
}
inline void CMessageUpdateTextRequest::clear_adcontent() {
  if (adcontent_ != &_default_adcontent_) {
    adcontent_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& CMessageUpdateTextRequest::adcontent() const {
  return *adcontent_;
}
inline void CMessageUpdateTextRequest::set_adcontent(const ::std::string& value) {
  _set_bit(0);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void CMessageUpdateTextRequest::set_adcontent(const char* value) {
  _set_bit(0);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void CMessageUpdateTextRequest::set_adcontent(const char* value, size_t size) {
  _set_bit(0);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUpdateTextRequest::mutable_adcontent() {
  _set_bit(0);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  return adcontent_;
}

// optional uint32 Type = 2;
inline bool CMessageUpdateTextRequest::has_type() const {
  return _has_bit(1);
}
inline void CMessageUpdateTextRequest::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdateTextRequest::type() const {
  return type_;
}
inline void CMessageUpdateTextRequest::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional string StallName = 3;
inline bool CMessageUpdateTextRequest::has_stallname() const {
  return _has_bit(2);
}
inline void CMessageUpdateTextRequest::clear_stallname() {
  if (stallname_ != &_default_stallname_) {
    stallname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageUpdateTextRequest::stallname() const {
  return *stallname_;
}
inline void CMessageUpdateTextRequest::set_stallname(const ::std::string& value) {
  _set_bit(2);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void CMessageUpdateTextRequest::set_stallname(const char* value) {
  _set_bit(2);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void CMessageUpdateTextRequest::set_stallname(const char* value, size_t size) {
  _set_bit(2);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUpdateTextRequest::mutable_stallname() {
  _set_bit(2);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  return stallname_;
}

// -------------------------------------------------------------------

// CMessageUpdateTextResponse

// optional uint32 EntityID = 1;
inline bool CMessageUpdateTextResponse::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageUpdateTextResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdateTextResponse::entityid() const {
  return entityid_;
}
inline void CMessageUpdateTextResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 Type = 2;
inline bool CMessageUpdateTextResponse::has_type() const {
  return _has_bit(1);
}
inline void CMessageUpdateTextResponse::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdateTextResponse::type() const {
  return type_;
}
inline void CMessageUpdateTextResponse::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional string AdContent = 3;
inline bool CMessageUpdateTextResponse::has_adcontent() const {
  return _has_bit(2);
}
inline void CMessageUpdateTextResponse::clear_adcontent() {
  if (adcontent_ != &_default_adcontent_) {
    adcontent_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& CMessageUpdateTextResponse::adcontent() const {
  return *adcontent_;
}
inline void CMessageUpdateTextResponse::set_adcontent(const ::std::string& value) {
  _set_bit(2);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void CMessageUpdateTextResponse::set_adcontent(const char* value) {
  _set_bit(2);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(value);
}
inline void CMessageUpdateTextResponse::set_adcontent(const char* value, size_t size) {
  _set_bit(2);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  adcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUpdateTextResponse::mutable_adcontent() {
  _set_bit(2);
  if (adcontent_ == &_default_adcontent_) {
    adcontent_ = new ::std::string;
  }
  return adcontent_;
}

// optional string StallName = 4;
inline bool CMessageUpdateTextResponse::has_stallname() const {
  return _has_bit(3);
}
inline void CMessageUpdateTextResponse::clear_stallname() {
  if (stallname_ != &_default_stallname_) {
    stallname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& CMessageUpdateTextResponse::stallname() const {
  return *stallname_;
}
inline void CMessageUpdateTextResponse::set_stallname(const ::std::string& value) {
  _set_bit(3);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void CMessageUpdateTextResponse::set_stallname(const char* value) {
  _set_bit(3);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(value);
}
inline void CMessageUpdateTextResponse::set_stallname(const char* value, size_t size) {
  _set_bit(3);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  stallname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMessageUpdateTextResponse::mutable_stallname() {
  _set_bit(3);
  if (stallname_ == &_default_stallname_) {
    stallname_ = new ::std::string;
  }
  return stallname_;
}

// -------------------------------------------------------------------

// CMessageUpdateStallRequest

// optional uint32 ItemIndex = 1;
inline bool CMessageUpdateStallRequest::has_itemindex() const {
  return _has_bit(0);
}
inline void CMessageUpdateStallRequest::clear_itemindex() {
  itemindex_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdateStallRequest::itemindex() const {
  return itemindex_;
}
inline void CMessageUpdateStallRequest::set_itemindex(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemindex_ = value;
}

// optional uint32 Type = 2;
inline bool CMessageUpdateStallRequest::has_type() const {
  return _has_bit(1);
}
inline void CMessageUpdateStallRequest::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdateStallRequest::type() const {
  return type_;
}
inline void CMessageUpdateStallRequest::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional uint32 StallIndex = 3;
inline bool CMessageUpdateStallRequest::has_stallindex() const {
  return _has_bit(2);
}
inline void CMessageUpdateStallRequest::clear_stallindex() {
  stallindex_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUpdateStallRequest::stallindex() const {
  return stallindex_;
}
inline void CMessageUpdateStallRequest::set_stallindex(::google::protobuf::uint32 value) {
  _set_bit(2);
  stallindex_ = value;
}

// optional uint32 ItemNum = 4;
inline bool CMessageUpdateStallRequest::has_itemnum() const {
  return _has_bit(3);
}
inline void CMessageUpdateStallRequest::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUpdateStallRequest::itemnum() const {
  return itemnum_;
}
inline void CMessageUpdateStallRequest::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(3);
  itemnum_ = value;
}

// optional uint32 Price = 5;
inline bool CMessageUpdateStallRequest::has_price() const {
  return _has_bit(4);
}
inline void CMessageUpdateStallRequest::clear_price() {
  price_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUpdateStallRequest::price() const {
  return price_;
}
inline void CMessageUpdateStallRequest::set_price(::google::protobuf::uint32 value) {
  _set_bit(4);
  price_ = value;
}

// optional uint32 PriceType = 6;
inline bool CMessageUpdateStallRequest::has_pricetype() const {
  return _has_bit(5);
}
inline void CMessageUpdateStallRequest::clear_pricetype() {
  pricetype_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUpdateStallRequest::pricetype() const {
  return pricetype_;
}
inline void CMessageUpdateStallRequest::set_pricetype(::google::protobuf::uint32 value) {
  _set_bit(5);
  pricetype_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdateStallResponse

// optional uint32 EntityID = 1;
inline bool CMessageUpdateStallResponse::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageUpdateStallResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdateStallResponse::entityid() const {
  return entityid_;
}
inline void CMessageUpdateStallResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 StallIndex = 2;
inline bool CMessageUpdateStallResponse::has_stallindex() const {
  return _has_bit(1);
}
inline void CMessageUpdateStallResponse::clear_stallindex() {
  stallindex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdateStallResponse::stallindex() const {
  return stallindex_;
}
inline void CMessageUpdateStallResponse::set_stallindex(::google::protobuf::uint32 value) {
  _set_bit(1);
  stallindex_ = value;
}

// optional .PBItemObject Item = 3;
inline bool CMessageUpdateStallResponse::has_item() const {
  return _has_bit(2);
}
inline void CMessageUpdateStallResponse::clear_item() {
  if (item_ != NULL) item_->::PBItemObject::Clear();
  _clear_bit(2);
}
inline const ::PBItemObject& CMessageUpdateStallResponse::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBItemObject* CMessageUpdateStallResponse::mutable_item() {
  _set_bit(2);
  if (item_ == NULL) item_ = new ::PBItemObject;
  return item_;
}

// optional uint32 Price = 4;
inline bool CMessageUpdateStallResponse::has_price() const {
  return _has_bit(3);
}
inline void CMessageUpdateStallResponse::clear_price() {
  price_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUpdateStallResponse::price() const {
  return price_;
}
inline void CMessageUpdateStallResponse::set_price(::google::protobuf::uint32 value) {
  _set_bit(3);
  price_ = value;
}

// optional uint32 Type = 5;
inline bool CMessageUpdateStallResponse::has_type() const {
  return _has_bit(4);
}
inline void CMessageUpdateStallResponse::clear_type() {
  type_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageUpdateStallResponse::type() const {
  return type_;
}
inline void CMessageUpdateStallResponse::set_type(::google::protobuf::uint32 value) {
  _set_bit(4);
  type_ = value;
}

// optional uint32 PriceType = 6;
inline bool CMessageUpdateStallResponse::has_pricetype() const {
  return _has_bit(5);
}
inline void CMessageUpdateStallResponse::clear_pricetype() {
  pricetype_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageUpdateStallResponse::pricetype() const {
  return pricetype_;
}
inline void CMessageUpdateStallResponse::set_pricetype(::google::protobuf::uint32 value) {
  _set_bit(5);
  pricetype_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdatePriceRequest

// optional uint32 Price = 1;
inline bool CMessageUpdatePriceRequest::has_price() const {
  return _has_bit(0);
}
inline void CMessageUpdatePriceRequest::clear_price() {
  price_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdatePriceRequest::price() const {
  return price_;
}
inline void CMessageUpdatePriceRequest::set_price(::google::protobuf::uint32 value) {
  _set_bit(0);
  price_ = value;
}

// optional uint32 StallIndex = 2;
inline bool CMessageUpdatePriceRequest::has_stallindex() const {
  return _has_bit(1);
}
inline void CMessageUpdatePriceRequest::clear_stallindex() {
  stallindex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdatePriceRequest::stallindex() const {
  return stallindex_;
}
inline void CMessageUpdatePriceRequest::set_stallindex(::google::protobuf::uint32 value) {
  _set_bit(1);
  stallindex_ = value;
}

// optional uint32 PriceType = 3;
inline bool CMessageUpdatePriceRequest::has_pricetype() const {
  return _has_bit(2);
}
inline void CMessageUpdatePriceRequest::clear_pricetype() {
  pricetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUpdatePriceRequest::pricetype() const {
  return pricetype_;
}
inline void CMessageUpdatePriceRequest::set_pricetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  pricetype_ = value;
}

// -------------------------------------------------------------------

// CMessageUpdatePriceResponse

// optional uint32 Price = 1;
inline bool CMessageUpdatePriceResponse::has_price() const {
  return _has_bit(0);
}
inline void CMessageUpdatePriceResponse::clear_price() {
  price_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageUpdatePriceResponse::price() const {
  return price_;
}
inline void CMessageUpdatePriceResponse::set_price(::google::protobuf::uint32 value) {
  _set_bit(0);
  price_ = value;
}

// optional uint32 StallIndex = 2;
inline bool CMessageUpdatePriceResponse::has_stallindex() const {
  return _has_bit(1);
}
inline void CMessageUpdatePriceResponse::clear_stallindex() {
  stallindex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageUpdatePriceResponse::stallindex() const {
  return stallindex_;
}
inline void CMessageUpdatePriceResponse::set_stallindex(::google::protobuf::uint32 value) {
  _set_bit(1);
  stallindex_ = value;
}

// optional uint32 EntityID = 3;
inline bool CMessageUpdatePriceResponse::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageUpdatePriceResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageUpdatePriceResponse::entityid() const {
  return entityid_;
}
inline void CMessageUpdatePriceResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// optional uint32 PriceType = 4;
inline bool CMessageUpdatePriceResponse::has_pricetype() const {
  return _has_bit(3);
}
inline void CMessageUpdatePriceResponse::clear_pricetype() {
  pricetype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageUpdatePriceResponse::pricetype() const {
  return pricetype_;
}
inline void CMessageUpdatePriceResponse::set_pricetype(::google::protobuf::uint32 value) {
  _set_bit(3);
  pricetype_ = value;
}

// -------------------------------------------------------------------

// CMessageCloseStallRequest

// optional uint32 IsSaved = 1;
inline bool CMessageCloseStallRequest::has_issaved() const {
  return _has_bit(0);
}
inline void CMessageCloseStallRequest::clear_issaved() {
  issaved_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCloseStallRequest::issaved() const {
  return issaved_;
}
inline void CMessageCloseStallRequest::set_issaved(::google::protobuf::uint32 value) {
  _set_bit(0);
  issaved_ = value;
}

// -------------------------------------------------------------------

// CMessageCloseStallResponse

// optional uint32 EntityID = 1;
inline bool CMessageCloseStallResponse::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageCloseStallResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCloseStallResponse::entityid() const {
  return entityid_;
}
inline void CMessageCloseStallResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageClickStallRequest

// optional uint32 EntityID = 1;
inline bool CMessageClickStallRequest::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageClickStallRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageClickStallRequest::entityid() const {
  return entityid_;
}
inline void CMessageClickStallRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageClickStallResponse

// repeated .PBItemObject ItemList = 1;
inline int CMessageClickStallResponse::itemlist_size() const {
  return itemlist_.size();
}
inline void CMessageClickStallResponse::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemObject >&
CMessageClickStallResponse::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemObject >*
CMessageClickStallResponse::mutable_itemlist() {
  return &itemlist_;
}
inline const ::PBItemObject& CMessageClickStallResponse::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::PBItemObject* CMessageClickStallResponse::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::PBItemObject* CMessageClickStallResponse::add_itemlist() {
  return itemlist_.Add();
}

// repeated uint32 StallIndex = 2;
inline int CMessageClickStallResponse::stallindex_size() const {
  return stallindex_.size();
}
inline void CMessageClickStallResponse::clear_stallindex() {
  stallindex_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageClickStallResponse::stallindex() const {
  return stallindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageClickStallResponse::mutable_stallindex() {
  return &stallindex_;
}
inline ::google::protobuf::uint32 CMessageClickStallResponse::stallindex(int index) const {
  return stallindex_.Get(index);
}
inline void CMessageClickStallResponse::set_stallindex(int index, ::google::protobuf::uint32 value) {
  stallindex_.Set(index, value);
}
inline void CMessageClickStallResponse::add_stallindex(::google::protobuf::uint32 value) {
  stallindex_.Add(value);
}

// optional uint32 EntityID = 3;
inline bool CMessageClickStallResponse::has_entityid() const {
  return _has_bit(2);
}
inline void CMessageClickStallResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageClickStallResponse::entityid() const {
  return entityid_;
}
inline void CMessageClickStallResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(2);
  entityid_ = value;
}

// repeated uint32 Price = 4;
inline int CMessageClickStallResponse::price_size() const {
  return price_.size();
}
inline void CMessageClickStallResponse::clear_price() {
  price_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageClickStallResponse::price() const {
  return price_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageClickStallResponse::mutable_price() {
  return &price_;
}
inline ::google::protobuf::uint32 CMessageClickStallResponse::price(int index) const {
  return price_.Get(index);
}
inline void CMessageClickStallResponse::set_price(int index, ::google::protobuf::uint32 value) {
  price_.Set(index, value);
}
inline void CMessageClickStallResponse::add_price(::google::protobuf::uint32 value) {
  price_.Add(value);
}

// repeated uint32 PriceType = 5;
inline int CMessageClickStallResponse::pricetype_size() const {
  return pricetype_.size();
}
inline void CMessageClickStallResponse::clear_pricetype() {
  pricetype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageClickStallResponse::pricetype() const {
  return pricetype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageClickStallResponse::mutable_pricetype() {
  return &pricetype_;
}
inline ::google::protobuf::uint32 CMessageClickStallResponse::pricetype(int index) const {
  return pricetype_.Get(index);
}
inline void CMessageClickStallResponse::set_pricetype(int index, ::google::protobuf::uint32 value) {
  pricetype_.Set(index, value);
}
inline void CMessageClickStallResponse::add_pricetype(::google::protobuf::uint32 value) {
  pricetype_.Add(value);
}

// -------------------------------------------------------------------

// CMessageBuyGoodsRequest

// optional uint32 Price = 1;
inline bool CMessageBuyGoodsRequest::has_price() const {
  return _has_bit(0);
}
inline void CMessageBuyGoodsRequest::clear_price() {
  price_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsRequest::price() const {
  return price_;
}
inline void CMessageBuyGoodsRequest::set_price(::google::protobuf::uint32 value) {
  _set_bit(0);
  price_ = value;
}

// optional uint32 EntityID = 2;
inline bool CMessageBuyGoodsRequest::has_entityid() const {
  return _has_bit(1);
}
inline void CMessageBuyGoodsRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsRequest::entityid() const {
  return entityid_;
}
inline void CMessageBuyGoodsRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  entityid_ = value;
}

// optional uint32 Number = 3;
inline bool CMessageBuyGoodsRequest::has_number() const {
  return _has_bit(2);
}
inline void CMessageBuyGoodsRequest::clear_number() {
  number_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsRequest::number() const {
  return number_;
}
inline void CMessageBuyGoodsRequest::set_number(::google::protobuf::uint32 value) {
  _set_bit(2);
  number_ = value;
}

// optional uint32 StallIndex = 4;
inline bool CMessageBuyGoodsRequest::has_stallindex() const {
  return _has_bit(3);
}
inline void CMessageBuyGoodsRequest::clear_stallindex() {
  stallindex_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsRequest::stallindex() const {
  return stallindex_;
}
inline void CMessageBuyGoodsRequest::set_stallindex(::google::protobuf::uint32 value) {
  _set_bit(3);
  stallindex_ = value;
}

// optional uint32 ItemID = 5;
inline bool CMessageBuyGoodsRequest::has_itemid() const {
  return _has_bit(4);
}
inline void CMessageBuyGoodsRequest::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsRequest::itemid() const {
  return itemid_;
}
inline void CMessageBuyGoodsRequest::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemid_ = value;
}

// optional uint32 PriceType = 6;
inline bool CMessageBuyGoodsRequest::has_pricetype() const {
  return _has_bit(5);
}
inline void CMessageBuyGoodsRequest::clear_pricetype() {
  pricetype_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsRequest::pricetype() const {
  return pricetype_;
}
inline void CMessageBuyGoodsRequest::set_pricetype(::google::protobuf::uint32 value) {
  _set_bit(5);
  pricetype_ = value;
}

// -------------------------------------------------------------------

// CMessageBuyGoodsResponse

// optional uint32 EntityID = 1;
inline bool CMessageBuyGoodsResponse::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageBuyGoodsResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsResponse::entityid() const {
  return entityid_;
}
inline void CMessageBuyGoodsResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// optional uint32 StallIndex = 2;
inline bool CMessageBuyGoodsResponse::has_stallindex() const {
  return _has_bit(1);
}
inline void CMessageBuyGoodsResponse::clear_stallindex() {
  stallindex_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsResponse::stallindex() const {
  return stallindex_;
}
inline void CMessageBuyGoodsResponse::set_stallindex(::google::protobuf::uint32 value) {
  _set_bit(1);
  stallindex_ = value;
}

// optional uint32 Number = 3;
inline bool CMessageBuyGoodsResponse::has_number() const {
  return _has_bit(2);
}
inline void CMessageBuyGoodsResponse::clear_number() {
  number_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsResponse::number() const {
  return number_;
}
inline void CMessageBuyGoodsResponse::set_number(::google::protobuf::uint32 value) {
  _set_bit(2);
  number_ = value;
}

// optional uint32 BuyerEntityID = 4;
inline bool CMessageBuyGoodsResponse::has_buyerentityid() const {
  return _has_bit(3);
}
inline void CMessageBuyGoodsResponse::clear_buyerentityid() {
  buyerentityid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CMessageBuyGoodsResponse::buyerentityid() const {
  return buyerentityid_;
}
inline void CMessageBuyGoodsResponse::set_buyerentityid(::google::protobuf::uint32 value) {
  _set_bit(3);
  buyerentityid_ = value;
}

// -------------------------------------------------------------------

// CMessageCloseStallDlgRequest

// optional uint32 EntityID = 1;
inline bool CMessageCloseStallDlgRequest::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageCloseStallDlgRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageCloseStallDlgRequest::entityid() const {
  return entityid_;
}
inline void CMessageCloseStallDlgRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// -------------------------------------------------------------------

// PBStallRecord

// optional string MasterName = 1;
inline bool PBStallRecord::has_mastername() const {
  return _has_bit(0);
}
inline void PBStallRecord::clear_mastername() {
  if (mastername_ != &_default_mastername_) {
    mastername_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBStallRecord::mastername() const {
  return *mastername_;
}
inline void PBStallRecord::set_mastername(const ::std::string& value) {
  _set_bit(0);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
}
inline void PBStallRecord::set_mastername(const char* value) {
  _set_bit(0);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(value);
}
inline void PBStallRecord::set_mastername(const char* value, size_t size) {
  _set_bit(0);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  mastername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBStallRecord::mutable_mastername() {
  _set_bit(0);
  if (mastername_ == &_default_mastername_) {
    mastername_ = new ::std::string;
  }
  return mastername_;
}

// optional string BuyerName = 2;
inline bool PBStallRecord::has_buyername() const {
  return _has_bit(1);
}
inline void PBStallRecord::clear_buyername() {
  if (buyername_ != &_default_buyername_) {
    buyername_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBStallRecord::buyername() const {
  return *buyername_;
}
inline void PBStallRecord::set_buyername(const ::std::string& value) {
  _set_bit(1);
  if (buyername_ == &_default_buyername_) {
    buyername_ = new ::std::string;
  }
  buyername_->assign(value);
}
inline void PBStallRecord::set_buyername(const char* value) {
  _set_bit(1);
  if (buyername_ == &_default_buyername_) {
    buyername_ = new ::std::string;
  }
  buyername_->assign(value);
}
inline void PBStallRecord::set_buyername(const char* value, size_t size) {
  _set_bit(1);
  if (buyername_ == &_default_buyername_) {
    buyername_ = new ::std::string;
  }
  buyername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBStallRecord::mutable_buyername() {
  _set_bit(1);
  if (buyername_ == &_default_buyername_) {
    buyername_ = new ::std::string;
  }
  return buyername_;
}

// optional uint32 ItemID = 3;
inline bool PBStallRecord::has_itemid() const {
  return _has_bit(2);
}
inline void PBStallRecord::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBStallRecord::itemid() const {
  return itemid_;
}
inline void PBStallRecord::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(2);
  itemid_ = value;
}

// optional uint32 Number = 4;
inline bool PBStallRecord::has_number() const {
  return _has_bit(3);
}
inline void PBStallRecord::clear_number() {
  number_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBStallRecord::number() const {
  return number_;
}
inline void PBStallRecord::set_number(::google::protobuf::uint32 value) {
  _set_bit(3);
  number_ = value;
}

// optional uint32 Price = 5;
inline bool PBStallRecord::has_price() const {
  return _has_bit(4);
}
inline void PBStallRecord::clear_price() {
  price_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBStallRecord::price() const {
  return price_;
}
inline void PBStallRecord::set_price(::google::protobuf::uint32 value) {
  _set_bit(4);
  price_ = value;
}

// optional uint32 Time = 6;
inline bool PBStallRecord::has_time() const {
  return _has_bit(5);
}
inline void PBStallRecord::clear_time() {
  time_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBStallRecord::time() const {
  return time_;
}
inline void PBStallRecord::set_time(::google::protobuf::uint32 value) {
  _set_bit(5);
  time_ = value;
}

// optional uint32 Action = 7;
inline bool PBStallRecord::has_action() const {
  return _has_bit(6);
}
inline void PBStallRecord::clear_action() {
  action_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBStallRecord::action() const {
  return action_;
}
inline void PBStallRecord::set_action(::google::protobuf::uint32 value) {
  _set_bit(6);
  action_ = value;
}

// optional uint32 Tax = 8;
inline bool PBStallRecord::has_tax() const {
  return _has_bit(7);
}
inline void PBStallRecord::clear_tax() {
  tax_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBStallRecord::tax() const {
  return tax_;
}
inline void PBStallRecord::set_tax(::google::protobuf::uint32 value) {
  _set_bit(7);
  tax_ = value;
}

// optional uint32 PriceType = 9;
inline bool PBStallRecord::has_pricetype() const {
  return _has_bit(8);
}
inline void PBStallRecord::clear_pricetype() {
  pricetype_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBStallRecord::pricetype() const {
  return pricetype_;
}
inline void PBStallRecord::set_pricetype(::google::protobuf::uint32 value) {
  _set_bit(8);
  pricetype_ = value;
}

// optional uint32 Fee = 10;
inline bool PBStallRecord::has_fee() const {
  return _has_bit(9);
}
inline void PBStallRecord::clear_fee() {
  fee_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBStallRecord::fee() const {
  return fee_;
}
inline void PBStallRecord::set_fee(::google::protobuf::uint32 value) {
  _set_bit(9);
  fee_ = value;
}

// -------------------------------------------------------------------

// CMessageStallGetRecordRequest

// optional uint32 EntityID = 1;
inline bool CMessageStallGetRecordRequest::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageStallGetRecordRequest::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageStallGetRecordRequest::entityid() const {
  return entityid_;
}
inline void CMessageStallGetRecordRequest::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// -------------------------------------------------------------------

// CMessageStallGetRecordResponse

// optional uint32 EntityID = 1;
inline bool CMessageStallGetRecordResponse::has_entityid() const {
  return _has_bit(0);
}
inline void CMessageStallGetRecordResponse::clear_entityid() {
  entityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageStallGetRecordResponse::entityid() const {
  return entityid_;
}
inline void CMessageStallGetRecordResponse::set_entityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  entityid_ = value;
}

// repeated .PBStallRecord Record = 2;
inline int CMessageStallGetRecordResponse::record_size() const {
  return record_.size();
}
inline void CMessageStallGetRecordResponse::clear_record() {
  record_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBStallRecord >&
CMessageStallGetRecordResponse::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBStallRecord >*
CMessageStallGetRecordResponse::mutable_record() {
  return &record_;
}
inline const ::PBStallRecord& CMessageStallGetRecordResponse::record(int index) const {
  return record_.Get(index);
}
inline ::PBStallRecord* CMessageStallGetRecordResponse::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::PBStallRecord* CMessageStallGetRecordResponse::add_record() {
  return record_.Add();
}

// -------------------------------------------------------------------

// CMessageStallCleanRecordRequest

// -------------------------------------------------------------------

// CMessageStallCleanRecordResponse

// optional uint32 RtnCode = 1;
inline bool CMessageStallCleanRecordResponse::has_rtncode() const {
  return _has_bit(0);
}
inline void CMessageStallCleanRecordResponse::clear_rtncode() {
  rtncode_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CMessageStallCleanRecordResponse::rtncode() const {
  return rtncode_;
}
inline void CMessageStallCleanRecordResponse::set_rtncode(::google::protobuf::uint32 value) {
  _set_bit(0);
  rtncode_ = value;
}

#endif  // PROTOBUF_stallmessage_5fpb_2ehxx__INCLUDED
