// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_template_5fpb_2ehxx__INCLUDED
#define PROTOBUF_template_5fpb_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_template_5fpb_2ehxx();
void protobuf_AssignDesc_template_5fpb_2ehxx();
void protobuf_ShutdownFile_template_5fpb_2ehxx();

class PBItemSet;
class PBConfigTable;
class PBSkillSet;
class PBEquipSet;
class PBTemplate;
class PBHandinEncourage;
class PBHandinTable;
class PBItemBase;
class PBItemReturn;
class PBItemSkillBook;
class PBItemBindStone;
class PBItemScroll;
class PBItemCall;
class PBItemCard;
class PBItemTeleport;
class PBItemReturnPaper;
class PBItemTeleSymbol;
class PBItemStove;
class PBItemPetEgg;
class PBItemPetFood;
class PBItemRelife;
class PBItemSkill;
class PBItemBook;
class PBItemUpg;
class PBItemUpgLuck;
class PBItemUpgLeast;
class PBItemRemove;
class PBItemChange;
class PBItemQuestion;
class PBItemTask;
class PBItemStuff;
class PBItemExp;
class PBItemChangeCamp;
class PBComRuneUnit;
class PBComRuneConfig;
class PBItemShout;
class PBItemAutoShout;
class PBItemPhysic;
class PBItemHorse;
class PBStuff;
class PBProduct;
class PBItemBluePrint;
class PBItemRune;
class PBItemJewel;
class PBItemYuanBug;
class PBItemYuanEgg;
class PBItemSequence;
class PBEquipment;
class PBEquipFashion;
class PBEquipWeapon;
class PBEquipArmor;
class PBTemplateProperty;
class PBPropertyPercent;
class PBTemplatePropertyTable;
class PBMetier;
class PBNpc;
class PBSellItem;
class PBSellTable;
class PBTotalDrop;
class PBDropItem;
class PBDropTable;
class PBNPCCollect;
class PBOgreProperty;
class PBBox_Click;
class PBOgreBox;
class PBShowPet;
class PBBattlePet;
class PBMineOutput;
class PBMineOgre;
class PBMine;
class PBSkillTreeNode;
class PBSkillTree;
class PBCost;
class PBUseCondition;
class PBSkill;
class PBAureoleType;
class PBAureoleSkill;
class PBNormalSkill;
class PBTrapSkill;
class PBBuffFunc;
class PBBuff;
class PBLevelExp;
class PBSingleMoneyLmt;
class PBLevelMoneyLmt;
class PBPetLevelExp;
class PBProduceExp;
class PBUpg;
class PBEquipUpg;
class PBSuitProducer;
class PBSuitNormal;
class PBSpell;
class PBProduceEquip;
class PBProducePhysic;
class PBOpenSlot;
class PBCompose;
class PBMultiCompose;
class PBTeleTable;
class PBData;
class PBPetData;
class PBSummonBeast;
class PBBeginner;
class PBDropLevel;
class PBOgreTran;
class PBMetierPro;
class PBLevelProperty;
class PBHonorToExp;
class PBHonorObtain;
class PBDiploidTable;
class PBRedStone;
class PBRedStoneExpTable;
class PBReliveTable;
class PBQuestionExp;
class PBBindChargeTable;
class PBMinePos;
class PBMineEvent;
class PBItemMineMap;
class PBRelatively_Pos;
class PBBlock;
class PBPKDrop;
class PBPKValueTable;
class PBItemToken;
class PBItemKitBag;
class PBItemGiftBag;
class PBItemAdapter;
class PBTplHierogram;
class PBStep;
class PBTitle;
class PBTitleManager;
class PBTplBuffImmunity;
class PBTemplateTalent;
class PBMagicWeaponProIncValue;
class PBTemplateLifeSkill;
class PBDecompondTable;
class PBCTemplateDecompound;
class PBTplMagicWeaponProIncTable;
class SingleMWDecomposeData;
class PBMagicWeaponDecomposeTable;
class PBMagicWeaponQuickUpTable;
class PBItemMagicWeapon;
class PBSingleSkillStorage;
class PBItemMagicStone;
class PBLifeSkillScroll;
class PBSkillStorage;
class PBSkillBoxProperty;
class PBMagicWeaponSkillBoxProTable;
class PBMWProJudgeEffTable;
class PBMWProJudgeSpirTable;
class PBMWLevelQuotietyTab;
class PBFuncItem;
class PBEquipExchangeTable;
class PBMultiBuffEvent;
class PBMultiBuff;
class PBCDGroupTable;
class PBMetierAp;
class PBApConfig;
class PBLightTable;
class PBWizardTable;
class PBJudgeLevel;
class PBJudgeConfig;
class PBPaperValue;
class PBItemRedPaper;
class PBTrend;
class PBAward;
class PBAchieveAward;
class PBPower;
class PBOfficial;
class PBOfficialTable;
class PBConstructExp;
class PBAddPKTable;
class PBMapTable;
class PBMultiAttackTable;
class PBItemVip;
class PBItemClean;
class PBAwardInfo;
class PBLeagueItem;
class PBLeagueBag;
class PBMatrixTable;
class PBWeddingInfo;
class PBKeepsnakeInfo;
class PBTemplateMarriageConfig;
class PBInvitation;
class ProGressInfo;
class PBProGressConfig;
class PBSysInvitation;
class PBCount;
class PBCountTable;
class PBActivityConfig;
class PBItemRefresh;
class PBItemSummon;
class PBDirectTable;
class PBItemDirect;
class PBItemGetStar;
class PBWarDate;
class PBTax;
class PBWorldBattleConfig;
class PBDegreeInfo;
class PBItemInfo;
class PBItemAutoCollect;
class PBFangCunTreeNode;
class PBFangCunTree;
class PBItemBlackPills;
class PBStage;
class PBTemplateTalentStage;
class PBItemExpContainer;
class PBItemExpPills;
class PBItemExpTome;
class PBAccuseConfig;
class PBGlobalMapConfig;
class PBCorpsBOSS;
class PBOffLineExpConfig;
class PBRepeFameTable;
class PBCastingSpiritTable;
class PBSpiritItem;

// ===================================================================

class PBItemSet : public ::google::protobuf::Message {
 public:
  PBItemSet();
  virtual ~PBItemSet();
  
  PBItemSet(const PBItemSet& from);
  
  inline PBItemSet& operator=(const PBItemSet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemSet& default_instance();
  void Swap(PBItemSet* other);
  
  // implements Message ----------------------------------------------
  
  PBItemSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemSet& from);
  void MergeFrom(const PBItemSet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBItemBase Item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemBase >& item() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemBase >* mutable_item();
  inline const ::PBItemBase& item(int index) const;
  inline ::PBItemBase* mutable_item(int index);
  inline ::PBItemBase* add_item();
  
  // repeated .PBItemBindStone BindStone = 2;
  inline int bindstone_size() const;
  inline void clear_bindstone();
  static const int kBindStoneFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemBindStone >& bindstone() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemBindStone >* mutable_bindstone();
  inline const ::PBItemBindStone& bindstone(int index) const;
  inline ::PBItemBindStone* mutable_bindstone(int index);
  inline ::PBItemBindStone* add_bindstone();
  
  // repeated .PBItemBluePrint BluePrint = 3;
  inline int blueprint_size() const;
  inline void clear_blueprint();
  static const int kBluePrintFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemBluePrint >& blueprint() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemBluePrint >* mutable_blueprint();
  inline const ::PBItemBluePrint& blueprint(int index) const;
  inline ::PBItemBluePrint* mutable_blueprint(int index);
  inline ::PBItemBluePrint* add_blueprint();
  
  // repeated .PBItemBook ItemBook = 4;
  inline int itembook_size() const;
  inline void clear_itembook();
  static const int kItemBookFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemBook >& itembook() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemBook >* mutable_itembook();
  inline const ::PBItemBook& itembook(int index) const;
  inline ::PBItemBook* mutable_itembook(int index);
  inline ::PBItemBook* add_itembook();
  
  // repeated .PBItemCard ItemCard = 5;
  inline int itemcard_size() const;
  inline void clear_itemcard();
  static const int kItemCardFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemCard >& itemcard() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemCard >* mutable_itemcard();
  inline const ::PBItemCard& itemcard(int index) const;
  inline ::PBItemCard* mutable_itemcard(int index);
  inline ::PBItemCard* add_itemcard();
  
  // repeated .PBItemExp ItemExp = 6;
  inline int itemexp_size() const;
  inline void clear_itemexp();
  static const int kItemExpFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemExp >& itemexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemExp >* mutable_itemexp();
  inline const ::PBItemExp& itemexp(int index) const;
  inline ::PBItemExp* mutable_itemexp(int index);
  inline ::PBItemExp* add_itemexp();
  
  // repeated .PBItemHorse Horse = 7;
  inline int horse_size() const;
  inline void clear_horse();
  static const int kHorseFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemHorse >& horse() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemHorse >* mutable_horse();
  inline const ::PBItemHorse& horse(int index) const;
  inline ::PBItemHorse* mutable_horse(int index);
  inline ::PBItemHorse* add_horse();
  
  // repeated .PBItemJewel Jewel = 8;
  inline int jewel_size() const;
  inline void clear_jewel();
  static const int kJewelFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemJewel >& jewel() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemJewel >* mutable_jewel();
  inline const ::PBItemJewel& jewel(int index) const;
  inline ::PBItemJewel* mutable_jewel(int index);
  inline ::PBItemJewel* add_jewel();
  
  // repeated .PBItemPetEgg PetEgg = 9;
  inline int petegg_size() const;
  inline void clear_petegg();
  static const int kPetEggFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemPetEgg >& petegg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemPetEgg >* mutable_petegg();
  inline const ::PBItemPetEgg& petegg(int index) const;
  inline ::PBItemPetEgg* mutable_petegg(int index);
  inline ::PBItemPetEgg* add_petegg();
  
  // repeated .PBItemPetFood PetFood = 10;
  inline int petfood_size() const;
  inline void clear_petfood();
  static const int kPetFoodFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemPetFood >& petfood() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemPetFood >* mutable_petfood();
  inline const ::PBItemPetFood& petfood(int index) const;
  inline ::PBItemPetFood* mutable_petfood(int index);
  inline ::PBItemPetFood* add_petfood();
  
  // repeated .PBItemPhysic Physic = 11;
  inline int physic_size() const;
  inline void clear_physic();
  static const int kPhysicFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemPhysic >& physic() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemPhysic >* mutable_physic();
  inline const ::PBItemPhysic& physic(int index) const;
  inline ::PBItemPhysic* mutable_physic(int index);
  inline ::PBItemPhysic* add_physic();
  
  // repeated .PBItemQuestion Question = 12;
  inline int question_size() const;
  inline void clear_question();
  static const int kQuestionFieldNumber = 12;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemQuestion >& question() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemQuestion >* mutable_question();
  inline const ::PBItemQuestion& question(int index) const;
  inline ::PBItemQuestion* mutable_question(int index);
  inline ::PBItemQuestion* add_question();
  
  // repeated .PBItemRelife Relife = 13;
  inline int relife_size() const;
  inline void clear_relife();
  static const int kRelifeFieldNumber = 13;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemRelife >& relife() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemRelife >* mutable_relife();
  inline const ::PBItemRelife& relife(int index) const;
  inline ::PBItemRelife* mutable_relife(int index);
  inline ::PBItemRelife* add_relife();
  
  // repeated .PBItemReturn Return = 14;
  inline int return__size() const;
  inline void clear_return_();
  static const int kReturnFieldNumber = 14;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemReturn >& return_() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemReturn >* mutable_return_();
  inline const ::PBItemReturn& return_(int index) const;
  inline ::PBItemReturn* mutable_return_(int index);
  inline ::PBItemReturn* add_return_();
  
  // repeated .PBItemReturnPaper ReturnPaper = 15;
  inline int returnpaper_size() const;
  inline void clear_returnpaper();
  static const int kReturnPaperFieldNumber = 15;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemReturnPaper >& returnpaper() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemReturnPaper >* mutable_returnpaper();
  inline const ::PBItemReturnPaper& returnpaper(int index) const;
  inline ::PBItemReturnPaper* mutable_returnpaper(int index);
  inline ::PBItemReturnPaper* add_returnpaper();
  
  // repeated .PBItemRune Rune = 16;
  inline int rune_size() const;
  inline void clear_rune();
  static const int kRuneFieldNumber = 16;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemRune >& rune() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemRune >* mutable_rune();
  inline const ::PBItemRune& rune(int index) const;
  inline ::PBItemRune* mutable_rune(int index);
  inline ::PBItemRune* add_rune();
  
  // repeated .PBItemScroll Scroll = 17;
  inline int scroll_size() const;
  inline void clear_scroll();
  static const int kScrollFieldNumber = 17;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemScroll >& scroll() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemScroll >* mutable_scroll();
  inline const ::PBItemScroll& scroll(int index) const;
  inline ::PBItemScroll* mutable_scroll(int index);
  inline ::PBItemScroll* add_scroll();
  
  // repeated .PBItemSequence Sequence = 18;
  inline int sequence_size() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 18;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemSequence >& sequence() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemSequence >* mutable_sequence();
  inline const ::PBItemSequence& sequence(int index) const;
  inline ::PBItemSequence* mutable_sequence(int index);
  inline ::PBItemSequence* add_sequence();
  
  // repeated .PBItemShout Shout = 19;
  inline int shout_size() const;
  inline void clear_shout();
  static const int kShoutFieldNumber = 19;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemShout >& shout() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemShout >* mutable_shout();
  inline const ::PBItemShout& shout(int index) const;
  inline ::PBItemShout* mutable_shout(int index);
  inline ::PBItemShout* add_shout();
  
  // repeated .PBItemSkill ItemSkill = 20;
  inline int itemskill_size() const;
  inline void clear_itemskill();
  static const int kItemSkillFieldNumber = 20;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemSkill >& itemskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemSkill >* mutable_itemskill();
  inline const ::PBItemSkill& itemskill(int index) const;
  inline ::PBItemSkill* mutable_itemskill(int index);
  inline ::PBItemSkill* add_itemskill();
  
  // repeated .PBItemStove Stove = 21;
  inline int stove_size() const;
  inline void clear_stove();
  static const int kStoveFieldNumber = 21;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemStove >& stove() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemStove >* mutable_stove();
  inline const ::PBItemStove& stove(int index) const;
  inline ::PBItemStove* mutable_stove(int index);
  inline ::PBItemStove* add_stove();
  
  // repeated .PBItemStuff Stuff = 22;
  inline int stuff_size() const;
  inline void clear_stuff();
  static const int kStuffFieldNumber = 22;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemStuff >& stuff() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemStuff >* mutable_stuff();
  inline const ::PBItemStuff& stuff(int index) const;
  inline ::PBItemStuff* mutable_stuff(int index);
  inline ::PBItemStuff* add_stuff();
  
  // repeated .PBItemTask ItemTask = 23;
  inline int itemtask_size() const;
  inline void clear_itemtask();
  static const int kItemTaskFieldNumber = 23;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemTask >& itemtask() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemTask >* mutable_itemtask();
  inline const ::PBItemTask& itemtask(int index) const;
  inline ::PBItemTask* mutable_itemtask(int index);
  inline ::PBItemTask* add_itemtask();
  
  // repeated .PBItemTeleport Teleport = 24;
  inline int teleport_size() const;
  inline void clear_teleport();
  static const int kTeleportFieldNumber = 24;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemTeleport >& teleport() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemTeleport >* mutable_teleport();
  inline const ::PBItemTeleport& teleport(int index) const;
  inline ::PBItemTeleport* mutable_teleport(int index);
  inline ::PBItemTeleport* add_teleport();
  
  // repeated .PBItemTeleSymbol TeleSymbol = 25;
  inline int telesymbol_size() const;
  inline void clear_telesymbol();
  static const int kTeleSymbolFieldNumber = 25;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemTeleSymbol >& telesymbol() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemTeleSymbol >* mutable_telesymbol();
  inline const ::PBItemTeleSymbol& telesymbol(int index) const;
  inline ::PBItemTeleSymbol* mutable_telesymbol(int index);
  inline ::PBItemTeleSymbol* add_telesymbol();
  
  // repeated .PBItemUpgLeast UpgLeast = 26;
  inline int upgleast_size() const;
  inline void clear_upgleast();
  static const int kUpgLeastFieldNumber = 26;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemUpgLeast >& upgleast() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemUpgLeast >* mutable_upgleast();
  inline const ::PBItemUpgLeast& upgleast(int index) const;
  inline ::PBItemUpgLeast* mutable_upgleast(int index);
  inline ::PBItemUpgLeast* add_upgleast();
  
  // repeated .PBItemUpgLuck UpgLuck = 27;
  inline int upgluck_size() const;
  inline void clear_upgluck();
  static const int kUpgLuckFieldNumber = 27;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemUpgLuck >& upgluck() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemUpgLuck >* mutable_upgluck();
  inline const ::PBItemUpgLuck& upgluck(int index) const;
  inline ::PBItemUpgLuck* mutable_upgluck(int index);
  inline ::PBItemUpgLuck* add_upgluck();
  
  // repeated .PBItemYuanBug YuanBug = 28;
  inline int yuanbug_size() const;
  inline void clear_yuanbug();
  static const int kYuanBugFieldNumber = 28;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemYuanBug >& yuanbug() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemYuanBug >* mutable_yuanbug();
  inline const ::PBItemYuanBug& yuanbug(int index) const;
  inline ::PBItemYuanBug* mutable_yuanbug(int index);
  inline ::PBItemYuanBug* add_yuanbug();
  
  // repeated .PBItemYuanEgg YuanEgg = 29;
  inline int yuanegg_size() const;
  inline void clear_yuanegg();
  static const int kYuanEggFieldNumber = 29;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemYuanEgg >& yuanegg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemYuanEgg >* mutable_yuanegg();
  inline const ::PBItemYuanEgg& yuanegg(int index) const;
  inline ::PBItemYuanEgg* mutable_yuanegg(int index);
  inline ::PBItemYuanEgg* add_yuanegg();
  
  // repeated .PBRedStone RedStone = 30;
  inline int redstone_size() const;
  inline void clear_redstone();
  static const int kRedStoneFieldNumber = 30;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRedStone >& redstone() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRedStone >* mutable_redstone();
  inline const ::PBRedStone& redstone(int index) const;
  inline ::PBRedStone* mutable_redstone(int index);
  inline ::PBRedStone* add_redstone();
  
  // repeated .PBItemAutoShout AutoShout = 31;
  inline int autoshout_size() const;
  inline void clear_autoshout();
  static const int kAutoShoutFieldNumber = 31;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemAutoShout >& autoshout() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemAutoShout >* mutable_autoshout();
  inline const ::PBItemAutoShout& autoshout(int index) const;
  inline ::PBItemAutoShout* mutable_autoshout(int index);
  inline ::PBItemAutoShout* add_autoshout();
  
  // repeated .PBItemKitBag KitBag = 32;
  inline int kitbag_size() const;
  inline void clear_kitbag();
  static const int kKitBagFieldNumber = 32;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemKitBag >& kitbag() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemKitBag >* mutable_kitbag();
  inline const ::PBItemKitBag& kitbag(int index) const;
  inline ::PBItemKitBag* mutable_kitbag(int index);
  inline ::PBItemKitBag* add_kitbag();
  
  // repeated .PBItemUpg ItemUpg = 33;
  inline int itemupg_size() const;
  inline void clear_itemupg();
  static const int kItemUpgFieldNumber = 33;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemUpg >& itemupg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemUpg >* mutable_itemupg();
  inline const ::PBItemUpg& itemupg(int index) const;
  inline ::PBItemUpg* mutable_itemupg(int index);
  inline ::PBItemUpg* add_itemupg();
  
  // repeated .PBItemRemove ItemRemove = 34;
  inline int itemremove_size() const;
  inline void clear_itemremove();
  static const int kItemRemoveFieldNumber = 34;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemRemove >& itemremove() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemRemove >* mutable_itemremove();
  inline const ::PBItemRemove& itemremove(int index) const;
  inline ::PBItemRemove* mutable_itemremove(int index);
  inline ::PBItemRemove* add_itemremove();
  
  // repeated .PBItemChange ItemChange = 35;
  inline int itemchange_size() const;
  inline void clear_itemchange();
  static const int kItemChangeFieldNumber = 35;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemChange >& itemchange() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemChange >* mutable_itemchange();
  inline const ::PBItemChange& itemchange(int index) const;
  inline ::PBItemChange* mutable_itemchange(int index);
  inline ::PBItemChange* add_itemchange();
  
  // repeated .PBItemAdapter ItemAdapter = 36;
  inline int itemadapter_size() const;
  inline void clear_itemadapter();
  static const int kItemAdapterFieldNumber = 36;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemAdapter >& itemadapter() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemAdapter >* mutable_itemadapter();
  inline const ::PBItemAdapter& itemadapter(int index) const;
  inline ::PBItemAdapter* mutable_itemadapter(int index);
  inline ::PBItemAdapter* add_itemadapter();
  
  // repeated .PBItemMineMap MineMap = 37;
  inline int minemap_size() const;
  inline void clear_minemap();
  static const int kMineMapFieldNumber = 37;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemMineMap >& minemap() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemMineMap >* mutable_minemap();
  inline const ::PBItemMineMap& minemap(int index) const;
  inline ::PBItemMineMap* mutable_minemap(int index);
  inline ::PBItemMineMap* add_minemap();
  
  // repeated .PBItemCall ItemCall = 38;
  inline int itemcall_size() const;
  inline void clear_itemcall();
  static const int kItemCallFieldNumber = 38;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemCall >& itemcall() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemCall >* mutable_itemcall();
  inline const ::PBItemCall& itemcall(int index) const;
  inline ::PBItemCall* mutable_itemcall(int index);
  inline ::PBItemCall* add_itemcall();
  
  // repeated .PBItemGiftBag GiftBag = 39;
  inline int giftbag_size() const;
  inline void clear_giftbag();
  static const int kGiftBagFieldNumber = 39;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemGiftBag >& giftbag() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemGiftBag >* mutable_giftbag();
  inline const ::PBItemGiftBag& giftbag(int index) const;
  inline ::PBItemGiftBag* mutable_giftbag(int index);
  inline ::PBItemGiftBag* add_giftbag();
  
  // repeated .PBItemMagicWeapon MagicWeapons = 40;
  inline int magicweapons_size() const;
  inline void clear_magicweapons();
  static const int kMagicWeaponsFieldNumber = 40;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemMagicWeapon >& magicweapons() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemMagicWeapon >* mutable_magicweapons();
  inline const ::PBItemMagicWeapon& magicweapons(int index) const;
  inline ::PBItemMagicWeapon* mutable_magicweapons(int index);
  inline ::PBItemMagicWeapon* add_magicweapons();
  
  // repeated .PBItemToken Token = 41;
  inline int token_size() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 41;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemToken >& token() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemToken >* mutable_token();
  inline const ::PBItemToken& token(int index) const;
  inline ::PBItemToken* mutable_token(int index);
  inline ::PBItemToken* add_token();
  
  // repeated .PBFuncItem FuncItem = 42;
  inline int funcitem_size() const;
  inline void clear_funcitem();
  static const int kFuncItemFieldNumber = 42;
  inline const ::google::protobuf::RepeatedPtrField< ::PBFuncItem >& funcitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFuncItem >* mutable_funcitem();
  inline const ::PBFuncItem& funcitem(int index) const;
  inline ::PBFuncItem* mutable_funcitem(int index);
  inline ::PBFuncItem* add_funcitem();
  
  // repeated .PBItemSkillBook SkillBook = 43;
  inline int skillbook_size() const;
  inline void clear_skillbook();
  static const int kSkillBookFieldNumber = 43;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemSkillBook >& skillbook() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemSkillBook >* mutable_skillbook();
  inline const ::PBItemSkillBook& skillbook(int index) const;
  inline ::PBItemSkillBook* mutable_skillbook(int index);
  inline ::PBItemSkillBook* add_skillbook();
  
  // repeated .PBItemRedPaper RedPaper = 44;
  inline int redpaper_size() const;
  inline void clear_redpaper();
  static const int kRedPaperFieldNumber = 44;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemRedPaper >& redpaper() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemRedPaper >* mutable_redpaper();
  inline const ::PBItemRedPaper& redpaper(int index) const;
  inline ::PBItemRedPaper* mutable_redpaper(int index);
  inline ::PBItemRedPaper* add_redpaper();
  
  // repeated .PBItemMagicStone MagicStone = 45;
  inline int magicstone_size() const;
  inline void clear_magicstone();
  static const int kMagicStoneFieldNumber = 45;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemMagicStone >& magicstone() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemMagicStone >* mutable_magicstone();
  inline const ::PBItemMagicStone& magicstone(int index) const;
  inline ::PBItemMagicStone* mutable_magicstone(int index);
  inline ::PBItemMagicStone* add_magicstone();
  
  // repeated .PBItemVip VipItem = 46;
  inline int vipitem_size() const;
  inline void clear_vipitem();
  static const int kVipItemFieldNumber = 46;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemVip >& vipitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemVip >* mutable_vipitem();
  inline const ::PBItemVip& vipitem(int index) const;
  inline ::PBItemVip* mutable_vipitem(int index);
  inline ::PBItemVip* add_vipitem();
  
  // repeated .PBItemClean CleanItem = 47;
  inline int cleanitem_size() const;
  inline void clear_cleanitem();
  static const int kCleanItemFieldNumber = 47;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemClean >& cleanitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemClean >* mutable_cleanitem();
  inline const ::PBItemClean& cleanitem(int index) const;
  inline ::PBItemClean* mutable_cleanitem(int index);
  inline ::PBItemClean* add_cleanitem();
  
  // repeated .PBAwardInfo AwardInfo = 48;
  inline int awardinfo_size() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 48;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAwardInfo >& awardinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAwardInfo >* mutable_awardinfo();
  inline const ::PBAwardInfo& awardinfo(int index) const;
  inline ::PBAwardInfo* mutable_awardinfo(int index);
  inline ::PBAwardInfo* add_awardinfo();
  
  // repeated .PBLeagueBag LeagueBag = 49;
  inline int leaguebag_size() const;
  inline void clear_leaguebag();
  static const int kLeagueBagFieldNumber = 49;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLeagueBag >& leaguebag() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLeagueBag >* mutable_leaguebag();
  inline const ::PBLeagueBag& leaguebag(int index) const;
  inline ::PBLeagueBag* mutable_leaguebag(int index);
  inline ::PBLeagueBag* add_leaguebag();
  
  // repeated .PBInvitation Invitation = 50;
  inline int invitation_size() const;
  inline void clear_invitation();
  static const int kInvitationFieldNumber = 50;
  inline const ::google::protobuf::RepeatedPtrField< ::PBInvitation >& invitation() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBInvitation >* mutable_invitation();
  inline const ::PBInvitation& invitation(int index) const;
  inline ::PBInvitation* mutable_invitation(int index);
  inline ::PBInvitation* add_invitation();
  
  // repeated .PBSysInvitation SysInvitation = 51;
  inline int sysinvitation_size() const;
  inline void clear_sysinvitation();
  static const int kSysInvitationFieldNumber = 51;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSysInvitation >& sysinvitation() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSysInvitation >* mutable_sysinvitation();
  inline const ::PBSysInvitation& sysinvitation(int index) const;
  inline ::PBSysInvitation* mutable_sysinvitation(int index);
  inline ::PBSysInvitation* add_sysinvitation();
  
  // repeated .PBItemRefresh ItemRefresh = 52;
  inline int itemrefresh_size() const;
  inline void clear_itemrefresh();
  static const int kItemRefreshFieldNumber = 52;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemRefresh >& itemrefresh() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemRefresh >* mutable_itemrefresh();
  inline const ::PBItemRefresh& itemrefresh(int index) const;
  inline ::PBItemRefresh* mutable_itemrefresh(int index);
  inline ::PBItemRefresh* add_itemrefresh();
  
  // repeated .PBItemSummon ItemSummon = 53;
  inline int itemsummon_size() const;
  inline void clear_itemsummon();
  static const int kItemSummonFieldNumber = 53;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemSummon >& itemsummon() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemSummon >* mutable_itemsummon();
  inline const ::PBItemSummon& itemsummon(int index) const;
  inline ::PBItemSummon* mutable_itemsummon(int index);
  inline ::PBItemSummon* add_itemsummon();
  
  // repeated .PBItemDirect ItemDirect = 54;
  inline int itemdirect_size() const;
  inline void clear_itemdirect();
  static const int kItemDirectFieldNumber = 54;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemDirect >& itemdirect() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemDirect >* mutable_itemdirect();
  inline const ::PBItemDirect& itemdirect(int index) const;
  inline ::PBItemDirect* mutable_itemdirect(int index);
  inline ::PBItemDirect* add_itemdirect();
  
  // repeated .PBItemGetStar ItemGetStar = 55;
  inline int itemgetstar_size() const;
  inline void clear_itemgetstar();
  static const int kItemGetStarFieldNumber = 55;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemGetStar >& itemgetstar() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemGetStar >* mutable_itemgetstar();
  inline const ::PBItemGetStar& itemgetstar(int index) const;
  inline ::PBItemGetStar* mutable_itemgetstar(int index);
  inline ::PBItemGetStar* add_itemgetstar();
  
  // repeated .PBItemAutoCollect ItemAutoCollect = 56;
  inline int itemautocollect_size() const;
  inline void clear_itemautocollect();
  static const int kItemAutoCollectFieldNumber = 56;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemAutoCollect >& itemautocollect() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemAutoCollect >* mutable_itemautocollect();
  inline const ::PBItemAutoCollect& itemautocollect(int index) const;
  inline ::PBItemAutoCollect* mutable_itemautocollect(int index);
  inline ::PBItemAutoCollect* add_itemautocollect();
  
  // repeated .PBItemBlackPills ItemBlackPills = 57;
  inline int itemblackpills_size() const;
  inline void clear_itemblackpills();
  static const int kItemBlackPillsFieldNumber = 57;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemBlackPills >& itemblackpills() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemBlackPills >* mutable_itemblackpills();
  inline const ::PBItemBlackPills& itemblackpills(int index) const;
  inline ::PBItemBlackPills* mutable_itemblackpills(int index);
  inline ::PBItemBlackPills* add_itemblackpills();
  
  // repeated .PBItemExpContainer ExpContainer = 58;
  inline int expcontainer_size() const;
  inline void clear_expcontainer();
  static const int kExpContainerFieldNumber = 58;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemExpContainer >& expcontainer() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemExpContainer >* mutable_expcontainer();
  inline const ::PBItemExpContainer& expcontainer(int index) const;
  inline ::PBItemExpContainer* mutable_expcontainer(int index);
  inline ::PBItemExpContainer* add_expcontainer();
  
  // repeated .PBItemExpPills ExpPills = 59;
  inline int exppills_size() const;
  inline void clear_exppills();
  static const int kExpPillsFieldNumber = 59;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemExpPills >& exppills() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemExpPills >* mutable_exppills();
  inline const ::PBItemExpPills& exppills(int index) const;
  inline ::PBItemExpPills* mutable_exppills(int index);
  inline ::PBItemExpPills* add_exppills();
  
  // repeated .PBSpiritItem SpiritItem = 60;
  inline int spirititem_size() const;
  inline void clear_spirititem();
  static const int kSpiritItemFieldNumber = 60;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSpiritItem >& spirititem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSpiritItem >* mutable_spirititem();
  inline const ::PBSpiritItem& spirititem(int index) const;
  inline ::PBSpiritItem* mutable_spirititem(int index);
  inline ::PBSpiritItem* add_spirititem();
  
  // repeated .PBItemExpTome ExpTome = 61;
  inline int exptome_size() const;
  inline void clear_exptome();
  static const int kExpTomeFieldNumber = 61;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemExpTome >& exptome() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemExpTome >* mutable_exptome();
  inline const ::PBItemExpTome& exptome(int index) const;
  inline ::PBItemExpTome* mutable_exptome(int index);
  inline ::PBItemExpTome* add_exptome();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBItemBase > item_;
  ::google::protobuf::RepeatedPtrField< ::PBItemBindStone > bindstone_;
  ::google::protobuf::RepeatedPtrField< ::PBItemBluePrint > blueprint_;
  ::google::protobuf::RepeatedPtrField< ::PBItemBook > itembook_;
  ::google::protobuf::RepeatedPtrField< ::PBItemCard > itemcard_;
  ::google::protobuf::RepeatedPtrField< ::PBItemExp > itemexp_;
  ::google::protobuf::RepeatedPtrField< ::PBItemHorse > horse_;
  ::google::protobuf::RepeatedPtrField< ::PBItemJewel > jewel_;
  ::google::protobuf::RepeatedPtrField< ::PBItemPetEgg > petegg_;
  ::google::protobuf::RepeatedPtrField< ::PBItemPetFood > petfood_;
  ::google::protobuf::RepeatedPtrField< ::PBItemPhysic > physic_;
  ::google::protobuf::RepeatedPtrField< ::PBItemQuestion > question_;
  ::google::protobuf::RepeatedPtrField< ::PBItemRelife > relife_;
  ::google::protobuf::RepeatedPtrField< ::PBItemReturn > return__;
  ::google::protobuf::RepeatedPtrField< ::PBItemReturnPaper > returnpaper_;
  ::google::protobuf::RepeatedPtrField< ::PBItemRune > rune_;
  ::google::protobuf::RepeatedPtrField< ::PBItemScroll > scroll_;
  ::google::protobuf::RepeatedPtrField< ::PBItemSequence > sequence_;
  ::google::protobuf::RepeatedPtrField< ::PBItemShout > shout_;
  ::google::protobuf::RepeatedPtrField< ::PBItemSkill > itemskill_;
  ::google::protobuf::RepeatedPtrField< ::PBItemStove > stove_;
  ::google::protobuf::RepeatedPtrField< ::PBItemStuff > stuff_;
  ::google::protobuf::RepeatedPtrField< ::PBItemTask > itemtask_;
  ::google::protobuf::RepeatedPtrField< ::PBItemTeleport > teleport_;
  ::google::protobuf::RepeatedPtrField< ::PBItemTeleSymbol > telesymbol_;
  ::google::protobuf::RepeatedPtrField< ::PBItemUpgLeast > upgleast_;
  ::google::protobuf::RepeatedPtrField< ::PBItemUpgLuck > upgluck_;
  ::google::protobuf::RepeatedPtrField< ::PBItemYuanBug > yuanbug_;
  ::google::protobuf::RepeatedPtrField< ::PBItemYuanEgg > yuanegg_;
  ::google::protobuf::RepeatedPtrField< ::PBRedStone > redstone_;
  ::google::protobuf::RepeatedPtrField< ::PBItemAutoShout > autoshout_;
  ::google::protobuf::RepeatedPtrField< ::PBItemKitBag > kitbag_;
  ::google::protobuf::RepeatedPtrField< ::PBItemUpg > itemupg_;
  ::google::protobuf::RepeatedPtrField< ::PBItemRemove > itemremove_;
  ::google::protobuf::RepeatedPtrField< ::PBItemChange > itemchange_;
  ::google::protobuf::RepeatedPtrField< ::PBItemAdapter > itemadapter_;
  ::google::protobuf::RepeatedPtrField< ::PBItemMineMap > minemap_;
  ::google::protobuf::RepeatedPtrField< ::PBItemCall > itemcall_;
  ::google::protobuf::RepeatedPtrField< ::PBItemGiftBag > giftbag_;
  ::google::protobuf::RepeatedPtrField< ::PBItemMagicWeapon > magicweapons_;
  ::google::protobuf::RepeatedPtrField< ::PBItemToken > token_;
  ::google::protobuf::RepeatedPtrField< ::PBFuncItem > funcitem_;
  ::google::protobuf::RepeatedPtrField< ::PBItemSkillBook > skillbook_;
  ::google::protobuf::RepeatedPtrField< ::PBItemRedPaper > redpaper_;
  ::google::protobuf::RepeatedPtrField< ::PBItemMagicStone > magicstone_;
  ::google::protobuf::RepeatedPtrField< ::PBItemVip > vipitem_;
  ::google::protobuf::RepeatedPtrField< ::PBItemClean > cleanitem_;
  ::google::protobuf::RepeatedPtrField< ::PBAwardInfo > awardinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBLeagueBag > leaguebag_;
  ::google::protobuf::RepeatedPtrField< ::PBInvitation > invitation_;
  ::google::protobuf::RepeatedPtrField< ::PBSysInvitation > sysinvitation_;
  ::google::protobuf::RepeatedPtrField< ::PBItemRefresh > itemrefresh_;
  ::google::protobuf::RepeatedPtrField< ::PBItemSummon > itemsummon_;
  ::google::protobuf::RepeatedPtrField< ::PBItemDirect > itemdirect_;
  ::google::protobuf::RepeatedPtrField< ::PBItemGetStar > itemgetstar_;
  ::google::protobuf::RepeatedPtrField< ::PBItemAutoCollect > itemautocollect_;
  ::google::protobuf::RepeatedPtrField< ::PBItemBlackPills > itemblackpills_;
  ::google::protobuf::RepeatedPtrField< ::PBItemExpContainer > expcontainer_;
  ::google::protobuf::RepeatedPtrField< ::PBItemExpPills > exppills_;
  ::google::protobuf::RepeatedPtrField< ::PBSpiritItem > spirititem_;
  ::google::protobuf::RepeatedPtrField< ::PBItemExpTome > exptome_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(61 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemSet* default_instance_;
};
// -------------------------------------------------------------------

class PBConfigTable : public ::google::protobuf::Message {
 public:
  PBConfigTable();
  virtual ~PBConfigTable();
  
  PBConfigTable(const PBConfigTable& from);
  
  inline PBConfigTable& operator=(const PBConfigTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBConfigTable& default_instance();
  void Swap(PBConfigTable* other);
  
  // implements Message ----------------------------------------------
  
  PBConfigTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBConfigTable& from);
  void MergeFrom(const PBConfigTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBBeginner Beginner = 1;
  inline int beginner_size() const;
  inline void clear_beginner();
  static const int kBeginnerFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBeginner >& beginner() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBeginner >* mutable_beginner();
  inline const ::PBBeginner& beginner(int index) const;
  inline ::PBBeginner* mutable_beginner(int index);
  inline ::PBBeginner* add_beginner();
  
  // repeated .PBData Data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBData >& data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBData >* mutable_data();
  inline const ::PBData& data(int index) const;
  inline ::PBData* mutable_data(int index);
  inline ::PBData* add_data();
  
  // repeated .PBDiploidTable Diploid = 3;
  inline int diploid_size() const;
  inline void clear_diploid();
  static const int kDiploidFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDiploidTable >& diploid() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDiploidTable >* mutable_diploid();
  inline const ::PBDiploidTable& diploid(int index) const;
  inline ::PBDiploidTable* mutable_diploid(int index);
  inline ::PBDiploidTable* add_diploid();
  
  // repeated .PBDropLevel DropLevel = 4;
  inline int droplevel_size() const;
  inline void clear_droplevel();
  static const int kDropLevelFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDropLevel >& droplevel() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDropLevel >* mutable_droplevel();
  inline const ::PBDropLevel& droplevel(int index) const;
  inline ::PBDropLevel* mutable_droplevel(int index);
  inline ::PBDropLevel* add_droplevel();
  
  // repeated .PBDropTable DropTable = 5;
  inline int droptable_size() const;
  inline void clear_droptable();
  static const int kDropTableFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDropTable >& droptable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDropTable >* mutable_droptable();
  inline const ::PBDropTable& droptable(int index) const;
  inline ::PBDropTable* mutable_droptable(int index);
  inline ::PBDropTable* add_droptable();
  
  // repeated .PBRedStoneExpTable RedStoneTable = 6;
  inline int redstonetable_size() const;
  inline void clear_redstonetable();
  static const int kRedStoneTableFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRedStoneExpTable >& redstonetable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRedStoneExpTable >* mutable_redstonetable();
  inline const ::PBRedStoneExpTable& redstonetable(int index) const;
  inline ::PBRedStoneExpTable* mutable_redstonetable(int index);
  inline ::PBRedStoneExpTable* add_redstonetable();
  
  // repeated .PBReliveTable ReliveTable = 7;
  inline int relivetable_size() const;
  inline void clear_relivetable();
  static const int kReliveTableFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBReliveTable >& relivetable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBReliveTable >* mutable_relivetable();
  inline const ::PBReliveTable& relivetable(int index) const;
  inline ::PBReliveTable* mutable_relivetable(int index);
  inline ::PBReliveTable* add_relivetable();
  
  // repeated .PBSellTable SellTable = 8;
  inline int selltable_size() const;
  inline void clear_selltable();
  static const int kSellTableFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSellTable >& selltable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSellTable >* mutable_selltable();
  inline const ::PBSellTable& selltable(int index) const;
  inline ::PBSellTable* mutable_selltable(int index);
  inline ::PBSellTable* add_selltable();
  
  // repeated .PBTeleTable TeleTable = 9;
  inline int teletable_size() const;
  inline void clear_teletable();
  static const int kTeleTableFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeleTable >& teletable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeleTable >* mutable_teletable();
  inline const ::PBTeleTable& teletable(int index) const;
  inline ::PBTeleTable* mutable_teletable(int index);
  inline ::PBTeleTable* add_teletable();
  
  // repeated .PBAddPKTable AddPkTable = 10;
  inline int addpktable_size() const;
  inline void clear_addpktable();
  static const int kAddPkTableFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAddPKTable >& addpktable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAddPKTable >* mutable_addpktable();
  inline const ::PBAddPKTable& addpktable(int index) const;
  inline ::PBAddPKTable* mutable_addpktable(int index);
  inline ::PBAddPKTable* add_addpktable();
  
  // repeated .PBOfficialTable OfficialTable = 11;
  inline int officialtable_size() const;
  inline void clear_officialtable();
  static const int kOfficialTableFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::PBOfficialTable >& officialtable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBOfficialTable >* mutable_officialtable();
  inline const ::PBOfficialTable& officialtable(int index) const;
  inline ::PBOfficialTable* mutable_officialtable(int index);
  inline ::PBOfficialTable* add_officialtable();
  
  // repeated .PBOgreTran OgreTran = 12;
  inline int ogretran_size() const;
  inline void clear_ogretran();
  static const int kOgreTranFieldNumber = 12;
  inline const ::google::protobuf::RepeatedPtrField< ::PBOgreTran >& ogretran() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBOgreTran >* mutable_ogretran();
  inline const ::PBOgreTran& ogretran(int index) const;
  inline ::PBOgreTran* mutable_ogretran(int index);
  inline ::PBOgreTran* add_ogretran();
  
  // repeated .PBTplMagicWeaponProIncTable MagicWeaponProTable = 13;
  inline int magicweaponprotable_size() const;
  inline void clear_magicweaponprotable();
  static const int kMagicWeaponProTableFieldNumber = 13;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTplMagicWeaponProIncTable >& magicweaponprotable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTplMagicWeaponProIncTable >* mutable_magicweaponprotable();
  inline const ::PBTplMagicWeaponProIncTable& magicweaponprotable(int index) const;
  inline ::PBTplMagicWeaponProIncTable* mutable_magicweaponprotable(int index);
  inline ::PBTplMagicWeaponProIncTable* add_magicweaponprotable();
  
  // repeated .PBBindChargeTable BindChargeTabel = 14;
  inline int bindchargetabel_size() const;
  inline void clear_bindchargetabel();
  static const int kBindChargeTabelFieldNumber = 14;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBindChargeTable >& bindchargetabel() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBindChargeTable >* mutable_bindchargetabel();
  inline const ::PBBindChargeTable& bindchargetabel(int index) const;
  inline ::PBBindChargeTable* mutable_bindchargetabel(int index);
  inline ::PBBindChargeTable* add_bindchargetabel();
  
  // repeated .PBPKValueTable PKTable = 15;
  inline int pktable_size() const;
  inline void clear_pktable();
  static const int kPKTableFieldNumber = 15;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPKValueTable >& pktable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPKValueTable >* mutable_pktable();
  inline const ::PBPKValueTable& pktable(int index) const;
  inline ::PBPKValueTable* mutable_pktable(int index);
  inline ::PBPKValueTable* add_pktable();
  
  // repeated .PBMagicWeaponSkillBoxProTable MagicWeaponSkillBox = 16;
  inline int magicweaponskillbox_size() const;
  inline void clear_magicweaponskillbox();
  static const int kMagicWeaponSkillBoxFieldNumber = 16;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponSkillBoxProTable >& magicweaponskillbox() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponSkillBoxProTable >* mutable_magicweaponskillbox();
  inline const ::PBMagicWeaponSkillBoxProTable& magicweaponskillbox(int index) const;
  inline ::PBMagicWeaponSkillBoxProTable* mutable_magicweaponskillbox(int index);
  inline ::PBMagicWeaponSkillBoxProTable* add_magicweaponskillbox();
  
  // repeated .PBEquipExchangeTable EquipExchange = 17;
  inline int equipexchange_size() const;
  inline void clear_equipexchange();
  static const int kEquipExchangeFieldNumber = 17;
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipExchangeTable >& equipexchange() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipExchangeTable >* mutable_equipexchange();
  inline const ::PBEquipExchangeTable& equipexchange(int index) const;
  inline ::PBEquipExchangeTable* mutable_equipexchange(int index);
  inline ::PBEquipExchangeTable* add_equipexchange();
  
  // repeated .PBMapTable MapTable = 18;
  inline int maptable_size() const;
  inline void clear_maptable();
  static const int kMapTableFieldNumber = 18;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMapTable >& maptable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMapTable >* mutable_maptable();
  inline const ::PBMapTable& maptable(int index) const;
  inline ::PBMapTable* mutable_maptable(int index);
  inline ::PBMapTable* add_maptable();
  
  // repeated .PBMultiAttackTable MultiAttackTable = 19;
  inline int multiattacktable_size() const;
  inline void clear_multiattacktable();
  static const int kMultiAttackTableFieldNumber = 19;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMultiAttackTable >& multiattacktable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMultiAttackTable >* mutable_multiattacktable();
  inline const ::PBMultiAttackTable& multiattacktable(int index) const;
  inline ::PBMultiAttackTable* mutable_multiattacktable(int index);
  inline ::PBMultiAttackTable* add_multiattacktable();
  
  // repeated .PBMatrixTable MatrixTable = 20;
  inline int matrixtable_size() const;
  inline void clear_matrixtable();
  static const int kMatrixTableFieldNumber = 20;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMatrixTable >& matrixtable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMatrixTable >* mutable_matrixtable();
  inline const ::PBMatrixTable& matrixtable(int index) const;
  inline ::PBMatrixTable* mutable_matrixtable(int index);
  inline ::PBMatrixTable* add_matrixtable();
  
  // repeated .PBTemplateMarriageConfig MarriageConfig = 21;
  inline int marriageconfig_size() const;
  inline void clear_marriageconfig();
  static const int kMarriageConfigFieldNumber = 21;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateMarriageConfig >& marriageconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTemplateMarriageConfig >* mutable_marriageconfig();
  inline const ::PBTemplateMarriageConfig& marriageconfig(int index) const;
  inline ::PBTemplateMarriageConfig* mutable_marriageconfig(int index);
  inline ::PBTemplateMarriageConfig* add_marriageconfig();
  
  // repeated .PBProGressConfig ProgressConfig = 22;
  inline int progressconfig_size() const;
  inline void clear_progressconfig();
  static const int kProgressConfigFieldNumber = 22;
  inline const ::google::protobuf::RepeatedPtrField< ::PBProGressConfig >& progressconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBProGressConfig >* mutable_progressconfig();
  inline const ::PBProGressConfig& progressconfig(int index) const;
  inline ::PBProGressConfig* mutable_progressconfig(int index);
  inline ::PBProGressConfig* add_progressconfig();
  
  // repeated .PBCountTable CountTable = 23;
  inline int counttable_size() const;
  inline void clear_counttable();
  static const int kCountTableFieldNumber = 23;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCountTable >& counttable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCountTable >* mutable_counttable();
  inline const ::PBCountTable& counttable(int index) const;
  inline ::PBCountTable* mutable_counttable(int index);
  inline ::PBCountTable* add_counttable();
  
  // repeated .PBActivityConfig ActivityConfig = 24;
  inline int activityconfig_size() const;
  inline void clear_activityconfig();
  static const int kActivityConfigFieldNumber = 24;
  inline const ::google::protobuf::RepeatedPtrField< ::PBActivityConfig >& activityconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBActivityConfig >* mutable_activityconfig();
  inline const ::PBActivityConfig& activityconfig(int index) const;
  inline ::PBActivityConfig* mutable_activityconfig(int index);
  inline ::PBActivityConfig* add_activityconfig();
  
  // repeated .PBDirectTable DirectTable = 25;
  inline int directtable_size() const;
  inline void clear_directtable();
  static const int kDirectTableFieldNumber = 25;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDirectTable >& directtable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDirectTable >* mutable_directtable();
  inline const ::PBDirectTable& directtable(int index) const;
  inline ::PBDirectTable* mutable_directtable(int index);
  inline ::PBDirectTable* add_directtable();
  
  // repeated .PBWorldBattleConfig BattleConfig = 26;
  inline int battleconfig_size() const;
  inline void clear_battleconfig();
  static const int kBattleConfigFieldNumber = 26;
  inline const ::google::protobuf::RepeatedPtrField< ::PBWorldBattleConfig >& battleconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWorldBattleConfig >* mutable_battleconfig();
  inline const ::PBWorldBattleConfig& battleconfig(int index) const;
  inline ::PBWorldBattleConfig* mutable_battleconfig(int index);
  inline ::PBWorldBattleConfig* add_battleconfig();
  
  // repeated .PBLevelMoneyLmt MoneyLmt = 27;
  inline int moneylmt_size() const;
  inline void clear_moneylmt();
  static const int kMoneyLmtFieldNumber = 27;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLevelMoneyLmt >& moneylmt() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLevelMoneyLmt >* mutable_moneylmt();
  inline const ::PBLevelMoneyLmt& moneylmt(int index) const;
  inline ::PBLevelMoneyLmt* mutable_moneylmt(int index);
  inline ::PBLevelMoneyLmt* add_moneylmt();
  
  // repeated .PBHandinTable HandinTable = 28;
  inline int handintable_size() const;
  inline void clear_handintable();
  static const int kHandinTableFieldNumber = 28;
  inline const ::google::protobuf::RepeatedPtrField< ::PBHandinTable >& handintable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBHandinTable >* mutable_handintable();
  inline const ::PBHandinTable& handintable(int index) const;
  inline ::PBHandinTable* mutable_handintable(int index);
  inline ::PBHandinTable* add_handintable();
  
  // repeated .PBHandinEncourage HandinEncourage = 29;
  inline int handinencourage_size() const;
  inline void clear_handinencourage();
  static const int kHandinEncourageFieldNumber = 29;
  inline const ::google::protobuf::RepeatedPtrField< ::PBHandinEncourage >& handinencourage() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBHandinEncourage >* mutable_handinencourage();
  inline const ::PBHandinEncourage& handinencourage(int index) const;
  inline ::PBHandinEncourage* mutable_handinencourage(int index);
  inline ::PBHandinEncourage* add_handinencourage();
  
  // repeated .PBItemChangeCamp changeCamp = 30;
  inline int changecamp_size() const;
  inline void clear_changecamp();
  static const int kChangeCampFieldNumber = 30;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemChangeCamp >& changecamp() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemChangeCamp >* mutable_changecamp();
  inline const ::PBItemChangeCamp& changecamp(int index) const;
  inline ::PBItemChangeCamp* mutable_changecamp(int index);
  inline ::PBItemChangeCamp* add_changecamp();
  
  // repeated .PBAccuseConfig AccuseConfig = 31;
  inline int accuseconfig_size() const;
  inline void clear_accuseconfig();
  static const int kAccuseConfigFieldNumber = 31;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAccuseConfig >& accuseconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAccuseConfig >* mutable_accuseconfig();
  inline const ::PBAccuseConfig& accuseconfig(int index) const;
  inline ::PBAccuseConfig* mutable_accuseconfig(int index);
  inline ::PBAccuseConfig* add_accuseconfig();
  
  // repeated .PBComRuneConfig ComRuneConfig = 32;
  inline int comruneconfig_size() const;
  inline void clear_comruneconfig();
  static const int kComRuneConfigFieldNumber = 32;
  inline const ::google::protobuf::RepeatedPtrField< ::PBComRuneConfig >& comruneconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBComRuneConfig >* mutable_comruneconfig();
  inline const ::PBComRuneConfig& comruneconfig(int index) const;
  inline ::PBComRuneConfig* mutable_comruneconfig(int index);
  inline ::PBComRuneConfig* add_comruneconfig();
  
  // repeated .PBMagicWeaponDecomposeTable MWDecomposTab = 33;
  inline int mwdecompostab_size() const;
  inline void clear_mwdecompostab();
  static const int kMWDecomposTabFieldNumber = 33;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponDecomposeTable >& mwdecompostab() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponDecomposeTable >* mutable_mwdecompostab();
  inline const ::PBMagicWeaponDecomposeTable& mwdecompostab(int index) const;
  inline ::PBMagicWeaponDecomposeTable* mutable_mwdecompostab(int index);
  inline ::PBMagicWeaponDecomposeTable* add_mwdecompostab();
  
  // repeated .PBMagicWeaponQuickUpTable MWQuickUpTab = 34;
  inline int mwquickuptab_size() const;
  inline void clear_mwquickuptab();
  static const int kMWQuickUpTabFieldNumber = 34;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponQuickUpTable >& mwquickuptab() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponQuickUpTable >* mutable_mwquickuptab();
  inline const ::PBMagicWeaponQuickUpTable& mwquickuptab(int index) const;
  inline ::PBMagicWeaponQuickUpTable* mutable_mwquickuptab(int index);
  inline ::PBMagicWeaponQuickUpTable* add_mwquickuptab();
  
  // repeated .PBGlobalMapConfig GlobalMapConfig = 35;
  inline int globalmapconfig_size() const;
  inline void clear_globalmapconfig();
  static const int kGlobalMapConfigFieldNumber = 35;
  inline const ::google::protobuf::RepeatedPtrField< ::PBGlobalMapConfig >& globalmapconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBGlobalMapConfig >* mutable_globalmapconfig();
  inline const ::PBGlobalMapConfig& globalmapconfig(int index) const;
  inline ::PBGlobalMapConfig* mutable_globalmapconfig(int index);
  inline ::PBGlobalMapConfig* add_globalmapconfig();
  
  // repeated .PBOffLineExpConfig OffLineExpConfig = 36;
  inline int offlineexpconfig_size() const;
  inline void clear_offlineexpconfig();
  static const int kOffLineExpConfigFieldNumber = 36;
  inline const ::google::protobuf::RepeatedPtrField< ::PBOffLineExpConfig >& offlineexpconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBOffLineExpConfig >* mutable_offlineexpconfig();
  inline const ::PBOffLineExpConfig& offlineexpconfig(int index) const;
  inline ::PBOffLineExpConfig* mutable_offlineexpconfig(int index);
  inline ::PBOffLineExpConfig* add_offlineexpconfig();
  
  // repeated .PBRepeFameTable RepeFameTable = 37;
  inline int repefametable_size() const;
  inline void clear_repefametable();
  static const int kRepeFameTableFieldNumber = 37;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRepeFameTable >& repefametable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRepeFameTable >* mutable_repefametable();
  inline const ::PBRepeFameTable& repefametable(int index) const;
  inline ::PBRepeFameTable* mutable_repefametable(int index);
  inline ::PBRepeFameTable* add_repefametable();
  
  // repeated .PBCastingSpiritTable CastingSpiritTable = 38;
  inline int castingspirittable_size() const;
  inline void clear_castingspirittable();
  static const int kCastingSpiritTableFieldNumber = 38;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCastingSpiritTable >& castingspirittable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCastingSpiritTable >* mutable_castingspirittable();
  inline const ::PBCastingSpiritTable& castingspirittable(int index) const;
  inline ::PBCastingSpiritTable* mutable_castingspirittable(int index);
  inline ::PBCastingSpiritTable* add_castingspirittable();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBBeginner > beginner_;
  ::google::protobuf::RepeatedPtrField< ::PBData > data_;
  ::google::protobuf::RepeatedPtrField< ::PBDiploidTable > diploid_;
  ::google::protobuf::RepeatedPtrField< ::PBDropLevel > droplevel_;
  ::google::protobuf::RepeatedPtrField< ::PBDropTable > droptable_;
  ::google::protobuf::RepeatedPtrField< ::PBRedStoneExpTable > redstonetable_;
  ::google::protobuf::RepeatedPtrField< ::PBReliveTable > relivetable_;
  ::google::protobuf::RepeatedPtrField< ::PBSellTable > selltable_;
  ::google::protobuf::RepeatedPtrField< ::PBTeleTable > teletable_;
  ::google::protobuf::RepeatedPtrField< ::PBAddPKTable > addpktable_;
  ::google::protobuf::RepeatedPtrField< ::PBOfficialTable > officialtable_;
  ::google::protobuf::RepeatedPtrField< ::PBOgreTran > ogretran_;
  ::google::protobuf::RepeatedPtrField< ::PBTplMagicWeaponProIncTable > magicweaponprotable_;
  ::google::protobuf::RepeatedPtrField< ::PBBindChargeTable > bindchargetabel_;
  ::google::protobuf::RepeatedPtrField< ::PBPKValueTable > pktable_;
  ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponSkillBoxProTable > magicweaponskillbox_;
  ::google::protobuf::RepeatedPtrField< ::PBEquipExchangeTable > equipexchange_;
  ::google::protobuf::RepeatedPtrField< ::PBMapTable > maptable_;
  ::google::protobuf::RepeatedPtrField< ::PBMultiAttackTable > multiattacktable_;
  ::google::protobuf::RepeatedPtrField< ::PBMatrixTable > matrixtable_;
  ::google::protobuf::RepeatedPtrField< ::PBTemplateMarriageConfig > marriageconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBProGressConfig > progressconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBCountTable > counttable_;
  ::google::protobuf::RepeatedPtrField< ::PBActivityConfig > activityconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBDirectTable > directtable_;
  ::google::protobuf::RepeatedPtrField< ::PBWorldBattleConfig > battleconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBLevelMoneyLmt > moneylmt_;
  ::google::protobuf::RepeatedPtrField< ::PBHandinTable > handintable_;
  ::google::protobuf::RepeatedPtrField< ::PBHandinEncourage > handinencourage_;
  ::google::protobuf::RepeatedPtrField< ::PBItemChangeCamp > changecamp_;
  ::google::protobuf::RepeatedPtrField< ::PBAccuseConfig > accuseconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBComRuneConfig > comruneconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponDecomposeTable > mwdecompostab_;
  ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponQuickUpTable > mwquickuptab_;
  ::google::protobuf::RepeatedPtrField< ::PBGlobalMapConfig > globalmapconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBOffLineExpConfig > offlineexpconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBRepeFameTable > repefametable_;
  ::google::protobuf::RepeatedPtrField< ::PBCastingSpiritTable > castingspirittable_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(38 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBConfigTable* default_instance_;
};
// -------------------------------------------------------------------

class PBSkillSet : public ::google::protobuf::Message {
 public:
  PBSkillSet();
  virtual ~PBSkillSet();
  
  PBSkillSet(const PBSkillSet& from);
  
  inline PBSkillSet& operator=(const PBSkillSet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkillSet& default_instance();
  void Swap(PBSkillSet* other);
  
  // implements Message ----------------------------------------------
  
  PBSkillSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkillSet& from);
  void MergeFrom(const PBSkillSet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBAureoleSkill AureoleSkill = 1;
  inline int aureoleskill_size() const;
  inline void clear_aureoleskill();
  static const int kAureoleSkillFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAureoleSkill >& aureoleskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAureoleSkill >* mutable_aureoleskill();
  inline const ::PBAureoleSkill& aureoleskill(int index) const;
  inline ::PBAureoleSkill* mutable_aureoleskill(int index);
  inline ::PBAureoleSkill* add_aureoleskill();
  
  // repeated .PBBuff Buff = 2;
  inline int buff_size() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBuff >& buff() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBuff >* mutable_buff();
  inline const ::PBBuff& buff(int index) const;
  inline ::PBBuff* mutable_buff(int index);
  inline ::PBBuff* add_buff();
  
  // repeated .PBNormalSkill NormalSkill = 3;
  inline int normalskill_size() const;
  inline void clear_normalskill();
  static const int kNormalSkillFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBNormalSkill >& normalskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBNormalSkill >* mutable_normalskill();
  inline const ::PBNormalSkill& normalskill(int index) const;
  inline ::PBNormalSkill* mutable_normalskill(int index);
  inline ::PBNormalSkill* add_normalskill();
  
  // repeated .PBSkill Skill = 4;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkill >& skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkill >* mutable_skill();
  inline const ::PBSkill& skill(int index) const;
  inline ::PBSkill* mutable_skill(int index);
  inline ::PBSkill* add_skill();
  
  // repeated .PBSkillTree SkillTree = 5;
  inline int skilltree_size() const;
  inline void clear_skilltree();
  static const int kSkillTreeFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkillTree >& skilltree() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkillTree >* mutable_skilltree();
  inline const ::PBSkillTree& skilltree(int index) const;
  inline ::PBSkillTree* mutable_skilltree(int index);
  inline ::PBSkillTree* add_skilltree();
  
  // repeated .PBSkillTreeNode SkillTreeNode = 6;
  inline int skilltreenode_size() const;
  inline void clear_skilltreenode();
  static const int kSkillTreeNodeFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode >& skilltreenode() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode >* mutable_skilltreenode();
  inline const ::PBSkillTreeNode& skilltreenode(int index) const;
  inline ::PBSkillTreeNode* mutable_skilltreenode(int index);
  inline ::PBSkillTreeNode* add_skilltreenode();
  
  // repeated .PBTrapSkill TrapSkill = 7;
  inline int trapskill_size() const;
  inline void clear_trapskill();
  static const int kTrapSkillFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTrapSkill >& trapskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTrapSkill >* mutable_trapskill();
  inline const ::PBTrapSkill& trapskill(int index) const;
  inline ::PBTrapSkill* mutable_trapskill(int index);
  inline ::PBTrapSkill* add_trapskill();
  
  // repeated .PBMultiBuff MultiBuff = 8;
  inline int multibuff_size() const;
  inline void clear_multibuff();
  static const int kMultiBuffFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMultiBuff >& multibuff() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMultiBuff >* mutable_multibuff();
  inline const ::PBMultiBuff& multibuff(int index) const;
  inline ::PBMultiBuff* mutable_multibuff(int index);
  inline ::PBMultiBuff* add_multibuff();
  
  // repeated .PBFangCunTree FangCunTree = 9;
  inline int fangcuntree_size() const;
  inline void clear_fangcuntree();
  static const int kFangCunTreeFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::PBFangCunTree >& fangcuntree() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFangCunTree >* mutable_fangcuntree();
  inline const ::PBFangCunTree& fangcuntree(int index) const;
  inline ::PBFangCunTree* mutable_fangcuntree(int index);
  inline ::PBFangCunTree* add_fangcuntree();
  
  // repeated .PBFangCunTreeNode FangCunNode = 10;
  inline int fangcunnode_size() const;
  inline void clear_fangcunnode();
  static const int kFangCunNodeFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode >& fangcunnode() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode >* mutable_fangcunnode();
  inline const ::PBFangCunTreeNode& fangcunnode(int index) const;
  inline ::PBFangCunTreeNode* mutable_fangcunnode(int index);
  inline ::PBFangCunTreeNode* add_fangcunnode();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBAureoleSkill > aureoleskill_;
  ::google::protobuf::RepeatedPtrField< ::PBBuff > buff_;
  ::google::protobuf::RepeatedPtrField< ::PBNormalSkill > normalskill_;
  ::google::protobuf::RepeatedPtrField< ::PBSkill > skill_;
  ::google::protobuf::RepeatedPtrField< ::PBSkillTree > skilltree_;
  ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode > skilltreenode_;
  ::google::protobuf::RepeatedPtrField< ::PBTrapSkill > trapskill_;
  ::google::protobuf::RepeatedPtrField< ::PBMultiBuff > multibuff_;
  ::google::protobuf::RepeatedPtrField< ::PBFangCunTree > fangcuntree_;
  ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode > fangcunnode_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkillSet* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipSet : public ::google::protobuf::Message {
 public:
  PBEquipSet();
  virtual ~PBEquipSet();
  
  PBEquipSet(const PBEquipSet& from);
  
  inline PBEquipSet& operator=(const PBEquipSet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipSet& default_instance();
  void Swap(PBEquipSet* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipSet& from);
  void MergeFrom(const PBEquipSet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBEquipArmor EquipArmor = 1;
  inline int equiparmor_size() const;
  inline void clear_equiparmor();
  static const int kEquipArmorFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipArmor >& equiparmor() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipArmor >* mutable_equiparmor();
  inline const ::PBEquipArmor& equiparmor(int index) const;
  inline ::PBEquipArmor* mutable_equiparmor(int index);
  inline ::PBEquipArmor* add_equiparmor();
  
  // repeated .PBEquipFashion EquipFashion = 2;
  inline int equipfashion_size() const;
  inline void clear_equipfashion();
  static const int kEquipFashionFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipFashion >& equipfashion() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipFashion >* mutable_equipfashion();
  inline const ::PBEquipFashion& equipfashion(int index) const;
  inline ::PBEquipFashion* mutable_equipfashion(int index);
  inline ::PBEquipFashion* add_equipfashion();
  
  // repeated .PBEquipment Equipment = 3;
  inline int equipment_size() const;
  inline void clear_equipment();
  static const int kEquipmentFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipment >& equipment() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipment >* mutable_equipment();
  inline const ::PBEquipment& equipment(int index) const;
  inline ::PBEquipment* mutable_equipment(int index);
  inline ::PBEquipment* add_equipment();
  
  // repeated .PBEquipUpg EquipUpg = 4;
  inline int equipupg_size() const;
  inline void clear_equipupg();
  static const int kEquipUpgFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipUpg >& equipupg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipUpg >* mutable_equipupg();
  inline const ::PBEquipUpg& equipupg(int index) const;
  inline ::PBEquipUpg* mutable_equipupg(int index);
  inline ::PBEquipUpg* add_equipupg();
  
  // repeated .PBEquipWeapon Weapon = 5;
  inline int weapon_size() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipWeapon >& weapon() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipWeapon >* mutable_weapon();
  inline const ::PBEquipWeapon& weapon(int index) const;
  inline ::PBEquipWeapon* mutable_weapon(int index);
  inline ::PBEquipWeapon* add_weapon();
  
  // repeated .PBOpenSlot OpenSlot = 6;
  inline int openslot_size() const;
  inline void clear_openslot();
  static const int kOpenSlotFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBOpenSlot >& openslot() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBOpenSlot >* mutable_openslot();
  inline const ::PBOpenSlot& openslot(int index) const;
  inline ::PBOpenSlot* mutable_openslot(int index);
  inline ::PBOpenSlot* add_openslot();
  
  // repeated .PBProduceEquip ProduceEquip = 7;
  inline int produceequip_size() const;
  inline void clear_produceequip();
  static const int kProduceEquipFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBProduceEquip >& produceequip() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBProduceEquip >* mutable_produceequip();
  inline const ::PBProduceEquip& produceequip(int index) const;
  inline ::PBProduceEquip* mutable_produceequip(int index);
  inline ::PBProduceEquip* add_produceequip();
  
  // repeated .PBProduceExp ProduceExp = 8;
  inline int produceexp_size() const;
  inline void clear_produceexp();
  static const int kProduceExpFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::PBProduceExp >& produceexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBProduceExp >* mutable_produceexp();
  inline const ::PBProduceExp& produceexp(int index) const;
  inline ::PBProduceExp* mutable_produceexp(int index);
  inline ::PBProduceExp* add_produceexp();
  
  // repeated .PBProducePhysic ProducePhysic = 9;
  inline int producephysic_size() const;
  inline void clear_producephysic();
  static const int kProducePhysicFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::PBProducePhysic >& producephysic() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBProducePhysic >* mutable_producephysic();
  inline const ::PBProducePhysic& producephysic(int index) const;
  inline ::PBProducePhysic* mutable_producephysic(int index);
  inline ::PBProducePhysic* add_producephysic();
  
  // repeated .PBSpell Spell = 10;
  inline int spell_size() const;
  inline void clear_spell();
  static const int kSpellFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSpell >& spell() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSpell >* mutable_spell();
  inline const ::PBSpell& spell(int index) const;
  inline ::PBSpell* mutable_spell(int index);
  inline ::PBSpell* add_spell();
  
  // repeated .PBSuitNormal SuitNormal = 11;
  inline int suitnormal_size() const;
  inline void clear_suitnormal();
  static const int kSuitNormalFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSuitNormal >& suitnormal() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSuitNormal >* mutable_suitnormal();
  inline const ::PBSuitNormal& suitnormal(int index) const;
  inline ::PBSuitNormal* mutable_suitnormal(int index);
  inline ::PBSuitNormal* add_suitnormal();
  
  // repeated .PBSuitProducer SuitProducer = 12;
  inline int suitproducer_size() const;
  inline void clear_suitproducer();
  static const int kSuitProducerFieldNumber = 12;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSuitProducer >& suitproducer() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSuitProducer >* mutable_suitproducer();
  inline const ::PBSuitProducer& suitproducer(int index) const;
  inline ::PBSuitProducer* mutable_suitproducer(int index);
  inline ::PBSuitProducer* add_suitproducer();
  
  // repeated .PBMultiCompose MultiCompose = 13;
  inline int multicompose_size() const;
  inline void clear_multicompose();
  static const int kMultiComposeFieldNumber = 13;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMultiCompose >& multicompose() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMultiCompose >* mutable_multicompose();
  inline const ::PBMultiCompose& multicompose(int index) const;
  inline ::PBMultiCompose* mutable_multicompose(int index);
  inline ::PBMultiCompose* add_multicompose();
  
  // repeated .PBCompose Compose = 14;
  inline int compose_size() const;
  inline void clear_compose();
  static const int kComposeFieldNumber = 14;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCompose >& compose() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCompose >* mutable_compose();
  inline const ::PBCompose& compose(int index) const;
  inline ::PBCompose* mutable_compose(int index);
  inline ::PBCompose* add_compose();
  
  // repeated .PBCTemplateDecompound Decompound = 15;
  inline int decompound_size() const;
  inline void clear_decompound();
  static const int kDecompoundFieldNumber = 15;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCTemplateDecompound >& decompound() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCTemplateDecompound >* mutable_decompound();
  inline const ::PBCTemplateDecompound& decompound(int index) const;
  inline ::PBCTemplateDecompound* mutable_decompound(int index);
  inline ::PBCTemplateDecompound* add_decompound();
  
  // repeated .PBLightTable LightTable = 16;
  inline int lighttable_size() const;
  inline void clear_lighttable();
  static const int kLightTableFieldNumber = 16;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLightTable >& lighttable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLightTable >* mutable_lighttable();
  inline const ::PBLightTable& lighttable(int index) const;
  inline ::PBLightTable* mutable_lighttable(int index);
  inline ::PBLightTable* add_lighttable();
  
  // repeated .PBMWProJudgeEffTable MWJudgeEff = 17;
  inline int mwjudgeeff_size() const;
  inline void clear_mwjudgeeff();
  static const int kMWJudgeEffFieldNumber = 17;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeEffTable >& mwjudgeeff() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeEffTable >* mutable_mwjudgeeff();
  inline const ::PBMWProJudgeEffTable& mwjudgeeff(int index) const;
  inline ::PBMWProJudgeEffTable* mutable_mwjudgeeff(int index);
  inline ::PBMWProJudgeEffTable* add_mwjudgeeff();
  
  // repeated .PBMWProJudgeSpirTable MWJudgeSpir = 18;
  inline int mwjudgespir_size() const;
  inline void clear_mwjudgespir();
  static const int kMWJudgeSpirFieldNumber = 18;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeSpirTable >& mwjudgespir() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeSpirTable >* mutable_mwjudgespir();
  inline const ::PBMWProJudgeSpirTable& mwjudgespir(int index) const;
  inline ::PBMWProJudgeSpirTable* mutable_mwjudgespir(int index);
  inline ::PBMWProJudgeSpirTable* add_mwjudgespir();
  
  // repeated .PBMWLevelQuotietyTab MWQuotiety = 19;
  inline int mwquotiety_size() const;
  inline void clear_mwquotiety();
  static const int kMWQuotietyFieldNumber = 19;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMWLevelQuotietyTab >& mwquotiety() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMWLevelQuotietyTab >* mutable_mwquotiety();
  inline const ::PBMWLevelQuotietyTab& mwquotiety(int index) const;
  inline ::PBMWLevelQuotietyTab* mutable_mwquotiety(int index);
  inline ::PBMWLevelQuotietyTab* add_mwquotiety();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBEquipArmor > equiparmor_;
  ::google::protobuf::RepeatedPtrField< ::PBEquipFashion > equipfashion_;
  ::google::protobuf::RepeatedPtrField< ::PBEquipment > equipment_;
  ::google::protobuf::RepeatedPtrField< ::PBEquipUpg > equipupg_;
  ::google::protobuf::RepeatedPtrField< ::PBEquipWeapon > weapon_;
  ::google::protobuf::RepeatedPtrField< ::PBOpenSlot > openslot_;
  ::google::protobuf::RepeatedPtrField< ::PBProduceEquip > produceequip_;
  ::google::protobuf::RepeatedPtrField< ::PBProduceExp > produceexp_;
  ::google::protobuf::RepeatedPtrField< ::PBProducePhysic > producephysic_;
  ::google::protobuf::RepeatedPtrField< ::PBSpell > spell_;
  ::google::protobuf::RepeatedPtrField< ::PBSuitNormal > suitnormal_;
  ::google::protobuf::RepeatedPtrField< ::PBSuitProducer > suitproducer_;
  ::google::protobuf::RepeatedPtrField< ::PBMultiCompose > multicompose_;
  ::google::protobuf::RepeatedPtrField< ::PBCompose > compose_;
  ::google::protobuf::RepeatedPtrField< ::PBCTemplateDecompound > decompound_;
  ::google::protobuf::RepeatedPtrField< ::PBLightTable > lighttable_;
  ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeEffTable > mwjudgeeff_;
  ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeSpirTable > mwjudgespir_;
  ::google::protobuf::RepeatedPtrField< ::PBMWLevelQuotietyTab > mwquotiety_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBEquipSet* default_instance_;
};
// -------------------------------------------------------------------

class PBTemplate : public ::google::protobuf::Message {
 public:
  PBTemplate();
  virtual ~PBTemplate();
  
  PBTemplate(const PBTemplate& from);
  
  inline PBTemplate& operator=(const PBTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTemplate& default_instance();
  void Swap(PBTemplate* other);
  
  // implements Message ----------------------------------------------
  
  PBTemplate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTemplate& from);
  void MergeFrom(const PBTemplate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemSet ItemSet = 1;
  inline bool has_itemset() const;
  inline void clear_itemset();
  static const int kItemSetFieldNumber = 1;
  inline const ::PBItemSet& itemset() const;
  inline ::PBItemSet* mutable_itemset();
  
  // optional .PBConfigTable ConfigTable = 2;
  inline bool has_configtable() const;
  inline void clear_configtable();
  static const int kConfigTableFieldNumber = 2;
  inline const ::PBConfigTable& configtable() const;
  inline ::PBConfigTable* mutable_configtable();
  
  // optional .PBSkillSet SkillSet = 3;
  inline bool has_skillset() const;
  inline void clear_skillset();
  static const int kSkillSetFieldNumber = 3;
  inline const ::PBSkillSet& skillset() const;
  inline ::PBSkillSet* mutable_skillset();
  
  // optional .PBEquipSet EquipSet = 4;
  inline bool has_equipset() const;
  inline void clear_equipset();
  static const int kEquipSetFieldNumber = 4;
  inline const ::PBEquipSet& equipset() const;
  inline ::PBEquipSet* mutable_equipset();
  
  // repeated .PBBattlePet BattlePet = 5;
  inline int battlepet_size() const;
  inline void clear_battlepet();
  static const int kBattlePetFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBattlePet >& battlepet() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBattlePet >* mutable_battlepet();
  inline const ::PBBattlePet& battlepet(int index) const;
  inline ::PBBattlePet* mutable_battlepet(int index);
  inline ::PBBattlePet* add_battlepet();
  
  // repeated .PBHonorObtain HonorObtain = 6;
  inline int honorobtain_size() const;
  inline void clear_honorobtain();
  static const int kHonorObtainFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBHonorObtain >& honorobtain() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBHonorObtain >* mutable_honorobtain();
  inline const ::PBHonorObtain& honorobtain(int index) const;
  inline ::PBHonorObtain* mutable_honorobtain(int index);
  inline ::PBHonorObtain* add_honorobtain();
  
  // repeated .PBHonorToExp HonorToExp = 7;
  inline int honortoexp_size() const;
  inline void clear_honortoexp();
  static const int kHonorToExpFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBHonorToExp >& honortoexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBHonorToExp >* mutable_honortoexp();
  inline const ::PBHonorToExp& honortoexp(int index) const;
  inline ::PBHonorToExp* mutable_honortoexp(int index);
  inline ::PBHonorToExp* add_honortoexp();
  
  // repeated .PBLevelExp LevelExp = 8;
  inline int levelexp_size() const;
  inline void clear_levelexp();
  static const int kLevelExpFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLevelExp >& levelexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLevelExp >* mutable_levelexp();
  inline const ::PBLevelExp& levelexp(int index) const;
  inline ::PBLevelExp* mutable_levelexp(int index);
  inline ::PBLevelExp* add_levelexp();
  
  // repeated .PBLevelProperty LevelPro = 9;
  inline int levelpro_size() const;
  inline void clear_levelpro();
  static const int kLevelProFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLevelProperty >& levelpro() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLevelProperty >* mutable_levelpro();
  inline const ::PBLevelProperty& levelpro(int index) const;
  inline ::PBLevelProperty* mutable_levelpro(int index);
  inline ::PBLevelProperty* add_levelpro();
  
  // repeated .PBMetier Metier = 10;
  inline int metier_size() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMetier >& metier() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMetier >* mutable_metier();
  inline const ::PBMetier& metier(int index) const;
  inline ::PBMetier* mutable_metier(int index);
  inline ::PBMetier* add_metier();
  
  // repeated .PBMetierPro MetierPro = 11;
  inline int metierpro_size() const;
  inline void clear_metierpro();
  static const int kMetierProFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMetierPro >& metierpro() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMetierPro >* mutable_metierpro();
  inline const ::PBMetierPro& metierpro(int index) const;
  inline ::PBMetierPro* mutable_metierpro(int index);
  inline ::PBMetierPro* add_metierpro();
  
  // repeated .PBMine Mine = 12;
  inline int mine_size() const;
  inline void clear_mine();
  static const int kMineFieldNumber = 12;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMine >& mine() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMine >* mutable_mine();
  inline const ::PBMine& mine(int index) const;
  inline ::PBMine* mutable_mine(int index);
  inline ::PBMine* add_mine();
  
  // repeated .PBNpc Npc = 13;
  inline int npc_size() const;
  inline void clear_npc();
  static const int kNpcFieldNumber = 13;
  inline const ::google::protobuf::RepeatedPtrField< ::PBNpc >& npc() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBNpc >* mutable_npc();
  inline const ::PBNpc& npc(int index) const;
  inline ::PBNpc* mutable_npc(int index);
  inline ::PBNpc* add_npc();
  
  // repeated .PBNPCCollect NpcCollect = 15;
  inline int npccollect_size() const;
  inline void clear_npccollect();
  static const int kNpcCollectFieldNumber = 15;
  inline const ::google::protobuf::RepeatedPtrField< ::PBNPCCollect >& npccollect() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBNPCCollect >* mutable_npccollect();
  inline const ::PBNPCCollect& npccollect(int index) const;
  inline ::PBNPCCollect* mutable_npccollect(int index);
  inline ::PBNPCCollect* add_npccollect();
  
  // repeated .PBOgreBox Box = 16;
  inline int box_size() const;
  inline void clear_box();
  static const int kBoxFieldNumber = 16;
  inline const ::google::protobuf::RepeatedPtrField< ::PBOgreBox >& box() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBOgreBox >* mutable_box();
  inline const ::PBOgreBox& box(int index) const;
  inline ::PBOgreBox* mutable_box(int index);
  inline ::PBOgreBox* add_box();
  
  // repeated .PBOgreProperty OgreProperty = 17;
  inline int ogreproperty_size() const;
  inline void clear_ogreproperty();
  static const int kOgrePropertyFieldNumber = 17;
  inline const ::google::protobuf::RepeatedPtrField< ::PBOgreProperty >& ogreproperty() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBOgreProperty >* mutable_ogreproperty();
  inline const ::PBOgreProperty& ogreproperty(int index) const;
  inline ::PBOgreProperty* mutable_ogreproperty(int index);
  inline ::PBOgreProperty* add_ogreproperty();
  
  // repeated .PBPetLevelExp PetLevelExp = 18;
  inline int petlevelexp_size() const;
  inline void clear_petlevelexp();
  static const int kPetLevelExpFieldNumber = 18;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPetLevelExp >& petlevelexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPetLevelExp >* mutable_petlevelexp();
  inline const ::PBPetLevelExp& petlevelexp(int index) const;
  inline ::PBPetLevelExp* mutable_petlevelexp(int index);
  inline ::PBPetLevelExp* add_petlevelexp();
  
  // repeated .PBQuestionExp QuestionExp = 19;
  inline int questionexp_size() const;
  inline void clear_questionexp();
  static const int kQuestionExpFieldNumber = 19;
  inline const ::google::protobuf::RepeatedPtrField< ::PBQuestionExp >& questionexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBQuestionExp >* mutable_questionexp();
  inline const ::PBQuestionExp& questionexp(int index) const;
  inline ::PBQuestionExp* mutable_questionexp(int index);
  inline ::PBQuestionExp* add_questionexp();
  
  // repeated .PBShowPet ShowPet = 20;
  inline int showpet_size() const;
  inline void clear_showpet();
  static const int kShowPetFieldNumber = 20;
  inline const ::google::protobuf::RepeatedPtrField< ::PBShowPet >& showpet() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBShowPet >* mutable_showpet();
  inline const ::PBShowPet& showpet(int index) const;
  inline ::PBShowPet* mutable_showpet(int index);
  inline ::PBShowPet* add_showpet();
  
  // repeated .PBSummonBeast SummonBeast = 21;
  inline int summonbeast_size() const;
  inline void clear_summonbeast();
  static const int kSummonBeastFieldNumber = 21;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSummonBeast >& summonbeast() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSummonBeast >* mutable_summonbeast();
  inline const ::PBSummonBeast& summonbeast(int index) const;
  inline ::PBSummonBeast* mutable_summonbeast(int index);
  inline ::PBSummonBeast* add_summonbeast();
  
  // repeated .PBTemplateProperty TplProperty = 22;
  inline int tplproperty_size() const;
  inline void clear_tplproperty();
  static const int kTplPropertyFieldNumber = 22;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateProperty >& tplproperty() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTemplateProperty >* mutable_tplproperty();
  inline const ::PBTemplateProperty& tplproperty(int index) const;
  inline ::PBTemplateProperty* mutable_tplproperty(int index);
  inline ::PBTemplateProperty* add_tplproperty();
  
  // repeated .PBTemplatePropertyTable TplProTable = 23;
  inline int tplprotable_size() const;
  inline void clear_tplprotable();
  static const int kTplProTableFieldNumber = 23;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTemplatePropertyTable >& tplprotable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTemplatePropertyTable >* mutable_tplprotable();
  inline const ::PBTemplatePropertyTable& tplprotable(int index) const;
  inline ::PBTemplatePropertyTable* mutable_tplprotable(int index);
  inline ::PBTemplatePropertyTable* add_tplprotable();
  
  // repeated .PBTotalDrop TotalDrop = 24;
  inline int totaldrop_size() const;
  inline void clear_totaldrop();
  static const int kTotalDropFieldNumber = 24;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTotalDrop >& totaldrop() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTotalDrop >* mutable_totaldrop();
  inline const ::PBTotalDrop& totaldrop(int index) const;
  inline ::PBTotalDrop* mutable_totaldrop(int index);
  inline ::PBTotalDrop* add_totaldrop();
  
  // repeated .PBBlock Block = 25;
  inline int block_size() const;
  inline void clear_block();
  static const int kBlockFieldNumber = 25;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBlock >& block() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBlock >* mutable_block();
  inline const ::PBBlock& block(int index) const;
  inline ::PBBlock* mutable_block(int index);
  inline ::PBBlock* add_block();
  
  // repeated .PBTplHierogram Hierogram = 26;
  inline int hierogram_size() const;
  inline void clear_hierogram();
  static const int kHierogramFieldNumber = 26;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTplHierogram >& hierogram() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTplHierogram >* mutable_hierogram();
  inline const ::PBTplHierogram& hierogram(int index) const;
  inline ::PBTplHierogram* mutable_hierogram(int index);
  inline ::PBTplHierogram* add_hierogram();
  
  // repeated .PBTemplateTalent Talent = 27;
  inline int talent_size() const;
  inline void clear_talent();
  static const int kTalentFieldNumber = 27;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateTalent >& talent() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTemplateTalent >* mutable_talent();
  inline const ::PBTemplateTalent& talent(int index) const;
  inline ::PBTemplateTalent* mutable_talent(int index);
  inline ::PBTemplateTalent* add_talent();
  
  // repeated .PBTplBuffImmunity BuffImmunity = 28;
  inline int buffimmunity_size() const;
  inline void clear_buffimmunity();
  static const int kBuffImmunityFieldNumber = 28;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTplBuffImmunity >& buffimmunity() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTplBuffImmunity >* mutable_buffimmunity();
  inline const ::PBTplBuffImmunity& buffimmunity(int index) const;
  inline ::PBTplBuffImmunity* mutable_buffimmunity(int index);
  inline ::PBTplBuffImmunity* add_buffimmunity();
  
  // repeated .PBTemplateLifeSkill LifeSkill = 29;
  inline int lifeskill_size() const;
  inline void clear_lifeskill();
  static const int kLifeSkillFieldNumber = 29;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateLifeSkill >& lifeskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTemplateLifeSkill >* mutable_lifeskill();
  inline const ::PBTemplateLifeSkill& lifeskill(int index) const;
  inline ::PBTemplateLifeSkill* mutable_lifeskill(int index);
  inline ::PBTemplateLifeSkill* add_lifeskill();
  
  // repeated .PBLifeSkillScroll LifeSkillScroll = 30;
  inline int lifeskillscroll_size() const;
  inline void clear_lifeskillscroll();
  static const int kLifeSkillScrollFieldNumber = 30;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLifeSkillScroll >& lifeskillscroll() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLifeSkillScroll >* mutable_lifeskillscroll();
  inline const ::PBLifeSkillScroll& lifeskillscroll(int index) const;
  inline ::PBLifeSkillScroll* mutable_lifeskillscroll(int index);
  inline ::PBLifeSkillScroll* add_lifeskillscroll();
  
  // repeated .PBTitleManager TitleManager = 31;
  inline int titlemanager_size() const;
  inline void clear_titlemanager();
  static const int kTitleManagerFieldNumber = 31;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTitleManager >& titlemanager() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTitleManager >* mutable_titlemanager();
  inline const ::PBTitleManager& titlemanager(int index) const;
  inline ::PBTitleManager* mutable_titlemanager(int index);
  inline ::PBTitleManager* add_titlemanager();
  
  // repeated .PBSkillStorage MagicWeaponSkillStorage = 32;
  inline int magicweaponskillstorage_size() const;
  inline void clear_magicweaponskillstorage();
  static const int kMagicWeaponSkillStorageFieldNumber = 32;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkillStorage >& magicweaponskillstorage() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkillStorage >* mutable_magicweaponskillstorage();
  inline const ::PBSkillStorage& magicweaponskillstorage(int index) const;
  inline ::PBSkillStorage* mutable_magicweaponskillstorage(int index);
  inline ::PBSkillStorage* add_magicweaponskillstorage();
  
  // repeated .PBCDGroupTable CDGroupTable = 33;
  inline int cdgrouptable_size() const;
  inline void clear_cdgrouptable();
  static const int kCDGroupTableFieldNumber = 33;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCDGroupTable >& cdgrouptable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCDGroupTable >* mutable_cdgrouptable();
  inline const ::PBCDGroupTable& cdgrouptable(int index) const;
  inline ::PBCDGroupTable* mutable_cdgrouptable(int index);
  inline ::PBCDGroupTable* add_cdgrouptable();
  
  // repeated .PBApConfig ApConfig = 34;
  inline int apconfig_size() const;
  inline void clear_apconfig();
  static const int kApConfigFieldNumber = 34;
  inline const ::google::protobuf::RepeatedPtrField< ::PBApConfig >& apconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBApConfig >* mutable_apconfig();
  inline const ::PBApConfig& apconfig(int index) const;
  inline ::PBApConfig* mutable_apconfig(int index);
  inline ::PBApConfig* add_apconfig();
  
  // repeated .PBJudgeConfig JudgeConfig = 35;
  inline int judgeconfig_size() const;
  inline void clear_judgeconfig();
  static const int kJudgeConfigFieldNumber = 35;
  inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeConfig >& judgeconfig() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBJudgeConfig >* mutable_judgeconfig();
  inline const ::PBJudgeConfig& judgeconfig(int index) const;
  inline ::PBJudgeConfig* mutable_judgeconfig(int index);
  inline ::PBJudgeConfig* add_judgeconfig();
  
  // repeated .PBWizardTable WizardTable = 36;
  inline int wizardtable_size() const;
  inline void clear_wizardtable();
  static const int kWizardTableFieldNumber = 36;
  inline const ::google::protobuf::RepeatedPtrField< ::PBWizardTable >& wizardtable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWizardTable >* mutable_wizardtable();
  inline const ::PBWizardTable& wizardtable(int index) const;
  inline ::PBWizardTable* mutable_wizardtable(int index);
  inline ::PBWizardTable* add_wizardtable();
  
  // repeated .PBTrend Trend = 37;
  inline int trend_size() const;
  inline void clear_trend();
  static const int kTrendFieldNumber = 37;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTrend >& trend() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTrend >* mutable_trend();
  inline const ::PBTrend& trend(int index) const;
  inline ::PBTrend* mutable_trend(int index);
  inline ::PBTrend* add_trend();
  
  // repeated .PBAchieveAward AchieveAward = 38;
  inline int achieveaward_size() const;
  inline void clear_achieveaward();
  static const int kAchieveAwardFieldNumber = 38;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAchieveAward >& achieveaward() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAchieveAward >* mutable_achieveaward();
  inline const ::PBAchieveAward& achieveaward(int index) const;
  inline ::PBAchieveAward* mutable_achieveaward(int index);
  inline ::PBAchieveAward* add_achieveaward();
  
  // repeated .PBPower Power = 39;
  inline int power_size() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 39;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPower >& power() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPower >* mutable_power();
  inline const ::PBPower& power(int index) const;
  inline ::PBPower* mutable_power(int index);
  inline ::PBPower* add_power();
  
  // repeated .PBOfficial Official = 40;
  inline int official_size() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 40;
  inline const ::google::protobuf::RepeatedPtrField< ::PBOfficial >& official() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBOfficial >* mutable_official();
  inline const ::PBOfficial& official(int index) const;
  inline ::PBOfficial* mutable_official(int index);
  inline ::PBOfficial* add_official();
  
  // repeated .PBConstructExp ConstructExp = 41;
  inline int constructexp_size() const;
  inline void clear_constructexp();
  static const int kConstructExpFieldNumber = 41;
  inline const ::google::protobuf::RepeatedPtrField< ::PBConstructExp >& constructexp() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBConstructExp >* mutable_constructexp();
  inline const ::PBConstructExp& constructexp(int index) const;
  inline ::PBConstructExp* mutable_constructexp(int index);
  inline ::PBConstructExp* add_constructexp();
  
  // repeated .PBTemplateTalentStage TalentStage = 42;
  inline int talentstage_size() const;
  inline void clear_talentstage();
  static const int kTalentStageFieldNumber = 42;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateTalentStage >& talentstage() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTemplateTalentStage >* mutable_talentstage();
  inline const ::PBTemplateTalentStage& talentstage(int index) const;
  inline ::PBTemplateTalentStage* mutable_talentstage(int index);
  inline ::PBTemplateTalentStage* add_talentstage();
  
  // repeated .PBCorpsBOSS CorpsBOSS = 43;
  inline int corpsboss_size() const;
  inline void clear_corpsboss();
  static const int kCorpsBOSSFieldNumber = 43;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsBOSS >& corpsboss() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsBOSS >* mutable_corpsboss();
  inline const ::PBCorpsBOSS& corpsboss(int index) const;
  inline ::PBCorpsBOSS* mutable_corpsboss(int index);
  inline ::PBCorpsBOSS* add_corpsboss();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemSet* itemset_;
  ::PBConfigTable* configtable_;
  ::PBSkillSet* skillset_;
  ::PBEquipSet* equipset_;
  ::google::protobuf::RepeatedPtrField< ::PBBattlePet > battlepet_;
  ::google::protobuf::RepeatedPtrField< ::PBHonorObtain > honorobtain_;
  ::google::protobuf::RepeatedPtrField< ::PBHonorToExp > honortoexp_;
  ::google::protobuf::RepeatedPtrField< ::PBLevelExp > levelexp_;
  ::google::protobuf::RepeatedPtrField< ::PBLevelProperty > levelpro_;
  ::google::protobuf::RepeatedPtrField< ::PBMetier > metier_;
  ::google::protobuf::RepeatedPtrField< ::PBMetierPro > metierpro_;
  ::google::protobuf::RepeatedPtrField< ::PBMine > mine_;
  ::google::protobuf::RepeatedPtrField< ::PBNpc > npc_;
  ::google::protobuf::RepeatedPtrField< ::PBNPCCollect > npccollect_;
  ::google::protobuf::RepeatedPtrField< ::PBOgreBox > box_;
  ::google::protobuf::RepeatedPtrField< ::PBOgreProperty > ogreproperty_;
  ::google::protobuf::RepeatedPtrField< ::PBPetLevelExp > petlevelexp_;
  ::google::protobuf::RepeatedPtrField< ::PBQuestionExp > questionexp_;
  ::google::protobuf::RepeatedPtrField< ::PBShowPet > showpet_;
  ::google::protobuf::RepeatedPtrField< ::PBSummonBeast > summonbeast_;
  ::google::protobuf::RepeatedPtrField< ::PBTemplateProperty > tplproperty_;
  ::google::protobuf::RepeatedPtrField< ::PBTemplatePropertyTable > tplprotable_;
  ::google::protobuf::RepeatedPtrField< ::PBTotalDrop > totaldrop_;
  ::google::protobuf::RepeatedPtrField< ::PBBlock > block_;
  ::google::protobuf::RepeatedPtrField< ::PBTplHierogram > hierogram_;
  ::google::protobuf::RepeatedPtrField< ::PBTemplateTalent > talent_;
  ::google::protobuf::RepeatedPtrField< ::PBTplBuffImmunity > buffimmunity_;
  ::google::protobuf::RepeatedPtrField< ::PBTemplateLifeSkill > lifeskill_;
  ::google::protobuf::RepeatedPtrField< ::PBLifeSkillScroll > lifeskillscroll_;
  ::google::protobuf::RepeatedPtrField< ::PBTitleManager > titlemanager_;
  ::google::protobuf::RepeatedPtrField< ::PBSkillStorage > magicweaponskillstorage_;
  ::google::protobuf::RepeatedPtrField< ::PBCDGroupTable > cdgrouptable_;
  ::google::protobuf::RepeatedPtrField< ::PBApConfig > apconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBJudgeConfig > judgeconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBWizardTable > wizardtable_;
  ::google::protobuf::RepeatedPtrField< ::PBTrend > trend_;
  ::google::protobuf::RepeatedPtrField< ::PBAchieveAward > achieveaward_;
  ::google::protobuf::RepeatedPtrField< ::PBPower > power_;
  ::google::protobuf::RepeatedPtrField< ::PBOfficial > official_;
  ::google::protobuf::RepeatedPtrField< ::PBConstructExp > constructexp_;
  ::google::protobuf::RepeatedPtrField< ::PBTemplateTalentStage > talentstage_;
  ::google::protobuf::RepeatedPtrField< ::PBCorpsBOSS > corpsboss_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(42 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTemplate* default_instance_;
};
// -------------------------------------------------------------------

class PBHandinEncourage : public ::google::protobuf::Message {
 public:
  PBHandinEncourage();
  virtual ~PBHandinEncourage();
  
  PBHandinEncourage(const PBHandinEncourage& from);
  
  inline PBHandinEncourage& operator=(const PBHandinEncourage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHandinEncourage& default_instance();
  void Swap(PBHandinEncourage* other);
  
  // implements Message ----------------------------------------------
  
  PBHandinEncourage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHandinEncourage& from);
  void MergeFrom(const PBHandinEncourage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempId = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIdFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 HandinItemType = 2;
  inline bool has_handinitemtype() const;
  inline void clear_handinitemtype();
  static const int kHandinItemTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 handinitemtype() const;
  inline void set_handinitemtype(::google::protobuf::uint32 value);
  
  // optional uint32 HandinItemID = 3;
  inline bool has_handinitemid() const;
  inline void clear_handinitemid();
  static const int kHandinItemIDFieldNumber = 3;
  inline ::google::protobuf::uint32 handinitemid() const;
  inline void set_handinitemid(::google::protobuf::uint32 value);
  
  // optional uint32 HandinItemNum = 4;
  inline bool has_handinitemnum() const;
  inline void clear_handinitemnum();
  static const int kHandinItemNumFieldNumber = 4;
  inline ::google::protobuf::uint32 handinitemnum() const;
  inline void set_handinitemnum(::google::protobuf::uint32 value);
  
  // optional uint32 EncourageType = 5;
  inline bool has_encouragetype() const;
  inline void clear_encouragetype();
  static const int kEncourageTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 encouragetype() const;
  inline void set_encouragetype(::google::protobuf::uint32 value);
  
  // optional uint32 EncourageId = 6;
  inline bool has_encourageid() const;
  inline void clear_encourageid();
  static const int kEncourageIdFieldNumber = 6;
  inline ::google::protobuf::uint32 encourageid() const;
  inline void set_encourageid(::google::protobuf::uint32 value);
  
  // optional uint32 EncourageNum = 7;
  inline bool has_encouragenum() const;
  inline void clear_encouragenum();
  static const int kEncourageNumFieldNumber = 7;
  inline ::google::protobuf::uint32 encouragenum() const;
  inline void set_encouragenum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 handinitemtype_;
  ::google::protobuf::uint32 handinitemid_;
  ::google::protobuf::uint32 handinitemnum_;
  ::google::protobuf::uint32 encouragetype_;
  ::google::protobuf::uint32 encourageid_;
  ::google::protobuf::uint32 encouragenum_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBHandinEncourage* default_instance_;
};
// -------------------------------------------------------------------

class PBHandinTable : public ::google::protobuf::Message {
 public:
  PBHandinTable();
  virtual ~PBHandinTable();
  
  PBHandinTable(const PBHandinTable& from);
  
  inline PBHandinTable& operator=(const PBHandinTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHandinTable& default_instance();
  void Swap(PBHandinTable* other);
  
  // implements Message ----------------------------------------------
  
  PBHandinTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHandinTable& from);
  void MergeFrom(const PBHandinTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 ActivityId = 2;
  inline bool has_activityid() const;
  inline void clear_activityid();
  static const int kActivityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 activityid() const;
  inline void set_activityid(::google::protobuf::uint32 value);
  
  // repeated uint32 EncourageTplID = 3;
  inline int encouragetplid_size() const;
  inline void clear_encouragetplid();
  static const int kEncourageTplIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& encouragetplid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_encouragetplid();
  inline ::google::protobuf::uint32 encouragetplid(int index) const;
  inline void set_encouragetplid(int index, ::google::protobuf::uint32 value);
  inline void add_encouragetplid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 activityid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > encouragetplid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBHandinTable* default_instance_;
};
// -------------------------------------------------------------------

class PBItemBase : public ::google::protobuf::Message {
 public:
  PBItemBase();
  virtual ~PBItemBase();
  
  PBItemBase(const PBItemBase& from);
  
  inline PBItemBase& operator=(const PBItemBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemBase& default_instance();
  void Swap(PBItemBase* other);
  
  // implements Message ----------------------------------------------
  
  PBItemBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemBase& from);
  void MergeFrom(const PBItemBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemType = 2;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);
  
  // optional uint32 ProcessType = 3;
  inline bool has_processtype() const;
  inline void clear_processtype();
  static const int kProcessTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 processtype() const;
  inline void set_processtype(::google::protobuf::uint32 value);
  
  // optional uint32 PileLimit = 4;
  inline bool has_pilelimit() const;
  inline void clear_pilelimit();
  static const int kPileLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 pilelimit() const;
  inline void set_pilelimit(::google::protobuf::uint32 value);
  
  // optional string ItemName = 5;
  inline bool has_itemname() const;
  inline void clear_itemname();
  static const int kItemNameFieldNumber = 5;
  inline const ::std::string& itemname() const;
  inline void set_itemname(const ::std::string& value);
  inline void set_itemname(const char* value);
  inline void set_itemname(const char* value, size_t size);
  inline ::std::string* mutable_itemname();
  
  // optional string ModelName = 6;
  inline bool has_modelname() const;
  inline void clear_modelname();
  static const int kModelNameFieldNumber = 6;
  inline const ::std::string& modelname() const;
  inline void set_modelname(const ::std::string& value);
  inline void set_modelname(const char* value);
  inline void set_modelname(const char* value, size_t size);
  inline ::std::string* mutable_modelname();
  
  // optional string IconName = 7;
  inline bool has_iconname() const;
  inline void clear_iconname();
  static const int kIconNameFieldNumber = 7;
  inline const ::std::string& iconname() const;
  inline void set_iconname(const ::std::string& value);
  inline void set_iconname(const char* value);
  inline void set_iconname(const char* value, size_t size);
  inline ::std::string* mutable_iconname();
  
  // optional uint32 PurchasePrice = 8;
  inline bool has_purchaseprice() const;
  inline void clear_purchaseprice();
  static const int kPurchasePriceFieldNumber = 8;
  inline ::google::protobuf::uint32 purchaseprice() const;
  inline void set_purchaseprice(::google::protobuf::uint32 value);
  
  // optional uint32 SalePrice = 9;
  inline bool has_saleprice() const;
  inline void clear_saleprice();
  static const int kSalePriceFieldNumber = 9;
  inline ::google::protobuf::uint32 saleprice() const;
  inline void set_saleprice(::google::protobuf::uint32 value);
  
  // optional uint32 PurchaseBindMoney = 10;
  inline bool has_purchasebindmoney() const;
  inline void clear_purchasebindmoney();
  static const int kPurchaseBindMoneyFieldNumber = 10;
  inline ::google::protobuf::uint32 purchasebindmoney() const;
  inline void set_purchasebindmoney(::google::protobuf::uint32 value);
  
  // optional uint32 SaleBindMoney = 11;
  inline bool has_salebindmoney() const;
  inline void clear_salebindmoney();
  static const int kSaleBindMoneyFieldNumber = 11;
  inline ::google::protobuf::uint32 salebindmoney() const;
  inline void set_salebindmoney(::google::protobuf::uint32 value);
  
  // optional string Describe = 12;
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 12;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const char* value, size_t size);
  inline ::std::string* mutable_describe();
  
  // optional uint32 LastTime = 13;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint32 value);
  
  // optional uint32 StopAttack = 14;
  inline bool has_stopattack() const;
  inline void clear_stopattack();
  static const int kStopAttackFieldNumber = 14;
  inline ::google::protobuf::uint32 stopattack() const;
  inline void set_stopattack(::google::protobuf::uint32 value);
  
  // optional string TypeDesc = 15;
  inline bool has_typedesc() const;
  inline void clear_typedesc();
  static const int kTypeDescFieldNumber = 15;
  inline const ::std::string& typedesc() const;
  inline void set_typedesc(const ::std::string& value);
  inline void set_typedesc(const char* value);
  inline void set_typedesc(const char* value, size_t size);
  inline ::std::string* mutable_typedesc();
  
  // optional uint32 CanUse = 16;
  inline bool has_canuse() const;
  inline void clear_canuse();
  static const int kCanUseFieldNumber = 16;
  inline ::google::protobuf::uint32 canuse() const;
  inline void set_canuse(::google::protobuf::uint32 value);
  
  // optional uint32 SkillID = 17;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 17;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 18;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 18;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Disappear = 19;
  inline bool has_disappear() const;
  inline void clear_disappear();
  static const int kDisappearFieldNumber = 19;
  inline ::google::protobuf::uint32 disappear() const;
  inline void set_disappear(::google::protobuf::uint32 value);
  
  // repeated uint32 CDGroup = 20;
  inline int cdgroup_size() const;
  inline void clear_cdgroup();
  static const int kCDGroupFieldNumber = 20;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& cdgroup() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_cdgroup();
  inline ::google::protobuf::uint32 cdgroup(int index) const;
  inline void set_cdgroup(int index, ::google::protobuf::uint32 value);
  inline void add_cdgroup(::google::protobuf::uint32 value);
  
  // repeated uint32 LmtMapID = 21;
  inline int lmtmapid_size() const;
  inline void clear_lmtmapid();
  static const int kLmtMapIDFieldNumber = 21;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lmtmapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lmtmapid();
  inline ::google::protobuf::uint32 lmtmapid(int index) const;
  inline void set_lmtmapid(int index, ::google::protobuf::uint32 value);
  inline void add_lmtmapid(::google::protobuf::uint32 value);
  
  // optional uint32 ValidTime = 22;
  inline bool has_validtime() const;
  inline void clear_validtime();
  static const int kValidTimeFieldNumber = 22;
  inline ::google::protobuf::uint32 validtime() const;
  inline void set_validtime(::google::protobuf::uint32 value);
  
  // optional uint32 ValidType = 23;
  inline bool has_validtype() const;
  inline void clear_validtype();
  static const int kValidTypeFieldNumber = 23;
  inline ::google::protobuf::uint32 validtype() const;
  inline void set_validtype(::google::protobuf::uint32 value);
  
  // optional uint32 CommonID = 24;
  inline bool has_commonid() const;
  inline void clear_commonid();
  static const int kCommonIDFieldNumber = 24;
  inline ::google::protobuf::uint32 commonid() const;
  inline void set_commonid(::google::protobuf::uint32 value);
  
  // optional uint32 EatType = 25;
  inline bool has_eattype() const;
  inline void clear_eattype();
  static const int kEatTypeFieldNumber = 25;
  inline ::google::protobuf::uint32 eattype() const;
  inline void set_eattype(::google::protobuf::uint32 value);
  
  // optional uint32 EatValue = 26;
  inline bool has_eatvalue() const;
  inline void clear_eatvalue();
  static const int kEatValueFieldNumber = 26;
  inline ::google::protobuf::uint32 eatvalue() const;
  inline void set_eatvalue(::google::protobuf::uint32 value);
  
  // optional uint32 CountType = 27;
  inline bool has_counttype() const;
  inline void clear_counttype();
  static const int kCountTypeFieldNumber = 27;
  inline ::google::protobuf::uint32 counttype() const;
  inline void set_counttype(::google::protobuf::uint32 value);
  
  // optional uint32 LmtLineID = 28;
  inline bool has_lmtlineid() const;
  inline void clear_lmtlineid();
  static const int kLmtLineIDFieldNumber = 28;
  inline ::google::protobuf::uint32 lmtlineid() const;
  inline void set_lmtlineid(::google::protobuf::uint32 value);
  
  // repeated uint32 LmtUseMapID = 29;
  inline int lmtusemapid_size() const;
  inline void clear_lmtusemapid();
  static const int kLmtUseMapIDFieldNumber = 29;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lmtusemapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lmtusemapid();
  inline ::google::protobuf::uint32 lmtusemapid(int index) const;
  inline void set_lmtusemapid(int index, ::google::protobuf::uint32 value);
  inline void add_lmtusemapid(::google::protobuf::uint32 value);
  
  // repeated uint32 LmtRepetionID = 30;
  inline int lmtrepetionid_size() const;
  inline void clear_lmtrepetionid();
  static const int kLmtRepetionIDFieldNumber = 30;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lmtrepetionid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lmtrepetionid();
  inline ::google::protobuf::uint32 lmtrepetionid(int index) const;
  inline void set_lmtrepetionid(int index, ::google::protobuf::uint32 value);
  inline void add_lmtrepetionid(::google::protobuf::uint32 value);
  
  // optional uint32 CompID = 31;
  inline bool has_compid() const;
  inline void clear_compid();
  static const int kCompIDFieldNumber = 31;
  inline ::google::protobuf::uint32 compid() const;
  inline void set_compid(::google::protobuf::uint32 value);
  
  // optional uint32 InvilidDate = 32;
  inline bool has_inviliddate() const;
  inline void clear_inviliddate();
  static const int kInvilidDateFieldNumber = 32;
  inline ::google::protobuf::uint32 inviliddate() const;
  inline void set_inviliddate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 processtype_;
  ::google::protobuf::uint32 pilelimit_;
  ::std::string* itemname_;
  static const ::std::string _default_itemname_;
  ::std::string* modelname_;
  static const ::std::string _default_modelname_;
  ::std::string* iconname_;
  static const ::std::string _default_iconname_;
  ::google::protobuf::uint32 purchaseprice_;
  ::google::protobuf::uint32 saleprice_;
  ::google::protobuf::uint32 purchasebindmoney_;
  ::google::protobuf::uint32 salebindmoney_;
  ::std::string* describe_;
  static const ::std::string _default_describe_;
  ::google::protobuf::uint32 lasttime_;
  ::google::protobuf::uint32 stopattack_;
  ::std::string* typedesc_;
  static const ::std::string _default_typedesc_;
  ::google::protobuf::uint32 canuse_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 disappear_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cdgroup_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lmtmapid_;
  ::google::protobuf::uint32 validtime_;
  ::google::protobuf::uint32 validtype_;
  ::google::protobuf::uint32 commonid_;
  ::google::protobuf::uint32 eattype_;
  ::google::protobuf::uint32 eatvalue_;
  ::google::protobuf::uint32 counttype_;
  ::google::protobuf::uint32 lmtlineid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lmtusemapid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lmtrepetionid_;
  ::google::protobuf::uint32 compid_;
  ::google::protobuf::uint32 inviliddate_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(32 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemBase* default_instance_;
};
// -------------------------------------------------------------------

class PBItemReturn : public ::google::protobuf::Message {
 public:
  PBItemReturn();
  virtual ~PBItemReturn();
  
  PBItemReturn(const PBItemReturn& from);
  
  inline PBItemReturn& operator=(const PBItemReturn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemReturn& default_instance();
  void Swap(PBItemReturn* other);
  
  // implements Message ----------------------------------------------
  
  PBItemReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemReturn& from);
  void MergeFrom(const PBItemReturn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 Timer = 2;
  inline bool has_timer() const;
  inline void clear_timer();
  static const int kTimerFieldNumber = 2;
  inline ::google::protobuf::uint32 timer() const;
  inline void set_timer(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 timer_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemReturn* default_instance_;
};
// -------------------------------------------------------------------

class PBItemSkillBook : public ::google::protobuf::Message {
 public:
  PBItemSkillBook();
  virtual ~PBItemSkillBook();
  
  PBItemSkillBook(const PBItemSkillBook& from);
  
  inline PBItemSkillBook& operator=(const PBItemSkillBook& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemSkillBook& default_instance();
  void Swap(PBItemSkillBook* other);
  
  // implements Message ----------------------------------------------
  
  PBItemSkillBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemSkillBook& from);
  void MergeFrom(const PBItemSkillBook& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 Color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
  // optional uint32 SkillID = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 3;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 SuccProb = 4;
  inline bool has_succprob() const;
  inline void clear_succprob();
  static const int kSuccProbFieldNumber = 4;
  inline ::google::protobuf::uint32 succprob() const;
  inline void set_succprob(::google::protobuf::uint32 value);
  
  // optional uint32 NeedMoneyType = 5;
  inline bool has_needmoneytype() const;
  inline void clear_needmoneytype();
  static const int kNeedMoneyTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 needmoneytype() const;
  inline void set_needmoneytype(::google::protobuf::uint32 value);
  
  // optional uint32 NeedMoney = 6;
  inline bool has_needmoney() const;
  inline void clear_needmoney();
  static const int kNeedMoneyFieldNumber = 6;
  inline ::google::protobuf::uint32 needmoney() const;
  inline void set_needmoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 succprob_;
  ::google::protobuf::uint32 needmoneytype_;
  ::google::protobuf::uint32 needmoney_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemSkillBook* default_instance_;
};
// -------------------------------------------------------------------

class PBItemBindStone : public ::google::protobuf::Message {
 public:
  PBItemBindStone();
  virtual ~PBItemBindStone();
  
  PBItemBindStone(const PBItemBindStone& from);
  
  inline PBItemBindStone& operator=(const PBItemBindStone& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemBindStone& default_instance();
  void Swap(PBItemBindStone* other);
  
  // implements Message ----------------------------------------------
  
  PBItemBindStone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemBindStone& from);
  void MergeFrom(const PBItemBindStone& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 FaceGroupID = 2;
  inline bool has_facegroupid() const;
  inline void clear_facegroupid();
  static const int kFaceGroupIDFieldNumber = 2;
  inline ::google::protobuf::uint32 facegroupid() const;
  inline void set_facegroupid(::google::protobuf::uint32 value);
  
  // optional uint32 BindStoneType = 3;
  inline bool has_bindstonetype() const;
  inline void clear_bindstonetype();
  static const int kBindStoneTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 bindstonetype() const;
  inline void set_bindstonetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 facegroupid_;
  ::google::protobuf::uint32 bindstonetype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemBindStone* default_instance_;
};
// -------------------------------------------------------------------

class PBItemScroll : public ::google::protobuf::Message {
 public:
  PBItemScroll();
  virtual ~PBItemScroll();
  
  PBItemScroll(const PBItemScroll& from);
  
  inline PBItemScroll& operator=(const PBItemScroll& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemScroll& default_instance();
  void Swap(PBItemScroll* other);
  
  // implements Message ----------------------------------------------
  
  PBItemScroll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemScroll& from);
  void MergeFrom(const PBItemScroll& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 GetTaskID = 2;
  inline bool has_gettaskid() const;
  inline void clear_gettaskid();
  static const int kGetTaskIDFieldNumber = 2;
  inline ::google::protobuf::uint32 gettaskid() const;
  inline void set_gettaskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 gettaskid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemScroll* default_instance_;
};
// -------------------------------------------------------------------

class PBItemCall : public ::google::protobuf::Message {
 public:
  PBItemCall();
  virtual ~PBItemCall();
  
  PBItemCall(const PBItemCall& from);
  
  inline PBItemCall& operator=(const PBItemCall& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemCall& default_instance();
  void Swap(PBItemCall* other);
  
  // implements Message ----------------------------------------------
  
  PBItemCall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemCall& from);
  void MergeFrom(const PBItemCall& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 CallNpcID = 2;
  inline bool has_callnpcid() const;
  inline void clear_callnpcid();
  static const int kCallNpcIDFieldNumber = 2;
  inline ::google::protobuf::uint32 callnpcid() const;
  inline void set_callnpcid(::google::protobuf::uint32 value);
  
  // optional int32 X = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 Y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
  // optional int32 IsDestroy = 5;
  inline bool has_isdestroy() const;
  inline void clear_isdestroy();
  static const int kIsDestroyFieldNumber = 5;
  inline ::google::protobuf::int32 isdestroy() const;
  inline void set_isdestroy(::google::protobuf::int32 value);
  
  // optional int32 MapID = 6;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 6;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);
  
  // optional int32 LmtMapID = 7;
  inline bool has_lmtmapid() const;
  inline void clear_lmtmapid();
  static const int kLmtMapIDFieldNumber = 7;
  inline ::google::protobuf::int32 lmtmapid() const;
  inline void set_lmtmapid(::google::protobuf::int32 value);
  
  // optional int32 LmtX = 8;
  inline bool has_lmtx() const;
  inline void clear_lmtx();
  static const int kLmtXFieldNumber = 8;
  inline ::google::protobuf::int32 lmtx() const;
  inline void set_lmtx(::google::protobuf::int32 value);
  
  // optional int32 LmtY = 9;
  inline bool has_lmty() const;
  inline void clear_lmty();
  static const int kLmtYFieldNumber = 9;
  inline ::google::protobuf::int32 lmty() const;
  inline void set_lmty(::google::protobuf::int32 value);
  
  // optional int32 LmtWide = 10;
  inline bool has_lmtwide() const;
  inline void clear_lmtwide();
  static const int kLmtWideFieldNumber = 10;
  inline ::google::protobuf::int32 lmtwide() const;
  inline void set_lmtwide(::google::protobuf::int32 value);
  
  // optional int32 LmtHeight = 11;
  inline bool has_lmtheight() const;
  inline void clear_lmtheight();
  static const int kLmtHeightFieldNumber = 11;
  inline ::google::protobuf::int32 lmtheight() const;
  inline void set_lmtheight(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 callnpcid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 isdestroy_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 lmtmapid_;
  ::google::protobuf::int32 lmtx_;
  ::google::protobuf::int32 lmty_;
  ::google::protobuf::int32 lmtwide_;
  ::google::protobuf::int32 lmtheight_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemCall* default_instance_;
};
// -------------------------------------------------------------------

class PBItemCard : public ::google::protobuf::Message {
 public:
  PBItemCard();
  virtual ~PBItemCard();
  
  PBItemCard(const PBItemCard& from);
  
  inline PBItemCard& operator=(const PBItemCard& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemCard& default_instance();
  void Swap(PBItemCard* other);
  
  // implements Message ----------------------------------------------
  
  PBItemCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemCard& from);
  void MergeFrom(const PBItemCard& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional string ShowText = 2;
  inline bool has_showtext() const;
  inline void clear_showtext();
  static const int kShowTextFieldNumber = 2;
  inline const ::std::string& showtext() const;
  inline void set_showtext(const ::std::string& value);
  inline void set_showtext(const char* value);
  inline void set_showtext(const char* value, size_t size);
  inline ::std::string* mutable_showtext();
  
  // optional uint32 Order = 3;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 3;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional string Weapon = 4;
  inline bool has_weapon() const;
  inline void clear_weapon();
  static const int kWeaponFieldNumber = 4;
  inline const ::std::string& weapon() const;
  inline void set_weapon(const ::std::string& value);
  inline void set_weapon(const char* value);
  inline void set_weapon(const char* value, size_t size);
  inline ::std::string* mutable_weapon();
  
  // optional string Skill = 5;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 5;
  inline const ::std::string& skill() const;
  inline void set_skill(const ::std::string& value);
  inline void set_skill(const char* value);
  inline void set_skill(const char* value, size_t size);
  inline ::std::string* mutable_skill();
  
  // optional string Level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline const ::std::string& level() const;
  inline void set_level(const ::std::string& value);
  inline void set_level(const char* value);
  inline void set_level(const char* value, size_t size);
  inline ::std::string* mutable_level();
  
  // optional uint32 Exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // optional uint32 CanExchange = 8;
  inline bool has_canexchange() const;
  inline void clear_canexchange();
  static const int kCanExchangeFieldNumber = 8;
  inline ::google::protobuf::uint32 canexchange() const;
  inline void set_canexchange(::google::protobuf::uint32 value);
  
  // optional uint32 CanChallenge = 9;
  inline bool has_canchallenge() const;
  inline void clear_canchallenge();
  static const int kCanChallengeFieldNumber = 9;
  inline ::google::protobuf::uint32 canchallenge() const;
  inline void set_canchallenge(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 10;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Pos = 11;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 11;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // optional uint32 Bonus = 12;
  inline bool has_bonus() const;
  inline void clear_bonus();
  static const int kBonusFieldNumber = 12;
  inline ::google::protobuf::uint32 bonus() const;
  inline void set_bonus(::google::protobuf::uint32 value);
  
  // optional uint32 SkillID1 = 13;
  inline bool has_skillid1() const;
  inline void clear_skillid1();
  static const int kSkillID1FieldNumber = 13;
  inline ::google::protobuf::uint32 skillid1() const;
  inline void set_skillid1(::google::protobuf::uint32 value);
  
  // optional uint32 SkillID2 = 14;
  inline bool has_skillid2() const;
  inline void clear_skillid2();
  static const int kSkillID2FieldNumber = 14;
  inline ::google::protobuf::uint32 skillid2() const;
  inline void set_skillid2(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::std::string* showtext_;
  static const ::std::string _default_showtext_;
  ::google::protobuf::uint32 order_;
  ::std::string* weapon_;
  static const ::std::string _default_weapon_;
  ::std::string* skill_;
  static const ::std::string _default_skill_;
  ::std::string* level_;
  static const ::std::string _default_level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 canexchange_;
  ::google::protobuf::uint32 canchallenge_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 bonus_;
  ::google::protobuf::uint32 skillid1_;
  ::google::protobuf::uint32 skillid2_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemCard* default_instance_;
};
// -------------------------------------------------------------------

class PBItemTeleport : public ::google::protobuf::Message {
 public:
  PBItemTeleport();
  virtual ~PBItemTeleport();
  
  PBItemTeleport(const PBItemTeleport& from);
  
  inline PBItemTeleport& operator=(const PBItemTeleport& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemTeleport& default_instance();
  void Swap(PBItemTeleport* other);
  
  // implements Message ----------------------------------------------
  
  PBItemTeleport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemTeleport& from);
  void MergeFrom(const PBItemTeleport& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 UseTimes = 3;
  inline bool has_usetimes() const;
  inline void clear_usetimes();
  static const int kUseTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 usetimes() const;
  inline void set_usetimes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 usetimes_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemTeleport* default_instance_;
};
// -------------------------------------------------------------------

class PBItemReturnPaper : public ::google::protobuf::Message {
 public:
  PBItemReturnPaper();
  virtual ~PBItemReturnPaper();
  
  PBItemReturnPaper(const PBItemReturnPaper& from);
  
  inline PBItemReturnPaper& operator=(const PBItemReturnPaper& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemReturnPaper& default_instance();
  void Swap(PBItemReturnPaper* other);
  
  // implements Message ----------------------------------------------
  
  PBItemReturnPaper* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemReturnPaper& from);
  void MergeFrom(const PBItemReturnPaper& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemReturnPaper* default_instance_;
};
// -------------------------------------------------------------------

class PBItemTeleSymbol : public ::google::protobuf::Message {
 public:
  PBItemTeleSymbol();
  virtual ~PBItemTeleSymbol();
  
  PBItemTeleSymbol(const PBItemTeleSymbol& from);
  
  inline PBItemTeleSymbol& operator=(const PBItemTeleSymbol& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemTeleSymbol& default_instance();
  void Swap(PBItemTeleSymbol* other);
  
  // implements Message ----------------------------------------------
  
  PBItemTeleSymbol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemTeleSymbol& from);
  void MergeFrom(const PBItemTeleSymbol& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 TeleTable = 2;
  inline bool has_teletable() const;
  inline void clear_teletable();
  static const int kTeleTableFieldNumber = 2;
  inline ::google::protobuf::uint32 teletable() const;
  inline void set_teletable(::google::protobuf::uint32 value);
  
  // optional uint32 UseTimes = 3;
  inline bool has_usetimes() const;
  inline void clear_usetimes();
  static const int kUseTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 usetimes() const;
  inline void set_usetimes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 teletable_;
  ::google::protobuf::uint32 usetimes_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemTeleSymbol* default_instance_;
};
// -------------------------------------------------------------------

class PBItemStove : public ::google::protobuf::Message {
 public:
  PBItemStove();
  virtual ~PBItemStove();
  
  PBItemStove(const PBItemStove& from);
  
  inline PBItemStove& operator=(const PBItemStove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemStove& default_instance();
  void Swap(PBItemStove* other);
  
  // implements Message ----------------------------------------------
  
  PBItemStove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemStove& from);
  void MergeFrom(const PBItemStove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 LineID = 2;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline ::google::protobuf::uint32 lineid() const;
  inline void set_lineid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 CoolTime = 6;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCoolTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 cooltime() const;
  inline void set_cooltime(::google::protobuf::uint32 value);
  
  // optional uint32 MetierLimit = 7;
  inline bool has_metierlimit() const;
  inline void clear_metierlimit();
  static const int kMetierLimitFieldNumber = 7;
  inline ::google::protobuf::uint32 metierlimit() const;
  inline void set_metierlimit(::google::protobuf::uint32 value);
  
  // optional uint32 LevelLimit = 8;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 8;
  inline ::google::protobuf::uint32 levellimit() const;
  inline void set_levellimit(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 lineid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 cooltime_;
  ::google::protobuf::uint32 metierlimit_;
  ::google::protobuf::uint32 levellimit_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemStove* default_instance_;
};
// -------------------------------------------------------------------

class PBItemPetEgg : public ::google::protobuf::Message {
 public:
  PBItemPetEgg();
  virtual ~PBItemPetEgg();
  
  PBItemPetEgg(const PBItemPetEgg& from);
  
  inline PBItemPetEgg& operator=(const PBItemPetEgg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemPetEgg& default_instance();
  void Swap(PBItemPetEgg* other);
  
  // implements Message ----------------------------------------------
  
  PBItemPetEgg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemPetEgg& from);
  void MergeFrom(const PBItemPetEgg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 PetTempID = 2;
  inline bool has_pettempid() const;
  inline void clear_pettempid();
  static const int kPetTempIDFieldNumber = 2;
  inline ::google::protobuf::uint32 pettempid() const;
  inline void set_pettempid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedItemID = 3;
  inline bool has_needitemid() const;
  inline void clear_needitemid();
  static const int kNeedItemIDFieldNumber = 3;
  inline ::google::protobuf::uint32 needitemid() const;
  inline void set_needitemid(::google::protobuf::uint32 value);
  
  // optional uint32 RevertPrice = 4;
  inline bool has_revertprice() const;
  inline void clear_revertprice();
  static const int kRevertPriceFieldNumber = 4;
  inline ::google::protobuf::uint32 revertprice() const;
  inline void set_revertprice(::google::protobuf::uint32 value);
  
  // optional uint32 InitAdvice = 5;
  inline bool has_initadvice() const;
  inline void clear_initadvice();
  static const int kInitAdviceFieldNumber = 5;
  inline ::google::protobuf::uint32 initadvice() const;
  inline void set_initadvice(::google::protobuf::uint32 value);
  
  // optional uint32 InitLevel = 6;
  inline bool has_initlevel() const;
  inline void clear_initlevel();
  static const int kInitLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 initlevel() const;
  inline void set_initlevel(::google::protobuf::uint32 value);
  
  // optional uint32 InitExp = 7;
  inline bool has_initexp() const;
  inline void clear_initexp();
  static const int kInitExpFieldNumber = 7;
  inline ::google::protobuf::uint32 initexp() const;
  inline void set_initexp(::google::protobuf::uint32 value);
  
  // optional uint32 InitSkillPoint = 8;
  inline bool has_initskillpoint() const;
  inline void clear_initskillpoint();
  static const int kInitSkillPointFieldNumber = 8;
  inline ::google::protobuf::uint32 initskillpoint() const;
  inline void set_initskillpoint(::google::protobuf::uint32 value);
  
  // repeated uint32 InitSkillID = 9;
  inline int initskillid_size() const;
  inline void clear_initskillid();
  static const int kInitSkillIDFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& initskillid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_initskillid();
  inline ::google::protobuf::uint32 initskillid(int index) const;
  inline void set_initskillid(int index, ::google::protobuf::uint32 value);
  inline void add_initskillid(::google::protobuf::uint32 value);
  
  // repeated uint32 InitSkillLevel = 10;
  inline int initskilllevel_size() const;
  inline void clear_initskilllevel();
  static const int kInitSkillLevelFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& initskilllevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_initskilllevel();
  inline ::google::protobuf::uint32 initskilllevel(int index) const;
  inline void set_initskilllevel(int index, ::google::protobuf::uint32 value);
  inline void add_initskilllevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 pettempid_;
  ::google::protobuf::uint32 needitemid_;
  ::google::protobuf::uint32 revertprice_;
  ::google::protobuf::uint32 initadvice_;
  ::google::protobuf::uint32 initlevel_;
  ::google::protobuf::uint32 initexp_;
  ::google::protobuf::uint32 initskillpoint_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > initskillid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > initskilllevel_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemPetEgg* default_instance_;
};
// -------------------------------------------------------------------

class PBItemPetFood : public ::google::protobuf::Message {
 public:
  PBItemPetFood();
  virtual ~PBItemPetFood();
  
  PBItemPetFood(const PBItemPetFood& from);
  
  inline PBItemPetFood& operator=(const PBItemPetFood& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemPetFood& default_instance();
  void Swap(PBItemPetFood* other);
  
  // implements Message ----------------------------------------------
  
  PBItemPetFood* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemPetFood& from);
  void MergeFrom(const PBItemPetFood& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 InitLevel = 2;
  inline bool has_initlevel() const;
  inline void clear_initlevel();
  static const int kInitLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 initlevel() const;
  inline void set_initlevel(::google::protobuf::uint32 value);
  
  // optional uint32 FullLevel = 3;
  inline bool has_fulllevel() const;
  inline void clear_fulllevel();
  static const int kFullLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 fulllevel() const;
  inline void set_fulllevel(::google::protobuf::uint32 value);
  
  // optional uint32 TypeMask = 4;
  inline bool has_typemask() const;
  inline void clear_typemask();
  static const int kTypeMaskFieldNumber = 4;
  inline ::google::protobuf::uint32 typemask() const;
  inline void set_typemask(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 initlevel_;
  ::google::protobuf::uint32 fulllevel_;
  ::google::protobuf::uint32 typemask_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemPetFood* default_instance_;
};
// -------------------------------------------------------------------

class PBItemRelife : public ::google::protobuf::Message {
 public:
  PBItemRelife();
  virtual ~PBItemRelife();
  
  PBItemRelife(const PBItemRelife& from);
  
  inline PBItemRelife& operator=(const PBItemRelife& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemRelife& default_instance();
  void Swap(PBItemRelife* other);
  
  // implements Message ----------------------------------------------
  
  PBItemRelife* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemRelife& from);
  void MergeFrom(const PBItemRelife& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 Timer = 2;
  inline bool has_timer() const;
  inline void clear_timer();
  static const int kTimerFieldNumber = 2;
  inline ::google::protobuf::uint32 timer() const;
  inline void set_timer(::google::protobuf::uint32 value);
  
  // optional uint32 CoolTime = 3;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCoolTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 cooltime() const;
  inline void set_cooltime(::google::protobuf::uint32 value);
  
  // optional uint32 ShareCD = 4;
  inline bool has_sharecd() const;
  inline void clear_sharecd();
  static const int kShareCDFieldNumber = 4;
  inline ::google::protobuf::uint32 sharecd() const;
  inline void set_sharecd(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 timer_;
  ::google::protobuf::uint32 cooltime_;
  ::google::protobuf::uint32 sharecd_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemRelife* default_instance_;
};
// -------------------------------------------------------------------

class PBItemSkill : public ::google::protobuf::Message {
 public:
  PBItemSkill();
  virtual ~PBItemSkill();
  
  PBItemSkill(const PBItemSkill& from);
  
  inline PBItemSkill& operator=(const PBItemSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemSkill& default_instance();
  void Swap(PBItemSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBItemSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemSkill& from);
  void MergeFrom(const PBItemSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 LevelLimit = 2;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 2;
  inline ::google::protobuf::uint32 levellimit() const;
  inline void set_levellimit(::google::protobuf::uint32 value);
  
  // optional uint32 SkillID = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 3;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 CoolTime = 4;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCoolTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 cooltime() const;
  inline void set_cooltime(::google::protobuf::uint32 value);
  
  // optional uint32 ShareCD = 5;
  inline bool has_sharecd() const;
  inline void clear_sharecd();
  static const int kShareCDFieldNumber = 5;
  inline ::google::protobuf::uint32 sharecd() const;
  inline void set_sharecd(::google::protobuf::uint32 value);
  
  // optional uint32 OprType = 6;
  inline bool has_oprtype() const;
  inline void clear_oprtype();
  static const int kOprTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 oprtype() const;
  inline void set_oprtype(::google::protobuf::uint32 value);
  
  // optional uint32 BuffID = 7;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 7;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 levellimit_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 cooltime_;
  ::google::protobuf::uint32 sharecd_;
  ::google::protobuf::uint32 oprtype_;
  ::google::protobuf::uint32 buffid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBItemBook : public ::google::protobuf::Message {
 public:
  PBItemBook();
  virtual ~PBItemBook();
  
  PBItemBook(const PBItemBook& from);
  
  inline PBItemBook& operator=(const PBItemBook& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemBook& default_instance();
  void Swap(PBItemBook* other);
  
  // implements Message ----------------------------------------------
  
  PBItemBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemBook& from);
  void MergeFrom(const PBItemBook& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 OPType = 2;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOPTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemBook* default_instance_;
};
// -------------------------------------------------------------------

class PBItemUpg : public ::google::protobuf::Message {
 public:
  PBItemUpg();
  virtual ~PBItemUpg();
  
  PBItemUpg(const PBItemUpg& from);
  
  inline PBItemUpg& operator=(const PBItemUpg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemUpg& default_instance();
  void Swap(PBItemUpg* other);
  
  // implements Message ----------------------------------------------
  
  PBItemUpg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemUpg& from);
  void MergeFrom(const PBItemUpg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 MaxLevel = 2;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Limit = 4;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);
  
  // optional uint32 Fail = 5;
  inline bool has_fail() const;
  inline void clear_fail();
  static const int kFailFieldNumber = 5;
  inline ::google::protobuf::uint32 fail() const;
  inline void set_fail(::google::protobuf::uint32 value);
  
  // repeated uint32 Luck = 6;
  inline int luck_size() const;
  inline void clear_luck();
  static const int kLuckFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& luck() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_luck();
  inline ::google::protobuf::uint32 luck(int index) const;
  inline void set_luck(int index, ::google::protobuf::uint32 value);
  inline void add_luck(::google::protobuf::uint32 value);
  
  // optional uint32 UpType = 7;
  inline bool has_uptype() const;
  inline void clear_uptype();
  static const int kUpTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 uptype() const;
  inline void set_uptype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 fail_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > luck_;
  ::google::protobuf::uint32 uptype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemUpg* default_instance_;
};
// -------------------------------------------------------------------

class PBItemUpgLuck : public ::google::protobuf::Message {
 public:
  PBItemUpgLuck();
  virtual ~PBItemUpgLuck();
  
  PBItemUpgLuck(const PBItemUpgLuck& from);
  
  inline PBItemUpgLuck& operator=(const PBItemUpgLuck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemUpgLuck& default_instance();
  void Swap(PBItemUpgLuck* other);
  
  // implements Message ----------------------------------------------
  
  PBItemUpgLuck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemUpgLuck& from);
  void MergeFrom(const PBItemUpgLuck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 IncLuck1 = 2;
  inline bool has_incluck1() const;
  inline void clear_incluck1();
  static const int kIncLuck1FieldNumber = 2;
  inline ::google::protobuf::uint32 incluck1() const;
  inline void set_incluck1(::google::protobuf::uint32 value);
  
  // optional uint32 IncLuck2 = 3;
  inline bool has_incluck2() const;
  inline void clear_incluck2();
  static const int kIncLuck2FieldNumber = 3;
  inline ::google::protobuf::uint32 incluck2() const;
  inline void set_incluck2(::google::protobuf::uint32 value);
  
  // repeated uint32 IncLuck3 = 4;
  inline int incluck3_size() const;
  inline void clear_incluck3();
  static const int kIncLuck3FieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& incluck3() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_incluck3();
  inline ::google::protobuf::uint32 incluck3(int index) const;
  inline void set_incluck3(int index, ::google::protobuf::uint32 value);
  inline void add_incluck3(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 incluck1_;
  ::google::protobuf::uint32 incluck2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > incluck3_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemUpgLuck* default_instance_;
};
// -------------------------------------------------------------------

class PBItemUpgLeast : public ::google::protobuf::Message {
 public:
  PBItemUpgLeast();
  virtual ~PBItemUpgLeast();
  
  PBItemUpgLeast(const PBItemUpgLeast& from);
  
  inline PBItemUpgLeast& operator=(const PBItemUpgLeast& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemUpgLeast& default_instance();
  void Swap(PBItemUpgLeast* other);
  
  // implements Message ----------------------------------------------
  
  PBItemUpgLeast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemUpgLeast& from);
  void MergeFrom(const PBItemUpgLeast& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 IncLuck1 = 2;
  inline bool has_incluck1() const;
  inline void clear_incluck1();
  static const int kIncLuck1FieldNumber = 2;
  inline ::google::protobuf::uint32 incluck1() const;
  inline void set_incluck1(::google::protobuf::uint32 value);
  
  // optional uint32 IncLuck2 = 3;
  inline bool has_incluck2() const;
  inline void clear_incluck2();
  static const int kIncLuck2FieldNumber = 3;
  inline ::google::protobuf::uint32 incluck2() const;
  inline void set_incluck2(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 incluck1_;
  ::google::protobuf::uint32 incluck2_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemUpgLeast* default_instance_;
};
// -------------------------------------------------------------------

class PBItemRemove : public ::google::protobuf::Message {
 public:
  PBItemRemove();
  virtual ~PBItemRemove();
  
  PBItemRemove(const PBItemRemove& from);
  
  inline PBItemRemove& operator=(const PBItemRemove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemRemove& default_instance();
  void Swap(PBItemRemove* other);
  
  // implements Message ----------------------------------------------
  
  PBItemRemove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemRemove& from);
  void MergeFrom(const PBItemRemove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // repeated uint32 Rand = 2;
  inline int rand_size() const;
  inline void clear_rand();
  static const int kRandFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& rand() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_rand();
  inline ::google::protobuf::uint32 rand(int index) const;
  inline void set_rand(int index, ::google::protobuf::uint32 value);
  inline void add_rand(::google::protobuf::uint32 value);
  
  // optional uint32 Bind = 3;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 3;
  inline ::google::protobuf::uint32 bind() const;
  inline void set_bind(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Low = 5;
  inline bool has_low() const;
  inline void clear_low();
  static const int kLowFieldNumber = 5;
  inline ::google::protobuf::uint32 low() const;
  inline void set_low(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rand_;
  ::google::protobuf::uint32 bind_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 low_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemRemove* default_instance_;
};
// -------------------------------------------------------------------

class PBItemChange : public ::google::protobuf::Message {
 public:
  PBItemChange();
  virtual ~PBItemChange();
  
  PBItemChange(const PBItemChange& from);
  
  inline PBItemChange& operator=(const PBItemChange& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemChange& default_instance();
  void Swap(PBItemChange* other);
  
  // implements Message ----------------------------------------------
  
  PBItemChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemChange& from);
  void MergeFrom(const PBItemChange& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Res = 3;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 3;
  inline ::google::protobuf::uint32 res() const;
  inline void set_res(::google::protobuf::uint32 value);
  
  // optional uint32 MetierRequire = 4;
  inline bool has_metierrequire() const;
  inline void clear_metierrequire();
  static const int kMetierRequireFieldNumber = 4;
  inline ::google::protobuf::uint32 metierrequire() const;
  inline void set_metierrequire(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 res_;
  ::google::protobuf::uint32 metierrequire_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemChange* default_instance_;
};
// -------------------------------------------------------------------

class PBItemQuestion : public ::google::protobuf::Message {
 public:
  PBItemQuestion();
  virtual ~PBItemQuestion();
  
  PBItemQuestion(const PBItemQuestion& from);
  
  inline PBItemQuestion& operator=(const PBItemQuestion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemQuestion& default_instance();
  void Swap(PBItemQuestion* other);
  
  // implements Message ----------------------------------------------
  
  PBItemQuestion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemQuestion& from);
  void MergeFrom(const PBItemQuestion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // repeated uint32 QuestionRate = 2;
  inline int questionrate_size() const;
  inline void clear_questionrate();
  static const int kQuestionRateFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& questionrate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_questionrate();
  inline ::google::protobuf::uint32 questionrate(int index) const;
  inline void set_questionrate(int index, ::google::protobuf::uint32 value);
  inline void add_questionrate(::google::protobuf::uint32 value);
  
  // optional uint32 ExpAddRae = 3;
  inline bool has_expaddrae() const;
  inline void clear_expaddrae();
  static const int kExpAddRaeFieldNumber = 3;
  inline ::google::protobuf::uint32 expaddrae() const;
  inline void set_expaddrae(::google::protobuf::uint32 value);
  
  // optional uint32 EachTimeLength = 4;
  inline bool has_eachtimelength() const;
  inline void clear_eachtimelength();
  static const int kEachTimeLengthFieldNumber = 4;
  inline ::google::protobuf::uint32 eachtimelength() const;
  inline void set_eachtimelength(::google::protobuf::uint32 value);
  
  // optional uint32 TotalTimeLength = 5;
  inline bool has_totaltimelength() const;
  inline void clear_totaltimelength();
  static const int kTotalTimeLengthFieldNumber = 5;
  inline ::google::protobuf::uint32 totaltimelength() const;
  inline void set_totaltimelength(::google::protobuf::uint32 value);
  
  // optional uint32 RepeatTimeAllowed = 6;
  inline bool has_repeattimeallowed() const;
  inline void clear_repeattimeallowed();
  static const int kRepeatTimeAllowedFieldNumber = 6;
  inline ::google::protobuf::uint32 repeattimeallowed() const;
  inline void set_repeattimeallowed(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > questionrate_;
  ::google::protobuf::uint32 expaddrae_;
  ::google::protobuf::uint32 eachtimelength_;
  ::google::protobuf::uint32 totaltimelength_;
  ::google::protobuf::uint32 repeattimeallowed_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemQuestion* default_instance_;
};
// -------------------------------------------------------------------

class PBItemTask : public ::google::protobuf::Message {
 public:
  PBItemTask();
  virtual ~PBItemTask();
  
  PBItemTask(const PBItemTask& from);
  
  inline PBItemTask& operator=(const PBItemTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemTask& default_instance();
  void Swap(PBItemTask* other);
  
  // implements Message ----------------------------------------------
  
  PBItemTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemTask& from);
  void MergeFrom(const PBItemTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 UseTimes = 2;
  inline bool has_usetimes() const;
  inline void clear_usetimes();
  static const int kUseTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 usetimes() const;
  inline void set_usetimes(::google::protobuf::uint32 value);
  
  // optional uint32 ValidTime = 3;
  inline bool has_validtime() const;
  inline void clear_validtime();
  static const int kValidTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 validtime() const;
  inline void set_validtime(::google::protobuf::uint32 value);
  
  // optional string ShowText = 4;
  inline bool has_showtext() const;
  inline void clear_showtext();
  static const int kShowTextFieldNumber = 4;
  inline const ::std::string& showtext() const;
  inline void set_showtext(const ::std::string& value);
  inline void set_showtext(const char* value);
  inline void set_showtext(const char* value, size_t size);
  inline ::std::string* mutable_showtext();
  
  // optional uint32 MapID = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 6;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 6;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 7;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 7;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 Width = 8;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 8;
  inline ::google::protobuf::uint32 width() const;
  inline void set_width(::google::protobuf::uint32 value);
  
  // optional uint32 Height = 9;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 9;
  inline ::google::protobuf::uint32 height() const;
  inline void set_height(::google::protobuf::uint32 value);
  
  // optional uint32 GetTaskID = 10;
  inline bool has_gettaskid() const;
  inline void clear_gettaskid();
  static const int kGetTaskIDFieldNumber = 10;
  inline ::google::protobuf::uint32 gettaskid() const;
  inline void set_gettaskid(::google::protobuf::uint32 value);
  
  // optional uint32 GiveItemID = 11;
  inline bool has_giveitemid() const;
  inline void clear_giveitemid();
  static const int kGiveItemIDFieldNumber = 11;
  inline ::google::protobuf::uint32 giveitemid() const;
  inline void set_giveitemid(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeTime = 12;
  inline bool has_changetime() const;
  inline void clear_changetime();
  static const int kChangeTimeFieldNumber = 12;
  inline ::google::protobuf::uint32 changetime() const;
  inline void set_changetime(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeItem = 13;
  inline bool has_changeitem() const;
  inline void clear_changeitem();
  static const int kChangeItemFieldNumber = 13;
  inline ::google::protobuf::uint32 changeitem() const;
  inline void set_changeitem(::google::protobuf::uint32 value);
  
  // optional uint32 FailTaskID = 14;
  inline bool has_failtaskid() const;
  inline void clear_failtaskid();
  static const int kFailTaskIDFieldNumber = 14;
  inline ::google::protobuf::uint32 failtaskid() const;
  inline void set_failtaskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 usetimes_;
  ::google::protobuf::uint32 validtime_;
  ::std::string* showtext_;
  static const ::std::string _default_showtext_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 gettaskid_;
  ::google::protobuf::uint32 giveitemid_;
  ::google::protobuf::uint32 changetime_;
  ::google::protobuf::uint32 changeitem_;
  ::google::protobuf::uint32 failtaskid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemTask* default_instance_;
};
// -------------------------------------------------------------------

class PBItemStuff : public ::google::protobuf::Message {
 public:
  PBItemStuff();
  virtual ~PBItemStuff();
  
  PBItemStuff(const PBItemStuff& from);
  
  inline PBItemStuff& operator=(const PBItemStuff& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemStuff& default_instance();
  void Swap(PBItemStuff* other);
  
  // implements Message ----------------------------------------------
  
  PBItemStuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemStuff& from);
  void MergeFrom(const PBItemStuff& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 ShowColor = 2;
  inline bool has_showcolor() const;
  inline void clear_showcolor();
  static const int kShowColorFieldNumber = 2;
  inline ::google::protobuf::uint32 showcolor() const;
  inline void set_showcolor(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeID = 3;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 3;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 showcolor_;
  ::google::protobuf::uint32 composeid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemStuff* default_instance_;
};
// -------------------------------------------------------------------

class PBItemExp : public ::google::protobuf::Message {
 public:
  PBItemExp();
  virtual ~PBItemExp();
  
  PBItemExp(const PBItemExp& from);
  
  inline PBItemExp& operator=(const PBItemExp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemExp& default_instance();
  void Swap(PBItemExp* other);
  
  // implements Message ----------------------------------------------
  
  PBItemExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemExp& from);
  void MergeFrom(const PBItemExp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 IncRate = 2;
  inline bool has_incrate() const;
  inline void clear_incrate();
  static const int kIncRateFieldNumber = 2;
  inline ::google::protobuf::uint32 incrate() const;
  inline void set_incrate(::google::protobuf::uint32 value);
  
  // optional uint32 Time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 incrate_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemExp* default_instance_;
};
// -------------------------------------------------------------------

class PBItemChangeCamp : public ::google::protobuf::Message {
 public:
  PBItemChangeCamp();
  virtual ~PBItemChangeCamp();
  
  PBItemChangeCamp(const PBItemChangeCamp& from);
  
  inline PBItemChangeCamp& operator=(const PBItemChangeCamp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemChangeCamp& default_instance();
  void Swap(PBItemChangeCamp* other);
  
  // implements Message ----------------------------------------------
  
  PBItemChangeCamp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemChangeCamp& from);
  void MergeFrom(const PBItemChangeCamp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TmpID = 1;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);
  
  // optional uint32 m_itemId = 2;
  inline bool has_m_itemid() const;
  inline void clear_m_itemid();
  static const int kMItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 m_itemid() const;
  inline void set_m_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 m_giftId = 3;
  inline bool has_m_giftid() const;
  inline void clear_m_giftid();
  static const int kMGiftIdFieldNumber = 3;
  inline ::google::protobuf::uint32 m_giftid() const;
  inline void set_m_giftid(::google::protobuf::uint32 value);
  
  // optional uint32 m_cd_time = 4;
  inline bool has_m_cd_time() const;
  inline void clear_m_cd_time();
  static const int kMCdTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 m_cd_time() const;
  inline void set_m_cd_time(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tmpid_;
  ::google::protobuf::uint32 m_itemid_;
  ::google::protobuf::uint32 m_giftid_;
  ::google::protobuf::uint32 m_cd_time_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemChangeCamp* default_instance_;
};
// -------------------------------------------------------------------

class PBComRuneUnit : public ::google::protobuf::Message {
 public:
  PBComRuneUnit();
  virtual ~PBComRuneUnit();
  
  PBComRuneUnit(const PBComRuneUnit& from);
  
  inline PBComRuneUnit& operator=(const PBComRuneUnit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBComRuneUnit& default_instance();
  void Swap(PBComRuneUnit* other);
  
  // implements Message ----------------------------------------------
  
  PBComRuneUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBComRuneUnit& from);
  void MergeFrom(const PBComRuneUnit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 m_whitenum = 1;
  inline bool has_m_whitenum() const;
  inline void clear_m_whitenum();
  static const int kMWhitenumFieldNumber = 1;
  inline ::google::protobuf::uint32 m_whitenum() const;
  inline void set_m_whitenum(::google::protobuf::uint32 value);
  
  // optional uint32 m_bluenum = 2;
  inline bool has_m_bluenum() const;
  inline void clear_m_bluenum();
  static const int kMBluenumFieldNumber = 2;
  inline ::google::protobuf::uint32 m_bluenum() const;
  inline void set_m_bluenum(::google::protobuf::uint32 value);
  
  // optional uint32 m_purplenum = 3;
  inline bool has_m_purplenum() const;
  inline void clear_m_purplenum();
  static const int kMPurplenumFieldNumber = 3;
  inline ::google::protobuf::uint32 m_purplenum() const;
  inline void set_m_purplenum(::google::protobuf::uint32 value);
  
  // optional uint32 m_rand = 4;
  inline bool has_m_rand() const;
  inline void clear_m_rand();
  static const int kMRandFieldNumber = 4;
  inline ::google::protobuf::uint32 m_rand() const;
  inline void set_m_rand(::google::protobuf::uint32 value);
  
  // optional uint32 m_money = 5;
  inline bool has_m_money() const;
  inline void clear_m_money();
  static const int kMMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 m_money() const;
  inline void set_m_money(::google::protobuf::uint32 value);
  
  // optional uint32 m_runeLevel = 6;
  inline bool has_m_runelevel() const;
  inline void clear_m_runelevel();
  static const int kMRuneLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 m_runelevel() const;
  inline void set_m_runelevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 m_whitenum_;
  ::google::protobuf::uint32 m_bluenum_;
  ::google::protobuf::uint32 m_purplenum_;
  ::google::protobuf::uint32 m_rand_;
  ::google::protobuf::uint32 m_money_;
  ::google::protobuf::uint32 m_runelevel_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBComRuneUnit* default_instance_;
};
// -------------------------------------------------------------------

class PBComRuneConfig : public ::google::protobuf::Message {
 public:
  PBComRuneConfig();
  virtual ~PBComRuneConfig();
  
  PBComRuneConfig(const PBComRuneConfig& from);
  
  inline PBComRuneConfig& operator=(const PBComRuneConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBComRuneConfig& default_instance();
  void Swap(PBComRuneConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBComRuneConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBComRuneConfig& from);
  void MergeFrom(const PBComRuneConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TmpID = 1;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);
  
  // optional uint32 m_upRuneRand = 2;
  inline bool has_m_uprunerand() const;
  inline void clear_m_uprunerand();
  static const int kMUpRuneRandFieldNumber = 2;
  inline ::google::protobuf::uint32 m_uprunerand() const;
  inline void set_m_uprunerand(::google::protobuf::uint32 value);
  
  // optional uint32 m_max = 3;
  inline bool has_m_max() const;
  inline void clear_m_max();
  static const int kMMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 m_max() const;
  inline void set_m_max(::google::protobuf::uint32 value);
  
  // optional uint32 m_min = 4;
  inline bool has_m_min() const;
  inline void clear_m_min();
  static const int kMMinFieldNumber = 4;
  inline ::google::protobuf::uint32 m_min() const;
  inline void set_m_min(::google::protobuf::uint32 value);
  
  // repeated .PBComRuneUnit m_upRuneUnit = 5;
  inline int m_upruneunit_size() const;
  inline void clear_m_upruneunit();
  static const int kMUpRuneUnitFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::PBComRuneUnit >& m_upruneunit() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBComRuneUnit >* mutable_m_upruneunit();
  inline const ::PBComRuneUnit& m_upruneunit(int index) const;
  inline ::PBComRuneUnit* mutable_m_upruneunit(int index);
  inline ::PBComRuneUnit* add_m_upruneunit();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tmpid_;
  ::google::protobuf::uint32 m_uprunerand_;
  ::google::protobuf::uint32 m_max_;
  ::google::protobuf::uint32 m_min_;
  ::google::protobuf::RepeatedPtrField< ::PBComRuneUnit > m_upruneunit_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBComRuneConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBItemShout : public ::google::protobuf::Message {
 public:
  PBItemShout();
  virtual ~PBItemShout();
  
  PBItemShout(const PBItemShout& from);
  
  inline PBItemShout& operator=(const PBItemShout& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemShout& default_instance();
  void Swap(PBItemShout* other);
  
  // implements Message ----------------------------------------------
  
  PBItemShout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemShout& from);
  void MergeFrom(const PBItemShout& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 FaceGroupID = 2;
  inline bool has_facegroupid() const;
  inline void clear_facegroupid();
  static const int kFaceGroupIDFieldNumber = 2;
  inline ::google::protobuf::uint32 facegroupid() const;
  inline void set_facegroupid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 facegroupid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemShout* default_instance_;
};
// -------------------------------------------------------------------

class PBItemAutoShout : public ::google::protobuf::Message {
 public:
  PBItemAutoShout();
  virtual ~PBItemAutoShout();
  
  PBItemAutoShout(const PBItemAutoShout& from);
  
  inline PBItemAutoShout& operator=(const PBItemAutoShout& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemAutoShout& default_instance();
  void Swap(PBItemAutoShout* other);
  
  // implements Message ----------------------------------------------
  
  PBItemAutoShout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemAutoShout& from);
  void MergeFrom(const PBItemAutoShout& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 FaceGroupID = 2;
  inline bool has_facegroupid() const;
  inline void clear_facegroupid();
  static const int kFaceGroupIDFieldNumber = 2;
  inline ::google::protobuf::uint32 facegroupid() const;
  inline void set_facegroupid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 facegroupid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemAutoShout* default_instance_;
};
// -------------------------------------------------------------------

class PBItemPhysic : public ::google::protobuf::Message {
 public:
  PBItemPhysic();
  virtual ~PBItemPhysic();
  
  PBItemPhysic(const PBItemPhysic& from);
  
  inline PBItemPhysic& operator=(const PBItemPhysic& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemPhysic& default_instance();
  void Swap(PBItemPhysic* other);
  
  // implements Message ----------------------------------------------
  
  PBItemPhysic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemPhysic& from);
  void MergeFrom(const PBItemPhysic& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 ShowType = 2;
  inline bool has_showtype() const;
  inline void clear_showtype();
  static const int kShowTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 showtype() const;
  inline void set_showtype(::google::protobuf::uint32 value);
  
  // optional uint32 BuffID = 3;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 3;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
  // optional uint32 LevelLimit = 4;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 levellimit() const;
  inline void set_levellimit(::google::protobuf::uint32 value);
  
  // optional uint32 HPMaxValue = 5;
  inline bool has_hpmaxvalue() const;
  inline void clear_hpmaxvalue();
  static const int kHPMaxValueFieldNumber = 5;
  inline ::google::protobuf::uint32 hpmaxvalue() const;
  inline void set_hpmaxvalue(::google::protobuf::uint32 value);
  
  // optional uint32 HPTime = 6;
  inline bool has_hptime() const;
  inline void clear_hptime();
  static const int kHPTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 hptime() const;
  inline void set_hptime(::google::protobuf::uint32 value);
  
  // optional uint32 HPIncTime = 7;
  inline bool has_hpinctime() const;
  inline void clear_hpinctime();
  static const int kHPIncTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 hpinctime() const;
  inline void set_hpinctime(::google::protobuf::uint32 value);
  
  // optional uint32 HPInvValue = 8;
  inline bool has_hpinvvalue() const;
  inline void clear_hpinvvalue();
  static const int kHPInvValueFieldNumber = 8;
  inline ::google::protobuf::uint32 hpinvvalue() const;
  inline void set_hpinvvalue(::google::protobuf::uint32 value);
  
  // optional uint32 MPMaxValue = 9;
  inline bool has_mpmaxvalue() const;
  inline void clear_mpmaxvalue();
  static const int kMPMaxValueFieldNumber = 9;
  inline ::google::protobuf::uint32 mpmaxvalue() const;
  inline void set_mpmaxvalue(::google::protobuf::uint32 value);
  
  // optional uint32 MPTime = 10;
  inline bool has_mptime() const;
  inline void clear_mptime();
  static const int kMPTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 mptime() const;
  inline void set_mptime(::google::protobuf::uint32 value);
  
  // optional uint32 MPIncTime = 11;
  inline bool has_mpinctime() const;
  inline void clear_mpinctime();
  static const int kMPIncTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 mpinctime() const;
  inline void set_mpinctime(::google::protobuf::uint32 value);
  
  // optional uint32 MPInvValue = 12;
  inline bool has_mpinvvalue() const;
  inline void clear_mpinvvalue();
  static const int kMPInvValueFieldNumber = 12;
  inline ::google::protobuf::uint32 mpinvvalue() const;
  inline void set_mpinvvalue(::google::protobuf::uint32 value);
  
  // optional uint32 CoolTime = 13;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCoolTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 cooltime() const;
  inline void set_cooltime(::google::protobuf::uint32 value);
  
  // optional uint32 ShareCD = 14;
  inline bool has_sharecd() const;
  inline void clear_sharecd();
  static const int kShareCDFieldNumber = 14;
  inline ::google::protobuf::uint32 sharecd() const;
  inline void set_sharecd(::google::protobuf::uint32 value);
  
  // optional uint32 HPPercent = 15;
  inline bool has_hppercent() const;
  inline void clear_hppercent();
  static const int kHPPercentFieldNumber = 15;
  inline ::google::protobuf::uint32 hppercent() const;
  inline void set_hppercent(::google::protobuf::uint32 value);
  
  // optional uint32 MPPercent = 16;
  inline bool has_mppercent() const;
  inline void clear_mppercent();
  static const int kMPPercentFieldNumber = 16;
  inline ::google::protobuf::uint32 mppercent() const;
  inline void set_mppercent(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHPPercent = 17;
  inline bool has_maxhppercent() const;
  inline void clear_maxhppercent();
  static const int kMaxHPPercentFieldNumber = 17;
  inline ::google::protobuf::uint32 maxhppercent() const;
  inline void set_maxhppercent(::google::protobuf::uint32 value);
  
  // optional uint32 MaxMPPercent = 18;
  inline bool has_maxmppercent() const;
  inline void clear_maxmppercent();
  static const int kMaxMPPercentFieldNumber = 18;
  inline ::google::protobuf::uint32 maxmppercent() const;
  inline void set_maxmppercent(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkilType = 19;
  inline bool has_lifeskiltype() const;
  inline void clear_lifeskiltype();
  static const int kLifeSkilTypeFieldNumber = 19;
  inline ::google::protobuf::uint32 lifeskiltype() const;
  inline void set_lifeskiltype(::google::protobuf::uint32 value);
  
  // optional uint32 DegreeValue = 20;
  inline bool has_degreevalue() const;
  inline void clear_degreevalue();
  static const int kDegreeValueFieldNumber = 20;
  inline ::google::protobuf::uint32 degreevalue() const;
  inline void set_degreevalue(::google::protobuf::uint32 value);
  
  // optional uint32 PhisicType = 21;
  inline bool has_phisictype() const;
  inline void clear_phisictype();
  static const int kPhisicTypeFieldNumber = 21;
  inline ::google::protobuf::uint32 phisictype() const;
  inline void set_phisictype(::google::protobuf::uint32 value);
  
  // optional uint32 ApValue = 22;
  inline bool has_apvalue() const;
  inline void clear_apvalue();
  static const int kApValueFieldNumber = 22;
  inline ::google::protobuf::uint32 apvalue() const;
  inline void set_apvalue(::google::protobuf::uint32 value);
  
  // optional uint32 Color = 23;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 23;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 showtype_;
  ::google::protobuf::uint32 buffid_;
  ::google::protobuf::uint32 levellimit_;
  ::google::protobuf::uint32 hpmaxvalue_;
  ::google::protobuf::uint32 hptime_;
  ::google::protobuf::uint32 hpinctime_;
  ::google::protobuf::uint32 hpinvvalue_;
  ::google::protobuf::uint32 mpmaxvalue_;
  ::google::protobuf::uint32 mptime_;
  ::google::protobuf::uint32 mpinctime_;
  ::google::protobuf::uint32 mpinvvalue_;
  ::google::protobuf::uint32 cooltime_;
  ::google::protobuf::uint32 sharecd_;
  ::google::protobuf::uint32 hppercent_;
  ::google::protobuf::uint32 mppercent_;
  ::google::protobuf::uint32 maxhppercent_;
  ::google::protobuf::uint32 maxmppercent_;
  ::google::protobuf::uint32 lifeskiltype_;
  ::google::protobuf::uint32 degreevalue_;
  ::google::protobuf::uint32 phisictype_;
  ::google::protobuf::uint32 apvalue_;
  ::google::protobuf::uint32 color_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemPhysic* default_instance_;
};
// -------------------------------------------------------------------

class PBItemHorse : public ::google::protobuf::Message {
 public:
  PBItemHorse();
  virtual ~PBItemHorse();
  
  PBItemHorse(const PBItemHorse& from);
  
  inline PBItemHorse& operator=(const PBItemHorse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemHorse& default_instance();
  void Swap(PBItemHorse* other);
  
  // implements Message ----------------------------------------------
  
  PBItemHorse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemHorse& from);
  void MergeFrom(const PBItemHorse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 MetierLimit = 2;
  inline bool has_metierlimit() const;
  inline void clear_metierlimit();
  static const int kMetierLimitFieldNumber = 2;
  inline ::google::protobuf::uint32 metierlimit() const;
  inline void set_metierlimit(::google::protobuf::uint32 value);
  
  // optional uint32 LevelLimit = 3;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 levellimit() const;
  inline void set_levellimit(::google::protobuf::uint32 value);
  
  // optional uint32 PersonLimit = 4;
  inline bool has_personlimit() const;
  inline void clear_personlimit();
  static const int kPersonLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 personlimit() const;
  inline void set_personlimit(::google::protobuf::uint32 value);
  
  // optional uint32 UseTime = 5;
  inline bool has_usetime() const;
  inline void clear_usetime();
  static const int kUseTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 usetime() const;
  inline void set_usetime(::google::protobuf::uint32 value);
  
  // optional uint32 IncreaseSpeedPer = 6;
  inline bool has_increasespeedper() const;
  inline void clear_increasespeedper();
  static const int kIncreaseSpeedPerFieldNumber = 6;
  inline ::google::protobuf::uint32 increasespeedper() const;
  inline void set_increasespeedper(::google::protobuf::uint32 value);
  
  // optional string ModelName = 7;
  inline bool has_modelname() const;
  inline void clear_modelname();
  static const int kModelNameFieldNumber = 7;
  inline const ::std::string& modelname() const;
  inline void set_modelname(const ::std::string& value);
  inline void set_modelname(const char* value);
  inline void set_modelname(const char* value, size_t size);
  inline ::std::string* mutable_modelname();
  
  // optional uint32 CoolTime = 8;
  inline bool has_cooltime() const;
  inline void clear_cooltime();
  static const int kCoolTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 cooltime() const;
  inline void set_cooltime(::google::protobuf::uint32 value);
  
  // optional uint32 ShareCD = 9;
  inline bool has_sharecd() const;
  inline void clear_sharecd();
  static const int kShareCDFieldNumber = 9;
  inline ::google::protobuf::uint32 sharecd() const;
  inline void set_sharecd(::google::protobuf::uint32 value);
  
  // optional uint32 SpeedBuff = 10;
  inline bool has_speedbuff() const;
  inline void clear_speedbuff();
  static const int kSpeedBuffFieldNumber = 10;
  inline ::google::protobuf::uint32 speedbuff() const;
  inline void set_speedbuff(::google::protobuf::uint32 value);
  
  // optional uint32 UsingTime = 11;
  inline bool has_usingtime() const;
  inline void clear_usingtime();
  static const int kUsingTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 usingtime() const;
  inline void set_usingtime(::google::protobuf::uint32 value);
  
  // optional string ShowText = 12;
  inline bool has_showtext() const;
  inline void clear_showtext();
  static const int kShowTextFieldNumber = 12;
  inline const ::std::string& showtext() const;
  inline void set_showtext(const ::std::string& value);
  inline void set_showtext(const char* value);
  inline void set_showtext(const char* value, size_t size);
  inline ::std::string* mutable_showtext();
  
  // optional uint32 OffHorseProb = 13;
  inline bool has_offhorseprob() const;
  inline void clear_offhorseprob();
  static const int kOffHorseProbFieldNumber = 13;
  inline ::google::protobuf::uint32 offhorseprob() const;
  inline void set_offhorseprob(::google::protobuf::uint32 value);
  
  // optional uint32 OffBuffID = 14;
  inline bool has_offbuffid() const;
  inline void clear_offbuffid();
  static const int kOffBuffIDFieldNumber = 14;
  inline ::google::protobuf::uint32 offbuffid() const;
  inline void set_offbuffid(::google::protobuf::uint32 value);
  
  // optional uint32 InitAP = 15;
  inline bool has_initap() const;
  inline void clear_initap();
  static const int kInitAPFieldNumber = 15;
  inline ::google::protobuf::uint32 initap() const;
  inline void set_initap(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaAP = 16;
  inline bool has_deltaap() const;
  inline void clear_deltaap();
  static const int kDeltaAPFieldNumber = 16;
  inline ::google::protobuf::uint32 deltaap() const;
  inline void set_deltaap(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 metierlimit_;
  ::google::protobuf::uint32 levellimit_;
  ::google::protobuf::uint32 personlimit_;
  ::google::protobuf::uint32 usetime_;
  ::google::protobuf::uint32 increasespeedper_;
  ::std::string* modelname_;
  static const ::std::string _default_modelname_;
  ::google::protobuf::uint32 cooltime_;
  ::google::protobuf::uint32 sharecd_;
  ::google::protobuf::uint32 speedbuff_;
  ::google::protobuf::uint32 usingtime_;
  ::std::string* showtext_;
  static const ::std::string _default_showtext_;
  ::google::protobuf::uint32 offhorseprob_;
  ::google::protobuf::uint32 offbuffid_;
  ::google::protobuf::uint32 initap_;
  ::google::protobuf::uint32 deltaap_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemHorse* default_instance_;
};
// -------------------------------------------------------------------

class PBStuff : public ::google::protobuf::Message {
 public:
  PBStuff();
  virtual ~PBStuff();
  
  PBStuff(const PBStuff& from);
  
  inline PBStuff& operator=(const PBStuff& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStuff& default_instance();
  void Swap(PBStuff* other);
  
  // implements Message ----------------------------------------------
  
  PBStuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStuff& from);
  void MergeFrom(const PBStuff& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 StuffID = 1;
  inline bool has_stuffid() const;
  inline void clear_stuffid();
  static const int kStuffIDFieldNumber = 1;
  inline ::google::protobuf::uint32 stuffid() const;
  inline void set_stuffid(::google::protobuf::uint32 value);
  
  // optional uint32 Number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 stuffid_;
  ::google::protobuf::uint32 number_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBStuff* default_instance_;
};
// -------------------------------------------------------------------

class PBProduct : public ::google::protobuf::Message {
 public:
  PBProduct();
  virtual ~PBProduct();
  
  PBProduct(const PBProduct& from);
  
  inline PBProduct& operator=(const PBProduct& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBProduct& default_instance();
  void Swap(PBProduct* other);
  
  // implements Message ----------------------------------------------
  
  PBProduct* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBProduct& from);
  void MergeFrom(const PBProduct& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ProductID = 1;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIDFieldNumber = 1;
  inline ::google::protobuf::uint32 productid() const;
  inline void set_productid(::google::protobuf::uint32 value);
  
  // optional uint32 Percent = 2;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 2;
  inline ::google::protobuf::uint32 percent() const;
  inline void set_percent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 productid_;
  ::google::protobuf::uint32 percent_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBProduct* default_instance_;
};
// -------------------------------------------------------------------

class PBItemBluePrint : public ::google::protobuf::Message {
 public:
  PBItemBluePrint();
  virtual ~PBItemBluePrint();
  
  PBItemBluePrint(const PBItemBluePrint& from);
  
  inline PBItemBluePrint& operator=(const PBItemBluePrint& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemBluePrint& default_instance();
  void Swap(PBItemBluePrint* other);
  
  // implements Message ----------------------------------------------
  
  PBItemBluePrint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemBluePrint& from);
  void MergeFrom(const PBItemBluePrint& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 TempID = 2;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 2;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedSkillID = 3;
  inline bool has_needskillid() const;
  inline void clear_needskillid();
  static const int kNeedSkillIDFieldNumber = 3;
  inline ::google::protobuf::uint32 needskillid() const;
  inline void set_needskillid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedSkillLevel = 4;
  inline bool has_needskilllevel() const;
  inline void clear_needskilllevel();
  static const int kNeedSkillLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 needskilllevel() const;
  inline void set_needskilllevel(::google::protobuf::uint32 value);
  
  // optional uint32 ProduceCount = 5;
  inline bool has_producecount() const;
  inline void clear_producecount();
  static const int kProduceCountFieldNumber = 5;
  inline ::google::protobuf::uint32 producecount() const;
  inline void set_producecount(::google::protobuf::uint32 value);
  
  // optional uint32 ProduceCost = 6;
  inline bool has_producecost() const;
  inline void clear_producecost();
  static const int kProduceCostFieldNumber = 6;
  inline ::google::protobuf::uint32 producecost() const;
  inline void set_producecost(::google::protobuf::uint32 value);
  
  // optional uint32 ObtainExp = 7;
  inline bool has_obtainexp() const;
  inline void clear_obtainexp();
  static const int kObtainExpFieldNumber = 7;
  inline ::google::protobuf::uint32 obtainexp() const;
  inline void set_obtainexp(::google::protobuf::uint32 value);
  
  // repeated .PBStuff Stuff = 8;
  inline int stuff_size() const;
  inline void clear_stuff();
  static const int kStuffFieldNumber = 8;
  inline const ::google::protobuf::RepeatedPtrField< ::PBStuff >& stuff() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBStuff >* mutable_stuff();
  inline const ::PBStuff& stuff(int index) const;
  inline ::PBStuff* mutable_stuff(int index);
  inline ::PBStuff* add_stuff();
  
  // repeated .PBProduct Product = 9;
  inline int product_size() const;
  inline void clear_product();
  static const int kProductFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::PBProduct >& product() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBProduct >* mutable_product();
  inline const ::PBProduct& product(int index) const;
  inline ::PBProduct* mutable_product(int index);
  inline ::PBProduct* add_product();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 needskillid_;
  ::google::protobuf::uint32 needskilllevel_;
  ::google::protobuf::uint32 producecount_;
  ::google::protobuf::uint32 producecost_;
  ::google::protobuf::uint32 obtainexp_;
  ::google::protobuf::RepeatedPtrField< ::PBStuff > stuff_;
  ::google::protobuf::RepeatedPtrField< ::PBProduct > product_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemBluePrint* default_instance_;
};
// -------------------------------------------------------------------

class PBItemRune : public ::google::protobuf::Message {
 public:
  PBItemRune();
  virtual ~PBItemRune();
  
  PBItemRune(const PBItemRune& from);
  
  inline PBItemRune& operator=(const PBItemRune& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemRune& default_instance();
  void Swap(PBItemRune* other);
  
  // implements Message ----------------------------------------------
  
  PBItemRune* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemRune& from);
  void MergeFrom(const PBItemRune& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 SuitID = 2;
  inline bool has_suitid() const;
  inline void clear_suitid();
  static const int kSuitIDFieldNumber = 2;
  inline ::google::protobuf::uint32 suitid() const;
  inline void set_suitid(::google::protobuf::uint32 value);
  
  // optional string Word = 3;
  inline bool has_word() const;
  inline void clear_word();
  static const int kWordFieldNumber = 3;
  inline const ::std::string& word() const;
  inline void set_word(const ::std::string& value);
  inline void set_word(const char* value);
  inline void set_word(const char* value, size_t size);
  inline ::std::string* mutable_word();
  
  // optional uint32 OrderID = 4;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIDFieldNumber = 4;
  inline ::google::protobuf::uint32 orderid() const;
  inline void set_orderid(::google::protobuf::uint32 value);
  
  // optional uint32 InsertCharge = 5;
  inline bool has_insertcharge() const;
  inline void clear_insertcharge();
  static const int kInsertChargeFieldNumber = 5;
  inline ::google::protobuf::uint32 insertcharge() const;
  inline void set_insertcharge(::google::protobuf::uint32 value);
  
  // optional uint32 PropertyID = 6;
  inline bool has_propertyid() const;
  inline void clear_propertyid();
  static const int kPropertyIDFieldNumber = 6;
  inline ::google::protobuf::uint32 propertyid() const;
  inline void set_propertyid(::google::protobuf::uint32 value);
  
  // optional uint32 RuneIndex = 7;
  inline bool has_runeindex() const;
  inline void clear_runeindex();
  static const int kRuneIndexFieldNumber = 7;
  inline ::google::protobuf::uint32 runeindex() const;
  inline void set_runeindex(::google::protobuf::uint32 value);
  
  // optional uint32 ShowColor = 8;
  inline bool has_showcolor() const;
  inline void clear_showcolor();
  static const int kShowColorFieldNumber = 8;
  inline ::google::protobuf::uint32 showcolor() const;
  inline void set_showcolor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 suitid_;
  ::std::string* word_;
  static const ::std::string _default_word_;
  ::google::protobuf::uint32 orderid_;
  ::google::protobuf::uint32 insertcharge_;
  ::google::protobuf::uint32 propertyid_;
  ::google::protobuf::uint32 runeindex_;
  ::google::protobuf::uint32 showcolor_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemRune* default_instance_;
};
// -------------------------------------------------------------------

class PBItemJewel : public ::google::protobuf::Message {
 public:
  PBItemJewel();
  virtual ~PBItemJewel();
  
  PBItemJewel(const PBItemJewel& from);
  
  inline PBItemJewel& operator=(const PBItemJewel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemJewel& default_instance();
  void Swap(PBItemJewel* other);
  
  // implements Message ----------------------------------------------
  
  PBItemJewel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemJewel& from);
  void MergeFrom(const PBItemJewel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 TypeID = 2;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIDFieldNumber = 2;
  inline ::google::protobuf::uint32 typeid_() const;
  inline void set_typeid_(::google::protobuf::uint32 value);
  
  // optional uint32 Pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // optional uint32 ShowColor = 4;
  inline bool has_showcolor() const;
  inline void clear_showcolor();
  static const int kShowColorFieldNumber = 4;
  inline ::google::protobuf::uint32 showcolor() const;
  inline void set_showcolor(::google::protobuf::uint32 value);
  
  // optional uint32 Property = 5;
  inline bool has_property() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 5;
  inline ::google::protobuf::uint32 property() const;
  inline void set_property(::google::protobuf::uint32 value);
  
  // optional uint32 Unique = 6;
  inline bool has_unique() const;
  inline void clear_unique();
  static const int kUniqueFieldNumber = 6;
  inline ::google::protobuf::uint32 unique() const;
  inline void set_unique(::google::protobuf::uint32 value);
  
  // repeated uint32 JewelID = 7;
  inline int jewelid_size() const;
  inline void clear_jewelid();
  static const int kJewelIDFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& jewelid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_jewelid();
  inline ::google::protobuf::uint32 jewelid(int index) const;
  inline void set_jewelid(int index, ::google::protobuf::uint32 value);
  inline void add_jewelid(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeID = 8;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 8;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
  // optional uint32 InsertCharge = 9;
  inline bool has_insertcharge() const;
  inline void clear_insertcharge();
  static const int kInsertChargeFieldNumber = 9;
  inline ::google::protobuf::uint32 insertcharge() const;
  inline void set_insertcharge(::google::protobuf::uint32 value);
  
  // optional uint32 RemoveCharge = 10;
  inline bool has_removecharge() const;
  inline void clear_removecharge();
  static const int kRemoveChargeFieldNumber = 10;
  inline ::google::protobuf::uint32 removecharge() const;
  inline void set_removecharge(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeCharge = 11;
  inline bool has_composecharge() const;
  inline void clear_composecharge();
  static const int kComposeChargeFieldNumber = 11;
  inline ::google::protobuf::uint32 composecharge() const;
  inline void set_composecharge(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 12;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // repeated uint32 Rand = 13;
  inline int rand_size() const;
  inline void clear_rand();
  static const int kRandFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& rand() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_rand();
  inline ::google::protobuf::uint32 rand(int index) const;
  inline void set_rand(int index, ::google::protobuf::uint32 value);
  inline void add_rand(::google::protobuf::uint32 value);
  
  // optional uint32 NewJewelID = 14;
  inline bool has_newjewelid() const;
  inline void clear_newjewelid();
  static const int kNewJewelIDFieldNumber = 14;
  inline ::google::protobuf::uint32 newjewelid() const;
  inline void set_newjewelid(::google::protobuf::uint32 value);
  
  // repeated uint32 NewRand = 15;
  inline int newrand_size() const;
  inline void clear_newrand();
  static const int kNewRandFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& newrand() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_newrand();
  inline ::google::protobuf::uint32 newrand(int index) const;
  inline void set_newrand(int index, ::google::protobuf::uint32 value);
  inline void add_newrand(::google::protobuf::uint32 value);
  
  // repeated uint32 CarveJewelID = 16;
  inline int carvejewelid_size() const;
  inline void clear_carvejewelid();
  static const int kCarveJewelIDFieldNumber = 16;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& carvejewelid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_carvejewelid();
  inline ::google::protobuf::uint32 carvejewelid(int index) const;
  inline void set_carvejewelid(int index, ::google::protobuf::uint32 value);
  inline void add_carvejewelid(::google::protobuf::uint32 value);
  
  // repeated uint32 CarveRand = 17;
  inline int carverand_size() const;
  inline void clear_carverand();
  static const int kCarveRandFieldNumber = 17;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& carverand() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_carverand();
  inline ::google::protobuf::uint32 carverand(int index) const;
  inline void set_carverand(int index, ::google::protobuf::uint32 value);
  inline void add_carverand(::google::protobuf::uint32 value);
  
  // optional uint32 CarveCharge = 18;
  inline bool has_carvecharge() const;
  inline void clear_carvecharge();
  static const int kCarveChargeFieldNumber = 18;
  inline ::google::protobuf::uint32 carvecharge() const;
  inline void set_carvecharge(::google::protobuf::uint32 value);
  
  // optional uint32 CardID = 19;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIDFieldNumber = 19;
  inline ::google::protobuf::uint32 cardid() const;
  inline void set_cardid(::google::protobuf::uint32 value);
  
  // optional uint32 CanCarve = 20;
  inline bool has_cancarve() const;
  inline void clear_cancarve();
  static const int kCanCarveFieldNumber = 20;
  inline ::google::protobuf::uint32 cancarve() const;
  inline void set_cancarve(::google::protobuf::uint32 value);
  
  // optional uint32 AffectRand = 21;
  inline bool has_affectrand() const;
  inline void clear_affectrand();
  static const int kAffectRandFieldNumber = 21;
  inline ::google::protobuf::uint32 affectrand() const;
  inline void set_affectrand(::google::protobuf::uint32 value);
  
  // optional uint32 JewComID = 22;
  inline bool has_jewcomid() const;
  inline void clear_jewcomid();
  static const int kJewComIDFieldNumber = 22;
  inline ::google::protobuf::uint32 jewcomid() const;
  inline void set_jewcomid(::google::protobuf::uint32 value);
  
  // optional uint32 ComLevel = 23;
  inline bool has_comlevel() const;
  inline void clear_comlevel();
  static const int kComLevelFieldNumber = 23;
  inline ::google::protobuf::uint32 comlevel() const;
  inline void set_comlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 typeid__;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 showcolor_;
  ::google::protobuf::uint32 property_;
  ::google::protobuf::uint32 unique_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > jewelid_;
  ::google::protobuf::uint32 composeid_;
  ::google::protobuf::uint32 insertcharge_;
  ::google::protobuf::uint32 removecharge_;
  ::google::protobuf::uint32 composecharge_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > rand_;
  ::google::protobuf::uint32 newjewelid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > newrand_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > carvejewelid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > carverand_;
  ::google::protobuf::uint32 carvecharge_;
  ::google::protobuf::uint32 cardid_;
  ::google::protobuf::uint32 cancarve_;
  ::google::protobuf::uint32 affectrand_;
  ::google::protobuf::uint32 jewcomid_;
  ::google::protobuf::uint32 comlevel_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemJewel* default_instance_;
};
// -------------------------------------------------------------------

class PBItemYuanBug : public ::google::protobuf::Message {
 public:
  PBItemYuanBug();
  virtual ~PBItemYuanBug();
  
  PBItemYuanBug(const PBItemYuanBug& from);
  
  inline PBItemYuanBug& operator=(const PBItemYuanBug& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemYuanBug& default_instance();
  void Swap(PBItemYuanBug* other);
  
  // implements Message ----------------------------------------------
  
  PBItemYuanBug* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemYuanBug& from);
  void MergeFrom(const PBItemYuanBug& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 Yuan = 2;
  inline bool has_yuan() const;
  inline void clear_yuan();
  static const int kYuanFieldNumber = 2;
  inline ::google::protobuf::uint32 yuan() const;
  inline void set_yuan(::google::protobuf::uint32 value);
  
  // optional uint32 EggID = 3;
  inline bool has_eggid() const;
  inline void clear_eggid();
  static const int kEggIDFieldNumber = 3;
  inline ::google::protobuf::uint32 eggid() const;
  inline void set_eggid(::google::protobuf::uint32 value);
  
  // optional uint32 YuanType = 4;
  inline bool has_yuantype() const;
  inline void clear_yuantype();
  static const int kYuanTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 yuantype() const;
  inline void set_yuantype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 yuan_;
  ::google::protobuf::uint32 eggid_;
  ::google::protobuf::uint32 yuantype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemYuanBug* default_instance_;
};
// -------------------------------------------------------------------

class PBItemYuanEgg : public ::google::protobuf::Message {
 public:
  PBItemYuanEgg();
  virtual ~PBItemYuanEgg();
  
  PBItemYuanEgg(const PBItemYuanEgg& from);
  
  inline PBItemYuanEgg& operator=(const PBItemYuanEgg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemYuanEgg& default_instance();
  void Swap(PBItemYuanEgg* other);
  
  // implements Message ----------------------------------------------
  
  PBItemYuanEgg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemYuanEgg& from);
  void MergeFrom(const PBItemYuanEgg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeID = 3;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 3;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
  // optional uint32 MaxEquip = 4;
  inline bool has_maxequip() const;
  inline void clear_maxequip();
  static const int kMaxEquipFieldNumber = 4;
  inline ::google::protobuf::uint32 maxequip() const;
  inline void set_maxequip(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 composeid_;
  ::google::protobuf::uint32 maxequip_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemYuanEgg* default_instance_;
};
// -------------------------------------------------------------------

class PBItemSequence : public ::google::protobuf::Message {
 public:
  PBItemSequence();
  virtual ~PBItemSequence();
  
  PBItemSequence(const PBItemSequence& from);
  
  inline PBItemSequence& operator=(const PBItemSequence& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemSequence& default_instance();
  void Swap(PBItemSequence* other);
  
  // implements Message ----------------------------------------------
  
  PBItemSequence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemSequence& from);
  void MergeFrom(const PBItemSequence& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Sequence = 2;
  inline int sequence_size() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& sequence() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_sequence();
  inline ::google::protobuf::uint32 sequence(int index) const;
  inline void set_sequence(int index, ::google::protobuf::uint32 value);
  inline void add_sequence(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sequence_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemSequence* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipment : public ::google::protobuf::Message {
 public:
  PBEquipment();
  virtual ~PBEquipment();
  
  PBEquipment(const PBEquipment& from);
  
  inline PBEquipment& operator=(const PBEquipment& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipment& default_instance();
  void Swap(PBEquipment* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipment& from);
  void MergeFrom(const PBEquipment& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional string ModalName = 2;
  inline bool has_modalname() const;
  inline void clear_modalname();
  static const int kModalNameFieldNumber = 2;
  inline const ::std::string& modalname() const;
  inline void set_modalname(const ::std::string& value);
  inline void set_modalname(const char* value);
  inline void set_modalname(const char* value, size_t size);
  inline ::std::string* mutable_modalname();
  
  // optional uint32 ShowLevel = 3;
  inline bool has_showlevel() const;
  inline void clear_showlevel();
  static const int kShowLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 showlevel() const;
  inline void set_showlevel(::google::protobuf::uint32 value);
  
  // optional uint32 EquipType = 4;
  inline bool has_equiptype() const;
  inline void clear_equiptype();
  static const int kEquipTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 equiptype() const;
  inline void set_equiptype(::google::protobuf::uint32 value);
  
  // optional uint32 ShowColor = 5;
  inline bool has_showcolor() const;
  inline void clear_showcolor();
  static const int kShowColorFieldNumber = 5;
  inline ::google::protobuf::uint32 showcolor() const;
  inline void set_showcolor(::google::protobuf::uint32 value);
  
  // repeated uint32 StrRequire = 6;
  inline int strrequire_size() const;
  inline void clear_strrequire();
  static const int kStrRequireFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& strrequire() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_strrequire();
  inline ::google::protobuf::uint32 strrequire(int index) const;
  inline void set_strrequire(int index, ::google::protobuf::uint32 value);
  inline void add_strrequire(::google::protobuf::uint32 value);
  
  // repeated uint32 ConRequire = 7;
  inline int conrequire_size() const;
  inline void clear_conrequire();
  static const int kConRequireFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& conrequire() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_conrequire();
  inline ::google::protobuf::uint32 conrequire(int index) const;
  inline void set_conrequire(int index, ::google::protobuf::uint32 value);
  inline void add_conrequire(::google::protobuf::uint32 value);
  
  // repeated uint32 StaRequire = 8;
  inline int starequire_size() const;
  inline void clear_starequire();
  static const int kStaRequireFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& starequire() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_starequire();
  inline ::google::protobuf::uint32 starequire(int index) const;
  inline void set_starequire(int index, ::google::protobuf::uint32 value);
  inline void add_starequire(::google::protobuf::uint32 value);
  
  // repeated uint32 WisRequire = 9;
  inline int wisrequire_size() const;
  inline void clear_wisrequire();
  static const int kWisRequireFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wisrequire() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wisrequire();
  inline ::google::protobuf::uint32 wisrequire(int index) const;
  inline void set_wisrequire(int index, ::google::protobuf::uint32 value);
  inline void add_wisrequire(::google::protobuf::uint32 value);
  
  // repeated uint32 SprRequire = 10;
  inline int sprrequire_size() const;
  inline void clear_sprrequire();
  static const int kSprRequireFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& sprrequire() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_sprrequire();
  inline ::google::protobuf::uint32 sprrequire(int index) const;
  inline void set_sprrequire(int index, ::google::protobuf::uint32 value);
  inline void add_sprrequire(::google::protobuf::uint32 value);
  
  // optional uint32 MetierRequire = 11;
  inline bool has_metierrequire() const;
  inline void clear_metierrequire();
  static const int kMetierRequireFieldNumber = 11;
  inline ::google::protobuf::uint32 metierrequire() const;
  inline void set_metierrequire(::google::protobuf::uint32 value);
  
  // optional uint32 LevelRequire = 12;
  inline bool has_levelrequire() const;
  inline void clear_levelrequire();
  static const int kLevelRequireFieldNumber = 12;
  inline ::google::protobuf::uint32 levelrequire() const;
  inline void set_levelrequire(::google::protobuf::uint32 value);
  
  // optional uint32 SexRequire = 13;
  inline bool has_sexrequire() const;
  inline void clear_sexrequire();
  static const int kSexRequireFieldNumber = 13;
  inline ::google::protobuf::uint32 sexrequire() const;
  inline void set_sexrequire(::google::protobuf::uint32 value);
  
  // optional uint32 YuanValue = 14;
  inline bool has_yuanvalue() const;
  inline void clear_yuanvalue();
  static const int kYuanValueFieldNumber = 14;
  inline ::google::protobuf::uint32 yuanvalue() const;
  inline void set_yuanvalue(::google::protobuf::uint32 value);
  
  // optional uint32 EquipDurability = 15;
  inline bool has_equipdurability() const;
  inline void clear_equipdurability();
  static const int kEquipDurabilityFieldNumber = 15;
  inline ::google::protobuf::uint32 equipdurability() const;
  inline void set_equipdurability(::google::protobuf::uint32 value);
  
  // optional uint32 BaseMendCharge = 16;
  inline bool has_basemendcharge() const;
  inline void clear_basemendcharge();
  static const int kBaseMendChargeFieldNumber = 16;
  inline ::google::protobuf::uint32 basemendcharge() const;
  inline void set_basemendcharge(::google::protobuf::uint32 value);
  
  // optional uint32 NpcAbrasionRate = 17;
  inline bool has_npcabrasionrate() const;
  inline void clear_npcabrasionrate();
  static const int kNpcAbrasionRateFieldNumber = 17;
  inline ::google::protobuf::uint32 npcabrasionrate() const;
  inline void set_npcabrasionrate(::google::protobuf::uint32 value);
  
  // optional uint32 PlayerAbrasionRate = 18;
  inline bool has_playerabrasionrate() const;
  inline void clear_playerabrasionrate();
  static const int kPlayerAbrasionRateFieldNumber = 18;
  inline ::google::protobuf::uint32 playerabrasionrate() const;
  inline void set_playerabrasionrate(::google::protobuf::uint32 value);
  
  // optional uint32 CanUpGrade = 19;
  inline bool has_canupgrade() const;
  inline void clear_canupgrade();
  static const int kCanUpGradeFieldNumber = 19;
  inline ::google::protobuf::uint32 canupgrade() const;
  inline void set_canupgrade(::google::protobuf::uint32 value);
  
  // optional uint32 UpgCharge = 20;
  inline bool has_upgcharge() const;
  inline void clear_upgcharge();
  static const int kUpgChargeFieldNumber = 20;
  inline ::google::protobuf::uint32 upgcharge() const;
  inline void set_upgcharge(::google::protobuf::uint32 value);
  
  // optional uint32 NeedBindMoney = 21;
  inline bool has_needbindmoney() const;
  inline void clear_needbindmoney();
  static const int kNeedBindMoneyFieldNumber = 21;
  inline ::google::protobuf::uint32 needbindmoney() const;
  inline void set_needbindmoney(::google::protobuf::uint32 value);
  
  // repeated uint32 UpgPropertyID = 22;
  inline int upgpropertyid_size() const;
  inline void clear_upgpropertyid();
  static const int kUpgPropertyIDFieldNumber = 22;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& upgpropertyid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_upgpropertyid();
  inline ::google::protobuf::uint32 upgpropertyid(int index) const;
  inline void set_upgpropertyid(int index, ::google::protobuf::uint32 value);
  inline void add_upgpropertyid(::google::protobuf::uint32 value);
  
  // repeated uint32 UpgValue = 23;
  inline int upgvalue_size() const;
  inline void clear_upgvalue();
  static const int kUpgValueFieldNumber = 23;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& upgvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_upgvalue();
  inline ::google::protobuf::uint32 upgvalue(int index) const;
  inline void set_upgvalue(int index, ::google::protobuf::uint32 value);
  inline void add_upgvalue(::google::protobuf::uint32 value);
  
  // repeated uint32 MaxSlotNumber1 = 24;
  inline int maxslotnumber1_size() const;
  inline void clear_maxslotnumber1();
  static const int kMaxSlotNumber1FieldNumber = 24;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& maxslotnumber1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_maxslotnumber1();
  inline ::google::protobuf::uint32 maxslotnumber1(int index) const;
  inline void set_maxslotnumber1(int index, ::google::protobuf::uint32 value);
  inline void add_maxslotnumber1(::google::protobuf::uint32 value);
  
  // optional uint32 MaxSlotNumber2 = 25;
  inline bool has_maxslotnumber2() const;
  inline void clear_maxslotnumber2();
  static const int kMaxSlotNumber2FieldNumber = 25;
  inline ::google::protobuf::uint32 maxslotnumber2() const;
  inline void set_maxslotnumber2(::google::protobuf::uint32 value);
  
  // repeated uint32 PropertyPercent = 26;
  inline int propertypercent_size() const;
  inline void clear_propertypercent();
  static const int kPropertyPercentFieldNumber = 26;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& propertypercent() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_propertypercent();
  inline ::google::protobuf::uint32 propertypercent(int index) const;
  inline void set_propertypercent(int index, ::google::protobuf::uint32 value);
  inline void add_propertypercent(::google::protobuf::uint32 value);
  
  // repeated uint32 PropertyTableID = 27;
  inline int propertytableid_size() const;
  inline void clear_propertytableid();
  static const int kPropertyTableIDFieldNumber = 27;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& propertytableid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_propertytableid();
  inline ::google::protobuf::uint32 propertytableid(int index) const;
  inline void set_propertytableid(int index, ::google::protobuf::uint32 value);
  inline void add_propertytableid(::google::protobuf::uint32 value);
  
  // repeated uint32 PropertyPercentEx = 28;
  inline int propertypercentex_size() const;
  inline void clear_propertypercentex();
  static const int kPropertyPercentExFieldNumber = 28;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& propertypercentex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_propertypercentex();
  inline ::google::protobuf::uint32 propertypercentex(int index) const;
  inline void set_propertypercentex(int index, ::google::protobuf::uint32 value);
  inline void add_propertypercentex(::google::protobuf::uint32 value);
  
  // repeated uint32 PropertyTableIDEx = 29;
  inline int propertytableidex_size() const;
  inline void clear_propertytableidex();
  static const int kPropertyTableIDExFieldNumber = 29;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& propertytableidex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_propertytableidex();
  inline ::google::protobuf::uint32 propertytableidex(int index) const;
  inline void set_propertytableidex(int index, ::google::protobuf::uint32 value);
  inline void add_propertytableidex(::google::protobuf::uint32 value);
  
  // repeated uint32 PAttackDiff = 30;
  inline int pattackdiff_size() const;
  inline void clear_pattackdiff();
  static const int kPAttackDiffFieldNumber = 30;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pattackdiff() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pattackdiff();
  inline ::google::protobuf::uint32 pattackdiff(int index) const;
  inline void set_pattackdiff(int index, ::google::protobuf::uint32 value);
  inline void add_pattackdiff(::google::protobuf::uint32 value);
  
  // repeated uint32 JudgePercent1 = 31;
  inline int judgepercent1_size() const;
  inline void clear_judgepercent1();
  static const int kJudgePercent1FieldNumber = 31;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& judgepercent1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_judgepercent1();
  inline ::google::protobuf::uint32 judgepercent1(int index) const;
  inline void set_judgepercent1(int index, ::google::protobuf::uint32 value);
  inline void add_judgepercent1(::google::protobuf::uint32 value);
  
  // repeated uint32 JudgePercent2 = 32;
  inline int judgepercent2_size() const;
  inline void clear_judgepercent2();
  static const int kJudgePercent2FieldNumber = 32;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& judgepercent2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_judgepercent2();
  inline ::google::protobuf::uint32 judgepercent2(int index) const;
  inline void set_judgepercent2(int index, ::google::protobuf::uint32 value);
  inline void add_judgepercent2(::google::protobuf::uint32 value);
  
  // repeated uint32 ResDefPercent = 33;
  inline int resdefpercent_size() const;
  inline void clear_resdefpercent();
  static const int kResDefPercentFieldNumber = 33;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resdefpercent() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resdefpercent();
  inline ::google::protobuf::uint32 resdefpercent(int index) const;
  inline void set_resdefpercent(int index, ::google::protobuf::uint32 value);
  inline void add_resdefpercent(::google::protobuf::uint32 value);
  
  // repeated uint32 ResAttPercent = 34;
  inline int resattpercent_size() const;
  inline void clear_resattpercent();
  static const int kResAttPercentFieldNumber = 34;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resattpercent() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resattpercent();
  inline ::google::protobuf::uint32 resattpercent(int index) const;
  inline void set_resattpercent(int index, ::google::protobuf::uint32 value);
  inline void add_resattpercent(::google::protobuf::uint32 value);
  
  // repeated uint32 ResDefValue = 35;
  inline int resdefvalue_size() const;
  inline void clear_resdefvalue();
  static const int kResDefValueFieldNumber = 35;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resdefvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resdefvalue();
  inline ::google::protobuf::uint32 resdefvalue(int index) const;
  inline void set_resdefvalue(int index, ::google::protobuf::uint32 value);
  inline void add_resdefvalue(::google::protobuf::uint32 value);
  
  // repeated uint32 ResAttValue = 36;
  inline int resattvalue_size() const;
  inline void clear_resattvalue();
  static const int kResAttValueFieldNumber = 36;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resattvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resattvalue();
  inline ::google::protobuf::uint32 resattvalue(int index) const;
  inline void set_resattvalue(int index, ::google::protobuf::uint32 value);
  inline void add_resattvalue(::google::protobuf::uint32 value);
  
  // optional uint32 SuitID = 37;
  inline bool has_suitid() const;
  inline void clear_suitid();
  static const int kSuitIDFieldNumber = 37;
  inline ::google::protobuf::uint32 suitid() const;
  inline void set_suitid(::google::protobuf::uint32 value);
  
  // optional uint32 SuitPos = 38;
  inline bool has_suitpos() const;
  inline void clear_suitpos();
  static const int kSuitPosFieldNumber = 38;
  inline ::google::protobuf::uint32 suitpos() const;
  inline void set_suitpos(::google::protobuf::uint32 value);
  
  // repeated uint32 MAttackDiff = 39;
  inline int mattackdiff_size() const;
  inline void clear_mattackdiff();
  static const int kMAttackDiffFieldNumber = 39;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mattackdiff() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mattackdiff();
  inline ::google::protobuf::uint32 mattackdiff(int index) const;
  inline void set_mattackdiff(int index, ::google::protobuf::uint32 value);
  inline void add_mattackdiff(::google::protobuf::uint32 value);
  
  // optional uint32 OpenCharge = 40;
  inline bool has_opencharge() const;
  inline void clear_opencharge();
  static const int kOpenChargeFieldNumber = 40;
  inline ::google::protobuf::uint32 opencharge() const;
  inline void set_opencharge(::google::protobuf::uint32 value);
  
  // optional uint32 AddCharge = 41;
  inline bool has_addcharge() const;
  inline void clear_addcharge();
  static const int kAddChargeFieldNumber = 41;
  inline ::google::protobuf::uint32 addcharge() const;
  inline void set_addcharge(::google::protobuf::uint32 value);
  
  // optional uint32 JudgeCharge = 42;
  inline bool has_judgecharge() const;
  inline void clear_judgecharge();
  static const int kJudgeChargeFieldNumber = 42;
  inline ::google::protobuf::uint32 judgecharge() const;
  inline void set_judgecharge(::google::protobuf::uint32 value);
  
  // optional uint32 ReJudgeCharge = 43;
  inline bool has_rejudgecharge() const;
  inline void clear_rejudgecharge();
  static const int kReJudgeChargeFieldNumber = 43;
  inline ::google::protobuf::uint32 rejudgecharge() const;
  inline void set_rejudgecharge(::google::protobuf::uint32 value);
  
  // optional uint32 DefUpgCharge = 44;
  inline bool has_defupgcharge() const;
  inline void clear_defupgcharge();
  static const int kDefUpgChargeFieldNumber = 44;
  inline ::google::protobuf::uint32 defupgcharge() const;
  inline void set_defupgcharge(::google::protobuf::uint32 value);
  
  // optional uint32 DefChangeCharge = 45;
  inline bool has_defchangecharge() const;
  inline void clear_defchangecharge();
  static const int kDefChangeChargeFieldNumber = 45;
  inline ::google::protobuf::uint32 defchangecharge() const;
  inline void set_defchangecharge(::google::protobuf::uint32 value);
  
  // optional uint32 AttUpgCharge = 46;
  inline bool has_attupgcharge() const;
  inline void clear_attupgcharge();
  static const int kAttUpgChargeFieldNumber = 46;
  inline ::google::protobuf::uint32 attupgcharge() const;
  inline void set_attupgcharge(::google::protobuf::uint32 value);
  
  // optional uint32 AttChangeCharge = 47;
  inline bool has_attchangecharge() const;
  inline void clear_attchangecharge();
  static const int kAttChangeChargeFieldNumber = 47;
  inline ::google::protobuf::uint32 attchangecharge() const;
  inline void set_attchangecharge(::google::protobuf::uint32 value);
  
  // optional uint32 CanDefUpgrade = 48;
  inline bool has_candefupgrade() const;
  inline void clear_candefupgrade();
  static const int kCanDefUpgradeFieldNumber = 48;
  inline ::google::protobuf::uint32 candefupgrade() const;
  inline void set_candefupgrade(::google::protobuf::uint32 value);
  
  // optional uint32 CanAttUpgrade = 49;
  inline bool has_canattupgrade() const;
  inline void clear_canattupgrade();
  static const int kCanAttUpgradeFieldNumber = 49;
  inline ::google::protobuf::uint32 canattupgrade() const;
  inline void set_canattupgrade(::google::protobuf::uint32 value);
  
  // optional uint32 BindBonus = 50;
  inline bool has_bindbonus() const;
  inline void clear_bindbonus();
  static const int kBindBonusFieldNumber = 50;
  inline ::google::protobuf::uint32 bindbonus() const;
  inline void set_bindbonus(::google::protobuf::uint32 value);
  
  // optional uint32 MultiCompose = 51;
  inline bool has_multicompose() const;
  inline void clear_multicompose();
  static const int kMultiComposeFieldNumber = 51;
  inline ::google::protobuf::uint32 multicompose() const;
  inline void set_multicompose(::google::protobuf::uint32 value);
  
  // optional uint32 CanChange = 52;
  inline bool has_canchange() const;
  inline void clear_canchange();
  static const int kCanChangeFieldNumber = 52;
  inline ::google::protobuf::uint32 canchange() const;
  inline void set_canchange(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeCharge = 53;
  inline bool has_changecharge() const;
  inline void clear_changecharge();
  static const int kChangeChargeFieldNumber = 53;
  inline ::google::protobuf::uint32 changecharge() const;
  inline void set_changecharge(::google::protobuf::uint32 value);
  
  // optional uint32 CanSplit = 54;
  inline bool has_cansplit() const;
  inline void clear_cansplit();
  static const int kCanSplitFieldNumber = 54;
  inline ::google::protobuf::uint32 cansplit() const;
  inline void set_cansplit(::google::protobuf::uint32 value);
  
  // repeated uint32 SplitID = 55;
  inline int splitid_size() const;
  inline void clear_splitid();
  static const int kSplitIDFieldNumber = 55;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& splitid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_splitid();
  inline ::google::protobuf::uint32 splitid(int index) const;
  inline void set_splitid(int index, ::google::protobuf::uint32 value);
  inline void add_splitid(::google::protobuf::uint32 value);
  
  // repeated uint32 SplitNum = 56;
  inline int splitnum_size() const;
  inline void clear_splitnum();
  static const int kSplitNumFieldNumber = 56;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& splitnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_splitnum();
  inline ::google::protobuf::uint32 splitnum(int index) const;
  inline void set_splitnum(int index, ::google::protobuf::uint32 value);
  inline void add_splitnum(::google::protobuf::uint32 value);
  
  // optional uint32 SplitCharge = 57;
  inline bool has_splitcharge() const;
  inline void clear_splitcharge();
  static const int kSplitChargeFieldNumber = 57;
  inline ::google::protobuf::uint32 splitcharge() const;
  inline void set_splitcharge(::google::protobuf::uint32 value);
  
  // repeated uint32 UpgExtra1 = 58;
  inline int upgextra1_size() const;
  inline void clear_upgextra1();
  static const int kUpgExtra1FieldNumber = 58;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& upgextra1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_upgextra1();
  inline ::google::protobuf::uint32 upgextra1(int index) const;
  inline void set_upgextra1(int index, ::google::protobuf::uint32 value);
  inline void add_upgextra1(::google::protobuf::uint32 value);
  
  // repeated uint32 UpgExtra2 = 59;
  inline int upgextra2_size() const;
  inline void clear_upgextra2();
  static const int kUpgExtra2FieldNumber = 59;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& upgextra2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_upgextra2();
  inline ::google::protobuf::uint32 upgextra2(int index) const;
  inline void set_upgextra2(int index, ::google::protobuf::uint32 value);
  inline void add_upgextra2(::google::protobuf::uint32 value);
  
  // optional uint32 ExtCharge = 60;
  inline bool has_extcharge() const;
  inline void clear_extcharge();
  static const int kExtChargeFieldNumber = 60;
  inline ::google::protobuf::uint32 extcharge() const;
  inline void set_extcharge(::google::protobuf::uint32 value);
  
  // optional uint32 ResistTran = 61;
  inline bool has_resisttran() const;
  inline void clear_resisttran();
  static const int kResistTranFieldNumber = 61;
  inline ::google::protobuf::uint32 resisttran() const;
  inline void set_resisttran(::google::protobuf::uint32 value);
  
  // optional uint32 IsShenQi = 62;
  inline bool has_isshenqi() const;
  inline void clear_isshenqi();
  static const int kIsShenQiFieldNumber = 62;
  inline ::google::protobuf::uint32 isshenqi() const;
  inline void set_isshenqi(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::std::string* modalname_;
  static const ::std::string _default_modalname_;
  ::google::protobuf::uint32 showlevel_;
  ::google::protobuf::uint32 equiptype_;
  ::google::protobuf::uint32 showcolor_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > strrequire_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > conrequire_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > starequire_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wisrequire_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sprrequire_;
  ::google::protobuf::uint32 metierrequire_;
  ::google::protobuf::uint32 levelrequire_;
  ::google::protobuf::uint32 sexrequire_;
  ::google::protobuf::uint32 yuanvalue_;
  ::google::protobuf::uint32 equipdurability_;
  ::google::protobuf::uint32 basemendcharge_;
  ::google::protobuf::uint32 npcabrasionrate_;
  ::google::protobuf::uint32 playerabrasionrate_;
  ::google::protobuf::uint32 canupgrade_;
  ::google::protobuf::uint32 upgcharge_;
  ::google::protobuf::uint32 needbindmoney_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > upgpropertyid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > upgvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > maxslotnumber1_;
  ::google::protobuf::uint32 maxslotnumber2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propertypercent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propertytableid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propertypercentex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propertytableidex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pattackdiff_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > judgepercent1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > judgepercent2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resdefpercent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resattpercent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resdefvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resattvalue_;
  ::google::protobuf::uint32 suitid_;
  ::google::protobuf::uint32 suitpos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mattackdiff_;
  ::google::protobuf::uint32 opencharge_;
  ::google::protobuf::uint32 addcharge_;
  ::google::protobuf::uint32 judgecharge_;
  ::google::protobuf::uint32 rejudgecharge_;
  ::google::protobuf::uint32 defupgcharge_;
  ::google::protobuf::uint32 defchangecharge_;
  ::google::protobuf::uint32 attupgcharge_;
  ::google::protobuf::uint32 attchangecharge_;
  ::google::protobuf::uint32 candefupgrade_;
  ::google::protobuf::uint32 canattupgrade_;
  ::google::protobuf::uint32 bindbonus_;
  ::google::protobuf::uint32 multicompose_;
  ::google::protobuf::uint32 canchange_;
  ::google::protobuf::uint32 changecharge_;
  ::google::protobuf::uint32 cansplit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > splitid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > splitnum_;
  ::google::protobuf::uint32 splitcharge_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > upgextra1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > upgextra2_;
  ::google::protobuf::uint32 extcharge_;
  ::google::protobuf::uint32 resisttran_;
  ::google::protobuf::uint32 isshenqi_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(62 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBEquipment* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipFashion : public ::google::protobuf::Message {
 public:
  PBEquipFashion();
  virtual ~PBEquipFashion();
  
  PBEquipFashion(const PBEquipFashion& from);
  
  inline PBEquipFashion& operator=(const PBEquipFashion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipFashion& default_instance();
  void Swap(PBEquipFashion* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipFashion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipFashion& from);
  void MergeFrom(const PBEquipFashion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBEquipment EquipInfo = 1;
  inline bool has_equipinfo() const;
  inline void clear_equipinfo();
  static const int kEquipInfoFieldNumber = 1;
  inline const ::PBEquipment& equipinfo() const;
  inline ::PBEquipment* mutable_equipinfo();
  
  // optional uint32 BuffID = 2;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 2;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBEquipment* equipinfo_;
  ::google::protobuf::uint32 buffid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBEquipFashion* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipWeapon : public ::google::protobuf::Message {
 public:
  PBEquipWeapon();
  virtual ~PBEquipWeapon();
  
  PBEquipWeapon(const PBEquipWeapon& from);
  
  inline PBEquipWeapon& operator=(const PBEquipWeapon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipWeapon& default_instance();
  void Swap(PBEquipWeapon* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipWeapon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipWeapon& from);
  void MergeFrom(const PBEquipWeapon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBEquipment EquipInfo = 1;
  inline bool has_equipinfo() const;
  inline void clear_equipinfo();
  static const int kEquipInfoFieldNumber = 1;
  inline const ::PBEquipment& equipinfo() const;
  inline ::PBEquipment* mutable_equipinfo();
  
  // optional uint32 WeaponType = 2;
  inline bool has_weapontype() const;
  inline void clear_weapontype();
  static const int kWeaponTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 weapontype() const;
  inline void set_weapontype(::google::protobuf::uint32 value);
  
  // optional uint32 AttackType = 3;
  inline bool has_attacktype() const;
  inline void clear_attacktype();
  static const int kAttackTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 attacktype() const;
  inline void set_attacktype(::google::protobuf::uint32 value);
  
  // optional uint32 AttackDistance = 4;
  inline bool has_attackdistance() const;
  inline void clear_attackdistance();
  static const int kAttackDistanceFieldNumber = 4;
  inline ::google::protobuf::uint32 attackdistance() const;
  inline void set_attackdistance(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBEquipment* equipinfo_;
  ::google::protobuf::uint32 weapontype_;
  ::google::protobuf::uint32 attacktype_;
  ::google::protobuf::uint32 attackdistance_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBEquipWeapon* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipArmor : public ::google::protobuf::Message {
 public:
  PBEquipArmor();
  virtual ~PBEquipArmor();
  
  PBEquipArmor(const PBEquipArmor& from);
  
  inline PBEquipArmor& operator=(const PBEquipArmor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipArmor& default_instance();
  void Swap(PBEquipArmor* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipArmor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipArmor& from);
  void MergeFrom(const PBEquipArmor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBEquipment EquipInfo = 1;
  inline bool has_equipinfo() const;
  inline void clear_equipinfo();
  static const int kEquipInfoFieldNumber = 1;
  inline const ::PBEquipment& equipinfo() const;
  inline ::PBEquipment* mutable_equipinfo();
  
  // optional uint32 ShowType = 2;
  inline bool has_showtype() const;
  inline void clear_showtype();
  static const int kShowTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 showtype() const;
  inline void set_showtype(::google::protobuf::uint32 value);
  
  // optional string ArmorSuit = 3;
  inline bool has_armorsuit() const;
  inline void clear_armorsuit();
  static const int kArmorSuitFieldNumber = 3;
  inline const ::std::string& armorsuit() const;
  inline void set_armorsuit(const ::std::string& value);
  inline void set_armorsuit(const char* value);
  inline void set_armorsuit(const char* value, size_t size);
  inline ::std::string* mutable_armorsuit();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBEquipment* equipinfo_;
  ::google::protobuf::uint32 showtype_;
  ::std::string* armorsuit_;
  static const ::std::string _default_armorsuit_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBEquipArmor* default_instance_;
};
// -------------------------------------------------------------------

class PBTemplateProperty : public ::google::protobuf::Message {
 public:
  PBTemplateProperty();
  virtual ~PBTemplateProperty();
  
  PBTemplateProperty(const PBTemplateProperty& from);
  
  inline PBTemplateProperty& operator=(const PBTemplateProperty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTemplateProperty& default_instance();
  void Swap(PBTemplateProperty* other);
  
  // implements Message ----------------------------------------------
  
  PBTemplateProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTemplateProperty& from);
  void MergeFrom(const PBTemplateProperty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string PropertyName = 2;
  inline bool has_propertyname() const;
  inline void clear_propertyname();
  static const int kPropertyNameFieldNumber = 2;
  inline const ::std::string& propertyname() const;
  inline void set_propertyname(const ::std::string& value);
  inline void set_propertyname(const char* value);
  inline void set_propertyname(const char* value, size_t size);
  inline ::std::string* mutable_propertyname();
  
  // optional uint32 PropertyFunc = 3;
  inline bool has_propertyfunc() const;
  inline void clear_propertyfunc();
  static const int kPropertyFuncFieldNumber = 3;
  inline ::google::protobuf::uint32 propertyfunc() const;
  inline void set_propertyfunc(::google::protobuf::uint32 value);
  
  // optional uint32 CanOut = 4;
  inline bool has_canout() const;
  inline void clear_canout();
  static const int kCanOutFieldNumber = 4;
  inline ::google::protobuf::uint32 canout() const;
  inline void set_canout(::google::protobuf::uint32 value);
  
  // optional uint32 IntMinValue = 5;
  inline bool has_intminvalue() const;
  inline void clear_intminvalue();
  static const int kIntMinValueFieldNumber = 5;
  inline ::google::protobuf::uint32 intminvalue() const;
  inline void set_intminvalue(::google::protobuf::uint32 value);
  
  // optional uint32 IntMaxValue = 6;
  inline bool has_intmaxvalue() const;
  inline void clear_intmaxvalue();
  static const int kIntMaxValueFieldNumber = 6;
  inline ::google::protobuf::uint32 intmaxvalue() const;
  inline void set_intmaxvalue(::google::protobuf::uint32 value);
  
  // optional uint32 FloatMinValue = 7;
  inline bool has_floatminvalue() const;
  inline void clear_floatminvalue();
  static const int kFloatMinValueFieldNumber = 7;
  inline ::google::protobuf::uint32 floatminvalue() const;
  inline void set_floatminvalue(::google::protobuf::uint32 value);
  
  // optional uint32 FloatMaxValue = 8;
  inline bool has_floatmaxvalue() const;
  inline void clear_floatmaxvalue();
  static const int kFloatMaxValueFieldNumber = 8;
  inline ::google::protobuf::uint32 floatmaxvalue() const;
  inline void set_floatmaxvalue(::google::protobuf::uint32 value);
  
  // optional uint32 SkillID = 9;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 9;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 Area = 10;
  inline bool has_area() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 10;
  inline ::google::protobuf::uint32 area() const;
  inline void set_area(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* propertyname_;
  static const ::std::string _default_propertyname_;
  ::google::protobuf::uint32 propertyfunc_;
  ::google::protobuf::uint32 canout_;
  ::google::protobuf::uint32 intminvalue_;
  ::google::protobuf::uint32 intmaxvalue_;
  ::google::protobuf::uint32 floatminvalue_;
  ::google::protobuf::uint32 floatmaxvalue_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 area_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTemplateProperty* default_instance_;
};
// -------------------------------------------------------------------

class PBPropertyPercent : public ::google::protobuf::Message {
 public:
  PBPropertyPercent();
  virtual ~PBPropertyPercent();
  
  PBPropertyPercent(const PBPropertyPercent& from);
  
  inline PBPropertyPercent& operator=(const PBPropertyPercent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPropertyPercent& default_instance();
  void Swap(PBPropertyPercent* other);
  
  // implements Message ----------------------------------------------
  
  PBPropertyPercent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPropertyPercent& from);
  void MergeFrom(const PBPropertyPercent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 Percent = 2;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 2;
  inline ::google::protobuf::uint32 percent() const;
  inline void set_percent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 percent_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPropertyPercent* default_instance_;
};
// -------------------------------------------------------------------

class PBTemplatePropertyTable : public ::google::protobuf::Message {
 public:
  PBTemplatePropertyTable();
  virtual ~PBTemplatePropertyTable();
  
  PBTemplatePropertyTable(const PBTemplatePropertyTable& from);
  
  inline PBTemplatePropertyTable& operator=(const PBTemplatePropertyTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTemplatePropertyTable& default_instance();
  void Swap(PBTemplatePropertyTable* other);
  
  // implements Message ----------------------------------------------
  
  PBTemplatePropertyTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTemplatePropertyTable& from);
  void MergeFrom(const PBTemplatePropertyTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBPropertyPercent Property = 2;
  inline int property_size() const;
  inline void clear_property();
  static const int kPropertyFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPropertyPercent >& property() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPropertyPercent >* mutable_property();
  inline const ::PBPropertyPercent& property(int index) const;
  inline ::PBPropertyPercent* mutable_property(int index);
  inline ::PBPropertyPercent* add_property();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBPropertyPercent > property_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTemplatePropertyTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMetier : public ::google::protobuf::Message {
 public:
  PBMetier();
  virtual ~PBMetier();
  
  PBMetier(const PBMetier& from);
  
  inline PBMetier& operator=(const PBMetier& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMetier& default_instance();
  void Swap(PBMetier* other);
  
  // implements Message ----------------------------------------------
  
  PBMetier* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMetier& from);
  void MergeFrom(const PBMetier& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string MetierName = 2;
  inline bool has_metiername() const;
  inline void clear_metiername();
  static const int kMetierNameFieldNumber = 2;
  inline const ::std::string& metiername() const;
  inline void set_metiername(const ::std::string& value);
  inline void set_metiername(const char* value);
  inline void set_metiername(const char* value, size_t size);
  inline ::std::string* mutable_metiername();
  
  // optional uint32 MetierID = 3;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 3;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // repeated uint32 GenerID = 4;
  inline int generid_size() const;
  inline void clear_generid();
  static const int kGenerIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& generid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_generid();
  inline ::google::protobuf::uint32 generid(int index) const;
  inline void set_generid(int index, ::google::protobuf::uint32 value);
  inline void add_generid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillPoint = 5;
  inline bool has_skillpoint() const;
  inline void clear_skillpoint();
  static const int kSkillPointFieldNumber = 5;
  inline ::google::protobuf::uint32 skillpoint() const;
  inline void set_skillpoint(::google::protobuf::uint32 value);
  
  // optional uint32 PropertyPoint = 6;
  inline bool has_propertypoint() const;
  inline void clear_propertypoint();
  static const int kPropertyPointFieldNumber = 6;
  inline ::google::protobuf::uint32 propertypoint() const;
  inline void set_propertypoint(::google::protobuf::uint32 value);
  
  // optional uint32 WalkSpeed = 7;
  inline bool has_walkspeed() const;
  inline void clear_walkspeed();
  static const int kWalkSpeedFieldNumber = 7;
  inline ::google::protobuf::uint32 walkspeed() const;
  inline void set_walkspeed(::google::protobuf::uint32 value);
  
  // optional uint32 RunSpeed = 8;
  inline bool has_runspeed() const;
  inline void clear_runspeed();
  static const int kRunSpeedFieldNumber = 8;
  inline ::google::protobuf::uint32 runspeed() const;
  inline void set_runspeed(::google::protobuf::uint32 value);
  
  // optional uint32 InitLevel = 9;
  inline bool has_initlevel() const;
  inline void clear_initlevel();
  static const int kInitLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 initlevel() const;
  inline void set_initlevel(::google::protobuf::uint32 value);
  
  // optional uint32 InitHP = 10;
  inline bool has_inithp() const;
  inline void clear_inithp();
  static const int kInitHPFieldNumber = 10;
  inline ::google::protobuf::uint32 inithp() const;
  inline void set_inithp(::google::protobuf::uint32 value);
  
  // optional uint32 InitMP = 11;
  inline bool has_initmp() const;
  inline void clear_initmp();
  static const int kInitMPFieldNumber = 11;
  inline ::google::protobuf::uint32 initmp() const;
  inline void set_initmp(::google::protobuf::uint32 value);
  
  // optional uint32 InitPAttack = 12;
  inline bool has_initpattack() const;
  inline void clear_initpattack();
  static const int kInitPAttackFieldNumber = 12;
  inline ::google::protobuf::uint32 initpattack() const;
  inline void set_initpattack(::google::protobuf::uint32 value);
  
  // optional uint32 InitPDefense = 13;
  inline bool has_initpdefense() const;
  inline void clear_initpdefense();
  static const int kInitPDefenseFieldNumber = 13;
  inline ::google::protobuf::uint32 initpdefense() const;
  inline void set_initpdefense(::google::protobuf::uint32 value);
  
  // optional uint32 InitMAttack = 14;
  inline bool has_initmattack() const;
  inline void clear_initmattack();
  static const int kInitMAttackFieldNumber = 14;
  inline ::google::protobuf::uint32 initmattack() const;
  inline void set_initmattack(::google::protobuf::uint32 value);
  
  // optional uint32 InitMDefense = 15;
  inline bool has_initmdefense() const;
  inline void clear_initmdefense();
  static const int kInitMDefenseFieldNumber = 15;
  inline ::google::protobuf::uint32 initmdefense() const;
  inline void set_initmdefense(::google::protobuf::uint32 value);
  
  // optional uint32 InitAbnResist = 16;
  inline bool has_initabnresist() const;
  inline void clear_initabnresist();
  static const int kInitAbnResistFieldNumber = 16;
  inline ::google::protobuf::uint32 initabnresist() const;
  inline void set_initabnresist(::google::protobuf::uint32 value);
  
  // optional uint32 InitWindResist = 17;
  inline bool has_initwindresist() const;
  inline void clear_initwindresist();
  static const int kInitWindResistFieldNumber = 17;
  inline ::google::protobuf::uint32 initwindresist() const;
  inline void set_initwindresist(::google::protobuf::uint32 value);
  
  // optional uint32 InitFireResist = 18;
  inline bool has_initfireresist() const;
  inline void clear_initfireresist();
  static const int kInitFireResistFieldNumber = 18;
  inline ::google::protobuf::uint32 initfireresist() const;
  inline void set_initfireresist(::google::protobuf::uint32 value);
  
  // optional uint32 InitWaterResist = 19;
  inline bool has_initwaterresist() const;
  inline void clear_initwaterresist();
  static const int kInitWaterResistFieldNumber = 19;
  inline ::google::protobuf::uint32 initwaterresist() const;
  inline void set_initwaterresist(::google::protobuf::uint32 value);
  
  // optional uint32 InitLightResist = 20;
  inline bool has_initlightresist() const;
  inline void clear_initlightresist();
  static const int kInitLightResistFieldNumber = 20;
  inline ::google::protobuf::uint32 initlightresist() const;
  inline void set_initlightresist(::google::protobuf::uint32 value);
  
  // optional uint32 InitEarthResist = 21;
  inline bool has_initearthresist() const;
  inline void clear_initearthresist();
  static const int kInitEarthResistFieldNumber = 21;
  inline ::google::protobuf::uint32 initearthresist() const;
  inline void set_initearthresist(::google::protobuf::uint32 value);
  
  // optional uint32 InitSadowResist = 22;
  inline bool has_initsadowresist() const;
  inline void clear_initsadowresist();
  static const int kInitSadowResistFieldNumber = 22;
  inline ::google::protobuf::uint32 initsadowresist() const;
  inline void set_initsadowresist(::google::protobuf::uint32 value);
  
  // optional uint32 InitDeathRate = 23;
  inline bool has_initdeathrate() const;
  inline void clear_initdeathrate();
  static const int kInitDeathRateFieldNumber = 23;
  inline ::google::protobuf::uint32 initdeathrate() const;
  inline void set_initdeathrate(::google::protobuf::uint32 value);
  
  // optional uint32 InitDeathValue = 24;
  inline bool has_initdeathvalue() const;
  inline void clear_initdeathvalue();
  static const int kInitDeathValueFieldNumber = 24;
  inline ::google::protobuf::uint32 initdeathvalue() const;
  inline void set_initdeathvalue(::google::protobuf::uint32 value);
  
  // optional uint32 InitNmlHitrate = 25;
  inline bool has_initnmlhitrate() const;
  inline void clear_initnmlhitrate();
  static const int kInitNmlHitrateFieldNumber = 25;
  inline ::google::protobuf::uint32 initnmlhitrate() const;
  inline void set_initnmlhitrate(::google::protobuf::uint32 value);
  
  // optional uint32 InitNormalDuck = 26;
  inline bool has_initnormalduck() const;
  inline void clear_initnormalduck();
  static const int kInitNormalDuckFieldNumber = 26;
  inline ::google::protobuf::uint32 initnormalduck() const;
  inline void set_initnormalduck(::google::protobuf::uint32 value);
  
  // optional uint32 InitSkillDuck = 27;
  inline bool has_initskillduck() const;
  inline void clear_initskillduck();
  static const int kInitSkillDuckFieldNumber = 27;
  inline ::google::protobuf::uint32 initskillduck() const;
  inline void set_initskillduck(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaHP = 28;
  inline bool has_deltahp() const;
  inline void clear_deltahp();
  static const int kDeltaHPFieldNumber = 28;
  inline ::google::protobuf::uint32 deltahp() const;
  inline void set_deltahp(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaMP = 29;
  inline bool has_deltamp() const;
  inline void clear_deltamp();
  static const int kDeltaMPFieldNumber = 29;
  inline ::google::protobuf::uint32 deltamp() const;
  inline void set_deltamp(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaPAttack = 30;
  inline bool has_deltapattack() const;
  inline void clear_deltapattack();
  static const int kDeltaPAttackFieldNumber = 30;
  inline ::google::protobuf::uint32 deltapattack() const;
  inline void set_deltapattack(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaPDefense = 31;
  inline bool has_deltapdefense() const;
  inline void clear_deltapdefense();
  static const int kDeltaPDefenseFieldNumber = 31;
  inline ::google::protobuf::uint32 deltapdefense() const;
  inline void set_deltapdefense(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaMAttack = 32;
  inline bool has_deltamattack() const;
  inline void clear_deltamattack();
  static const int kDeltaMAttackFieldNumber = 32;
  inline ::google::protobuf::uint32 deltamattack() const;
  inline void set_deltamattack(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaMDefense = 33;
  inline bool has_deltamdefense() const;
  inline void clear_deltamdefense();
  static const int kDeltaMDefenseFieldNumber = 33;
  inline ::google::protobuf::uint32 deltamdefense() const;
  inline void set_deltamdefense(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaAbnResist = 34;
  inline bool has_deltaabnresist() const;
  inline void clear_deltaabnresist();
  static const int kDeltaAbnResistFieldNumber = 34;
  inline ::google::protobuf::uint32 deltaabnresist() const;
  inline void set_deltaabnresist(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaWindResist = 35;
  inline bool has_deltawindresist() const;
  inline void clear_deltawindresist();
  static const int kDeltaWindResistFieldNumber = 35;
  inline ::google::protobuf::uint32 deltawindresist() const;
  inline void set_deltawindresist(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaFireResist = 36;
  inline bool has_deltafireresist() const;
  inline void clear_deltafireresist();
  static const int kDeltaFireResistFieldNumber = 36;
  inline ::google::protobuf::uint32 deltafireresist() const;
  inline void set_deltafireresist(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaWaterResist = 37;
  inline bool has_deltawaterresist() const;
  inline void clear_deltawaterresist();
  static const int kDeltaWaterResistFieldNumber = 37;
  inline ::google::protobuf::uint32 deltawaterresist() const;
  inline void set_deltawaterresist(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaLightResist = 38;
  inline bool has_deltalightresist() const;
  inline void clear_deltalightresist();
  static const int kDeltaLightResistFieldNumber = 38;
  inline ::google::protobuf::uint32 deltalightresist() const;
  inline void set_deltalightresist(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaEarthResist = 39;
  inline bool has_deltaearthresist() const;
  inline void clear_deltaearthresist();
  static const int kDeltaEarthResistFieldNumber = 39;
  inline ::google::protobuf::uint32 deltaearthresist() const;
  inline void set_deltaearthresist(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaShadowResist = 40;
  inline bool has_deltashadowresist() const;
  inline void clear_deltashadowresist();
  static const int kDeltaShadowResistFieldNumber = 40;
  inline ::google::protobuf::uint32 deltashadowresist() const;
  inline void set_deltashadowresist(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaDeathRate = 41;
  inline bool has_deltadeathrate() const;
  inline void clear_deltadeathrate();
  static const int kDeltaDeathRateFieldNumber = 41;
  inline ::google::protobuf::uint32 deltadeathrate() const;
  inline void set_deltadeathrate(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaDeathValue = 42;
  inline bool has_deltadeathvalue() const;
  inline void clear_deltadeathvalue();
  static const int kDeltaDeathValueFieldNumber = 42;
  inline ::google::protobuf::uint32 deltadeathvalue() const;
  inline void set_deltadeathvalue(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaNormalHitrate = 43;
  inline bool has_deltanormalhitrate() const;
  inline void clear_deltanormalhitrate();
  static const int kDeltaNormalHitrateFieldNumber = 43;
  inline ::google::protobuf::uint32 deltanormalhitrate() const;
  inline void set_deltanormalhitrate(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaNormalDuck = 44;
  inline bool has_deltanormalduck() const;
  inline void clear_deltanormalduck();
  static const int kDeltaNormalDuckFieldNumber = 44;
  inline ::google::protobuf::uint32 deltanormalduck() const;
  inline void set_deltanormalduck(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaSkillDuck = 45;
  inline bool has_deltaskillduck() const;
  inline void clear_deltaskillduck();
  static const int kDeltaSkillDuckFieldNumber = 45;
  inline ::google::protobuf::uint32 deltaskillduck() const;
  inline void set_deltaskillduck(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackPerStr = 46;
  inline bool has_pattackperstr() const;
  inline void clear_pattackperstr();
  static const int kPAttackPerStrFieldNumber = 46;
  inline ::google::protobuf::uint32 pattackperstr() const;
  inline void set_pattackperstr(::google::protobuf::uint32 value);
  
  // optional uint32 DeathValuePerStr = 47;
  inline bool has_deathvalueperstr() const;
  inline void clear_deathvalueperstr();
  static const int kDeathValuePerStrFieldNumber = 47;
  inline ::google::protobuf::uint32 deathvalueperstr() const;
  inline void set_deathvalueperstr(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHPPerStr = 48;
  inline bool has_maxhpperstr() const;
  inline void clear_maxhpperstr();
  static const int kMaxHPPerStrFieldNumber = 48;
  inline ::google::protobuf::uint32 maxhpperstr() const;
  inline void set_maxhpperstr(::google::protobuf::uint32 value);
  
  // optional uint32 PDefensePerCon = 49;
  inline bool has_pdefensepercon() const;
  inline void clear_pdefensepercon();
  static const int kPDefensePerConFieldNumber = 49;
  inline ::google::protobuf::uint32 pdefensepercon() const;
  inline void set_pdefensepercon(::google::protobuf::uint32 value);
  
  // optional uint32 HPRSpeedPerCon = 50;
  inline bool has_hprspeedpercon() const;
  inline void clear_hprspeedpercon();
  static const int kHPRSpeedPerConFieldNumber = 50;
  inline ::google::protobuf::uint32 hprspeedpercon() const;
  inline void set_hprspeedpercon(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHPPerSta = 51;
  inline bool has_maxhppersta() const;
  inline void clear_maxhppersta();
  static const int kMaxHPPerStaFieldNumber = 51;
  inline ::google::protobuf::uint32 maxhppersta() const;
  inline void set_maxhppersta(::google::protobuf::uint32 value);
  
  // optional uint32 AbnResistPerSta = 52;
  inline bool has_abnresistpersta() const;
  inline void clear_abnresistpersta();
  static const int kAbnResistPerStaFieldNumber = 52;
  inline ::google::protobuf::uint32 abnresistpersta() const;
  inline void set_abnresistpersta(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackPerWis = 53;
  inline bool has_mattackperwis() const;
  inline void clear_mattackperwis();
  static const int kMAttackPerWisFieldNumber = 53;
  inline ::google::protobuf::uint32 mattackperwis() const;
  inline void set_mattackperwis(::google::protobuf::uint32 value);
  
  // optional uint32 MaxMPPerWis = 54;
  inline bool has_maxmpperwis() const;
  inline void clear_maxmpperwis();
  static const int kMaxMPPerWisFieldNumber = 54;
  inline ::google::protobuf::uint32 maxmpperwis() const;
  inline void set_maxmpperwis(::google::protobuf::uint32 value);
  
  // optional uint32 DeathValuePerWis = 55;
  inline bool has_deathvalueperwis() const;
  inline void clear_deathvalueperwis();
  static const int kDeathValuePerWisFieldNumber = 55;
  inline ::google::protobuf::uint32 deathvalueperwis() const;
  inline void set_deathvalueperwis(::google::protobuf::uint32 value);
  
  // optional uint32 MDefensePerSpr = 56;
  inline bool has_mdefenseperspr() const;
  inline void clear_mdefenseperspr();
  static const int kMDefensePerSprFieldNumber = 56;
  inline ::google::protobuf::uint32 mdefenseperspr() const;
  inline void set_mdefenseperspr(::google::protobuf::uint32 value);
  
  // optional uint32 MaxMPPerSpr = 57;
  inline bool has_maxmpperspr() const;
  inline void clear_maxmpperspr();
  static const int kMaxMPPerSprFieldNumber = 57;
  inline ::google::protobuf::uint32 maxmpperspr() const;
  inline void set_maxmpperspr(::google::protobuf::uint32 value);
  
  // optional uint32 MPRSpeedPerSpr = 58;
  inline bool has_mprspeedperspr() const;
  inline void clear_mprspeedperspr();
  static const int kMPRSpeedPerSprFieldNumber = 58;
  inline ::google::protobuf::uint32 mprspeedperspr() const;
  inline void set_mprspeedperspr(::google::protobuf::uint32 value);
  
  // optional uint32 NormalHPRSpeed = 59;
  inline bool has_normalhprspeed() const;
  inline void clear_normalhprspeed();
  static const int kNormalHPRSpeedFieldNumber = 59;
  inline ::google::protobuf::uint32 normalhprspeed() const;
  inline void set_normalhprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 NormalSitHPRSpeed = 60;
  inline bool has_normalsithprspeed() const;
  inline void clear_normalsithprspeed();
  static const int kNormalSitHPRSpeedFieldNumber = 60;
  inline ::google::protobuf::uint32 normalsithprspeed() const;
  inline void set_normalsithprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 BattleHPRSpeed = 61;
  inline bool has_battlehprspeed() const;
  inline void clear_battlehprspeed();
  static const int kBattleHPRSpeedFieldNumber = 61;
  inline ::google::protobuf::uint32 battlehprspeed() const;
  inline void set_battlehprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 BattleSitHPRSpeed = 62;
  inline bool has_battlesithprspeed() const;
  inline void clear_battlesithprspeed();
  static const int kBattleSitHPRSpeedFieldNumber = 62;
  inline ::google::protobuf::uint32 battlesithprspeed() const;
  inline void set_battlesithprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 NormalMPRSpeed = 63;
  inline bool has_normalmprspeed() const;
  inline void clear_normalmprspeed();
  static const int kNormalMPRSpeedFieldNumber = 63;
  inline ::google::protobuf::uint32 normalmprspeed() const;
  inline void set_normalmprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 NormalSitMPRSpeed = 64;
  inline bool has_normalsitmprspeed() const;
  inline void clear_normalsitmprspeed();
  static const int kNormalSitMPRSpeedFieldNumber = 64;
  inline ::google::protobuf::uint32 normalsitmprspeed() const;
  inline void set_normalsitmprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 BattleMPRSpeed = 65;
  inline bool has_battlemprspeed() const;
  inline void clear_battlemprspeed();
  static const int kBattleMPRSpeedFieldNumber = 65;
  inline ::google::protobuf::uint32 battlemprspeed() const;
  inline void set_battlemprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 BattleSitMPRSpeed = 66;
  inline bool has_battlesitmprspeed() const;
  inline void clear_battlesitmprspeed();
  static const int kBattleSitMPRSpeedFieldNumber = 66;
  inline ::google::protobuf::uint32 battlesitmprspeed() const;
  inline void set_battlesitmprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 InitIgnoreDuck = 67;
  inline bool has_initignoreduck() const;
  inline void clear_initignoreduck();
  static const int kInitIgnoreDuckFieldNumber = 67;
  inline ::google::protobuf::uint32 initignoreduck() const;
  inline void set_initignoreduck(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaIgnoreDuck = 68;
  inline bool has_deltaignoreduck() const;
  inline void clear_deltaignoreduck();
  static const int kDeltaIgnoreDuckFieldNumber = 68;
  inline ::google::protobuf::uint32 deltaignoreduck() const;
  inline void set_deltaignoreduck(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackPerStr = 69;
  inline bool has_mattackperstr() const;
  inline void clear_mattackperstr();
  static const int kMAttackPerStrFieldNumber = 69;
  inline ::google::protobuf::uint32 mattackperstr() const;
  inline void set_mattackperstr(::google::protobuf::uint32 value);
  
  // optional uint32 DeathRatePerStr = 70;
  inline bool has_deathrateperstr() const;
  inline void clear_deathrateperstr();
  static const int kDeathRatePerStrFieldNumber = 70;
  inline ::google::protobuf::uint32 deathrateperstr() const;
  inline void set_deathrateperstr(::google::protobuf::uint32 value);
  
  // optional uint32 MaxMPPerStr = 71;
  inline bool has_maxmpperstr() const;
  inline void clear_maxmpperstr();
  static const int kMaxMPPerStrFieldNumber = 71;
  inline ::google::protobuf::uint32 maxmpperstr() const;
  inline void set_maxmpperstr(::google::protobuf::uint32 value);
  
  // optional uint32 PDefensePerStr = 72;
  inline bool has_pdefenseperstr() const;
  inline void clear_pdefenseperstr();
  static const int kPDefensePerStrFieldNumber = 72;
  inline ::google::protobuf::uint32 pdefenseperstr() const;
  inline void set_pdefenseperstr(::google::protobuf::uint32 value);
  
  // optional uint32 MDefensePerStr = 73;
  inline bool has_mdefenseperstr() const;
  inline void clear_mdefenseperstr();
  static const int kMDefensePerStrFieldNumber = 73;
  inline ::google::protobuf::uint32 mdefenseperstr() const;
  inline void set_mdefenseperstr(::google::protobuf::uint32 value);
  
  // optional uint32 NmlHitratePerStr = 74;
  inline bool has_nmlhitrateperstr() const;
  inline void clear_nmlhitrateperstr();
  static const int kNmlHitratePerStrFieldNumber = 74;
  inline ::google::protobuf::uint32 nmlhitrateperstr() const;
  inline void set_nmlhitrateperstr(::google::protobuf::uint32 value);
  
  // optional uint32 NormalDuckPerStr = 75;
  inline bool has_normalduckperstr() const;
  inline void clear_normalduckperstr();
  static const int kNormalDuckPerStrFieldNumber = 75;
  inline ::google::protobuf::uint32 normalduckperstr() const;
  inline void set_normalduckperstr(::google::protobuf::uint32 value);
  
  // optional uint32 IgnoreDuckPerStr = 76;
  inline bool has_ignoreduckperstr() const;
  inline void clear_ignoreduckperstr();
  static const int kIgnoreDuckPerStrFieldNumber = 76;
  inline ::google::protobuf::uint32 ignoreduckperstr() const;
  inline void set_ignoreduckperstr(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackPerCon = 77;
  inline bool has_pattackpercon() const;
  inline void clear_pattackpercon();
  static const int kPAttackPerConFieldNumber = 77;
  inline ::google::protobuf::uint32 pattackpercon() const;
  inline void set_pattackpercon(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackPerCon = 78;
  inline bool has_mattackpercon() const;
  inline void clear_mattackpercon();
  static const int kMAttackPerConFieldNumber = 78;
  inline ::google::protobuf::uint32 mattackpercon() const;
  inline void set_mattackpercon(::google::protobuf::uint32 value);
  
  // optional uint32 DeathRatePerCon = 79;
  inline bool has_deathratepercon() const;
  inline void clear_deathratepercon();
  static const int kDeathRatePerConFieldNumber = 79;
  inline ::google::protobuf::uint32 deathratepercon() const;
  inline void set_deathratepercon(::google::protobuf::uint32 value);
  
  // optional uint32 DeathValuePerCon = 80;
  inline bool has_deathvaluepercon() const;
  inline void clear_deathvaluepercon();
  static const int kDeathValuePerConFieldNumber = 80;
  inline ::google::protobuf::uint32 deathvaluepercon() const;
  inline void set_deathvaluepercon(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHPPerCon = 81;
  inline bool has_maxhppercon() const;
  inline void clear_maxhppercon();
  static const int kMaxHPPerConFieldNumber = 81;
  inline ::google::protobuf::uint32 maxhppercon() const;
  inline void set_maxhppercon(::google::protobuf::uint32 value);
  
  // optional uint32 MaxMPPerCon = 82;
  inline bool has_maxmppercon() const;
  inline void clear_maxmppercon();
  static const int kMaxMPPerConFieldNumber = 82;
  inline ::google::protobuf::uint32 maxmppercon() const;
  inline void set_maxmppercon(::google::protobuf::uint32 value);
  
  // optional uint32 MDefensePerCon = 83;
  inline bool has_mdefensepercon() const;
  inline void clear_mdefensepercon();
  static const int kMDefensePerConFieldNumber = 83;
  inline ::google::protobuf::uint32 mdefensepercon() const;
  inline void set_mdefensepercon(::google::protobuf::uint32 value);
  
  // optional uint32 NmlHitratePerCon = 84;
  inline bool has_nmlhitratepercon() const;
  inline void clear_nmlhitratepercon();
  static const int kNmlHitratePerConFieldNumber = 84;
  inline ::google::protobuf::uint32 nmlhitratepercon() const;
  inline void set_nmlhitratepercon(::google::protobuf::uint32 value);
  
  // optional uint32 NormalDuckPerCon = 85;
  inline bool has_normalduckpercon() const;
  inline void clear_normalduckpercon();
  static const int kNormalDuckPerConFieldNumber = 85;
  inline ::google::protobuf::uint32 normalduckpercon() const;
  inline void set_normalduckpercon(::google::protobuf::uint32 value);
  
  // optional uint32 IgnoreDuckPerCon = 86;
  inline bool has_ignoreduckpercon() const;
  inline void clear_ignoreduckpercon();
  static const int kIgnoreDuckPerConFieldNumber = 86;
  inline ::google::protobuf::uint32 ignoreduckpercon() const;
  inline void set_ignoreduckpercon(::google::protobuf::uint32 value);
  
  // optional uint32 PReducePerSta = 87;
  inline bool has_preducepersta() const;
  inline void clear_preducepersta();
  static const int kPReducePerStaFieldNumber = 87;
  inline ::google::protobuf::uint32 preducepersta() const;
  inline void set_preducepersta(::google::protobuf::uint32 value);
  
  // optional uint32 MReducePerSta = 88;
  inline bool has_mreducepersta() const;
  inline void clear_mreducepersta();
  static const int kMReducePerStaFieldNumber = 88;
  inline ::google::protobuf::uint32 mreducepersta() const;
  inline void set_mreducepersta(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackPerWis = 89;
  inline bool has_pattackperwis() const;
  inline void clear_pattackperwis();
  static const int kPAttackPerWisFieldNumber = 89;
  inline ::google::protobuf::uint32 pattackperwis() const;
  inline void set_pattackperwis(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHPPerWis = 90;
  inline bool has_maxhpperwis() const;
  inline void clear_maxhpperwis();
  static const int kMaxHPPerWisFieldNumber = 90;
  inline ::google::protobuf::uint32 maxhpperwis() const;
  inline void set_maxhpperwis(::google::protobuf::uint32 value);
  
  // optional uint32 DeathRatePerWis = 91;
  inline bool has_deathrateperwis() const;
  inline void clear_deathrateperwis();
  static const int kDeathRatePerWisFieldNumber = 91;
  inline ::google::protobuf::uint32 deathrateperwis() const;
  inline void set_deathrateperwis(::google::protobuf::uint32 value);
  
  // optional uint32 PDefensePerWis = 92;
  inline bool has_pdefenseperwis() const;
  inline void clear_pdefenseperwis();
  static const int kPDefensePerWisFieldNumber = 92;
  inline ::google::protobuf::uint32 pdefenseperwis() const;
  inline void set_pdefenseperwis(::google::protobuf::uint32 value);
  
  // optional uint32 MDefensePerWis = 93;
  inline bool has_mdefenseperwis() const;
  inline void clear_mdefenseperwis();
  static const int kMDefensePerWisFieldNumber = 93;
  inline ::google::protobuf::uint32 mdefenseperwis() const;
  inline void set_mdefenseperwis(::google::protobuf::uint32 value);
  
  // optional uint32 NmlHitratePerWis = 94;
  inline bool has_nmlhitrateperwis() const;
  inline void clear_nmlhitrateperwis();
  static const int kNmlHitratePerWisFieldNumber = 94;
  inline ::google::protobuf::uint32 nmlhitrateperwis() const;
  inline void set_nmlhitrateperwis(::google::protobuf::uint32 value);
  
  // optional uint32 NormalDuckPerWis = 95;
  inline bool has_normalduckperwis() const;
  inline void clear_normalduckperwis();
  static const int kNormalDuckPerWisFieldNumber = 95;
  inline ::google::protobuf::uint32 normalduckperwis() const;
  inline void set_normalduckperwis(::google::protobuf::uint32 value);
  
  // optional uint32 IgnoreDuckPerWis = 96;
  inline bool has_ignoreduckperwis() const;
  inline void clear_ignoreduckperwis();
  static const int kIgnoreDuckPerWisFieldNumber = 96;
  inline ::google::protobuf::uint32 ignoreduckperwis() const;
  inline void set_ignoreduckperwis(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackPerSpr = 97;
  inline bool has_pattackperspr() const;
  inline void clear_pattackperspr();
  static const int kPAttackPerSprFieldNumber = 97;
  inline ::google::protobuf::uint32 pattackperspr() const;
  inline void set_pattackperspr(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackPerSpr = 98;
  inline bool has_mattackperspr() const;
  inline void clear_mattackperspr();
  static const int kMAttackPerSprFieldNumber = 98;
  inline ::google::protobuf::uint32 mattackperspr() const;
  inline void set_mattackperspr(::google::protobuf::uint32 value);
  
  // optional uint32 DeathRatePerSpr = 99;
  inline bool has_deathrateperspr() const;
  inline void clear_deathrateperspr();
  static const int kDeathRatePerSprFieldNumber = 99;
  inline ::google::protobuf::uint32 deathrateperspr() const;
  inline void set_deathrateperspr(::google::protobuf::uint32 value);
  
  // optional uint32 DeathValuePerSpr = 100;
  inline bool has_deathvalueperspr() const;
  inline void clear_deathvalueperspr();
  static const int kDeathValuePerSprFieldNumber = 100;
  inline ::google::protobuf::uint32 deathvalueperspr() const;
  inline void set_deathvalueperspr(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHPPerSpr = 101;
  inline bool has_maxhpperspr() const;
  inline void clear_maxhpperspr();
  static const int kMaxHPPerSprFieldNumber = 101;
  inline ::google::protobuf::uint32 maxhpperspr() const;
  inline void set_maxhpperspr(::google::protobuf::uint32 value);
  
  // optional uint32 PDefensePerSpr = 102;
  inline bool has_pdefenseperspr() const;
  inline void clear_pdefenseperspr();
  static const int kPDefensePerSprFieldNumber = 102;
  inline ::google::protobuf::uint32 pdefenseperspr() const;
  inline void set_pdefenseperspr(::google::protobuf::uint32 value);
  
  // optional uint32 NmlHitratePerSpr = 103;
  inline bool has_nmlhitrateperspr() const;
  inline void clear_nmlhitrateperspr();
  static const int kNmlHitratePerSprFieldNumber = 103;
  inline ::google::protobuf::uint32 nmlhitrateperspr() const;
  inline void set_nmlhitrateperspr(::google::protobuf::uint32 value);
  
  // optional uint32 NormalDuckPerSpr = 104;
  inline bool has_normalduckperspr() const;
  inline void clear_normalduckperspr();
  static const int kNormalDuckPerSprFieldNumber = 104;
  inline ::google::protobuf::uint32 normalduckperspr() const;
  inline void set_normalduckperspr(::google::protobuf::uint32 value);
  
  // optional uint32 IgnoreDuckPerSpr = 105;
  inline bool has_ignoreduckperspr() const;
  inline void clear_ignoreduckperspr();
  static const int kIgnoreDuckPerSprFieldNumber = 105;
  inline ::google::protobuf::uint32 ignoreduckperspr() const;
  inline void set_ignoreduckperspr(::google::protobuf::uint32 value);
  
  // optional uint32 InitDeathDefense = 106;
  inline bool has_initdeathdefense() const;
  inline void clear_initdeathdefense();
  static const int kInitDeathDefenseFieldNumber = 106;
  inline ::google::protobuf::uint32 initdeathdefense() const;
  inline void set_initdeathdefense(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaDeathDefense = 107;
  inline bool has_deltadeathdefense() const;
  inline void clear_deltadeathdefense();
  static const int kDeltaDeathDefenseFieldNumber = 107;
  inline ::google::protobuf::uint32 deltadeathdefense() const;
  inline void set_deltadeathdefense(::google::protobuf::uint32 value);
  
  // optional uint32 DeathDefensePerStr = 108;
  inline bool has_deathdefenseperstr() const;
  inline void clear_deathdefenseperstr();
  static const int kDeathDefensePerStrFieldNumber = 108;
  inline ::google::protobuf::uint32 deathdefenseperstr() const;
  inline void set_deathdefenseperstr(::google::protobuf::uint32 value);
  
  // optional uint32 DeathDefensePerCon = 109;
  inline bool has_deathdefensepercon() const;
  inline void clear_deathdefensepercon();
  static const int kDeathDefensePerConFieldNumber = 109;
  inline ::google::protobuf::uint32 deathdefensepercon() const;
  inline void set_deathdefensepercon(::google::protobuf::uint32 value);
  
  // optional uint32 DeathDefensePerSta = 110;
  inline bool has_deathdefensepersta() const;
  inline void clear_deathdefensepersta();
  static const int kDeathDefensePerStaFieldNumber = 110;
  inline ::google::protobuf::uint32 deathdefensepersta() const;
  inline void set_deathdefensepersta(::google::protobuf::uint32 value);
  
  // optional uint32 DeathDefensePerWis = 111;
  inline bool has_deathdefenseperwis() const;
  inline void clear_deathdefenseperwis();
  static const int kDeathDefensePerWisFieldNumber = 111;
  inline ::google::protobuf::uint32 deathdefenseperwis() const;
  inline void set_deathdefenseperwis(::google::protobuf::uint32 value);
  
  // optional uint32 DeathDefensePerSpr = 112;
  inline bool has_deathdefenseperspr() const;
  inline void clear_deathdefenseperspr();
  static const int kDeathDefensePerSprFieldNumber = 112;
  inline ::google::protobuf::uint32 deathdefenseperspr() const;
  inline void set_deathdefenseperspr(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* metiername_;
  static const ::std::string _default_metiername_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > generid_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::uint32 propertypoint_;
  ::google::protobuf::uint32 walkspeed_;
  ::google::protobuf::uint32 runspeed_;
  ::google::protobuf::uint32 initlevel_;
  ::google::protobuf::uint32 inithp_;
  ::google::protobuf::uint32 initmp_;
  ::google::protobuf::uint32 initpattack_;
  ::google::protobuf::uint32 initpdefense_;
  ::google::protobuf::uint32 initmattack_;
  ::google::protobuf::uint32 initmdefense_;
  ::google::protobuf::uint32 initabnresist_;
  ::google::protobuf::uint32 initwindresist_;
  ::google::protobuf::uint32 initfireresist_;
  ::google::protobuf::uint32 initwaterresist_;
  ::google::protobuf::uint32 initlightresist_;
  ::google::protobuf::uint32 initearthresist_;
  ::google::protobuf::uint32 initsadowresist_;
  ::google::protobuf::uint32 initdeathrate_;
  ::google::protobuf::uint32 initdeathvalue_;
  ::google::protobuf::uint32 initnmlhitrate_;
  ::google::protobuf::uint32 initnormalduck_;
  ::google::protobuf::uint32 initskillduck_;
  ::google::protobuf::uint32 deltahp_;
  ::google::protobuf::uint32 deltamp_;
  ::google::protobuf::uint32 deltapattack_;
  ::google::protobuf::uint32 deltapdefense_;
  ::google::protobuf::uint32 deltamattack_;
  ::google::protobuf::uint32 deltamdefense_;
  ::google::protobuf::uint32 deltaabnresist_;
  ::google::protobuf::uint32 deltawindresist_;
  ::google::protobuf::uint32 deltafireresist_;
  ::google::protobuf::uint32 deltawaterresist_;
  ::google::protobuf::uint32 deltalightresist_;
  ::google::protobuf::uint32 deltaearthresist_;
  ::google::protobuf::uint32 deltashadowresist_;
  ::google::protobuf::uint32 deltadeathrate_;
  ::google::protobuf::uint32 deltadeathvalue_;
  ::google::protobuf::uint32 deltanormalhitrate_;
  ::google::protobuf::uint32 deltanormalduck_;
  ::google::protobuf::uint32 deltaskillduck_;
  ::google::protobuf::uint32 pattackperstr_;
  ::google::protobuf::uint32 deathvalueperstr_;
  ::google::protobuf::uint32 maxhpperstr_;
  ::google::protobuf::uint32 pdefensepercon_;
  ::google::protobuf::uint32 hprspeedpercon_;
  ::google::protobuf::uint32 maxhppersta_;
  ::google::protobuf::uint32 abnresistpersta_;
  ::google::protobuf::uint32 mattackperwis_;
  ::google::protobuf::uint32 maxmpperwis_;
  ::google::protobuf::uint32 deathvalueperwis_;
  ::google::protobuf::uint32 mdefenseperspr_;
  ::google::protobuf::uint32 maxmpperspr_;
  ::google::protobuf::uint32 mprspeedperspr_;
  ::google::protobuf::uint32 normalhprspeed_;
  ::google::protobuf::uint32 normalsithprspeed_;
  ::google::protobuf::uint32 battlehprspeed_;
  ::google::protobuf::uint32 battlesithprspeed_;
  ::google::protobuf::uint32 normalmprspeed_;
  ::google::protobuf::uint32 normalsitmprspeed_;
  ::google::protobuf::uint32 battlemprspeed_;
  ::google::protobuf::uint32 battlesitmprspeed_;
  ::google::protobuf::uint32 initignoreduck_;
  ::google::protobuf::uint32 deltaignoreduck_;
  ::google::protobuf::uint32 mattackperstr_;
  ::google::protobuf::uint32 deathrateperstr_;
  ::google::protobuf::uint32 maxmpperstr_;
  ::google::protobuf::uint32 pdefenseperstr_;
  ::google::protobuf::uint32 mdefenseperstr_;
  ::google::protobuf::uint32 nmlhitrateperstr_;
  ::google::protobuf::uint32 normalduckperstr_;
  ::google::protobuf::uint32 ignoreduckperstr_;
  ::google::protobuf::uint32 pattackpercon_;
  ::google::protobuf::uint32 mattackpercon_;
  ::google::protobuf::uint32 deathratepercon_;
  ::google::protobuf::uint32 deathvaluepercon_;
  ::google::protobuf::uint32 maxhppercon_;
  ::google::protobuf::uint32 maxmppercon_;
  ::google::protobuf::uint32 mdefensepercon_;
  ::google::protobuf::uint32 nmlhitratepercon_;
  ::google::protobuf::uint32 normalduckpercon_;
  ::google::protobuf::uint32 ignoreduckpercon_;
  ::google::protobuf::uint32 preducepersta_;
  ::google::protobuf::uint32 mreducepersta_;
  ::google::protobuf::uint32 pattackperwis_;
  ::google::protobuf::uint32 maxhpperwis_;
  ::google::protobuf::uint32 deathrateperwis_;
  ::google::protobuf::uint32 pdefenseperwis_;
  ::google::protobuf::uint32 mdefenseperwis_;
  ::google::protobuf::uint32 nmlhitrateperwis_;
  ::google::protobuf::uint32 normalduckperwis_;
  ::google::protobuf::uint32 ignoreduckperwis_;
  ::google::protobuf::uint32 pattackperspr_;
  ::google::protobuf::uint32 mattackperspr_;
  ::google::protobuf::uint32 deathrateperspr_;
  ::google::protobuf::uint32 deathvalueperspr_;
  ::google::protobuf::uint32 maxhpperspr_;
  ::google::protobuf::uint32 pdefenseperspr_;
  ::google::protobuf::uint32 nmlhitrateperspr_;
  ::google::protobuf::uint32 normalduckperspr_;
  ::google::protobuf::uint32 ignoreduckperspr_;
  ::google::protobuf::uint32 initdeathdefense_;
  ::google::protobuf::uint32 deltadeathdefense_;
  ::google::protobuf::uint32 deathdefenseperstr_;
  ::google::protobuf::uint32 deathdefensepercon_;
  ::google::protobuf::uint32 deathdefensepersta_;
  ::google::protobuf::uint32 deathdefenseperwis_;
  ::google::protobuf::uint32 deathdefenseperspr_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(112 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMetier* default_instance_;
};
// -------------------------------------------------------------------

class PBNpc : public ::google::protobuf::Message {
 public:
  PBNpc();
  virtual ~PBNpc();
  
  PBNpc(const PBNpc& from);
  
  inline PBNpc& operator=(const PBNpc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBNpc& default_instance();
  void Swap(PBNpc* other);
  
  // implements Message ----------------------------------------------
  
  PBNpc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBNpc& from);
  void MergeFrom(const PBNpc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBOgreProperty Ogre = 1;
  inline bool has_ogre() const;
  inline void clear_ogre();
  static const int kOgreFieldNumber = 1;
  inline const ::PBOgreProperty& ogre() const;
  inline ::PBOgreProperty* mutable_ogre();
  
  // optional uint32 FuncType = 2;
  inline bool has_functype() const;
  inline void clear_functype();
  static const int kFuncTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 functype() const;
  inline void set_functype(::google::protobuf::uint32 value);
  
  // optional string Talk = 3;
  inline bool has_talk() const;
  inline void clear_talk();
  static const int kTalkFieldNumber = 3;
  inline const ::std::string& talk() const;
  inline void set_talk(const ::std::string& value);
  inline void set_talk(const char* value);
  inline void set_talk(const char* value, size_t size);
  inline ::std::string* mutable_talk();
  
  // optional uint32 StageID = 4;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageIDFieldNumber = 4;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);
  
  // optional uint32 TalkServiceID = 5;
  inline bool has_talkserviceid() const;
  inline void clear_talkserviceid();
  static const int kTalkServiceIDFieldNumber = 5;
  inline ::google::protobuf::uint32 talkserviceid() const;
  inline void set_talkserviceid(::google::protobuf::uint32 value);
  
  // optional uint32 SellServiceID = 6;
  inline bool has_sellserviceid() const;
  inline void clear_sellserviceid();
  static const int kSellServiceIDFieldNumber = 6;
  inline ::google::protobuf::uint32 sellserviceid() const;
  inline void set_sellserviceid(::google::protobuf::uint32 value);
  
  // optional uint32 MailService = 7;
  inline bool has_mailservice() const;
  inline void clear_mailservice();
  static const int kMailServiceFieldNumber = 7;
  inline ::google::protobuf::uint32 mailservice() const;
  inline void set_mailservice(::google::protobuf::uint32 value);
  
  // optional uint32 StorageService = 8;
  inline bool has_storageservice() const;
  inline void clear_storageservice();
  static const int kStorageServiceFieldNumber = 8;
  inline ::google::protobuf::uint32 storageservice() const;
  inline void set_storageservice(::google::protobuf::uint32 value);
  
  // optional uint32 UpgService = 9;
  inline bool has_upgservice() const;
  inline void clear_upgservice();
  static const int kUpgServiceFieldNumber = 9;
  inline ::google::protobuf::uint32 upgservice() const;
  inline void set_upgservice(::google::protobuf::uint32 value);
  
  // optional uint32 EqtBindService = 10;
  inline bool has_eqtbindservice() const;
  inline void clear_eqtbindservice();
  static const int kEqtBindServiceFieldNumber = 10;
  inline ::google::protobuf::uint32 eqtbindservice() const;
  inline void set_eqtbindservice(::google::protobuf::uint32 value);
  
  // optional uint32 WelfareService = 11;
  inline bool has_welfareservice() const;
  inline void clear_welfareservice();
  static const int kWelfareServiceFieldNumber = 11;
  inline ::google::protobuf::uint32 welfareservice() const;
  inline void set_welfareservice(::google::protobuf::uint32 value);
  
  // optional string Describe = 12;
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 12;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const char* value, size_t size);
  inline ::std::string* mutable_describe();
  
  // optional uint32 StudySkillID = 13;
  inline bool has_studyskillid() const;
  inline void clear_studyskillid();
  static const int kStudySkillIDFieldNumber = 13;
  inline ::google::protobuf::uint32 studyskillid() const;
  inline void set_studyskillid(::google::protobuf::uint32 value);
  
  // optional uint32 TownX = 14;
  inline bool has_townx() const;
  inline void clear_townx();
  static const int kTownXFieldNumber = 14;
  inline ::google::protobuf::uint32 townx() const;
  inline void set_townx(::google::protobuf::uint32 value);
  
  // optional uint32 TownY = 15;
  inline bool has_towny() const;
  inline void clear_towny();
  static const int kTownYFieldNumber = 15;
  inline ::google::protobuf::uint32 towny() const;
  inline void set_towny(::google::protobuf::uint32 value);
  
  // optional uint32 StorageTaskNpc = 16;
  inline bool has_storagetasknpc() const;
  inline void clear_storagetasknpc();
  static const int kStorageTaskNpcFieldNumber = 16;
  inline ::google::protobuf::uint32 storagetasknpc() const;
  inline void set_storagetasknpc(::google::protobuf::uint32 value);
  
  // optional uint32 StorageTaskID = 17;
  inline bool has_storagetaskid() const;
  inline void clear_storagetaskid();
  static const int kStorageTaskIDFieldNumber = 17;
  inline ::google::protobuf::uint32 storagetaskid() const;
  inline void set_storagetaskid(::google::protobuf::uint32 value);
  
  // optional uint32 DownLevel = 18;
  inline bool has_downlevel() const;
  inline void clear_downlevel();
  static const int kDownLevelFieldNumber = 18;
  inline ::google::protobuf::uint32 downlevel() const;
  inline void set_downlevel(::google::protobuf::uint32 value);
  
  // optional uint32 UpLevel = 19;
  inline bool has_uplevel() const;
  inline void clear_uplevel();
  static const int kUpLevelFieldNumber = 19;
  inline ::google::protobuf::uint32 uplevel() const;
  inline void set_uplevel(::google::protobuf::uint32 value);
  
  // optional uint32 DiploidTable = 20;
  inline bool has_diploidtable() const;
  inline void clear_diploidtable();
  static const int kDiploidTableFieldNumber = 20;
  inline ::google::protobuf::uint32 diploidtable() const;
  inline void set_diploidtable(::google::protobuf::uint32 value);
  
  // optional uint32 ResetPService = 21;
  inline bool has_resetpservice() const;
  inline void clear_resetpservice();
  static const int kResetPServiceFieldNumber = 21;
  inline ::google::protobuf::uint32 resetpservice() const;
  inline void set_resetpservice(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyService = 22;
  inline bool has_familyservice() const;
  inline void clear_familyservice();
  static const int kFamilyServiceFieldNumber = 22;
  inline ::google::protobuf::uint32 familyservice() const;
  inline void set_familyservice(::google::protobuf::uint32 value);
  
  // optional uint32 CorpService = 23;
  inline bool has_corpservice() const;
  inline void clear_corpservice();
  static const int kCorpServiceFieldNumber = 23;
  inline ::google::protobuf::uint32 corpservice() const;
  inline void set_corpservice(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeService = 24;
  inline bool has_changeservice() const;
  inline void clear_changeservice();
  static const int kChangeServiceFieldNumber = 24;
  inline ::google::protobuf::uint32 changeservice() const;
  inline void set_changeservice(::google::protobuf::uint32 value);
  
  // optional uint32 JudgeService = 25;
  inline bool has_judgeservice() const;
  inline void clear_judgeservice();
  static const int kJudgeServiceFieldNumber = 25;
  inline ::google::protobuf::uint32 judgeservice() const;
  inline void set_judgeservice(::google::protobuf::uint32 value);
  
  // optional uint32 ActivityService = 26;
  inline bool has_activityservice() const;
  inline void clear_activityservice();
  static const int kActivityServiceFieldNumber = 26;
  inline ::google::protobuf::uint32 activityservice() const;
  inline void set_activityservice(::google::protobuf::uint32 value);
  
  // optional uint32 ExchangeService = 27;
  inline bool has_exchangeservice() const;
  inline void clear_exchangeservice();
  static const int kExchangeServiceFieldNumber = 27;
  inline ::google::protobuf::uint32 exchangeservice() const;
  inline void set_exchangeservice(::google::protobuf::uint32 value);
  
  // optional uint32 HonorService = 28;
  inline bool has_honorservice() const;
  inline void clear_honorservice();
  static const int kHonorServiceFieldNumber = 28;
  inline ::google::protobuf::uint32 honorservice() const;
  inline void set_honorservice(::google::protobuf::uint32 value);
  
  // optional uint32 Battle = 29;
  inline bool has_battle() const;
  inline void clear_battle();
  static const int kBattleFieldNumber = 29;
  inline ::google::protobuf::uint32 battle() const;
  inline void set_battle(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkillService = 30;
  inline bool has_lifeskillservice() const;
  inline void clear_lifeskillservice();
  static const int kLifeSkillServiceFieldNumber = 30;
  inline ::google::protobuf::uint32 lifeskillservice() const;
  inline void set_lifeskillservice(::google::protobuf::uint32 value);
  
  // optional uint32 BidDay = 31;
  inline bool has_bidday() const;
  inline void clear_bidday();
  static const int kBidDayFieldNumber = 31;
  inline ::google::protobuf::uint32 bidday() const;
  inline void set_bidday(::google::protobuf::uint32 value);
  
  // optional uint32 BidHour = 32;
  inline bool has_bidhour() const;
  inline void clear_bidhour();
  static const int kBidHourFieldNumber = 32;
  inline ::google::protobuf::uint32 bidhour() const;
  inline void set_bidhour(::google::protobuf::uint32 value);
  
  // optional uint32 BidMinute = 33;
  inline bool has_bidminute() const;
  inline void clear_bidminute();
  static const int kBidMinuteFieldNumber = 33;
  inline ::google::protobuf::uint32 bidminute() const;
  inline void set_bidminute(::google::protobuf::uint32 value);
  
  // optional uint32 CoprsBattle = 34;
  inline bool has_coprsbattle() const;
  inline void clear_coprsbattle();
  static const int kCoprsBattleFieldNumber = 34;
  inline ::google::protobuf::uint32 coprsbattle() const;
  inline void set_coprsbattle(::google::protobuf::uint32 value);
  
  // optional uint32 MinBidPrice = 35;
  inline bool has_minbidprice() const;
  inline void clear_minbidprice();
  static const int kMinBidPriceFieldNumber = 35;
  inline ::google::protobuf::uint32 minbidprice() const;
  inline void set_minbidprice(::google::protobuf::uint32 value);
  
  // optional uint32 BattleCity = 36;
  inline bool has_battlecity() const;
  inline void clear_battlecity();
  static const int kBattleCityFieldNumber = 36;
  inline ::google::protobuf::uint32 battlecity() const;
  inline void set_battlecity(::google::protobuf::uint32 value);
  
  // optional uint32 MWProJudgeService = 37;
  inline bool has_mwprojudgeservice() const;
  inline void clear_mwprojudgeservice();
  static const int kMWProJudgeServiceFieldNumber = 37;
  inline ::google::protobuf::uint32 mwprojudgeservice() const;
  inline void set_mwprojudgeservice(::google::protobuf::uint32 value);
  
  // optional uint32 MWSkillJudgeService = 38;
  inline bool has_mwskilljudgeservice() const;
  inline void clear_mwskilljudgeservice();
  static const int kMWSkillJudgeServiceFieldNumber = 38;
  inline ::google::protobuf::uint32 mwskilljudgeservice() const;
  inline void set_mwskilljudgeservice(::google::protobuf::uint32 value);
  
  // optional uint32 EquipExchangeService = 39;
  inline bool has_equipexchangeservice() const;
  inline void clear_equipexchangeservice();
  static const int kEquipExchangeServiceFieldNumber = 39;
  inline ::google::protobuf::uint32 equipexchangeservice() const;
  inline void set_equipexchangeservice(::google::protobuf::uint32 value);
  
  // optional uint32 ExchangeTableID = 40;
  inline bool has_exchangetableid() const;
  inline void clear_exchangetableid();
  static const int kExchangeTableIDFieldNumber = 40;
  inline ::google::protobuf::uint32 exchangetableid() const;
  inline void set_exchangetableid(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsBidDay = 41;
  inline bool has_corpsbidday() const;
  inline void clear_corpsbidday();
  static const int kCorpsBidDayFieldNumber = 41;
  inline ::google::protobuf::uint32 corpsbidday() const;
  inline void set_corpsbidday(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsBidHour = 42;
  inline bool has_corpsbidhour() const;
  inline void clear_corpsbidhour();
  static const int kCorpsBidHourFieldNumber = 42;
  inline ::google::protobuf::uint32 corpsbidhour() const;
  inline void set_corpsbidhour(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsBidMinute = 43;
  inline bool has_corpsbidminute() const;
  inline void clear_corpsbidminute();
  static const int kCorpsBidMinuteFieldNumber = 43;
  inline ::google::protobuf::uint32 corpsbidminute() const;
  inline void set_corpsbidminute(::google::protobuf::uint32 value);
  
  // optional uint32 MWClearPointService = 44;
  inline bool has_mwclearpointservice() const;
  inline void clear_mwclearpointservice();
  static const int kMWClearPointServiceFieldNumber = 44;
  inline ::google::protobuf::uint32 mwclearpointservice() const;
  inline void set_mwclearpointservice(::google::protobuf::uint32 value);
  
  // optional uint32 MWSecondJudgeService = 45;
  inline bool has_mwsecondjudgeservice() const;
  inline void clear_mwsecondjudgeservice();
  static const int kMWSecondJudgeServiceFieldNumber = 45;
  inline ::google::protobuf::uint32 mwsecondjudgeservice() const;
  inline void set_mwsecondjudgeservice(::google::protobuf::uint32 value);
  
  // optional uint32 UnionService = 46;
  inline bool has_unionservice() const;
  inline void clear_unionservice();
  static const int kUnionServiceFieldNumber = 46;
  inline ::google::protobuf::uint32 unionservice() const;
  inline void set_unionservice(::google::protobuf::uint32 value);
  
  // optional uint32 CountryService = 47;
  inline bool has_countryservice() const;
  inline void clear_countryservice();
  static const int kCountryServiceFieldNumber = 47;
  inline ::google::protobuf::uint32 countryservice() const;
  inline void set_countryservice(::google::protobuf::uint32 value);
  
  // optional uint32 FriendService = 48;
  inline bool has_friendservice() const;
  inline void clear_friendservice();
  static const int kFriendServiceFieldNumber = 48;
  inline ::google::protobuf::uint32 friendservice() const;
  inline void set_friendservice(::google::protobuf::uint32 value);
  
  // optional uint32 CountryType = 49;
  inline bool has_countrytype() const;
  inline void clear_countrytype();
  static const int kCountryTypeFieldNumber = 49;
  inline ::google::protobuf::uint32 countrytype() const;
  inline void set_countrytype(::google::protobuf::uint32 value);
  
  // optional uint32 GoldenYBService = 50;
  inline bool has_goldenybservice() const;
  inline void clear_goldenybservice();
  static const int kGoldenYBServiceFieldNumber = 50;
  inline ::google::protobuf::uint32 goldenybservice() const;
  inline void set_goldenybservice(::google::protobuf::uint32 value);
  
  // optional uint32 ChairManTaskService = 51;
  inline bool has_chairmantaskservice() const;
  inline void clear_chairmantaskservice();
  static const int kChairManTaskServiceFieldNumber = 51;
  inline ::google::protobuf::uint32 chairmantaskservice() const;
  inline void set_chairmantaskservice(::google::protobuf::uint32 value);
  
  // optional uint32 ChairManTaskID = 52;
  inline bool has_chairmantaskid() const;
  inline void clear_chairmantaskid();
  static const int kChairManTaskIDFieldNumber = 52;
  inline ::google::protobuf::uint32 chairmantaskid() const;
  inline void set_chairmantaskid(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageService = 53;
  inline bool has_marriageservice() const;
  inline void clear_marriageservice();
  static const int kMarriageServiceFieldNumber = 53;
  inline ::google::protobuf::uint32 marriageservice() const;
  inline void set_marriageservice(::google::protobuf::uint32 value);
  
  // optional uint32 MatrixService = 54;
  inline bool has_matrixservice() const;
  inline void clear_matrixservice();
  static const int kMatrixServiceFieldNumber = 54;
  inline ::google::protobuf::uint32 matrixservice() const;
  inline void set_matrixservice(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyType = 55;
  inline bool has_familytype() const;
  inline void clear_familytype();
  static const int kFamilyTypeFieldNumber = 55;
  inline ::google::protobuf::uint32 familytype() const;
  inline void set_familytype(::google::protobuf::uint32 value);
  
  // optional uint32 StoneBuff = 56;
  inline bool has_stonebuff() const;
  inline void clear_stonebuff();
  static const int kStoneBuffFieldNumber = 56;
  inline ::google::protobuf::uint32 stonebuff() const;
  inline void set_stonebuff(::google::protobuf::uint32 value);
  
  // optional uint32 Disappear = 57;
  inline bool has_disappear() const;
  inline void clear_disappear();
  static const int kDisappearFieldNumber = 57;
  inline ::google::protobuf::uint32 disappear() const;
  inline void set_disappear(::google::protobuf::uint32 value);
  
  // optional uint32 RefreshService = 58;
  inline bool has_refreshservice() const;
  inline void clear_refreshservice();
  static const int kRefreshServiceFieldNumber = 58;
  inline ::google::protobuf::uint32 refreshservice() const;
  inline void set_refreshservice(::google::protobuf::uint32 value);
  
  // optional uint32 PedalIndex = 59;
  inline bool has_pedalindex() const;
  inline void clear_pedalindex();
  static const int kPedalIndexFieldNumber = 59;
  inline ::google::protobuf::uint32 pedalindex() const;
  inline void set_pedalindex(::google::protobuf::uint32 value);
  
  // optional uint32 DirectService = 60;
  inline bool has_directservice() const;
  inline void clear_directservice();
  static const int kDirectServiceFieldNumber = 60;
  inline ::google::protobuf::uint32 directservice() const;
  inline void set_directservice(::google::protobuf::uint32 value);
  
  // optional uint32 ExtraService = 61;
  inline bool has_extraservice() const;
  inline void clear_extraservice();
  static const int kExtraServiceFieldNumber = 61;
  inline ::google::protobuf::uint32 extraservice() const;
  inline void set_extraservice(::google::protobuf::uint32 value);
  
  // optional uint32 WarService = 62;
  inline bool has_warservice() const;
  inline void clear_warservice();
  static const int kWarServiceFieldNumber = 62;
  inline ::google::protobuf::uint32 warservice() const;
  inline void set_warservice(::google::protobuf::uint32 value);
  
  // optional uint32 WarOpType = 63;
  inline bool has_waroptype() const;
  inline void clear_waroptype();
  static const int kWarOpTypeFieldNumber = 63;
  inline ::google::protobuf::uint32 waroptype() const;
  inline void set_waroptype(::google::protobuf::uint32 value);
  
  // optional uint32 WarValue = 64;
  inline bool has_warvalue() const;
  inline void clear_warvalue();
  static const int kWarValueFieldNumber = 64;
  inline ::google::protobuf::uint32 warvalue() const;
  inline void set_warvalue(::google::protobuf::uint32 value);
  
  // optional uint32 WarCamp = 65;
  inline bool has_warcamp() const;
  inline void clear_warcamp();
  static const int kWarCampFieldNumber = 65;
  inline ::google::protobuf::uint32 warcamp() const;
  inline void set_warcamp(::google::protobuf::uint32 value);
  
  // optional uint32 EquipLevelService = 66;
  inline bool has_equiplevelservice() const;
  inline void clear_equiplevelservice();
  static const int kEquipLevelServiceFieldNumber = 66;
  inline ::google::protobuf::uint32 equiplevelservice() const;
  inline void set_equiplevelservice(::google::protobuf::uint32 value);
  
  // optional uint32 WarHonor = 67;
  inline bool has_warhonor() const;
  inline void clear_warhonor();
  static const int kWarHonorFieldNumber = 67;
  inline ::google::protobuf::uint32 warhonor() const;
  inline void set_warhonor(::google::protobuf::uint32 value);
  
  // optional uint32 FangCunService = 68;
  inline bool has_fangcunservice() const;
  inline void clear_fangcunservice();
  static const int kFangCunServiceFieldNumber = 68;
  inline ::google::protobuf::uint32 fangcunservice() const;
  inline void set_fangcunservice(::google::protobuf::uint32 value);
  
  // optional uint32 ResistTran = 69;
  inline bool has_resisttran() const;
  inline void clear_resisttran();
  static const int kResistTranFieldNumber = 69;
  inline ::google::protobuf::uint32 resisttran() const;
  inline void set_resisttran(::google::protobuf::uint32 value);
  
  // optional uint32 FBFunc = 70;
  inline bool has_fbfunc() const;
  inline void clear_fbfunc();
  static const int kFBFuncFieldNumber = 70;
  inline ::google::protobuf::uint32 fbfunc() const;
  inline void set_fbfunc(::google::protobuf::uint32 value);
  
  // optional uint32 FBFunc_Parame1 = 71;
  inline bool has_fbfunc_parame1() const;
  inline void clear_fbfunc_parame1();
  static const int kFBFuncParame1FieldNumber = 71;
  inline ::google::protobuf::uint32 fbfunc_parame1() const;
  inline void set_fbfunc_parame1(::google::protobuf::uint32 value);
  
  // optional uint32 FBFunc_Parame2 = 72;
  inline bool has_fbfunc_parame2() const;
  inline void clear_fbfunc_parame2();
  static const int kFBFuncParame2FieldNumber = 72;
  inline ::google::protobuf::uint32 fbfunc_parame2() const;
  inline void set_fbfunc_parame2(::google::protobuf::uint32 value);
  
  // optional string FBFunc_Str = 73;
  inline bool has_fbfunc_str() const;
  inline void clear_fbfunc_str();
  static const int kFBFuncStrFieldNumber = 73;
  inline const ::std::string& fbfunc_str() const;
  inline void set_fbfunc_str(const ::std::string& value);
  inline void set_fbfunc_str(const char* value);
  inline void set_fbfunc_str(const char* value, size_t size);
  inline ::std::string* mutable_fbfunc_str();
  
  // optional uint32 TaxService = 74;
  inline bool has_taxservice() const;
  inline void clear_taxservice();
  static const int kTaxServiceFieldNumber = 74;
  inline ::google::protobuf::uint32 taxservice() const;
  inline void set_taxservice(::google::protobuf::uint32 value);
  
  // optional uint32 ChangeCampService = 75;
  inline bool has_changecampservice() const;
  inline void clear_changecampservice();
  static const int kChangeCampServiceFieldNumber = 75;
  inline ::google::protobuf::uint32 changecampservice() const;
  inline void set_changecampservice(::google::protobuf::uint32 value);
  
  // optional uint32 WeakProtectService = 76;
  inline bool has_weakprotectservice() const;
  inline void clear_weakprotectservice();
  static const int kWeakProtectServiceFieldNumber = 76;
  inline ::google::protobuf::uint32 weakprotectservice() const;
  inline void set_weakprotectservice(::google::protobuf::uint32 value);
  
  // optional uint32 YaoQianShuRank = 77;
  inline bool has_yaoqianshurank() const;
  inline void clear_yaoqianshurank();
  static const int kYaoQianShuRankFieldNumber = 77;
  inline ::google::protobuf::uint32 yaoqianshurank() const;
  inline void set_yaoqianshurank(::google::protobuf::uint32 value);
  
  // optional uint32 Handin = 78;
  inline bool has_handin() const;
  inline void clear_handin();
  static const int kHandinFieldNumber = 78;
  inline ::google::protobuf::uint32 handin() const;
  inline void set_handin(::google::protobuf::uint32 value);
  
  // optional uint32 SpecialEvent = 79;
  inline bool has_specialevent() const;
  inline void clear_specialevent();
  static const int kSpecialEventFieldNumber = 79;
  inline ::google::protobuf::uint32 specialevent() const;
  inline void set_specialevent(::google::protobuf::uint32 value);
  
  // optional uint32 YaoQianInfo = 80;
  inline bool has_yaoqianinfo() const;
  inline void clear_yaoqianinfo();
  static const int kYaoQianInfoFieldNumber = 80;
  inline ::google::protobuf::uint32 yaoqianinfo() const;
  inline void set_yaoqianinfo(::google::protobuf::uint32 value);
  
  // optional uint32 TreasureBowl = 81;
  inline bool has_treasurebowl() const;
  inline void clear_treasurebowl();
  static const int kTreasureBowlFieldNumber = 81;
  inline ::google::protobuf::uint32 treasurebowl() const;
  inline void set_treasurebowl(::google::protobuf::uint32 value);
  
  // optional uint32 MWDecomposeService = 82;
  inline bool has_mwdecomposeservice() const;
  inline void clear_mwdecomposeservice();
  static const int kMWDecomposeServiceFieldNumber = 82;
  inline ::google::protobuf::uint32 mwdecomposeservice() const;
  inline void set_mwdecomposeservice(::google::protobuf::uint32 value);
  
  // optional uint32 MWImprintService = 83;
  inline bool has_mwimprintservice() const;
  inline void clear_mwimprintservice();
  static const int kMWImprintServiceFieldNumber = 83;
  inline ::google::protobuf::uint32 mwimprintservice() const;
  inline void set_mwimprintservice(::google::protobuf::uint32 value);
  
  // optional uint32 MWUpdateService = 84;
  inline bool has_mwupdateservice() const;
  inline void clear_mwupdateservice();
  static const int kMWUpdateServiceFieldNumber = 84;
  inline ::google::protobuf::uint32 mwupdateservice() const;
  inline void set_mwupdateservice(::google::protobuf::uint32 value);
  
  // optional uint32 MWUpdateExService = 85;
  inline bool has_mwupdateexservice() const;
  inline void clear_mwupdateexservice();
  static const int kMWUpdateExServiceFieldNumber = 85;
  inline ::google::protobuf::uint32 mwupdateexservice() const;
  inline void set_mwupdateexservice(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsBidStartDay = 86;
  inline bool has_corpsbidstartday() const;
  inline void clear_corpsbidstartday();
  static const int kCorpsBidStartDayFieldNumber = 86;
  inline ::google::protobuf::uint32 corpsbidstartday() const;
  inline void set_corpsbidstartday(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsBidStartHour = 87;
  inline bool has_corpsbidstarthour() const;
  inline void clear_corpsbidstarthour();
  static const int kCorpsBidStartHourFieldNumber = 87;
  inline ::google::protobuf::uint32 corpsbidstarthour() const;
  inline void set_corpsbidstarthour(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsBidStartMinute = 88;
  inline bool has_corpsbidstartminute() const;
  inline void clear_corpsbidstartminute();
  static const int kCorpsBidStartMinuteFieldNumber = 88;
  inline ::google::protobuf::uint32 corpsbidstartminute() const;
  inline void set_corpsbidstartminute(::google::protobuf::uint32 value);
  
  // optional uint32 LastOneService = 89;
  inline bool has_lastoneservice() const;
  inline void clear_lastoneservice();
  static const int kLastOneServiceFieldNumber = 89;
  inline ::google::protobuf::uint32 lastoneservice() const;
  inline void set_lastoneservice(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyBidStartHour = 90;
  inline bool has_familybidstarthour() const;
  inline void clear_familybidstarthour();
  static const int kFamilyBidStartHourFieldNumber = 90;
  inline ::google::protobuf::uint32 familybidstarthour() const;
  inline void set_familybidstarthour(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyBidStartMinute = 91;
  inline bool has_familybidstartminute() const;
  inline void clear_familybidstartminute();
  static const int kFamilyBidStartMinuteFieldNumber = 91;
  inline ::google::protobuf::uint32 familybidstartminute() const;
  inline void set_familybidstartminute(::google::protobuf::uint32 value);
  
  // optional uint32 MWQLComposeService = 92;
  inline bool has_mwqlcomposeservice() const;
  inline void clear_mwqlcomposeservice();
  static const int kMWQLComposeServiceFieldNumber = 92;
  inline ::google::protobuf::uint32 mwqlcomposeservice() const;
  inline void set_mwqlcomposeservice(::google::protobuf::uint32 value);
  
  // optional uint32 RandomTeleService = 93;
  inline bool has_randomteleservice() const;
  inline void clear_randomteleservice();
  static const int kRandomTeleServiceFieldNumber = 93;
  inline ::google::protobuf::uint32 randomteleservice() const;
  inline void set_randomteleservice(::google::protobuf::uint32 value);
  
  // optional uint32 IntroduceMapID = 94;
  inline bool has_introducemapid() const;
  inline void clear_introducemapid();
  static const int kIntroduceMapIDFieldNumber = 94;
  inline ::google::protobuf::uint32 introducemapid() const;
  inline void set_introducemapid(::google::protobuf::uint32 value);
  
  // optional uint32 ShiTuService = 95;
  inline bool has_shituservice() const;
  inline void clear_shituservice();
  static const int kShiTuServiceFieldNumber = 95;
  inline ::google::protobuf::uint32 shituservice() const;
  inline void set_shituservice(::google::protobuf::uint32 value);
  
  // optional uint32 SwornService = 96;
  inline bool has_swornservice() const;
  inline void clear_swornservice();
  static const int kSwornServiceFieldNumber = 96;
  inline ::google::protobuf::uint32 swornservice() const;
  inline void set_swornservice(::google::protobuf::uint32 value);
  
  // optional uint32 GlobalWarService = 97;
  inline bool has_globalwarservice() const;
  inline void clear_globalwarservice();
  static const int kGlobalWarServiceFieldNumber = 97;
  inline ::google::protobuf::uint32 globalwarservice() const;
  inline void set_globalwarservice(::google::protobuf::uint32 value);
  
  // optional uint32 SuperEquipExchange = 98;
  inline bool has_superequipexchange() const;
  inline void clear_superequipexchange();
  static const int kSuperEquipExchangeFieldNumber = 98;
  inline ::google::protobuf::uint32 superequipexchange() const;
  inline void set_superequipexchange(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBOgreProperty* ogre_;
  ::google::protobuf::uint32 functype_;
  ::std::string* talk_;
  static const ::std::string _default_talk_;
  ::google::protobuf::uint32 stageid_;
  ::google::protobuf::uint32 talkserviceid_;
  ::google::protobuf::uint32 sellserviceid_;
  ::google::protobuf::uint32 mailservice_;
  ::google::protobuf::uint32 storageservice_;
  ::google::protobuf::uint32 upgservice_;
  ::google::protobuf::uint32 eqtbindservice_;
  ::google::protobuf::uint32 welfareservice_;
  ::std::string* describe_;
  static const ::std::string _default_describe_;
  ::google::protobuf::uint32 studyskillid_;
  ::google::protobuf::uint32 townx_;
  ::google::protobuf::uint32 towny_;
  ::google::protobuf::uint32 storagetasknpc_;
  ::google::protobuf::uint32 storagetaskid_;
  ::google::protobuf::uint32 downlevel_;
  ::google::protobuf::uint32 uplevel_;
  ::google::protobuf::uint32 diploidtable_;
  ::google::protobuf::uint32 resetpservice_;
  ::google::protobuf::uint32 familyservice_;
  ::google::protobuf::uint32 corpservice_;
  ::google::protobuf::uint32 changeservice_;
  ::google::protobuf::uint32 judgeservice_;
  ::google::protobuf::uint32 activityservice_;
  ::google::protobuf::uint32 exchangeservice_;
  ::google::protobuf::uint32 honorservice_;
  ::google::protobuf::uint32 battle_;
  ::google::protobuf::uint32 lifeskillservice_;
  ::google::protobuf::uint32 bidday_;
  ::google::protobuf::uint32 bidhour_;
  ::google::protobuf::uint32 bidminute_;
  ::google::protobuf::uint32 coprsbattle_;
  ::google::protobuf::uint32 minbidprice_;
  ::google::protobuf::uint32 battlecity_;
  ::google::protobuf::uint32 mwprojudgeservice_;
  ::google::protobuf::uint32 mwskilljudgeservice_;
  ::google::protobuf::uint32 equipexchangeservice_;
  ::google::protobuf::uint32 exchangetableid_;
  ::google::protobuf::uint32 corpsbidday_;
  ::google::protobuf::uint32 corpsbidhour_;
  ::google::protobuf::uint32 corpsbidminute_;
  ::google::protobuf::uint32 mwclearpointservice_;
  ::google::protobuf::uint32 mwsecondjudgeservice_;
  ::google::protobuf::uint32 unionservice_;
  ::google::protobuf::uint32 countryservice_;
  ::google::protobuf::uint32 friendservice_;
  ::google::protobuf::uint32 countrytype_;
  ::google::protobuf::uint32 goldenybservice_;
  ::google::protobuf::uint32 chairmantaskservice_;
  ::google::protobuf::uint32 chairmantaskid_;
  ::google::protobuf::uint32 marriageservice_;
  ::google::protobuf::uint32 matrixservice_;
  ::google::protobuf::uint32 familytype_;
  ::google::protobuf::uint32 stonebuff_;
  ::google::protobuf::uint32 disappear_;
  ::google::protobuf::uint32 refreshservice_;
  ::google::protobuf::uint32 pedalindex_;
  ::google::protobuf::uint32 directservice_;
  ::google::protobuf::uint32 extraservice_;
  ::google::protobuf::uint32 warservice_;
  ::google::protobuf::uint32 waroptype_;
  ::google::protobuf::uint32 warvalue_;
  ::google::protobuf::uint32 warcamp_;
  ::google::protobuf::uint32 equiplevelservice_;
  ::google::protobuf::uint32 warhonor_;
  ::google::protobuf::uint32 fangcunservice_;
  ::google::protobuf::uint32 resisttran_;
  ::google::protobuf::uint32 fbfunc_;
  ::google::protobuf::uint32 fbfunc_parame1_;
  ::google::protobuf::uint32 fbfunc_parame2_;
  ::std::string* fbfunc_str_;
  static const ::std::string _default_fbfunc_str_;
  ::google::protobuf::uint32 taxservice_;
  ::google::protobuf::uint32 changecampservice_;
  ::google::protobuf::uint32 weakprotectservice_;
  ::google::protobuf::uint32 yaoqianshurank_;
  ::google::protobuf::uint32 handin_;
  ::google::protobuf::uint32 specialevent_;
  ::google::protobuf::uint32 yaoqianinfo_;
  ::google::protobuf::uint32 treasurebowl_;
  ::google::protobuf::uint32 mwdecomposeservice_;
  ::google::protobuf::uint32 mwimprintservice_;
  ::google::protobuf::uint32 mwupdateservice_;
  ::google::protobuf::uint32 mwupdateexservice_;
  ::google::protobuf::uint32 corpsbidstartday_;
  ::google::protobuf::uint32 corpsbidstarthour_;
  ::google::protobuf::uint32 corpsbidstartminute_;
  ::google::protobuf::uint32 lastoneservice_;
  ::google::protobuf::uint32 familybidstarthour_;
  ::google::protobuf::uint32 familybidstartminute_;
  ::google::protobuf::uint32 mwqlcomposeservice_;
  ::google::protobuf::uint32 randomteleservice_;
  ::google::protobuf::uint32 introducemapid_;
  ::google::protobuf::uint32 shituservice_;
  ::google::protobuf::uint32 swornservice_;
  ::google::protobuf::uint32 globalwarservice_;
  ::google::protobuf::uint32 superequipexchange_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(98 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBNpc* default_instance_;
};
// -------------------------------------------------------------------

class PBSellItem : public ::google::protobuf::Message {
 public:
  PBSellItem();
  virtual ~PBSellItem();
  
  PBSellItem(const PBSellItem& from);
  
  inline PBSellItem& operator=(const PBSellItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSellItem& default_instance();
  void Swap(PBSellItem* other);
  
  // implements Message ----------------------------------------------
  
  PBSellItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSellItem& from);
  void MergeFrom(const PBSellItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string PageName = 1;
  inline bool has_pagename() const;
  inline void clear_pagename();
  static const int kPageNameFieldNumber = 1;
  inline const ::std::string& pagename() const;
  inline void set_pagename(const ::std::string& value);
  inline void set_pagename(const char* value);
  inline void set_pagename(const char* value, size_t size);
  inline ::std::string* mutable_pagename();
  
  // repeated uint32 ItemID = 2;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemid();
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemGoldPrice = 3;
  inline int itemgoldprice_size() const;
  inline void clear_itemgoldprice();
  static const int kItemGoldPriceFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemgoldprice() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemgoldprice();
  inline ::google::protobuf::uint32 itemgoldprice(int index) const;
  inline void set_itemgoldprice(int index, ::google::protobuf::uint32 value);
  inline void add_itemgoldprice(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemNum = 4;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemnum();
  inline ::google::protobuf::uint32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::uint32 value);
  inline void add_itemnum(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemRefreshDay = 5;
  inline int itemrefreshday_size() const;
  inline void clear_itemrefreshday();
  static const int kItemRefreshDayFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemrefreshday() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemrefreshday();
  inline ::google::protobuf::uint32 itemrefreshday(int index) const;
  inline void set_itemrefreshday(int index, ::google::protobuf::uint32 value);
  inline void add_itemrefreshday(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* pagename_;
  static const ::std::string _default_pagename_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemgoldprice_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemrefreshday_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSellItem* default_instance_;
};
// -------------------------------------------------------------------

class PBSellTable : public ::google::protobuf::Message {
 public:
  PBSellTable();
  virtual ~PBSellTable();
  
  PBSellTable(const PBSellTable& from);
  
  inline PBSellTable& operator=(const PBSellTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSellTable& default_instance();
  void Swap(PBSellTable* other);
  
  // implements Message ----------------------------------------------
  
  PBSellTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSellTable& from);
  void MergeFrom(const PBSellTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBSellItem Item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSellItem >& item() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSellItem >* mutable_item();
  inline const ::PBSellItem& item(int index) const;
  inline ::PBSellItem* mutable_item(int index);
  inline ::PBSellItem* add_item();
  
  // optional uint32 SellTableType = 3;
  inline bool has_selltabletype() const;
  inline void clear_selltabletype();
  static const int kSellTableTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 selltabletype() const;
  inline void set_selltabletype(::google::protobuf::uint32 value);
  
  // optional uint32 WarCityMapID = 4;
  inline bool has_warcitymapid() const;
  inline void clear_warcitymapid();
  static const int kWarCityMapIDFieldNumber = 4;
  inline ::google::protobuf::uint32 warcitymapid() const;
  inline void set_warcitymapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBSellItem > item_;
  ::google::protobuf::uint32 selltabletype_;
  ::google::protobuf::uint32 warcitymapid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSellTable* default_instance_;
};
// -------------------------------------------------------------------

class PBTotalDrop : public ::google::protobuf::Message {
 public:
  PBTotalDrop();
  virtual ~PBTotalDrop();
  
  PBTotalDrop(const PBTotalDrop& from);
  
  inline PBTotalDrop& operator=(const PBTotalDrop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTotalDrop& default_instance();
  void Swap(PBTotalDrop* other);
  
  // implements Message ----------------------------------------------
  
  PBTotalDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTotalDrop& from);
  void MergeFrom(const PBTotalDrop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 DropTableID = 2;
  inline int droptableid_size() const;
  inline void clear_droptableid();
  static const int kDropTableIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& droptableid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_droptableid();
  inline ::google::protobuf::uint32 droptableid(int index) const;
  inline void set_droptableid(int index, ::google::protobuf::uint32 value);
  inline void add_droptableid(::google::protobuf::uint32 value);
  
  // repeated uint32 DropCount = 3;
  inline int dropcount_size() const;
  inline void clear_dropcount();
  static const int kDropCountFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& dropcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_dropcount();
  inline ::google::protobuf::uint32 dropcount(int index) const;
  inline void set_dropcount(int index, ::google::protobuf::uint32 value);
  inline void add_dropcount(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > droptableid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dropcount_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTotalDrop* default_instance_;
};
// -------------------------------------------------------------------

class PBDropItem : public ::google::protobuf::Message {
 public:
  PBDropItem();
  virtual ~PBDropItem();
  
  PBDropItem(const PBDropItem& from);
  
  inline PBDropItem& operator=(const PBDropItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDropItem& default_instance();
  void Swap(PBDropItem* other);
  
  // implements Message ----------------------------------------------
  
  PBDropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDropItem& from);
  void MergeFrom(const PBDropItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 DropItemID = 1;
  inline bool has_dropitemid() const;
  inline void clear_dropitemid();
  static const int kDropItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dropitemid() const;
  inline void set_dropitemid(::google::protobuf::uint32 value);
  
  // optional uint32 DropProbability = 2;
  inline bool has_dropprobability() const;
  inline void clear_dropprobability();
  static const int kDropProbabilityFieldNumber = 2;
  inline ::google::protobuf::uint32 dropprobability() const;
  inline void set_dropprobability(::google::protobuf::uint32 value);
  
  // optional uint32 LevelProbablity = 3;
  inline bool has_levelprobablity() const;
  inline void clear_levelprobablity();
  static const int kLevelProbablityFieldNumber = 3;
  inline ::google::protobuf::uint32 levelprobablity() const;
  inline void set_levelprobablity(::google::protobuf::uint32 value);
  
  // optional uint32 Notify = 4;
  inline bool has_notify() const;
  inline void clear_notify();
  static const int kNotifyFieldNumber = 4;
  inline ::google::protobuf::uint32 notify() const;
  inline void set_notify(::google::protobuf::uint32 value);
  
  // optional uint32 Special = 5;
  inline bool has_special() const;
  inline void clear_special();
  static const int kSpecialFieldNumber = 5;
  inline ::google::protobuf::uint32 special() const;
  inline void set_special(::google::protobuf::uint32 value);
  
  // optional uint32 Show = 6;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 6;
  inline ::google::protobuf::uint32 show() const;
  inline void set_show(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 dropitemid_;
  ::google::protobuf::uint32 dropprobability_;
  ::google::protobuf::uint32 levelprobablity_;
  ::google::protobuf::uint32 notify_;
  ::google::protobuf::uint32 special_;
  ::google::protobuf::uint32 show_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDropItem* default_instance_;
};
// -------------------------------------------------------------------

class PBDropTable : public ::google::protobuf::Message {
 public:
  PBDropTable();
  virtual ~PBDropTable();
  
  PBDropTable(const PBDropTable& from);
  
  inline PBDropTable& operator=(const PBDropTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDropTable& default_instance();
  void Swap(PBDropTable* other);
  
  // implements Message ----------------------------------------------
  
  PBDropTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDropTable& from);
  void MergeFrom(const PBDropTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 DropTurn = 2;
  inline bool has_dropturn() const;
  inline void clear_dropturn();
  static const int kDropTurnFieldNumber = 2;
  inline ::google::protobuf::uint32 dropturn() const;
  inline void set_dropturn(::google::protobuf::uint32 value);
  
  // repeated uint32 DropNumberRate = 3;
  inline int dropnumberrate_size() const;
  inline void clear_dropnumberrate();
  static const int kDropNumberRateFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& dropnumberrate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_dropnumberrate();
  inline ::google::protobuf::uint32 dropnumberrate(int index) const;
  inline void set_dropnumberrate(int index, ::google::protobuf::uint32 value);
  inline void add_dropnumberrate(::google::protobuf::uint32 value);
  
  // repeated .PBDropItem DropItem = 4;
  inline int dropitem_size() const;
  inline void clear_dropitem();
  static const int kDropItemFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDropItem >& dropitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDropItem >* mutable_dropitem();
  inline const ::PBDropItem& dropitem(int index) const;
  inline ::PBDropItem* mutable_dropitem(int index);
  inline ::PBDropItem* add_dropitem();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 dropturn_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dropnumberrate_;
  ::google::protobuf::RepeatedPtrField< ::PBDropItem > dropitem_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDropTable* default_instance_;
};
// -------------------------------------------------------------------

class PBNPCCollect : public ::google::protobuf::Message {
 public:
  PBNPCCollect();
  virtual ~PBNPCCollect();
  
  PBNPCCollect(const PBNPCCollect& from);
  
  inline PBNPCCollect& operator=(const PBNPCCollect& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBNPCCollect& default_instance();
  void Swap(PBNPCCollect* other);
  
  // implements Message ----------------------------------------------
  
  PBNPCCollect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBNPCCollect& from);
  void MergeFrom(const PBNPCCollect& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string ModelName = 3;
  inline bool has_modelname() const;
  inline void clear_modelname();
  static const int kModelNameFieldNumber = 3;
  inline const ::std::string& modelname() const;
  inline void set_modelname(const ::std::string& value);
  inline void set_modelname(const char* value);
  inline void set_modelname(const char* value, size_t size);
  inline ::std::string* mutable_modelname();
  
  // repeated uint32 TaskID = 4;
  inline int taskid_size() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& taskid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_taskid();
  inline ::google::protobuf::uint32 taskid(int index) const;
  inline void set_taskid(int index, ::google::protobuf::uint32 value);
  inline void add_taskid(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemID = 5;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemid();
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 DropID = 6;
  inline bool has_dropid() const;
  inline void clear_dropid();
  static const int kDropIDFieldNumber = 6;
  inline ::google::protobuf::uint32 dropid() const;
  inline void set_dropid(::google::protobuf::uint32 value);
  
  // optional uint32 Number = 7;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 7;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
  // optional uint32 SkillType = 8;
  inline bool has_skilltype() const;
  inline void clear_skilltype();
  static const int kSkillTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 skilltype() const;
  inline void set_skilltype(::google::protobuf::uint32 value);
  
  // optional uint32 SkillKind = 9;
  inline bool has_skillkind() const;
  inline void clear_skillkind();
  static const int kSkillKindFieldNumber = 9;
  inline ::google::protobuf::uint32 skillkind() const;
  inline void set_skillkind(::google::protobuf::uint32 value);
  
  // optional uint32 CollectDegree = 10;
  inline bool has_collectdegree() const;
  inline void clear_collectdegree();
  static const int kCollectDegreeFieldNumber = 10;
  inline ::google::protobuf::uint32 collectdegree() const;
  inline void set_collectdegree(::google::protobuf::uint32 value);
  
  // repeated uint32 value = 11;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_value();
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  
  // repeated uint32 Probality = 12;
  inline int probality_size() const;
  inline void clear_probality();
  static const int kProbalityFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& probality() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_probality();
  inline ::google::protobuf::uint32 probality(int index) const;
  inline void set_probality(int index, ::google::protobuf::uint32 value);
  inline void add_probality(::google::protobuf::uint32 value);
  
  // repeated uint32 DegreeValue = 13;
  inline int degreevalue_size() const;
  inline void clear_degreevalue();
  static const int kDegreeValueFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& degreevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_degreevalue();
  inline ::google::protobuf::uint32 degreevalue(int index) const;
  inline void set_degreevalue(int index, ::google::protobuf::uint32 value);
  inline void add_degreevalue(::google::protobuf::uint32 value);
  
  // optional uint32 apcost = 14;
  inline bool has_apcost() const;
  inline void clear_apcost();
  static const int kApcostFieldNumber = 14;
  inline ::google::protobuf::uint32 apcost() const;
  inline void set_apcost(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemNum = 15;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemnum();
  inline ::google::protobuf::uint32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::uint32 value);
  inline void add_itemnum(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemProbality = 16;
  inline int itemprobality_size() const;
  inline void clear_itemprobality();
  static const int kItemProbalityFieldNumber = 16;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemprobality() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemprobality();
  inline ::google::protobuf::uint32 itemprobality(int index) const;
  inline void set_itemprobality(int index, ::google::protobuf::uint32 value);
  inline void add_itemprobality(::google::protobuf::uint32 value);
  
  // optional uint32 CollectLevel = 17;
  inline bool has_collectlevel() const;
  inline void clear_collectlevel();
  static const int kCollectLevelFieldNumber = 17;
  inline ::google::protobuf::uint32 collectlevel() const;
  inline void set_collectlevel(::google::protobuf::uint32 value);
  
  // repeated uint32 ExtraItemNum = 18;
  inline int extraitemnum_size() const;
  inline void clear_extraitemnum();
  static const int kExtraItemNumFieldNumber = 18;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& extraitemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_extraitemnum();
  inline ::google::protobuf::uint32 extraitemnum(int index) const;
  inline void set_extraitemnum(int index, ::google::protobuf::uint32 value);
  inline void add_extraitemnum(::google::protobuf::uint32 value);
  
  // repeated uint32 ExtraItemProbality = 19;
  inline int extraitemprobality_size() const;
  inline void clear_extraitemprobality();
  static const int kExtraItemProbalityFieldNumber = 19;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& extraitemprobality() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_extraitemprobality();
  inline ::google::protobuf::uint32 extraitemprobality(int index) const;
  inline void set_extraitemprobality(int index, ::google::protobuf::uint32 value);
  inline void add_extraitemprobality(::google::protobuf::uint32 value);
  
  // optional uint32 CollectTaskType = 20;
  inline bool has_collecttasktype() const;
  inline void clear_collecttasktype();
  static const int kCollectTaskTypeFieldNumber = 20;
  inline ::google::protobuf::uint32 collecttasktype() const;
  inline void set_collecttasktype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* modelname_;
  static const ::std::string _default_modelname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > taskid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  ::google::protobuf::uint32 dropid_;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::uint32 skilltype_;
  ::google::protobuf::uint32 skillkind_;
  ::google::protobuf::uint32 collectdegree_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > probality_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > degreevalue_;
  ::google::protobuf::uint32 apcost_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemprobality_;
  ::google::protobuf::uint32 collectlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > extraitemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > extraitemprobality_;
  ::google::protobuf::uint32 collecttasktype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBNPCCollect* default_instance_;
};
// -------------------------------------------------------------------

class PBOgreProperty : public ::google::protobuf::Message {
 public:
  PBOgreProperty();
  virtual ~PBOgreProperty();
  
  PBOgreProperty(const PBOgreProperty& from);
  
  inline PBOgreProperty& operator=(const PBOgreProperty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOgreProperty& default_instance();
  void Swap(PBOgreProperty* other);
  
  // implements Message ----------------------------------------------
  
  PBOgreProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOgreProperty& from);
  void MergeFrom(const PBOgreProperty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string ModelName = 3;
  inline bool has_modelname() const;
  inline void clear_modelname();
  static const int kModelNameFieldNumber = 3;
  inline const ::std::string& modelname() const;
  inline void set_modelname(const ::std::string& value);
  inline void set_modelname(const char* value);
  inline void set_modelname(const char* value, size_t size);
  inline ::std::string* mutable_modelname();
  
  // optional uint32 OgreType = 4;
  inline bool has_ogretype() const;
  inline void clear_ogretype();
  static const int kOgreTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 ogretype() const;
  inline void set_ogretype(::google::protobuf::uint32 value);
  
  // optional uint32 DropType = 5;
  inline bool has_droptype() const;
  inline void clear_droptype();
  static const int kDropTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 droptype() const;
  inline void set_droptype(::google::protobuf::uint32 value);
  
  // optional uint32 StrategyID = 6;
  inline bool has_strategyid() const;
  inline void clear_strategyid();
  static const int kStrategyIDFieldNumber = 6;
  inline ::google::protobuf::uint32 strategyid() const;
  inline void set_strategyid(::google::protobuf::uint32 value);
  
  // optional uint32 DropID = 7;
  inline bool has_dropid() const;
  inline void clear_dropid();
  static const int kDropIDFieldNumber = 7;
  inline ::google::protobuf::uint32 dropid() const;
  inline void set_dropid(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 DisplayeLevel = 9;
  inline bool has_displayelevel() const;
  inline void clear_displayelevel();
  static const int kDisplayeLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 displayelevel() const;
  inline void set_displayelevel(::google::protobuf::uint32 value);
  
  // optional uint32 AttackRate = 10;
  inline bool has_attackrate() const;
  inline void clear_attackrate();
  static const int kAttackRateFieldNumber = 10;
  inline ::google::protobuf::uint32 attackrate() const;
  inline void set_attackrate(::google::protobuf::uint32 value);
  
  // optional uint32 AttackTime = 11;
  inline bool has_attacktime() const;
  inline void clear_attacktime();
  static const int kAttackTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 attacktime() const;
  inline void set_attacktime(::google::protobuf::uint32 value);
  
  // optional uint32 HPRSpeed = 12;
  inline bool has_hprspeed() const;
  inline void clear_hprspeed();
  static const int kHPRSpeedFieldNumber = 12;
  inline ::google::protobuf::uint32 hprspeed() const;
  inline void set_hprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 MPRSpeeds = 13;
  inline bool has_mprspeeds() const;
  inline void clear_mprspeeds();
  static const int kMPRSpeedsFieldNumber = 13;
  inline ::google::protobuf::uint32 mprspeeds() const;
  inline void set_mprspeeds(::google::protobuf::uint32 value);
  
  // optional uint32 RunSpeed = 14;
  inline bool has_runspeed() const;
  inline void clear_runspeed();
  static const int kRunSpeedFieldNumber = 14;
  inline ::google::protobuf::uint32 runspeed() const;
  inline void set_runspeed(::google::protobuf::uint32 value);
  
  // optional uint32 InitLevel = 15;
  inline bool has_initlevel() const;
  inline void clear_initlevel();
  static const int kInitLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 initlevel() const;
  inline void set_initlevel(::google::protobuf::uint32 value);
  
  // optional uint32 HP = 16;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHPFieldNumber = 16;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
  // optional uint32 MP = 17;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMPFieldNumber = 17;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);
  
  // optional uint32 PAttack = 18;
  inline bool has_pattack() const;
  inline void clear_pattack();
  static const int kPAttackFieldNumber = 18;
  inline ::google::protobuf::uint32 pattack() const;
  inline void set_pattack(::google::protobuf::uint32 value);
  
  // optional uint32 PDefence = 19;
  inline bool has_pdefence() const;
  inline void clear_pdefence();
  static const int kPDefenceFieldNumber = 19;
  inline ::google::protobuf::uint32 pdefence() const;
  inline void set_pdefence(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackRange = 20;
  inline bool has_pattackrange() const;
  inline void clear_pattackrange();
  static const int kPAttackRangeFieldNumber = 20;
  inline ::google::protobuf::uint32 pattackrange() const;
  inline void set_pattackrange(::google::protobuf::uint32 value);
  
  // optional uint32 PReducePer = 21;
  inline bool has_preduceper() const;
  inline void clear_preduceper();
  static const int kPReducePerFieldNumber = 21;
  inline ::google::protobuf::uint32 preduceper() const;
  inline void set_preduceper(::google::protobuf::uint32 value);
  
  // optional uint32 MAttack = 22;
  inline bool has_mattack() const;
  inline void clear_mattack();
  static const int kMAttackFieldNumber = 22;
  inline ::google::protobuf::uint32 mattack() const;
  inline void set_mattack(::google::protobuf::uint32 value);
  
  // optional uint32 MDefence = 23;
  inline bool has_mdefence() const;
  inline void clear_mdefence();
  static const int kMDefenceFieldNumber = 23;
  inline ::google::protobuf::uint32 mdefence() const;
  inline void set_mdefence(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackRange = 24;
  inline bool has_mattackrange() const;
  inline void clear_mattackrange();
  static const int kMAttackRangeFieldNumber = 24;
  inline ::google::protobuf::uint32 mattackrange() const;
  inline void set_mattackrange(::google::protobuf::uint32 value);
  
  // optional uint32 MReducePer = 25;
  inline bool has_mreduceper() const;
  inline void clear_mreduceper();
  static const int kMReducePerFieldNumber = 25;
  inline ::google::protobuf::uint32 mreduceper() const;
  inline void set_mreduceper(::google::protobuf::uint32 value);
  
  // optional uint32 DeathRate = 26;
  inline bool has_deathrate() const;
  inline void clear_deathrate();
  static const int kDeathRateFieldNumber = 26;
  inline ::google::protobuf::uint32 deathrate() const;
  inline void set_deathrate(::google::protobuf::uint32 value);
  
  // optional uint32 DeathValue = 27;
  inline bool has_deathvalue() const;
  inline void clear_deathvalue();
  static const int kDeathValueFieldNumber = 27;
  inline ::google::protobuf::uint32 deathvalue() const;
  inline void set_deathvalue(::google::protobuf::uint32 value);
  
  // optional uint32 DeathDefense = 28;
  inline bool has_deathdefense() const;
  inline void clear_deathdefense();
  static const int kDeathDefenseFieldNumber = 28;
  inline ::google::protobuf::uint32 deathdefense() const;
  inline void set_deathdefense(::google::protobuf::uint32 value);
  
  // optional uint32 NormalHitrate = 29;
  inline bool has_normalhitrate() const;
  inline void clear_normalhitrate();
  static const int kNormalHitrateFieldNumber = 29;
  inline ::google::protobuf::uint32 normalhitrate() const;
  inline void set_normalhitrate(::google::protobuf::uint32 value);
  
  // optional uint32 NormalDuck = 30;
  inline bool has_normalduck() const;
  inline void clear_normalduck();
  static const int kNormalDuckFieldNumber = 30;
  inline ::google::protobuf::uint32 normalduck() const;
  inline void set_normalduck(::google::protobuf::uint32 value);
  
  // optional uint32 Recover = 31;
  inline bool has_recover() const;
  inline void clear_recover();
  static const int kRecoverFieldNumber = 31;
  inline ::google::protobuf::uint32 recover() const;
  inline void set_recover(::google::protobuf::uint32 value);
  
  // optional uint32 IgnoreDuck = 32;
  inline bool has_ignoreduck() const;
  inline void clear_ignoreduck();
  static const int kIgnoreDuckFieldNumber = 32;
  inline ::google::protobuf::uint32 ignoreduck() const;
  inline void set_ignoreduck(::google::protobuf::uint32 value);
  
  // repeated uint32 ResDef = 33;
  inline int resdef_size() const;
  inline void clear_resdef();
  static const int kResDefFieldNumber = 33;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resdef() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resdef();
  inline ::google::protobuf::uint32 resdef(int index) const;
  inline void set_resdef(int index, ::google::protobuf::uint32 value);
  inline void add_resdef(::google::protobuf::uint32 value);
  
  // repeated uint32 ResAtt = 34;
  inline int resatt_size() const;
  inline void clear_resatt();
  static const int kResAttFieldNumber = 34;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resatt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resatt();
  inline ::google::protobuf::uint32 resatt(int index) const;
  inline void set_resatt(int index, ::google::protobuf::uint32 value);
  inline void add_resatt(::google::protobuf::uint32 value);
  
  // optional uint32 NeedDelay = 35;
  inline bool has_needdelay() const;
  inline void clear_needdelay();
  static const int kNeedDelayFieldNumber = 35;
  inline ::google::protobuf::uint32 needdelay() const;
  inline void set_needdelay(::google::protobuf::uint32 value);
  
  // optional uint32 PatrolType = 36;
  inline bool has_patroltype() const;
  inline void clear_patroltype();
  static const int kPatrolTypeFieldNumber = 36;
  inline ::google::protobuf::uint32 patroltype() const;
  inline void set_patroltype(::google::protobuf::uint32 value);
  
  // optional uint32 IsInitiative = 37;
  inline bool has_isinitiative() const;
  inline void clear_isinitiative();
  static const int kIsInitiativeFieldNumber = 37;
  inline ::google::protobuf::uint32 isinitiative() const;
  inline void set_isinitiative(::google::protobuf::uint32 value);
  
  // optional uint32 WalkDistance = 38;
  inline bool has_walkdistance() const;
  inline void clear_walkdistance();
  static const int kWalkDistanceFieldNumber = 38;
  inline ::google::protobuf::uint32 walkdistance() const;
  inline void set_walkdistance(::google::protobuf::uint32 value);
  
  // optional uint32 TeleTime = 39;
  inline bool has_teletime() const;
  inline void clear_teletime();
  static const int kTeleTimeFieldNumber = 39;
  inline ::google::protobuf::uint32 teletime() const;
  inline void set_teletime(::google::protobuf::uint32 value);
  
  // optional uint32 EnmityDistance = 40;
  inline bool has_enmitydistance() const;
  inline void clear_enmitydistance();
  static const int kEnmityDistanceFieldNumber = 40;
  inline ::google::protobuf::uint32 enmitydistance() const;
  inline void set_enmitydistance(::google::protobuf::uint32 value);
  
  // optional uint32 EnmityTime = 41;
  inline bool has_enmitytime() const;
  inline void clear_enmitytime();
  static const int kEnmityTimeFieldNumber = 41;
  inline ::google::protobuf::uint32 enmitytime() const;
  inline void set_enmitytime(::google::protobuf::uint32 value);
  
  // optional uint32 ClearTimer = 42;
  inline bool has_cleartimer() const;
  inline void clear_cleartimer();
  static const int kClearTimerFieldNumber = 42;
  inline ::google::protobuf::uint32 cleartimer() const;
  inline void set_cleartimer(::google::protobuf::uint32 value);
  
  // optional uint32 Exp = 43;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 43;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // optional uint32 InitMoney = 44;
  inline bool has_initmoney() const;
  inline void clear_initmoney();
  static const int kInitMoneyFieldNumber = 44;
  inline ::google::protobuf::uint32 initmoney() const;
  inline void set_initmoney(::google::protobuf::uint32 value);
  
  // optional uint32 DeltaMoney = 45;
  inline bool has_deltamoney() const;
  inline void clear_deltamoney();
  static const int kDeltaMoneyFieldNumber = 45;
  inline ::google::protobuf::uint32 deltamoney() const;
  inline void set_deltamoney(::google::protobuf::uint32 value);
  
  // optional uint32 Resist = 46;
  inline bool has_resist() const;
  inline void clear_resist();
  static const int kResistFieldNumber = 46;
  inline ::google::protobuf::uint32 resist() const;
  inline void set_resist(::google::protobuf::uint32 value);
  
  // optional uint32 TranID = 47;
  inline bool has_tranid() const;
  inline void clear_tranid();
  static const int kTranIDFieldNumber = 47;
  inline ::google::protobuf::uint32 tranid() const;
  inline void set_tranid(::google::protobuf::uint32 value);
  
  // optional uint32 PkType = 48;
  inline bool has_pktype() const;
  inline void clear_pktype();
  static const int kPkTypeFieldNumber = 48;
  inline ::google::protobuf::uint32 pktype() const;
  inline void set_pktype(::google::protobuf::uint32 value);
  
  // optional uint32 GroupID = 49;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIDFieldNumber = 49;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillID = 50;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 50;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillLevel = 51;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 51;
  inline ::google::protobuf::uint32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::uint32 value);
  
  // optional uint32 SearchDistance = 52;
  inline bool has_searchdistance() const;
  inline void clear_searchdistance();
  static const int kSearchDistanceFieldNumber = 52;
  inline ::google::protobuf::uint32 searchdistance() const;
  inline void set_searchdistance(::google::protobuf::uint32 value);
  
  // optional uint32 LeftTime = 57;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLeftTimeFieldNumber = 57;
  inline ::google::protobuf::uint32 lefttime() const;
  inline void set_lefttime(::google::protobuf::uint32 value);
  
  // optional uint32 ResShow = 58;
  inline bool has_resshow() const;
  inline void clear_resshow();
  static const int kResShowFieldNumber = 58;
  inline ::google::protobuf::uint32 resshow() const;
  inline void set_resshow(::google::protobuf::uint32 value);
  
  // repeated uint32 FailTaskID = 59;
  inline int failtaskid_size() const;
  inline void clear_failtaskid();
  static const int kFailTaskIDFieldNumber = 59;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& failtaskid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_failtaskid();
  inline ::google::protobuf::uint32 failtaskid(int index) const;
  inline void set_failtaskid(int index, ::google::protobuf::uint32 value);
  inline void add_failtaskid(::google::protobuf::uint32 value);
  
  // optional uint32 JusticeValue = 60;
  inline bool has_justicevalue() const;
  inline void clear_justicevalue();
  static const int kJusticeValueFieldNumber = 60;
  inline ::google::protobuf::uint32 justicevalue() const;
  inline void set_justicevalue(::google::protobuf::uint32 value);
  
  // optional uint32 BuffImmunity = 61;
  inline bool has_buffimmunity() const;
  inline void clear_buffimmunity();
  static const int kBuffImmunityFieldNumber = 61;
  inline ::google::protobuf::uint32 buffimmunity() const;
  inline void set_buffimmunity(::google::protobuf::uint32 value);
  
  // optional uint32 ObtainTitle = 62;
  inline bool has_obtaintitle() const;
  inline void clear_obtaintitle();
  static const int kObtainTitleFieldNumber = 62;
  inline ::google::protobuf::uint32 obtaintitle() const;
  inline void set_obtaintitle(::google::protobuf::uint32 value);
  
  // optional uint32 AwardID = 63;
  inline bool has_awardid() const;
  inline void clear_awardid();
  static const int kAwardIDFieldNumber = 63;
  inline ::google::protobuf::uint32 awardid() const;
  inline void set_awardid(::google::protobuf::uint32 value);
  
  // optional uint32 LmtLineID = 64;
  inline bool has_lmtlineid() const;
  inline void clear_lmtlineid();
  static const int kLmtLineIDFieldNumber = 64;
  inline ::google::protobuf::uint32 lmtlineid() const;
  inline void set_lmtlineid(::google::protobuf::uint32 value);
  
  // optional uint32 RedstoneID = 65;
  inline bool has_redstoneid() const;
  inline void clear_redstoneid();
  static const int kRedstoneIDFieldNumber = 65;
  inline ::google::protobuf::uint32 redstoneid() const;
  inline void set_redstoneid(::google::protobuf::uint32 value);
  
  // optional uint32 OgreEvent = 66;
  inline bool has_ogreevent() const;
  inline void clear_ogreevent();
  static const int kOgreEventFieldNumber = 66;
  inline ::google::protobuf::uint32 ogreevent() const;
  inline void set_ogreevent(::google::protobuf::uint32 value);
  
  // optional uint32 CorpsValue = 67;
  inline bool has_corpsvalue() const;
  inline void clear_corpsvalue();
  static const int kCorpsValueFieldNumber = 67;
  inline ::google::protobuf::uint32 corpsvalue() const;
  inline void set_corpsvalue(::google::protobuf::uint32 value);
  
  // optional uint32 DropsDescID = 69;
  inline bool has_dropsdescid() const;
  inline void clear_dropsdescid();
  static const int kDropsDescIDFieldNumber = 69;
  inline ::google::protobuf::uint32 dropsdescid() const;
  inline void set_dropsdescid(::google::protobuf::uint32 value);
  
  // optional uint32 DiffcultIndex = 70;
  inline bool has_diffcultindex() const;
  inline void clear_diffcultindex();
  static const int kDiffcultIndexFieldNumber = 70;
  inline ::google::protobuf::uint32 diffcultindex() const;
  inline void set_diffcultindex(::google::protobuf::uint32 value);
  
  // optional uint32 DiffcultAward = 71;
  inline bool has_diffcultaward() const;
  inline void clear_diffcultaward();
  static const int kDiffcultAwardFieldNumber = 71;
  inline ::google::protobuf::uint32 diffcultaward() const;
  inline void set_diffcultaward(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* modelname_;
  static const ::std::string _default_modelname_;
  ::google::protobuf::uint32 ogretype_;
  ::google::protobuf::uint32 droptype_;
  ::google::protobuf::uint32 strategyid_;
  ::google::protobuf::uint32 dropid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 displayelevel_;
  ::google::protobuf::uint32 attackrate_;
  ::google::protobuf::uint32 attacktime_;
  ::google::protobuf::uint32 hprspeed_;
  ::google::protobuf::uint32 mprspeeds_;
  ::google::protobuf::uint32 runspeed_;
  ::google::protobuf::uint32 initlevel_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 pattack_;
  ::google::protobuf::uint32 pdefence_;
  ::google::protobuf::uint32 pattackrange_;
  ::google::protobuf::uint32 preduceper_;
  ::google::protobuf::uint32 mattack_;
  ::google::protobuf::uint32 mdefence_;
  ::google::protobuf::uint32 mattackrange_;
  ::google::protobuf::uint32 mreduceper_;
  ::google::protobuf::uint32 deathrate_;
  ::google::protobuf::uint32 deathvalue_;
  ::google::protobuf::uint32 deathdefense_;
  ::google::protobuf::uint32 normalhitrate_;
  ::google::protobuf::uint32 normalduck_;
  ::google::protobuf::uint32 recover_;
  ::google::protobuf::uint32 ignoreduck_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resdef_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resatt_;
  ::google::protobuf::uint32 needdelay_;
  ::google::protobuf::uint32 patroltype_;
  ::google::protobuf::uint32 isinitiative_;
  ::google::protobuf::uint32 walkdistance_;
  ::google::protobuf::uint32 teletime_;
  ::google::protobuf::uint32 enmitydistance_;
  ::google::protobuf::uint32 enmitytime_;
  ::google::protobuf::uint32 cleartimer_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 initmoney_;
  ::google::protobuf::uint32 deltamoney_;
  ::google::protobuf::uint32 resist_;
  ::google::protobuf::uint32 tranid_;
  ::google::protobuf::uint32 pktype_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 skilllevel_;
  ::google::protobuf::uint32 searchdistance_;
  ::google::protobuf::uint32 lefttime_;
  ::google::protobuf::uint32 resshow_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > failtaskid_;
  ::google::protobuf::uint32 justicevalue_;
  ::google::protobuf::uint32 buffimmunity_;
  ::google::protobuf::uint32 obtaintitle_;
  ::google::protobuf::uint32 awardid_;
  ::google::protobuf::uint32 lmtlineid_;
  ::google::protobuf::uint32 redstoneid_;
  ::google::protobuf::uint32 ogreevent_;
  ::google::protobuf::uint32 corpsvalue_;
  ::google::protobuf::uint32 dropsdescid_;
  ::google::protobuf::uint32 diffcultindex_;
  ::google::protobuf::uint32 diffcultaward_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(66 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOgreProperty* default_instance_;
};
// -------------------------------------------------------------------

class PBBox_Click : public ::google::protobuf::Message {
 public:
  PBBox_Click();
  virtual ~PBBox_Click();
  
  PBBox_Click(const PBBox_Click& from);
  
  inline PBBox_Click& operator=(const PBBox_Click& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBox_Click& default_instance();
  void Swap(PBBox_Click* other);
  
  // implements Message ----------------------------------------------
  
  PBBox_Click* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBox_Click& from);
  void MergeFrom(const PBBox_Click& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Event = 1;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 1;
  inline ::google::protobuf::uint32 event() const;
  inline void set_event(::google::protobuf::uint32 value);
  
  // optional uint32 Probability = 2;
  inline bool has_probability() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 2;
  inline ::google::protobuf::uint32 probability() const;
  inline void set_probability(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 event_;
  ::google::protobuf::uint32 probability_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBox_Click* default_instance_;
};
// -------------------------------------------------------------------

class PBOgreBox : public ::google::protobuf::Message {
 public:
  PBOgreBox();
  virtual ~PBOgreBox();
  
  PBOgreBox(const PBOgreBox& from);
  
  inline PBOgreBox& operator=(const PBOgreBox& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOgreBox& default_instance();
  void Swap(PBOgreBox* other);
  
  // implements Message ----------------------------------------------
  
  PBOgreBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOgreBox& from);
  void MergeFrom(const PBOgreBox& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBOgreProperty OgreInfo = 1;
  inline bool has_ogreinfo() const;
  inline void clear_ogreinfo();
  static const int kOgreInfoFieldNumber = 1;
  inline const ::PBOgreProperty& ogreinfo() const;
  inline ::PBOgreProperty* mutable_ogreinfo();
  
  // repeated .PBBox_Click Click = 2;
  inline int click_size() const;
  inline void clear_click();
  static const int kClickFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBox_Click >& click() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBox_Click >* mutable_click();
  inline const ::PBBox_Click& click(int index) const;
  inline ::PBBox_Click* mutable_click(int index);
  inline ::PBBox_Click* add_click();
  
  // optional uint32 BoxType = 3;
  inline bool has_boxtype() const;
  inline void clear_boxtype();
  static const int kBoxTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 boxtype() const;
  inline void set_boxtype(::google::protobuf::uint32 value);
  
  // optional uint32 KeyID = 4;
  inline bool has_keyid() const;
  inline void clear_keyid();
  static const int kKeyIDFieldNumber = 4;
  inline ::google::protobuf::uint32 keyid() const;
  inline void set_keyid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBOgreProperty* ogreinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBBox_Click > click_;
  ::google::protobuf::uint32 boxtype_;
  ::google::protobuf::uint32 keyid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOgreBox* default_instance_;
};
// -------------------------------------------------------------------

class PBShowPet : public ::google::protobuf::Message {
 public:
  PBShowPet();
  virtual ~PBShowPet();
  
  PBShowPet(const PBShowPet& from);
  
  inline PBShowPet& operator=(const PBShowPet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBShowPet& default_instance();
  void Swap(PBShowPet* other);
  
  // implements Message ----------------------------------------------
  
  PBShowPet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBShowPet& from);
  void MergeFrom(const PBShowPet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string Model = 3;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 3;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  
  // optional string IconName = 4;
  inline bool has_iconname() const;
  inline void clear_iconname();
  static const int kIconNameFieldNumber = 4;
  inline const ::std::string& iconname() const;
  inline void set_iconname(const ::std::string& value);
  inline void set_iconname(const char* value);
  inline void set_iconname(const char* value, size_t size);
  inline ::std::string* mutable_iconname();
  
  // optional uint32 MetierID = 5;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 5;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 6;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 LevelRequire = 7;
  inline bool has_levelrequire() const;
  inline void clear_levelrequire();
  static const int kLevelRequireFieldNumber = 7;
  inline ::google::protobuf::uint32 levelrequire() const;
  inline void set_levelrequire(::google::protobuf::uint32 value);
  
  // optional uint32 ExceedLevel = 8;
  inline bool has_exceedlevel() const;
  inline void clear_exceedlevel();
  static const int kExceedLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 exceedlevel() const;
  inline void set_exceedlevel(::google::protobuf::uint32 value);
  
  // optional uint32 PetItemID = 9;
  inline bool has_petitemid() const;
  inline void clear_petitemid();
  static const int kPetItemIDFieldNumber = 9;
  inline ::google::protobuf::uint32 petitemid() const;
  inline void set_petitemid(::google::protobuf::uint32 value);
  
  // optional uint32 RevertCost = 10;
  inline bool has_revertcost() const;
  inline void clear_revertcost();
  static const int kRevertCostFieldNumber = 10;
  inline ::google::protobuf::uint32 revertcost() const;
  inline void set_revertcost(::google::protobuf::uint32 value);
  
  // optional uint32 InitStorage = 11;
  inline bool has_initstorage() const;
  inline void clear_initstorage();
  static const int kInitStorageFieldNumber = 11;
  inline ::google::protobuf::uint32 initstorage() const;
  inline void set_initstorage(::google::protobuf::uint32 value);
  
  // optional uint32 LevelIncStorage = 12;
  inline bool has_levelincstorage() const;
  inline void clear_levelincstorage();
  static const int kLevelIncStorageFieldNumber = 12;
  inline ::google::protobuf::uint32 levelincstorage() const;
  inline void set_levelincstorage(::google::protobuf::uint32 value);
  
  // optional uint32 IncStorage = 13;
  inline bool has_incstorage() const;
  inline void clear_incstorage();
  static const int kIncStorageFieldNumber = 13;
  inline ::google::protobuf::uint32 incstorage() const;
  inline void set_incstorage(::google::protobuf::uint32 value);
  
  // optional uint32 ExpPerMin = 14;
  inline bool has_exppermin() const;
  inline void clear_exppermin();
  static const int kExpPerMinFieldNumber = 14;
  inline ::google::protobuf::uint32 exppermin() const;
  inline void set_exppermin(::google::protobuf::uint32 value);
  
  // optional uint32 RepletionLimit = 15;
  inline bool has_repletionlimit() const;
  inline void clear_repletionlimit();
  static const int kRepletionLimitFieldNumber = 15;
  inline ::google::protobuf::uint32 repletionlimit() const;
  inline void set_repletionlimit(::google::protobuf::uint32 value);
  
  // optional uint32 RepletionHP = 16;
  inline bool has_repletionhp() const;
  inline void clear_repletionhp();
  static const int kRepletionHPFieldNumber = 16;
  inline ::google::protobuf::uint32 repletionhp() const;
  inline void set_repletionhp(::google::protobuf::uint32 value);
  
  // optional uint32 RevertHPValue = 17;
  inline bool has_reverthpvalue() const;
  inline void clear_reverthpvalue();
  static const int kRevertHPValueFieldNumber = 17;
  inline ::google::protobuf::uint32 reverthpvalue() const;
  inline void set_reverthpvalue(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion1 = 18;
  inline bool has_minrepletion1() const;
  inline void clear_minrepletion1();
  static const int kMinRepletion1FieldNumber = 18;
  inline ::google::protobuf::uint32 minrepletion1() const;
  inline void set_minrepletion1(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion1 = 19;
  inline bool has_maxrepletion1() const;
  inline void clear_maxrepletion1();
  static const int kMaxRepletion1FieldNumber = 19;
  inline ::google::protobuf::uint32 maxrepletion1() const;
  inline void set_maxrepletion1(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate1 = 20;
  inline bool has_expspeedrate1() const;
  inline void clear_expspeedrate1();
  static const int kExpSpeedRate1FieldNumber = 20;
  inline ::google::protobuf::uint32 expspeedrate1() const;
  inline void set_expspeedrate1(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion2 = 21;
  inline bool has_minrepletion2() const;
  inline void clear_minrepletion2();
  static const int kMinRepletion2FieldNumber = 21;
  inline ::google::protobuf::uint32 minrepletion2() const;
  inline void set_minrepletion2(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion2 = 22;
  inline bool has_maxrepletion2() const;
  inline void clear_maxrepletion2();
  static const int kMaxRepletion2FieldNumber = 22;
  inline ::google::protobuf::uint32 maxrepletion2() const;
  inline void set_maxrepletion2(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate2 = 23;
  inline bool has_expspeedrate2() const;
  inline void clear_expspeedrate2();
  static const int kExpSpeedRate2FieldNumber = 23;
  inline ::google::protobuf::uint32 expspeedrate2() const;
  inline void set_expspeedrate2(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion3 = 24;
  inline bool has_minrepletion3() const;
  inline void clear_minrepletion3();
  static const int kMinRepletion3FieldNumber = 24;
  inline ::google::protobuf::uint32 minrepletion3() const;
  inline void set_minrepletion3(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion3 = 25;
  inline bool has_maxrepletion3() const;
  inline void clear_maxrepletion3();
  static const int kMaxRepletion3FieldNumber = 25;
  inline ::google::protobuf::uint32 maxrepletion3() const;
  inline void set_maxrepletion3(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate3 = 26;
  inline bool has_expspeedrate3() const;
  inline void clear_expspeedrate3();
  static const int kExpSpeedRate3FieldNumber = 26;
  inline ::google::protobuf::uint32 expspeedrate3() const;
  inline void set_expspeedrate3(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion4 = 27;
  inline bool has_minrepletion4() const;
  inline void clear_minrepletion4();
  static const int kMinRepletion4FieldNumber = 27;
  inline ::google::protobuf::uint32 minrepletion4() const;
  inline void set_minrepletion4(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion4 = 28;
  inline bool has_maxrepletion4() const;
  inline void clear_maxrepletion4();
  static const int kMaxRepletion4FieldNumber = 28;
  inline ::google::protobuf::uint32 maxrepletion4() const;
  inline void set_maxrepletion4(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate4 = 29;
  inline bool has_expspeedrate4() const;
  inline void clear_expspeedrate4();
  static const int kExpSpeedRate4FieldNumber = 29;
  inline ::google::protobuf::uint32 expspeedrate4() const;
  inline void set_expspeedrate4(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion5 = 30;
  inline bool has_minrepletion5() const;
  inline void clear_minrepletion5();
  static const int kMinRepletion5FieldNumber = 30;
  inline ::google::protobuf::uint32 minrepletion5() const;
  inline void set_minrepletion5(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion5 = 31;
  inline bool has_maxrepletion5() const;
  inline void clear_maxrepletion5();
  static const int kMaxRepletion5FieldNumber = 31;
  inline ::google::protobuf::uint32 maxrepletion5() const;
  inline void set_maxrepletion5(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate5 = 32;
  inline bool has_expspeedrate5() const;
  inline void clear_expspeedrate5();
  static const int kExpSpeedRate5FieldNumber = 32;
  inline ::google::protobuf::uint32 expspeedrate5() const;
  inline void set_expspeedrate5(::google::protobuf::uint32 value);
  
  // optional uint32 FoodCombo = 33;
  inline bool has_foodcombo() const;
  inline void clear_foodcombo();
  static const int kFoodComboFieldNumber = 33;
  inline ::google::protobuf::uint32 foodcombo() const;
  inline void set_foodcombo(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* model_;
  static const ::std::string _default_model_;
  ::std::string* iconname_;
  static const ::std::string _default_iconname_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 levelrequire_;
  ::google::protobuf::uint32 exceedlevel_;
  ::google::protobuf::uint32 petitemid_;
  ::google::protobuf::uint32 revertcost_;
  ::google::protobuf::uint32 initstorage_;
  ::google::protobuf::uint32 levelincstorage_;
  ::google::protobuf::uint32 incstorage_;
  ::google::protobuf::uint32 exppermin_;
  ::google::protobuf::uint32 repletionlimit_;
  ::google::protobuf::uint32 repletionhp_;
  ::google::protobuf::uint32 reverthpvalue_;
  ::google::protobuf::uint32 minrepletion1_;
  ::google::protobuf::uint32 maxrepletion1_;
  ::google::protobuf::uint32 expspeedrate1_;
  ::google::protobuf::uint32 minrepletion2_;
  ::google::protobuf::uint32 maxrepletion2_;
  ::google::protobuf::uint32 expspeedrate2_;
  ::google::protobuf::uint32 minrepletion3_;
  ::google::protobuf::uint32 maxrepletion3_;
  ::google::protobuf::uint32 expspeedrate3_;
  ::google::protobuf::uint32 minrepletion4_;
  ::google::protobuf::uint32 maxrepletion4_;
  ::google::protobuf::uint32 expspeedrate4_;
  ::google::protobuf::uint32 minrepletion5_;
  ::google::protobuf::uint32 maxrepletion5_;
  ::google::protobuf::uint32 expspeedrate5_;
  ::google::protobuf::uint32 foodcombo_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(33 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBShowPet* default_instance_;
};
// -------------------------------------------------------------------

class PBBattlePet : public ::google::protobuf::Message {
 public:
  PBBattlePet();
  virtual ~PBBattlePet();
  
  PBBattlePet(const PBBattlePet& from);
  
  inline PBBattlePet& operator=(const PBBattlePet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBattlePet& default_instance();
  void Swap(PBBattlePet* other);
  
  // implements Message ----------------------------------------------
  
  PBBattlePet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBattlePet& from);
  void MergeFrom(const PBBattlePet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string Model = 3;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 3;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  
  // optional string IconName = 4;
  inline bool has_iconname() const;
  inline void clear_iconname();
  static const int kIconNameFieldNumber = 4;
  inline const ::std::string& iconname() const;
  inline void set_iconname(const ::std::string& value);
  inline void set_iconname(const char* value);
  inline void set_iconname(const char* value, size_t size);
  inline ::std::string* mutable_iconname();
  
  // optional uint32 MetierID = 5;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 5;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 6;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 LevelRequire = 7;
  inline bool has_levelrequire() const;
  inline void clear_levelrequire();
  static const int kLevelRequireFieldNumber = 7;
  inline ::google::protobuf::uint32 levelrequire() const;
  inline void set_levelrequire(::google::protobuf::uint32 value);
  
  // optional uint32 ExceedLevel = 8;
  inline bool has_exceedlevel() const;
  inline void clear_exceedlevel();
  static const int kExceedLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 exceedlevel() const;
  inline void set_exceedlevel(::google::protobuf::uint32 value);
  
  // optional uint32 PetItemID = 9;
  inline bool has_petitemid() const;
  inline void clear_petitemid();
  static const int kPetItemIDFieldNumber = 9;
  inline ::google::protobuf::uint32 petitemid() const;
  inline void set_petitemid(::google::protobuf::uint32 value);
  
  // optional uint32 RevertCost = 10;
  inline bool has_revertcost() const;
  inline void clear_revertcost();
  static const int kRevertCostFieldNumber = 10;
  inline ::google::protobuf::uint32 revertcost() const;
  inline void set_revertcost(::google::protobuf::uint32 value);
  
  // optional uint32 RepletionLimit = 11;
  inline bool has_repletionlimit() const;
  inline void clear_repletionlimit();
  static const int kRepletionLimitFieldNumber = 11;
  inline ::google::protobuf::uint32 repletionlimit() const;
  inline void set_repletionlimit(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion1 = 12;
  inline bool has_minrepletion1() const;
  inline void clear_minrepletion1();
  static const int kMinRepletion1FieldNumber = 12;
  inline ::google::protobuf::uint32 minrepletion1() const;
  inline void set_minrepletion1(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion1 = 13;
  inline bool has_maxrepletion1() const;
  inline void clear_maxrepletion1();
  static const int kMaxRepletion1FieldNumber = 13;
  inline ::google::protobuf::uint32 maxrepletion1() const;
  inline void set_maxrepletion1(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate1 = 14;
  inline bool has_expspeedrate1() const;
  inline void clear_expspeedrate1();
  static const int kExpSpeedRate1FieldNumber = 14;
  inline ::google::protobuf::uint32 expspeedrate1() const;
  inline void set_expspeedrate1(::google::protobuf::uint32 value);
  
  // optional uint32 HPRate1 = 15;
  inline bool has_hprate1() const;
  inline void clear_hprate1();
  static const int kHPRate1FieldNumber = 15;
  inline ::google::protobuf::uint32 hprate1() const;
  inline void set_hprate1(::google::protobuf::uint32 value);
  
  // optional uint32 AttackRate1 = 16;
  inline bool has_attackrate1() const;
  inline void clear_attackrate1();
  static const int kAttackRate1FieldNumber = 16;
  inline ::google::protobuf::uint32 attackrate1() const;
  inline void set_attackrate1(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion2 = 17;
  inline bool has_minrepletion2() const;
  inline void clear_minrepletion2();
  static const int kMinRepletion2FieldNumber = 17;
  inline ::google::protobuf::uint32 minrepletion2() const;
  inline void set_minrepletion2(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion2 = 18;
  inline bool has_maxrepletion2() const;
  inline void clear_maxrepletion2();
  static const int kMaxRepletion2FieldNumber = 18;
  inline ::google::protobuf::uint32 maxrepletion2() const;
  inline void set_maxrepletion2(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate2 = 19;
  inline bool has_expspeedrate2() const;
  inline void clear_expspeedrate2();
  static const int kExpSpeedRate2FieldNumber = 19;
  inline ::google::protobuf::uint32 expspeedrate2() const;
  inline void set_expspeedrate2(::google::protobuf::uint32 value);
  
  // optional uint32 HPRate2 = 20;
  inline bool has_hprate2() const;
  inline void clear_hprate2();
  static const int kHPRate2FieldNumber = 20;
  inline ::google::protobuf::uint32 hprate2() const;
  inline void set_hprate2(::google::protobuf::uint32 value);
  
  // optional uint32 AttackRate2 = 21;
  inline bool has_attackrate2() const;
  inline void clear_attackrate2();
  static const int kAttackRate2FieldNumber = 21;
  inline ::google::protobuf::uint32 attackrate2() const;
  inline void set_attackrate2(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion3 = 22;
  inline bool has_minrepletion3() const;
  inline void clear_minrepletion3();
  static const int kMinRepletion3FieldNumber = 22;
  inline ::google::protobuf::uint32 minrepletion3() const;
  inline void set_minrepletion3(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion3 = 23;
  inline bool has_maxrepletion3() const;
  inline void clear_maxrepletion3();
  static const int kMaxRepletion3FieldNumber = 23;
  inline ::google::protobuf::uint32 maxrepletion3() const;
  inline void set_maxrepletion3(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate3 = 24;
  inline bool has_expspeedrate3() const;
  inline void clear_expspeedrate3();
  static const int kExpSpeedRate3FieldNumber = 24;
  inline ::google::protobuf::uint32 expspeedrate3() const;
  inline void set_expspeedrate3(::google::protobuf::uint32 value);
  
  // optional uint32 HPRate3 = 25;
  inline bool has_hprate3() const;
  inline void clear_hprate3();
  static const int kHPRate3FieldNumber = 25;
  inline ::google::protobuf::uint32 hprate3() const;
  inline void set_hprate3(::google::protobuf::uint32 value);
  
  // optional uint32 AttackRate3 = 26;
  inline bool has_attackrate3() const;
  inline void clear_attackrate3();
  static const int kAttackRate3FieldNumber = 26;
  inline ::google::protobuf::uint32 attackrate3() const;
  inline void set_attackrate3(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion4 = 27;
  inline bool has_minrepletion4() const;
  inline void clear_minrepletion4();
  static const int kMinRepletion4FieldNumber = 27;
  inline ::google::protobuf::uint32 minrepletion4() const;
  inline void set_minrepletion4(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion4 = 28;
  inline bool has_maxrepletion4() const;
  inline void clear_maxrepletion4();
  static const int kMaxRepletion4FieldNumber = 28;
  inline ::google::protobuf::uint32 maxrepletion4() const;
  inline void set_maxrepletion4(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate4 = 29;
  inline bool has_expspeedrate4() const;
  inline void clear_expspeedrate4();
  static const int kExpSpeedRate4FieldNumber = 29;
  inline ::google::protobuf::uint32 expspeedrate4() const;
  inline void set_expspeedrate4(::google::protobuf::uint32 value);
  
  // optional uint32 HPRate4 = 30;
  inline bool has_hprate4() const;
  inline void clear_hprate4();
  static const int kHPRate4FieldNumber = 30;
  inline ::google::protobuf::uint32 hprate4() const;
  inline void set_hprate4(::google::protobuf::uint32 value);
  
  // optional uint32 AttackRate4 = 31;
  inline bool has_attackrate4() const;
  inline void clear_attackrate4();
  static const int kAttackRate4FieldNumber = 31;
  inline ::google::protobuf::uint32 attackrate4() const;
  inline void set_attackrate4(::google::protobuf::uint32 value);
  
  // optional uint32 MinRepletion5 = 32;
  inline bool has_minrepletion5() const;
  inline void clear_minrepletion5();
  static const int kMinRepletion5FieldNumber = 32;
  inline ::google::protobuf::uint32 minrepletion5() const;
  inline void set_minrepletion5(::google::protobuf::uint32 value);
  
  // optional uint32 MaxRepletion5 = 33;
  inline bool has_maxrepletion5() const;
  inline void clear_maxrepletion5();
  static const int kMaxRepletion5FieldNumber = 33;
  inline ::google::protobuf::uint32 maxrepletion5() const;
  inline void set_maxrepletion5(::google::protobuf::uint32 value);
  
  // optional uint32 ExpSpeedRate5 = 34;
  inline bool has_expspeedrate5() const;
  inline void clear_expspeedrate5();
  static const int kExpSpeedRate5FieldNumber = 34;
  inline ::google::protobuf::uint32 expspeedrate5() const;
  inline void set_expspeedrate5(::google::protobuf::uint32 value);
  
  // optional uint32 HPRate5 = 35;
  inline bool has_hprate5() const;
  inline void clear_hprate5();
  static const int kHPRate5FieldNumber = 35;
  inline ::google::protobuf::uint32 hprate5() const;
  inline void set_hprate5(::google::protobuf::uint32 value);
  
  // optional uint32 AttackRate5 = 36;
  inline bool has_attackrate5() const;
  inline void clear_attackrate5();
  static const int kAttackRate5FieldNumber = 36;
  inline ::google::protobuf::uint32 attackrate5() const;
  inline void set_attackrate5(::google::protobuf::uint32 value);
  
  // optional uint32 HPValue = 37;
  inline bool has_hpvalue() const;
  inline void clear_hpvalue();
  static const int kHPValueFieldNumber = 37;
  inline ::google::protobuf::uint32 hpvalue() const;
  inline void set_hpvalue(::google::protobuf::uint32 value);
  
  // optional uint32 HPPotential = 38;
  inline bool has_hppotential() const;
  inline void clear_hppotential();
  static const int kHPPotentialFieldNumber = 38;
  inline ::google::protobuf::uint32 hppotential() const;
  inline void set_hppotential(::google::protobuf::uint32 value);
  
  // optional uint32 MPValue = 39;
  inline bool has_mpvalue() const;
  inline void clear_mpvalue();
  static const int kMPValueFieldNumber = 39;
  inline ::google::protobuf::uint32 mpvalue() const;
  inline void set_mpvalue(::google::protobuf::uint32 value);
  
  // optional uint32 MPPotential = 40;
  inline bool has_mppotential() const;
  inline void clear_mppotential();
  static const int kMPPotentialFieldNumber = 40;
  inline ::google::protobuf::uint32 mppotential() const;
  inline void set_mppotential(::google::protobuf::uint32 value);
  
  // optional uint32 PAttack = 41;
  inline bool has_pattack() const;
  inline void clear_pattack();
  static const int kPAttackFieldNumber = 41;
  inline ::google::protobuf::uint32 pattack() const;
  inline void set_pattack(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackPotential = 42;
  inline bool has_pattackpotential() const;
  inline void clear_pattackpotential();
  static const int kPAttackPotentialFieldNumber = 42;
  inline ::google::protobuf::uint32 pattackpotential() const;
  inline void set_pattackpotential(::google::protobuf::uint32 value);
  
  // optional uint32 MAttack = 43;
  inline bool has_mattack() const;
  inline void clear_mattack();
  static const int kMAttackFieldNumber = 43;
  inline ::google::protobuf::uint32 mattack() const;
  inline void set_mattack(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackPotential = 44;
  inline bool has_mattackpotential() const;
  inline void clear_mattackpotential();
  static const int kMAttackPotentialFieldNumber = 44;
  inline ::google::protobuf::uint32 mattackpotential() const;
  inline void set_mattackpotential(::google::protobuf::uint32 value);
  
  // optional uint32 PDefence = 45;
  inline bool has_pdefence() const;
  inline void clear_pdefence();
  static const int kPDefenceFieldNumber = 45;
  inline ::google::protobuf::uint32 pdefence() const;
  inline void set_pdefence(::google::protobuf::uint32 value);
  
  // optional uint32 PDefencePotential = 46;
  inline bool has_pdefencepotential() const;
  inline void clear_pdefencepotential();
  static const int kPDefencePotentialFieldNumber = 46;
  inline ::google::protobuf::uint32 pdefencepotential() const;
  inline void set_pdefencepotential(::google::protobuf::uint32 value);
  
  // optional uint32 MDefence = 47;
  inline bool has_mdefence() const;
  inline void clear_mdefence();
  static const int kMDefenceFieldNumber = 47;
  inline ::google::protobuf::uint32 mdefence() const;
  inline void set_mdefence(::google::protobuf::uint32 value);
  
  // optional uint32 MDefencePotential = 48;
  inline bool has_mdefencepotential() const;
  inline void clear_mdefencepotential();
  static const int kMDefencePotentialFieldNumber = 48;
  inline ::google::protobuf::uint32 mdefencepotential() const;
  inline void set_mdefencepotential(::google::protobuf::uint32 value);
  
  // optional uint32 PResist = 49;
  inline bool has_presist() const;
  inline void clear_presist();
  static const int kPResistFieldNumber = 49;
  inline ::google::protobuf::uint32 presist() const;
  inline void set_presist(::google::protobuf::uint32 value);
  
  // optional uint32 PResistPotential = 50;
  inline bool has_presistpotential() const;
  inline void clear_presistpotential();
  static const int kPResistPotentialFieldNumber = 50;
  inline ::google::protobuf::uint32 presistpotential() const;
  inline void set_presistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 MResist = 51;
  inline bool has_mresist() const;
  inline void clear_mresist();
  static const int kMResistFieldNumber = 51;
  inline ::google::protobuf::uint32 mresist() const;
  inline void set_mresist(::google::protobuf::uint32 value);
  
  // optional uint32 MResistPotential = 52;
  inline bool has_mresistpotential() const;
  inline void clear_mresistpotential();
  static const int kMResistPotentialFieldNumber = 52;
  inline ::google::protobuf::uint32 mresistpotential() const;
  inline void set_mresistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 AbnResist = 53;
  inline bool has_abnresist() const;
  inline void clear_abnresist();
  static const int kAbnResistFieldNumber = 53;
  inline ::google::protobuf::uint32 abnresist() const;
  inline void set_abnresist(::google::protobuf::uint32 value);
  
  // optional uint32 AbnResistPotential = 54;
  inline bool has_abnresistpotential() const;
  inline void clear_abnresistpotential();
  static const int kAbnResistPotentialFieldNumber = 54;
  inline ::google::protobuf::uint32 abnresistpotential() const;
  inline void set_abnresistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 FireResist = 55;
  inline bool has_fireresist() const;
  inline void clear_fireresist();
  static const int kFireResistFieldNumber = 55;
  inline ::google::protobuf::uint32 fireresist() const;
  inline void set_fireresist(::google::protobuf::uint32 value);
  
  // optional uint32 FireResistPotential = 56;
  inline bool has_fireresistpotential() const;
  inline void clear_fireresistpotential();
  static const int kFireResistPotentialFieldNumber = 56;
  inline ::google::protobuf::uint32 fireresistpotential() const;
  inline void set_fireresistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 WindResist = 57;
  inline bool has_windresist() const;
  inline void clear_windresist();
  static const int kWindResistFieldNumber = 57;
  inline ::google::protobuf::uint32 windresist() const;
  inline void set_windresist(::google::protobuf::uint32 value);
  
  // optional uint32 WindResistPotential = 58;
  inline bool has_windresistpotential() const;
  inline void clear_windresistpotential();
  static const int kWindResistPotentialFieldNumber = 58;
  inline ::google::protobuf::uint32 windresistpotential() const;
  inline void set_windresistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 LightResist = 59;
  inline bool has_lightresist() const;
  inline void clear_lightresist();
  static const int kLightResistFieldNumber = 59;
  inline ::google::protobuf::uint32 lightresist() const;
  inline void set_lightresist(::google::protobuf::uint32 value);
  
  // optional uint32 LightResistPotential = 60;
  inline bool has_lightresistpotential() const;
  inline void clear_lightresistpotential();
  static const int kLightResistPotentialFieldNumber = 60;
  inline ::google::protobuf::uint32 lightresistpotential() const;
  inline void set_lightresistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 ShadowResist = 61;
  inline bool has_shadowresist() const;
  inline void clear_shadowresist();
  static const int kShadowResistFieldNumber = 61;
  inline ::google::protobuf::uint32 shadowresist() const;
  inline void set_shadowresist(::google::protobuf::uint32 value);
  
  // optional uint32 ShadowResistPotential = 62;
  inline bool has_shadowresistpotential() const;
  inline void clear_shadowresistpotential();
  static const int kShadowResistPotentialFieldNumber = 62;
  inline ::google::protobuf::uint32 shadowresistpotential() const;
  inline void set_shadowresistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 WaterResist = 63;
  inline bool has_waterresist() const;
  inline void clear_waterresist();
  static const int kWaterResistFieldNumber = 63;
  inline ::google::protobuf::uint32 waterresist() const;
  inline void set_waterresist(::google::protobuf::uint32 value);
  
  // optional uint32 WaterResistPotential = 64;
  inline bool has_waterresistpotential() const;
  inline void clear_waterresistpotential();
  static const int kWaterResistPotentialFieldNumber = 64;
  inline ::google::protobuf::uint32 waterresistpotential() const;
  inline void set_waterresistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 EarthResist = 65;
  inline bool has_earthresist() const;
  inline void clear_earthresist();
  static const int kEarthResistFieldNumber = 65;
  inline ::google::protobuf::uint32 earthresist() const;
  inline void set_earthresist(::google::protobuf::uint32 value);
  
  // optional uint32 EarthResistPotential = 66;
  inline bool has_earthresistpotential() const;
  inline void clear_earthresistpotential();
  static const int kEarthResistPotentialFieldNumber = 66;
  inline ::google::protobuf::uint32 earthresistpotential() const;
  inline void set_earthresistpotential(::google::protobuf::uint32 value);
  
  // optional uint32 FoodCombo = 67;
  inline bool has_foodcombo() const;
  inline void clear_foodcombo();
  static const int kFoodComboFieldNumber = 67;
  inline ::google::protobuf::uint32 foodcombo() const;
  inline void set_foodcombo(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* model_;
  static const ::std::string _default_model_;
  ::std::string* iconname_;
  static const ::std::string _default_iconname_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 levelrequire_;
  ::google::protobuf::uint32 exceedlevel_;
  ::google::protobuf::uint32 petitemid_;
  ::google::protobuf::uint32 revertcost_;
  ::google::protobuf::uint32 repletionlimit_;
  ::google::protobuf::uint32 minrepletion1_;
  ::google::protobuf::uint32 maxrepletion1_;
  ::google::protobuf::uint32 expspeedrate1_;
  ::google::protobuf::uint32 hprate1_;
  ::google::protobuf::uint32 attackrate1_;
  ::google::protobuf::uint32 minrepletion2_;
  ::google::protobuf::uint32 maxrepletion2_;
  ::google::protobuf::uint32 expspeedrate2_;
  ::google::protobuf::uint32 hprate2_;
  ::google::protobuf::uint32 attackrate2_;
  ::google::protobuf::uint32 minrepletion3_;
  ::google::protobuf::uint32 maxrepletion3_;
  ::google::protobuf::uint32 expspeedrate3_;
  ::google::protobuf::uint32 hprate3_;
  ::google::protobuf::uint32 attackrate3_;
  ::google::protobuf::uint32 minrepletion4_;
  ::google::protobuf::uint32 maxrepletion4_;
  ::google::protobuf::uint32 expspeedrate4_;
  ::google::protobuf::uint32 hprate4_;
  ::google::protobuf::uint32 attackrate4_;
  ::google::protobuf::uint32 minrepletion5_;
  ::google::protobuf::uint32 maxrepletion5_;
  ::google::protobuf::uint32 expspeedrate5_;
  ::google::protobuf::uint32 hprate5_;
  ::google::protobuf::uint32 attackrate5_;
  ::google::protobuf::uint32 hpvalue_;
  ::google::protobuf::uint32 hppotential_;
  ::google::protobuf::uint32 mpvalue_;
  ::google::protobuf::uint32 mppotential_;
  ::google::protobuf::uint32 pattack_;
  ::google::protobuf::uint32 pattackpotential_;
  ::google::protobuf::uint32 mattack_;
  ::google::protobuf::uint32 mattackpotential_;
  ::google::protobuf::uint32 pdefence_;
  ::google::protobuf::uint32 pdefencepotential_;
  ::google::protobuf::uint32 mdefence_;
  ::google::protobuf::uint32 mdefencepotential_;
  ::google::protobuf::uint32 presist_;
  ::google::protobuf::uint32 presistpotential_;
  ::google::protobuf::uint32 mresist_;
  ::google::protobuf::uint32 mresistpotential_;
  ::google::protobuf::uint32 abnresist_;
  ::google::protobuf::uint32 abnresistpotential_;
  ::google::protobuf::uint32 fireresist_;
  ::google::protobuf::uint32 fireresistpotential_;
  ::google::protobuf::uint32 windresist_;
  ::google::protobuf::uint32 windresistpotential_;
  ::google::protobuf::uint32 lightresist_;
  ::google::protobuf::uint32 lightresistpotential_;
  ::google::protobuf::uint32 shadowresist_;
  ::google::protobuf::uint32 shadowresistpotential_;
  ::google::protobuf::uint32 waterresist_;
  ::google::protobuf::uint32 waterresistpotential_;
  ::google::protobuf::uint32 earthresist_;
  ::google::protobuf::uint32 earthresistpotential_;
  ::google::protobuf::uint32 foodcombo_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(67 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBattlePet* default_instance_;
};
// -------------------------------------------------------------------

class PBMineOutput : public ::google::protobuf::Message {
 public:
  PBMineOutput();
  virtual ~PBMineOutput();
  
  PBMineOutput(const PBMineOutput& from);
  
  inline PBMineOutput& operator=(const PBMineOutput& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMineOutput& default_instance();
  void Swap(PBMineOutput* other);
  
  // implements Message ----------------------------------------------
  
  PBMineOutput* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMineOutput& from);
  void MergeFrom(const PBMineOutput& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 StuffID = 1;
  inline bool has_stuffid() const;
  inline void clear_stuffid();
  static const int kStuffIDFieldNumber = 1;
  inline ::google::protobuf::uint32 stuffid() const;
  inline void set_stuffid(::google::protobuf::uint32 value);
  
  // optional uint32 Percent = 2;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 2;
  inline ::google::protobuf::uint32 percent() const;
  inline void set_percent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 stuffid_;
  ::google::protobuf::uint32 percent_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMineOutput* default_instance_;
};
// -------------------------------------------------------------------

class PBMineOgre : public ::google::protobuf::Message {
 public:
  PBMineOgre();
  virtual ~PBMineOgre();
  
  PBMineOgre(const PBMineOgre& from);
  
  inline PBMineOgre& operator=(const PBMineOgre& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMineOgre& default_instance();
  void Swap(PBMineOgre* other);
  
  // implements Message ----------------------------------------------
  
  PBMineOgre* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMineOgre& from);
  void MergeFrom(const PBMineOgre& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NpcID = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 Number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);
  
  // optional uint32 Percent = 3;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 3;
  inline ::google::protobuf::uint32 percent() const;
  inline void set_percent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::uint32 percent_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMineOgre* default_instance_;
};
// -------------------------------------------------------------------

class PBMine : public ::google::protobuf::Message {
 public:
  PBMine();
  virtual ~PBMine();
  
  PBMine(const PBMine& from);
  
  inline PBMine& operator=(const PBMine& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMine& default_instance();
  void Swap(PBMine* other);
  
  // implements Message ----------------------------------------------
  
  PBMine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMine& from);
  void MergeFrom(const PBMine& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 LevelRequire = 4;
  inline bool has_levelrequire() const;
  inline void clear_levelrequire();
  static const int kLevelRequireFieldNumber = 4;
  inline ::google::protobuf::uint32 levelrequire() const;
  inline void set_levelrequire(::google::protobuf::uint32 value);
  
  // optional uint32 ToolID = 5;
  inline bool has_toolid() const;
  inline void clear_toolid();
  static const int kToolIDFieldNumber = 5;
  inline ::google::protobuf::uint32 toolid() const;
  inline void set_toolid(::google::protobuf::uint32 value);
  
  // optional uint32 DecRate = 6;
  inline bool has_decrate() const;
  inline void clear_decrate();
  static const int kDecRateFieldNumber = 6;
  inline ::google::protobuf::uint32 decrate() const;
  inline void set_decrate(::google::protobuf::uint32 value);
  
  // optional uint32 MineTimeLow = 7;
  inline bool has_minetimelow() const;
  inline void clear_minetimelow();
  static const int kMineTimeLowFieldNumber = 7;
  inline ::google::protobuf::uint32 minetimelow() const;
  inline void set_minetimelow(::google::protobuf::uint32 value);
  
  // optional uint32 MineTimeHigh = 8;
  inline bool has_minetimehigh() const;
  inline void clear_minetimehigh();
  static const int kMineTimeHighFieldNumber = 8;
  inline ::google::protobuf::uint32 minetimehigh() const;
  inline void set_minetimehigh(::google::protobuf::uint32 value);
  
  // optional string Model = 9;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 9;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  
  // repeated .PBMineOutput Output = 10;
  inline int output_size() const;
  inline void clear_output();
  static const int kOutputFieldNumber = 10;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMineOutput >& output() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMineOutput >* mutable_output();
  inline const ::PBMineOutput& output(int index) const;
  inline ::PBMineOutput* mutable_output(int index);
  inline ::PBMineOutput* add_output();
  
  // repeated .PBMineOgre MineOgre = 11;
  inline int mineogre_size() const;
  inline void clear_mineogre();
  static const int kMineOgreFieldNumber = 11;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMineOgre >& mineogre() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMineOgre >* mutable_mineogre();
  inline const ::PBMineOgre& mineogre(int index) const;
  inline ::PBMineOgre* mutable_mineogre(int index);
  inline ::PBMineOgre* add_mineogre();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 levelrequire_;
  ::google::protobuf::uint32 toolid_;
  ::google::protobuf::uint32 decrate_;
  ::google::protobuf::uint32 minetimelow_;
  ::google::protobuf::uint32 minetimehigh_;
  ::std::string* model_;
  static const ::std::string _default_model_;
  ::google::protobuf::RepeatedPtrField< ::PBMineOutput > output_;
  ::google::protobuf::RepeatedPtrField< ::PBMineOgre > mineogre_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMine* default_instance_;
};
// -------------------------------------------------------------------

class PBSkillTreeNode : public ::google::protobuf::Message {
 public:
  PBSkillTreeNode();
  virtual ~PBSkillTreeNode();
  
  PBSkillTreeNode(const PBSkillTreeNode& from);
  
  inline PBSkillTreeNode& operator=(const PBSkillTreeNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkillTreeNode& default_instance();
  void Swap(PBSkillTreeNode* other);
  
  // implements Message ----------------------------------------------
  
  PBSkillTreeNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkillTreeNode& from);
  void MergeFrom(const PBSkillTreeNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SkillID = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 2;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // optional uint32 NeedSkillID = 3;
  inline bool has_needskillid() const;
  inline void clear_needskillid();
  static const int kNeedSkillIDFieldNumber = 3;
  inline ::google::protobuf::uint32 needskillid() const;
  inline void set_needskillid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedSkillPoint = 4;
  inline bool has_needskillpoint() const;
  inline void clear_needskillpoint();
  static const int kNeedSkillPointFieldNumber = 4;
  inline ::google::protobuf::uint32 needskillpoint() const;
  inline void set_needskillpoint(::google::protobuf::uint32 value);
  
  // optional uint32 NeedGenerID = 5;
  inline bool has_needgenerid() const;
  inline void clear_needgenerid();
  static const int kNeedGenerIDFieldNumber = 5;
  inline ::google::protobuf::uint32 needgenerid() const;
  inline void set_needgenerid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedGenerPoint = 6;
  inline bool has_needgenerpoint() const;
  inline void clear_needgenerpoint();
  static const int kNeedGenerPointFieldNumber = 6;
  inline ::google::protobuf::uint32 needgenerpoint() const;
  inline void set_needgenerpoint(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 NeedBook = 8;
  inline bool has_needbook() const;
  inline void clear_needbook();
  static const int kNeedBookFieldNumber = 8;
  inline ::google::protobuf::uint32 needbook() const;
  inline void set_needbook(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::uint32 needskillid_;
  ::google::protobuf::uint32 needskillpoint_;
  ::google::protobuf::uint32 needgenerid_;
  ::google::protobuf::uint32 needgenerpoint_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 needbook_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkillTreeNode* default_instance_;
};
// -------------------------------------------------------------------

class PBSkillTree : public ::google::protobuf::Message {
 public:
  PBSkillTree();
  virtual ~PBSkillTree();
  
  PBSkillTree(const PBSkillTree& from);
  
  inline PBSkillTree& operator=(const PBSkillTree& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkillTree& default_instance();
  void Swap(PBSkillTree* other);
  
  // implements Message ----------------------------------------------
  
  PBSkillTree* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkillTree& from);
  void MergeFrom(const PBSkillTree& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string GenerName = 2;
  inline bool has_genername() const;
  inline void clear_genername();
  static const int kGenerNameFieldNumber = 2;
  inline const ::std::string& genername() const;
  inline void set_genername(const ::std::string& value);
  inline void set_genername(const char* value);
  inline void set_genername(const char* value, size_t size);
  inline ::std::string* mutable_genername();
  
  // optional uint32 GenerID = 3;
  inline bool has_generid() const;
  inline void clear_generid();
  static const int kGenerIDFieldNumber = 3;
  inline ::google::protobuf::uint32 generid() const;
  inline void set_generid(::google::protobuf::uint32 value);
  
  // repeated .PBSkillTreeNode SkillNode = 4;
  inline int skillnode_size() const;
  inline void clear_skillnode();
  static const int kSkillNodeFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode >& skillnode() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode >* mutable_skillnode();
  inline const ::PBSkillTreeNode& skillnode(int index) const;
  inline ::PBSkillTreeNode* mutable_skillnode(int index);
  inline ::PBSkillTreeNode* add_skillnode();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* genername_;
  static const ::std::string _default_genername_;
  ::google::protobuf::uint32 generid_;
  ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode > skillnode_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkillTree* default_instance_;
};
// -------------------------------------------------------------------

class PBCost : public ::google::protobuf::Message {
 public:
  PBCost();
  virtual ~PBCost();
  
  PBCost(const PBCost& from);
  
  inline PBCost& operator=(const PBCost& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCost& default_instance();
  void Swap(PBCost* other);
  
  // implements Message ----------------------------------------------
  
  PBCost* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCost& from);
  void MergeFrom(const PBCost& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CostType = 1;
  inline bool has_costtype() const;
  inline void clear_costtype();
  static const int kCostTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 costtype() const;
  inline void set_costtype(::google::protobuf::uint32 value);
  
  // repeated uint32 CostParam = 2;
  inline int costparam_size() const;
  inline void clear_costparam();
  static const int kCostParamFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& costparam() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_costparam();
  inline ::google::protobuf::uint32 costparam(int index) const;
  inline void set_costparam(int index, ::google::protobuf::uint32 value);
  inline void add_costparam(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 costtype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > costparam_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCost* default_instance_;
};
// -------------------------------------------------------------------

class PBUseCondition : public ::google::protobuf::Message {
 public:
  PBUseCondition();
  virtual ~PBUseCondition();
  
  PBUseCondition(const PBUseCondition& from);
  
  inline PBUseCondition& operator=(const PBUseCondition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBUseCondition& default_instance();
  void Swap(PBUseCondition* other);
  
  // implements Message ----------------------------------------------
  
  PBUseCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBUseCondition& from);
  void MergeFrom(const PBUseCondition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ConditionType = 1;
  inline bool has_conditiontype() const;
  inline void clear_conditiontype();
  static const int kConditionTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 conditiontype() const;
  inline void set_conditiontype(::google::protobuf::uint32 value);
  
  // optional uint32 Param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 conditiontype_;
  ::google::protobuf::uint32 param_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBUseCondition* default_instance_;
};
// -------------------------------------------------------------------

class PBSkill : public ::google::protobuf::Message {
 public:
  PBSkill();
  virtual ~PBSkill();
  
  PBSkill(const PBSkill& from);
  
  inline PBSkill& operator=(const PBSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkill& default_instance();
  void Swap(PBSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkill& from);
  void MergeFrom(const PBSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 SkillID = 3;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 3;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 RequireWeapon = 4;
  inline bool has_requireweapon() const;
  inline void clear_requireweapon();
  static const int kRequireWeaponFieldNumber = 4;
  inline ::google::protobuf::uint32 requireweapon() const;
  inline void set_requireweapon(::google::protobuf::uint32 value);
  
  // optional uint32 MetierID = 5;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 5;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // optional uint32 GenerID = 6;
  inline bool has_generid() const;
  inline void clear_generid();
  static const int kGenerIDFieldNumber = 6;
  inline ::google::protobuf::uint32 generid() const;
  inline void set_generid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillLevel = 7;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::uint32 value);
  
  // optional string SkillIcon = 8;
  inline bool has_skillicon() const;
  inline void clear_skillicon();
  static const int kSkillIconFieldNumber = 8;
  inline const ::std::string& skillicon() const;
  inline void set_skillicon(const ::std::string& value);
  inline void set_skillicon(const char* value);
  inline void set_skillicon(const char* value, size_t size);
  inline ::std::string* mutable_skillicon();
  
  // optional string SkillDescribe = 9;
  inline bool has_skilldescribe() const;
  inline void clear_skilldescribe();
  static const int kSkillDescribeFieldNumber = 9;
  inline const ::std::string& skilldescribe() const;
  inline void set_skilldescribe(const ::std::string& value);
  inline void set_skilldescribe(const char* value);
  inline void set_skilldescribe(const char* value, size_t size);
  inline ::std::string* mutable_skilldescribe();
  
  // optional uint32 FireType = 10;
  inline bool has_firetype() const;
  inline void clear_firetype();
  static const int kFireTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 firetype() const;
  inline void set_firetype(::google::protobuf::uint32 value);
  
  // optional uint32 SkillType = 11;
  inline bool has_skilltype() const;
  inline void clear_skilltype();
  static const int kSkillTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 skilltype() const;
  inline void set_skilltype(::google::protobuf::uint32 value);
  
  // optional uint32 TimeType = 12;
  inline bool has_timetype() const;
  inline void clear_timetype();
  static const int kTimeTypeFieldNumber = 12;
  inline ::google::protobuf::uint32 timetype() const;
  inline void set_timetype(::google::protobuf::uint32 value);
  
  // optional uint32 AniTime = 13;
  inline bool has_anitime() const;
  inline void clear_anitime();
  static const int kAniTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 anitime() const;
  inline void set_anitime(::google::protobuf::uint32 value);
  
  // optional uint32 FireTime = 14;
  inline bool has_firetime() const;
  inline void clear_firetime();
  static const int kFireTimeFieldNumber = 14;
  inline ::google::protobuf::uint32 firetime() const;
  inline void set_firetime(::google::protobuf::uint32 value);
  
  // optional uint32 CDTime = 15;
  inline bool has_cdtime() const;
  inline void clear_cdtime();
  static const int kCDTimeFieldNumber = 15;
  inline ::google::protobuf::uint32 cdtime() const;
  inline void set_cdtime(::google::protobuf::uint32 value);
  
  // repeated .PBCost Cost = 16;
  inline int cost_size() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 16;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCost >& cost() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCost >* mutable_cost();
  inline const ::PBCost& cost(int index) const;
  inline ::PBCost* mutable_cost(int index);
  inline ::PBCost* add_cost();
  
  // optional uint32 NeedDelay = 17;
  inline bool has_needdelay() const;
  inline void clear_needdelay();
  static const int kNeedDelayFieldNumber = 17;
  inline ::google::protobuf::uint32 needdelay() const;
  inline void set_needdelay(::google::protobuf::uint32 value);
  
  // optional uint32 SkillFuncID1 = 18;
  inline bool has_skillfuncid1() const;
  inline void clear_skillfuncid1();
  static const int kSkillFuncID1FieldNumber = 18;
  inline ::google::protobuf::uint32 skillfuncid1() const;
  inline void set_skillfuncid1(::google::protobuf::uint32 value);
  
  // repeated uint32 Parameter1 = 19;
  inline int parameter1_size() const;
  inline void clear_parameter1();
  static const int kParameter1FieldNumber = 19;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& parameter1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_parameter1();
  inline ::google::protobuf::uint32 parameter1(int index) const;
  inline void set_parameter1(int index, ::google::protobuf::uint32 value);
  inline void add_parameter1(::google::protobuf::uint32 value);
  
  // optional uint32 SkillFuncID2 = 20;
  inline bool has_skillfuncid2() const;
  inline void clear_skillfuncid2();
  static const int kSkillFuncID2FieldNumber = 20;
  inline ::google::protobuf::uint32 skillfuncid2() const;
  inline void set_skillfuncid2(::google::protobuf::uint32 value);
  
  // repeated uint32 Parameter2 = 21;
  inline int parameter2_size() const;
  inline void clear_parameter2();
  static const int kParameter2FieldNumber = 21;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& parameter2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_parameter2();
  inline ::google::protobuf::uint32 parameter2(int index) const;
  inline void set_parameter2(int index, ::google::protobuf::uint32 value);
  inline void add_parameter2(::google::protobuf::uint32 value);
  
  // optional uint32 SkillFuncID3 = 22;
  inline bool has_skillfuncid3() const;
  inline void clear_skillfuncid3();
  static const int kSkillFuncID3FieldNumber = 22;
  inline ::google::protobuf::uint32 skillfuncid3() const;
  inline void set_skillfuncid3(::google::protobuf::uint32 value);
  
  // repeated uint32 Parameter3 = 23;
  inline int parameter3_size() const;
  inline void clear_parameter3();
  static const int kParameter3FieldNumber = 23;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& parameter3() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_parameter3();
  inline ::google::protobuf::uint32 parameter3(int index) const;
  inline void set_parameter3(int index, ::google::protobuf::uint32 value);
  inline void add_parameter3(::google::protobuf::uint32 value);
  
  // optional uint32 SkillFuncID4 = 24;
  inline bool has_skillfuncid4() const;
  inline void clear_skillfuncid4();
  static const int kSkillFuncID4FieldNumber = 24;
  inline ::google::protobuf::uint32 skillfuncid4() const;
  inline void set_skillfuncid4(::google::protobuf::uint32 value);
  
  // repeated uint32 Parameter4 = 25;
  inline int parameter4_size() const;
  inline void clear_parameter4();
  static const int kParameter4FieldNumber = 25;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& parameter4() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_parameter4();
  inline ::google::protobuf::uint32 parameter4(int index) const;
  inline void set_parameter4(int index, ::google::protobuf::uint32 value);
  inline void add_parameter4(::google::protobuf::uint32 value);
  
  // optional string SkillAction = 26;
  inline bool has_skillaction() const;
  inline void clear_skillaction();
  static const int kSkillActionFieldNumber = 26;
  inline const ::std::string& skillaction() const;
  inline void set_skillaction(const ::std::string& value);
  inline void set_skillaction(const char* value);
  inline void set_skillaction(const char* value, size_t size);
  inline ::std::string* mutable_skillaction();
  
  // optional uint32 AutoRepeat = 27;
  inline bool has_autorepeat() const;
  inline void clear_autorepeat();
  static const int kAutoRepeatFieldNumber = 27;
  inline ::google::protobuf::uint32 autorepeat() const;
  inline void set_autorepeat(::google::protobuf::uint32 value);
  
  // optional uint32 AutoNormalAttack = 28;
  inline bool has_autonormalattack() const;
  inline void clear_autonormalattack();
  static const int kAutoNormalAttackFieldNumber = 28;
  inline ::google::protobuf::uint32 autonormalattack() const;
  inline void set_autonormalattack(::google::protobuf::uint32 value);
  
  // optional uint32 AutoCoolingSkill = 29;
  inline bool has_autocoolingskill() const;
  inline void clear_autocoolingskill();
  static const int kAutoCoolingSkillFieldNumber = 29;
  inline ::google::protobuf::uint32 autocoolingskill() const;
  inline void set_autocoolingskill(::google::protobuf::uint32 value);
  
  // repeated .PBUseCondition UseCondition = 30;
  inline int usecondition_size() const;
  inline void clear_usecondition();
  static const int kUseConditionFieldNumber = 30;
  inline const ::google::protobuf::RepeatedPtrField< ::PBUseCondition >& usecondition() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBUseCondition >* mutable_usecondition();
  inline const ::PBUseCondition& usecondition(int index) const;
  inline ::PBUseCondition* mutable_usecondition(int index);
  inline ::PBUseCondition* add_usecondition();
  
  // optional uint32 StudyGold = 31;
  inline bool has_studygold() const;
  inline void clear_studygold();
  static const int kStudyGoldFieldNumber = 31;
  inline ::google::protobuf::uint32 studygold() const;
  inline void set_studygold(::google::protobuf::uint32 value);
  
  // optional uint32 StudyBindMoney = 32;
  inline bool has_studybindmoney() const;
  inline void clear_studybindmoney();
  static const int kStudyBindMoneyFieldNumber = 32;
  inline ::google::protobuf::uint32 studybindmoney() const;
  inline void set_studybindmoney(::google::protobuf::uint32 value);
  
  // optional uint32 SkillListShowType = 33;
  inline bool has_skilllistshowtype() const;
  inline void clear_skilllistshowtype();
  static const int kSkillListShowTypeFieldNumber = 33;
  inline ::google::protobuf::uint32 skilllistshowtype() const;
  inline void set_skilllistshowtype(::google::protobuf::uint32 value);
  
  // optional uint32 SkillTempType = 34;
  inline bool has_skilltemptype() const;
  inline void clear_skilltemptype();
  static const int kSkillTempTypeFieldNumber = 34;
  inline ::google::protobuf::uint32 skilltemptype() const;
  inline void set_skilltemptype(::google::protobuf::uint32 value);
  
  // optional uint32 StudySkillLevel = 35;
  inline bool has_studyskilllevel() const;
  inline void clear_studyskilllevel();
  static const int kStudySkillLevelFieldNumber = 35;
  inline ::google::protobuf::uint32 studyskilllevel() const;
  inline void set_studyskilllevel(::google::protobuf::uint32 value);
  
  // optional uint32 InsertAutoState = 36;
  inline bool has_insertautostate() const;
  inline void clear_insertautostate();
  static const int kInsertAutoStateFieldNumber = 36;
  inline ::google::protobuf::uint32 insertautostate() const;
  inline void set_insertautostate(::google::protobuf::uint32 value);
  
  // optional uint32 BreakAutoState = 37;
  inline bool has_breakautostate() const;
  inline void clear_breakautostate();
  static const int kBreakAutoStateFieldNumber = 37;
  inline ::google::protobuf::uint32 breakautostate() const;
  inline void set_breakautostate(::google::protobuf::uint32 value);
  
  // optional uint32 NeedTarget = 38;
  inline bool has_needtarget() const;
  inline void clear_needtarget();
  static const int kNeedTargetFieldNumber = 38;
  inline ::google::protobuf::uint32 needtarget() const;
  inline void set_needtarget(::google::protobuf::uint32 value);
  
  // optional uint32 NeedPet = 39;
  inline bool has_needpet() const;
  inline void clear_needpet();
  static const int kNeedPetFieldNumber = 39;
  inline ::google::protobuf::uint32 needpet() const;
  inline void set_needpet(::google::protobuf::uint32 value);
  
  // optional uint32 ActionCamp = 40;
  inline bool has_actioncamp() const;
  inline void clear_actioncamp();
  static const int kActionCampFieldNumber = 40;
  inline ::google::protobuf::uint32 actioncamp() const;
  inline void set_actioncamp(::google::protobuf::uint32 value);
  
  // optional uint32 DamageType = 41;
  inline bool has_damagetype() const;
  inline void clear_damagetype();
  static const int kDamageTypeFieldNumber = 41;
  inline ::google::protobuf::uint32 damagetype() const;
  inline void set_damagetype(::google::protobuf::uint32 value);
  
  // optional uint32 BindStudyGold = 42;
  inline bool has_bindstudygold() const;
  inline void clear_bindstudygold();
  static const int kBindStudyGoldFieldNumber = 42;
  inline ::google::protobuf::uint32 bindstudygold() const;
  inline void set_bindstudygold(::google::protobuf::uint32 value);
  
  // optional uint32 AttackFix = 43;
  inline bool has_attackfix() const;
  inline void clear_attackfix();
  static const int kAttackFixFieldNumber = 43;
  inline ::google::protobuf::uint32 attackfix() const;
  inline void set_attackfix(::google::protobuf::uint32 value);
  
  // optional uint32 AttackPer = 44;
  inline bool has_attackper() const;
  inline void clear_attackper();
  static const int kAttackPerFieldNumber = 44;
  inline ::google::protobuf::uint32 attackper() const;
  inline void set_attackper(::google::protobuf::uint32 value);
  
  // optional uint32 ResType = 45;
  inline bool has_restype() const;
  inline void clear_restype();
  static const int kResTypeFieldNumber = 45;
  inline ::google::protobuf::uint32 restype() const;
  inline void set_restype(::google::protobuf::uint32 value);
  
  // optional uint32 ResValue = 46;
  inline bool has_resvalue() const;
  inline void clear_resvalue();
  static const int kResValueFieldNumber = 46;
  inline ::google::protobuf::uint32 resvalue() const;
  inline void set_resvalue(::google::protobuf::uint32 value);
  
  // optional uint32 IsMWSkill = 47;
  inline bool has_ismwskill() const;
  inline void clear_ismwskill();
  static const int kIsMWSkillFieldNumber = 47;
  inline ::google::protobuf::uint32 ismwskill() const;
  inline void set_ismwskill(::google::protobuf::uint32 value);
  
  // optional string SkillTypeDesc = 48;
  inline bool has_skilltypedesc() const;
  inline void clear_skilltypedesc();
  static const int kSkillTypeDescFieldNumber = 48;
  inline const ::std::string& skilltypedesc() const;
  inline void set_skilltypedesc(const ::std::string& value);
  inline void set_skilltypedesc(const char* value);
  inline void set_skilltypedesc(const char* value, size_t size);
  inline ::std::string* mutable_skilltypedesc();
  
  // optional uint32 IsMWOffset = 49;
  inline bool has_ismwoffset() const;
  inline void clear_ismwoffset();
  static const int kIsMWOffsetFieldNumber = 49;
  inline ::google::protobuf::uint32 ismwoffset() const;
  inline void set_ismwoffset(::google::protobuf::uint32 value);
  
  // repeated uint32 CDGroup = 50;
  inline int cdgroup_size() const;
  inline void clear_cdgroup();
  static const int kCDGroupFieldNumber = 50;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& cdgroup() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_cdgroup();
  inline ::google::protobuf::uint32 cdgroup(int index) const;
  inline void set_cdgroup(int index, ::google::protobuf::uint32 value);
  inline void add_cdgroup(::google::protobuf::uint32 value);
  
  // optional uint32 CanClean = 51;
  inline bool has_canclean() const;
  inline void clear_canclean();
  static const int kCanCleanFieldNumber = 51;
  inline ::google::protobuf::uint32 canclean() const;
  inline void set_canclean(::google::protobuf::uint32 value);
  
  // optional uint32 TargetLevel = 52;
  inline bool has_targetlevel() const;
  inline void clear_targetlevel();
  static const int kTargetLevelFieldNumber = 52;
  inline ::google::protobuf::uint32 targetlevel() const;
  inline void set_targetlevel(::google::protobuf::uint32 value);
  
  // optional uint32 SummonIndex = 53;
  inline bool has_summonindex() const;
  inline void clear_summonindex();
  static const int kSummonIndexFieldNumber = 53;
  inline ::google::protobuf::uint32 summonindex() const;
  inline void set_summonindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 requireweapon_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::uint32 generid_;
  ::google::protobuf::uint32 skilllevel_;
  ::std::string* skillicon_;
  static const ::std::string _default_skillicon_;
  ::std::string* skilldescribe_;
  static const ::std::string _default_skilldescribe_;
  ::google::protobuf::uint32 firetype_;
  ::google::protobuf::uint32 skilltype_;
  ::google::protobuf::uint32 timetype_;
  ::google::protobuf::uint32 anitime_;
  ::google::protobuf::uint32 firetime_;
  ::google::protobuf::uint32 cdtime_;
  ::google::protobuf::RepeatedPtrField< ::PBCost > cost_;
  ::google::protobuf::uint32 needdelay_;
  ::google::protobuf::uint32 skillfuncid1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > parameter1_;
  ::google::protobuf::uint32 skillfuncid2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > parameter2_;
  ::google::protobuf::uint32 skillfuncid3_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > parameter3_;
  ::google::protobuf::uint32 skillfuncid4_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > parameter4_;
  ::std::string* skillaction_;
  static const ::std::string _default_skillaction_;
  ::google::protobuf::uint32 autorepeat_;
  ::google::protobuf::uint32 autonormalattack_;
  ::google::protobuf::uint32 autocoolingskill_;
  ::google::protobuf::RepeatedPtrField< ::PBUseCondition > usecondition_;
  ::google::protobuf::uint32 studygold_;
  ::google::protobuf::uint32 studybindmoney_;
  ::google::protobuf::uint32 skilllistshowtype_;
  ::google::protobuf::uint32 skilltemptype_;
  ::google::protobuf::uint32 studyskilllevel_;
  ::google::protobuf::uint32 insertautostate_;
  ::google::protobuf::uint32 breakautostate_;
  ::google::protobuf::uint32 needtarget_;
  ::google::protobuf::uint32 needpet_;
  ::google::protobuf::uint32 actioncamp_;
  ::google::protobuf::uint32 damagetype_;
  ::google::protobuf::uint32 bindstudygold_;
  ::google::protobuf::uint32 attackfix_;
  ::google::protobuf::uint32 attackper_;
  ::google::protobuf::uint32 restype_;
  ::google::protobuf::uint32 resvalue_;
  ::google::protobuf::uint32 ismwskill_;
  ::std::string* skilltypedesc_;
  static const ::std::string _default_skilltypedesc_;
  ::google::protobuf::uint32 ismwoffset_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cdgroup_;
  ::google::protobuf::uint32 canclean_;
  ::google::protobuf::uint32 targetlevel_;
  ::google::protobuf::uint32 summonindex_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(53 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBAureoleType : public ::google::protobuf::Message {
 public:
  PBAureoleType();
  virtual ~PBAureoleType();
  
  PBAureoleType(const PBAureoleType& from);
  
  inline PBAureoleType& operator=(const PBAureoleType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAureoleType& default_instance();
  void Swap(PBAureoleType* other);
  
  // implements Message ----------------------------------------------
  
  PBAureoleType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAureoleType& from);
  void MergeFrom(const PBAureoleType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 AureoleArea = 1;
  inline bool has_aureolearea() const;
  inline void clear_aureolearea();
  static const int kAureoleAreaFieldNumber = 1;
  inline ::google::protobuf::uint32 aureolearea() const;
  inline void set_aureolearea(::google::protobuf::uint32 value);
  
  // optional uint32 BuffID = 2;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 2;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 aureolearea_;
  ::google::protobuf::uint32 buffid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAureoleType* default_instance_;
};
// -------------------------------------------------------------------

class PBAureoleSkill : public ::google::protobuf::Message {
 public:
  PBAureoleSkill();
  virtual ~PBAureoleSkill();
  
  PBAureoleSkill(const PBAureoleSkill& from);
  
  inline PBAureoleSkill& operator=(const PBAureoleSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAureoleSkill& default_instance();
  void Swap(PBAureoleSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBAureoleSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAureoleSkill& from);
  void MergeFrom(const PBAureoleSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBSkill SkillInfo = 1;
  inline bool has_skillinfo() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 1;
  inline const ::PBSkill& skillinfo() const;
  inline ::PBSkill* mutable_skillinfo();
  
  // optional uint32 Inceessary = 2;
  inline bool has_inceessary() const;
  inline void clear_inceessary();
  static const int kInceessaryFieldNumber = 2;
  inline ::google::protobuf::uint32 inceessary() const;
  inline void set_inceessary(::google::protobuf::uint32 value);
  
  // optional uint32 InceessaryTime = 3;
  inline bool has_inceessarytime() const;
  inline void clear_inceessarytime();
  static const int kInceessaryTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 inceessarytime() const;
  inline void set_inceessarytime(::google::protobuf::uint32 value);
  
  // repeated .PBCost Cost = 4;
  inline int cost_size() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCost >& cost() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCost >* mutable_cost();
  inline const ::PBCost& cost(int index) const;
  inline ::PBCost* mutable_cost(int index);
  inline ::PBCost* add_cost();
  
  // optional uint32 AureoleDistance = 5;
  inline bool has_aureoledistance() const;
  inline void clear_aureoledistance();
  static const int kAureoleDistanceFieldNumber = 5;
  inline ::google::protobuf::uint32 aureoledistance() const;
  inline void set_aureoledistance(::google::protobuf::uint32 value);
  
  // repeated .PBAureoleType AureoleType = 6;
  inline int aureoletype_size() const;
  inline void clear_aureoletype();
  static const int kAureoleTypeFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBAureoleType >& aureoletype() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAureoleType >* mutable_aureoletype();
  inline const ::PBAureoleType& aureoletype(int index) const;
  inline ::PBAureoleType* mutable_aureoletype(int index);
  inline ::PBAureoleType* add_aureoletype();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBSkill* skillinfo_;
  ::google::protobuf::uint32 inceessary_;
  ::google::protobuf::uint32 inceessarytime_;
  ::google::protobuf::RepeatedPtrField< ::PBCost > cost_;
  ::google::protobuf::uint32 aureoledistance_;
  ::google::protobuf::RepeatedPtrField< ::PBAureoleType > aureoletype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAureoleSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBNormalSkill : public ::google::protobuf::Message {
 public:
  PBNormalSkill();
  virtual ~PBNormalSkill();
  
  PBNormalSkill(const PBNormalSkill& from);
  
  inline PBNormalSkill& operator=(const PBNormalSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBNormalSkill& default_instance();
  void Swap(PBNormalSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBNormalSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBNormalSkill& from);
  void MergeFrom(const PBNormalSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBSkill SkillInfo = 1;
  inline bool has_skillinfo() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 1;
  inline const ::PBSkill& skillinfo() const;
  inline ::PBSkill* mutable_skillinfo();
  
  // optional uint32 SkillHitrate = 2;
  inline bool has_skillhitrate() const;
  inline void clear_skillhitrate();
  static const int kSkillHitrateFieldNumber = 2;
  inline ::google::protobuf::uint32 skillhitrate() const;
  inline void set_skillhitrate(::google::protobuf::uint32 value);
  
  // optional uint32 MinDistance = 3;
  inline bool has_mindistance() const;
  inline void clear_mindistance();
  static const int kMinDistanceFieldNumber = 3;
  inline ::google::protobuf::uint32 mindistance() const;
  inline void set_mindistance(::google::protobuf::uint32 value);
  
  // optional uint32 MaxDistance = 4;
  inline bool has_maxdistance() const;
  inline void clear_maxdistance();
  static const int kMaxDistanceFieldNumber = 4;
  inline ::google::protobuf::uint32 maxdistance() const;
  inline void set_maxdistance(::google::protobuf::uint32 value);
  
  // optional uint32 EfktMaxNum = 5;
  inline bool has_efktmaxnum() const;
  inline void clear_efktmaxnum();
  static const int kEfktMaxNumFieldNumber = 5;
  inline ::google::protobuf::uint32 efktmaxnum() const;
  inline void set_efktmaxnum(::google::protobuf::uint32 value);
  
  // optional uint32 AttackRange = 6;
  inline bool has_attackrange() const;
  inline void clear_attackrange();
  static const int kAttackRangeFieldNumber = 6;
  inline ::google::protobuf::uint32 attackrange() const;
  inline void set_attackrange(::google::protobuf::uint32 value);
  
  // repeated uint32 RandParam = 7;
  inline int randparam_size() const;
  inline void clear_randparam();
  static const int kRandParamFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& randparam() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_randparam();
  inline ::google::protobuf::uint32 randparam(int index) const;
  inline void set_randparam(int index, ::google::protobuf::uint32 value);
  inline void add_randparam(::google::protobuf::uint32 value);
  
  // repeated uint32 BuffGroupID = 8;
  inline int buffgroupid_size() const;
  inline void clear_buffgroupid();
  static const int kBuffGroupIDFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& buffgroupid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_buffgroupid();
  inline ::google::protobuf::uint32 buffgroupid(int index) const;
  inline void set_buffgroupid(int index, ::google::protobuf::uint32 value);
  inline void add_buffgroupid(::google::protobuf::uint32 value);
  
  // optional uint32 ContinuedRule = 9;
  inline bool has_continuedrule() const;
  inline void clear_continuedrule();
  static const int kContinuedRuleFieldNumber = 9;
  inline ::google::protobuf::uint32 continuedrule() const;
  inline void set_continuedrule(::google::protobuf::uint32 value);
  
  // optional uint32 ContinuedTime = 10;
  inline bool has_continuedtime() const;
  inline void clear_continuedtime();
  static const int kContinuedTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 continuedtime() const;
  inline void set_continuedtime(::google::protobuf::uint32 value);
  
  // optional uint32 ContinuedNum = 11;
  inline bool has_continuednum() const;
  inline void clear_continuednum();
  static const int kContinuedNumFieldNumber = 11;
  inline ::google::protobuf::uint32 continuednum() const;
  inline void set_continuednum(::google::protobuf::uint32 value);
  
  // optional uint32 IgnoreArmor = 12;
  inline bool has_ignorearmor() const;
  inline void clear_ignorearmor();
  static const int kIgnoreArmorFieldNumber = 12;
  inline ::google::protobuf::uint32 ignorearmor() const;
  inline void set_ignorearmor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBSkill* skillinfo_;
  ::google::protobuf::uint32 skillhitrate_;
  ::google::protobuf::uint32 mindistance_;
  ::google::protobuf::uint32 maxdistance_;
  ::google::protobuf::uint32 efktmaxnum_;
  ::google::protobuf::uint32 attackrange_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > randparam_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buffgroupid_;
  ::google::protobuf::uint32 continuedrule_;
  ::google::protobuf::uint32 continuedtime_;
  ::google::protobuf::uint32 continuednum_;
  ::google::protobuf::uint32 ignorearmor_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBNormalSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBTrapSkill : public ::google::protobuf::Message {
 public:
  PBTrapSkill();
  virtual ~PBTrapSkill();
  
  PBTrapSkill(const PBTrapSkill& from);
  
  inline PBTrapSkill& operator=(const PBTrapSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTrapSkill& default_instance();
  void Swap(PBTrapSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBTrapSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTrapSkill& from);
  void MergeFrom(const PBTrapSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBSkill SkillInfo = 1;
  inline bool has_skillinfo() const;
  inline void clear_skillinfo();
  static const int kSkillInfoFieldNumber = 1;
  inline const ::PBSkill& skillinfo() const;
  inline ::PBSkill* mutable_skillinfo();
  
  // optional uint32 LastTime = 2;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint32 value);
  
  // optional uint32 ApplyType = 3;
  inline bool has_applytype() const;
  inline void clear_applytype();
  static const int kApplyTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 applytype() const;
  inline void set_applytype(::google::protobuf::uint32 value);
  
  // optional uint32 TouchRange = 4;
  inline bool has_touchrange() const;
  inline void clear_touchrange();
  static const int kTouchRangeFieldNumber = 4;
  inline ::google::protobuf::uint32 touchrange() const;
  inline void set_touchrange(::google::protobuf::uint32 value);
  
  // optional uint32 ApplyRange = 5;
  inline bool has_applyrange() const;
  inline void clear_applyrange();
  static const int kApplyRangeFieldNumber = 5;
  inline ::google::protobuf::uint32 applyrange() const;
  inline void set_applyrange(::google::protobuf::uint32 value);
  
  // optional string TrapRes = 6;
  inline bool has_trapres() const;
  inline void clear_trapres();
  static const int kTrapResFieldNumber = 6;
  inline const ::std::string& trapres() const;
  inline void set_trapres(const ::std::string& value);
  inline void set_trapres(const char* value);
  inline void set_trapres(const char* value, size_t size);
  inline ::std::string* mutable_trapres();
  
  // repeated uint32 BuffGroupID = 7;
  inline int buffgroupid_size() const;
  inline void clear_buffgroupid();
  static const int kBuffGroupIDFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& buffgroupid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_buffgroupid();
  inline ::google::protobuf::uint32 buffgroupid(int index) const;
  inline void set_buffgroupid(int index, ::google::protobuf::uint32 value);
  inline void add_buffgroupid(::google::protobuf::uint32 value);
  
  // repeated uint32 Condition = 8;
  inline int condition_size() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& condition() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_condition();
  inline ::google::protobuf::uint32 condition(int index) const;
  inline void set_condition(int index, ::google::protobuf::uint32 value);
  inline void add_condition(::google::protobuf::uint32 value);
  
  // optional uint32 EffectMaxNumber = 9;
  inline bool has_effectmaxnumber() const;
  inline void clear_effectmaxnumber();
  static const int kEffectMaxNumberFieldNumber = 9;
  inline ::google::protobuf::uint32 effectmaxnumber() const;
  inline void set_effectmaxnumber(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBSkill* skillinfo_;
  ::google::protobuf::uint32 lasttime_;
  ::google::protobuf::uint32 applytype_;
  ::google::protobuf::uint32 touchrange_;
  ::google::protobuf::uint32 applyrange_;
  ::std::string* trapres_;
  static const ::std::string _default_trapres_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buffgroupid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > condition_;
  ::google::protobuf::uint32 effectmaxnumber_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTrapSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBBuffFunc : public ::google::protobuf::Message {
 public:
  PBBuffFunc();
  virtual ~PBBuffFunc();
  
  PBBuffFunc(const PBBuffFunc& from);
  
  inline PBBuffFunc& operator=(const PBBuffFunc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBuffFunc& default_instance();
  void Swap(PBBuffFunc* other);
  
  // implements Message ----------------------------------------------
  
  PBBuffFunc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBuffFunc& from);
  void MergeFrom(const PBBuffFunc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FuncType = 1;
  inline bool has_functype() const;
  inline void clear_functype();
  static const int kFuncTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 functype() const;
  inline void set_functype(::google::protobuf::uint32 value);
  
  // repeated uint32 Parame = 2;
  inline int parame_size() const;
  inline void clear_parame();
  static const int kParameFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& parame() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_parame();
  inline ::google::protobuf::uint32 parame(int index) const;
  inline void set_parame(int index, ::google::protobuf::uint32 value);
  inline void add_parame(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 functype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > parame_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBuffFunc* default_instance_;
};
// -------------------------------------------------------------------

class PBBuff : public ::google::protobuf::Message {
 public:
  PBBuff();
  virtual ~PBBuff();
  
  PBBuff(const PBBuff& from);
  
  inline PBBuff& operator=(const PBBuff& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBuff& default_instance();
  void Swap(PBBuff* other);
  
  // implements Message ----------------------------------------------
  
  PBBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBuff& from);
  void MergeFrom(const PBBuff& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 BuffServiceID = 2;
  inline bool has_buffserviceid() const;
  inline void clear_buffserviceid();
  static const int kBuffServiceIDFieldNumber = 2;
  inline ::google::protobuf::uint32 buffserviceid() const;
  inline void set_buffserviceid(::google::protobuf::uint32 value);
  
  // optional uint32 IdenValue = 3;
  inline bool has_idenvalue() const;
  inline void clear_idenvalue();
  static const int kIdenValueFieldNumber = 3;
  inline ::google::protobuf::uint32 idenvalue() const;
  inline void set_idenvalue(::google::protobuf::uint32 value);
  
  // optional uint32 BuffStyle = 4;
  inline bool has_buffstyle() const;
  inline void clear_buffstyle();
  static const int kBuffStyleFieldNumber = 4;
  inline ::google::protobuf::uint32 buffstyle() const;
  inline void set_buffstyle(::google::protobuf::uint32 value);
  
  // optional uint32 FirstActiveTime = 5;
  inline bool has_firstactivetime() const;
  inline void clear_firstactivetime();
  static const int kFirstActiveTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 firstactivetime() const;
  inline void set_firstactivetime(::google::protobuf::uint32 value);
  
  // optional uint32 ActiveTime = 6;
  inline bool has_activetime() const;
  inline void clear_activetime();
  static const int kActiveTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 activetime() const;
  inline void set_activetime(::google::protobuf::uint32 value);
  
  // repeated .PBBuffFunc BuffFunc = 7;
  inline int bufffunc_size() const;
  inline void clear_bufffunc();
  static const int kBuffFuncFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::PBBuffFunc >& bufffunc() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBuffFunc >* mutable_bufffunc();
  inline const ::PBBuffFunc& bufffunc(int index) const;
  inline ::PBBuffFunc* mutable_bufffunc(int index);
  inline ::PBBuffFunc* add_bufffunc();
  
  // optional string BuffName = 8;
  inline bool has_buffname() const;
  inline void clear_buffname();
  static const int kBuffNameFieldNumber = 8;
  inline const ::std::string& buffname() const;
  inline void set_buffname(const ::std::string& value);
  inline void set_buffname(const char* value);
  inline void set_buffname(const char* value, size_t size);
  inline ::std::string* mutable_buffname();
  
  // optional string BuffIcon = 9;
  inline bool has_bufficon() const;
  inline void clear_bufficon();
  static const int kBuffIconFieldNumber = 9;
  inline const ::std::string& bufficon() const;
  inline void set_bufficon(const ::std::string& value);
  inline void set_bufficon(const char* value);
  inline void set_bufficon(const char* value, size_t size);
  inline ::std::string* mutable_bufficon();
  
  // optional string BuffDescribe = 10;
  inline bool has_buffdescribe() const;
  inline void clear_buffdescribe();
  static const int kBuffDescribeFieldNumber = 10;
  inline const ::std::string& buffdescribe() const;
  inline void set_buffdescribe(const ::std::string& value);
  inline void set_buffdescribe(const char* value);
  inline void set_buffdescribe(const char* value, size_t size);
  inline ::std::string* mutable_buffdescribe();
  
  // optional uint32 Hitrate = 11;
  inline bool has_hitrate() const;
  inline void clear_hitrate();
  static const int kHitrateFieldNumber = 11;
  inline ::google::protobuf::uint32 hitrate() const;
  inline void set_hitrate(::google::protobuf::uint32 value);
  
  // optional uint32 BuffValue = 12;
  inline bool has_buffvalue() const;
  inline void clear_buffvalue();
  static const int kBuffValueFieldNumber = 12;
  inline ::google::protobuf::uint32 buffvalue() const;
  inline void set_buffvalue(::google::protobuf::uint32 value);
  
  // optional uint32 ResistType = 13;
  inline bool has_resisttype() const;
  inline void clear_resisttype();
  static const int kResistTypeFieldNumber = 13;
  inline ::google::protobuf::uint32 resisttype() const;
  inline void set_resisttype(::google::protobuf::uint32 value);
  
  // optional uint32 LastTime = 14;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLastTimeFieldNumber = 14;
  inline ::google::protobuf::uint32 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint32 value);
  
  // optional uint32 BuffType = 15;
  inline bool has_bufftype() const;
  inline void clear_bufftype();
  static const int kBuffTypeFieldNumber = 15;
  inline ::google::protobuf::uint32 bufftype() const;
  inline void set_bufftype(::google::protobuf::uint32 value);
  
  // optional uint32 CancelBuff = 16;
  inline bool has_cancelbuff() const;
  inline void clear_cancelbuff();
  static const int kCancelBuffFieldNumber = 16;
  inline ::google::protobuf::uint32 cancelbuff() const;
  inline void set_cancelbuff(::google::protobuf::uint32 value);
  
  // optional uint32 EnableBattle = 17;
  inline bool has_enablebattle() const;
  inline void clear_enablebattle();
  static const int kEnableBattleFieldNumber = 17;
  inline ::google::protobuf::uint32 enablebattle() const;
  inline void set_enablebattle(::google::protobuf::uint32 value);
  
  // optional string BuffAni = 18;
  inline bool has_buffani() const;
  inline void clear_buffani();
  static const int kBuffAniFieldNumber = 18;
  inline const ::std::string& buffani() const;
  inline void set_buffani(const ::std::string& value);
  inline void set_buffani(const char* value);
  inline void set_buffani(const char* value, size_t size);
  inline ::std::string* mutable_buffani();
  
  // optional uint32 BuffRow = 19;
  inline bool has_buffrow() const;
  inline void clear_buffrow();
  static const int kBuffRowFieldNumber = 19;
  inline ::google::protobuf::uint32 buffrow() const;
  inline void set_buffrow(::google::protobuf::uint32 value);
  
  // optional uint32 BuffDieDel = 20;
  inline bool has_buffdiedel() const;
  inline void clear_buffdiedel();
  static const int kBuffDieDelFieldNumber = 20;
  inline ::google::protobuf::uint32 buffdiedel() const;
  inline void set_buffdiedel(::google::protobuf::uint32 value);
  
  // optional uint32 TimerType = 21;
  inline bool has_timertype() const;
  inline void clear_timertype();
  static const int kTimerTypeFieldNumber = 21;
  inline ::google::protobuf::uint32 timertype() const;
  inline void set_timertype(::google::protobuf::uint32 value);
  
  // optional uint32 BuffClear = 22;
  inline bool has_buffclear() const;
  inline void clear_buffclear();
  static const int kBuffClearFieldNumber = 22;
  inline ::google::protobuf::uint32 buffclear() const;
  inline void set_buffclear(::google::protobuf::uint32 value);
  
  // optional uint32 BuffMapID = 23;
  inline bool has_buffmapid() const;
  inline void clear_buffmapid();
  static const int kBuffMapIDFieldNumber = 23;
  inline ::google::protobuf::uint32 buffmapid() const;
  inline void set_buffmapid(::google::protobuf::uint32 value);
  
  // optional uint32 BuffLineID = 24;
  inline bool has_bufflineid() const;
  inline void clear_bufflineid();
  static const int kBuffLineIDFieldNumber = 24;
  inline ::google::protobuf::uint32 bufflineid() const;
  inline void set_bufflineid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillLevel = 25;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 25;
  inline ::google::protobuf::uint32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::uint32 value);
  
  // optional uint32 BuffMapType = 26;
  inline bool has_buffmaptype() const;
  inline void clear_buffmaptype();
  static const int kBuffMapTypeFieldNumber = 26;
  inline ::google::protobuf::uint32 buffmaptype() const;
  inline void set_buffmaptype(::google::protobuf::uint32 value);
  
  // optional uint32 CountryBuff = 27;
  inline bool has_countrybuff() const;
  inline void clear_countrybuff();
  static const int kCountryBuffFieldNumber = 27;
  inline ::google::protobuf::uint32 countrybuff() const;
  inline void set_countrybuff(::google::protobuf::uint32 value);
  
  // optional uint32 BuffSuperposition = 28;
  inline bool has_buffsuperposition() const;
  inline void clear_buffsuperposition();
  static const int kBuffSuperpositionFieldNumber = 28;
  inline ::google::protobuf::uint32 buffsuperposition() const;
  inline void set_buffsuperposition(::google::protobuf::uint32 value);
  
  // optional uint32 Accurate = 29;
  inline bool has_accurate() const;
  inline void clear_accurate();
  static const int kAccurateFieldNumber = 29;
  inline ::google::protobuf::uint32 accurate() const;
  inline void set_accurate(::google::protobuf::uint32 value);
  
  // optional uint32 OffRemove = 30;
  inline bool has_offremove() const;
  inline void clear_offremove();
  static const int kOffRemoveFieldNumber = 30;
  inline ::google::protobuf::uint32 offremove() const;
  inline void set_offremove(::google::protobuf::uint32 value);
  
  // optional uint32 Transform = 31;
  inline bool has_transform() const;
  inline void clear_transform();
  static const int kTransformFieldNumber = 31;
  inline ::google::protobuf::uint32 transform() const;
  inline void set_transform(::google::protobuf::uint32 value);
  
  // optional uint32 RemoveCountID = 32;
  inline bool has_removecountid() const;
  inline void clear_removecountid();
  static const int kRemoveCountIDFieldNumber = 32;
  inline ::google::protobuf::uint32 removecountid() const;
  inline void set_removecountid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 buffserviceid_;
  ::google::protobuf::uint32 idenvalue_;
  ::google::protobuf::uint32 buffstyle_;
  ::google::protobuf::uint32 firstactivetime_;
  ::google::protobuf::uint32 activetime_;
  ::google::protobuf::RepeatedPtrField< ::PBBuffFunc > bufffunc_;
  ::std::string* buffname_;
  static const ::std::string _default_buffname_;
  ::std::string* bufficon_;
  static const ::std::string _default_bufficon_;
  ::std::string* buffdescribe_;
  static const ::std::string _default_buffdescribe_;
  ::google::protobuf::uint32 hitrate_;
  ::google::protobuf::uint32 buffvalue_;
  ::google::protobuf::uint32 resisttype_;
  ::google::protobuf::uint32 lasttime_;
  ::google::protobuf::uint32 bufftype_;
  ::google::protobuf::uint32 cancelbuff_;
  ::google::protobuf::uint32 enablebattle_;
  ::std::string* buffani_;
  static const ::std::string _default_buffani_;
  ::google::protobuf::uint32 buffrow_;
  ::google::protobuf::uint32 buffdiedel_;
  ::google::protobuf::uint32 timertype_;
  ::google::protobuf::uint32 buffclear_;
  ::google::protobuf::uint32 buffmapid_;
  ::google::protobuf::uint32 bufflineid_;
  ::google::protobuf::uint32 skilllevel_;
  ::google::protobuf::uint32 buffmaptype_;
  ::google::protobuf::uint32 countrybuff_;
  ::google::protobuf::uint32 buffsuperposition_;
  ::google::protobuf::uint32 accurate_;
  ::google::protobuf::uint32 offremove_;
  ::google::protobuf::uint32 transform_;
  ::google::protobuf::uint32 removecountid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(32 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBuff* default_instance_;
};
// -------------------------------------------------------------------

class PBLevelExp : public ::google::protobuf::Message {
 public:
  PBLevelExp();
  virtual ~PBLevelExp();
  
  PBLevelExp(const PBLevelExp& from);
  
  inline PBLevelExp& operator=(const PBLevelExp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLevelExp& default_instance();
  void Swap(PBLevelExp* other);
  
  // implements Message ----------------------------------------------
  
  PBLevelExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLevelExp& from);
  void MergeFrom(const PBLevelExp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint64 LevelExp = 2;
  inline int levelexp_size() const;
  inline void clear_levelexp();
  static const int kLevelExpFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >& levelexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >* mutable_levelexp();
  inline ::google::protobuf::uint64 levelexp(int index) const;
  inline void set_levelexp(int index, ::google::protobuf::uint64 value);
  inline void add_levelexp(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > levelexp_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLevelExp* default_instance_;
};
// -------------------------------------------------------------------

class PBSingleMoneyLmt : public ::google::protobuf::Message {
 public:
  PBSingleMoneyLmt();
  virtual ~PBSingleMoneyLmt();
  
  PBSingleMoneyLmt(const PBSingleMoneyLmt& from);
  
  inline PBSingleMoneyLmt& operator=(const PBSingleMoneyLmt& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSingleMoneyLmt& default_instance();
  void Swap(PBSingleMoneyLmt* other);
  
  // implements Message ----------------------------------------------
  
  PBSingleMoneyLmt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSingleMoneyLmt& from);
  void MergeFrom(const PBSingleMoneyLmt& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 BagMoneyLmt = 1;
  inline bool has_bagmoneylmt() const;
  inline void clear_bagmoneylmt();
  static const int kBagMoneyLmtFieldNumber = 1;
  inline ::google::protobuf::uint32 bagmoneylmt() const;
  inline void set_bagmoneylmt(::google::protobuf::uint32 value);
  
  // optional uint32 BagBindMoneyLmt = 2;
  inline bool has_bagbindmoneylmt() const;
  inline void clear_bagbindmoneylmt();
  static const int kBagBindMoneyLmtFieldNumber = 2;
  inline ::google::protobuf::uint32 bagbindmoneylmt() const;
  inline void set_bagbindmoneylmt(::google::protobuf::uint32 value);
  
  // optional uint32 StorageMoneyLmt = 3;
  inline bool has_storagemoneylmt() const;
  inline void clear_storagemoneylmt();
  static const int kStorageMoneyLmtFieldNumber = 3;
  inline ::google::protobuf::uint32 storagemoneylmt() const;
  inline void set_storagemoneylmt(::google::protobuf::uint32 value);
  
  // optional uint32 StorageBindMoneyLmt = 4;
  inline bool has_storagebindmoneylmt() const;
  inline void clear_storagebindmoneylmt();
  static const int kStorageBindMoneyLmtFieldNumber = 4;
  inline ::google::protobuf::uint32 storagebindmoneylmt() const;
  inline void set_storagebindmoneylmt(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 bagmoneylmt_;
  ::google::protobuf::uint32 bagbindmoneylmt_;
  ::google::protobuf::uint32 storagemoneylmt_;
  ::google::protobuf::uint32 storagebindmoneylmt_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSingleMoneyLmt* default_instance_;
};
// -------------------------------------------------------------------

class PBLevelMoneyLmt : public ::google::protobuf::Message {
 public:
  PBLevelMoneyLmt();
  virtual ~PBLevelMoneyLmt();
  
  PBLevelMoneyLmt(const PBLevelMoneyLmt& from);
  
  inline PBLevelMoneyLmt& operator=(const PBLevelMoneyLmt& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLevelMoneyLmt& default_instance();
  void Swap(PBLevelMoneyLmt* other);
  
  // implements Message ----------------------------------------------
  
  PBLevelMoneyLmt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLevelMoneyLmt& from);
  void MergeFrom(const PBLevelMoneyLmt& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBSingleMoneyLmt LmtTable = 2;
  inline int lmttable_size() const;
  inline void clear_lmttable();
  static const int kLmtTableFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSingleMoneyLmt >& lmttable() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSingleMoneyLmt >* mutable_lmttable();
  inline const ::PBSingleMoneyLmt& lmttable(int index) const;
  inline ::PBSingleMoneyLmt* mutable_lmttable(int index);
  inline ::PBSingleMoneyLmt* add_lmttable();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBSingleMoneyLmt > lmttable_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLevelMoneyLmt* default_instance_;
};
// -------------------------------------------------------------------

class PBPetLevelExp : public ::google::protobuf::Message {
 public:
  PBPetLevelExp();
  virtual ~PBPetLevelExp();
  
  PBPetLevelExp(const PBPetLevelExp& from);
  
  inline PBPetLevelExp& operator=(const PBPetLevelExp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPetLevelExp& default_instance();
  void Swap(PBPetLevelExp* other);
  
  // implements Message ----------------------------------------------
  
  PBPetLevelExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPetLevelExp& from);
  void MergeFrom(const PBPetLevelExp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelExp = 2;
  inline int levelexp_size() const;
  inline void clear_levelexp();
  static const int kLevelExpFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& levelexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_levelexp();
  inline ::google::protobuf::uint32 levelexp(int index) const;
  inline void set_levelexp(int index, ::google::protobuf::uint32 value);
  inline void add_levelexp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelexp_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPetLevelExp* default_instance_;
};
// -------------------------------------------------------------------

class PBProduceExp : public ::google::protobuf::Message {
 public:
  PBProduceExp();
  virtual ~PBProduceExp();
  
  PBProduceExp(const PBProduceExp& from);
  
  inline PBProduceExp& operator=(const PBProduceExp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBProduceExp& default_instance();
  void Swap(PBProduceExp* other);
  
  // implements Message ----------------------------------------------
  
  PBProduceExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBProduceExp& from);
  void MergeFrom(const PBProduceExp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelExp = 2;
  inline int levelexp_size() const;
  inline void clear_levelexp();
  static const int kLevelExpFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& levelexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_levelexp();
  inline ::google::protobuf::uint32 levelexp(int index) const;
  inline void set_levelexp(int index, ::google::protobuf::uint32 value);
  inline void add_levelexp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelexp_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBProduceExp* default_instance_;
};
// -------------------------------------------------------------------

class PBUpg : public ::google::protobuf::Message {
 public:
  PBUpg();
  virtual ~PBUpg();
  
  PBUpg(const PBUpg& from);
  
  inline PBUpg& operator=(const PBUpg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBUpg& default_instance();
  void Swap(PBUpg* other);
  
  // implements Message ----------------------------------------------
  
  PBUpg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBUpg& from);
  void MergeFrom(const PBUpg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline ::google::protobuf::uint32 success() const;
  inline void set_success(::google::protobuf::uint32 value);
  
  // optional uint32 Failure = 2;
  inline bool has_failure() const;
  inline void clear_failure();
  static const int kFailureFieldNumber = 2;
  inline ::google::protobuf::uint32 failure() const;
  inline void set_failure(::google::protobuf::uint32 value);
  
  // optional uint32 Result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // optional uint32 IncLevel = 4;
  inline bool has_inclevel() const;
  inline void clear_inclevel();
  static const int kIncLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 inclevel() const;
  inline void set_inclevel(::google::protobuf::uint32 value);
  
  // optional uint32 ExtSuccess = 5;
  inline bool has_extsuccess() const;
  inline void clear_extsuccess();
  static const int kExtSuccessFieldNumber = 5;
  inline ::google::protobuf::uint32 extsuccess() const;
  inline void set_extsuccess(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 success_;
  ::google::protobuf::uint32 failure_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 inclevel_;
  ::google::protobuf::uint32 extsuccess_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBUpg* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipUpg : public ::google::protobuf::Message {
 public:
  PBEquipUpg();
  virtual ~PBEquipUpg();
  
  PBEquipUpg(const PBEquipUpg& from);
  
  inline PBEquipUpg& operator=(const PBEquipUpg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipUpg& default_instance();
  void Swap(PBEquipUpg* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipUpg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipUpg& from);
  void MergeFrom(const PBEquipUpg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBUpg EquipUpg = 2;
  inline int equipupg_size() const;
  inline void clear_equipupg();
  static const int kEquipUpgFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBUpg >& equipupg() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBUpg >* mutable_equipupg();
  inline const ::PBUpg& equipupg(int index) const;
  inline ::PBUpg* mutable_equipupg(int index);
  inline ::PBUpg* add_equipupg();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBUpg > equipupg_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBEquipUpg* default_instance_;
};
// -------------------------------------------------------------------

class PBSuitProducer : public ::google::protobuf::Message {
 public:
  PBSuitProducer();
  virtual ~PBSuitProducer();
  
  PBSuitProducer(const PBSuitProducer& from);
  
  inline PBSuitProducer& operator=(const PBSuitProducer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSuitProducer& default_instance();
  void Swap(PBSuitProducer* other);
  
  // implements Message ----------------------------------------------
  
  PBSuitProducer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSuitProducer& from);
  void MergeFrom(const PBSuitProducer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 PropertyTempID = 2;
  inline int propertytempid_size() const;
  inline void clear_propertytempid();
  static const int kPropertyTempIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& propertytempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_propertytempid();
  inline ::google::protobuf::uint32 propertytempid(int index) const;
  inline void set_propertytempid(int index, ::google::protobuf::uint32 value);
  inline void add_propertytempid(::google::protobuf::uint32 value);
  
  // repeated uint32 UpgTempID = 3;
  inline int upgtempid_size() const;
  inline void clear_upgtempid();
  static const int kUpgTempIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& upgtempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_upgtempid();
  inline ::google::protobuf::uint32 upgtempid(int index) const;
  inline void set_upgtempid(int index, ::google::protobuf::uint32 value);
  inline void add_upgtempid(::google::protobuf::uint32 value);
  
  // repeated uint32 ExtTempID = 4;
  inline int exttempid_size() const;
  inline void clear_exttempid();
  static const int kExtTempIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& exttempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_exttempid();
  inline ::google::protobuf::uint32 exttempid(int index) const;
  inline void set_exttempid(int index, ::google::protobuf::uint32 value);
  inline void add_exttempid(::google::protobuf::uint32 value);
  
  // repeated string DescribeText = 5;
  inline int describetext_size() const;
  inline void clear_describetext();
  static const int kDescribeTextFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& describetext() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_describetext();
  inline const ::std::string& describetext(int index) const;
  inline ::std::string* mutable_describetext(int index);
  inline void set_describetext(int index, const ::std::string& value);
  inline void set_describetext(int index, const char* value);
  inline void set_describetext(int index, const char* value, size_t size);
  inline ::std::string* add_describetext();
  inline void add_describetext(const ::std::string& value);
  inline void add_describetext(const char* value);
  inline void add_describetext(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propertytempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > upgtempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exttempid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> describetext_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSuitProducer* default_instance_;
};
// -------------------------------------------------------------------

class PBSuitNormal : public ::google::protobuf::Message {
 public:
  PBSuitNormal();
  virtual ~PBSuitNormal();
  
  PBSuitNormal(const PBSuitNormal& from);
  
  inline PBSuitNormal& operator=(const PBSuitNormal& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSuitNormal& default_instance();
  void Swap(PBSuitNormal* other);
  
  // implements Message ----------------------------------------------
  
  PBSuitNormal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSuitNormal& from);
  void MergeFrom(const PBSuitNormal& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // repeated uint32 EquipTempID = 3;
  inline int equiptempid_size() const;
  inline void clear_equiptempid();
  static const int kEquipTempIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& equiptempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_equiptempid();
  inline ::google::protobuf::uint32 equiptempid(int index) const;
  inline void set_equiptempid(int index, ::google::protobuf::uint32 value);
  inline void add_equiptempid(::google::protobuf::uint32 value);
  
  // optional string ActiveTitle = 4;
  inline bool has_activetitle() const;
  inline void clear_activetitle();
  static const int kActiveTitleFieldNumber = 4;
  inline const ::std::string& activetitle() const;
  inline void set_activetitle(const ::std::string& value);
  inline void set_activetitle(const char* value);
  inline void set_activetitle(const char* value, size_t size);
  inline ::std::string* mutable_activetitle();
  
  // repeated uint32 PropertyTempID = 5;
  inline int propertytempid_size() const;
  inline void clear_propertytempid();
  static const int kPropertyTempIDFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& propertytempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_propertytempid();
  inline ::google::protobuf::uint32 propertytempid(int index) const;
  inline void set_propertytempid(int index, ::google::protobuf::uint32 value);
  inline void add_propertytempid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equiptempid_;
  ::std::string* activetitle_;
  static const ::std::string _default_activetitle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propertytempid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSuitNormal* default_instance_;
};
// -------------------------------------------------------------------

class PBSpell : public ::google::protobuf::Message {
 public:
  PBSpell();
  virtual ~PBSpell();
  
  PBSpell(const PBSpell& from);
  
  inline PBSpell& operator=(const PBSpell& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSpell& default_instance();
  void Swap(PBSpell* other);
  
  // implements Message ----------------------------------------------
  
  PBSpell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSpell& from);
  void MergeFrom(const PBSpell& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 SuitID = 3;
  inline bool has_suitid() const;
  inline void clear_suitid();
  static const int kSuitIDFieldNumber = 3;
  inline ::google::protobuf::uint32 suitid() const;
  inline void set_suitid(::google::protobuf::uint32 value);
  
  // repeated uint32 LetterID = 4;
  inline int letterid_size() const;
  inline void clear_letterid();
  static const int kLetterIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& letterid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_letterid();
  inline ::google::protobuf::uint32 letterid(int index) const;
  inline void set_letterid(int index, ::google::protobuf::uint32 value);
  inline void add_letterid(::google::protobuf::uint32 value);
  
  // repeated uint32 Require = 5;
  inline int require_size() const;
  inline void clear_require();
  static const int kRequireFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& require() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_require();
  inline ::google::protobuf::uint32 require(int index) const;
  inline void set_require(int index, ::google::protobuf::uint32 value);
  inline void add_require(::google::protobuf::uint32 value);
  
  // repeated uint32 PropertyTempID = 6;
  inline int propertytempid_size() const;
  inline void clear_propertytempid();
  static const int kPropertyTempIDFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& propertytempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_propertytempid();
  inline ::google::protobuf::uint32 propertytempid(int index) const;
  inline void set_propertytempid(int index, ::google::protobuf::uint32 value);
  inline void add_propertytempid(::google::protobuf::uint32 value);
  
  // repeated string DescribeText = 7;
  inline int describetext_size() const;
  inline void clear_describetext();
  static const int kDescribeTextFieldNumber = 7;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& describetext() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_describetext();
  inline const ::std::string& describetext(int index) const;
  inline ::std::string* mutable_describetext(int index);
  inline void set_describetext(int index, const ::std::string& value);
  inline void set_describetext(int index, const char* value);
  inline void set_describetext(int index, const char* value, size_t size);
  inline ::std::string* add_describetext();
  inline void add_describetext(const ::std::string& value);
  inline void add_describetext(const char* value);
  inline void add_describetext(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 suitid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > letterid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > require_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > propertytempid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> describetext_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSpell* default_instance_;
};
// -------------------------------------------------------------------

class PBProduceEquip : public ::google::protobuf::Message {
 public:
  PBProduceEquip();
  virtual ~PBProduceEquip();
  
  PBProduceEquip(const PBProduceEquip& from);
  
  inline PBProduceEquip& operator=(const PBProduceEquip& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBProduceEquip& default_instance();
  void Swap(PBProduceEquip* other);
  
  // implements Message ----------------------------------------------
  
  PBProduceEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBProduceEquip& from);
  void MergeFrom(const PBProduceEquip& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 DetailID1 = 3;
  inline bool has_detailid1() const;
  inline void clear_detailid1();
  static const int kDetailID1FieldNumber = 3;
  inline ::google::protobuf::uint32 detailid1() const;
  inline void set_detailid1(::google::protobuf::uint32 value);
  
  // optional uint32 DetailID2 = 4;
  inline bool has_detailid2() const;
  inline void clear_detailid2();
  static const int kDetailID2FieldNumber = 4;
  inline ::google::protobuf::uint32 detailid2() const;
  inline void set_detailid2(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional string Name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 MaterialID = 7;
  inline bool has_materialid() const;
  inline void clear_materialid();
  static const int kMaterialIDFieldNumber = 7;
  inline ::google::protobuf::uint32 materialid() const;
  inline void set_materialid(::google::protobuf::uint32 value);
  
  // optional uint32 MaterialNum = 8;
  inline bool has_materialnum() const;
  inline void clear_materialnum();
  static const int kMaterialNumFieldNumber = 8;
  inline ::google::protobuf::uint32 materialnum() const;
  inline void set_materialnum(::google::protobuf::uint32 value);
  
  // optional uint32 MaterialRank = 9;
  inline bool has_materialrank() const;
  inline void clear_materialrank();
  static const int kMaterialRankFieldNumber = 9;
  inline ::google::protobuf::uint32 materialrank() const;
  inline void set_materialrank(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID1 = 10;
  inline bool has_itemid1() const;
  inline void clear_itemid1();
  static const int kItemID1FieldNumber = 10;
  inline ::google::protobuf::uint32 itemid1() const;
  inline void set_itemid1(::google::protobuf::uint32 value);
  
  // optional uint32 ItemRand1 = 11;
  inline bool has_itemrand1() const;
  inline void clear_itemrand1();
  static const int kItemRand1FieldNumber = 11;
  inline ::google::protobuf::uint32 itemrand1() const;
  inline void set_itemrand1(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID2 = 12;
  inline bool has_itemid2() const;
  inline void clear_itemid2();
  static const int kItemID2FieldNumber = 12;
  inline ::google::protobuf::uint32 itemid2() const;
  inline void set_itemid2(::google::protobuf::uint32 value);
  
  // optional uint32 ItemRand2 = 13;
  inline bool has_itemrand2() const;
  inline void clear_itemrand2();
  static const int kItemRand2FieldNumber = 13;
  inline ::google::protobuf::uint32 itemrand2() const;
  inline void set_itemrand2(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID3 = 14;
  inline bool has_itemid3() const;
  inline void clear_itemid3();
  static const int kItemID3FieldNumber = 14;
  inline ::google::protobuf::uint32 itemid3() const;
  inline void set_itemid3(::google::protobuf::uint32 value);
  
  // optional uint32 ItemRand3 = 15;
  inline bool has_itemrand3() const;
  inline void clear_itemrand3();
  static const int kItemRand3FieldNumber = 15;
  inline ::google::protobuf::uint32 itemrand3() const;
  inline void set_itemrand3(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 16;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 16;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 BindMoney = 17;
  inline bool has_bindmoney() const;
  inline void clear_bindmoney();
  static const int kBindMoneyFieldNumber = 17;
  inline ::google::protobuf::uint32 bindmoney() const;
  inline void set_bindmoney(::google::protobuf::uint32 value);
  
  // optional uint32 IconID = 18;
  inline bool has_iconid() const;
  inline void clear_iconid();
  static const int kIconIDFieldNumber = 18;
  inline ::google::protobuf::uint32 iconid() const;
  inline void set_iconid(::google::protobuf::uint32 value);
  
  // optional string Describe = 19;
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 19;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const char* value, size_t size);
  inline ::std::string* mutable_describe();
  
  // optional uint32 Exp = 20;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 20;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 detailid1_;
  ::google::protobuf::uint32 detailid2_;
  ::google::protobuf::uint32 level_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 materialid_;
  ::google::protobuf::uint32 materialnum_;
  ::google::protobuf::uint32 materialrank_;
  ::google::protobuf::uint32 itemid1_;
  ::google::protobuf::uint32 itemrand1_;
  ::google::protobuf::uint32 itemid2_;
  ::google::protobuf::uint32 itemrand2_;
  ::google::protobuf::uint32 itemid3_;
  ::google::protobuf::uint32 itemrand3_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 bindmoney_;
  ::google::protobuf::uint32 iconid_;
  ::std::string* describe_;
  static const ::std::string _default_describe_;
  ::google::protobuf::uint32 exp_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBProduceEquip* default_instance_;
};
// -------------------------------------------------------------------

class PBProducePhysic : public ::google::protobuf::Message {
 public:
  PBProducePhysic();
  virtual ~PBProducePhysic();
  
  PBProducePhysic(const PBProducePhysic& from);
  
  inline PBProducePhysic& operator=(const PBProducePhysic& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBProducePhysic& default_instance();
  void Swap(PBProducePhysic* other);
  
  // implements Message ----------------------------------------------
  
  PBProducePhysic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBProducePhysic& from);
  void MergeFrom(const PBProducePhysic& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional string Name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 MaterialID = 5;
  inline bool has_materialid() const;
  inline void clear_materialid();
  static const int kMaterialIDFieldNumber = 5;
  inline ::google::protobuf::uint32 materialid() const;
  inline void set_materialid(::google::protobuf::uint32 value);
  
  // optional uint32 MaterialNum = 6;
  inline bool has_materialnum() const;
  inline void clear_materialnum();
  static const int kMaterialNumFieldNumber = 6;
  inline ::google::protobuf::uint32 materialnum() const;
  inline void set_materialnum(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 7;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 7;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 Exp = 8;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 8;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 9;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 9;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 BindMoney = 10;
  inline bool has_bindmoney() const;
  inline void clear_bindmoney();
  static const int kBindMoneyFieldNumber = 10;
  inline ::google::protobuf::uint32 bindmoney() const;
  inline void set_bindmoney(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 materialid_;
  ::google::protobuf::uint32 materialnum_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 bindmoney_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBProducePhysic* default_instance_;
};
// -------------------------------------------------------------------

class PBOpenSlot : public ::google::protobuf::Message {
 public:
  PBOpenSlot();
  virtual ~PBOpenSlot();
  
  PBOpenSlot(const PBOpenSlot& from);
  
  inline PBOpenSlot& operator=(const PBOpenSlot& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOpenSlot& default_instance();
  void Swap(PBOpenSlot* other);
  
  // implements Message ----------------------------------------------
  
  PBOpenSlot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOpenSlot& from);
  void MergeFrom(const PBOpenSlot& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 SlotLevel = 2;
  inline int slotlevel_size() const;
  inline void clear_slotlevel();
  static const int kSlotLevelFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slotlevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slotlevel();
  inline ::google::protobuf::uint32 slotlevel(int index) const;
  inline void set_slotlevel(int index, ::google::protobuf::uint32 value);
  inline void add_slotlevel(::google::protobuf::uint32 value);
  
  // repeated uint32 SlotNumber = 3;
  inline int slotnumber_size() const;
  inline void clear_slotnumber();
  static const int kSlotNumberFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slotnumber() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slotnumber();
  inline ::google::protobuf::uint32 slotnumber(int index) const;
  inline void set_slotnumber(int index, ::google::protobuf::uint32 value);
  inline void add_slotnumber(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slotlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slotnumber_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOpenSlot* default_instance_;
};
// -------------------------------------------------------------------

class PBCompose : public ::google::protobuf::Message {
 public:
  PBCompose();
  virtual ~PBCompose();
  
  PBCompose(const PBCompose& from);
  
  inline PBCompose& operator=(const PBCompose& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCompose& default_instance();
  void Swap(PBCompose* other);
  
  // implements Message ----------------------------------------------
  
  PBCompose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCompose& from);
  void MergeFrom(const PBCompose& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 MaterialID = 2;
  inline bool has_materialid() const;
  inline void clear_materialid();
  static const int kMaterialIDFieldNumber = 2;
  inline ::google::protobuf::uint32 materialid() const;
  inline void set_materialid(::google::protobuf::uint32 value);
  
  // optional uint32 MaterialNum = 3;
  inline bool has_materialnum() const;
  inline void clear_materialnum();
  static const int kMaterialNumFieldNumber = 3;
  inline ::google::protobuf::uint32 materialnum() const;
  inline void set_materialnum(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 4;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 4;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 5;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 materialid_;
  ::google::protobuf::uint32 materialnum_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCompose* default_instance_;
};
// -------------------------------------------------------------------

class PBMultiCompose : public ::google::protobuf::Message {
 public:
  PBMultiCompose();
  virtual ~PBMultiCompose();
  
  PBMultiCompose(const PBMultiCompose& from);
  
  inline PBMultiCompose& operator=(const PBMultiCompose& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMultiCompose& default_instance();
  void Swap(PBMultiCompose* other);
  
  // implements Message ----------------------------------------------
  
  PBMultiCompose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMultiCompose& from);
  void MergeFrom(const PBMultiCompose& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Describe = 2;
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 2;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const char* value, size_t size);
  inline ::std::string* mutable_describe();
  
  // repeated uint32 MaterialID = 3;
  inline int materialid_size() const;
  inline void clear_materialid();
  static const int kMaterialIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& materialid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_materialid();
  inline ::google::protobuf::uint32 materialid(int index) const;
  inline void set_materialid(int index, ::google::protobuf::uint32 value);
  inline void add_materialid(::google::protobuf::uint32 value);
  
  // repeated uint32 MaterialNum = 4;
  inline int materialnum_size() const;
  inline void clear_materialnum();
  static const int kMaterialNumFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& materialnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_materialnum();
  inline ::google::protobuf::uint32 materialnum(int index) const;
  inline void set_materialnum(int index, ::google::protobuf::uint32 value);
  inline void add_materialnum(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemID = 5;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemid();
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemNum = 6;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemnum();
  inline ::google::protobuf::uint32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::uint32 value);
  inline void add_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 Exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);
  
  // optional uint32 Order = 8;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 8;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkillType = 9;
  inline bool has_lifeskilltype() const;
  inline void clear_lifeskilltype();
  static const int kLifeSkillTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 lifeskilltype() const;
  inline void set_lifeskilltype(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkillKind = 10;
  inline bool has_lifeskillkind() const;
  inline void clear_lifeskillkind();
  static const int kLifeSkillKindFieldNumber = 10;
  inline ::google::protobuf::uint32 lifeskillkind() const;
  inline void set_lifeskillkind(::google::protobuf::uint32 value);
  
  // optional uint32 SpecializedDegree = 11;
  inline bool has_specializeddegree() const;
  inline void clear_specializeddegree();
  static const int kSpecializedDegreeFieldNumber = 11;
  inline ::google::protobuf::uint32 specializeddegree() const;
  inline void set_specializeddegree(::google::protobuf::uint32 value);
  
  // optional uint32 LifeComposeType = 12;
  inline bool has_lifecomposetype() const;
  inline void clear_lifecomposetype();
  static const int kLifeComposeTypeFieldNumber = 12;
  inline ::google::protobuf::uint32 lifecomposetype() const;
  inline void set_lifecomposetype(::google::protobuf::uint32 value);
  
  // optional uint32 CreatValue = 13;
  inline bool has_creatvalue() const;
  inline void clear_creatvalue();
  static const int kCreatValueFieldNumber = 13;
  inline ::google::protobuf::uint32 creatvalue() const;
  inline void set_creatvalue(::google::protobuf::uint32 value);
  
  // optional uint32 StudyMoney = 14;
  inline bool has_studymoney() const;
  inline void clear_studymoney();
  static const int kStudyMoneyFieldNumber = 14;
  inline ::google::protobuf::uint32 studymoney() const;
  inline void set_studymoney(::google::protobuf::uint32 value);
  
  // optional uint32 SkillCreatDegree = 15;
  inline bool has_skillcreatdegree() const;
  inline void clear_skillcreatdegree();
  static const int kSkillCreatDegreeFieldNumber = 15;
  inline ::google::protobuf::uint32 skillcreatdegree() const;
  inline void set_skillcreatdegree(::google::protobuf::uint32 value);
  
  // repeated uint32 value = 16;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 16;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_value();
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  
  // repeated uint32 Probality = 17;
  inline int probality_size() const;
  inline void clear_probality();
  static const int kProbalityFieldNumber = 17;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& probality() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_probality();
  inline ::google::protobuf::uint32 probality(int index) const;
  inline void set_probality(int index, ::google::protobuf::uint32 value);
  inline void add_probality(::google::protobuf::uint32 value);
  
  // repeated uint32 DegreeValue = 18;
  inline int degreevalue_size() const;
  inline void clear_degreevalue();
  static const int kDegreeValueFieldNumber = 18;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& degreevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_degreevalue();
  inline ::google::protobuf::uint32 degreevalue(int index) const;
  inline void set_degreevalue(int index, ::google::protobuf::uint32 value);
  inline void add_degreevalue(::google::protobuf::uint32 value);
  
  // optional uint32 ApNeedCost = 19;
  inline bool has_apneedcost() const;
  inline void clear_apneedcost();
  static const int kApNeedCostFieldNumber = 19;
  inline ::google::protobuf::uint32 apneedcost() const;
  inline void set_apneedcost(::google::protobuf::uint32 value);
  
  // optional uint32 UsedTimes = 20;
  inline bool has_usedtimes() const;
  inline void clear_usedtimes();
  static const int kUsedTimesFieldNumber = 20;
  inline ::google::protobuf::uint32 usedtimes() const;
  inline void set_usedtimes(::google::protobuf::uint32 value);
  
  // optional uint32 MinValue = 21;
  inline bool has_minvalue() const;
  inline void clear_minvalue();
  static const int kMinValueFieldNumber = 21;
  inline ::google::protobuf::uint32 minvalue() const;
  inline void set_minvalue(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeType = 22;
  inline bool has_composetype() const;
  inline void clear_composetype();
  static const int kComposeTypeFieldNumber = 22;
  inline ::google::protobuf::uint32 composetype() const;
  inline void set_composetype(::google::protobuf::uint32 value);
  
  // optional uint32 EquipMetierType = 23;
  inline bool has_equipmetiertype() const;
  inline void clear_equipmetiertype();
  static const int kEquipMetierTypeFieldNumber = 23;
  inline ::google::protobuf::uint32 equipmetiertype() const;
  inline void set_equipmetiertype(::google::protobuf::uint32 value);
  
  // optional uint32 SrcEquipID = 24;
  inline bool has_srcequipid() const;
  inline void clear_srcequipid();
  static const int kSrcEquipIDFieldNumber = 24;
  inline ::google::protobuf::uint32 srcequipid() const;
  inline void set_srcequipid(::google::protobuf::uint32 value);
  
  // optional uint32 DesEquipID = 25;
  inline bool has_desequipid() const;
  inline void clear_desequipid();
  static const int kDesEquipIDFieldNumber = 25;
  inline ::google::protobuf::uint32 desequipid() const;
  inline void set_desequipid(::google::protobuf::uint32 value);
  
  // optional uint32 Contribute = 26;
  inline bool has_contribute() const;
  inline void clear_contribute();
  static const int kContributeFieldNumber = 26;
  inline ::google::protobuf::uint32 contribute() const;
  inline void set_contribute(::google::protobuf::uint32 value);
  
  // repeated uint32 UpgItemID = 27;
  inline int upgitemid_size() const;
  inline void clear_upgitemid();
  static const int kUpgItemIDFieldNumber = 27;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& upgitemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_upgitemid();
  inline ::google::protobuf::uint32 upgitemid(int index) const;
  inline void set_upgitemid(int index, ::google::protobuf::uint32 value);
  inline void add_upgitemid(::google::protobuf::uint32 value);
  
  // repeated uint32 UpgItemNum = 28;
  inline int upgitemnum_size() const;
  inline void clear_upgitemnum();
  static const int kUpgItemNumFieldNumber = 28;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& upgitemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_upgitemnum();
  inline ::google::protobuf::uint32 upgitemnum(int index) const;
  inline void set_upgitemnum(int index, ::google::protobuf::uint32 value);
  inline void add_upgitemnum(::google::protobuf::uint32 value);
  
  // repeated uint32 NeedValueType = 29;
  inline int needvaluetype_size() const;
  inline void clear_needvaluetype();
  static const int kNeedValueTypeFieldNumber = 29;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& needvaluetype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_needvaluetype();
  inline ::google::protobuf::uint32 needvaluetype(int index) const;
  inline void set_needvaluetype(int index, ::google::protobuf::uint32 value);
  inline void add_needvaluetype(::google::protobuf::uint32 value);
  
  // repeated uint32 NeedValue = 30;
  inline int needvalue_size() const;
  inline void clear_needvalue();
  static const int kNeedValueFieldNumber = 30;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& needvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_needvalue();
  inline ::google::protobuf::uint32 needvalue(int index) const;
  inline void set_needvalue(int index, ::google::protobuf::uint32 value);
  inline void add_needvalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* describe_;
  static const ::std::string _default_describe_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > materialid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > materialnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemnum_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 lifeskilltype_;
  ::google::protobuf::uint32 lifeskillkind_;
  ::google::protobuf::uint32 specializeddegree_;
  ::google::protobuf::uint32 lifecomposetype_;
  ::google::protobuf::uint32 creatvalue_;
  ::google::protobuf::uint32 studymoney_;
  ::google::protobuf::uint32 skillcreatdegree_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > probality_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > degreevalue_;
  ::google::protobuf::uint32 apneedcost_;
  ::google::protobuf::uint32 usedtimes_;
  ::google::protobuf::uint32 minvalue_;
  ::google::protobuf::uint32 composetype_;
  ::google::protobuf::uint32 equipmetiertype_;
  ::google::protobuf::uint32 srcequipid_;
  ::google::protobuf::uint32 desequipid_;
  ::google::protobuf::uint32 contribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > upgitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > upgitemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > needvaluetype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > needvalue_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMultiCompose* default_instance_;
};
// -------------------------------------------------------------------

class PBTeleTable : public ::google::protobuf::Message {
 public:
  PBTeleTable();
  virtual ~PBTeleTable();
  
  PBTeleTable(const PBTeleTable& from);
  
  inline PBTeleTable& operator=(const PBTeleTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeleTable& default_instance();
  void Swap(PBTeleTable* other);
  
  // implements Message ----------------------------------------------
  
  PBTeleTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeleTable& from);
  void MergeFrom(const PBTeleTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 LineID = 2;
  inline int lineid_size() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lineid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lineid();
  inline ::google::protobuf::uint32 lineid(int index) const;
  inline void set_lineid(int index, ::google::protobuf::uint32 value);
  inline void add_lineid(::google::protobuf::uint32 value);
  
  // repeated uint32 MapID = 3;
  inline int mapid_size() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mapid();
  inline ::google::protobuf::uint32 mapid(int index) const;
  inline void set_mapid(int index, ::google::protobuf::uint32 value);
  inline void add_mapid(::google::protobuf::uint32 value);
  
  // repeated uint32 PosX = 4;
  inline int posx_size() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& posx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_posx();
  inline ::google::protobuf::uint32 posx(int index) const;
  inline void set_posx(int index, ::google::protobuf::uint32 value);
  inline void add_posx(::google::protobuf::uint32 value);
  
  // repeated uint32 PosY = 5;
  inline int posy_size() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& posy() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_posy();
  inline ::google::protobuf::uint32 posy(int index) const;
  inline void set_posy(int index, ::google::protobuf::uint32 value);
  inline void add_posy(::google::protobuf::uint32 value);
  
  // repeated string Describe = 6;
  inline int describe_size() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& describe() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_describe();
  inline const ::std::string& describe(int index) const;
  inline ::std::string* mutable_describe(int index);
  inline void set_describe(int index, const ::std::string& value);
  inline void set_describe(int index, const char* value);
  inline void set_describe(int index, const char* value, size_t size);
  inline ::std::string* add_describe();
  inline void add_describe(const ::std::string& value);
  inline void add_describe(const char* value);
  inline void add_describe(const char* value, size_t size);
  
  // repeated uint32 Money = 7;
  inline int money_size() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& money() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_money();
  inline ::google::protobuf::uint32 money(int index) const;
  inline void set_money(int index, ::google::protobuf::uint32 value);
  inline void add_money(::google::protobuf::uint32 value);
  
  // optional uint32 BindMoney = 8;
  inline bool has_bindmoney() const;
  inline void clear_bindmoney();
  static const int kBindMoneyFieldNumber = 8;
  inline ::google::protobuf::uint32 bindmoney() const;
  inline void set_bindmoney(::google::protobuf::uint32 value);
  
  // repeated uint32 NeedTempID = 9;
  inline int needtempid_size() const;
  inline void clear_needtempid();
  static const int kNeedTempIDFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& needtempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_needtempid();
  inline ::google::protobuf::uint32 needtempid(int index) const;
  inline void set_needtempid(int index, ::google::protobuf::uint32 value);
  inline void add_needtempid(::google::protobuf::uint32 value);
  
  // repeated uint32 NeedBuffID = 10;
  inline int needbuffid_size() const;
  inline void clear_needbuffid();
  static const int kNeedBuffIDFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& needbuffid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_needbuffid();
  inline ::google::protobuf::uint32 needbuffid(int index) const;
  inline void set_needbuffid(int index, ::google::protobuf::uint32 value);
  inline void add_needbuffid(::google::protobuf::uint32 value);
  
  // repeated uint32 NeedLevel = 11;
  inline int needlevel_size() const;
  inline void clear_needlevel();
  static const int kNeedLevelFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& needlevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_needlevel();
  inline ::google::protobuf::uint32 needlevel(int index) const;
  inline void set_needlevel(int index, ::google::protobuf::uint32 value);
  inline void add_needlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lineid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > posx_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > posy_;
  ::google::protobuf::RepeatedPtrField< ::std::string> describe_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > money_;
  ::google::protobuf::uint32 bindmoney_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > needtempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > needbuffid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > needlevel_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTeleTable* default_instance_;
};
// -------------------------------------------------------------------

class PBData : public ::google::protobuf::Message {
 public:
  PBData();
  virtual ~PBData();
  
  PBData(const PBData& from);
  
  inline PBData& operator=(const PBData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBData& default_instance();
  void Swap(PBData* other);
  
  // implements Message ----------------------------------------------
  
  PBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBData& from);
  void MergeFrom(const PBData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelFix = 2;
  inline int levelfix_size() const;
  inline void clear_levelfix();
  static const int kLevelFixFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& levelfix() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_levelfix();
  inline ::google::protobuf::uint32 levelfix(int index) const;
  inline void set_levelfix(int index, ::google::protobuf::uint32 value);
  inline void add_levelfix(::google::protobuf::uint32 value);
  
  // repeated uint32 TeamFix = 3;
  inline int teamfix_size() const;
  inline void clear_teamfix();
  static const int kTeamFixFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& teamfix() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_teamfix();
  inline ::google::protobuf::uint32 teamfix(int index) const;
  inline void set_teamfix(int index, ::google::protobuf::uint32 value);
  inline void add_teamfix(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelfix_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teamfix_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBData* default_instance_;
};
// -------------------------------------------------------------------

class PBPetData : public ::google::protobuf::Message {
 public:
  PBPetData();
  virtual ~PBPetData();
  
  PBPetData(const PBPetData& from);
  
  inline PBPetData& operator=(const PBPetData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPetData& default_instance();
  void Swap(PBPetData* other);
  
  // implements Message ----------------------------------------------
  
  PBPetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPetData& from);
  void MergeFrom(const PBPetData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 NameColor = 1;
  inline bool has_namecolor() const;
  inline void clear_namecolor();
  static const int kNameColorFieldNumber = 1;
  inline ::google::protobuf::uint32 namecolor() const;
  inline void set_namecolor(::google::protobuf::uint32 value);
  
  // optional uint32 AttackType = 2;
  inline bool has_attacktype() const;
  inline void clear_attacktype();
  static const int kAttackTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 attacktype() const;
  inline void set_attacktype(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackUp = 3;
  inline bool has_pattackup() const;
  inline void clear_pattackup();
  static const int kPAttackUpFieldNumber = 3;
  inline ::google::protobuf::uint32 pattackup() const;
  inline void set_pattackup(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackLow = 4;
  inline bool has_pattacklow() const;
  inline void clear_pattacklow();
  static const int kPAttackLowFieldNumber = 4;
  inline ::google::protobuf::uint32 pattacklow() const;
  inline void set_pattacklow(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackUp = 5;
  inline bool has_mattackup() const;
  inline void clear_mattackup();
  static const int kMAttackUpFieldNumber = 5;
  inline ::google::protobuf::uint32 mattackup() const;
  inline void set_mattackup(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackLow = 6;
  inline bool has_mattacklow() const;
  inline void clear_mattacklow();
  static const int kMAttackLowFieldNumber = 6;
  inline ::google::protobuf::uint32 mattacklow() const;
  inline void set_mattacklow(::google::protobuf::uint32 value);
  
  // optional uint32 Speed = 7;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 7;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);
  
  // optional uint32 PDefence = 8;
  inline bool has_pdefence() const;
  inline void clear_pdefence();
  static const int kPDefenceFieldNumber = 8;
  inline ::google::protobuf::uint32 pdefence() const;
  inline void set_pdefence(::google::protobuf::uint32 value);
  
  // optional uint32 MDefence = 9;
  inline bool has_mdefence() const;
  inline void clear_mdefence();
  static const int kMDefenceFieldNumber = 9;
  inline ::google::protobuf::uint32 mdefence() const;
  inline void set_mdefence(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHP = 10;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxHPFieldNumber = 10;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);
  
  // optional uint32 HPRSpeed = 11;
  inline bool has_hprspeed() const;
  inline void clear_hprspeed();
  static const int kHPRSpeedFieldNumber = 11;
  inline ::google::protobuf::uint32 hprspeed() const;
  inline void set_hprspeed(::google::protobuf::uint32 value);
  
  // optional uint32 DeathRate = 12;
  inline bool has_deathrate() const;
  inline void clear_deathrate();
  static const int kDeathRateFieldNumber = 12;
  inline ::google::protobuf::uint32 deathrate() const;
  inline void set_deathrate(::google::protobuf::uint32 value);
  
  // optional uint32 DeathValue = 13;
  inline bool has_deathvalue() const;
  inline void clear_deathvalue();
  static const int kDeathValueFieldNumber = 13;
  inline ::google::protobuf::uint32 deathvalue() const;
  inline void set_deathvalue(::google::protobuf::uint32 value);
  
  // optional uint32 NormalDuck = 14;
  inline bool has_normalduck() const;
  inline void clear_normalduck();
  static const int kNormalDuckFieldNumber = 14;
  inline ::google::protobuf::uint32 normalduck() const;
  inline void set_normalduck(::google::protobuf::uint32 value);
  
  // optional uint32 SkillDuck = 15;
  inline bool has_skillduck() const;
  inline void clear_skillduck();
  static const int kSkillDuckFieldNumber = 15;
  inline ::google::protobuf::uint32 skillduck() const;
  inline void set_skillduck(::google::protobuf::uint32 value);
  
  // optional uint32 SkillID = 16;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 16;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillLevel = 17;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 17;
  inline ::google::protobuf::uint32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::uint32 value);
  
  // optional uint32 PAttackRange = 18;
  inline bool has_pattackrange() const;
  inline void clear_pattackrange();
  static const int kPAttackRangeFieldNumber = 18;
  inline ::google::protobuf::uint32 pattackrange() const;
  inline void set_pattackrange(::google::protobuf::uint32 value);
  
  // optional uint32 MAttackRange = 19;
  inline bool has_mattackrange() const;
  inline void clear_mattackrange();
  static const int kMAttackRangeFieldNumber = 19;
  inline ::google::protobuf::uint32 mattackrange() const;
  inline void set_mattackrange(::google::protobuf::uint32 value);
  
  // optional uint32 PReducePer = 20;
  inline bool has_preduceper() const;
  inline void clear_preduceper();
  static const int kPReducePerFieldNumber = 20;
  inline ::google::protobuf::uint32 preduceper() const;
  inline void set_preduceper(::google::protobuf::uint32 value);
  
  // optional uint32 MReducePer = 21;
  inline bool has_mreduceper() const;
  inline void clear_mreduceper();
  static const int kMReducePerFieldNumber = 21;
  inline ::google::protobuf::uint32 mreduceper() const;
  inline void set_mreduceper(::google::protobuf::uint32 value);
  
  // optional uint32 DeathDefense = 22;
  inline bool has_deathdefense() const;
  inline void clear_deathdefense();
  static const int kDeathDefenseFieldNumber = 22;
  inline ::google::protobuf::uint32 deathdefense() const;
  inline void set_deathdefense(::google::protobuf::uint32 value);
  
  // optional uint32 IgnoreDuck = 23;
  inline bool has_ignoreduck() const;
  inline void clear_ignoreduck();
  static const int kIgnoreDuckFieldNumber = 23;
  inline ::google::protobuf::uint32 ignoreduck() const;
  inline void set_ignoreduck(::google::protobuf::uint32 value);
  
  // repeated uint32 ResDef = 24;
  inline int resdef_size() const;
  inline void clear_resdef();
  static const int kResDefFieldNumber = 24;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resdef() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resdef();
  inline ::google::protobuf::uint32 resdef(int index) const;
  inline void set_resdef(int index, ::google::protobuf::uint32 value);
  inline void add_resdef(::google::protobuf::uint32 value);
  
  // repeated uint32 ResAtt = 25;
  inline int resatt_size() const;
  inline void clear_resatt();
  static const int kResAttFieldNumber = 25;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resatt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resatt();
  inline ::google::protobuf::uint32 resatt(int index) const;
  inline void set_resatt(int index, ::google::protobuf::uint32 value);
  inline void add_resatt(::google::protobuf::uint32 value);
  
  // optional uint32 AttPercent = 26;
  inline bool has_attpercent() const;
  inline void clear_attpercent();
  static const int kAttPercentFieldNumber = 26;
  inline ::google::protobuf::uint32 attpercent() const;
  inline void set_attpercent(::google::protobuf::uint32 value);
  
  // optional uint32 DefPercent = 27;
  inline bool has_defpercent() const;
  inline void clear_defpercent();
  static const int kDefPercentFieldNumber = 27;
  inline ::google::protobuf::uint32 defpercent() const;
  inline void set_defpercent(::google::protobuf::uint32 value);
  
  // optional uint32 HPPercent = 28;
  inline bool has_hppercent() const;
  inline void clear_hppercent();
  static const int kHPPercentFieldNumber = 28;
  inline ::google::protobuf::uint32 hppercent() const;
  inline void set_hppercent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 namecolor_;
  ::google::protobuf::uint32 attacktype_;
  ::google::protobuf::uint32 pattackup_;
  ::google::protobuf::uint32 pattacklow_;
  ::google::protobuf::uint32 mattackup_;
  ::google::protobuf::uint32 mattacklow_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 pdefence_;
  ::google::protobuf::uint32 mdefence_;
  ::google::protobuf::uint32 maxhp_;
  ::google::protobuf::uint32 hprspeed_;
  ::google::protobuf::uint32 deathrate_;
  ::google::protobuf::uint32 deathvalue_;
  ::google::protobuf::uint32 normalduck_;
  ::google::protobuf::uint32 skillduck_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 skilllevel_;
  ::google::protobuf::uint32 pattackrange_;
  ::google::protobuf::uint32 mattackrange_;
  ::google::protobuf::uint32 preduceper_;
  ::google::protobuf::uint32 mreduceper_;
  ::google::protobuf::uint32 deathdefense_;
  ::google::protobuf::uint32 ignoreduck_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resdef_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resatt_;
  ::google::protobuf::uint32 attpercent_;
  ::google::protobuf::uint32 defpercent_;
  ::google::protobuf::uint32 hppercent_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(28 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPetData* default_instance_;
};
// -------------------------------------------------------------------

class PBSummonBeast : public ::google::protobuf::Message {
 public:
  PBSummonBeast();
  virtual ~PBSummonBeast();
  
  PBSummonBeast(const PBSummonBeast& from);
  
  inline PBSummonBeast& operator=(const PBSummonBeast& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSummonBeast& default_instance();
  void Swap(PBSummonBeast* other);
  
  // implements Message ----------------------------------------------
  
  PBSummonBeast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSummonBeast& from);
  void MergeFrom(const PBSummonBeast& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string Model = 3;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 3;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  
  // optional uint32 Level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelUpDelayTime = 5;
  inline int levelupdelaytime_size() const;
  inline void clear_levelupdelaytime();
  static const int kLevelUpDelayTimeFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& levelupdelaytime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_levelupdelaytime();
  inline ::google::protobuf::uint32 levelupdelaytime(int index) const;
  inline void set_levelupdelaytime(int index, ::google::protobuf::uint32 value);
  inline void add_levelupdelaytime(::google::protobuf::uint32 value);
  
  // repeated .PBPetData PetData = 6;
  inline int petdata_size() const;
  inline void clear_petdata();
  static const int kPetDataFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPetData >& petdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPetData >* mutable_petdata();
  inline const ::PBPetData& petdata(int index) const;
  inline ::PBPetData* mutable_petdata(int index);
  inline ::PBPetData* add_petdata();
  
  // optional uint32 AttackFrequency = 7;
  inline bool has_attackfrequency() const;
  inline void clear_attackfrequency();
  static const int kAttackFrequencyFieldNumber = 7;
  inline ::google::protobuf::uint32 attackfrequency() const;
  inline void set_attackfrequency(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* model_;
  static const ::std::string _default_model_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelupdelaytime_;
  ::google::protobuf::RepeatedPtrField< ::PBPetData > petdata_;
  ::google::protobuf::uint32 attackfrequency_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSummonBeast* default_instance_;
};
// -------------------------------------------------------------------

class PBBeginner : public ::google::protobuf::Message {
 public:
  PBBeginner();
  virtual ~PBBeginner();
  
  PBBeginner(const PBBeginner& from);
  
  inline PBBeginner& operator=(const PBBeginner& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBeginner& default_instance();
  void Swap(PBBeginner* other);
  
  // implements Message ----------------------------------------------
  
  PBBeginner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBeginner& from);
  void MergeFrom(const PBBeginner& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 EquipItemID = 2;
  inline int equipitemid_size() const;
  inline void clear_equipitemid();
  static const int kEquipItemIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& equipitemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_equipitemid();
  inline ::google::protobuf::uint32 equipitemid(int index) const;
  inline void set_equipitemid(int index, ::google::protobuf::uint32 value);
  inline void add_equipitemid(::google::protobuf::uint32 value);
  
  // repeated uint32 EquipItemNum = 3;
  inline int equipitemnum_size() const;
  inline void clear_equipitemnum();
  static const int kEquipItemNumFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& equipitemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_equipitemnum();
  inline ::google::protobuf::uint32 equipitemnum(int index) const;
  inline void set_equipitemnum(int index, ::google::protobuf::uint32 value);
  inline void add_equipitemnum(::google::protobuf::uint32 value);
  
  // repeated uint32 BaggageItemID = 4;
  inline int baggageitemid_size() const;
  inline void clear_baggageitemid();
  static const int kBaggageItemIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& baggageitemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_baggageitemid();
  inline ::google::protobuf::uint32 baggageitemid(int index) const;
  inline void set_baggageitemid(int index, ::google::protobuf::uint32 value);
  inline void add_baggageitemid(::google::protobuf::uint32 value);
  
  // repeated uint32 BaggageItemNum = 5;
  inline int baggageitemnum_size() const;
  inline void clear_baggageitemnum();
  static const int kBaggageItemNumFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& baggageitemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_baggageitemnum();
  inline ::google::protobuf::uint32 baggageitemnum(int index) const;
  inline void set_baggageitemnum(int index, ::google::protobuf::uint32 value);
  inline void add_baggageitemnum(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillID = 6;
  inline int skillid_size() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skillid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skillid();
  inline ::google::protobuf::uint32 skillid(int index) const;
  inline void set_skillid(int index, ::google::protobuf::uint32 value);
  inline void add_skillid(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillLevel = 7;
  inline int skilllevel_size() const;
  inline void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skilllevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skilllevel();
  inline ::google::protobuf::uint32 skilllevel(int index) const;
  inline void set_skilllevel(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel(::google::protobuf::uint32 value);
  
  // optional uint32 StrNum = 8;
  inline bool has_strnum() const;
  inline void clear_strnum();
  static const int kStrNumFieldNumber = 8;
  inline ::google::protobuf::uint32 strnum() const;
  inline void set_strnum(::google::protobuf::uint32 value);
  
  // optional uint32 ConNum = 9;
  inline bool has_connum() const;
  inline void clear_connum();
  static const int kConNumFieldNumber = 9;
  inline ::google::protobuf::uint32 connum() const;
  inline void set_connum(::google::protobuf::uint32 value);
  
  // optional uint32 StaNum = 10;
  inline bool has_stanum() const;
  inline void clear_stanum();
  static const int kStaNumFieldNumber = 10;
  inline ::google::protobuf::uint32 stanum() const;
  inline void set_stanum(::google::protobuf::uint32 value);
  
  // optional uint32 WisNum = 11;
  inline bool has_wisnum() const;
  inline void clear_wisnum();
  static const int kWisNumFieldNumber = 11;
  inline ::google::protobuf::uint32 wisnum() const;
  inline void set_wisnum(::google::protobuf::uint32 value);
  
  // optional uint32 SprNum = 12;
  inline bool has_sprnum() const;
  inline void clear_sprnum();
  static const int kSprNumFieldNumber = 12;
  inline ::google::protobuf::uint32 sprnum() const;
  inline void set_sprnum(::google::protobuf::uint32 value);
  
  // optional uint32 SkillNum = 13;
  inline bool has_skillnum() const;
  inline void clear_skillnum();
  static const int kSkillNumFieldNumber = 13;
  inline ::google::protobuf::uint32 skillnum() const;
  inline void set_skillnum(::google::protobuf::uint32 value);
  
  // optional uint32 PoxX1 = 14;
  inline bool has_poxx1() const;
  inline void clear_poxx1();
  static const int kPoxX1FieldNumber = 14;
  inline ::google::protobuf::uint32 poxx1() const;
  inline void set_poxx1(::google::protobuf::uint32 value);
  
  // optional uint32 PoxX2 = 15;
  inline bool has_poxx2() const;
  inline void clear_poxx2();
  static const int kPoxX2FieldNumber = 15;
  inline ::google::protobuf::uint32 poxx2() const;
  inline void set_poxx2(::google::protobuf::uint32 value);
  
  // optional uint32 PoxY1 = 16;
  inline bool has_poxy1() const;
  inline void clear_poxy1();
  static const int kPoxY1FieldNumber = 16;
  inline ::google::protobuf::uint32 poxy1() const;
  inline void set_poxy1(::google::protobuf::uint32 value);
  
  // optional uint32 PoxY2 = 17;
  inline bool has_poxy2() const;
  inline void clear_poxy2();
  static const int kPoxY2FieldNumber = 17;
  inline ::google::protobuf::uint32 poxy2() const;
  inline void set_poxy2(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillID1 = 18;
  inline int skillid1_size() const;
  inline void clear_skillid1();
  static const int kSkillID1FieldNumber = 18;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skillid1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skillid1();
  inline ::google::protobuf::uint32 skillid1(int index) const;
  inline void set_skillid1(int index, ::google::protobuf::uint32 value);
  inline void add_skillid1(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillLevel1 = 19;
  inline int skilllevel1_size() const;
  inline void clear_skilllevel1();
  static const int kSkillLevel1FieldNumber = 19;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skilllevel1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skilllevel1();
  inline ::google::protobuf::uint32 skilllevel1(int index) const;
  inline void set_skilllevel1(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel1(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillID2 = 20;
  inline int skillid2_size() const;
  inline void clear_skillid2();
  static const int kSkillID2FieldNumber = 20;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skillid2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skillid2();
  inline ::google::protobuf::uint32 skillid2(int index) const;
  inline void set_skillid2(int index, ::google::protobuf::uint32 value);
  inline void add_skillid2(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillLevel2 = 21;
  inline int skilllevel2_size() const;
  inline void clear_skilllevel2();
  static const int kSkillLevel2FieldNumber = 21;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skilllevel2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skilllevel2();
  inline ::google::protobuf::uint32 skilllevel2(int index) const;
  inline void set_skilllevel2(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel2(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillID3 = 22;
  inline int skillid3_size() const;
  inline void clear_skillid3();
  static const int kSkillID3FieldNumber = 22;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skillid3() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skillid3();
  inline ::google::protobuf::uint32 skillid3(int index) const;
  inline void set_skillid3(int index, ::google::protobuf::uint32 value);
  inline void add_skillid3(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillLevel3 = 23;
  inline int skilllevel3_size() const;
  inline void clear_skilllevel3();
  static const int kSkillLevel3FieldNumber = 23;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skilllevel3() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skilllevel3();
  inline ::google::protobuf::uint32 skilllevel3(int index) const;
  inline void set_skilllevel3(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel3(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillID4 = 24;
  inline int skillid4_size() const;
  inline void clear_skillid4();
  static const int kSkillID4FieldNumber = 24;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skillid4() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skillid4();
  inline ::google::protobuf::uint32 skillid4(int index) const;
  inline void set_skillid4(int index, ::google::protobuf::uint32 value);
  inline void add_skillid4(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillLevel4 = 25;
  inline int skilllevel4_size() const;
  inline void clear_skilllevel4();
  static const int kSkillLevel4FieldNumber = 25;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skilllevel4() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skilllevel4();
  inline ::google::protobuf::uint32 skilllevel4(int index) const;
  inline void set_skilllevel4(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel4(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillID5 = 26;
  inline int skillid5_size() const;
  inline void clear_skillid5();
  static const int kSkillID5FieldNumber = 26;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skillid5() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skillid5();
  inline ::google::protobuf::uint32 skillid5(int index) const;
  inline void set_skillid5(int index, ::google::protobuf::uint32 value);
  inline void add_skillid5(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillLevel5 = 27;
  inline int skilllevel5_size() const;
  inline void clear_skilllevel5();
  static const int kSkillLevel5FieldNumber = 27;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skilllevel5() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skilllevel5();
  inline ::google::protobuf::uint32 skilllevel5(int index) const;
  inline void set_skilllevel5(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel5(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillID6 = 28;
  inline int skillid6_size() const;
  inline void clear_skillid6();
  static const int kSkillID6FieldNumber = 28;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skillid6() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skillid6();
  inline ::google::protobuf::uint32 skillid6(int index) const;
  inline void set_skillid6(int index, ::google::protobuf::uint32 value);
  inline void add_skillid6(::google::protobuf::uint32 value);
  
  // repeated uint32 SkillLevel6 = 29;
  inline int skilllevel6_size() const;
  inline void clear_skilllevel6();
  static const int kSkillLevel6FieldNumber = 29;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& skilllevel6() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_skilllevel6();
  inline ::google::protobuf::uint32 skilllevel6(int index) const;
  inline void set_skilllevel6(int index, ::google::protobuf::uint32 value);
  inline void add_skilllevel6(::google::protobuf::uint32 value);
  
  // optional uint32 BeginnerProtectLevel = 30;
  inline bool has_beginnerprotectlevel() const;
  inline void clear_beginnerprotectlevel();
  static const int kBeginnerProtectLevelFieldNumber = 30;
  inline ::google::protobuf::uint32 beginnerprotectlevel() const;
  inline void set_beginnerprotectlevel(::google::protobuf::uint32 value);
  
  // optional uint32 TransProtectTime = 31;
  inline bool has_transprotecttime() const;
  inline void clear_transprotecttime();
  static const int kTransProtectTimeFieldNumber = 31;
  inline ::google::protobuf::uint32 transprotecttime() const;
  inline void set_transprotecttime(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 32;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 32;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 DeathDuraRate = 33;
  inline bool has_deathdurarate() const;
  inline void clear_deathdurarate();
  static const int kDeathDuraRateFieldNumber = 33;
  inline ::google::protobuf::uint32 deathdurarate() const;
  inline void set_deathdurarate(::google::protobuf::uint32 value);
  
  // optional uint32 CanMendUseBindMoney = 34;
  inline bool has_canmendusebindmoney() const;
  inline void clear_canmendusebindmoney();
  static const int kCanMendUseBindMoneyFieldNumber = 34;
  inline ::google::protobuf::uint32 canmendusebindmoney() const;
  inline void set_canmendusebindmoney(::google::protobuf::uint32 value);
  
  // optional uint32 BeginnerAP = 35;
  inline bool has_beginnerap() const;
  inline void clear_beginnerap();
  static const int kBeginnerAPFieldNumber = 35;
  inline ::google::protobuf::uint32 beginnerap() const;
  inline void set_beginnerap(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equipitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equipitemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > baggageitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > baggageitemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel_;
  ::google::protobuf::uint32 strnum_;
  ::google::protobuf::uint32 connum_;
  ::google::protobuf::uint32 stanum_;
  ::google::protobuf::uint32 wisnum_;
  ::google::protobuf::uint32 sprnum_;
  ::google::protobuf::uint32 skillnum_;
  ::google::protobuf::uint32 poxx1_;
  ::google::protobuf::uint32 poxx2_;
  ::google::protobuf::uint32 poxy1_;
  ::google::protobuf::uint32 poxy2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid3_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel3_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid4_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel4_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid5_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel5_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid6_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel6_;
  ::google::protobuf::uint32 beginnerprotectlevel_;
  ::google::protobuf::uint32 transprotecttime_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 deathdurarate_;
  ::google::protobuf::uint32 canmendusebindmoney_;
  ::google::protobuf::uint32 beginnerap_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(35 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBeginner* default_instance_;
};
// -------------------------------------------------------------------

class PBDropLevel : public ::google::protobuf::Message {
 public:
  PBDropLevel();
  virtual ~PBDropLevel();
  
  PBDropLevel(const PBDropLevel& from);
  
  inline PBDropLevel& operator=(const PBDropLevel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDropLevel& default_instance();
  void Swap(PBDropLevel* other);
  
  // implements Message ----------------------------------------------
  
  PBDropLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDropLevel& from);
  void MergeFrom(const PBDropLevel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Ran = 2;
  inline int ran_size() const;
  inline void clear_ran();
  static const int kRanFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& ran() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_ran();
  inline ::google::protobuf::uint32 ran(int index) const;
  inline void set_ran(int index, ::google::protobuf::uint32 value);
  inline void add_ran(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ran_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDropLevel* default_instance_;
};
// -------------------------------------------------------------------

class PBOgreTran : public ::google::protobuf::Message {
 public:
  PBOgreTran();
  virtual ~PBOgreTran();
  
  PBOgreTran(const PBOgreTran& from);
  
  inline PBOgreTran& operator=(const PBOgreTran& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOgreTran& default_instance();
  void Swap(PBOgreTran* other);
  
  // implements Message ----------------------------------------------
  
  PBOgreTran* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOgreTran& from);
  void MergeFrom(const PBOgreTran& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Drop = 2;
  inline int drop_size() const;
  inline void clear_drop();
  static const int kDropFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& drop() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_drop();
  inline ::google::protobuf::uint32 drop(int index) const;
  inline void set_drop(int index, ::google::protobuf::uint32 value);
  inline void add_drop(::google::protobuf::uint32 value);
  
  // repeated uint32 HP = 3;
  inline int hp_size() const;
  inline void clear_hp();
  static const int kHPFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& hp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_hp();
  inline ::google::protobuf::uint32 hp(int index) const;
  inline void set_hp(int index, ::google::protobuf::uint32 value);
  inline void add_hp(::google::protobuf::uint32 value);
  
  // repeated uint32 MP = 4;
  inline int mp_size() const;
  inline void clear_mp();
  static const int kMPFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mp();
  inline ::google::protobuf::uint32 mp(int index) const;
  inline void set_mp(int index, ::google::protobuf::uint32 value);
  inline void add_mp(::google::protobuf::uint32 value);
  
  // repeated uint32 PA = 5;
  inline int pa_size() const;
  inline void clear_pa();
  static const int kPAFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pa() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pa();
  inline ::google::protobuf::uint32 pa(int index) const;
  inline void set_pa(int index, ::google::protobuf::uint32 value);
  inline void add_pa(::google::protobuf::uint32 value);
  
  // repeated uint32 MA = 6;
  inline int ma_size() const;
  inline void clear_ma();
  static const int kMAFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& ma() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_ma();
  inline ::google::protobuf::uint32 ma(int index) const;
  inline void set_ma(int index, ::google::protobuf::uint32 value);
  inline void add_ma(::google::protobuf::uint32 value);
  
  // repeated uint32 PD = 7;
  inline int pd_size() const;
  inline void clear_pd();
  static const int kPDFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pd();
  inline ::google::protobuf::uint32 pd(int index) const;
  inline void set_pd(int index, ::google::protobuf::uint32 value);
  inline void add_pd(::google::protobuf::uint32 value);
  
  // repeated uint32 MD = 8;
  inline int md_size() const;
  inline void clear_md();
  static const int kMDFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& md() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_md();
  inline ::google::protobuf::uint32 md(int index) const;
  inline void set_md(int index, ::google::protobuf::uint32 value);
  inline void add_md(::google::protobuf::uint32 value);
  
  // repeated uint32 Hit = 9;
  inline int hit_size() const;
  inline void clear_hit();
  static const int kHitFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& hit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_hit();
  inline ::google::protobuf::uint32 hit(int index) const;
  inline void set_hit(int index, ::google::protobuf::uint32 value);
  inline void add_hit(::google::protobuf::uint32 value);
  
  // repeated uint32 Dodge = 10;
  inline int dodge_size() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& dodge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_dodge();
  inline ::google::protobuf::uint32 dodge(int index) const;
  inline void set_dodge(int index, ::google::protobuf::uint32 value);
  inline void add_dodge(::google::protobuf::uint32 value);
  
  // repeated uint32 Exp = 11;
  inline int exp_size() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_exp();
  inline ::google::protobuf::uint32 exp(int index) const;
  inline void set_exp(int index, ::google::protobuf::uint32 value);
  inline void add_exp(::google::protobuf::uint32 value);
  
  // repeated uint32 Ignore = 12;
  inline int ignore_size() const;
  inline void clear_ignore();
  static const int kIgnoreFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& ignore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_ignore();
  inline ::google::protobuf::uint32 ignore(int index) const;
  inline void set_ignore(int index, ::google::protobuf::uint32 value);
  inline void add_ignore(::google::protobuf::uint32 value);
  
  // repeated uint32 Death = 13;
  inline int death_size() const;
  inline void clear_death();
  static const int kDeathFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& death() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_death();
  inline ::google::protobuf::uint32 death(int index) const;
  inline void set_death(int index, ::google::protobuf::uint32 value);
  inline void add_death(::google::protobuf::uint32 value);
  
  // repeated uint32 ResDef = 14;
  inline int resdef_size() const;
  inline void clear_resdef();
  static const int kResDefFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resdef() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resdef();
  inline ::google::protobuf::uint32 resdef(int index) const;
  inline void set_resdef(int index, ::google::protobuf::uint32 value);
  inline void add_resdef(::google::protobuf::uint32 value);
  
  // repeated uint32 ResAtt = 15;
  inline int resatt_size() const;
  inline void clear_resatt();
  static const int kResAttFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& resatt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_resatt();
  inline ::google::protobuf::uint32 resatt(int index) const;
  inline void set_resatt(int index, ::google::protobuf::uint32 value);
  inline void add_resatt(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > drop_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pa_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ma_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > md_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dodge_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ignore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > death_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resdef_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > resatt_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOgreTran* default_instance_;
};
// -------------------------------------------------------------------

class PBMetierPro : public ::google::protobuf::Message {
 public:
  PBMetierPro();
  virtual ~PBMetierPro();
  
  PBMetierPro(const PBMetierPro& from);
  
  inline PBMetierPro& operator=(const PBMetierPro& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMetierPro& default_instance();
  void Swap(PBMetierPro* other);
  
  // implements Message ----------------------------------------------
  
  PBMetierPro* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMetierPro& from);
  void MergeFrom(const PBMetierPro& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 MetierRequire = 2;
  inline bool has_metierrequire() const;
  inline void clear_metierrequire();
  static const int kMetierRequireFieldNumber = 2;
  inline ::google::protobuf::uint32 metierrequire() const;
  inline void set_metierrequire(::google::protobuf::uint32 value);
  
  // optional uint32 Option = 3;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 3;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);
  
  // repeated uint32 MetierProperty = 4;
  inline int metierproperty_size() const;
  inline void clear_metierproperty();
  static const int kMetierPropertyFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& metierproperty() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_metierproperty();
  inline ::google::protobuf::uint32 metierproperty(int index) const;
  inline void set_metierproperty(int index, ::google::protobuf::uint32 value);
  inline void add_metierproperty(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 metierrequire_;
  ::google::protobuf::uint32 option_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > metierproperty_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMetierPro* default_instance_;
};
// -------------------------------------------------------------------

class PBLevelProperty : public ::google::protobuf::Message {
 public:
  PBLevelProperty();
  virtual ~PBLevelProperty();
  
  PBLevelProperty(const PBLevelProperty& from);
  
  inline PBLevelProperty& operator=(const PBLevelProperty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLevelProperty& default_instance();
  void Swap(PBLevelProperty* other);
  
  // implements Message ----------------------------------------------
  
  PBLevelProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLevelProperty& from);
  void MergeFrom(const PBLevelProperty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 Option = 2;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 2;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelProperty = 3;
  inline int levelproperty_size() const;
  inline void clear_levelproperty();
  static const int kLevelPropertyFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& levelproperty() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_levelproperty();
  inline ::google::protobuf::uint32 levelproperty(int index) const;
  inline void set_levelproperty(int index, ::google::protobuf::uint32 value);
  inline void add_levelproperty(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 option_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelproperty_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLevelProperty* default_instance_;
};
// -------------------------------------------------------------------

class PBHonorToExp : public ::google::protobuf::Message {
 public:
  PBHonorToExp();
  virtual ~PBHonorToExp();
  
  PBHonorToExp(const PBHonorToExp& from);
  
  inline PBHonorToExp& operator=(const PBHonorToExp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHonorToExp& default_instance();
  void Swap(PBHonorToExp* other);
  
  // implements Message ----------------------------------------------
  
  PBHonorToExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHonorToExp& from);
  void MergeFrom(const PBHonorToExp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Exp = 2;
  inline int exp_size() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_exp();
  inline ::google::protobuf::uint32 exp(int index) const;
  inline void set_exp(int index, ::google::protobuf::uint32 value);
  inline void add_exp(::google::protobuf::uint32 value);
  
  // repeated uint32 Wizard = 3;
  inline int wizard_size() const;
  inline void clear_wizard();
  static const int kWizardFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wizard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wizard();
  inline ::google::protobuf::uint32 wizard(int index) const;
  inline void set_wizard(int index, ::google::protobuf::uint32 value);
  inline void add_wizard(::google::protobuf::uint32 value);
  
  // optional uint32 ExpLimit = 4;
  inline bool has_explimit() const;
  inline void clear_explimit();
  static const int kExpLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 explimit() const;
  inline void set_explimit(::google::protobuf::uint32 value);
  
  // optional uint32 ItemID = 5;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 5;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemHonor = 6;
  inline bool has_itemhonor() const;
  inline void clear_itemhonor();
  static const int kItemHonorFieldNumber = 6;
  inline ::google::protobuf::uint32 itemhonor() const;
  inline void set_itemhonor(::google::protobuf::uint32 value);
  
  // optional uint32 ItemLimit = 7;
  inline bool has_itemlimit() const;
  inline void clear_itemlimit();
  static const int kItemLimitFieldNumber = 7;
  inline ::google::protobuf::uint32 itemlimit() const;
  inline void set_itemlimit(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wizard_;
  ::google::protobuf::uint32 explimit_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemhonor_;
  ::google::protobuf::uint32 itemlimit_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBHonorToExp* default_instance_;
};
// -------------------------------------------------------------------

class PBHonorObtain : public ::google::protobuf::Message {
 public:
  PBHonorObtain();
  virtual ~PBHonorObtain();
  
  PBHonorObtain(const PBHonorObtain& from);
  
  inline PBHonorObtain& operator=(const PBHonorObtain& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHonorObtain& default_instance();
  void Swap(PBHonorObtain* other);
  
  // implements Message ----------------------------------------------
  
  PBHonorObtain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHonorObtain& from);
  void MergeFrom(const PBHonorObtain& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 InLimit = 2;
  inline bool has_inlimit() const;
  inline void clear_inlimit();
  static const int kInLimitFieldNumber = 2;
  inline ::google::protobuf::uint32 inlimit() const;
  inline void set_inlimit(::google::protobuf::uint32 value);
  
  // optional uint32 OutLimit = 3;
  inline bool has_outlimit() const;
  inline void clear_outlimit();
  static const int kOutLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 outlimit() const;
  inline void set_outlimit(::google::protobuf::uint32 value);
  
  // optional uint32 OutDieExp = 4;
  inline bool has_outdieexp() const;
  inline void clear_outdieexp();
  static const int kOutDieExpFieldNumber = 4;
  inline ::google::protobuf::uint32 outdieexp() const;
  inline void set_outdieexp(::google::protobuf::uint32 value);
  
  // optional uint32 InDieExp = 5;
  inline bool has_indieexp() const;
  inline void clear_indieexp();
  static const int kInDieExpFieldNumber = 5;
  inline ::google::protobuf::uint32 indieexp() const;
  inline void set_indieexp(::google::protobuf::uint32 value);
  
  // optional uint32 BorderDieExp = 6;
  inline bool has_borderdieexp() const;
  inline void clear_borderdieexp();
  static const int kBorderDieExpFieldNumber = 6;
  inline ::google::protobuf::uint32 borderdieexp() const;
  inline void set_borderdieexp(::google::protobuf::uint32 value);
  
  // repeated uint32 OutLowExp = 7;
  inline int outlowexp_size() const;
  inline void clear_outlowexp();
  static const int kOutLowExpFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& outlowexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_outlowexp();
  inline ::google::protobuf::uint32 outlowexp(int index) const;
  inline void set_outlowexp(int index, ::google::protobuf::uint32 value);
  inline void add_outlowexp(::google::protobuf::uint32 value);
  
  // repeated uint32 OutHighExp = 8;
  inline int outhighexp_size() const;
  inline void clear_outhighexp();
  static const int kOutHighExpFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& outhighexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_outhighexp();
  inline ::google::protobuf::uint32 outhighexp(int index) const;
  inline void set_outhighexp(int index, ::google::protobuf::uint32 value);
  inline void add_outhighexp(::google::protobuf::uint32 value);
  
  // repeated uint32 InLowExp = 9;
  inline int inlowexp_size() const;
  inline void clear_inlowexp();
  static const int kInLowExpFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& inlowexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_inlowexp();
  inline ::google::protobuf::uint32 inlowexp(int index) const;
  inline void set_inlowexp(int index, ::google::protobuf::uint32 value);
  inline void add_inlowexp(::google::protobuf::uint32 value);
  
  // repeated uint32 InHighExp = 10;
  inline int inhighexp_size() const;
  inline void clear_inhighexp();
  static const int kInHighExpFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& inhighexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_inhighexp();
  inline ::google::protobuf::uint32 inhighexp(int index) const;
  inline void set_inhighexp(int index, ::google::protobuf::uint32 value);
  inline void add_inhighexp(::google::protobuf::uint32 value);
  
  // repeated uint32 BorderLowExp = 11;
  inline int borderlowexp_size() const;
  inline void clear_borderlowexp();
  static const int kBorderLowExpFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& borderlowexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_borderlowexp();
  inline ::google::protobuf::uint32 borderlowexp(int index) const;
  inline void set_borderlowexp(int index, ::google::protobuf::uint32 value);
  inline void add_borderlowexp(::google::protobuf::uint32 value);
  
  // repeated uint32 BorderHighExp = 12;
  inline int borderhighexp_size() const;
  inline void clear_borderhighexp();
  static const int kBorderHighExpFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& borderhighexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_borderhighexp();
  inline ::google::protobuf::uint32 borderhighexp(int index) const;
  inline void set_borderhighexp(int index, ::google::protobuf::uint32 value);
  inline void add_borderhighexp(::google::protobuf::uint32 value);
  
  // repeated uint32 LostLowExp = 13;
  inline int lostlowexp_size() const;
  inline void clear_lostlowexp();
  static const int kLostLowExpFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& lostlowexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_lostlowexp();
  inline ::google::protobuf::uint32 lostlowexp(int index) const;
  inline void set_lostlowexp(int index, ::google::protobuf::uint32 value);
  inline void add_lostlowexp(::google::protobuf::uint32 value);
  
  // repeated uint32 LostHighExp = 14;
  inline int losthighexp_size() const;
  inline void clear_losthighexp();
  static const int kLostHighExpFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& losthighexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_losthighexp();
  inline ::google::protobuf::uint32 losthighexp(int index) const;
  inline void set_losthighexp(int index, ::google::protobuf::uint32 value);
  inline void add_losthighexp(::google::protobuf::uint32 value);
  
  // repeated uint32 BasicExp = 15;
  inline int basicexp_size() const;
  inline void clear_basicexp();
  static const int kBasicExpFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& basicexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_basicexp();
  inline ::google::protobuf::uint32 basicexp(int index) const;
  inline void set_basicexp(int index, ::google::protobuf::uint32 value);
  inline void add_basicexp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 inlimit_;
  ::google::protobuf::uint32 outlimit_;
  ::google::protobuf::uint32 outdieexp_;
  ::google::protobuf::uint32 indieexp_;
  ::google::protobuf::uint32 borderdieexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > outlowexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > outhighexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inlowexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inhighexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > borderlowexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > borderhighexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lostlowexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > losthighexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > basicexp_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBHonorObtain* default_instance_;
};
// -------------------------------------------------------------------

class PBDiploidTable : public ::google::protobuf::Message {
 public:
  PBDiploidTable();
  virtual ~PBDiploidTable();
  
  PBDiploidTable(const PBDiploidTable& from);
  
  inline PBDiploidTable& operator=(const PBDiploidTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDiploidTable& default_instance();
  void Swap(PBDiploidTable* other);
  
  // implements Message ----------------------------------------------
  
  PBDiploidTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDiploidTable& from);
  void MergeFrom(const PBDiploidTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 TotalTime = 2;
  inline bool has_totaltime() const;
  inline void clear_totaltime();
  static const int kTotalTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 totaltime() const;
  inline void set_totaltime(::google::protobuf::uint32 value);
  
  // optional uint32 ValidMax = 3;
  inline bool has_validmax() const;
  inline void clear_validmax();
  static const int kValidMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 validmax() const;
  inline void set_validmax(::google::protobuf::uint32 value);
  
  // optional uint32 TypeNumber = 4;
  inline bool has_typenumber() const;
  inline void clear_typenumber();
  static const int kTypeNumberFieldNumber = 4;
  inline ::google::protobuf::uint32 typenumber() const;
  inline void set_typenumber(::google::protobuf::uint32 value);
  
  // repeated uint32 BuffID = 5;
  inline int buffid_size() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& buffid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_buffid();
  inline ::google::protobuf::uint32 buffid(int index) const;
  inline void set_buffid(int index, ::google::protobuf::uint32 value);
  inline void add_buffid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 totaltime_;
  ::google::protobuf::uint32 validmax_;
  ::google::protobuf::uint32 typenumber_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buffid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDiploidTable* default_instance_;
};
// -------------------------------------------------------------------

class PBRedStone : public ::google::protobuf::Message {
 public:
  PBRedStone();
  virtual ~PBRedStone();
  
  PBRedStone(const PBRedStone& from);
  
  inline PBRedStone& operator=(const PBRedStone& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRedStone& default_instance();
  void Swap(PBRedStone* other);
  
  // implements Message ----------------------------------------------
  
  PBRedStone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRedStone& from);
  void MergeFrom(const PBRedStone& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseItem = 1;
  inline bool has_baseitem() const;
  inline void clear_baseitem();
  static const int kBaseItemFieldNumber = 1;
  inline const ::PBItemBase& baseitem() const;
  inline ::PBItemBase* mutable_baseitem();
  
  // optional string MagicIconName = 2;
  inline bool has_magiciconname() const;
  inline void clear_magiciconname();
  static const int kMagicIconNameFieldNumber = 2;
  inline const ::std::string& magiciconname() const;
  inline void set_magiciconname(const ::std::string& value);
  inline void set_magiciconname(const char* value);
  inline void set_magiciconname(const char* value, size_t size);
  inline ::std::string* mutable_magiciconname();
  
  // optional uint32 GuageTime = 3;
  inline bool has_guagetime() const;
  inline void clear_guagetime();
  static const int kGuageTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 guagetime() const;
  inline void set_guagetime(::google::protobuf::uint32 value);
  
  // optional uint32 MagicSustainTime = 4;
  inline bool has_magicsustaintime() const;
  inline void clear_magicsustaintime();
  static const int kMagicSustainTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 magicsustaintime() const;
  inline void set_magicsustaintime(::google::protobuf::uint32 value);
  
  // optional uint32 ExpTime = 5;
  inline bool has_exptime() const;
  inline void clear_exptime();
  static const int kExpTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 exptime() const;
  inline void set_exptime(::google::protobuf::uint32 value);
  
  // optional uint32 Radius = 6;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 6;
  inline ::google::protobuf::uint32 radius() const;
  inline void set_radius(::google::protobuf::uint32 value);
  
  // optional uint32 RedStoneType = 7;
  inline bool has_redstonetype() const;
  inline void clear_redstonetype();
  static const int kRedStoneTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 redstonetype() const;
  inline void set_redstonetype(::google::protobuf::uint32 value);
  
  // optional uint32 FamilyExpRate = 8;
  inline bool has_familyexprate() const;
  inline void clear_familyexprate();
  static const int kFamilyExpRateFieldNumber = 8;
  inline ::google::protobuf::uint32 familyexprate() const;
  inline void set_familyexprate(::google::protobuf::uint32 value);
  
  // optional uint32 ExpTableID = 9;
  inline bool has_exptableid() const;
  inline void clear_exptableid();
  static const int kExpTableIDFieldNumber = 9;
  inline ::google::protobuf::uint32 exptableid() const;
  inline void set_exptableid(::google::protobuf::uint32 value);
  
  // optional uint32 NumberEffected = 10;
  inline bool has_numbereffected() const;
  inline void clear_numbereffected();
  static const int kNumberEffectedFieldNumber = 10;
  inline ::google::protobuf::uint32 numbereffected() const;
  inline void set_numbereffected(::google::protobuf::uint32 value);
  
  // optional uint32 MetierID = 11;
  inline bool has_metierid() const;
  inline void clear_metierid();
  static const int kMetierIDFieldNumber = 11;
  inline ::google::protobuf::uint32 metierid() const;
  inline void set_metierid(::google::protobuf::uint32 value);
  
  // repeated uint32 KeyBuffID = 12;
  inline int keybuffid_size() const;
  inline void clear_keybuffid();
  static const int kKeyBuffIDFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& keybuffid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_keybuffid();
  inline ::google::protobuf::uint32 keybuffid(int index) const;
  inline void set_keybuffid(int index, ::google::protobuf::uint32 value);
  inline void add_keybuffid(::google::protobuf::uint32 value);
  
  // repeated uint32 EncBuffID = 13;
  inline int encbuffid_size() const;
  inline void clear_encbuffid();
  static const int kEncBuffIDFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& encbuffid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_encbuffid();
  inline ::google::protobuf::uint32 encbuffid(int index) const;
  inline void set_encbuffid(int index, ::google::protobuf::uint32 value);
  inline void add_encbuffid(::google::protobuf::uint32 value);
  
  // repeated uint32 EncPercent = 14;
  inline int encpercent_size() const;
  inline void clear_encpercent();
  static const int kEncPercentFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& encpercent() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_encpercent();
  inline ::google::protobuf::uint32 encpercent(int index) const;
  inline void set_encpercent(int index, ::google::protobuf::uint32 value);
  inline void add_encpercent(::google::protobuf::uint32 value);
  
  // optional uint32 IsEternal = 15;
  inline bool has_iseternal() const;
  inline void clear_iseternal();
  static const int kIsEternalFieldNumber = 15;
  inline ::google::protobuf::uint32 iseternal() const;
  inline void set_iseternal(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseitem_;
  ::std::string* magiciconname_;
  static const ::std::string _default_magiciconname_;
  ::google::protobuf::uint32 guagetime_;
  ::google::protobuf::uint32 magicsustaintime_;
  ::google::protobuf::uint32 exptime_;
  ::google::protobuf::uint32 radius_;
  ::google::protobuf::uint32 redstonetype_;
  ::google::protobuf::uint32 familyexprate_;
  ::google::protobuf::uint32 exptableid_;
  ::google::protobuf::uint32 numbereffected_;
  ::google::protobuf::uint32 metierid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keybuffid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > encbuffid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > encpercent_;
  ::google::protobuf::uint32 iseternal_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRedStone* default_instance_;
};
// -------------------------------------------------------------------

class PBRedStoneExpTable : public ::google::protobuf::Message {
 public:
  PBRedStoneExpTable();
  virtual ~PBRedStoneExpTable();
  
  PBRedStoneExpTable(const PBRedStoneExpTable& from);
  
  inline PBRedStoneExpTable& operator=(const PBRedStoneExpTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRedStoneExpTable& default_instance();
  void Swap(PBRedStoneExpTable* other);
  
  // implements Message ----------------------------------------------
  
  PBRedStoneExpTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRedStoneExpTable& from);
  void MergeFrom(const PBRedStoneExpTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Exp = 2;
  inline int exp_size() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_exp();
  inline ::google::protobuf::uint32 exp(int index) const;
  inline void set_exp(int index, ::google::protobuf::uint32 value);
  inline void add_exp(::google::protobuf::uint32 value);
  
  // optional string EffectName = 3;
  inline bool has_effectname() const;
  inline void clear_effectname();
  static const int kEffectNameFieldNumber = 3;
  inline const ::std::string& effectname() const;
  inline void set_effectname(const ::std::string& value);
  inline void set_effectname(const char* value);
  inline void set_effectname(const char* value, size_t size);
  inline ::std::string* mutable_effectname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exp_;
  ::std::string* effectname_;
  static const ::std::string _default_effectname_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRedStoneExpTable* default_instance_;
};
// -------------------------------------------------------------------

class PBReliveTable : public ::google::protobuf::Message {
 public:
  PBReliveTable();
  virtual ~PBReliveTable();
  
  PBReliveTable(const PBReliveTable& from);
  
  inline PBReliveTable& operator=(const PBReliveTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBReliveTable& default_instance();
  void Swap(PBReliveTable* other);
  
  // implements Message ----------------------------------------------
  
  PBReliveTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBReliveTable& from);
  void MergeFrom(const PBReliveTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Fee = 2;
  inline int fee_size() const;
  inline void clear_fee();
  static const int kFeeFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& fee() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_fee();
  inline ::google::protobuf::uint32 fee(int index) const;
  inline void set_fee(int index, ::google::protobuf::uint32 value);
  inline void add_fee(::google::protobuf::uint32 value);
  
  // optional uint32 Rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::uint32 rate() const;
  inline void set_rate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fee_;
  ::google::protobuf::uint32 rate_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBReliveTable* default_instance_;
};
// -------------------------------------------------------------------

class PBQuestionExp : public ::google::protobuf::Message {
 public:
  PBQuestionExp();
  virtual ~PBQuestionExp();
  
  PBQuestionExp(const PBQuestionExp& from);
  
  inline PBQuestionExp& operator=(const PBQuestionExp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBQuestionExp& default_instance();
  void Swap(PBQuestionExp* other);
  
  // implements Message ----------------------------------------------
  
  PBQuestionExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBQuestionExp& from);
  void MergeFrom(const PBQuestionExp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcQuestionNum = 2;
  inline bool has_npcquestionnum() const;
  inline void clear_npcquestionnum();
  static const int kNpcQuestionNumFieldNumber = 2;
  inline ::google::protobuf::uint32 npcquestionnum() const;
  inline void set_npcquestionnum(::google::protobuf::uint32 value);
  
  // repeated uint32 Exp = 3;
  inline int exp_size() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_exp();
  inline ::google::protobuf::uint32 exp(int index) const;
  inline void set_exp(int index, ::google::protobuf::uint32 value);
  inline void add_exp(::google::protobuf::uint32 value);
  
  // optional uint32 NpcExpAddRate = 4;
  inline bool has_npcexpaddrate() const;
  inline void clear_npcexpaddrate();
  static const int kNpcExpAddRateFieldNumber = 4;
  inline ::google::protobuf::uint32 npcexpaddrate() const;
  inline void set_npcexpaddrate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 npcquestionnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exp_;
  ::google::protobuf::uint32 npcexpaddrate_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBQuestionExp* default_instance_;
};
// -------------------------------------------------------------------

class PBBindChargeTable : public ::google::protobuf::Message {
 public:
  PBBindChargeTable();
  virtual ~PBBindChargeTable();
  
  PBBindChargeTable(const PBBindChargeTable& from);
  
  inline PBBindChargeTable& operator=(const PBBindChargeTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBindChargeTable& default_instance();
  void Swap(PBBindChargeTable* other);
  
  // implements Message ----------------------------------------------
  
  PBBindChargeTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBindChargeTable& from);
  void MergeFrom(const PBBindChargeTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 MoneyBindNeed = 2;
  inline bool has_moneybindneed() const;
  inline void clear_moneybindneed();
  static const int kMoneyBindNeedFieldNumber = 2;
  inline ::google::protobuf::uint32 moneybindneed() const;
  inline void set_moneybindneed(::google::protobuf::uint32 value);
  
  // optional uint32 CanBindUseBM = 3;
  inline bool has_canbindusebm() const;
  inline void clear_canbindusebm();
  static const int kCanBindUseBMFieldNumber = 3;
  inline ::google::protobuf::uint32 canbindusebm() const;
  inline void set_canbindusebm(::google::protobuf::uint32 value);
  
  // optional uint32 MoneyUnBindNeed = 4;
  inline bool has_moneyunbindneed() const;
  inline void clear_moneyunbindneed();
  static const int kMoneyUnBindNeedFieldNumber = 4;
  inline ::google::protobuf::uint32 moneyunbindneed() const;
  inline void set_moneyunbindneed(::google::protobuf::uint32 value);
  
  // optional uint32 UnBindUseBM = 5;
  inline bool has_unbindusebm() const;
  inline void clear_unbindusebm();
  static const int kUnBindUseBMFieldNumber = 5;
  inline ::google::protobuf::uint32 unbindusebm() const;
  inline void set_unbindusebm(::google::protobuf::uint32 value);
  
  // optional uint32 MoneyResumeBind = 6;
  inline bool has_moneyresumebind() const;
  inline void clear_moneyresumebind();
  static const int kMoneyResumeBindFieldNumber = 6;
  inline ::google::protobuf::uint32 moneyresumebind() const;
  inline void set_moneyresumebind(::google::protobuf::uint32 value);
  
  // optional uint32 CanResumeBind = 7;
  inline bool has_canresumebind() const;
  inline void clear_canresumebind();
  static const int kCanResumeBindFieldNumber = 7;
  inline ::google::protobuf::uint32 canresumebind() const;
  inline void set_canresumebind(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 moneybindneed_;
  ::google::protobuf::uint32 canbindusebm_;
  ::google::protobuf::uint32 moneyunbindneed_;
  ::google::protobuf::uint32 unbindusebm_;
  ::google::protobuf::uint32 moneyresumebind_;
  ::google::protobuf::uint32 canresumebind_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBindChargeTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMinePos : public ::google::protobuf::Message {
 public:
  PBMinePos();
  virtual ~PBMinePos();
  
  PBMinePos(const PBMinePos& from);
  
  inline PBMinePos& operator=(const PBMinePos& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMinePos& default_instance();
  void Swap(PBMinePos* other);
  
  // implements Message ----------------------------------------------
  
  PBMinePos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMinePos& from);
  void MergeFrom(const PBMinePos& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 MapID = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 3;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 Probability = 4;
  inline bool has_probability() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 4;
  inline ::google::protobuf::uint32 probability() const;
  inline void set_probability(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 probability_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMinePos* default_instance_;
};
// -------------------------------------------------------------------

class PBMineEvent : public ::google::protobuf::Message {
 public:
  PBMineEvent();
  virtual ~PBMineEvent();
  
  PBMineEvent(const PBMineEvent& from);
  
  inline PBMineEvent& operator=(const PBMineEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMineEvent& default_instance();
  void Swap(PBMineEvent* other);
  
  // implements Message ----------------------------------------------
  
  PBMineEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMineEvent& from);
  void MergeFrom(const PBMineEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EventID = 1;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventIDFieldNumber = 1;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);
  
  // optional uint32 TouchRate = 2;
  inline bool has_touchrate() const;
  inline void clear_touchrate();
  static const int kTouchRateFieldNumber = 2;
  inline ::google::protobuf::uint32 touchrate() const;
  inline void set_touchrate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::uint32 touchrate_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMineEvent* default_instance_;
};
// -------------------------------------------------------------------

class PBItemMineMap : public ::google::protobuf::Message {
 public:
  PBItemMineMap();
  virtual ~PBItemMineMap();
  
  PBItemMineMap(const PBItemMineMap& from);
  
  inline PBItemMineMap& operator=(const PBItemMineMap& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemMineMap& default_instance();
  void Swap(PBItemMineMap* other);
  
  // implements Message ----------------------------------------------
  
  PBItemMineMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemMineMap& from);
  void MergeFrom(const PBItemMineMap& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // repeated .PBMinePos MinePos = 2;
  inline int minepos_size() const;
  inline void clear_minepos();
  static const int kMinePosFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMinePos >& minepos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMinePos >* mutable_minepos();
  inline const ::PBMinePos& minepos(int index) const;
  inline ::PBMinePos* mutable_minepos(int index);
  inline ::PBMinePos* add_minepos();
  
  // repeated .PBMineEvent MineEvent = 3;
  inline int mineevent_size() const;
  inline void clear_mineevent();
  static const int kMineEventFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMineEvent >& mineevent() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMineEvent >* mutable_mineevent();
  inline const ::PBMineEvent& mineevent(int index) const;
  inline ::PBMineEvent* mutable_mineevent(int index);
  inline ::PBMineEvent* add_mineevent();
  
  // optional uint32 Radius = 4;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 4;
  inline ::google::protobuf::uint32 radius() const;
  inline void set_radius(::google::protobuf::uint32 value);
  
  // optional uint32 DropTable = 5;
  inline bool has_droptable() const;
  inline void clear_droptable();
  static const int kDropTableFieldNumber = 5;
  inline ::google::protobuf::uint32 droptable() const;
  inline void set_droptable(::google::protobuf::uint32 value);
  
  // optional uint32 DecBuff = 6;
  inline bool has_decbuff() const;
  inline void clear_decbuff();
  static const int kDecBuffFieldNumber = 6;
  inline ::google::protobuf::uint32 decbuff() const;
  inline void set_decbuff(::google::protobuf::uint32 value);
  
  // optional uint32 OgreID = 7;
  inline bool has_ogreid() const;
  inline void clear_ogreid();
  static const int kOgreIDFieldNumber = 7;
  inline ::google::protobuf::uint32 ogreid() const;
  inline void set_ogreid(::google::protobuf::uint32 value);
  
  // optional uint32 OgreNum = 8;
  inline bool has_ogrenum() const;
  inline void clear_ogrenum();
  static const int kOgreNumFieldNumber = 8;
  inline ::google::protobuf::uint32 ogrenum() const;
  inline void set_ogrenum(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 9;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 9;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 10;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 10;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 11;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 11;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 Special = 12;
  inline bool has_special() const;
  inline void clear_special();
  static const int kSpecialFieldNumber = 12;
  inline ::google::protobuf::uint32 special() const;
  inline void set_special(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBMinePos > minepos_;
  ::google::protobuf::RepeatedPtrField< ::PBMineEvent > mineevent_;
  ::google::protobuf::uint32 radius_;
  ::google::protobuf::uint32 droptable_;
  ::google::protobuf::uint32 decbuff_;
  ::google::protobuf::uint32 ogreid_;
  ::google::protobuf::uint32 ogrenum_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 special_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemMineMap* default_instance_;
};
// -------------------------------------------------------------------

class PBRelatively_Pos : public ::google::protobuf::Message {
 public:
  PBRelatively_Pos();
  virtual ~PBRelatively_Pos();
  
  PBRelatively_Pos(const PBRelatively_Pos& from);
  
  inline PBRelatively_Pos& operator=(const PBRelatively_Pos& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRelatively_Pos& default_instance();
  void Swap(PBRelatively_Pos* other);
  
  // implements Message ----------------------------------------------
  
  PBRelatively_Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRelatively_Pos& from);
  void MergeFrom(const PBRelatively_Pos& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 X = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);
  
  // optional int32 Y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRelatively_Pos* default_instance_;
};
// -------------------------------------------------------------------

class PBBlock : public ::google::protobuf::Message {
 public:
  PBBlock();
  virtual ~PBBlock();
  
  PBBlock(const PBBlock& from);
  
  inline PBBlock& operator=(const PBBlock& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBlock& default_instance();
  void Swap(PBBlock* other);
  
  // implements Message ----------------------------------------------
  
  PBBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBlock& from);
  void MergeFrom(const PBBlock& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBOgreProperty BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBOgreProperty& baseinfo() const;
  inline ::PBOgreProperty* mutable_baseinfo();
  
  // optional int32 Select = 2;
  inline bool has_select() const;
  inline void clear_select();
  static const int kSelectFieldNumber = 2;
  inline ::google::protobuf::int32 select() const;
  inline void set_select(::google::protobuf::int32 value);
  
  // repeated .PBRelatively_Pos Pos = 3;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBRelatively_Pos >& pos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBRelatively_Pos >* mutable_pos();
  inline const ::PBRelatively_Pos& pos(int index) const;
  inline ::PBRelatively_Pos* mutable_pos(int index);
  inline ::PBRelatively_Pos* add_pos();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBOgreProperty* baseinfo_;
  ::google::protobuf::int32 select_;
  ::google::protobuf::RepeatedPtrField< ::PBRelatively_Pos > pos_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBBlock* default_instance_;
};
// -------------------------------------------------------------------

class PBPKDrop : public ::google::protobuf::Message {
 public:
  PBPKDrop();
  virtual ~PBPKDrop();
  
  PBPKDrop(const PBPKDrop& from);
  
  inline PBPKDrop& operator=(const PBPKDrop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPKDrop& default_instance();
  void Swap(PBPKDrop* other);
  
  // implements Message ----------------------------------------------
  
  PBPKDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPKDrop& from);
  void MergeFrom(const PBPKDrop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 State = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);
  
  // optional int32 EquipDropRate = 2;
  inline bool has_equipdroprate() const;
  inline void clear_equipdroprate();
  static const int kEquipDropRateFieldNumber = 2;
  inline ::google::protobuf::int32 equipdroprate() const;
  inline void set_equipdroprate(::google::protobuf::int32 value);
  
  // optional int32 BagDropRate1 = 3;
  inline bool has_bagdroprate1() const;
  inline void clear_bagdroprate1();
  static const int kBagDropRate1FieldNumber = 3;
  inline ::google::protobuf::int32 bagdroprate1() const;
  inline void set_bagdroprate1(::google::protobuf::int32 value);
  
  // optional int32 BagDropRate2 = 4;
  inline bool has_bagdroprate2() const;
  inline void clear_bagdroprate2();
  static const int kBagDropRate2FieldNumber = 4;
  inline ::google::protobuf::int32 bagdroprate2() const;
  inline void set_bagdroprate2(::google::protobuf::int32 value);
  
  // optional int32 GoPrisonRate = 5;
  inline bool has_goprisonrate() const;
  inline void clear_goprisonrate();
  static const int kGoPrisonRateFieldNumber = 5;
  inline ::google::protobuf::int32 goprisonrate() const;
  inline void set_goprisonrate(::google::protobuf::int32 value);
  
  // optional int32 PrisonTime = 6;
  inline bool has_prisontime() const;
  inline void clear_prisontime();
  static const int kPrisonTimeFieldNumber = 6;
  inline ::google::protobuf::int32 prisontime() const;
  inline void set_prisontime(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 state_;
  ::google::protobuf::int32 equipdroprate_;
  ::google::protobuf::int32 bagdroprate1_;
  ::google::protobuf::int32 bagdroprate2_;
  ::google::protobuf::int32 goprisonrate_;
  ::google::protobuf::int32 prisontime_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPKDrop* default_instance_;
};
// -------------------------------------------------------------------

class PBPKValueTable : public ::google::protobuf::Message {
 public:
  PBPKValueTable();
  virtual ~PBPKValueTable();
  
  PBPKValueTable(const PBPKValueTable& from);
  
  inline PBPKValueTable& operator=(const PBPKValueTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPKValueTable& default_instance();
  void Swap(PBPKValueTable* other);
  
  // implements Message ----------------------------------------------
  
  PBPKValueTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPKValueTable& from);
  void MergeFrom(const PBPKValueTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional int32 NavyBlue = 2;
  inline bool has_navyblue() const;
  inline void clear_navyblue();
  static const int kNavyBlueFieldNumber = 2;
  inline ::google::protobuf::int32 navyblue() const;
  inline void set_navyblue(::google::protobuf::int32 value);
  
  // optional int32 Blue = 3;
  inline bool has_blue() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 3;
  inline ::google::protobuf::int32 blue() const;
  inline void set_blue(::google::protobuf::int32 value);
  
  // optional int32 CambridgeBlue = 4;
  inline bool has_cambridgeblue() const;
  inline void clear_cambridgeblue();
  static const int kCambridgeBlueFieldNumber = 4;
  inline ::google::protobuf::int32 cambridgeblue() const;
  inline void set_cambridgeblue(::google::protobuf::int32 value);
  
  // optional int32 White = 5;
  inline bool has_white() const;
  inline void clear_white();
  static const int kWhiteFieldNumber = 5;
  inline ::google::protobuf::int32 white() const;
  inline void set_white(::google::protobuf::int32 value);
  
  // optional int32 Rosiness = 6;
  inline bool has_rosiness() const;
  inline void clear_rosiness();
  static const int kRosinessFieldNumber = 6;
  inline ::google::protobuf::int32 rosiness() const;
  inline void set_rosiness(::google::protobuf::int32 value);
  
  // optional int32 Red = 7;
  inline bool has_red() const;
  inline void clear_red();
  static const int kRedFieldNumber = 7;
  inline ::google::protobuf::int32 red() const;
  inline void set_red(::google::protobuf::int32 value);
  
  // optional int32 CarMine = 8;
  inline bool has_carmine() const;
  inline void clear_carmine();
  static const int kCarMineFieldNumber = 8;
  inline ::google::protobuf::int32 carmine() const;
  inline void set_carmine(::google::protobuf::int32 value);
  
  // optional int32 RedTopLimit = 9;
  inline bool has_redtoplimit() const;
  inline void clear_redtoplimit();
  static const int kRedTopLimitFieldNumber = 9;
  inline ::google::protobuf::int32 redtoplimit() const;
  inline void set_redtoplimit(::google::protobuf::int32 value);
  
  // optional int32 YellowTime = 10;
  inline bool has_yellowtime() const;
  inline void clear_yellowtime();
  static const int kYellowTimeFieldNumber = 10;
  inline ::google::protobuf::int32 yellowtime() const;
  inline void set_yellowtime(::google::protobuf::int32 value);
  
  // optional int32 DecValue = 11;
  inline bool has_decvalue() const;
  inline void clear_decvalue();
  static const int kDecValueFieldNumber = 11;
  inline ::google::protobuf::int32 decvalue() const;
  inline void set_decvalue(::google::protobuf::int32 value);
  
  // repeated int32 DecExpRate = 12;
  inline int decexprate_size() const;
  inline void clear_decexprate();
  static const int kDecExpRateFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& decexprate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_decexprate();
  inline ::google::protobuf::int32 decexprate(int index) const;
  inline void set_decexprate(int index, ::google::protobuf::int32 value);
  inline void add_decexprate(::google::protobuf::int32 value);
  
  // repeated int32 TopLimitDecExp = 13;
  inline int toplimitdecexp_size() const;
  inline void clear_toplimitdecexp();
  static const int kTopLimitDecExpFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& toplimitdecexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_toplimitdecexp();
  inline ::google::protobuf::int32 toplimitdecexp(int index) const;
  inline void set_toplimitdecexp(int index, ::google::protobuf::int32 value);
  inline void add_toplimitdecexp(::google::protobuf::int32 value);
  
  // repeated int32 PriceChange = 14;
  inline int pricechange_size() const;
  inline void clear_pricechange();
  static const int kPriceChangeFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >& pricechange() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >* mutable_pricechange();
  inline ::google::protobuf::int32 pricechange(int index) const;
  inline void set_pricechange(int index, ::google::protobuf::int32 value);
  inline void add_pricechange(::google::protobuf::int32 value);
  
  // optional int32 LineID = 15;
  inline bool has_lineid() const;
  inline void clear_lineid();
  static const int kLineIDFieldNumber = 15;
  inline ::google::protobuf::int32 lineid() const;
  inline void set_lineid(::google::protobuf::int32 value);
  
  // optional int32 MapID = 16;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 16;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);
  
  // optional int32 PosX = 17;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 17;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);
  
  // optional int32 PosY = 18;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 18;
  inline ::google::protobuf::int32 posy() const;
  inline void set_posy(::google::protobuf::int32 value);
  
  // repeated .PBPKDrop Drop = 19;
  inline int drop_size() const;
  inline void clear_drop();
  static const int kDropFieldNumber = 19;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPKDrop >& drop() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPKDrop >* mutable_drop();
  inline const ::PBPKDrop& drop(int index) const;
  inline ::PBPKDrop* mutable_drop(int index);
  inline ::PBPKDrop* add_drop();
  
  // optional uint32 FreeMapID = 20;
  inline bool has_freemapid() const;
  inline void clear_freemapid();
  static const int kFreeMapIDFieldNumber = 20;
  inline ::google::protobuf::uint32 freemapid() const;
  inline void set_freemapid(::google::protobuf::uint32 value);
  
  // optional uint32 FreePosX = 21;
  inline bool has_freeposx() const;
  inline void clear_freeposx();
  static const int kFreePosXFieldNumber = 21;
  inline ::google::protobuf::uint32 freeposx() const;
  inline void set_freeposx(::google::protobuf::uint32 value);
  
  // optional uint32 FreePosY = 22;
  inline bool has_freeposy() const;
  inline void clear_freeposy();
  static const int kFreePosYFieldNumber = 22;
  inline ::google::protobuf::uint32 freeposy() const;
  inline void set_freeposy(::google::protobuf::uint32 value);
  
  // optional uint32 PrisonTime = 23;
  inline bool has_prisontime() const;
  inline void clear_prisontime();
  static const int kPrisonTimeFieldNumber = 23;
  inline ::google::protobuf::uint32 prisontime() const;
  inline void set_prisontime(::google::protobuf::uint32 value);
  
  // optional uint32 BasePKValue = 24;
  inline bool has_basepkvalue() const;
  inline void clear_basepkvalue();
  static const int kBasePKValueFieldNumber = 24;
  inline ::google::protobuf::uint32 basepkvalue() const;
  inline void set_basepkvalue(::google::protobuf::uint32 value);
  
  // repeated uint32 PKValueLevel = 25;
  inline int pkvaluelevel_size() const;
  inline void clear_pkvaluelevel();
  static const int kPKValueLevelFieldNumber = 25;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pkvaluelevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pkvaluelevel();
  inline ::google::protobuf::uint32 pkvaluelevel(int index) const;
  inline void set_pkvaluelevel(int index, ::google::protobuf::uint32 value);
  inline void add_pkvaluelevel(::google::protobuf::uint32 value);
  
  // optional uint32 DropRateInEnemy = 26;
  inline bool has_droprateinenemy() const;
  inline void clear_droprateinenemy();
  static const int kDropRateInEnemyFieldNumber = 26;
  inline ::google::protobuf::uint32 droprateinenemy() const;
  inline void set_droprateinenemy(::google::protobuf::uint32 value);
  
  // optional uint32 PrisonBuffID = 27;
  inline bool has_prisonbuffid() const;
  inline void clear_prisonbuffid();
  static const int kPrisonBuffIDFieldNumber = 27;
  inline ::google::protobuf::uint32 prisonbuffid() const;
  inline void set_prisonbuffid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::int32 navyblue_;
  ::google::protobuf::int32 blue_;
  ::google::protobuf::int32 cambridgeblue_;
  ::google::protobuf::int32 white_;
  ::google::protobuf::int32 rosiness_;
  ::google::protobuf::int32 red_;
  ::google::protobuf::int32 carmine_;
  ::google::protobuf::int32 redtoplimit_;
  ::google::protobuf::int32 yellowtime_;
  ::google::protobuf::int32 decvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > decexprate_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > toplimitdecexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pricechange_;
  ::google::protobuf::int32 lineid_;
  ::google::protobuf::int32 mapid_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posy_;
  ::google::protobuf::RepeatedPtrField< ::PBPKDrop > drop_;
  ::google::protobuf::uint32 freemapid_;
  ::google::protobuf::uint32 freeposx_;
  ::google::protobuf::uint32 freeposy_;
  ::google::protobuf::uint32 prisontime_;
  ::google::protobuf::uint32 basepkvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pkvaluelevel_;
  ::google::protobuf::uint32 droprateinenemy_;
  ::google::protobuf::uint32 prisonbuffid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(27 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPKValueTable* default_instance_;
};
// -------------------------------------------------------------------

class PBItemToken : public ::google::protobuf::Message {
 public:
  PBItemToken();
  virtual ~PBItemToken();
  
  PBItemToken(const PBItemToken& from);
  
  inline PBItemToken& operator=(const PBItemToken& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemToken& default_instance();
  void Swap(PBItemToken* other);
  
  // implements Message ----------------------------------------------
  
  PBItemToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemToken& from);
  void MergeFrom(const PBItemToken& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // repeated .PBMinePos Pos = 2;
  inline int pos_size() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMinePos >& pos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMinePos >* mutable_pos();
  inline const ::PBMinePos& pos(int index) const;
  inline ::PBMinePos* mutable_pos(int index);
  inline ::PBMinePos* add_pos();
  
  // optional uint32 Radius = 3;
  inline bool has_radius() const;
  inline void clear_radius();
  static const int kRadiusFieldNumber = 3;
  inline ::google::protobuf::uint32 radius() const;
  inline void set_radius(::google::protobuf::uint32 value);
  
  // optional uint32 OgreID = 4;
  inline bool has_ogreid() const;
  inline void clear_ogreid();
  static const int kOgreIDFieldNumber = 4;
  inline ::google::protobuf::uint32 ogreid() const;
  inline void set_ogreid(::google::protobuf::uint32 value);
  
  // optional uint32 OgreNum = 5;
  inline bool has_ogrenum() const;
  inline void clear_ogrenum();
  static const int kOgreNumFieldNumber = 5;
  inline ::google::protobuf::uint32 ogrenum() const;
  inline void set_ogrenum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBMinePos > pos_;
  ::google::protobuf::uint32 radius_;
  ::google::protobuf::uint32 ogreid_;
  ::google::protobuf::uint32 ogrenum_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemToken* default_instance_;
};
// -------------------------------------------------------------------

class PBItemKitBag : public ::google::protobuf::Message {
 public:
  PBItemKitBag();
  virtual ~PBItemKitBag();
  
  PBItemKitBag(const PBItemKitBag& from);
  
  inline PBItemKitBag& operator=(const PBItemKitBag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemKitBag& default_instance();
  void Swap(PBItemKitBag* other);
  
  // implements Message ----------------------------------------------
  
  PBItemKitBag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemKitBag& from);
  void MergeFrom(const PBItemKitBag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 IndexNum = 2;
  inline bool has_indexnum() const;
  inline void clear_indexnum();
  static const int kIndexNumFieldNumber = 2;
  inline ::google::protobuf::uint32 indexnum() const;
  inline void set_indexnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 indexnum_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemKitBag* default_instance_;
};
// -------------------------------------------------------------------

class PBItemGiftBag : public ::google::protobuf::Message {
 public:
  PBItemGiftBag();
  virtual ~PBItemGiftBag();
  
  PBItemGiftBag(const PBItemGiftBag& from);
  
  inline PBItemGiftBag& operator=(const PBItemGiftBag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemGiftBag& default_instance();
  void Swap(PBItemGiftBag* other);
  
  // implements Message ----------------------------------------------
  
  PBItemGiftBag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemGiftBag& from);
  void MergeFrom(const PBItemGiftBag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 DropTableID = 2;
  inline bool has_droptableid() const;
  inline void clear_droptableid();
  static const int kDropTableIDFieldNumber = 2;
  inline ::google::protobuf::uint32 droptableid() const;
  inline void set_droptableid(::google::protobuf::uint32 value);
  
  // optional uint32 MinLevel = 3;
  inline bool has_minlevel() const;
  inline void clear_minlevel();
  static const int kMinLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 minlevel() const;
  inline void set_minlevel(::google::protobuf::uint32 value);
  
  // optional uint32 MinMoney = 4;
  inline bool has_minmoney() const;
  inline void clear_minmoney();
  static const int kMinMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 minmoney() const;
  inline void set_minmoney(::google::protobuf::uint32 value);
  
  // optional uint32 MinBindMoney = 5;
  inline bool has_minbindmoney() const;
  inline void clear_minbindmoney();
  static const int kMinBindMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 minbindmoney() const;
  inline void set_minbindmoney(::google::protobuf::uint32 value);
  
  // optional uint32 MinSilverYB = 6;
  inline bool has_minsilveryb() const;
  inline void clear_minsilveryb();
  static const int kMinSilverYBFieldNumber = 6;
  inline ::google::protobuf::uint32 minsilveryb() const;
  inline void set_minsilveryb(::google::protobuf::uint32 value);
  
  // optional uint32 DropInBag = 7;
  inline bool has_dropinbag() const;
  inline void clear_dropinbag();
  static const int kDropInBagFieldNumber = 7;
  inline ::google::protobuf::uint32 dropinbag() const;
  inline void set_dropinbag(::google::protobuf::uint32 value);
  
  // optional uint32 MaxMoney = 8;
  inline bool has_maxmoney() const;
  inline void clear_maxmoney();
  static const int kMaxMoneyFieldNumber = 8;
  inline ::google::protobuf::uint32 maxmoney() const;
  inline void set_maxmoney(::google::protobuf::uint32 value);
  
  // optional uint32 MaxBindMoney = 9;
  inline bool has_maxbindmoney() const;
  inline void clear_maxbindmoney();
  static const int kMaxBindMoneyFieldNumber = 9;
  inline ::google::protobuf::uint32 maxbindmoney() const;
  inline void set_maxbindmoney(::google::protobuf::uint32 value);
  
  // optional uint32 MaxSilverYB = 10;
  inline bool has_maxsilveryb() const;
  inline void clear_maxsilveryb();
  static const int kMaxSilverYBFieldNumber = 10;
  inline ::google::protobuf::uint32 maxsilveryb() const;
  inline void set_maxsilveryb(::google::protobuf::uint32 value);
  
  // optional uint32 CheckBag = 11;
  inline bool has_checkbag() const;
  inline void clear_checkbag();
  static const int kCheckBagFieldNumber = 11;
  inline ::google::protobuf::uint32 checkbag() const;
  inline void set_checkbag(::google::protobuf::uint32 value);
  
  // optional uint32 MinExp = 12;
  inline bool has_minexp() const;
  inline void clear_minexp();
  static const int kMinExpFieldNumber = 12;
  inline ::google::protobuf::uint32 minexp() const;
  inline void set_minexp(::google::protobuf::uint32 value);
  
  // optional uint32 MaxExp = 13;
  inline bool has_maxexp() const;
  inline void clear_maxexp();
  static const int kMaxExpFieldNumber = 13;
  inline ::google::protobuf::uint32 maxexp() const;
  inline void set_maxexp(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelTableID = 14;
  inline int leveltableid_size() const;
  inline void clear_leveltableid();
  static const int kLevelTableIDFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& leveltableid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_leveltableid();
  inline ::google::protobuf::uint32 leveltableid(int index) const;
  inline void set_leveltableid(int index, ::google::protobuf::uint32 value);
  inline void add_leveltableid(::google::protobuf::uint32 value);
  
  // optional uint32 LiHuaID = 15;
  inline bool has_lihuaid() const;
  inline void clear_lihuaid();
  static const int kLiHuaIDFieldNumber = 15;
  inline ::google::protobuf::uint32 lihuaid() const;
  inline void set_lihuaid(::google::protobuf::uint32 value);
  
  // repeated uint32 OpenItemID = 16;
  inline int openitemid_size() const;
  inline void clear_openitemid();
  static const int kOpenItemIDFieldNumber = 16;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& openitemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_openitemid();
  inline ::google::protobuf::uint32 openitemid(int index) const;
  inline void set_openitemid(int index, ::google::protobuf::uint32 value);
  inline void add_openitemid(::google::protobuf::uint32 value);
  
  // repeated uint32 OpenTableID = 17;
  inline int opentableid_size() const;
  inline void clear_opentableid();
  static const int kOpenTableIDFieldNumber = 17;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& opentableid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_opentableid();
  inline ::google::protobuf::uint32 opentableid(int index) const;
  inline void set_opentableid(int index, ::google::protobuf::uint32 value);
  inline void add_opentableid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 droptableid_;
  ::google::protobuf::uint32 minlevel_;
  ::google::protobuf::uint32 minmoney_;
  ::google::protobuf::uint32 minbindmoney_;
  ::google::protobuf::uint32 minsilveryb_;
  ::google::protobuf::uint32 dropinbag_;
  ::google::protobuf::uint32 maxmoney_;
  ::google::protobuf::uint32 maxbindmoney_;
  ::google::protobuf::uint32 maxsilveryb_;
  ::google::protobuf::uint32 checkbag_;
  ::google::protobuf::uint32 minexp_;
  ::google::protobuf::uint32 maxexp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > leveltableid_;
  ::google::protobuf::uint32 lihuaid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > openitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > opentableid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemGiftBag* default_instance_;
};
// -------------------------------------------------------------------

class PBItemAdapter : public ::google::protobuf::Message {
 public:
  PBItemAdapter();
  virtual ~PBItemAdapter();
  
  PBItemAdapter(const PBItemAdapter& from);
  
  inline PBItemAdapter& operator=(const PBItemAdapter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemAdapter& default_instance();
  void Swap(PBItemAdapter* other);
  
  // implements Message ----------------------------------------------
  
  PBItemAdapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemAdapter& from);
  void MergeFrom(const PBItemAdapter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemType = 2;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);
  
  // optional uint32 RealType = 3;
  inline bool has_realtype() const;
  inline void clear_realtype();
  static const int kRealTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 realtype() const;
  inline void set_realtype(::google::protobuf::uint32 value);
  
  // optional uint32 RealTempID = 4;
  inline bool has_realtempid() const;
  inline void clear_realtempid();
  static const int kRealTempIDFieldNumber = 4;
  inline ::google::protobuf::uint32 realtempid() const;
  inline void set_realtempid(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevelMinus = 5;
  inline bool has_maxlevelminus() const;
  inline void clear_maxlevelminus();
  static const int kMaxLevelMinusFieldNumber = 5;
  inline ::google::protobuf::uint32 maxlevelminus() const;
  inline void set_maxlevelminus(::google::protobuf::uint32 value);
  
  // optional uint32 Param = 6;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 6;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
  // optional uint32 MaxValue = 7;
  inline bool has_maxvalue() const;
  inline void clear_maxvalue();
  static const int kMaxValueFieldNumber = 7;
  inline ::google::protobuf::uint32 maxvalue() const;
  inline void set_maxvalue(::google::protobuf::uint32 value);
  
  // optional uint32 MinValue = 8;
  inline bool has_minvalue() const;
  inline void clear_minvalue();
  static const int kMinValueFieldNumber = 8;
  inline ::google::protobuf::uint32 minvalue() const;
  inline void set_minvalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 realtype_;
  ::google::protobuf::uint32 realtempid_;
  ::google::protobuf::uint32 maxlevelminus_;
  ::google::protobuf::uint32 param_;
  ::google::protobuf::uint32 maxvalue_;
  ::google::protobuf::uint32 minvalue_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemAdapter* default_instance_;
};
// -------------------------------------------------------------------

class PBTplHierogram : public ::google::protobuf::Message {
 public:
  PBTplHierogram();
  virtual ~PBTplHierogram();
  
  PBTplHierogram(const PBTplHierogram& from);
  
  inline PBTplHierogram& operator=(const PBTplHierogram& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplHierogram& default_instance();
  void Swap(PBTplHierogram* other);
  
  // implements Message ----------------------------------------------
  
  PBTplHierogram* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplHierogram& from);
  void MergeFrom(const PBTplHierogram& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Res = 2;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 2;
  inline const ::std::string& res() const;
  inline void set_res(const ::std::string& value);
  inline void set_res(const char* value);
  inline void set_res(const char* value, size_t size);
  inline ::std::string* mutable_res();
  
  // optional uint32 Alive = 3;
  inline bool has_alive() const;
  inline void clear_alive();
  static const int kAliveFieldNumber = 3;
  inline ::google::protobuf::uint32 alive() const;
  inline void set_alive(::google::protobuf::uint32 value);
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Parame1 = 5;
  inline bool has_parame1() const;
  inline void clear_parame1();
  static const int kParame1FieldNumber = 5;
  inline ::google::protobuf::uint32 parame1() const;
  inline void set_parame1(::google::protobuf::uint32 value);
  
  // optional uint32 Parame2 = 6;
  inline bool has_parame2() const;
  inline void clear_parame2();
  static const int kParame2FieldNumber = 6;
  inline ::google::protobuf::uint32 parame2() const;
  inline void set_parame2(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* res_;
  static const ::std::string _default_res_;
  ::google::protobuf::uint32 alive_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 parame1_;
  ::google::protobuf::uint32 parame2_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTplHierogram* default_instance_;
};
// -------------------------------------------------------------------

class PBStep : public ::google::protobuf::Message {
 public:
  PBStep();
  virtual ~PBStep();
  
  PBStep(const PBStep& from);
  
  inline PBStep& operator=(const PBStep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStep& default_instance();
  void Swap(PBStep* other);
  
  // implements Message ----------------------------------------------
  
  PBStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStep& from);
  void MergeFrom(const PBStep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 StageID = 1;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageIDFieldNumber = 1;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillTree = 2;
  inline bool has_skilltree() const;
  inline void clear_skilltree();
  static const int kSkillTreeFieldNumber = 2;
  inline ::google::protobuf::uint32 skilltree() const;
  inline void set_skilltree(::google::protobuf::uint32 value);
  
  // repeated uint32 Next = 3;
  inline int next_size() const;
  inline void clear_next();
  static const int kNextFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& next() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_next();
  inline ::google::protobuf::uint32 next(int index) const;
  inline void set_next(int index, ::google::protobuf::uint32 value);
  inline void add_next(::google::protobuf::uint32 value);
  
  // optional uint32 MaxPoint = 5;
  inline bool has_maxpoint() const;
  inline void clear_maxpoint();
  static const int kMaxPointFieldNumber = 5;
  inline ::google::protobuf::uint32 maxpoint() const;
  inline void set_maxpoint(::google::protobuf::uint32 value);
  
  // optional string StageDesc = 6;
  inline bool has_stagedesc() const;
  inline void clear_stagedesc();
  static const int kStageDescFieldNumber = 6;
  inline const ::std::string& stagedesc() const;
  inline void set_stagedesc(const ::std::string& value);
  inline void set_stagedesc(const char* value);
  inline void set_stagedesc(const char* value, size_t size);
  inline ::std::string* mutable_stagedesc();
  
  // optional uint32 Layer = 7;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 7;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 stageid_;
  ::google::protobuf::uint32 skilltree_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > next_;
  ::google::protobuf::uint32 maxpoint_;
  ::std::string* stagedesc_;
  static const ::std::string _default_stagedesc_;
  ::google::protobuf::uint32 layer_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBStep* default_instance_;
};
// -------------------------------------------------------------------

class PBTitle : public ::google::protobuf::Message {
 public:
  PBTitle();
  virtual ~PBTitle();
  
  PBTitle(const PBTitle& from);
  
  inline PBTitle& operator=(const PBTitle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTitle& default_instance();
  void Swap(PBTitle* other);
  
  // implements Message ----------------------------------------------
  
  PBTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTitle& from);
  void MergeFrom(const PBTitle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  
  // optional uint32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 ObtainCondition = 3;
  inline bool has_obtaincondition() const;
  inline void clear_obtaincondition();
  static const int kObtainConditionFieldNumber = 3;
  inline ::google::protobuf::uint32 obtaincondition() const;
  inline void set_obtaincondition(::google::protobuf::uint32 value);
  
  // optional uint32 SubCondition = 4;
  inline bool has_subcondition() const;
  inline void clear_subcondition();
  static const int kSubConditionFieldNumber = 4;
  inline ::google::protobuf::uint32 subcondition() const;
  inline void set_subcondition(::google::protobuf::uint32 value);
  
  // optional uint32 Color = 5;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 5;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
  // optional uint32 AddProperty = 6;
  inline bool has_addproperty() const;
  inline void clear_addproperty();
  static const int kAddPropertyFieldNumber = 6;
  inline ::google::protobuf::uint32 addproperty() const;
  inline void set_addproperty(::google::protobuf::uint32 value);
  
  // optional uint32 IsHidden = 7;
  inline bool has_ishidden() const;
  inline void clear_ishidden();
  static const int kIsHiddenFieldNumber = 7;
  inline ::google::protobuf::uint32 ishidden() const;
  inline void set_ishidden(::google::protobuf::uint32 value);
  
  // optional uint32 IsReplace = 8;
  inline bool has_isreplace() const;
  inline void clear_isreplace();
  static const int kIsReplaceFieldNumber = 8;
  inline ::google::protobuf::uint32 isreplace() const;
  inline void set_isreplace(::google::protobuf::uint32 value);
  
  // optional string Descrbe = 9;
  inline bool has_descrbe() const;
  inline void clear_descrbe();
  static const int kDescrbeFieldNumber = 9;
  inline const ::std::string& descrbe() const;
  inline void set_descrbe(const ::std::string& value);
  inline void set_descrbe(const char* value);
  inline void set_descrbe(const char* value, size_t size);
  inline ::std::string* mutable_descrbe();
  
  // optional uint32 ValidTime = 10;
  inline bool has_validtime() const;
  inline void clear_validtime();
  static const int kValidTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 validtime() const;
  inline void set_validtime(::google::protobuf::uint32 value);
  
  // optional uint32 IsTeamTitle = 11;
  inline bool has_isteamtitle() const;
  inline void clear_isteamtitle();
  static const int kIsTeamTitleFieldNumber = 11;
  inline ::google::protobuf::uint32 isteamtitle() const;
  inline void set_isteamtitle(::google::protobuf::uint32 value);
  
  // optional uint32 Param = 12;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 12;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
  // optional string Detail = 13;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 13;
  inline const ::std::string& detail() const;
  inline void set_detail(const ::std::string& value);
  inline void set_detail(const char* value);
  inline void set_detail(const char* value, size_t size);
  inline ::std::string* mutable_detail();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* title_;
  static const ::std::string _default_title_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 obtaincondition_;
  ::google::protobuf::uint32 subcondition_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::uint32 addproperty_;
  ::google::protobuf::uint32 ishidden_;
  ::google::protobuf::uint32 isreplace_;
  ::std::string* descrbe_;
  static const ::std::string _default_descrbe_;
  ::google::protobuf::uint32 validtime_;
  ::google::protobuf::uint32 isteamtitle_;
  ::google::protobuf::uint32 param_;
  ::std::string* detail_;
  static const ::std::string _default_detail_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTitle* default_instance_;
};
// -------------------------------------------------------------------

class PBTitleManager : public ::google::protobuf::Message {
 public:
  PBTitleManager();
  virtual ~PBTitleManager();
  
  PBTitleManager(const PBTitleManager& from);
  
  inline PBTitleManager& operator=(const PBTitleManager& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTitleManager& default_instance();
  void Swap(PBTitleManager* other);
  
  // implements Message ----------------------------------------------
  
  PBTitleManager* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTitleManager& from);
  void MergeFrom(const PBTitleManager& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBTitle Title = 2;
  inline int title_size() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTitle >& title() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTitle >* mutable_title();
  inline const ::PBTitle& title(int index) const;
  inline ::PBTitle* mutable_title(int index);
  inline ::PBTitle* add_title();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBTitle > title_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTitleManager* default_instance_;
};
// -------------------------------------------------------------------

class PBTplBuffImmunity : public ::google::protobuf::Message {
 public:
  PBTplBuffImmunity();
  virtual ~PBTplBuffImmunity();
  
  PBTplBuffImmunity(const PBTplBuffImmunity& from);
  
  inline PBTplBuffImmunity& operator=(const PBTplBuffImmunity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplBuffImmunity& default_instance();
  void Swap(PBTplBuffImmunity* other);
  
  // implements Message ----------------------------------------------
  
  PBTplBuffImmunity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplBuffImmunity& from);
  void MergeFrom(const PBTplBuffImmunity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 BuffType = 2;
  inline int bufftype_size() const;
  inline void clear_bufftype();
  static const int kBuffTypeFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bufftype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bufftype();
  inline ::google::protobuf::uint32 bufftype(int index) const;
  inline void set_bufftype(int index, ::google::protobuf::uint32 value);
  inline void add_bufftype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bufftype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTplBuffImmunity* default_instance_;
};
// -------------------------------------------------------------------

class PBTemplateTalent : public ::google::protobuf::Message {
 public:
  PBTemplateTalent();
  virtual ~PBTemplateTalent();
  
  PBTemplateTalent(const PBTemplateTalent& from);
  
  inline PBTemplateTalent& operator=(const PBTemplateTalent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTemplateTalent& default_instance();
  void Swap(PBTemplateTalent* other);
  
  // implements Message ----------------------------------------------
  
  PBTemplateTalent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTemplateTalent& from);
  void MergeFrom(const PBTemplateTalent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBStep Step = 2;
  inline int step_size() const;
  inline void clear_step();
  static const int kStepFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBStep >& step() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBStep >* mutable_step();
  inline const ::PBStep& step(int index) const;
  inline ::PBStep* mutable_step(int index);
  inline ::PBStep* add_step();
  
  // repeated uint32 Exp = 3;
  inline int exp_size() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_exp();
  inline ::google::protobuf::uint32 exp(int index) const;
  inline void set_exp(int index, ::google::protobuf::uint32 value);
  inline void add_exp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBStep > step_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exp_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTemplateTalent* default_instance_;
};
// -------------------------------------------------------------------

class PBMagicWeaponProIncValue : public ::google::protobuf::Message {
 public:
  PBMagicWeaponProIncValue();
  virtual ~PBMagicWeaponProIncValue();
  
  PBMagicWeaponProIncValue(const PBMagicWeaponProIncValue& from);
  
  inline PBMagicWeaponProIncValue& operator=(const PBMagicWeaponProIncValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMagicWeaponProIncValue& default_instance();
  void Swap(PBMagicWeaponProIncValue* other);
  
  // implements Message ----------------------------------------------
  
  PBMagicWeaponProIncValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMagicWeaponProIncValue& from);
  void MergeFrom(const PBMagicWeaponProIncValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 LevelPoints = 1;
  inline bool has_levelpoints() const;
  inline void clear_levelpoints();
  static const int kLevelPointsFieldNumber = 1;
  inline ::google::protobuf::uint32 levelpoints() const;
  inline void set_levelpoints(::google::protobuf::uint32 value);
  
  // optional uint64 LevelExp = 2;
  inline bool has_levelexp() const;
  inline void clear_levelexp();
  static const int kLevelExpFieldNumber = 2;
  inline ::google::protobuf::uint64 levelexp() const;
  inline void set_levelexp(::google::protobuf::uint64 value);
  
  // optional uint32 LevelProcessVal = 3;
  inline bool has_levelprocessval() const;
  inline void clear_levelprocessval();
  static const int kLevelProcessValFieldNumber = 3;
  inline ::google::protobuf::uint32 levelprocessval() const;
  inline void set_levelprocessval(::google::protobuf::uint32 value);
  
  // optional uint32 LevelProcessCurel = 4;
  inline bool has_levelprocesscurel() const;
  inline void clear_levelprocesscurel();
  static const int kLevelProcessCurelFieldNumber = 4;
  inline ::google::protobuf::uint32 levelprocesscurel() const;
  inline void set_levelprocesscurel(::google::protobuf::uint32 value);
  
  // optional uint32 LevelProcessCurelVal = 5;
  inline bool has_levelprocesscurelval() const;
  inline void clear_levelprocesscurelval();
  static const int kLevelProcessCurelValFieldNumber = 5;
  inline ::google::protobuf::uint32 levelprocesscurelval() const;
  inline void set_levelprocesscurelval(::google::protobuf::uint32 value);
  
  // optional uint32 LevelKeen = 6;
  inline bool has_levelkeen() const;
  inline void clear_levelkeen();
  static const int kLevelKeenFieldNumber = 6;
  inline ::google::protobuf::uint32 levelkeen() const;
  inline void set_levelkeen(::google::protobuf::uint32 value);
  
  // optional uint32 LevelCalm = 7;
  inline bool has_levelcalm() const;
  inline void clear_levelcalm();
  static const int kLevelCalmFieldNumber = 7;
  inline ::google::protobuf::uint32 levelcalm() const;
  inline void set_levelcalm(::google::protobuf::uint32 value);
  
  // optional uint32 LevelMagic = 8;
  inline bool has_levelmagic() const;
  inline void clear_levelmagic();
  static const int kLevelMagicFieldNumber = 8;
  inline ::google::protobuf::uint32 levelmagic() const;
  inline void set_levelmagic(::google::protobuf::uint32 value);
  
  // optional uint32 LevelBier = 9;
  inline bool has_levelbier() const;
  inline void clear_levelbier();
  static const int kLevelBierFieldNumber = 9;
  inline ::google::protobuf::uint32 levelbier() const;
  inline void set_levelbier(::google::protobuf::uint32 value);
  
  // optional uint32 LevelImmortal = 10;
  inline bool has_levelimmortal() const;
  inline void clear_levelimmortal();
  static const int kLevelImmortalFieldNumber = 10;
  inline ::google::protobuf::uint32 levelimmortal() const;
  inline void set_levelimmortal(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 levelpoints_;
  ::google::protobuf::uint64 levelexp_;
  ::google::protobuf::uint32 levelprocessval_;
  ::google::protobuf::uint32 levelprocesscurel_;
  ::google::protobuf::uint32 levelprocesscurelval_;
  ::google::protobuf::uint32 levelkeen_;
  ::google::protobuf::uint32 levelcalm_;
  ::google::protobuf::uint32 levelmagic_;
  ::google::protobuf::uint32 levelbier_;
  ::google::protobuf::uint32 levelimmortal_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMagicWeaponProIncValue* default_instance_;
};
// -------------------------------------------------------------------

class PBTemplateLifeSkill : public ::google::protobuf::Message {
 public:
  PBTemplateLifeSkill();
  virtual ~PBTemplateLifeSkill();
  
  PBTemplateLifeSkill(const PBTemplateLifeSkill& from);
  
  inline PBTemplateLifeSkill& operator=(const PBTemplateLifeSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTemplateLifeSkill& default_instance();
  void Swap(PBTemplateLifeSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBTemplateLifeSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTemplateLifeSkill& from);
  void MergeFrom(const PBTemplateLifeSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkillType = 2;
  inline bool has_lifeskilltype() const;
  inline void clear_lifeskilltype();
  static const int kLifeSkillTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 lifeskilltype() const;
  inline void set_lifeskilltype(::google::protobuf::uint32 value);
  
  // optional uint32 LifeSkillKind = 3;
  inline bool has_lifeskillkind() const;
  inline void clear_lifeskillkind();
  static const int kLifeSkillKindFieldNumber = 3;
  inline ::google::protobuf::uint32 lifeskillkind() const;
  inline void set_lifeskillkind(::google::protobuf::uint32 value);
  
  // repeated uint32 DegreeStarted = 4;
  inline int degreestarted_size() const;
  inline void clear_degreestarted();
  static const int kDegreeStartedFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& degreestarted() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_degreestarted();
  inline ::google::protobuf::uint32 degreestarted(int index) const;
  inline void set_degreestarted(int index, ::google::protobuf::uint32 value);
  inline void add_degreestarted(::google::protobuf::uint32 value);
  
  // repeated uint32 StudyMoney = 5;
  inline int studymoney_size() const;
  inline void clear_studymoney();
  static const int kStudyMoneyFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& studymoney() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_studymoney();
  inline ::google::protobuf::uint32 studymoney(int index) const;
  inline void set_studymoney(int index, ::google::protobuf::uint32 value);
  inline void add_studymoney(::google::protobuf::uint32 value);
  
  // repeated string SkillName = 6;
  inline int skillname_size() const;
  inline void clear_skillname();
  static const int kSkillNameFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& skillname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_skillname();
  inline const ::std::string& skillname(int index) const;
  inline ::std::string* mutable_skillname(int index);
  inline void set_skillname(int index, const ::std::string& value);
  inline void set_skillname(int index, const char* value);
  inline void set_skillname(int index, const char* value, size_t size);
  inline ::std::string* add_skillname();
  inline void add_skillname(const ::std::string& value);
  inline void add_skillname(const char* value);
  inline void add_skillname(const char* value, size_t size);
  
  // repeated uint32 CharacterNameID = 7;
  inline int characternameid_size() const;
  inline void clear_characternameid();
  static const int kCharacterNameIDFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& characternameid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_characternameid();
  inline ::google::protobuf::uint32 characternameid(int index) const;
  inline void set_characternameid(int index, ::google::protobuf::uint32 value);
  inline void add_characternameid(::google::protobuf::uint32 value);
  
  // repeated uint32 StudyDegree = 8;
  inline int studydegree_size() const;
  inline void clear_studydegree();
  static const int kStudyDegreeFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& studydegree() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_studydegree();
  inline ::google::protobuf::uint32 studydegree(int index) const;
  inline void set_studydegree(int index, ::google::protobuf::uint32 value);
  inline void add_studydegree(::google::protobuf::uint32 value);
  
  // repeated uint32 Level = 9;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& level() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_level();
  inline ::google::protobuf::uint32 level(int index) const;
  inline void set_level(int index, ::google::protobuf::uint32 value);
  inline void add_level(::google::protobuf::uint32 value);
  
  // optional uint32 SubSkillLevelLimit = 10;
  inline bool has_subskilllevellimit() const;
  inline void clear_subskilllevellimit();
  static const int kSubSkillLevelLimitFieldNumber = 10;
  inline ::google::protobuf::uint32 subskilllevellimit() const;
  inline void set_subskilllevellimit(::google::protobuf::uint32 value);
  
  // repeated uint32 DegreeValue = 11;
  inline int degreevalue_size() const;
  inline void clear_degreevalue();
  static const int kDegreeValueFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& degreevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_degreevalue();
  inline ::google::protobuf::uint32 degreevalue(int index) const;
  inline void set_degreevalue(int index, ::google::protobuf::uint32 value);
  inline void add_degreevalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 lifeskilltype_;
  ::google::protobuf::uint32 lifeskillkind_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > degreestarted_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > studymoney_;
  ::google::protobuf::RepeatedPtrField< ::std::string> skillname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > characternameid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > studydegree_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > level_;
  ::google::protobuf::uint32 subskilllevellimit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > degreevalue_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTemplateLifeSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBDecompondTable : public ::google::protobuf::Message {
 public:
  PBDecompondTable();
  virtual ~PBDecompondTable();
  
  PBDecompondTable(const PBDecompondTable& from);
  
  inline PBDecompondTable& operator=(const PBDecompondTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDecompondTable& default_instance();
  void Swap(PBDecompondTable* other);
  
  // implements Message ----------------------------------------------
  
  PBDecompondTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDecompondTable& from);
  void MergeFrom(const PBDecompondTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FstItemID = 1;
  inline bool has_fstitemid() const;
  inline void clear_fstitemid();
  static const int kFstItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 fstitemid() const;
  inline void set_fstitemid(::google::protobuf::uint32 value);
  
  // optional uint32 FstProbability = 2;
  inline bool has_fstprobability() const;
  inline void clear_fstprobability();
  static const int kFstProbabilityFieldNumber = 2;
  inline ::google::protobuf::uint32 fstprobability() const;
  inline void set_fstprobability(::google::protobuf::uint32 value);
  
  // optional uint32 SecItemID = 3;
  inline bool has_secitemid() const;
  inline void clear_secitemid();
  static const int kSecItemIDFieldNumber = 3;
  inline ::google::protobuf::uint32 secitemid() const;
  inline void set_secitemid(::google::protobuf::uint32 value);
  
  // optional uint32 SecProbability = 4;
  inline bool has_secprobability() const;
  inline void clear_secprobability();
  static const int kSecProbabilityFieldNumber = 4;
  inline ::google::protobuf::uint32 secprobability() const;
  inline void set_secprobability(::google::protobuf::uint32 value);
  
  // optional uint32 ThirdItemID = 5;
  inline bool has_thirditemid() const;
  inline void clear_thirditemid();
  static const int kThirdItemIDFieldNumber = 5;
  inline ::google::protobuf::uint32 thirditemid() const;
  inline void set_thirditemid(::google::protobuf::uint32 value);
  
  // optional uint32 ThirdProbability = 6;
  inline bool has_thirdprobability() const;
  inline void clear_thirdprobability();
  static const int kThirdProbabilityFieldNumber = 6;
  inline ::google::protobuf::uint32 thirdprobability() const;
  inline void set_thirdprobability(::google::protobuf::uint32 value);
  
  // optional uint32 DegreeNeeded = 7;
  inline bool has_degreeneeded() const;
  inline void clear_degreeneeded();
  static const int kDegreeNeededFieldNumber = 7;
  inline ::google::protobuf::uint32 degreeneeded() const;
  inline void set_degreeneeded(::google::protobuf::uint32 value);
  
  // optional uint32 FstItemNum = 8;
  inline bool has_fstitemnum() const;
  inline void clear_fstitemnum();
  static const int kFstItemNumFieldNumber = 8;
  inline ::google::protobuf::uint32 fstitemnum() const;
  inline void set_fstitemnum(::google::protobuf::uint32 value);
  
  // optional uint32 SecItemNum = 9;
  inline bool has_secitemnum() const;
  inline void clear_secitemnum();
  static const int kSecItemNumFieldNumber = 9;
  inline ::google::protobuf::uint32 secitemnum() const;
  inline void set_secitemnum(::google::protobuf::uint32 value);
  
  // optional uint32 ThirdItemNum = 10;
  inline bool has_thirditemnum() const;
  inline void clear_thirditemnum();
  static const int kThirdItemNumFieldNumber = 10;
  inline ::google::protobuf::uint32 thirditemnum() const;
  inline void set_thirditemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 fstitemid_;
  ::google::protobuf::uint32 fstprobability_;
  ::google::protobuf::uint32 secitemid_;
  ::google::protobuf::uint32 secprobability_;
  ::google::protobuf::uint32 thirditemid_;
  ::google::protobuf::uint32 thirdprobability_;
  ::google::protobuf::uint32 degreeneeded_;
  ::google::protobuf::uint32 fstitemnum_;
  ::google::protobuf::uint32 secitemnum_;
  ::google::protobuf::uint32 thirditemnum_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDecompondTable* default_instance_;
};
// -------------------------------------------------------------------

class PBCTemplateDecompound : public ::google::protobuf::Message {
 public:
  PBCTemplateDecompound();
  virtual ~PBCTemplateDecompound();
  
  PBCTemplateDecompound(const PBCTemplateDecompound& from);
  
  inline PBCTemplateDecompound& operator=(const PBCTemplateDecompound& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCTemplateDecompound& default_instance();
  void Swap(PBCTemplateDecompound* other);
  
  // implements Message ----------------------------------------------
  
  PBCTemplateDecompound* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCTemplateDecompound& from);
  void MergeFrom(const PBCTemplateDecompound& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBDecompondTable WhiteDecompond = 2;
  inline int whitedecompond_size() const;
  inline void clear_whitedecompond();
  static const int kWhiteDecompondFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >& whitedecompond() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >* mutable_whitedecompond();
  inline const ::PBDecompondTable& whitedecompond(int index) const;
  inline ::PBDecompondTable* mutable_whitedecompond(int index);
  inline ::PBDecompondTable* add_whitedecompond();
  
  // repeated .PBDecompondTable BlueDecompond = 3;
  inline int bluedecompond_size() const;
  inline void clear_bluedecompond();
  static const int kBlueDecompondFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >& bluedecompond() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >* mutable_bluedecompond();
  inline const ::PBDecompondTable& bluedecompond(int index) const;
  inline ::PBDecompondTable* mutable_bluedecompond(int index);
  inline ::PBDecompondTable* add_bluedecompond();
  
  // repeated .PBDecompondTable PurpleDecompond = 4;
  inline int purpledecompond_size() const;
  inline void clear_purpledecompond();
  static const int kPurpleDecompondFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >& purpledecompond() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >* mutable_purpledecompond();
  inline const ::PBDecompondTable& purpledecompond(int index) const;
  inline ::PBDecompondTable* mutable_purpledecompond(int index);
  inline ::PBDecompondTable* add_purpledecompond();
  
  // repeated uint32 Value = 5;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_value();
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  
  // repeated uint32 Probability = 6;
  inline int probability_size() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& probability() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_probability();
  inline ::google::protobuf::uint32 probability(int index) const;
  inline void set_probability(int index, ::google::protobuf::uint32 value);
  inline void add_probability(::google::protobuf::uint32 value);
  
  // repeated uint32 DegreeValue = 7;
  inline int degreevalue_size() const;
  inline void clear_degreevalue();
  static const int kDegreeValueFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& degreevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_degreevalue();
  inline ::google::protobuf::uint32 degreevalue(int index) const;
  inline void set_degreevalue(int index, ::google::protobuf::uint32 value);
  inline void add_degreevalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBDecompondTable > whitedecompond_;
  ::google::protobuf::RepeatedPtrField< ::PBDecompondTable > bluedecompond_;
  ::google::protobuf::RepeatedPtrField< ::PBDecompondTable > purpledecompond_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > probability_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > degreevalue_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCTemplateDecompound* default_instance_;
};
// -------------------------------------------------------------------

class PBTplMagicWeaponProIncTable : public ::google::protobuf::Message {
 public:
  PBTplMagicWeaponProIncTable();
  virtual ~PBTplMagicWeaponProIncTable();
  
  PBTplMagicWeaponProIncTable(const PBTplMagicWeaponProIncTable& from);
  
  inline PBTplMagicWeaponProIncTable& operator=(const PBTplMagicWeaponProIncTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplMagicWeaponProIncTable& default_instance();
  void Swap(PBTplMagicWeaponProIncTable* other);
  
  // implements Message ----------------------------------------------
  
  PBTplMagicWeaponProIncTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplMagicWeaponProIncTable& from);
  void MergeFrom(const PBTplMagicWeaponProIncTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBMagicWeaponProIncValue Values = 3;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponProIncValue >& values() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponProIncValue >* mutable_values();
  inline const ::PBMagicWeaponProIncValue& values(int index) const;
  inline ::PBMagicWeaponProIncValue* mutable_values(int index);
  inline ::PBMagicWeaponProIncValue* add_values();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponProIncValue > values_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTplMagicWeaponProIncTable* default_instance_;
};
// -------------------------------------------------------------------

class SingleMWDecomposeData : public ::google::protobuf::Message {
 public:
  SingleMWDecomposeData();
  virtual ~SingleMWDecomposeData();
  
  SingleMWDecomposeData(const SingleMWDecomposeData& from);
  
  inline SingleMWDecomposeData& operator=(const SingleMWDecomposeData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SingleMWDecomposeData& default_instance();
  void Swap(SingleMWDecomposeData* other);
  
  // implements Message ----------------------------------------------
  
  SingleMWDecomposeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SingleMWDecomposeData& from);
  void MergeFrom(const SingleMWDecomposeData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 NumMin = 2;
  inline bool has_nummin() const;
  inline void clear_nummin();
  static const int kNumMinFieldNumber = 2;
  inline ::google::protobuf::uint32 nummin() const;
  inline void set_nummin(::google::protobuf::uint32 value);
  
  // optional uint32 NumMax = 3;
  inline bool has_nummax() const;
  inline void clear_nummax();
  static const int kNumMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 nummax() const;
  inline void set_nummax(::google::protobuf::uint32 value);
  
  // optional uint32 Prob = 4;
  inline bool has_prob() const;
  inline void clear_prob();
  static const int kProbFieldNumber = 4;
  inline ::google::protobuf::uint32 prob() const;
  inline void set_prob(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 nummin_;
  ::google::protobuf::uint32 nummax_;
  ::google::protobuf::uint32 prob_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SingleMWDecomposeData* default_instance_;
};
// -------------------------------------------------------------------

class PBMagicWeaponDecomposeTable : public ::google::protobuf::Message {
 public:
  PBMagicWeaponDecomposeTable();
  virtual ~PBMagicWeaponDecomposeTable();
  
  PBMagicWeaponDecomposeTable(const PBMagicWeaponDecomposeTable& from);
  
  inline PBMagicWeaponDecomposeTable& operator=(const PBMagicWeaponDecomposeTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMagicWeaponDecomposeTable& default_instance();
  void Swap(PBMagicWeaponDecomposeTable* other);
  
  // implements Message ----------------------------------------------
  
  PBMagicWeaponDecomposeTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMagicWeaponDecomposeTable& from);
  void MergeFrom(const PBMagicWeaponDecomposeTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedMoneyType = 2;
  inline bool has_needmoneytype() const;
  inline void clear_needmoneytype();
  static const int kNeedMoneyTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 needmoneytype() const;
  inline void set_needmoneytype(::google::protobuf::uint32 value);
  
  // optional uint32 NeedMoney = 3;
  inline bool has_needmoney() const;
  inline void clear_needmoney();
  static const int kNeedMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 needmoney() const;
  inline void set_needmoney(::google::protobuf::uint32 value);
  
  // repeated .SingleMWDecomposeData Items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::SingleMWDecomposeData >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::SingleMWDecomposeData >* mutable_items();
  inline const ::SingleMWDecomposeData& items(int index) const;
  inline ::SingleMWDecomposeData* mutable_items(int index);
  inline ::SingleMWDecomposeData* add_items();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 needmoneytype_;
  ::google::protobuf::uint32 needmoney_;
  ::google::protobuf::RepeatedPtrField< ::SingleMWDecomposeData > items_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMagicWeaponDecomposeTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMagicWeaponQuickUpTable : public ::google::protobuf::Message {
 public:
  PBMagicWeaponQuickUpTable();
  virtual ~PBMagicWeaponQuickUpTable();
  
  PBMagicWeaponQuickUpTable(const PBMagicWeaponQuickUpTable& from);
  
  inline PBMagicWeaponQuickUpTable& operator=(const PBMagicWeaponQuickUpTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMagicWeaponQuickUpTable& default_instance();
  void Swap(PBMagicWeaponQuickUpTable* other);
  
  // implements Message ----------------------------------------------
  
  PBMagicWeaponQuickUpTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMagicWeaponQuickUpTable& from);
  void MergeFrom(const PBMagicWeaponQuickUpTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedItem = 2;
  inline bool has_needitem() const;
  inline void clear_needitem();
  static const int kNeedItemFieldNumber = 2;
  inline ::google::protobuf::uint32 needitem() const;
  inline void set_needitem(::google::protobuf::uint32 value);
  
  // optional uint32 NeedItemNum = 3;
  inline bool has_needitemnum() const;
  inline void clear_needitemnum();
  static const int kNeedItemNumFieldNumber = 3;
  inline ::google::protobuf::uint32 needitemnum() const;
  inline void set_needitemnum(::google::protobuf::uint32 value);
  
  // optional uint32 NeedMoneyType = 4;
  inline bool has_needmoneytype() const;
  inline void clear_needmoneytype();
  static const int kNeedMoneyTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 needmoneytype() const;
  inline void set_needmoneytype(::google::protobuf::uint32 value);
  
  // optional uint32 NeedMoney = 5;
  inline bool has_needmoney() const;
  inline void clear_needmoney();
  static const int kNeedMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 needmoney() const;
  inline void set_needmoney(::google::protobuf::uint32 value);
  
  // optional uint32 SuccessProb = 6;
  inline bool has_successprob() const;
  inline void clear_successprob();
  static const int kSuccessProbFieldNumber = 6;
  inline ::google::protobuf::uint32 successprob() const;
  inline void set_successprob(::google::protobuf::uint32 value);
  
  // optional uint32 NewMWID = 7;
  inline bool has_newmwid() const;
  inline void clear_newmwid();
  static const int kNewMWIDFieldNumber = 7;
  inline ::google::protobuf::uint32 newmwid() const;
  inline void set_newmwid(::google::protobuf::uint32 value);
  
  // optional uint32 NeedLevel = 8;
  inline bool has_needlevel() const;
  inline void clear_needlevel();
  static const int kNeedLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 needlevel() const;
  inline void set_needlevel(::google::protobuf::uint32 value);
  
  // optional uint32 LeastLeve = 9;
  inline bool has_leastleve() const;
  inline void clear_leastleve();
  static const int kLeastLeveFieldNumber = 9;
  inline ::google::protobuf::uint32 leastleve() const;
  inline void set_leastleve(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 needitem_;
  ::google::protobuf::uint32 needitemnum_;
  ::google::protobuf::uint32 needmoneytype_;
  ::google::protobuf::uint32 needmoney_;
  ::google::protobuf::uint32 successprob_;
  ::google::protobuf::uint32 newmwid_;
  ::google::protobuf::uint32 needlevel_;
  ::google::protobuf::uint32 leastleve_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMagicWeaponQuickUpTable* default_instance_;
};
// -------------------------------------------------------------------

class PBItemMagicWeapon : public ::google::protobuf::Message {
 public:
  PBItemMagicWeapon();
  virtual ~PBItemMagicWeapon();
  
  PBItemMagicWeapon(const PBItemMagicWeapon& from);
  
  inline PBItemMagicWeapon& operator=(const PBItemMagicWeapon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemMagicWeapon& default_instance();
  void Swap(PBItemMagicWeapon* other);
  
  // implements Message ----------------------------------------------
  
  PBItemMagicWeapon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemMagicWeapon& from);
  void MergeFrom(const PBItemMagicWeapon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBEquipment Base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::PBEquipment& base() const;
  inline ::PBEquipment* mutable_base();
  
  // optional string ShowLevel = 2;
  inline bool has_showlevel() const;
  inline void clear_showlevel();
  static const int kShowLevelFieldNumber = 2;
  inline const ::std::string& showlevel() const;
  inline void set_showlevel(const ::std::string& value);
  inline void set_showlevel(const char* value);
  inline void set_showlevel(const char* value, size_t size);
  inline ::std::string* mutable_showlevel();
  
  // optional string ShowType = 3;
  inline bool has_showtype() const;
  inline void clear_showtype();
  static const int kShowTypeFieldNumber = 3;
  inline const ::std::string& showtype() const;
  inline void set_showtype(const ::std::string& value);
  inline void set_showtype(const char* value);
  inline void set_showtype(const char* value, size_t size);
  inline ::std::string* mutable_showtype();
  
  // optional string NewWeaponName = 4;
  inline bool has_newweaponname() const;
  inline void clear_newweaponname();
  static const int kNewWeaponNameFieldNumber = 4;
  inline const ::std::string& newweaponname() const;
  inline void set_newweaponname(const ::std::string& value);
  inline void set_newweaponname(const char* value);
  inline void set_newweaponname(const char* value, size_t size);
  inline ::std::string* mutable_newweaponname();
  
  // optional uint32 UmmiBuffID = 5;
  inline bool has_ummibuffid() const;
  inline void clear_ummibuffid();
  static const int kUmmiBuffIDFieldNumber = 5;
  inline ::google::protobuf::uint32 ummibuffid() const;
  inline void set_ummibuffid(::google::protobuf::uint32 value);
  
  // optional uint32 InitLevel = 6;
  inline bool has_initlevel() const;
  inline void clear_initlevel();
  static const int kInitLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 initlevel() const;
  inline void set_initlevel(::google::protobuf::uint32 value);
  
  // optional uint32 InitMp = 7;
  inline bool has_initmp() const;
  inline void clear_initmp();
  static const int kInitMpFieldNumber = 7;
  inline ::google::protobuf::uint32 initmp() const;
  inline void set_initmp(::google::protobuf::uint32 value);
  
  // optional uint32 InitHp = 8;
  inline bool has_inithp() const;
  inline void clear_inithp();
  static const int kInitHpFieldNumber = 8;
  inline ::google::protobuf::uint32 inithp() const;
  inline void set_inithp(::google::protobuf::uint32 value);
  
  // optional uint32 InitMaxMp = 9;
  inline bool has_initmaxmp() const;
  inline void clear_initmaxmp();
  static const int kInitMaxMpFieldNumber = 9;
  inline ::google::protobuf::uint32 initmaxmp() const;
  inline void set_initmaxmp(::google::protobuf::uint32 value);
  
  // optional uint32 InitMaxHp = 10;
  inline bool has_initmaxhp() const;
  inline void clear_initmaxhp();
  static const int kInitMaxHpFieldNumber = 10;
  inline ::google::protobuf::uint32 initmaxhp() const;
  inline void set_initmaxhp(::google::protobuf::uint32 value);
  
  // optional uint32 InitBase = 11;
  inline bool has_initbase() const;
  inline void clear_initbase();
  static const int kInitBaseFieldNumber = 11;
  inline ::google::protobuf::uint32 initbase() const;
  inline void set_initbase(::google::protobuf::uint32 value);
  
  // optional uint32 InitShape = 12;
  inline bool has_initshape() const;
  inline void clear_initshape();
  static const int kInitShapeFieldNumber = 12;
  inline ::google::protobuf::uint32 initshape() const;
  inline void set_initshape(::google::protobuf::uint32 value);
  
  // optional uint32 InitEffect = 13;
  inline bool has_initeffect() const;
  inline void clear_initeffect();
  static const int kInitEffectFieldNumber = 13;
  inline ::google::protobuf::uint32 initeffect() const;
  inline void set_initeffect(::google::protobuf::uint32 value);
  
  // optional uint32 InitSpir = 14;
  inline bool has_initspir() const;
  inline void clear_initspir();
  static const int kInitSpirFieldNumber = 14;
  inline ::google::protobuf::uint32 initspir() const;
  inline void set_initspir(::google::protobuf::uint32 value);
  
  // optional uint32 IncMaxMp = 15;
  inline bool has_incmaxmp() const;
  inline void clear_incmaxmp();
  static const int kIncMaxMpFieldNumber = 15;
  inline ::google::protobuf::uint32 incmaxmp() const;
  inline void set_incmaxmp(::google::protobuf::uint32 value);
  
  // optional uint32 IncMaxHp = 16;
  inline bool has_incmaxhp() const;
  inline void clear_incmaxhp();
  static const int kIncMaxHpFieldNumber = 16;
  inline ::google::protobuf::uint32 incmaxhp() const;
  inline void set_incmaxhp(::google::protobuf::uint32 value);
  
  // optional uint32 MPIncValue = 17;
  inline bool has_mpincvalue() const;
  inline void clear_mpincvalue();
  static const int kMPIncValueFieldNumber = 17;
  inline ::google::protobuf::uint32 mpincvalue() const;
  inline void set_mpincvalue(::google::protobuf::uint32 value);
  
  // optional uint32 HPIncValue = 18;
  inline bool has_hpincvalue() const;
  inline void clear_hpincvalue();
  static const int kHPIncValueFieldNumber = 18;
  inline ::google::protobuf::uint32 hpincvalue() const;
  inline void set_hpincvalue(::google::protobuf::uint32 value);
  
  // optional uint32 MPIncValuePerMagic = 19;
  inline bool has_mpincvaluepermagic() const;
  inline void clear_mpincvaluepermagic();
  static const int kMPIncValuePerMagicFieldNumber = 19;
  inline ::google::protobuf::uint32 mpincvaluepermagic() const;
  inline void set_mpincvaluepermagic(::google::protobuf::uint32 value);
  
  // optional uint32 HPIncValuePerMagic = 20;
  inline bool has_hpincvaluepermagic() const;
  inline void clear_hpincvaluepermagic();
  static const int kHPIncValuePerMagicFieldNumber = 20;
  inline ::google::protobuf::uint32 hpincvaluepermagic() const;
  inline void set_hpincvaluepermagic(::google::protobuf::uint32 value);
  
  // optional uint32 AttackInc = 21;
  inline bool has_attackinc() const;
  inline void clear_attackinc();
  static const int kAttackIncFieldNumber = 21;
  inline ::google::protobuf::uint32 attackinc() const;
  inline void set_attackinc(::google::protobuf::uint32 value);
  
  // optional uint32 RecovInc = 22;
  inline bool has_recovinc() const;
  inline void clear_recovinc();
  static const int kRecovIncFieldNumber = 22;
  inline ::google::protobuf::uint32 recovinc() const;
  inline void set_recovinc(::google::protobuf::uint32 value);
  
  // optional uint32 MaxMPInc = 23;
  inline bool has_maxmpinc() const;
  inline void clear_maxmpinc();
  static const int kMaxMPIncFieldNumber = 23;
  inline ::google::protobuf::uint32 maxmpinc() const;
  inline void set_maxmpinc(::google::protobuf::uint32 value);
  
  // optional uint32 MaxHPInc = 24;
  inline bool has_maxhpinc() const;
  inline void clear_maxhpinc();
  static const int kMaxHPIncFieldNumber = 24;
  inline ::google::protobuf::uint32 maxhpinc() const;
  inline void set_maxhpinc(::google::protobuf::uint32 value);
  
  // optional uint32 DeadLineInc = 25;
  inline bool has_deadlineinc() const;
  inline void clear_deadlineinc();
  static const int kDeadLineIncFieldNumber = 25;
  inline ::google::protobuf::uint32 deadlineinc() const;
  inline void set_deadlineinc(::google::protobuf::uint32 value);
  
  // optional uint32 CanUseBook = 26;
  inline bool has_canusebook() const;
  inline void clear_canusebook();
  static const int kCanUseBookFieldNumber = 26;
  inline ::google::protobuf::uint32 canusebook() const;
  inline void set_canusebook(::google::protobuf::uint32 value);
  
  // optional uint32 GetSkillScl = 27;
  inline bool has_getskillscl() const;
  inline void clear_getskillscl();
  static const int kGetSkillSclFieldNumber = 27;
  inline ::google::protobuf::uint32 getskillscl() const;
  inline void set_getskillscl(::google::protobuf::uint32 value);
  
  // optional uint32 LevelTableID = 28;
  inline bool has_leveltableid() const;
  inline void clear_leveltableid();
  static const int kLevelTableIDFieldNumber = 28;
  inline ::google::protobuf::uint32 leveltableid() const;
  inline void set_leveltableid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillBoxTableID = 29;
  inline bool has_skillboxtableid() const;
  inline void clear_skillboxtableid();
  static const int kSkillBoxTableIDFieldNumber = 29;
  inline ::google::protobuf::uint32 skillboxtableid() const;
  inline void set_skillboxtableid(::google::protobuf::uint32 value);
  
  // optional uint32 DieOffHp = 30;
  inline bool has_dieoffhp() const;
  inline void clear_dieoffhp();
  static const int kDieOffHpFieldNumber = 30;
  inline ::google::protobuf::uint32 dieoffhp() const;
  inline void set_dieoffhp(::google::protobuf::uint32 value);
  
  // optional uint32 ProJudgeCost = 31;
  inline bool has_projudgecost() const;
  inline void clear_projudgecost();
  static const int kProJudgeCostFieldNumber = 31;
  inline ::google::protobuf::uint32 projudgecost() const;
  inline void set_projudgecost(::google::protobuf::uint32 value);
  
  // optional string DispResName = 32;
  inline bool has_dispresname() const;
  inline void clear_dispresname();
  static const int kDispResNameFieldNumber = 32;
  inline const ::std::string& dispresname() const;
  inline void set_dispresname(const ::std::string& value);
  inline void set_dispresname(const char* value);
  inline void set_dispresname(const char* value, size_t size);
  inline ::std::string* mutable_dispresname();
  
  // optional uint32 DefaultSkill = 33;
  inline bool has_defaultskill() const;
  inline void clear_defaultskill();
  static const int kDefaultSkillFieldNumber = 33;
  inline ::google::protobuf::uint32 defaultskill() const;
  inline void set_defaultskill(::google::protobuf::uint32 value);
  
  // optional uint32 DefaultSkill2 = 34;
  inline bool has_defaultskill2() const;
  inline void clear_defaultskill2();
  static const int kDefaultSkill2FieldNumber = 34;
  inline ::google::protobuf::uint32 defaultskill2() const;
  inline void set_defaultskill2(::google::protobuf::uint32 value);
  
  // optional uint32 JudgeEffTableID = 35;
  inline bool has_judgeefftableid() const;
  inline void clear_judgeefftableid();
  static const int kJudgeEffTableIDFieldNumber = 35;
  inline ::google::protobuf::uint32 judgeefftableid() const;
  inline void set_judgeefftableid(::google::protobuf::uint32 value);
  
  // optional uint32 JudgeSpirTableID = 36;
  inline bool has_judgespirtableid() const;
  inline void clear_judgespirtableid();
  static const int kJudgeSpirTableIDFieldNumber = 36;
  inline ::google::protobuf::uint32 judgespirtableid() const;
  inline void set_judgespirtableid(::google::protobuf::uint32 value);
  
  // optional uint32 LevelQuotietyTabID = 37;
  inline bool has_levelquotietytabid() const;
  inline void clear_levelquotietytabid();
  static const int kLevelQuotietyTabIDFieldNumber = 37;
  inline ::google::protobuf::uint32 levelquotietytabid() const;
  inline void set_levelquotietytabid(::google::protobuf::uint32 value);
  
  // optional uint32 DecomposeTabID = 38;
  inline bool has_decomposetabid() const;
  inline void clear_decomposetabid();
  static const int kDecomposeTabIDFieldNumber = 38;
  inline ::google::protobuf::uint32 decomposetabid() const;
  inline void set_decomposetabid(::google::protobuf::uint32 value);
  
  // optional uint32 LvByNum = 39;
  inline bool has_lvbynum() const;
  inline void clear_lvbynum();
  static const int kLvByNumFieldNumber = 39;
  inline ::google::protobuf::uint32 lvbynum() const;
  inline void set_lvbynum(::google::protobuf::uint32 value);
  
  // optional uint32 QuickUpTabID = 40;
  inline bool has_quickuptabid() const;
  inline void clear_quickuptabid();
  static const int kQuickUpTabIDFieldNumber = 40;
  inline ::google::protobuf::uint32 quickuptabid() const;
  inline void set_quickuptabid(::google::protobuf::uint32 value);
  
  // optional uint32 UpLevelTabID = 41;
  inline bool has_upleveltabid() const;
  inline void clear_upleveltabid();
  static const int kUpLevelTabIDFieldNumber = 41;
  inline ::google::protobuf::uint32 upleveltabid() const;
  inline void set_upleveltabid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBEquipment* base_;
  ::std::string* showlevel_;
  static const ::std::string _default_showlevel_;
  ::std::string* showtype_;
  static const ::std::string _default_showtype_;
  ::std::string* newweaponname_;
  static const ::std::string _default_newweaponname_;
  ::google::protobuf::uint32 ummibuffid_;
  ::google::protobuf::uint32 initlevel_;
  ::google::protobuf::uint32 initmp_;
  ::google::protobuf::uint32 inithp_;
  ::google::protobuf::uint32 initmaxmp_;
  ::google::protobuf::uint32 initmaxhp_;
  ::google::protobuf::uint32 initbase_;
  ::google::protobuf::uint32 initshape_;
  ::google::protobuf::uint32 initeffect_;
  ::google::protobuf::uint32 initspir_;
  ::google::protobuf::uint32 incmaxmp_;
  ::google::protobuf::uint32 incmaxhp_;
  ::google::protobuf::uint32 mpincvalue_;
  ::google::protobuf::uint32 hpincvalue_;
  ::google::protobuf::uint32 mpincvaluepermagic_;
  ::google::protobuf::uint32 hpincvaluepermagic_;
  ::google::protobuf::uint32 attackinc_;
  ::google::protobuf::uint32 recovinc_;
  ::google::protobuf::uint32 maxmpinc_;
  ::google::protobuf::uint32 maxhpinc_;
  ::google::protobuf::uint32 deadlineinc_;
  ::google::protobuf::uint32 canusebook_;
  ::google::protobuf::uint32 getskillscl_;
  ::google::protobuf::uint32 leveltableid_;
  ::google::protobuf::uint32 skillboxtableid_;
  ::google::protobuf::uint32 dieoffhp_;
  ::google::protobuf::uint32 projudgecost_;
  ::std::string* dispresname_;
  static const ::std::string _default_dispresname_;
  ::google::protobuf::uint32 defaultskill_;
  ::google::protobuf::uint32 defaultskill2_;
  ::google::protobuf::uint32 judgeefftableid_;
  ::google::protobuf::uint32 judgespirtableid_;
  ::google::protobuf::uint32 levelquotietytabid_;
  ::google::protobuf::uint32 decomposetabid_;
  ::google::protobuf::uint32 lvbynum_;
  ::google::protobuf::uint32 quickuptabid_;
  ::google::protobuf::uint32 upleveltabid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(41 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemMagicWeapon* default_instance_;
};
// -------------------------------------------------------------------

class PBSingleSkillStorage : public ::google::protobuf::Message {
 public:
  PBSingleSkillStorage();
  virtual ~PBSingleSkillStorage();
  
  PBSingleSkillStorage(const PBSingleSkillStorage& from);
  
  inline PBSingleSkillStorage& operator=(const PBSingleSkillStorage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSingleSkillStorage& default_instance();
  void Swap(PBSingleSkillStorage* other);
  
  // implements Message ----------------------------------------------
  
  PBSingleSkillStorage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSingleSkillStorage& from);
  void MergeFrom(const PBSingleSkillStorage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SkillID = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 FirstProb = 2;
  inline bool has_firstprob() const;
  inline void clear_firstprob();
  static const int kFirstProbFieldNumber = 2;
  inline ::google::protobuf::uint32 firstprob() const;
  inline void set_firstprob(::google::protobuf::uint32 value);
  
  // optional uint32 OtherProb = 3;
  inline bool has_otherprob() const;
  inline void clear_otherprob();
  static const int kOtherProbFieldNumber = 3;
  inline ::google::protobuf::uint32 otherprob() const;
  inline void set_otherprob(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 firstprob_;
  ::google::protobuf::uint32 otherprob_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSingleSkillStorage* default_instance_;
};
// -------------------------------------------------------------------

class PBItemMagicStone : public ::google::protobuf::Message {
 public:
  PBItemMagicStone();
  virtual ~PBItemMagicStone();
  
  PBItemMagicStone(const PBItemMagicStone& from);
  
  inline PBItemMagicStone& operator=(const PBItemMagicStone& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemMagicStone& default_instance();
  void Swap(PBItemMagicStone* other);
  
  // implements Message ----------------------------------------------
  
  PBItemMagicStone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemMagicStone& from);
  void MergeFrom(const PBItemMagicStone& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 Part = 2;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 2;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);
  
  // repeated uint32 Attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& attribute() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_attribute();
  inline ::google::protobuf::uint32 attribute(int index) const;
  inline void set_attribute(int index, ::google::protobuf::uint32 value);
  inline void add_attribute(::google::protobuf::uint32 value);
  
  // optional uint32 UsedTimes = 4;
  inline bool has_usedtimes() const;
  inline void clear_usedtimes();
  static const int kUsedTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 usedtimes() const;
  inline void set_usedtimes(::google::protobuf::uint32 value);
  
  // repeated uint32 Probability = 5;
  inline int probability_size() const;
  inline void clear_probability();
  static const int kProbabilityFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& probability() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_probability();
  inline ::google::protobuf::uint32 probability(int index) const;
  inline void set_probability(int index, ::google::protobuf::uint32 value);
  inline void add_probability(::google::protobuf::uint32 value);
  
  // optional uint32 LevelLimit = 6;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 6;
  inline ::google::protobuf::uint32 levellimit() const;
  inline void set_levellimit(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 part_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > attribute_;
  ::google::protobuf::uint32 usedtimes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > probability_;
  ::google::protobuf::uint32 levellimit_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemMagicStone* default_instance_;
};
// -------------------------------------------------------------------

class PBLifeSkillScroll : public ::google::protobuf::Message {
 public:
  PBLifeSkillScroll();
  virtual ~PBLifeSkillScroll();
  
  PBLifeSkillScroll(const PBLifeSkillScroll& from);
  
  inline PBLifeSkillScroll& operator=(const PBLifeSkillScroll& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLifeSkillScroll& default_instance();
  void Swap(PBLifeSkillScroll* other);
  
  // implements Message ----------------------------------------------
  
  PBLifeSkillScroll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLifeSkillScroll& from);
  void MergeFrom(const PBLifeSkillScroll& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 ComposeID = 2;
  inline bool has_composeid() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 2;
  inline ::google::protobuf::uint32 composeid() const;
  inline void set_composeid(::google::protobuf::uint32 value);
  
  // optional uint32 ComposeType = 3;
  inline bool has_composetype() const;
  inline void clear_composetype();
  static const int kComposeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 composetype() const;
  inline void set_composetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 composeid_;
  ::google::protobuf::uint32 composetype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLifeSkillScroll* default_instance_;
};
// -------------------------------------------------------------------

class PBSkillStorage : public ::google::protobuf::Message {
 public:
  PBSkillStorage();
  virtual ~PBSkillStorage();
  
  PBSkillStorage(const PBSkillStorage& from);
  
  inline PBSkillStorage& operator=(const PBSkillStorage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkillStorage& default_instance();
  void Swap(PBSkillStorage* other);
  
  // implements Message ----------------------------------------------
  
  PBSkillStorage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkillStorage& from);
  void MergeFrom(const PBSkillStorage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBSingleSkillStorage Values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSingleSkillStorage >& values() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSingleSkillStorage >* mutable_values();
  inline const ::PBSingleSkillStorage& values(int index) const;
  inline ::PBSingleSkillStorage* mutable_values(int index);
  inline ::PBSingleSkillStorage* add_values();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBSingleSkillStorage > values_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkillStorage* default_instance_;
};
// -------------------------------------------------------------------

class PBSkillBoxProperty : public ::google::protobuf::Message {
 public:
  PBSkillBoxProperty();
  virtual ~PBSkillBoxProperty();
  
  PBSkillBoxProperty(const PBSkillBoxProperty& from);
  
  inline PBSkillBoxProperty& operator=(const PBSkillBoxProperty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSkillBoxProperty& default_instance();
  void Swap(PBSkillBoxProperty* other);
  
  // implements Message ----------------------------------------------
  
  PBSkillBoxProperty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSkillBoxProperty& from);
  void MergeFrom(const PBSkillBoxProperty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SkillBoxColor = 1;
  inline bool has_skillboxcolor() const;
  inline void clear_skillboxcolor();
  static const int kSkillBoxColorFieldNumber = 1;
  inline ::google::protobuf::uint32 skillboxcolor() const;
  inline void set_skillboxcolor(::google::protobuf::uint32 value);
  
  // optional uint32 SkillBoxNeedVal = 2;
  inline bool has_skillboxneedval() const;
  inline void clear_skillboxneedval();
  static const int kSkillBoxNeedValFieldNumber = 2;
  inline ::google::protobuf::uint32 skillboxneedval() const;
  inline void set_skillboxneedval(::google::protobuf::uint32 value);
  
  // optional uint32 InitState = 3;
  inline bool has_initstate() const;
  inline void clear_initstate();
  static const int kInitStateFieldNumber = 3;
  inline ::google::protobuf::uint32 initstate() const;
  inline void set_initstate(::google::protobuf::uint32 value);
  
  // optional uint32 InitSkillID = 4;
  inline bool has_initskillid() const;
  inline void clear_initskillid();
  static const int kInitSkillIDFieldNumber = 4;
  inline ::google::protobuf::uint32 initskillid() const;
  inline void set_initskillid(::google::protobuf::uint32 value);
  
  // optional uint32 SkillBoxType = 5;
  inline bool has_skillboxtype() const;
  inline void clear_skillboxtype();
  static const int kSkillBoxTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 skillboxtype() const;
  inline void set_skillboxtype(::google::protobuf::uint32 value);
  
  // optional uint32 SkillBoxSkill = 6;
  inline bool has_skillboxskill() const;
  inline void clear_skillboxskill();
  static const int kSkillBoxSkillFieldNumber = 6;
  inline ::google::protobuf::uint32 skillboxskill() const;
  inline void set_skillboxskill(::google::protobuf::uint32 value);
  
  // optional uint32 SkillBoxActMoney = 7;
  inline bool has_skillboxactmoney() const;
  inline void clear_skillboxactmoney();
  static const int kSkillBoxActMoneyFieldNumber = 7;
  inline ::google::protobuf::uint32 skillboxactmoney() const;
  inline void set_skillboxactmoney(::google::protobuf::uint32 value);
  
  // optional uint32 SkillBoxSkillStorage = 8;
  inline bool has_skillboxskillstorage() const;
  inline void clear_skillboxskillstorage();
  static const int kSkillBoxSkillStorageFieldNumber = 8;
  inline ::google::protobuf::uint32 skillboxskillstorage() const;
  inline void set_skillboxskillstorage(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillboxcolor_;
  ::google::protobuf::uint32 skillboxneedval_;
  ::google::protobuf::uint32 initstate_;
  ::google::protobuf::uint32 initskillid_;
  ::google::protobuf::uint32 skillboxtype_;
  ::google::protobuf::uint32 skillboxskill_;
  ::google::protobuf::uint32 skillboxactmoney_;
  ::google::protobuf::uint32 skillboxskillstorage_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSkillBoxProperty* default_instance_;
};
// -------------------------------------------------------------------

class PBMagicWeaponSkillBoxProTable : public ::google::protobuf::Message {
 public:
  PBMagicWeaponSkillBoxProTable();
  virtual ~PBMagicWeaponSkillBoxProTable();
  
  PBMagicWeaponSkillBoxProTable(const PBMagicWeaponSkillBoxProTable& from);
  
  inline PBMagicWeaponSkillBoxProTable& operator=(const PBMagicWeaponSkillBoxProTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMagicWeaponSkillBoxProTable& default_instance();
  void Swap(PBMagicWeaponSkillBoxProTable* other);
  
  // implements Message ----------------------------------------------
  
  PBMagicWeaponSkillBoxProTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMagicWeaponSkillBoxProTable& from);
  void MergeFrom(const PBMagicWeaponSkillBoxProTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBSkillBoxProperty Values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkillBoxProperty >& values() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkillBoxProperty >* mutable_values();
  inline const ::PBSkillBoxProperty& values(int index) const;
  inline ::PBSkillBoxProperty* mutable_values(int index);
  inline ::PBSkillBoxProperty* add_values();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBSkillBoxProperty > values_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMagicWeaponSkillBoxProTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMWProJudgeEffTable : public ::google::protobuf::Message {
 public:
  PBMWProJudgeEffTable();
  virtual ~PBMWProJudgeEffTable();
  
  PBMWProJudgeEffTable(const PBMWProJudgeEffTable& from);
  
  inline PBMWProJudgeEffTable& operator=(const PBMWProJudgeEffTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMWProJudgeEffTable& default_instance();
  void Swap(PBMWProJudgeEffTable* other);
  
  // implements Message ----------------------------------------------
  
  PBMWProJudgeEffTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMWProJudgeEffTable& from);
  void MergeFrom(const PBMWProJudgeEffTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 ProbFirst = 2;
  inline int probfirst_size() const;
  inline void clear_probfirst();
  static const int kProbFirstFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& probfirst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_probfirst();
  inline ::google::protobuf::uint32 probfirst(int index) const;
  inline void set_probfirst(int index, ::google::protobuf::uint32 value);
  inline void add_probfirst(::google::protobuf::uint32 value);
  
  // repeated uint32 ProbSecond = 3;
  inline int probsecond_size() const;
  inline void clear_probsecond();
  static const int kProbSecondFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& probsecond() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_probsecond();
  inline ::google::protobuf::uint32 probsecond(int index) const;
  inline void set_probsecond(int index, ::google::protobuf::uint32 value);
  inline void add_probsecond(::google::protobuf::uint32 value);
  
  // repeated string ShowName = 4;
  inline int showname_size() const;
  inline void clear_showname();
  static const int kShowNameFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& showname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_showname();
  inline const ::std::string& showname(int index) const;
  inline ::std::string* mutable_showname(int index);
  inline void set_showname(int index, const ::std::string& value);
  inline void set_showname(int index, const char* value);
  inline void set_showname(int index, const char* value, size_t size);
  inline ::std::string* add_showname();
  inline void add_showname(const ::std::string& value);
  inline void add_showname(const char* value);
  inline void add_showname(const char* value, size_t size);
  
  // repeated uint32 JudgeLevel = 5;
  inline int judgelevel_size() const;
  inline void clear_judgelevel();
  static const int kJudgeLevelFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& judgelevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_judgelevel();
  inline ::google::protobuf::uint32 judgelevel(int index) const;
  inline void set_judgelevel(int index, ::google::protobuf::uint32 value);
  inline void add_judgelevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > probfirst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > probsecond_;
  ::google::protobuf::RepeatedPtrField< ::std::string> showname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > judgelevel_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMWProJudgeEffTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMWProJudgeSpirTable : public ::google::protobuf::Message {
 public:
  PBMWProJudgeSpirTable();
  virtual ~PBMWProJudgeSpirTable();
  
  PBMWProJudgeSpirTable(const PBMWProJudgeSpirTable& from);
  
  inline PBMWProJudgeSpirTable& operator=(const PBMWProJudgeSpirTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMWProJudgeSpirTable& default_instance();
  void Swap(PBMWProJudgeSpirTable* other);
  
  // implements Message ----------------------------------------------
  
  PBMWProJudgeSpirTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMWProJudgeSpirTable& from);
  void MergeFrom(const PBMWProJudgeSpirTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 ProbFirst = 2;
  inline int probfirst_size() const;
  inline void clear_probfirst();
  static const int kProbFirstFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& probfirst() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_probfirst();
  inline ::google::protobuf::uint32 probfirst(int index) const;
  inline void set_probfirst(int index, ::google::protobuf::uint32 value);
  inline void add_probfirst(::google::protobuf::uint32 value);
  
  // repeated uint32 ProbSecond = 3;
  inline int probsecond_size() const;
  inline void clear_probsecond();
  static const int kProbSecondFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& probsecond() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_probsecond();
  inline ::google::protobuf::uint32 probsecond(int index) const;
  inline void set_probsecond(int index, ::google::protobuf::uint32 value);
  inline void add_probsecond(::google::protobuf::uint32 value);
  
  // repeated string ShowName = 4;
  inline int showname_size() const;
  inline void clear_showname();
  static const int kShowNameFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& showname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_showname();
  inline const ::std::string& showname(int index) const;
  inline ::std::string* mutable_showname(int index);
  inline void set_showname(int index, const ::std::string& value);
  inline void set_showname(int index, const char* value);
  inline void set_showname(int index, const char* value, size_t size);
  inline ::std::string* add_showname();
  inline void add_showname(const ::std::string& value);
  inline void add_showname(const char* value);
  inline void add_showname(const char* value, size_t size);
  
  // repeated uint32 JudgeLevel = 5;
  inline int judgelevel_size() const;
  inline void clear_judgelevel();
  static const int kJudgeLevelFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& judgelevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_judgelevel();
  inline ::google::protobuf::uint32 judgelevel(int index) const;
  inline void set_judgelevel(int index, ::google::protobuf::uint32 value);
  inline void add_judgelevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > probfirst_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > probsecond_;
  ::google::protobuf::RepeatedPtrField< ::std::string> showname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > judgelevel_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMWProJudgeSpirTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMWLevelQuotietyTab : public ::google::protobuf::Message {
 public:
  PBMWLevelQuotietyTab();
  virtual ~PBMWLevelQuotietyTab();
  
  PBMWLevelQuotietyTab(const PBMWLevelQuotietyTab& from);
  
  inline PBMWLevelQuotietyTab& operator=(const PBMWLevelQuotietyTab& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMWLevelQuotietyTab& default_instance();
  void Swap(PBMWLevelQuotietyTab* other);
  
  // implements Message ----------------------------------------------
  
  PBMWLevelQuotietyTab* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMWLevelQuotietyTab& from);
  void MergeFrom(const PBMWLevelQuotietyTab& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 KeenQuotiety = 2;
  inline int keenquotiety_size() const;
  inline void clear_keenquotiety();
  static const int kKeenQuotietyFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& keenquotiety() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_keenquotiety();
  inline ::google::protobuf::uint32 keenquotiety(int index) const;
  inline void set_keenquotiety(int index, ::google::protobuf::uint32 value);
  inline void add_keenquotiety(::google::protobuf::uint32 value);
  
  // repeated uint32 CalmQuotiety = 3;
  inline int calmquotiety_size() const;
  inline void clear_calmquotiety();
  static const int kCalmQuotietyFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& calmquotiety() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_calmquotiety();
  inline ::google::protobuf::uint32 calmquotiety(int index) const;
  inline void set_calmquotiety(int index, ::google::protobuf::uint32 value);
  inline void add_calmquotiety(::google::protobuf::uint32 value);
  
  // repeated uint32 MagicQuotiety = 4;
  inline int magicquotiety_size() const;
  inline void clear_magicquotiety();
  static const int kMagicQuotietyFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& magicquotiety() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_magicquotiety();
  inline ::google::protobuf::uint32 magicquotiety(int index) const;
  inline void set_magicquotiety(int index, ::google::protobuf::uint32 value);
  inline void add_magicquotiety(::google::protobuf::uint32 value);
  
  // repeated uint32 BierQuotiety = 5;
  inline int bierquotiety_size() const;
  inline void clear_bierquotiety();
  static const int kBierQuotietyFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bierquotiety() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bierquotiety();
  inline ::google::protobuf::uint32 bierquotiety(int index) const;
  inline void set_bierquotiety(int index, ::google::protobuf::uint32 value);
  inline void add_bierquotiety(::google::protobuf::uint32 value);
  
  // repeated uint32 ImmorQuotiety = 6;
  inline int immorquotiety_size() const;
  inline void clear_immorquotiety();
  static const int kImmorQuotietyFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& immorquotiety() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_immorquotiety();
  inline ::google::protobuf::uint32 immorquotiety(int index) const;
  inline void set_immorquotiety(int index, ::google::protobuf::uint32 value);
  inline void add_immorquotiety(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keenquotiety_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > calmquotiety_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > magicquotiety_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bierquotiety_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > immorquotiety_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMWLevelQuotietyTab* default_instance_;
};
// -------------------------------------------------------------------

class PBFuncItem : public ::google::protobuf::Message {
 public:
  PBFuncItem();
  virtual ~PBFuncItem();
  
  PBFuncItem(const PBFuncItem& from);
  
  inline PBFuncItem& operator=(const PBFuncItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFuncItem& default_instance();
  void Swap(PBFuncItem* other);
  
  // implements Message ----------------------------------------------
  
  PBFuncItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFuncItem& from);
  void MergeFrom(const PBFuncItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 FuncCode = 2;
  inline bool has_funccode() const;
  inline void clear_funccode();
  static const int kFuncCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 funccode() const;
  inline void set_funccode(::google::protobuf::uint32 value);
  
  // repeated uint32 Params = 3;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& params() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_params();
  inline ::google::protobuf::uint32 params(int index) const;
  inline void set_params(int index, ::google::protobuf::uint32 value);
  inline void add_params(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 funccode_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > params_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBFuncItem* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipExchangeTable : public ::google::protobuf::Message {
 public:
  PBEquipExchangeTable();
  virtual ~PBEquipExchangeTable();
  
  PBEquipExchangeTable(const PBEquipExchangeTable& from);
  
  inline PBEquipExchangeTable& operator=(const PBEquipExchangeTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipExchangeTable& default_instance();
  void Swap(PBEquipExchangeTable* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipExchangeTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipExchangeTable& from);
  void MergeFrom(const PBEquipExchangeTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 ComposeID = 2;
  inline int composeid_size() const;
  inline void clear_composeid();
  static const int kComposeIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& composeid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_composeid();
  inline ::google::protobuf::uint32 composeid(int index) const;
  inline void set_composeid(int index, ::google::protobuf::uint32 value);
  inline void add_composeid(::google::protobuf::uint32 value);
  
  // optional uint32 ExchangeType = 3;
  inline bool has_exchangetype() const;
  inline void clear_exchangetype();
  static const int kExchangeTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 exchangetype() const;
  inline void set_exchangetype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > composeid_;
  ::google::protobuf::uint32 exchangetype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBEquipExchangeTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMultiBuffEvent : public ::google::protobuf::Message {
 public:
  PBMultiBuffEvent();
  virtual ~PBMultiBuffEvent();
  
  PBMultiBuffEvent(const PBMultiBuffEvent& from);
  
  inline PBMultiBuffEvent& operator=(const PBMultiBuffEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMultiBuffEvent& default_instance();
  void Swap(PBMultiBuffEvent* other);
  
  // implements Message ----------------------------------------------
  
  PBMultiBuffEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMultiBuffEvent& from);
  void MergeFrom(const PBMultiBuffEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 EventID = 1;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventIDFieldNumber = 1;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);
  
  // optional uint32 TeamFlag = 2;
  inline bool has_teamflag() const;
  inline void clear_teamflag();
  static const int kTeamFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 teamflag() const;
  inline void set_teamflag(::google::protobuf::uint32 value);
  
  // optional uint32 Distance = 3;
  inline bool has_distance() const;
  inline void clear_distance();
  static const int kDistanceFieldNumber = 3;
  inline ::google::protobuf::uint32 distance() const;
  inline void set_distance(::google::protobuf::uint32 value);
  
  // optional uint32 BuffID = 4;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 4;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
  // repeated uint32 RepetionIndex = 5;
  inline int repetionindex_size() const;
  inline void clear_repetionindex();
  static const int kRepetionIndexFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& repetionindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_repetionindex();
  inline ::google::protobuf::uint32 repetionindex(int index) const;
  inline void set_repetionindex(int index, ::google::protobuf::uint32 value);
  inline void add_repetionindex(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::uint32 teamflag_;
  ::google::protobuf::uint32 distance_;
  ::google::protobuf::uint32 buffid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > repetionindex_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMultiBuffEvent* default_instance_;
};
// -------------------------------------------------------------------

class PBMultiBuff : public ::google::protobuf::Message {
 public:
  PBMultiBuff();
  virtual ~PBMultiBuff();
  
  PBMultiBuff(const PBMultiBuff& from);
  
  inline PBMultiBuff& operator=(const PBMultiBuff& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMultiBuff& default_instance();
  void Swap(PBMultiBuff* other);
  
  // implements Message ----------------------------------------------
  
  PBMultiBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMultiBuff& from);
  void MergeFrom(const PBMultiBuff& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBMultiBuffEvent BuffEvent = 2;
  inline int buffevent_size() const;
  inline void clear_buffevent();
  static const int kBuffEventFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMultiBuffEvent >& buffevent() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMultiBuffEvent >* mutable_buffevent();
  inline const ::PBMultiBuffEvent& buffevent(int index) const;
  inline ::PBMultiBuffEvent* mutable_buffevent(int index);
  inline ::PBMultiBuffEvent* add_buffevent();
  
  // repeated uint32 Param = 3;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_param();
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  
  // repeated uint32 NewBuff = 4;
  inline int newbuff_size() const;
  inline void clear_newbuff();
  static const int kNewBuffFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& newbuff() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_newbuff();
  inline ::google::protobuf::uint32 newbuff(int index) const;
  inline void set_newbuff(int index, ::google::protobuf::uint32 value);
  inline void add_newbuff(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBMultiBuffEvent > buffevent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > newbuff_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMultiBuff* default_instance_;
};
// -------------------------------------------------------------------

class PBCDGroupTable : public ::google::protobuf::Message {
 public:
  PBCDGroupTable();
  virtual ~PBCDGroupTable();
  
  PBCDGroupTable(const PBCDGroupTable& from);
  
  inline PBCDGroupTable& operator=(const PBCDGroupTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCDGroupTable& default_instance();
  void Swap(PBCDGroupTable* other);
  
  // implements Message ----------------------------------------------
  
  PBCDGroupTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCDGroupTable& from);
  void MergeFrom(const PBCDGroupTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 CDTime = 2;
  inline int cdtime_size() const;
  inline void clear_cdtime();
  static const int kCDTimeFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& cdtime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_cdtime();
  inline ::google::protobuf::uint32 cdtime(int index) const;
  inline void set_cdtime(int index, ::google::protobuf::uint32 value);
  inline void add_cdtime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cdtime_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCDGroupTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMetierAp : public ::google::protobuf::Message {
 public:
  PBMetierAp();
  virtual ~PBMetierAp();
  
  PBMetierAp(const PBMetierAp& from);
  
  inline PBMetierAp& operator=(const PBMetierAp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMetierAp& default_instance();
  void Swap(PBMetierAp* other);
  
  // implements Message ----------------------------------------------
  
  PBMetierAp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMetierAp& from);
  void MergeFrom(const PBMetierAp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Metier = 1;
  inline bool has_metier() const;
  inline void clear_metier();
  static const int kMetierFieldNumber = 1;
  inline ::google::protobuf::uint32 metier() const;
  inline void set_metier(::google::protobuf::uint32 value);
  
  // optional uint32 Ap = 2;
  inline bool has_ap() const;
  inline void clear_ap();
  static const int kApFieldNumber = 2;
  inline ::google::protobuf::uint32 ap() const;
  inline void set_ap(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 metier_;
  ::google::protobuf::uint32 ap_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMetierAp* default_instance_;
};
// -------------------------------------------------------------------

class PBApConfig : public ::google::protobuf::Message {
 public:
  PBApConfig();
  virtual ~PBApConfig();
  
  PBApConfig(const PBApConfig& from);
  
  inline PBApConfig& operator=(const PBApConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBApConfig& default_instance();
  void Swap(PBApConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBApConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBApConfig& from);
  void MergeFrom(const PBApConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 ConsumeHook = 2;
  inline bool has_consumehook() const;
  inline void clear_consumehook();
  static const int kConsumeHookFieldNumber = 2;
  inline ::google::protobuf::uint32 consumehook() const;
  inline void set_consumehook(::google::protobuf::uint32 value);
  
  // optional uint32 WorldChat = 3;
  inline bool has_worldchat() const;
  inline void clear_worldchat();
  static const int kWorldChatFieldNumber = 3;
  inline ::google::protobuf::uint32 worldchat() const;
  inline void set_worldchat(::google::protobuf::uint32 value);
  
  // optional uint32 CampChat = 4;
  inline bool has_campchat() const;
  inline void clear_campchat();
  static const int kCampChatFieldNumber = 4;
  inline ::google::protobuf::uint32 campchat() const;
  inline void set_campchat(::google::protobuf::uint32 value);
  
  // optional uint32 IncApMax = 5;
  inline bool has_incapmax() const;
  inline void clear_incapmax();
  static const int kIncApMaxFieldNumber = 5;
  inline ::google::protobuf::uint32 incapmax() const;
  inline void set_incapmax(::google::protobuf::uint32 value);
  
  // repeated .PBMetierAp MetierAp = 6;
  inline int metierap_size() const;
  inline void clear_metierap();
  static const int kMetierApFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::PBMetierAp >& metierap() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMetierAp >* mutable_metierap();
  inline const ::PBMetierAp& metierap(int index) const;
  inline ::PBMetierAp* mutable_metierap(int index);
  inline ::PBMetierAp* add_metierap();
  
  // repeated uint32 RedPhysic = 7;
  inline int redphysic_size() const;
  inline void clear_redphysic();
  static const int kRedPhysicFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& redphysic() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_redphysic();
  inline ::google::protobuf::uint32 redphysic(int index) const;
  inline void set_redphysic(int index, ::google::protobuf::uint32 value);
  inline void add_redphysic(::google::protobuf::uint32 value);
  
  // repeated uint32 BluePhysic = 8;
  inline int bluephysic_size() const;
  inline void clear_bluephysic();
  static const int kBluePhysicFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bluephysic() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bluephysic();
  inline ::google::protobuf::uint32 bluephysic(int index) const;
  inline void set_bluephysic(int index, ::google::protobuf::uint32 value);
  inline void add_bluephysic(::google::protobuf::uint32 value);
  
  // repeated uint32 ApPhysic = 9;
  inline int apphysic_size() const;
  inline void clear_apphysic();
  static const int kApPhysicFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& apphysic() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_apphysic();
  inline ::google::protobuf::uint32 apphysic(int index) const;
  inline void set_apphysic(int index, ::google::protobuf::uint32 value);
  inline void add_apphysic(::google::protobuf::uint32 value);
  
  // repeated uint32 FbHpPhysic = 10;
  inline int fbhpphysic_size() const;
  inline void clear_fbhpphysic();
  static const int kFbHpPhysicFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& fbhpphysic() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_fbhpphysic();
  inline ::google::protobuf::uint32 fbhpphysic(int index) const;
  inline void set_fbhpphysic(int index, ::google::protobuf::uint32 value);
  inline void add_fbhpphysic(::google::protobuf::uint32 value);
  
  // repeated uint32 FbMpPhysic = 11;
  inline int fbmpphysic_size() const;
  inline void clear_fbmpphysic();
  static const int kFbMpPhysicFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& fbmpphysic() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_fbmpphysic();
  inline ::google::protobuf::uint32 fbmpphysic(int index) const;
  inline void set_fbmpphysic(int index, ::google::protobuf::uint32 value);
  inline void add_fbmpphysic(::google::protobuf::uint32 value);
  
  // repeated uint32 MendPhysic = 12;
  inline int mendphysic_size() const;
  inline void clear_mendphysic();
  static const int kMendPhysicFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mendphysic() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mendphysic();
  inline ::google::protobuf::uint32 mendphysic(int index) const;
  inline void set_mendphysic(int index, ::google::protobuf::uint32 value);
  inline void add_mendphysic(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 consumehook_;
  ::google::protobuf::uint32 worldchat_;
  ::google::protobuf::uint32 campchat_;
  ::google::protobuf::uint32 incapmax_;
  ::google::protobuf::RepeatedPtrField< ::PBMetierAp > metierap_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > redphysic_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bluephysic_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > apphysic_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fbhpphysic_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fbmpphysic_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mendphysic_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBApConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBLightTable : public ::google::protobuf::Message {
 public:
  PBLightTable();
  virtual ~PBLightTable();
  
  PBLightTable(const PBLightTable& from);
  
  inline PBLightTable& operator=(const PBLightTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLightTable& default_instance();
  void Swap(PBLightTable* other);
  
  // implements Message ----------------------------------------------
  
  PBLightTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLightTable& from);
  void MergeFrom(const PBLightTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelPoint = 2;
  inline int levelpoint_size() const;
  inline void clear_levelpoint();
  static const int kLevelPointFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& levelpoint() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_levelpoint();
  inline ::google::protobuf::uint32 levelpoint(int index) const;
  inline void set_levelpoint(int index, ::google::protobuf::uint32 value);
  inline void add_levelpoint(::google::protobuf::uint32 value);
  
  // repeated uint32 JewelPoint = 3;
  inline int jewelpoint_size() const;
  inline void clear_jewelpoint();
  static const int kJewelPointFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& jewelpoint() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_jewelpoint();
  inline ::google::protobuf::uint32 jewelpoint(int index) const;
  inline void set_jewelpoint(int index, ::google::protobuf::uint32 value);
  inline void add_jewelpoint(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelGrade1 = 4;
  inline int levelgrade1_size() const;
  inline void clear_levelgrade1();
  static const int kLevelGrade1FieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& levelgrade1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_levelgrade1();
  inline ::google::protobuf::uint32 levelgrade1(int index) const;
  inline void set_levelgrade1(int index, ::google::protobuf::uint32 value);
  inline void add_levelgrade1(::google::protobuf::uint32 value);
  
  // repeated uint32 JewelGrade1 = 5;
  inline int jewelgrade1_size() const;
  inline void clear_jewelgrade1();
  static const int kJewelGrade1FieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& jewelgrade1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_jewelgrade1();
  inline ::google::protobuf::uint32 jewelgrade1(int index) const;
  inline void set_jewelgrade1(int index, ::google::protobuf::uint32 value);
  inline void add_jewelgrade1(::google::protobuf::uint32 value);
  
  // repeated uint32 LevelGrade2 = 6;
  inline int levelgrade2_size() const;
  inline void clear_levelgrade2();
  static const int kLevelGrade2FieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& levelgrade2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_levelgrade2();
  inline ::google::protobuf::uint32 levelgrade2(int index) const;
  inline void set_levelgrade2(int index, ::google::protobuf::uint32 value);
  inline void add_levelgrade2(::google::protobuf::uint32 value);
  
  // repeated uint32 JewelGrade2 = 7;
  inline int jewelgrade2_size() const;
  inline void clear_jewelgrade2();
  static const int kJewelGrade2FieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& jewelgrade2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_jewelgrade2();
  inline ::google::protobuf::uint32 jewelgrade2(int index) const;
  inline void set_jewelgrade2(int index, ::google::protobuf::uint32 value);
  inline void add_jewelgrade2(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelpoint_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > jewelpoint_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelgrade1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > jewelgrade1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelgrade2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > jewelgrade2_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLightTable* default_instance_;
};
// -------------------------------------------------------------------

class PBWizardTable : public ::google::protobuf::Message {
 public:
  PBWizardTable();
  virtual ~PBWizardTable();
  
  PBWizardTable(const PBWizardTable& from);
  
  inline PBWizardTable& operator=(const PBWizardTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWizardTable& default_instance();
  void Swap(PBWizardTable* other);
  
  // implements Message ----------------------------------------------
  
  PBWizardTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWizardTable& from);
  void MergeFrom(const PBWizardTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Exp = 2;
  inline int exp_size() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_exp();
  inline ::google::protobuf::uint32 exp(int index) const;
  inline void set_exp(int index, ::google::protobuf::uint32 value);
  inline void add_exp(::google::protobuf::uint32 value);
  
  // optional uint32 KeepRand = 3;
  inline bool has_keeprand() const;
  inline void clear_keeprand();
  static const int kKeepRandFieldNumber = 3;
  inline ::google::protobuf::uint32 keeprand() const;
  inline void set_keeprand(::google::protobuf::uint32 value);
  
  // repeated uint32 TrendRand = 4;
  inline int trendrand_size() const;
  inline void clear_trendrand();
  static const int kTrendRandFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& trendrand() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_trendrand();
  inline ::google::protobuf::uint32 trendrand(int index) const;
  inline void set_trendrand(int index, ::google::protobuf::uint32 value);
  inline void add_trendrand(::google::protobuf::uint32 value);
  
  // repeated uint32 TrendResult = 5;
  inline int trendresult_size() const;
  inline void clear_trendresult();
  static const int kTrendResultFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& trendresult() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_trendresult();
  inline ::google::protobuf::uint32 trendresult(int index) const;
  inline void set_trendresult(int index, ::google::protobuf::uint32 value);
  inline void add_trendresult(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 6;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 6;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exp_;
  ::google::protobuf::uint32 keeprand_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > trendrand_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > trendresult_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBWizardTable* default_instance_;
};
// -------------------------------------------------------------------

class PBJudgeLevel : public ::google::protobuf::Message {
 public:
  PBJudgeLevel();
  virtual ~PBJudgeLevel();
  
  PBJudgeLevel(const PBJudgeLevel& from);
  
  inline PBJudgeLevel& operator=(const PBJudgeLevel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBJudgeLevel& default_instance();
  void Swap(PBJudgeLevel* other);
  
  // implements Message ----------------------------------------------
  
  PBJudgeLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBJudgeLevel& from);
  void MergeFrom(const PBJudgeLevel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 JudgeType = 1;
  inline bool has_judgetype() const;
  inline void clear_judgetype();
  static const int kJudgeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 judgetype() const;
  inline void set_judgetype(::google::protobuf::uint32 value);
  
  // optional uint32 LevelMin = 2;
  inline bool has_levelmin() const;
  inline void clear_levelmin();
  static const int kLevelMinFieldNumber = 2;
  inline ::google::protobuf::uint32 levelmin() const;
  inline void set_levelmin(::google::protobuf::uint32 value);
  
  // optional uint32 LevelMax = 3;
  inline bool has_levelmax() const;
  inline void clear_levelmax();
  static const int kLevelMaxFieldNumber = 3;
  inline ::google::protobuf::uint32 levelmax() const;
  inline void set_levelmax(::google::protobuf::uint32 value);
  
  // optional uint32 Star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);
  
  // optional uint32 LevelType = 5;
  inline bool has_leveltype() const;
  inline void clear_leveltype();
  static const int kLevelTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 leveltype() const;
  inline void set_leveltype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 judgetype_;
  ::google::protobuf::uint32 levelmin_;
  ::google::protobuf::uint32 levelmax_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 leveltype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBJudgeLevel* default_instance_;
};
// -------------------------------------------------------------------

class PBJudgeConfig : public ::google::protobuf::Message {
 public:
  PBJudgeConfig();
  virtual ~PBJudgeConfig();
  
  PBJudgeConfig(const PBJudgeConfig& from);
  
  inline PBJudgeConfig& operator=(const PBJudgeConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBJudgeConfig& default_instance();
  void Swap(PBJudgeConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBJudgeConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBJudgeConfig& from);
  void MergeFrom(const PBJudgeConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 OpenCD = 2;
  inline bool has_opencd() const;
  inline void clear_opencd();
  static const int kOpenCDFieldNumber = 2;
  inline ::google::protobuf::uint32 opencd() const;
  inline void set_opencd(::google::protobuf::uint32 value);
  
  // repeated .PBJudgeLevel JudgeLevel = 3;
  inline int judgelevel_size() const;
  inline void clear_judgelevel();
  static const int kJudgeLevelFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeLevel >& judgelevel() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBJudgeLevel >* mutable_judgelevel();
  inline const ::PBJudgeLevel& judgelevel(int index) const;
  inline ::PBJudgeLevel* mutable_judgelevel(int index);
  inline ::PBJudgeLevel* add_judgelevel();
  
  // optional uint32 ScoreBase = 4;
  inline bool has_scorebase() const;
  inline void clear_scorebase();
  static const int kScoreBaseFieldNumber = 4;
  inline ::google::protobuf::uint32 scorebase() const;
  inline void set_scorebase(::google::protobuf::uint32 value);
  
  // optional uint32 ScoreRate = 5;
  inline bool has_scorerate() const;
  inline void clear_scorerate();
  static const int kScoreRateFieldNumber = 5;
  inline ::google::protobuf::uint32 scorerate() const;
  inline void set_scorerate(::google::protobuf::uint32 value);
  
  // optional uint32 ScoreLevel = 6;
  inline bool has_scorelevel() const;
  inline void clear_scorelevel();
  static const int kScoreLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 scorelevel() const;
  inline void set_scorelevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 opencd_;
  ::google::protobuf::RepeatedPtrField< ::PBJudgeLevel > judgelevel_;
  ::google::protobuf::uint32 scorebase_;
  ::google::protobuf::uint32 scorerate_;
  ::google::protobuf::uint32 scorelevel_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBJudgeConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBPaperValue : public ::google::protobuf::Message {
 public:
  PBPaperValue();
  virtual ~PBPaperValue();
  
  PBPaperValue(const PBPaperValue& from);
  
  inline PBPaperValue& operator=(const PBPaperValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPaperValue& default_instance();
  void Swap(PBPaperValue* other);
  
  // implements Message ----------------------------------------------
  
  PBPaperValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPaperValue& from);
  void MergeFrom(const PBPaperValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // optional uint32 Probality = 2;
  inline bool has_probality() const;
  inline void clear_probality();
  static const int kProbalityFieldNumber = 2;
  inline ::google::protobuf::uint32 probality() const;
  inline void set_probality(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 probality_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPaperValue* default_instance_;
};
// -------------------------------------------------------------------

class PBItemRedPaper : public ::google::protobuf::Message {
 public:
  PBItemRedPaper();
  virtual ~PBItemRedPaper();
  
  PBItemRedPaper(const PBItemRedPaper& from);
  
  inline PBItemRedPaper& operator=(const PBItemRedPaper& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemRedPaper& default_instance();
  void Swap(PBItemRedPaper* other);
  
  // implements Message ----------------------------------------------
  
  PBItemRedPaper* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemRedPaper& from);
  void MergeFrom(const PBItemRedPaper& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 BaseCharge = 2;
  inline bool has_basecharge() const;
  inline void clear_basecharge();
  static const int kBaseChargeFieldNumber = 2;
  inline ::google::protobuf::uint32 basecharge() const;
  inline void set_basecharge(::google::protobuf::uint32 value);
  
  // repeated .PBPaperValue MoneyInfo = 3;
  inline int moneyinfo_size() const;
  inline void clear_moneyinfo();
  static const int kMoneyInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPaperValue >& moneyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPaperValue >* mutable_moneyinfo();
  inline const ::PBPaperValue& moneyinfo(int index) const;
  inline ::PBPaperValue* mutable_moneyinfo(int index);
  inline ::PBPaperValue* add_moneyinfo();
  
  // repeated .PBPaperValue BindMoneyInfo = 4;
  inline int bindmoneyinfo_size() const;
  inline void clear_bindmoneyinfo();
  static const int kBindMoneyInfoFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBPaperValue >& bindmoneyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPaperValue >* mutable_bindmoneyinfo();
  inline const ::PBPaperValue& bindmoneyinfo(int index) const;
  inline ::PBPaperValue* mutable_bindmoneyinfo(int index);
  inline ::PBPaperValue* add_bindmoneyinfo();
  
  // optional uint32 RedPaperType = 5;
  inline bool has_redpapertype() const;
  inline void clear_redpapertype();
  static const int kRedPaperTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 redpapertype() const;
  inline void set_redpapertype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 basecharge_;
  ::google::protobuf::RepeatedPtrField< ::PBPaperValue > moneyinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBPaperValue > bindmoneyinfo_;
  ::google::protobuf::uint32 redpapertype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemRedPaper* default_instance_;
};
// -------------------------------------------------------------------

class PBTrend : public ::google::protobuf::Message {
 public:
  PBTrend();
  virtual ~PBTrend();
  
  PBTrend(const PBTrend& from);
  
  inline PBTrend& operator=(const PBTrend& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTrend& default_instance();
  void Swap(PBTrend* other);
  
  // implements Message ----------------------------------------------
  
  PBTrend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTrend& from);
  void MergeFrom(const PBTrend& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Bonus = 2;
  inline int bonus_size() const;
  inline void clear_bonus();
  static const int kBonusFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bonus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bonus();
  inline ::google::protobuf::uint32 bonus(int index) const;
  inline void set_bonus(int index, ::google::protobuf::uint32 value);
  inline void add_bonus(::google::protobuf::uint32 value);
  
  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string Desc = 4;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 4;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bonus_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* desc_;
  static const ::std::string _default_desc_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTrend* default_instance_;
};
// -------------------------------------------------------------------

class PBAward : public ::google::protobuf::Message {
 public:
  PBAward();
  virtual ~PBAward();
  
  PBAward(const PBAward& from);
  
  inline PBAward& operator=(const PBAward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAward& default_instance();
  void Swap(PBAward* other);
  
  // implements Message ----------------------------------------------
  
  PBAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAward& from);
  void MergeFrom(const PBAward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 2;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAward* default_instance_;
};
// -------------------------------------------------------------------

class PBAchieveAward : public ::google::protobuf::Message {
 public:
  PBAchieveAward();
  virtual ~PBAchieveAward();
  
  PBAchieveAward(const PBAchieveAward& from);
  
  inline PBAchieveAward& operator=(const PBAchieveAward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAchieveAward& default_instance();
  void Swap(PBAchieveAward* other);
  
  // implements Message ----------------------------------------------
  
  PBAchieveAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAchieveAward& from);
  void MergeFrom(const PBAchieveAward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 AwardID = 2;
  inline int awardid_size() const;
  inline void clear_awardid();
  static const int kAwardIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& awardid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_awardid();
  inline ::google::protobuf::uint32 awardid(int index) const;
  inline void set_awardid(int index, ::google::protobuf::uint32 value);
  inline void add_awardid(::google::protobuf::uint32 value);
  
  // repeated uint32 AwardNum = 3;
  inline int awardnum_size() const;
  inline void clear_awardnum();
  static const int kAwardNumFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& awardnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_awardnum();
  inline ::google::protobuf::uint32 awardnum(int index) const;
  inline void set_awardnum(int index, ::google::protobuf::uint32 value);
  inline void add_awardnum(::google::protobuf::uint32 value);
  
  // repeated uint32 Point = 4;
  inline int point_size() const;
  inline void clear_point();
  static const int kPointFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& point() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_point();
  inline ::google::protobuf::uint32 point(int index) const;
  inline void set_point(int index, ::google::protobuf::uint32 value);
  inline void add_point(::google::protobuf::uint32 value);
  
  // optional uint32 SysMailID = 5;
  inline bool has_sysmailid() const;
  inline void clear_sysmailid();
  static const int kSysMailIDFieldNumber = 5;
  inline ::google::protobuf::uint32 sysmailid() const;
  inline void set_sysmailid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > awardid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > awardnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > point_;
  ::google::protobuf::uint32 sysmailid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAchieveAward* default_instance_;
};
// -------------------------------------------------------------------

class PBPower : public ::google::protobuf::Message {
 public:
  PBPower();
  virtual ~PBPower();
  
  PBPower(const PBPower& from);
  
  inline PBPower& operator=(const PBPower& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPower& default_instance();
  void Swap(PBPower* other);
  
  // implements Message ----------------------------------------------
  
  PBPower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPower& from);
  void MergeFrom(const PBPower& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string Desc = 3;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 3;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Official = 6;
  inline bool has_official() const;
  inline void clear_official();
  static const int kOfficialFieldNumber = 6;
  inline ::google::protobuf::uint32 official() const;
  inline void set_official(::google::protobuf::uint32 value);
  
  // optional uint32 Order = 7;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 7;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional uint32 Param1 = 8;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 8;
  inline ::google::protobuf::uint32 param1() const;
  inline void set_param1(::google::protobuf::uint32 value);
  
  // optional uint32 Param2 = 9;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 9;
  inline ::google::protobuf::uint32 param2() const;
  inline void set_param2(::google::protobuf::uint32 value);
  
  // repeated uint32 UseTime = 10;
  inline int usetime_size() const;
  inline void clear_usetime();
  static const int kUseTimeFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& usetime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_usetime();
  inline ::google::protobuf::uint32 usetime(int index) const;
  inline void set_usetime(int index, ::google::protobuf::uint32 value);
  inline void add_usetime(::google::protobuf::uint32 value);
  
  // optional uint32 Construct = 11;
  inline bool has_construct() const;
  inline void clear_construct();
  static const int kConstructFieldNumber = 11;
  inline ::google::protobuf::uint32 construct() const;
  inline void set_construct(::google::protobuf::uint32 value);
  
  // optional uint32 Power = 12;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 12;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);
  
  // optional uint32 Money = 13;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 13;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional string Icon = 14;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 14;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  
  // optional uint32 Country = 15;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 15;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);
  
  // optional uint32 AllCount = 16;
  inline bool has_allcount() const;
  inline void clear_allcount();
  static const int kAllCountFieldNumber = 16;
  inline ::google::protobuf::uint32 allcount() const;
  inline void set_allcount(::google::protobuf::uint32 value);
  
  // optional uint32 StartHour = 17;
  inline bool has_starthour() const;
  inline void clear_starthour();
  static const int kStartHourFieldNumber = 17;
  inline ::google::protobuf::uint32 starthour() const;
  inline void set_starthour(::google::protobuf::uint32 value);
  
  // optional uint32 StartMin = 18;
  inline bool has_startmin() const;
  inline void clear_startmin();
  static const int kStartMinFieldNumber = 18;
  inline ::google::protobuf::uint32 startmin() const;
  inline void set_startmin(::google::protobuf::uint32 value);
  
  // optional uint32 EndHour = 19;
  inline bool has_endhour() const;
  inline void clear_endhour();
  static const int kEndHourFieldNumber = 19;
  inline ::google::protobuf::uint32 endhour() const;
  inline void set_endhour(::google::protobuf::uint32 value);
  
  // optional uint32 EndMin = 20;
  inline bool has_endmin() const;
  inline void clear_endmin();
  static const int kEndMinFieldNumber = 20;
  inline ::google::protobuf::uint32 endmin() const;
  inline void set_endmin(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* desc_;
  static const ::std::string _default_desc_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 official_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 param1_;
  ::google::protobuf::uint32 param2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > usetime_;
  ::google::protobuf::uint32 construct_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint32 money_;
  ::std::string* icon_;
  static const ::std::string _default_icon_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 allcount_;
  ::google::protobuf::uint32 starthour_;
  ::google::protobuf::uint32 startmin_;
  ::google::protobuf::uint32 endhour_;
  ::google::protobuf::uint32 endmin_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBPower* default_instance_;
};
// -------------------------------------------------------------------

class PBOfficial : public ::google::protobuf::Message {
 public:
  PBOfficial();
  virtual ~PBOfficial();
  
  PBOfficial(const PBOfficial& from);
  
  inline PBOfficial& operator=(const PBOfficial& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOfficial& default_instance();
  void Swap(PBOfficial* other);
  
  // implements Message ----------------------------------------------
  
  PBOfficial* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOfficial& from);
  void MergeFrom(const PBOfficial& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string Desc = 3;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 3;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  
  // optional uint32 Type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // repeated uint32 Wizard = 5;
  inline int wizard_size() const;
  inline void clear_wizard();
  static const int kWizardFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& wizard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_wizard();
  inline ::google::protobuf::uint32 wizard(int index) const;
  inline void set_wizard(int index, ::google::protobuf::uint32 value);
  inline void add_wizard(::google::protobuf::uint32 value);
  
  // optional uint32 Power = 6;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 6;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);
  
  // optional uint32 CountryLevel = 7;
  inline bool has_countrylevel() const;
  inline void clear_countrylevel();
  static const int kCountryLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 countrylevel() const;
  inline void set_countrylevel(::google::protobuf::uint32 value);
  
  // optional uint32 ConstructLevel = 8;
  inline bool has_constructlevel() const;
  inline void clear_constructlevel();
  static const int kConstructLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 constructlevel() const;
  inline void set_constructlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* desc_;
  static const ::std::string _default_desc_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wizard_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint32 countrylevel_;
  ::google::protobuf::uint32 constructlevel_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOfficial* default_instance_;
};
// -------------------------------------------------------------------

class PBOfficialTable : public ::google::protobuf::Message {
 public:
  PBOfficialTable();
  virtual ~PBOfficialTable();
  
  PBOfficialTable(const PBOfficialTable& from);
  
  inline PBOfficialTable& operator=(const PBOfficialTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOfficialTable& default_instance();
  void Swap(PBOfficialTable* other);
  
  // implements Message ----------------------------------------------
  
  PBOfficialTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOfficialTable& from);
  void MergeFrom(const PBOfficialTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 OfficialData = 2;
  inline int officialdata_size() const;
  inline void clear_officialdata();
  static const int kOfficialDataFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& officialdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_officialdata();
  inline ::google::protobuf::uint32 officialdata(int index) const;
  inline void set_officialdata(int index, ::google::protobuf::uint32 value);
  inline void add_officialdata(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > officialdata_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOfficialTable* default_instance_;
};
// -------------------------------------------------------------------

class PBConstructExp : public ::google::protobuf::Message {
 public:
  PBConstructExp();
  virtual ~PBConstructExp();
  
  PBConstructExp(const PBConstructExp& from);
  
  inline PBConstructExp& operator=(const PBConstructExp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBConstructExp& default_instance();
  void Swap(PBConstructExp* other);
  
  // implements Message ----------------------------------------------
  
  PBConstructExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBConstructExp& from);
  void MergeFrom(const PBConstructExp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Exp = 2;
  inline int exp_size() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& exp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_exp();
  inline ::google::protobuf::uint32 exp(int index) const;
  inline void set_exp(int index, ::google::protobuf::uint32 value);
  inline void add_exp(::google::protobuf::uint32 value);
  
  // repeated uint32 Bonus = 3;
  inline int bonus_size() const;
  inline void clear_bonus();
  static const int kBonusFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bonus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bonus();
  inline ::google::protobuf::uint32 bonus(int index) const;
  inline void set_bonus(int index, ::google::protobuf::uint32 value);
  inline void add_bonus(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bonus_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBConstructExp* default_instance_;
};
// -------------------------------------------------------------------

class PBAddPKTable : public ::google::protobuf::Message {
 public:
  PBAddPKTable();
  virtual ~PBAddPKTable();
  
  PBAddPKTable(const PBAddPKTable& from);
  
  inline PBAddPKTable& operator=(const PBAddPKTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAddPKTable& default_instance();
  void Swap(PBAddPKTable* other);
  
  // implements Message ----------------------------------------------
  
  PBAddPKTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAddPKTable& from);
  void MergeFrom(const PBAddPKTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 KFChangePower = 2;
  inline bool has_kfchangepower() const;
  inline void clear_kfchangepower();
  static const int kKFChangePowerFieldNumber = 2;
  inline ::google::protobuf::uint32 kfchangepower() const;
  inline void set_kfchangepower(::google::protobuf::uint32 value);
  
  // optional uint32 KPChangePower = 3;
  inline bool has_kpchangepower() const;
  inline void clear_kpchangepower();
  static const int kKPChangePowerFieldNumber = 3;
  inline ::google::protobuf::uint32 kpchangepower() const;
  inline void set_kpchangepower(::google::protobuf::uint32 value);
  
  // optional uint32 KWChangePower = 4;
  inline bool has_kwchangepower() const;
  inline void clear_kwchangepower();
  static const int kKWChangePowerFieldNumber = 4;
  inline ::google::protobuf::uint32 kwchangepower() const;
  inline void set_kwchangepower(::google::protobuf::uint32 value);
  
  // optional uint32 DFChangePower = 5;
  inline bool has_dfchangepower() const;
  inline void clear_dfchangepower();
  static const int kDFChangePowerFieldNumber = 5;
  inline ::google::protobuf::uint32 dfchangepower() const;
  inline void set_dfchangepower(::google::protobuf::uint32 value);
  
  // optional uint32 DPChangePower = 6;
  inline bool has_dpchangepower() const;
  inline void clear_dpchangepower();
  static const int kDPChangePowerFieldNumber = 6;
  inline ::google::protobuf::uint32 dpchangepower() const;
  inline void set_dpchangepower(::google::protobuf::uint32 value);
  
  // optional uint32 DWChangePower = 7;
  inline bool has_dwchangepower() const;
  inline void clear_dwchangepower();
  static const int kDWChangePowerFieldNumber = 7;
  inline ::google::protobuf::uint32 dwchangepower() const;
  inline void set_dwchangepower(::google::protobuf::uint32 value);
  
  // optional uint32 KFChangeFriend = 8;
  inline bool has_kfchangefriend() const;
  inline void clear_kfchangefriend();
  static const int kKFChangeFriendFieldNumber = 8;
  inline ::google::protobuf::uint32 kfchangefriend() const;
  inline void set_kfchangefriend(::google::protobuf::uint32 value);
  
  // optional uint32 KPChangeFriend = 9;
  inline bool has_kpchangefriend() const;
  inline void clear_kpchangefriend();
  static const int kKPChangeFriendFieldNumber = 9;
  inline ::google::protobuf::uint32 kpchangefriend() const;
  inline void set_kpchangefriend(::google::protobuf::uint32 value);
  
  // optional uint32 KWChangeFriend = 10;
  inline bool has_kwchangefriend() const;
  inline void clear_kwchangefriend();
  static const int kKWChangeFriendFieldNumber = 10;
  inline ::google::protobuf::uint32 kwchangefriend() const;
  inline void set_kwchangefriend(::google::protobuf::uint32 value);
  
  // optional uint32 KFChangePK = 11;
  inline bool has_kfchangepk() const;
  inline void clear_kfchangepk();
  static const int kKFChangePKFieldNumber = 11;
  inline ::google::protobuf::uint32 kfchangepk() const;
  inline void set_kfchangepk(::google::protobuf::uint32 value);
  
  // optional uint32 KWChangePK = 12;
  inline bool has_kwchangepk() const;
  inline void clear_kwchangepk();
  static const int kKWChangePKFieldNumber = 12;
  inline ::google::protobuf::uint32 kwchangepk() const;
  inline void set_kwchangepk(::google::protobuf::uint32 value);
  
  // repeated uint32 KPChangePK = 13;
  inline int kpchangepk_size() const;
  inline void clear_kpchangepk();
  static const int kKPChangePKFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& kpchangepk() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_kpchangepk();
  inline ::google::protobuf::uint32 kpchangepk(int index) const;
  inline void set_kpchangepk(int index, ::google::protobuf::uint32 value);
  inline void add_kpchangepk(::google::protobuf::uint32 value);
  
  // repeated uint32 PFriendMin = 14;
  inline int pfriendmin_size() const;
  inline void clear_pfriendmin();
  static const int kPFriendMinFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pfriendmin() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pfriendmin();
  inline ::google::protobuf::uint32 pfriendmin(int index) const;
  inline void set_pfriendmin(int index, ::google::protobuf::uint32 value);
  inline void add_pfriendmin(::google::protobuf::uint32 value);
  
  // repeated uint32 PFriendMax = 15;
  inline int pfriendmax_size() const;
  inline void clear_pfriendmax();
  static const int kPFriendMaxFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pfriendmax() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pfriendmax();
  inline ::google::protobuf::uint32 pfriendmax(int index) const;
  inline void set_pfriendmax(int index, ::google::protobuf::uint32 value);
  inline void add_pfriendmax(::google::protobuf::uint32 value);
  
  // optional uint32 KFChangeHonor = 16;
  inline bool has_kfchangehonor() const;
  inline void clear_kfchangehonor();
  static const int kKFChangeHonorFieldNumber = 16;
  inline ::google::protobuf::uint32 kfchangehonor() const;
  inline void set_kfchangehonor(::google::protobuf::uint32 value);
  
  // optional uint32 KPChangeHonor = 17;
  inline bool has_kpchangehonor() const;
  inline void clear_kpchangehonor();
  static const int kKPChangeHonorFieldNumber = 17;
  inline ::google::protobuf::uint32 kpchangehonor() const;
  inline void set_kpchangehonor(::google::protobuf::uint32 value);
  
  // optional uint32 KWChangeHonor = 18;
  inline bool has_kwchangehonor() const;
  inline void clear_kwchangehonor();
  static const int kKWChangeHonorFieldNumber = 18;
  inline ::google::protobuf::uint32 kwchangehonor() const;
  inline void set_kwchangehonor(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 kfchangepower_;
  ::google::protobuf::uint32 kpchangepower_;
  ::google::protobuf::uint32 kwchangepower_;
  ::google::protobuf::uint32 dfchangepower_;
  ::google::protobuf::uint32 dpchangepower_;
  ::google::protobuf::uint32 dwchangepower_;
  ::google::protobuf::uint32 kfchangefriend_;
  ::google::protobuf::uint32 kpchangefriend_;
  ::google::protobuf::uint32 kwchangefriend_;
  ::google::protobuf::uint32 kfchangepk_;
  ::google::protobuf::uint32 kwchangepk_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > kpchangepk_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pfriendmin_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pfriendmax_;
  ::google::protobuf::uint32 kfchangehonor_;
  ::google::protobuf::uint32 kpchangehonor_;
  ::google::protobuf::uint32 kwchangehonor_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAddPKTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMapTable : public ::google::protobuf::Message {
 public:
  PBMapTable();
  virtual ~PBMapTable();
  
  PBMapTable(const PBMapTable& from);
  
  inline PBMapTable& operator=(const PBMapTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMapTable& default_instance();
  void Swap(PBMapTable* other);
  
  // implements Message ----------------------------------------------
  
  PBMapTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMapTable& from);
  void MergeFrom(const PBMapTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Level = 2;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& level() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_level();
  inline ::google::protobuf::uint32 level(int index) const;
  inline void set_level(int index, ::google::protobuf::uint32 value);
  inline void add_level(::google::protobuf::uint32 value);
  
  // repeated uint32 Power = 3;
  inline int power_size() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& power() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_power();
  inline ::google::protobuf::uint32 power(int index) const;
  inline void set_power(int index, ::google::protobuf::uint32 value);
  inline void add_power(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > power_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMapTable* default_instance_;
};
// -------------------------------------------------------------------

class PBMultiAttackTable : public ::google::protobuf::Message {
 public:
  PBMultiAttackTable();
  virtual ~PBMultiAttackTable();
  
  PBMultiAttackTable(const PBMultiAttackTable& from);
  
  inline PBMultiAttackTable& operator=(const PBMultiAttackTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMultiAttackTable& default_instance();
  void Swap(PBMultiAttackTable* other);
  
  // implements Message ----------------------------------------------
  
  PBMultiAttackTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMultiAttackTable& from);
  void MergeFrom(const PBMultiAttackTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Reduce = 2;
  inline int reduce_size() const;
  inline void clear_reduce();
  static const int kReduceFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& reduce() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_reduce();
  inline ::google::protobuf::uint32 reduce(int index) const;
  inline void set_reduce(int index, ::google::protobuf::uint32 value);
  inline void add_reduce(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reduce_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMultiAttackTable* default_instance_;
};
// -------------------------------------------------------------------

class PBItemVip : public ::google::protobuf::Message {
 public:
  PBItemVip();
  virtual ~PBItemVip();
  
  PBItemVip(const PBItemVip& from);
  
  inline PBItemVip& operator=(const PBItemVip& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemVip& default_instance();
  void Swap(PBItemVip* other);
  
  // implements Message ----------------------------------------------
  
  PBItemVip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemVip& from);
  void MergeFrom(const PBItemVip& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 VipLevel = 2;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);
  
  // optional uint32 VipTime = 3;
  inline bool has_viptime() const;
  inline void clear_viptime();
  static const int kVipTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 viptime() const;
  inline void set_viptime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 viptime_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemVip* default_instance_;
};
// -------------------------------------------------------------------

class PBItemClean : public ::google::protobuf::Message {
 public:
  PBItemClean();
  virtual ~PBItemClean();
  
  PBItemClean(const PBItemClean& from);
  
  inline PBItemClean& operator=(const PBItemClean& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemClean& default_instance();
  void Swap(PBItemClean* other);
  
  // implements Message ----------------------------------------------
  
  PBItemClean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemClean& from);
  void MergeFrom(const PBItemClean& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 CleanType = 2;
  inline bool has_cleantype() const;
  inline void clear_cleantype();
  static const int kCleanTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 cleantype() const;
  inline void set_cleantype(::google::protobuf::uint32 value);
  
  // optional uint32 CleanLevel = 3;
  inline bool has_cleanlevel() const;
  inline void clear_cleanlevel();
  static const int kCleanLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 cleanlevel() const;
  inline void set_cleanlevel(::google::protobuf::uint32 value);
  
  // optional uint32 Step = 4;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 4;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 cleantype_;
  ::google::protobuf::uint32 cleanlevel_;
  ::google::protobuf::uint32 step_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemClean* default_instance_;
};
// -------------------------------------------------------------------

class PBAwardInfo : public ::google::protobuf::Message {
 public:
  PBAwardInfo();
  virtual ~PBAwardInfo();
  
  PBAwardInfo(const PBAwardInfo& from);
  
  inline PBAwardInfo& operator=(const PBAwardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAwardInfo& default_instance();
  void Swap(PBAwardInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBAwardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAwardInfo& from);
  void MergeFrom(const PBAwardInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional string Name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional string Desc = 3;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 3;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  
  // repeated uint32 ItemID = 4;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemid();
  inline ::google::protobuf::uint32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::uint32 value);
  inline void add_itemid(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemNum = 5;
  inline int itemnum_size() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemnum();
  inline ::google::protobuf::uint32 itemnum(int index) const;
  inline void set_itemnum(int index, ::google::protobuf::uint32 value);
  inline void add_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 BuffID = 6;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 6;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
  // optional uint32 Times = 7;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);
  
  // optional uint32 NpcID = 8;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIDFieldNumber = 8;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 Country = 9;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 9;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);
  
  // optional uint32 NoFamily = 10;
  inline bool has_nofamily() const;
  inline void clear_nofamily();
  static const int kNoFamilyFieldNumber = 10;
  inline ::google::protobuf::uint32 nofamily() const;
  inline void set_nofamily(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::std::string* desc_;
  static const ::std::string _default_desc_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemnum_;
  ::google::protobuf::uint32 buffid_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 nofamily_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAwardInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBLeagueItem : public ::google::protobuf::Message {
 public:
  PBLeagueItem();
  virtual ~PBLeagueItem();
  
  PBLeagueItem(const PBLeagueItem& from);
  
  inline PBLeagueItem& operator=(const PBLeagueItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLeagueItem& default_instance();
  void Swap(PBLeagueItem* other);
  
  // implements Message ----------------------------------------------
  
  PBLeagueItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLeagueItem& from);
  void MergeFrom(const PBLeagueItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 2;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 Probality = 3;
  inline bool has_probality() const;
  inline void clear_probality();
  static const int kProbalityFieldNumber = 3;
  inline ::google::protobuf::uint32 probality() const;
  inline void set_probality(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 probality_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLeagueItem* default_instance_;
};
// -------------------------------------------------------------------

class PBLeagueBag : public ::google::protobuf::Message {
 public:
  PBLeagueBag();
  virtual ~PBLeagueBag();
  
  PBLeagueBag(const PBLeagueBag& from);
  
  inline PBLeagueBag& operator=(const PBLeagueBag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLeagueBag& default_instance();
  void Swap(PBLeagueBag* other);
  
  // implements Message ----------------------------------------------
  
  PBLeagueBag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLeagueBag& from);
  void MergeFrom(const PBLeagueBag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // repeated .PBLeagueItem LeagueItemInfo = 2;
  inline int leagueiteminfo_size() const;
  inline void clear_leagueiteminfo();
  static const int kLeagueItemInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBLeagueItem >& leagueiteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBLeagueItem >* mutable_leagueiteminfo();
  inline const ::PBLeagueItem& leagueiteminfo(int index) const;
  inline ::PBLeagueItem* mutable_leagueiteminfo(int index);
  inline ::PBLeagueItem* add_leagueiteminfo();
  
  // optional uint32 LeagueBagType = 3;
  inline bool has_leaguebagtype() const;
  inline void clear_leaguebagtype();
  static const int kLeagueBagTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 leaguebagtype() const;
  inline void set_leaguebagtype(::google::protobuf::uint32 value);
  
  // optional uint32 ExchangeTableID = 4;
  inline bool has_exchangetableid() const;
  inline void clear_exchangetableid();
  static const int kExchangeTableIDFieldNumber = 4;
  inline ::google::protobuf::uint32 exchangetableid() const;
  inline void set_exchangetableid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 5;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 5;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 6;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 6;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 7;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 7;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::RepeatedPtrField< ::PBLeagueItem > leagueiteminfo_;
  ::google::protobuf::uint32 leaguebagtype_;
  ::google::protobuf::uint32 exchangetableid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBLeagueBag* default_instance_;
};
// -------------------------------------------------------------------

class PBMatrixTable : public ::google::protobuf::Message {
 public:
  PBMatrixTable();
  virtual ~PBMatrixTable();
  
  PBMatrixTable(const PBMatrixTable& from);
  
  inline PBMatrixTable& operator=(const PBMatrixTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMatrixTable& default_instance();
  void Swap(PBMatrixTable* other);
  
  // implements Message ----------------------------------------------
  
  PBMatrixTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMatrixTable& from);
  void MergeFrom(const PBMatrixTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 Level = 2;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& level() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_level();
  inline ::google::protobuf::uint32 level(int index) const;
  inline void set_level(int index, ::google::protobuf::uint32 value);
  inline void add_level(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLimit = 3;
  inline bool has_maxlimit() const;
  inline void clear_maxlimit();
  static const int kMaxLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 maxlimit() const;
  inline void set_maxlimit(::google::protobuf::uint32 value);
  
  // optional uint32 MinLimit = 4;
  inline bool has_minlimit() const;
  inline void clear_minlimit();
  static const int kMinLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 minlimit() const;
  inline void set_minlimit(::google::protobuf::uint32 value);
  
  // repeated uint32 MasterItemID = 5;
  inline int masteritemid_size() const;
  inline void clear_masteritemid();
  static const int kMasterItemIDFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& masteritemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_masteritemid();
  inline ::google::protobuf::uint32 masteritemid(int index) const;
  inline void set_masteritemid(int index, ::google::protobuf::uint32 value);
  inline void add_masteritemid(::google::protobuf::uint32 value);
  
  // repeated uint32 MasterItemNum = 6;
  inline int masteritemnum_size() const;
  inline void clear_masteritemnum();
  static const int kMasterItemNumFieldNumber = 6;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& masteritemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_masteritemnum();
  inline ::google::protobuf::uint32 masteritemnum(int index) const;
  inline void set_masteritemnum(int index, ::google::protobuf::uint32 value);
  inline void add_masteritemnum(::google::protobuf::uint32 value);
  
  // repeated uint32 MailID = 7;
  inline int mailid_size() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mailid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mailid();
  inline ::google::protobuf::uint32 mailid(int index) const;
  inline void set_mailid(int index, ::google::protobuf::uint32 value);
  inline void add_mailid(::google::protobuf::uint32 value);
  
  // optional uint32 FormalLevel = 8;
  inline bool has_formallevel() const;
  inline void clear_formallevel();
  static const int kFormalLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 formallevel() const;
  inline void set_formallevel(::google::protobuf::uint32 value);
  
  // optional uint32 EducatedLevel = 9;
  inline bool has_educatedlevel() const;
  inline void clear_educatedlevel();
  static const int kEducatedLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 educatedlevel() const;
  inline void set_educatedlevel(::google::protobuf::uint32 value);
  
  // optional uint32 EnterLimit = 10;
  inline bool has_enterlimit() const;
  inline void clear_enterlimit();
  static const int kEnterLimitFieldNumber = 10;
  inline ::google::protobuf::uint32 enterlimit() const;
  inline void set_enterlimit(::google::protobuf::uint32 value);
  
  // optional uint32 RemoveItem = 11;
  inline bool has_removeitem() const;
  inline void clear_removeitem();
  static const int kRemoveItemFieldNumber = 11;
  inline ::google::protobuf::uint32 removeitem() const;
  inline void set_removeitem(::google::protobuf::uint32 value);
  
  // optional uint32 RemoveMoney = 12;
  inline bool has_removemoney() const;
  inline void clear_removemoney();
  static const int kRemoveMoneyFieldNumber = 12;
  inline ::google::protobuf::uint32 removemoney() const;
  inline void set_removemoney(::google::protobuf::uint32 value);
  
  // optional uint32 FormalPercent = 13;
  inline bool has_formalpercent() const;
  inline void clear_formalpercent();
  static const int kFormalPercentFieldNumber = 13;
  inline ::google::protobuf::uint32 formalpercent() const;
  inline void set_formalpercent(::google::protobuf::uint32 value);
  
  // optional uint32 EducatedPercent = 14;
  inline bool has_educatedpercent() const;
  inline void clear_educatedpercent();
  static const int kEducatedPercentFieldNumber = 14;
  inline ::google::protobuf::uint32 educatedpercent() const;
  inline void set_educatedpercent(::google::protobuf::uint32 value);
  
  // optional uint32 ReturnLimit = 15;
  inline bool has_returnlimit() const;
  inline void clear_returnlimit();
  static const int kReturnLimitFieldNumber = 15;
  inline ::google::protobuf::uint32 returnlimit() const;
  inline void set_returnlimit(::google::protobuf::uint32 value);
  
  // optional uint32 AlterMax = 16;
  inline bool has_altermax() const;
  inline void clear_altermax();
  static const int kAlterMaxFieldNumber = 16;
  inline ::google::protobuf::uint32 altermax() const;
  inline void set_altermax(::google::protobuf::uint32 value);
  
  // optional uint32 AlterMin = 17;
  inline bool has_altermin() const;
  inline void clear_altermin();
  static const int kAlterMinFieldNumber = 17;
  inline ::google::protobuf::uint32 altermin() const;
  inline void set_altermin(::google::protobuf::uint32 value);
  
  // optional uint32 ReturnMailID = 18;
  inline bool has_returnmailid() const;
  inline void clear_returnmailid();
  static const int kReturnMailIDFieldNumber = 18;
  inline ::google::protobuf::uint32 returnmailid() const;
  inline void set_returnmailid(::google::protobuf::uint32 value);
  
  // repeated uint32 SlaveItemID = 19;
  inline int slaveitemid_size() const;
  inline void clear_slaveitemid();
  static const int kSlaveItemIDFieldNumber = 19;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slaveitemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slaveitemid();
  inline ::google::protobuf::uint32 slaveitemid(int index) const;
  inline void set_slaveitemid(int index, ::google::protobuf::uint32 value);
  inline void add_slaveitemid(::google::protobuf::uint32 value);
  
  // repeated uint32 SlaveItemNum = 20;
  inline int slaveitemnum_size() const;
  inline void clear_slaveitemnum();
  static const int kSlaveItemNumFieldNumber = 20;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& slaveitemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_slaveitemnum();
  inline ::google::protobuf::uint32 slaveitemnum(int index) const;
  inline void set_slaveitemnum(int index, ::google::protobuf::uint32 value);
  inline void add_slaveitemnum(::google::protobuf::uint32 value);
  
  // optional uint32 AlterAll = 21;
  inline bool has_alterall() const;
  inline void clear_alterall();
  static const int kAlterAllFieldNumber = 21;
  inline ::google::protobuf::uint32 alterall() const;
  inline void set_alterall(::google::protobuf::uint32 value);
  
  // optional uint32 AlterDefault = 22;
  inline bool has_alterdefault() const;
  inline void clear_alterdefault();
  static const int kAlterDefaultFieldNumber = 22;
  inline ::google::protobuf::uint32 alterdefault() const;
  inline void set_alterdefault(::google::protobuf::uint32 value);
  
  // optional uint32 SlaveMailID = 23;
  inline bool has_slavemailid() const;
  inline void clear_slavemailid();
  static const int kSlaveMailIDFieldNumber = 23;
  inline ::google::protobuf::uint32 slavemailid() const;
  inline void set_slavemailid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > level_;
  ::google::protobuf::uint32 maxlimit_;
  ::google::protobuf::uint32 minlimit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > masteritemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > masteritemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mailid_;
  ::google::protobuf::uint32 formallevel_;
  ::google::protobuf::uint32 educatedlevel_;
  ::google::protobuf::uint32 enterlimit_;
  ::google::protobuf::uint32 removeitem_;
  ::google::protobuf::uint32 removemoney_;
  ::google::protobuf::uint32 formalpercent_;
  ::google::protobuf::uint32 educatedpercent_;
  ::google::protobuf::uint32 returnlimit_;
  ::google::protobuf::uint32 altermax_;
  ::google::protobuf::uint32 altermin_;
  ::google::protobuf::uint32 returnmailid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slaveitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > slaveitemnum_;
  ::google::protobuf::uint32 alterall_;
  ::google::protobuf::uint32 alterdefault_;
  ::google::protobuf::uint32 slavemailid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBMatrixTable* default_instance_;
};
// -------------------------------------------------------------------

class PBWeddingInfo : public ::google::protobuf::Message {
 public:
  PBWeddingInfo();
  virtual ~PBWeddingInfo();
  
  PBWeddingInfo(const PBWeddingInfo& from);
  
  inline PBWeddingInfo& operator=(const PBWeddingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWeddingInfo& default_instance();
  void Swap(PBWeddingInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBWeddingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWeddingInfo& from);
  void MergeFrom(const PBWeddingInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 WeddingLength = 1;
  inline bool has_weddinglength() const;
  inline void clear_weddinglength();
  static const int kWeddingLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 weddinglength() const;
  inline void set_weddinglength(::google::protobuf::uint32 value);
  
  // optional uint32 MoneyNeeded = 2;
  inline bool has_moneyneeded() const;
  inline void clear_moneyneeded();
  static const int kMoneyNeededFieldNumber = 2;
  inline ::google::protobuf::uint32 moneyneeded() const;
  inline void set_moneyneeded(::google::protobuf::uint32 value);
  
  // optional uint32 DelayMoneyNeeded = 3;
  inline bool has_delaymoneyneeded() const;
  inline void clear_delaymoneyneeded();
  static const int kDelayMoneyNeededFieldNumber = 3;
  inline ::google::protobuf::uint32 delaymoneyneeded() const;
  inline void set_delaymoneyneeded(::google::protobuf::uint32 value);
  
  // optional uint32 WeddingRedstoneID = 4;
  inline bool has_weddingredstoneid() const;
  inline void clear_weddingredstoneid();
  static const int kWeddingRedstoneIDFieldNumber = 4;
  inline ::google::protobuf::uint32 weddingredstoneid() const;
  inline void set_weddingredstoneid(::google::protobuf::uint32 value);
  
  // optional uint32 WeddingHallRedstoneID = 5;
  inline bool has_weddinghallredstoneid() const;
  inline void clear_weddinghallredstoneid();
  static const int kWeddingHallRedstoneIDFieldNumber = 5;
  inline ::google::protobuf::uint32 weddinghallredstoneid() const;
  inline void set_weddinghallredstoneid(::google::protobuf::uint32 value);
  
  // optional uint32 WeddingHallMapID = 6;
  inline bool has_weddinghallmapid() const;
  inline void clear_weddinghallmapid();
  static const int kWeddingHallMapIDFieldNumber = 6;
  inline ::google::protobuf::uint32 weddinghallmapid() const;
  inline void set_weddinghallmapid(::google::protobuf::uint32 value);
  
  // optional uint32 InvitationCardID = 7;
  inline bool has_invitationcardid() const;
  inline void clear_invitationcardid();
  static const int kInvitationCardIDFieldNumber = 7;
  inline ::google::protobuf::uint32 invitationcardid() const;
  inline void set_invitationcardid(::google::protobuf::uint32 value);
  
  // optional uint32 InvitationCardNum = 8;
  inline bool has_invitationcardnum() const;
  inline void clear_invitationcardnum();
  static const int kInvitationCardNumFieldNumber = 8;
  inline ::google::protobuf::uint32 invitationcardnum() const;
  inline void set_invitationcardnum(::google::protobuf::uint32 value);
  
  // optional uint32 FemaleKeepsakeID = 9;
  inline bool has_femalekeepsakeid() const;
  inline void clear_femalekeepsakeid();
  static const int kFemaleKeepsakeIDFieldNumber = 9;
  inline ::google::protobuf::uint32 femalekeepsakeid() const;
  inline void set_femalekeepsakeid(::google::protobuf::uint32 value);
  
  // optional uint32 MaleKeepsakeID = 10;
  inline bool has_malekeepsakeid() const;
  inline void clear_malekeepsakeid();
  static const int kMaleKeepsakeIDFieldNumber = 10;
  inline ::google::protobuf::uint32 malekeepsakeid() const;
  inline void set_malekeepsakeid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 11;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 11;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 12;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 12;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 FemaleKeepsakeTwo = 13;
  inline bool has_femalekeepsaketwo() const;
  inline void clear_femalekeepsaketwo();
  static const int kFemaleKeepsakeTwoFieldNumber = 13;
  inline ::google::protobuf::uint32 femalekeepsaketwo() const;
  inline void set_femalekeepsaketwo(::google::protobuf::uint32 value);
  
  // optional uint32 MaleKeepsakeTwo = 14;
  inline bool has_malekeepsaketwo() const;
  inline void clear_malekeepsaketwo();
  static const int kMaleKeepsakeTwoFieldNumber = 14;
  inline ::google::protobuf::uint32 malekeepsaketwo() const;
  inline void set_malekeepsaketwo(::google::protobuf::uint32 value);
  
  // optional uint32 FemaleKeepsakeThree = 15;
  inline bool has_femalekeepsakethree() const;
  inline void clear_femalekeepsakethree();
  static const int kFemaleKeepsakeThreeFieldNumber = 15;
  inline ::google::protobuf::uint32 femalekeepsakethree() const;
  inline void set_femalekeepsakethree(::google::protobuf::uint32 value);
  
  // optional uint32 MaleKeepsakeThree = 16;
  inline bool has_malekeepsakethree() const;
  inline void clear_malekeepsakethree();
  static const int kMaleKeepsakeThreeFieldNumber = 16;
  inline ::google::protobuf::uint32 malekeepsakethree() const;
  inline void set_malekeepsakethree(::google::protobuf::uint32 value);
  
  // optional uint32 MaleBufferID = 17;
  inline bool has_malebufferid() const;
  inline void clear_malebufferid();
  static const int kMaleBufferIDFieldNumber = 17;
  inline ::google::protobuf::uint32 malebufferid() const;
  inline void set_malebufferid(::google::protobuf::uint32 value);
  
  // optional uint32 FemaleBufferID = 18;
  inline bool has_femalebufferid() const;
  inline void clear_femalebufferid();
  static const int kFemaleBufferIDFieldNumber = 18;
  inline ::google::protobuf::uint32 femalebufferid() const;
  inline void set_femalebufferid(::google::protobuf::uint32 value);
  
  // optional uint32 MaleItemID = 19;
  inline bool has_maleitemid() const;
  inline void clear_maleitemid();
  static const int kMaleItemIDFieldNumber = 19;
  inline ::google::protobuf::uint32 maleitemid() const;
  inline void set_maleitemid(::google::protobuf::uint32 value);
  
  // optional uint32 FemaleItemID = 20;
  inline bool has_femaleitemid() const;
  inline void clear_femaleitemid();
  static const int kFemaleItemIDFieldNumber = 20;
  inline ::google::protobuf::uint32 femaleitemid() const;
  inline void set_femaleitemid(::google::protobuf::uint32 value);
  
  // optional uint32 GroomPosX = 21;
  inline bool has_groomposx() const;
  inline void clear_groomposx();
  static const int kGroomPosXFieldNumber = 21;
  inline ::google::protobuf::uint32 groomposx() const;
  inline void set_groomposx(::google::protobuf::uint32 value);
  
  // optional uint32 GroomPosY = 22;
  inline bool has_groomposy() const;
  inline void clear_groomposy();
  static const int kGroomPosYFieldNumber = 22;
  inline ::google::protobuf::uint32 groomposy() const;
  inline void set_groomposy(::google::protobuf::uint32 value);
  
  // optional uint32 BridePosX = 23;
  inline bool has_brideposx() const;
  inline void clear_brideposx();
  static const int kBridePosXFieldNumber = 23;
  inline ::google::protobuf::uint32 brideposx() const;
  inline void set_brideposx(::google::protobuf::uint32 value);
  
  // optional uint32 BridePosY = 24;
  inline bool has_brideposy() const;
  inline void clear_brideposy();
  static const int kBridePosYFieldNumber = 24;
  inline ::google::protobuf::uint32 brideposy() const;
  inline void set_brideposy(::google::protobuf::uint32 value);
  
  // optional uint32 GroomBufferID = 25;
  inline bool has_groombufferid() const;
  inline void clear_groombufferid();
  static const int kGroomBufferIDFieldNumber = 25;
  inline ::google::protobuf::uint32 groombufferid() const;
  inline void set_groombufferid(::google::protobuf::uint32 value);
  
  // optional uint32 BrideBufferID = 26;
  inline bool has_bridebufferid() const;
  inline void clear_bridebufferid();
  static const int kBrideBufferIDFieldNumber = 26;
  inline ::google::protobuf::uint32 bridebufferid() const;
  inline void set_bridebufferid(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageItemID = 27;
  inline bool has_marriageitemid() const;
  inline void clear_marriageitemid();
  static const int kMarriageItemIDFieldNumber = 27;
  inline ::google::protobuf::uint32 marriageitemid() const;
  inline void set_marriageitemid(::google::protobuf::uint32 value);
  
  // optional uint32 WeddingScroll = 28;
  inline bool has_weddingscroll() const;
  inline void clear_weddingscroll();
  static const int kWeddingScrollFieldNumber = 28;
  inline ::google::protobuf::uint32 weddingscroll() const;
  inline void set_weddingscroll(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 weddinglength_;
  ::google::protobuf::uint32 moneyneeded_;
  ::google::protobuf::uint32 delaymoneyneeded_;
  ::google::protobuf::uint32 weddingredstoneid_;
  ::google::protobuf::uint32 weddinghallredstoneid_;
  ::google::protobuf::uint32 weddinghallmapid_;
  ::google::protobuf::uint32 invitationcardid_;
  ::google::protobuf::uint32 invitationcardnum_;
  ::google::protobuf::uint32 femalekeepsakeid_;
  ::google::protobuf::uint32 malekeepsakeid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 femalekeepsaketwo_;
  ::google::protobuf::uint32 malekeepsaketwo_;
  ::google::protobuf::uint32 femalekeepsakethree_;
  ::google::protobuf::uint32 malekeepsakethree_;
  ::google::protobuf::uint32 malebufferid_;
  ::google::protobuf::uint32 femalebufferid_;
  ::google::protobuf::uint32 maleitemid_;
  ::google::protobuf::uint32 femaleitemid_;
  ::google::protobuf::uint32 groomposx_;
  ::google::protobuf::uint32 groomposy_;
  ::google::protobuf::uint32 brideposx_;
  ::google::protobuf::uint32 brideposy_;
  ::google::protobuf::uint32 groombufferid_;
  ::google::protobuf::uint32 bridebufferid_;
  ::google::protobuf::uint32 marriageitemid_;
  ::google::protobuf::uint32 weddingscroll_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(28 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBWeddingInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBKeepsnakeInfo : public ::google::protobuf::Message {
 public:
  PBKeepsnakeInfo();
  virtual ~PBKeepsnakeInfo();
  
  PBKeepsnakeInfo(const PBKeepsnakeInfo& from);
  
  inline PBKeepsnakeInfo& operator=(const PBKeepsnakeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBKeepsnakeInfo& default_instance();
  void Swap(PBKeepsnakeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBKeepsnakeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBKeepsnakeInfo& from);
  void MergeFrom(const PBKeepsnakeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 KeepsakeID = 1;
  inline bool has_keepsakeid() const;
  inline void clear_keepsakeid();
  static const int kKeepsakeIDFieldNumber = 1;
  inline ::google::protobuf::uint32 keepsakeid() const;
  inline void set_keepsakeid(::google::protobuf::uint32 value);
  
  // optional uint32 EquipID = 2;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipIDFieldNumber = 2;
  inline ::google::protobuf::uint32 equipid() const;
  inline void set_equipid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 keepsakeid_;
  ::google::protobuf::uint32 equipid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBKeepsnakeInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBTemplateMarriageConfig : public ::google::protobuf::Message {
 public:
  PBTemplateMarriageConfig();
  virtual ~PBTemplateMarriageConfig();
  
  PBTemplateMarriageConfig(const PBTemplateMarriageConfig& from);
  
  inline PBTemplateMarriageConfig& operator=(const PBTemplateMarriageConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTemplateMarriageConfig& default_instance();
  void Swap(PBTemplateMarriageConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBTemplateMarriageConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTemplateMarriageConfig& from);
  void MergeFrom(const PBTemplateMarriageConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBWeddingInfo WeddingInfo = 2;
  inline int weddinginfo_size() const;
  inline void clear_weddinginfo();
  static const int kWeddingInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBWeddingInfo >& weddinginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWeddingInfo >* mutable_weddinginfo();
  inline const ::PBWeddingInfo& weddinginfo(int index) const;
  inline ::PBWeddingInfo* mutable_weddinginfo(int index);
  inline ::PBWeddingInfo* add_weddinginfo();
  
  // repeated .PBKeepsnakeInfo FemaleKeepsakeInfo = 3;
  inline int femalekeepsakeinfo_size() const;
  inline void clear_femalekeepsakeinfo();
  static const int kFemaleKeepsakeInfoFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo >& femalekeepsakeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo >* mutable_femalekeepsakeinfo();
  inline const ::PBKeepsnakeInfo& femalekeepsakeinfo(int index) const;
  inline ::PBKeepsnakeInfo* mutable_femalekeepsakeinfo(int index);
  inline ::PBKeepsnakeInfo* add_femalekeepsakeinfo();
  
  // repeated .PBKeepsnakeInfo MaleKeepsakeInfo = 4;
  inline int malekeepsakeinfo_size() const;
  inline void clear_malekeepsakeinfo();
  static const int kMaleKeepsakeInfoFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo >& malekeepsakeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo >* mutable_malekeepsakeinfo();
  inline const ::PBKeepsnakeInfo& malekeepsakeinfo(int index) const;
  inline ::PBKeepsnakeInfo* mutable_malekeepsakeinfo(int index);
  inline ::PBKeepsnakeInfo* add_malekeepsakeinfo();
  
  // repeated uint32 WeddingNpc = 5;
  inline int weddingnpc_size() const;
  inline void clear_weddingnpc();
  static const int kWeddingNpcFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& weddingnpc() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_weddingnpc();
  inline ::google::protobuf::uint32 weddingnpc(int index) const;
  inline void set_weddingnpc(int index, ::google::protobuf::uint32 value);
  inline void add_weddingnpc(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageLevel = 6;
  inline bool has_marriagelevel() const;
  inline void clear_marriagelevel();
  static const int kMarriageLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 marriagelevel() const;
  inline void set_marriagelevel(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageMoney = 7;
  inline bool has_marriagemoney() const;
  inline void clear_marriagemoney();
  static const int kMarriageMoneyFieldNumber = 7;
  inline ::google::protobuf::uint32 marriagemoney() const;
  inline void set_marriagemoney(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 8;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 8;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 9;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 9;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 10;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 10;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 DivorceItemID = 11;
  inline bool has_divorceitemid() const;
  inline void clear_divorceitemid();
  static const int kDivorceItemIDFieldNumber = 11;
  inline ::google::protobuf::uint32 divorceitemid() const;
  inline void set_divorceitemid(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageTitleID = 12;
  inline bool has_marriagetitleid() const;
  inline void clear_marriagetitleid();
  static const int kMarriageTitleIDFieldNumber = 12;
  inline ::google::protobuf::uint32 marriagetitleid() const;
  inline void set_marriagetitleid(::google::protobuf::uint32 value);
  
  // optional uint32 MaleKeepsakeID = 13;
  inline bool has_malekeepsakeid() const;
  inline void clear_malekeepsakeid();
  static const int kMaleKeepsakeIDFieldNumber = 13;
  inline ::google::protobuf::uint32 malekeepsakeid() const;
  inline void set_malekeepsakeid(::google::protobuf::uint32 value);
  
  // optional uint32 FemaleKeepsakeID = 14;
  inline bool has_femalekeepsakeid() const;
  inline void clear_femalekeepsakeid();
  static const int kFemaleKeepsakeIDFieldNumber = 14;
  inline ::google::protobuf::uint32 femalekeepsakeid() const;
  inline void set_femalekeepsakeid(::google::protobuf::uint32 value);
  
  // optional uint32 InvitationID = 15;
  inline bool has_invitationid() const;
  inline void clear_invitationid();
  static const int kInvitationIDFieldNumber = 15;
  inline ::google::protobuf::uint32 invitationid() const;
  inline void set_invitationid(::google::protobuf::uint32 value);
  
  // optional uint32 InvitationNum = 16;
  inline bool has_invitationnum() const;
  inline void clear_invitationnum();
  static const int kInvitationNumFieldNumber = 16;
  inline ::google::protobuf::uint32 invitationnum() const;
  inline void set_invitationnum(::google::protobuf::uint32 value);
  
  // optional uint32 MaleItemID = 17;
  inline bool has_maleitemid() const;
  inline void clear_maleitemid();
  static const int kMaleItemIDFieldNumber = 17;
  inline ::google::protobuf::uint32 maleitemid() const;
  inline void set_maleitemid(::google::protobuf::uint32 value);
  
  // optional uint32 FemaleItemID = 18;
  inline bool has_femaleitemid() const;
  inline void clear_femaleitemid();
  static const int kFemaleItemIDFieldNumber = 18;
  inline ::google::protobuf::uint32 femaleitemid() const;
  inline void set_femaleitemid(::google::protobuf::uint32 value);
  
  // optional uint32 BaitangBuffID = 19;
  inline bool has_baitangbuffid() const;
  inline void clear_baitangbuffid();
  static const int kBaitangBuffIDFieldNumber = 19;
  inline ::google::protobuf::uint32 baitangbuffid() const;
  inline void set_baitangbuffid(::google::protobuf::uint32 value);
  
  // optional uint32 BasicMarriageItem = 20;
  inline bool has_basicmarriageitem() const;
  inline void clear_basicmarriageitem();
  static const int kBasicMarriageItemFieldNumber = 20;
  inline ::google::protobuf::uint32 basicmarriageitem() const;
  inline void set_basicmarriageitem(::google::protobuf::uint32 value);
  
  // optional uint32 BasicMarriageItemNum = 21;
  inline bool has_basicmarriageitemnum() const;
  inline void clear_basicmarriageitemnum();
  static const int kBasicMarriageItemNumFieldNumber = 21;
  inline ::google::protobuf::uint32 basicmarriageitemnum() const;
  inline void set_basicmarriageitemnum(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageNpcMapID = 22;
  inline bool has_marriagenpcmapid() const;
  inline void clear_marriagenpcmapid();
  static const int kMarriageNpcMapIDFieldNumber = 22;
  inline ::google::protobuf::uint32 marriagenpcmapid() const;
  inline void set_marriagenpcmapid(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageNpcPosX = 23;
  inline bool has_marriagenpcposx() const;
  inline void clear_marriagenpcposx();
  static const int kMarriageNpcPosXFieldNumber = 23;
  inline ::google::protobuf::uint32 marriagenpcposx() const;
  inline void set_marriagenpcposx(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageNpcPosY = 24;
  inline bool has_marriagenpcposy() const;
  inline void clear_marriagenpcposy();
  static const int kMarriageNpcPosYFieldNumber = 24;
  inline ::google::protobuf::uint32 marriagenpcposy() const;
  inline void set_marriagenpcposy(::google::protobuf::uint32 value);
  
  // optional uint32 MarriageIntimacy = 25;
  inline bool has_marriageintimacy() const;
  inline void clear_marriageintimacy();
  static const int kMarriageIntimacyFieldNumber = 25;
  inline ::google::protobuf::uint32 marriageintimacy() const;
  inline void set_marriageintimacy(::google::protobuf::uint32 value);
  
  // optional uint32 IntimacyItemNum = 26;
  inline bool has_intimacyitemnum() const;
  inline void clear_intimacyitemnum();
  static const int kIntimacyItemNumFieldNumber = 26;
  inline ::google::protobuf::uint32 intimacyitemnum() const;
  inline void set_intimacyitemnum(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBWeddingInfo > weddinginfo_;
  ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo > femalekeepsakeinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo > malekeepsakeinfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > weddingnpc_;
  ::google::protobuf::uint32 marriagelevel_;
  ::google::protobuf::uint32 marriagemoney_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 divorceitemid_;
  ::google::protobuf::uint32 marriagetitleid_;
  ::google::protobuf::uint32 malekeepsakeid_;
  ::google::protobuf::uint32 femalekeepsakeid_;
  ::google::protobuf::uint32 invitationid_;
  ::google::protobuf::uint32 invitationnum_;
  ::google::protobuf::uint32 maleitemid_;
  ::google::protobuf::uint32 femaleitemid_;
  ::google::protobuf::uint32 baitangbuffid_;
  ::google::protobuf::uint32 basicmarriageitem_;
  ::google::protobuf::uint32 basicmarriageitemnum_;
  ::google::protobuf::uint32 marriagenpcmapid_;
  ::google::protobuf::uint32 marriagenpcposx_;
  ::google::protobuf::uint32 marriagenpcposy_;
  ::google::protobuf::uint32 marriageintimacy_;
  ::google::protobuf::uint32 intimacyitemnum_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(26 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTemplateMarriageConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBInvitation : public ::google::protobuf::Message {
 public:
  PBInvitation();
  virtual ~PBInvitation();
  
  PBInvitation(const PBInvitation& from);
  
  inline PBInvitation& operator=(const PBInvitation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBInvitation& default_instance();
  void Swap(PBInvitation* other);
  
  // implements Message ----------------------------------------------
  
  PBInvitation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBInvitation& from);
  void MergeFrom(const PBInvitation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint32 ExchangeItemID = 2;
  inline bool has_exchangeitemid() const;
  inline void clear_exchangeitemid();
  static const int kExchangeItemIDFieldNumber = 2;
  inline ::google::protobuf::uint32 exchangeitemid() const;
  inline void set_exchangeitemid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint32 exchangeitemid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBInvitation* default_instance_;
};
// -------------------------------------------------------------------

class ProGressInfo : public ::google::protobuf::Message {
 public:
  ProGressInfo();
  virtual ~ProGressInfo();
  
  ProGressInfo(const ProGressInfo& from);
  
  inline ProGressInfo& operator=(const ProGressInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGressInfo& default_instance();
  void Swap(ProGressInfo* other);
  
  // implements Message ----------------------------------------------
  
  ProGressInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGressInfo& from);
  void MergeFrom(const ProGressInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FuncType = 1;
  inline bool has_functype() const;
  inline void clear_functype();
  static const int kFuncTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 functype() const;
  inline void set_functype(::google::protobuf::uint32 value);
  
  // optional uint32 ProGressTime = 2;
  inline bool has_progresstime() const;
  inline void clear_progresstime();
  static const int kProGressTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 progresstime() const;
  inline void set_progresstime(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 functype_;
  ::google::protobuf::uint32 progresstime_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ProGressInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBProGressConfig : public ::google::protobuf::Message {
 public:
  PBProGressConfig();
  virtual ~PBProGressConfig();
  
  PBProGressConfig(const PBProGressConfig& from);
  
  inline PBProGressConfig& operator=(const PBProGressConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBProGressConfig& default_instance();
  void Swap(PBProGressConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBProGressConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBProGressConfig& from);
  void MergeFrom(const PBProGressConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TmpID = 1;
  inline bool has_tmpid() const;
  inline void clear_tmpid();
  static const int kTmpIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tmpid() const;
  inline void set_tmpid(::google::protobuf::uint32 value);
  
  // repeated .ProGressInfo Progress = 2;
  inline int progress_size() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::ProGressInfo >& progress() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProGressInfo >* mutable_progress();
  inline const ::ProGressInfo& progress(int index) const;
  inline ::ProGressInfo* mutable_progress(int index);
  inline ::ProGressInfo* add_progress();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tmpid_;
  ::google::protobuf::RepeatedPtrField< ::ProGressInfo > progress_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBProGressConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBSysInvitation : public ::google::protobuf::Message {
 public:
  PBSysInvitation();
  virtual ~PBSysInvitation();
  
  PBSysInvitation(const PBSysInvitation& from);
  
  inline PBSysInvitation& operator=(const PBSysInvitation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSysInvitation& default_instance();
  void Swap(PBSysInvitation* other);
  
  // implements Message ----------------------------------------------
  
  PBSysInvitation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSysInvitation& from);
  void MergeFrom(const PBSysInvitation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint32 InvitationID = 2;
  inline bool has_invitationid() const;
  inline void clear_invitationid();
  static const int kInvitationIDFieldNumber = 2;
  inline ::google::protobuf::uint32 invitationid() const;
  inline void set_invitationid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint32 invitationid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSysInvitation* default_instance_;
};
// -------------------------------------------------------------------

class PBCount : public ::google::protobuf::Message {
 public:
  PBCount();
  virtual ~PBCount();
  
  PBCount(const PBCount& from);
  
  inline PBCount& operator=(const PBCount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCount& default_instance();
  void Swap(PBCount* other);
  
  // implements Message ----------------------------------------------
  
  PBCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCount& from);
  void MergeFrom(const PBCount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 CountType = 1;
  inline bool has_counttype() const;
  inline void clear_counttype();
  static const int kCountTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 counttype() const;
  inline void set_counttype(::google::protobuf::uint32 value);
  
  // optional uint32 CountTime = 2;
  inline bool has_counttime() const;
  inline void clear_counttime();
  static const int kCountTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 counttime() const;
  inline void set_counttime(::google::protobuf::uint32 value);
  
  // optional uint32 VipTime = 3;
  inline bool has_viptime() const;
  inline void clear_viptime();
  static const int kVipTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 viptime() const;
  inline void set_viptime(::google::protobuf::uint32 value);
  
  // optional uint32 ClearType = 4;
  inline bool has_cleartype() const;
  inline void clear_cleartype();
  static const int kClearTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 cleartype() const;
  inline void set_cleartype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 counttype_;
  ::google::protobuf::uint32 counttime_;
  ::google::protobuf::uint32 viptime_;
  ::google::protobuf::uint32 cleartype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCount* default_instance_;
};
// -------------------------------------------------------------------

class PBCountTable : public ::google::protobuf::Message {
 public:
  PBCountTable();
  virtual ~PBCountTable();
  
  PBCountTable(const PBCountTable& from);
  
  inline PBCountTable& operator=(const PBCountTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCountTable& default_instance();
  void Swap(PBCountTable* other);
  
  // implements Message ----------------------------------------------
  
  PBCountTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCountTable& from);
  void MergeFrom(const PBCountTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBCount CountData = 2;
  inline int countdata_size() const;
  inline void clear_countdata();
  static const int kCountDataFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBCount >& countdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCount >* mutable_countdata();
  inline const ::PBCount& countdata(int index) const;
  inline ::PBCount* mutable_countdata(int index);
  inline ::PBCount* add_countdata();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBCount > countdata_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCountTable* default_instance_;
};
// -------------------------------------------------------------------

class PBActivityConfig : public ::google::protobuf::Message {
 public:
  PBActivityConfig();
  virtual ~PBActivityConfig();
  
  PBActivityConfig(const PBActivityConfig& from);
  
  inline PBActivityConfig& operator=(const PBActivityConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBActivityConfig& default_instance();
  void Swap(PBActivityConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBActivityConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBActivityConfig& from);
  void MergeFrom(const PBActivityConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 HydrangeaThrowTime = 2;
  inline bool has_hydrangeathrowtime() const;
  inline void clear_hydrangeathrowtime();
  static const int kHydrangeaThrowTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 hydrangeathrowtime() const;
  inline void set_hydrangeathrowtime(::google::protobuf::uint32 value);
  
  // repeated uint32 HydrangeaSugarID = 3;
  inline int hydrangeasugarid_size() const;
  inline void clear_hydrangeasugarid();
  static const int kHydrangeaSugarIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& hydrangeasugarid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_hydrangeasugarid();
  inline ::google::protobuf::uint32 hydrangeasugarid(int index) const;
  inline void set_hydrangeasugarid(int index, ::google::protobuf::uint32 value);
  inline void add_hydrangeasugarid(::google::protobuf::uint32 value);
  
  // optional uint32 SugarSpreadTime = 4;
  inline bool has_sugarspreadtime() const;
  inline void clear_sugarspreadtime();
  static const int kSugarSpreadTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 sugarspreadtime() const;
  inline void set_sugarspreadtime(::google::protobuf::uint32 value);
  
  // optional uint32 SugarSpreadNum = 5;
  inline bool has_sugarspreadnum() const;
  inline void clear_sugarspreadnum();
  static const int kSugarSpreadNumFieldNumber = 5;
  inline ::google::protobuf::uint32 sugarspreadnum() const;
  inline void set_sugarspreadnum(::google::protobuf::uint32 value);
  
  // optional uint32 HydrangeaActivityTime = 6;
  inline bool has_hydrangeaactivitytime() const;
  inline void clear_hydrangeaactivitytime();
  static const int kHydrangeaActivityTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 hydrangeaactivitytime() const;
  inline void set_hydrangeaactivitytime(::google::protobuf::uint32 value);
  
  // optional uint32 HydrangeaHolderTime = 7;
  inline bool has_hydrangeaholdertime() const;
  inline void clear_hydrangeaholdertime();
  static const int kHydrangeaHolderTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 hydrangeaholdertime() const;
  inline void set_hydrangeaholdertime(::google::protobuf::uint32 value);
  
  // optional uint32 HydrangeaRabTime = 8;
  inline bool has_hydrangearabtime() const;
  inline void clear_hydrangearabtime();
  static const int kHydrangeaRabTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 hydrangearabtime() const;
  inline void set_hydrangearabtime(::google::protobuf::uint32 value);
  
  // optional uint32 HydrangeaRedstoneID = 9;
  inline bool has_hydrangearedstoneid() const;
  inline void clear_hydrangearedstoneid();
  static const int kHydrangeaRedstoneIDFieldNumber = 9;
  inline ::google::protobuf::uint32 hydrangearedstoneid() const;
  inline void set_hydrangearedstoneid(::google::protobuf::uint32 value);
  
  // optional uint32 HydrangeaExpTableID = 10;
  inline bool has_hydrangeaexptableid() const;
  inline void clear_hydrangeaexptableid();
  static const int kHydrangeaExpTableIDFieldNumber = 10;
  inline ::google::protobuf::uint32 hydrangeaexptableid() const;
  inline void set_hydrangeaexptableid(::google::protobuf::uint32 value);
  
  // optional uint32 PreliminaryTitleID = 11;
  inline bool has_preliminarytitleid() const;
  inline void clear_preliminarytitleid();
  static const int kPreliminaryTitleIDFieldNumber = 11;
  inline ::google::protobuf::uint32 preliminarytitleid() const;
  inline void set_preliminarytitleid(::google::protobuf::uint32 value);
  
  // optional uint32 PreliminaryBaseScore = 12;
  inline bool has_preliminarybasescore() const;
  inline void clear_preliminarybasescore();
  static const int kPreliminaryBaseScoreFieldNumber = 12;
  inline ::google::protobuf::uint32 preliminarybasescore() const;
  inline void set_preliminarybasescore(::google::protobuf::uint32 value);
  
  // repeated uint32 PreliminaryExtralScore = 13;
  inline int preliminaryextralscore_size() const;
  inline void clear_preliminaryextralscore();
  static const int kPreliminaryExtralScoreFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& preliminaryextralscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_preliminaryextralscore();
  inline ::google::protobuf::uint32 preliminaryextralscore(int index) const;
  inline void set_preliminaryextralscore(int index, ::google::protobuf::uint32 value);
  inline void add_preliminaryextralscore(::google::protobuf::uint32 value);
  
  // optional uint32 PreliminaryTipsTime = 14;
  inline bool has_preliminarytipstime() const;
  inline void clear_preliminarytipstime();
  static const int kPreliminaryTipsTimeFieldNumber = 14;
  inline ::google::protobuf::uint32 preliminarytipstime() const;
  inline void set_preliminarytipstime(::google::protobuf::uint32 value);
  
  // optional uint32 PreliminaryAnswerTime = 15;
  inline bool has_preliminaryanswertime() const;
  inline void clear_preliminaryanswertime();
  static const int kPreliminaryAnswerTimeFieldNumber = 15;
  inline ::google::protobuf::uint32 preliminaryanswertime() const;
  inline void set_preliminaryanswertime(::google::protobuf::uint32 value);
  
  // optional uint32 PreliminaryQuestionTime = 16;
  inline bool has_preliminaryquestiontime() const;
  inline void clear_preliminaryquestiontime();
  static const int kPreliminaryQuestionTimeFieldNumber = 16;
  inline ::google::protobuf::uint32 preliminaryquestiontime() const;
  inline void set_preliminaryquestiontime(::google::protobuf::uint32 value);
  
  // optional uint32 PreliminaryQuestionNum = 17;
  inline bool has_preliminaryquestionnum() const;
  inline void clear_preliminaryquestionnum();
  static const int kPreliminaryQuestionNumFieldNumber = 17;
  inline ::google::protobuf::uint32 preliminaryquestionnum() const;
  inline void set_preliminaryquestionnum(::google::protobuf::uint32 value);
  
  // optional uint32 PreliminaryExpTableID = 18;
  inline bool has_preliminaryexptableid() const;
  inline void clear_preliminaryexptableid();
  static const int kPreliminaryExpTableIDFieldNumber = 18;
  inline ::google::protobuf::uint32 preliminaryexptableid() const;
  inline void set_preliminaryexptableid(::google::protobuf::uint32 value);
  
  // optional uint32 EffectiveOffLineExchangeRate = 19;
  inline bool has_effectiveofflineexchangerate() const;
  inline void clear_effectiveofflineexchangerate();
  static const int kEffectiveOffLineExchangeRateFieldNumber = 19;
  inline ::google::protobuf::uint32 effectiveofflineexchangerate() const;
  inline void set_effectiveofflineexchangerate(::google::protobuf::uint32 value);
  
  // optional uint32 MaxOnLineEffectiveTime = 20;
  inline bool has_maxonlineeffectivetime() const;
  inline void clear_maxonlineeffectivetime();
  static const int kMaxOnLineEffectiveTimeFieldNumber = 20;
  inline ::google::protobuf::uint32 maxonlineeffectivetime() const;
  inline void set_maxonlineeffectivetime(::google::protobuf::uint32 value);
  
  // optional uint32 MaxEffectiveOffLineTime = 21;
  inline bool has_maxeffectiveofflinetime() const;
  inline void clear_maxeffectiveofflinetime();
  static const int kMaxEffectiveOffLineTimeFieldNumber = 21;
  inline ::google::protobuf::uint32 maxeffectiveofflinetime() const;
  inline void set_maxeffectiveofflinetime(::google::protobuf::uint32 value);
  
  // optional uint32 MaxOffLineTime = 22;
  inline bool has_maxofflinetime() const;
  inline void clear_maxofflinetime();
  static const int kMaxOffLineTimeFieldNumber = 22;
  inline ::google::protobuf::uint32 maxofflinetime() const;
  inline void set_maxofflinetime(::google::protobuf::uint32 value);
  
  // optional uint32 OffLineTimeLimit = 23;
  inline bool has_offlinetimelimit() const;
  inline void clear_offlinetimelimit();
  static const int kOffLineTimeLimitFieldNumber = 23;
  inline ::google::protobuf::uint32 offlinetimelimit() const;
  inline void set_offlinetimelimit(::google::protobuf::uint32 value);
  
  // optional uint32 VipOffLineExchangeRate = 24;
  inline bool has_vipofflineexchangerate() const;
  inline void clear_vipofflineexchangerate();
  static const int kVipOffLineExchangeRateFieldNumber = 24;
  inline ::google::protobuf::uint32 vipofflineexchangerate() const;
  inline void set_vipofflineexchangerate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 hydrangeathrowtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hydrangeasugarid_;
  ::google::protobuf::uint32 sugarspreadtime_;
  ::google::protobuf::uint32 sugarspreadnum_;
  ::google::protobuf::uint32 hydrangeaactivitytime_;
  ::google::protobuf::uint32 hydrangeaholdertime_;
  ::google::protobuf::uint32 hydrangearabtime_;
  ::google::protobuf::uint32 hydrangearedstoneid_;
  ::google::protobuf::uint32 hydrangeaexptableid_;
  ::google::protobuf::uint32 preliminarytitleid_;
  ::google::protobuf::uint32 preliminarybasescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > preliminaryextralscore_;
  ::google::protobuf::uint32 preliminarytipstime_;
  ::google::protobuf::uint32 preliminaryanswertime_;
  ::google::protobuf::uint32 preliminaryquestiontime_;
  ::google::protobuf::uint32 preliminaryquestionnum_;
  ::google::protobuf::uint32 preliminaryexptableid_;
  ::google::protobuf::uint32 effectiveofflineexchangerate_;
  ::google::protobuf::uint32 maxonlineeffectivetime_;
  ::google::protobuf::uint32 maxeffectiveofflinetime_;
  ::google::protobuf::uint32 maxofflinetime_;
  ::google::protobuf::uint32 offlinetimelimit_;
  ::google::protobuf::uint32 vipofflineexchangerate_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(24 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBActivityConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBItemRefresh : public ::google::protobuf::Message {
 public:
  PBItemRefresh();
  virtual ~PBItemRefresh();
  
  PBItemRefresh(const PBItemRefresh& from);
  
  inline PBItemRefresh& operator=(const PBItemRefresh& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemRefresh& default_instance();
  void Swap(PBItemRefresh* other);
  
  // implements Message ----------------------------------------------
  
  PBItemRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemRefresh& from);
  void MergeFrom(const PBItemRefresh& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint32 Color = 2;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 2;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // repeated uint32 LimitPos = 4;
  inline int limitpos_size() const;
  inline void clear_limitpos();
  static const int kLimitPosFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& limitpos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_limitpos();
  inline ::google::protobuf::uint32 limitpos(int index) const;
  inline void set_limitpos(int index, ::google::protobuf::uint32 value);
  inline void add_limitpos(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > limitpos_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemRefresh* default_instance_;
};
// -------------------------------------------------------------------

class PBItemSummon : public ::google::protobuf::Message {
 public:
  PBItemSummon();
  virtual ~PBItemSummon();
  
  PBItemSummon(const PBItemSummon& from);
  
  inline PBItemSummon& operator=(const PBItemSummon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemSummon& default_instance();
  void Swap(PBItemSummon* other);
  
  // implements Message ----------------------------------------------
  
  PBItemSummon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemSummon& from);
  void MergeFrom(const PBItemSummon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint32 SummonType = 2;
  inline bool has_summontype() const;
  inline void clear_summontype();
  static const int kSummonTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 summontype() const;
  inline void set_summontype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint32 summontype_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemSummon* default_instance_;
};
// -------------------------------------------------------------------

class PBDirectTable : public ::google::protobuf::Message {
 public:
  PBDirectTable();
  virtual ~PBDirectTable();
  
  PBDirectTable(const PBDirectTable& from);
  
  inline PBDirectTable& operator=(const PBDirectTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDirectTable& default_instance();
  void Swap(PBDirectTable* other);
  
  // implements Message ----------------------------------------------
  
  PBDirectTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDirectTable& from);
  void MergeFrom(const PBDirectTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 DirectID = 2;
  inline int directid_size() const;
  inline void clear_directid();
  static const int kDirectIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& directid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_directid();
  inline ::google::protobuf::uint32 directid(int index) const;
  inline void set_directid(int index, ::google::protobuf::uint32 value);
  inline void add_directid(::google::protobuf::uint32 value);
  
  // repeated uint32 LuckID = 3;
  inline int luckid_size() const;
  inline void clear_luckid();
  static const int kLuckIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& luckid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_luckid();
  inline ::google::protobuf::uint32 luckid(int index) const;
  inline void set_luckid(int index, ::google::protobuf::uint32 value);
  inline void add_luckid(::google::protobuf::uint32 value);
  
  // repeated uint32 LuckRate = 4;
  inline int luckrate_size() const;
  inline void clear_luckrate();
  static const int kLuckRateFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& luckrate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_luckrate();
  inline ::google::protobuf::uint32 luckrate(int index) const;
  inline void set_luckrate(int index, ::google::protobuf::uint32 value);
  inline void add_luckrate(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > directid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > luckid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > luckrate_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDirectTable* default_instance_;
};
// -------------------------------------------------------------------

class PBItemDirect : public ::google::protobuf::Message {
 public:
  PBItemDirect();
  virtual ~PBItemDirect();
  
  PBItemDirect(const PBItemDirect& from);
  
  inline PBItemDirect& operator=(const PBItemDirect& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemDirect& default_instance();
  void Swap(PBItemDirect* other);
  
  // implements Message ----------------------------------------------
  
  PBItemDirect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemDirect& from);
  void MergeFrom(const PBItemDirect& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 Star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 star_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemDirect* default_instance_;
};
// -------------------------------------------------------------------

class PBItemGetStar : public ::google::protobuf::Message {
 public:
  PBItemGetStar();
  virtual ~PBItemGetStar();
  
  PBItemGetStar(const PBItemGetStar& from);
  
  inline PBItemGetStar& operator=(const PBItemGetStar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemGetStar& default_instance();
  void Swap(PBItemGetStar* other);
  
  // implements Message ----------------------------------------------
  
  PBItemGetStar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemGetStar& from);
  void MergeFrom(const PBItemGetStar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint32 Level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint32 level_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemGetStar* default_instance_;
};
// -------------------------------------------------------------------

class PBWarDate : public ::google::protobuf::Message {
 public:
  PBWarDate();
  virtual ~PBWarDate();
  
  PBWarDate(const PBWarDate& from);
  
  inline PBWarDate& operator=(const PBWarDate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWarDate& default_instance();
  void Swap(PBWarDate* other);
  
  // implements Message ----------------------------------------------
  
  PBWarDate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWarDate& from);
  void MergeFrom(const PBWarDate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);
  
  // optional uint32 Hour = 2;
  inline bool has_hour() const;
  inline void clear_hour();
  static const int kHourFieldNumber = 2;
  inline ::google::protobuf::uint32 hour() const;
  inline void set_hour(::google::protobuf::uint32 value);
  
  // optional uint32 Minute = 3;
  inline bool has_minute() const;
  inline void clear_minute();
  static const int kMinuteFieldNumber = 3;
  inline ::google::protobuf::uint32 minute() const;
  inline void set_minute(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 hour_;
  ::google::protobuf::uint32 minute_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBWarDate* default_instance_;
};
// -------------------------------------------------------------------

class PBTax : public ::google::protobuf::Message {
 public:
  PBTax();
  virtual ~PBTax();
  
  PBTax(const PBTax& from);
  
  inline PBTax& operator=(const PBTax& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTax& default_instance();
  void Swap(PBTax* other);
  
  // implements Message ----------------------------------------------
  
  PBTax* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTax& from);
  void MergeFrom(const PBTax& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TaxRate = 1;
  inline bool has_taxrate() const;
  inline void clear_taxrate();
  static const int kTaxRateFieldNumber = 1;
  inline ::google::protobuf::uint32 taxrate() const;
  inline void set_taxrate(::google::protobuf::uint32 value);
  
  // optional uint32 IncomeRate = 2;
  inline bool has_incomerate() const;
  inline void clear_incomerate();
  static const int kIncomeRateFieldNumber = 2;
  inline ::google::protobuf::uint32 incomerate() const;
  inline void set_incomerate(::google::protobuf::uint32 value);
  
  // optional uint32 Limit = 3;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taxrate_;
  ::google::protobuf::uint32 incomerate_;
  ::google::protobuf::uint32 limit_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTax* default_instance_;
};
// -------------------------------------------------------------------

class PBWorldBattleConfig : public ::google::protobuf::Message {
 public:
  PBWorldBattleConfig();
  virtual ~PBWorldBattleConfig();
  
  PBWorldBattleConfig(const PBWorldBattleConfig& from);
  
  inline PBWorldBattleConfig& operator=(const PBWorldBattleConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWorldBattleConfig& default_instance();
  void Swap(PBWorldBattleConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBWorldBattleConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWorldBattleConfig& from);
  void MergeFrom(const PBWorldBattleConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional .PBWarDate SubmitBegin = 2;
  inline bool has_submitbegin() const;
  inline void clear_submitbegin();
  static const int kSubmitBeginFieldNumber = 2;
  inline const ::PBWarDate& submitbegin() const;
  inline ::PBWarDate* mutable_submitbegin();
  
  // optional .PBWarDate BattleBegin = 3;
  inline bool has_battlebegin() const;
  inline void clear_battlebegin();
  static const int kBattleBeginFieldNumber = 3;
  inline const ::PBWarDate& battlebegin() const;
  inline ::PBWarDate* mutable_battlebegin();
  
  // optional .PBWarDate BattleEnd = 4;
  inline bool has_battleend() const;
  inline void clear_battleend();
  static const int kBattleEndFieldNumber = 4;
  inline const ::PBWarDate& battleend() const;
  inline ::PBWarDate* mutable_battleend();
  
  // repeated uint32 StoneID = 5;
  inline int stoneid_size() const;
  inline void clear_stoneid();
  static const int kStoneIDFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& stoneid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_stoneid();
  inline ::google::protobuf::uint32 stoneid(int index) const;
  inline void set_stoneid(int index, ::google::protobuf::uint32 value);
  inline void add_stoneid(::google::protobuf::uint32 value);
  
  // optional uint32 InitBuffID = 6;
  inline bool has_initbuffid() const;
  inline void clear_initbuffid();
  static const int kInitBuffIDFieldNumber = 6;
  inline ::google::protobuf::uint32 initbuffid() const;
  inline void set_initbuffid(::google::protobuf::uint32 value);
  
  // optional uint32 FlagSource = 7;
  inline bool has_flagsource() const;
  inline void clear_flagsource();
  static const int kFlagSourceFieldNumber = 7;
  inline ::google::protobuf::uint32 flagsource() const;
  inline void set_flagsource(::google::protobuf::uint32 value);
  
  // optional uint32 KillSource = 8;
  inline bool has_killsource() const;
  inline void clear_killsource();
  static const int kKillSourceFieldNumber = 8;
  inline ::google::protobuf::uint32 killsource() const;
  inline void set_killsource(::google::protobuf::uint32 value);
  
  // optional uint32 FlagBonus = 9;
  inline bool has_flagbonus() const;
  inline void clear_flagbonus();
  static const int kFlagBonusFieldNumber = 9;
  inline ::google::protobuf::uint32 flagbonus() const;
  inline void set_flagbonus(::google::protobuf::uint32 value);
  
  // repeated uint32 PerNum = 10;
  inline int pernum_size() const;
  inline void clear_pernum();
  static const int kPerNumFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& pernum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_pernum();
  inline ::google::protobuf::uint32 pernum(int index) const;
  inline void set_pernum(int index, ::google::protobuf::uint32 value);
  inline void add_pernum(::google::protobuf::uint32 value);
  
  // repeated uint32 MapID = 11;
  inline int mapid_size() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 11;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& mapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_mapid();
  inline ::google::protobuf::uint32 mapid(int index) const;
  inline void set_mapid(int index, ::google::protobuf::uint32 value);
  inline void add_mapid(::google::protobuf::uint32 value);
  
  // repeated uint32 SubmitMoney = 12;
  inline int submitmoney_size() const;
  inline void clear_submitmoney();
  static const int kSubmitMoneyFieldNumber = 12;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& submitmoney() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_submitmoney();
  inline ::google::protobuf::uint32 submitmoney(int index) const;
  inline void set_submitmoney(int index, ::google::protobuf::uint32 value);
  inline void add_submitmoney(::google::protobuf::uint32 value);
  
  // optional uint32 SubmitLevel = 13;
  inline bool has_submitlevel() const;
  inline void clear_submitlevel();
  static const int kSubmitLevelFieldNumber = 13;
  inline ::google::protobuf::uint32 submitlevel() const;
  inline void set_submitlevel(::google::protobuf::uint32 value);
  
  // repeated uint32 PosX = 14;
  inline int posx_size() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 14;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& posx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_posx();
  inline ::google::protobuf::uint32 posx(int index) const;
  inline void set_posx(int index, ::google::protobuf::uint32 value);
  inline void add_posx(::google::protobuf::uint32 value);
  
  // repeated uint32 PosY = 15;
  inline int posy_size() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 15;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& posy() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_posy();
  inline ::google::protobuf::uint32 posy(int index) const;
  inline void set_posy(int index, ::google::protobuf::uint32 value);
  inline void add_posy(::google::protobuf::uint32 value);
  
  // optional uint32 OutMapID = 16;
  inline bool has_outmapid() const;
  inline void clear_outmapid();
  static const int kOutMapIDFieldNumber = 16;
  inline ::google::protobuf::uint32 outmapid() const;
  inline void set_outmapid(::google::protobuf::uint32 value);
  
  // optional uint32 OutPosX = 17;
  inline bool has_outposx() const;
  inline void clear_outposx();
  static const int kOutPosXFieldNumber = 17;
  inline ::google::protobuf::uint32 outposx() const;
  inline void set_outposx(::google::protobuf::uint32 value);
  
  // optional uint32 OutPosY = 18;
  inline bool has_outposy() const;
  inline void clear_outposy();
  static const int kOutPosYFieldNumber = 18;
  inline ::google::protobuf::uint32 outposy() const;
  inline void set_outposy(::google::protobuf::uint32 value);
  
  // repeated uint32 FlagIndex = 19;
  inline int flagindex_size() const;
  inline void clear_flagindex();
  static const int kFlagIndexFieldNumber = 19;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& flagindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_flagindex();
  inline ::google::protobuf::uint32 flagindex(int index) const;
  inline void set_flagindex(int index, ::google::protobuf::uint32 value);
  inline void add_flagindex(::google::protobuf::uint32 value);
  
  // optional .PBWarDate BidEnd = 20;
  inline bool has_bidend() const;
  inline void clear_bidend();
  static const int kBidEndFieldNumber = 20;
  inline const ::PBWarDate& bidend() const;
  inline ::PBWarDate* mutable_bidend();
  
  // optional uint32 MaxWarHonor = 21;
  inline bool has_maxwarhonor() const;
  inline void clear_maxwarhonor();
  static const int kMaxWarHonorFieldNumber = 21;
  inline ::google::protobuf::uint32 maxwarhonor() const;
  inline void set_maxwarhonor(::google::protobuf::uint32 value);
  
  // repeated uint32 Title = 22;
  inline int title_size() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 22;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& title() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_title();
  inline ::google::protobuf::uint32 title(int index) const;
  inline void set_title(int index, ::google::protobuf::uint32 value);
  inline void add_title(::google::protobuf::uint32 value);
  
  // optional .PBWarDate NoticeBegin = 23;
  inline bool has_noticebegin() const;
  inline void clear_noticebegin();
  static const int kNoticeBeginFieldNumber = 23;
  inline const ::PBWarDate& noticebegin() const;
  inline ::PBWarDate* mutable_noticebegin();
  
  // optional uint32 TitleValidTime = 24;
  inline bool has_titlevalidtime() const;
  inline void clear_titlevalidtime();
  static const int kTitleValidTimeFieldNumber = 24;
  inline ::google::protobuf::uint32 titlevalidtime() const;
  inline void set_titlevalidtime(::google::protobuf::uint32 value);
  
  // optional uint32 StonePosX = 25;
  inline bool has_stoneposx() const;
  inline void clear_stoneposx();
  static const int kStonePosXFieldNumber = 25;
  inline ::google::protobuf::uint32 stoneposx() const;
  inline void set_stoneposx(::google::protobuf::uint32 value);
  
  // optional uint32 StonePosY = 26;
  inline bool has_stoneposy() const;
  inline void clear_stoneposy();
  static const int kStonePosYFieldNumber = 26;
  inline ::google::protobuf::uint32 stoneposy() const;
  inline void set_stoneposy(::google::protobuf::uint32 value);
  
  // repeated .PBTax Tax = 27;
  inline int tax_size() const;
  inline void clear_tax();
  static const int kTaxFieldNumber = 27;
  inline const ::google::protobuf::RepeatedPtrField< ::PBTax >& tax() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTax >* mutable_tax();
  inline const ::PBTax& tax(int index) const;
  inline ::PBTax* mutable_tax(int index);
  inline ::PBTax* add_tax();
  
  // optional uint32 WinTax = 28;
  inline bool has_wintax() const;
  inline void clear_wintax();
  static const int kWinTaxFieldNumber = 28;
  inline ::google::protobuf::uint32 wintax() const;
  inline void set_wintax(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::PBWarDate* submitbegin_;
  ::PBWarDate* battlebegin_;
  ::PBWarDate* battleend_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stoneid_;
  ::google::protobuf::uint32 initbuffid_;
  ::google::protobuf::uint32 flagsource_;
  ::google::protobuf::uint32 killsource_;
  ::google::protobuf::uint32 flagbonus_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pernum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mapid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > submitmoney_;
  ::google::protobuf::uint32 submitlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > posx_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > posy_;
  ::google::protobuf::uint32 outmapid_;
  ::google::protobuf::uint32 outposx_;
  ::google::protobuf::uint32 outposy_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > flagindex_;
  ::PBWarDate* bidend_;
  ::google::protobuf::uint32 maxwarhonor_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > title_;
  ::PBWarDate* noticebegin_;
  ::google::protobuf::uint32 titlevalidtime_;
  ::google::protobuf::uint32 stoneposx_;
  ::google::protobuf::uint32 stoneposy_;
  ::google::protobuf::RepeatedPtrField< ::PBTax > tax_;
  ::google::protobuf::uint32 wintax_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(28 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBWorldBattleConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBDegreeInfo : public ::google::protobuf::Message {
 public:
  PBDegreeInfo();
  virtual ~PBDegreeInfo();
  
  PBDegreeInfo(const PBDegreeInfo& from);
  
  inline PBDegreeInfo& operator=(const PBDegreeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDegreeInfo& default_instance();
  void Swap(PBDegreeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBDegreeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDegreeInfo& from);
  void MergeFrom(const PBDegreeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 Value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // optional uint32 Probality = 2;
  inline bool has_probality() const;
  inline void clear_probality();
  static const int kProbalityFieldNumber = 2;
  inline ::google::protobuf::uint32 probality() const;
  inline void set_probality(::google::protobuf::uint32 value);
  
  // optional uint32 DegreeValue = 3;
  inline bool has_degreevalue() const;
  inline void clear_degreevalue();
  static const int kDegreeValueFieldNumber = 3;
  inline ::google::protobuf::uint32 degreevalue() const;
  inline void set_degreevalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 probality_;
  ::google::protobuf::uint32 degreevalue_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBDegreeInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBItemInfo : public ::google::protobuf::Message {
 public:
  PBItemInfo();
  virtual ~PBItemInfo();
  
  PBItemInfo(const PBItemInfo& from);
  
  inline PBItemInfo& operator=(const PBItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemInfo& default_instance();
  void Swap(PBItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemInfo& from);
  void MergeFrom(const PBItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 ItemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 ItemNum = 2;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 Probality = 3;
  inline bool has_probality() const;
  inline void clear_probality();
  static const int kProbalityFieldNumber = 3;
  inline ::google::protobuf::uint32 probality() const;
  inline void set_probality(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 probality_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBItemAutoCollect : public ::google::protobuf::Message {
 public:
  PBItemAutoCollect();
  virtual ~PBItemAutoCollect();
  
  PBItemAutoCollect(const PBItemAutoCollect& from);
  
  inline PBItemAutoCollect& operator=(const PBItemAutoCollect& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemAutoCollect& default_instance();
  void Swap(PBItemAutoCollect* other);
  
  // implements Message ----------------------------------------------
  
  PBItemAutoCollect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemAutoCollect& from);
  void MergeFrom(const PBItemAutoCollect& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBItemInfo ItemInfo = 1;
  inline int iteminfo_size() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemInfo >& iteminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemInfo >* mutable_iteminfo();
  inline const ::PBItemInfo& iteminfo(int index) const;
  inline ::PBItemInfo* mutable_iteminfo(int index);
  inline ::PBItemInfo* add_iteminfo();
  
  // repeated .PBDegreeInfo DegreeInfo = 2;
  inline int degreeinfo_size() const;
  inline void clear_degreeinfo();
  static const int kDegreeInfoFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBDegreeInfo >& degreeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDegreeInfo >* mutable_degreeinfo();
  inline const ::PBDegreeInfo& degreeinfo(int index) const;
  inline ::PBDegreeInfo* mutable_degreeinfo(int index);
  inline ::PBDegreeInfo* add_degreeinfo();
  
  // optional uint32 MapID = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 PosX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 posx() const;
  inline void set_posx(::google::protobuf::uint32 value);
  
  // optional uint32 PosY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 posy() const;
  inline void set_posy(::google::protobuf::uint32 value);
  
  // optional uint32 Grid = 6;
  inline bool has_grid() const;
  inline void clear_grid();
  static const int kGridFieldNumber = 6;
  inline ::google::protobuf::uint32 grid() const;
  inline void set_grid(::google::protobuf::uint32 value);
  
  // optional uint32 MaxUseTimes = 7;
  inline bool has_maxusetimes() const;
  inline void clear_maxusetimes();
  static const int kMaxUseTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 maxusetimes() const;
  inline void set_maxusetimes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::PBItemInfo > iteminfo_;
  ::google::protobuf::RepeatedPtrField< ::PBDegreeInfo > degreeinfo_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 posx_;
  ::google::protobuf::uint32 posy_;
  ::google::protobuf::uint32 grid_;
  ::google::protobuf::uint32 maxusetimes_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemAutoCollect* default_instance_;
};
// -------------------------------------------------------------------

class PBFangCunTreeNode : public ::google::protobuf::Message {
 public:
  PBFangCunTreeNode();
  virtual ~PBFangCunTreeNode();
  
  PBFangCunTreeNode(const PBFangCunTreeNode& from);
  
  inline PBFangCunTreeNode& operator=(const PBFangCunTreeNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFangCunTreeNode& default_instance();
  void Swap(PBFangCunTreeNode* other);
  
  // implements Message ----------------------------------------------
  
  PBFangCunTreeNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFangCunTreeNode& from);
  void MergeFrom(const PBFangCunTreeNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 SkillID = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIDFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 MaxLevel = 2;
  inline bool has_maxlevel() const;
  inline void clear_maxlevel();
  static const int kMaxLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 maxlevel() const;
  inline void set_maxlevel(::google::protobuf::uint32 value);
  
  // repeated uint32 NeedSkillID = 3;
  inline int needskillid_size() const;
  inline void clear_needskillid();
  static const int kNeedSkillIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& needskillid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_needskillid();
  inline ::google::protobuf::uint32 needskillid(int index) const;
  inline void set_needskillid(int index, ::google::protobuf::uint32 value);
  inline void add_needskillid(::google::protobuf::uint32 value);
  
  // repeated uint32 NeedSkillPoint = 4;
  inline int needskillpoint_size() const;
  inline void clear_needskillpoint();
  static const int kNeedSkillPointFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& needskillpoint() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_needskillpoint();
  inline ::google::protobuf::uint32 needskillpoint(int index) const;
  inline void set_needskillpoint(int index, ::google::protobuf::uint32 value);
  inline void add_needskillpoint(::google::protobuf::uint32 value);
  
  // optional uint32 Level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 NeedBook = 6;
  inline bool has_needbook() const;
  inline void clear_needbook();
  static const int kNeedBookFieldNumber = 6;
  inline ::google::protobuf::uint32 needbook() const;
  inline void set_needbook(::google::protobuf::uint32 value);
  
  // optional uint32 Stage = 7;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 7;
  inline ::google::protobuf::uint32 stage() const;
  inline void set_stage(::google::protobuf::uint32 value);
  
  // optional uint32 Order = 8;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 8;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 maxlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > needskillid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > needskillpoint_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 needbook_;
  ::google::protobuf::uint32 stage_;
  ::google::protobuf::uint32 order_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBFangCunTreeNode* default_instance_;
};
// -------------------------------------------------------------------

class PBFangCunTree : public ::google::protobuf::Message {
 public:
  PBFangCunTree();
  virtual ~PBFangCunTree();
  
  PBFangCunTree(const PBFangCunTree& from);
  
  inline PBFangCunTree& operator=(const PBFangCunTree& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFangCunTree& default_instance();
  void Swap(PBFangCunTree* other);
  
  // implements Message ----------------------------------------------
  
  PBFangCunTree* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFangCunTree& from);
  void MergeFrom(const PBFangCunTree& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBFangCunTreeNode SkillNode = 2;
  inline int skillnode_size() const;
  inline void clear_skillnode();
  static const int kSkillNodeFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode >& skillnode() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode >* mutable_skillnode();
  inline const ::PBFangCunTreeNode& skillnode(int index) const;
  inline ::PBFangCunTreeNode* mutable_skillnode(int index);
  inline ::PBFangCunTreeNode* add_skillnode();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode > skillnode_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBFangCunTree* default_instance_;
};
// -------------------------------------------------------------------

class PBItemBlackPills : public ::google::protobuf::Message {
 public:
  PBItemBlackPills();
  virtual ~PBItemBlackPills();
  
  PBItemBlackPills(const PBItemBlackPills& from);
  
  inline PBItemBlackPills& operator=(const PBItemBlackPills& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemBlackPills& default_instance();
  void Swap(PBItemBlackPills* other);
  
  // implements Message ----------------------------------------------
  
  PBItemBlackPills* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemBlackPills& from);
  void MergeFrom(const PBItemBlackPills& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint32 ExchangeTime = 2;
  inline bool has_exchangetime() const;
  inline void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 exchangetime() const;
  inline void set_exchangetime(::google::protobuf::uint32 value);
  
  // optional uint32 ExpTableID = 3;
  inline bool has_exptableid() const;
  inline void clear_exptableid();
  static const int kExpTableIDFieldNumber = 3;
  inline ::google::protobuf::uint32 exptableid() const;
  inline void set_exptableid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint32 exchangetime_;
  ::google::protobuf::uint32 exptableid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemBlackPills* default_instance_;
};
// -------------------------------------------------------------------

class PBStage : public ::google::protobuf::Message {
 public:
  PBStage();
  virtual ~PBStage();
  
  PBStage(const PBStage& from);
  
  inline PBStage& operator=(const PBStage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBStage& default_instance();
  void Swap(PBStage* other);
  
  // implements Message ----------------------------------------------
  
  PBStage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBStage& from);
  void MergeFrom(const PBStage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 StageID = 1;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageIDFieldNumber = 1;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);
  
  // repeated uint32 Next = 2;
  inline int next_size() const;
  inline void clear_next();
  static const int kNextFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& next() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_next();
  inline ::google::protobuf::uint32 next(int index) const;
  inline void set_next(int index, ::google::protobuf::uint32 value);
  inline void add_next(::google::protobuf::uint32 value);
  
  // optional uint32 Layer = 3;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 3;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 stageid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > next_;
  ::google::protobuf::uint32 layer_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBStage* default_instance_;
};
// -------------------------------------------------------------------

class PBTemplateTalentStage : public ::google::protobuf::Message {
 public:
  PBTemplateTalentStage();
  virtual ~PBTemplateTalentStage();
  
  PBTemplateTalentStage(const PBTemplateTalentStage& from);
  
  inline PBTemplateTalentStage& operator=(const PBTemplateTalentStage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTemplateTalentStage& default_instance();
  void Swap(PBTemplateTalentStage* other);
  
  // implements Message ----------------------------------------------
  
  PBTemplateTalentStage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTemplateTalentStage& from);
  void MergeFrom(const PBTemplateTalentStage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated .PBStage Stage = 2;
  inline int stage_size() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::PBStage >& stage() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBStage >* mutable_stage();
  inline const ::PBStage& stage(int index) const;
  inline ::PBStage* mutable_stage(int index);
  inline ::PBStage* add_stage();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedPtrField< ::PBStage > stage_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBTemplateTalentStage* default_instance_;
};
// -------------------------------------------------------------------

class PBItemExpContainer : public ::google::protobuf::Message {
 public:
  PBItemExpContainer();
  virtual ~PBItemExpContainer();
  
  PBItemExpContainer(const PBItemExpContainer& from);
  
  inline PBItemExpContainer& operator=(const PBItemExpContainer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemExpContainer& default_instance();
  void Swap(PBItemExpContainer* other);
  
  // implements Message ----------------------------------------------
  
  PBItemExpContainer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemExpContainer& from);
  void MergeFrom(const PBItemExpContainer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint64 MaxExp = 2;
  inline bool has_maxexp() const;
  inline void clear_maxexp();
  static const int kMaxExpFieldNumber = 2;
  inline ::google::protobuf::uint64 maxexp() const;
  inline void set_maxexp(::google::protobuf::uint64 value);
  
  // optional uint32 OgreExpRate = 3;
  inline bool has_ogreexprate() const;
  inline void clear_ogreexprate();
  static const int kOgreExpRateFieldNumber = 3;
  inline ::google::protobuf::uint32 ogreexprate() const;
  inline void set_ogreexprate(::google::protobuf::uint32 value);
  
  // optional uint32 ExpPillsID = 4;
  inline bool has_exppillsid() const;
  inline void clear_exppillsid();
  static const int kExpPillsIDFieldNumber = 4;
  inline ::google::protobuf::uint32 exppillsid() const;
  inline void set_exppillsid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint64 maxexp_;
  ::google::protobuf::uint32 ogreexprate_;
  ::google::protobuf::uint32 exppillsid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemExpContainer* default_instance_;
};
// -------------------------------------------------------------------

class PBItemExpPills : public ::google::protobuf::Message {
 public:
  PBItemExpPills();
  virtual ~PBItemExpPills();
  
  PBItemExpPills(const PBItemExpPills& from);
  
  inline PBItemExpPills& operator=(const PBItemExpPills& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemExpPills& default_instance();
  void Swap(PBItemExpPills* other);
  
  // implements Message ----------------------------------------------
  
  PBItemExpPills* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemExpPills& from);
  void MergeFrom(const PBItemExpPills& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint64 Exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 LevelLimit = 3;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 levellimit() const;
  inline void set_levellimit(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 levellimit_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemExpPills* default_instance_;
};
// -------------------------------------------------------------------

class PBItemExpTome : public ::google::protobuf::Message {
 public:
  PBItemExpTome();
  virtual ~PBItemExpTome();
  
  PBItemExpTome(const PBItemExpTome& from);
  
  inline PBItemExpTome& operator=(const PBItemExpTome& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemExpTome& default_instance();
  void Swap(PBItemExpTome* other);
  
  // implements Message ----------------------------------------------
  
  PBItemExpTome* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemExpTome& from);
  void MergeFrom(const PBItemExpTome& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase ItemBase = 1;
  inline bool has_itembase() const;
  inline void clear_itembase();
  static const int kItemBaseFieldNumber = 1;
  inline const ::PBItemBase& itembase() const;
  inline ::PBItemBase* mutable_itembase();
  
  // optional uint64 Exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 LevelLimit = 3;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 levellimit() const;
  inline void set_levellimit(::google::protobuf::uint32 value);
  
  // repeated uint32 OpenItemID = 4;
  inline int openitemid_size() const;
  inline void clear_openitemid();
  static const int kOpenItemIDFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& openitemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_openitemid();
  inline ::google::protobuf::uint32 openitemid(int index) const;
  inline void set_openitemid(int index, ::google::protobuf::uint32 value);
  inline void add_openitemid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* itembase_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 levellimit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > openitemid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBItemExpTome* default_instance_;
};
// -------------------------------------------------------------------

class PBAccuseConfig : public ::google::protobuf::Message {
 public:
  PBAccuseConfig();
  virtual ~PBAccuseConfig();
  
  PBAccuseConfig(const PBAccuseConfig& from);
  
  inline PBAccuseConfig& operator=(const PBAccuseConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAccuseConfig& default_instance();
  void Swap(PBAccuseConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBAccuseConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAccuseConfig& from);
  void MergeFrom(const PBAccuseConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseBeginHour = 2;
  inline bool has_accusebeginhour() const;
  inline void clear_accusebeginhour();
  static const int kAccuseBeginHourFieldNumber = 2;
  inline ::google::protobuf::uint32 accusebeginhour() const;
  inline void set_accusebeginhour(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseBeginMinute = 3;
  inline bool has_accusebeginminute() const;
  inline void clear_accusebeginminute();
  static const int kAccuseBeginMinuteFieldNumber = 3;
  inline ::google::protobuf::uint32 accusebeginminute() const;
  inline void set_accusebeginminute(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseLevel = 4;
  inline bool has_accuselevel() const;
  inline void clear_accuselevel();
  static const int kAccuseLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 accuselevel() const;
  inline void set_accuselevel(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseEndHour = 5;
  inline bool has_accuseendhour() const;
  inline void clear_accuseendhour();
  static const int kAccuseEndHourFieldNumber = 5;
  inline ::google::protobuf::uint32 accuseendhour() const;
  inline void set_accuseendhour(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseEndMinute = 6;
  inline bool has_accuseendminute() const;
  inline void clear_accuseendminute();
  static const int kAccuseEndMinuteFieldNumber = 6;
  inline ::google::protobuf::uint32 accuseendminute() const;
  inline void set_accuseendminute(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseMoney = 7;
  inline bool has_accusemoney() const;
  inline void clear_accusemoney();
  static const int kAccuseMoneyFieldNumber = 7;
  inline ::google::protobuf::uint32 accusemoney() const;
  inline void set_accusemoney(::google::protobuf::uint32 value);
  
  // optional uint32 AccusePerson = 8;
  inline bool has_accuseperson() const;
  inline void clear_accuseperson();
  static const int kAccusePersonFieldNumber = 8;
  inline ::google::protobuf::uint32 accuseperson() const;
  inline void set_accuseperson(::google::protobuf::uint32 value);
  
  // optional uint32 AccusePercent = 9;
  inline bool has_accusepercent() const;
  inline void clear_accusepercent();
  static const int kAccusePercentFieldNumber = 9;
  inline ::google::protobuf::uint32 accusepercent() const;
  inline void set_accusepercent(::google::protobuf::uint32 value);
  
  // optional uint32 AwardPower = 10;
  inline bool has_awardpower() const;
  inline void clear_awardpower();
  static const int kAwardPowerFieldNumber = 10;
  inline ::google::protobuf::uint32 awardpower() const;
  inline void set_awardpower(::google::protobuf::uint32 value);
  
  // optional uint32 GateNum = 11;
  inline bool has_gatenum() const;
  inline void clear_gatenum();
  static const int kGateNumFieldNumber = 11;
  inline ::google::protobuf::uint32 gatenum() const;
  inline void set_gatenum(::google::protobuf::uint32 value);
  
  // optional uint32 FlagNum = 12;
  inline bool has_flagnum() const;
  inline void clear_flagnum();
  static const int kFlagNumFieldNumber = 12;
  inline ::google::protobuf::uint32 flagnum() const;
  inline void set_flagnum(::google::protobuf::uint32 value);
  
  // optional uint32 GatePower = 13;
  inline bool has_gatepower() const;
  inline void clear_gatepower();
  static const int kGatePowerFieldNumber = 13;
  inline ::google::protobuf::uint32 gatepower() const;
  inline void set_gatepower(::google::protobuf::uint32 value);
  
  // optional uint32 FlagPower = 14;
  inline bool has_flagpower() const;
  inline void clear_flagpower();
  static const int kFlagPowerFieldNumber = 14;
  inline ::google::protobuf::uint32 flagpower() const;
  inline void set_flagpower(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseNoticeHour = 15;
  inline bool has_accusenoticehour() const;
  inline void clear_accusenoticehour();
  static const int kAccuseNoticeHourFieldNumber = 15;
  inline ::google::protobuf::uint32 accusenoticehour() const;
  inline void set_accusenoticehour(::google::protobuf::uint32 value);
  
  // optional uint32 AccuseNoticeMinute = 16;
  inline bool has_accusenoticeminute() const;
  inline void clear_accusenoticeminute();
  static const int kAccuseNoticeMinuteFieldNumber = 16;
  inline ::google::protobuf::uint32 accusenoticeminute() const;
  inline void set_accusenoticeminute(::google::protobuf::uint32 value);
  
  // optional uint32 NoticePower = 17;
  inline bool has_noticepower() const;
  inline void clear_noticepower();
  static const int kNoticePowerFieldNumber = 17;
  inline ::google::protobuf::uint32 noticepower() const;
  inline void set_noticepower(::google::protobuf::uint32 value);
  
  // optional uint32 GateParam1 = 18;
  inline bool has_gateparam1() const;
  inline void clear_gateparam1();
  static const int kGateParam1FieldNumber = 18;
  inline ::google::protobuf::uint32 gateparam1() const;
  inline void set_gateparam1(::google::protobuf::uint32 value);
  
  // optional uint32 FlagParam1 = 19;
  inline bool has_flagparam1() const;
  inline void clear_flagparam1();
  static const int kFlagParam1FieldNumber = 19;
  inline ::google::protobuf::uint32 flagparam1() const;
  inline void set_flagparam1(::google::protobuf::uint32 value);
  
  // optional uint32 GateParam2 = 20;
  inline bool has_gateparam2() const;
  inline void clear_gateparam2();
  static const int kGateParam2FieldNumber = 20;
  inline ::google::protobuf::uint32 gateparam2() const;
  inline void set_gateparam2(::google::protobuf::uint32 value);
  
  // optional uint32 FlagParam2 = 21;
  inline bool has_flagparam2() const;
  inline void clear_flagparam2();
  static const int kFlagParam2FieldNumber = 21;
  inline ::google::protobuf::uint32 flagparam2() const;
  inline void set_flagparam2(::google::protobuf::uint32 value);
  
  // optional uint32 GateParam3 = 22;
  inline bool has_gateparam3() const;
  inline void clear_gateparam3();
  static const int kGateParam3FieldNumber = 22;
  inline ::google::protobuf::uint32 gateparam3() const;
  inline void set_gateparam3(::google::protobuf::uint32 value);
  
  // optional uint32 FlagParam3 = 23;
  inline bool has_flagparam3() const;
  inline void clear_flagparam3();
  static const int kFlagParam3FieldNumber = 23;
  inline ::google::protobuf::uint32 flagparam3() const;
  inline void set_flagparam3(::google::protobuf::uint32 value);
  
  // optional uint32 LWPercent = 24;
  inline bool has_lwpercent() const;
  inline void clear_lwpercent();
  static const int kLWPercentFieldNumber = 24;
  inline ::google::protobuf::uint32 lwpercent() const;
  inline void set_lwpercent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 accusebeginhour_;
  ::google::protobuf::uint32 accusebeginminute_;
  ::google::protobuf::uint32 accuselevel_;
  ::google::protobuf::uint32 accuseendhour_;
  ::google::protobuf::uint32 accuseendminute_;
  ::google::protobuf::uint32 accusemoney_;
  ::google::protobuf::uint32 accuseperson_;
  ::google::protobuf::uint32 accusepercent_;
  ::google::protobuf::uint32 awardpower_;
  ::google::protobuf::uint32 gatenum_;
  ::google::protobuf::uint32 flagnum_;
  ::google::protobuf::uint32 gatepower_;
  ::google::protobuf::uint32 flagpower_;
  ::google::protobuf::uint32 accusenoticehour_;
  ::google::protobuf::uint32 accusenoticeminute_;
  ::google::protobuf::uint32 noticepower_;
  ::google::protobuf::uint32 gateparam1_;
  ::google::protobuf::uint32 flagparam1_;
  ::google::protobuf::uint32 gateparam2_;
  ::google::protobuf::uint32 flagparam2_;
  ::google::protobuf::uint32 gateparam3_;
  ::google::protobuf::uint32 flagparam3_;
  ::google::protobuf::uint32 lwpercent_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(24 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBAccuseConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBGlobalMapConfig : public ::google::protobuf::Message {
 public:
  PBGlobalMapConfig();
  virtual ~PBGlobalMapConfig();
  
  PBGlobalMapConfig(const PBGlobalMapConfig& from);
  
  inline PBGlobalMapConfig& operator=(const PBGlobalMapConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGlobalMapConfig& default_instance();
  void Swap(PBGlobalMapConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBGlobalMapConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGlobalMapConfig& from);
  void MergeFrom(const PBGlobalMapConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 MapID = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIDFieldNumber = 2;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // optional uint32 BuffID = 3;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 3;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
  // optional uint32 Limit = 4;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);
  
  // optional uint32 OutMap = 5;
  inline bool has_outmap() const;
  inline void clear_outmap();
  static const int kOutMapFieldNumber = 5;
  inline ::google::protobuf::uint32 outmap() const;
  inline void set_outmap(::google::protobuf::uint32 value);
  
  // optional uint32 OutX = 6;
  inline bool has_outx() const;
  inline void clear_outx();
  static const int kOutXFieldNumber = 6;
  inline ::google::protobuf::uint32 outx() const;
  inline void set_outx(::google::protobuf::uint32 value);
  
  // optional uint32 OutY = 7;
  inline bool has_outy() const;
  inline void clear_outy();
  static const int kOutYFieldNumber = 7;
  inline ::google::protobuf::uint32 outy() const;
  inline void set_outy(::google::protobuf::uint32 value);
  
  // optional uint32 EscapeBuffID = 8;
  inline bool has_escapebuffid() const;
  inline void clear_escapebuffid();
  static const int kEscapeBuffIDFieldNumber = 8;
  inline ::google::protobuf::uint32 escapebuffid() const;
  inline void set_escapebuffid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 buffid_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 outmap_;
  ::google::protobuf::uint32 outx_;
  ::google::protobuf::uint32 outy_;
  ::google::protobuf::uint32 escapebuffid_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBGlobalMapConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBCorpsBOSS : public ::google::protobuf::Message {
 public:
  PBCorpsBOSS();
  virtual ~PBCorpsBOSS();
  
  PBCorpsBOSS(const PBCorpsBOSS& from);
  
  inline PBCorpsBOSS& operator=(const PBCorpsBOSS& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorpsBOSS& default_instance();
  void Swap(PBCorpsBOSS* other);
  
  // implements Message ----------------------------------------------
  
  PBCorpsBOSS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCorpsBOSS& from);
  void MergeFrom(const PBCorpsBOSS& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 BOSSID = 2;
  inline int bossid_size() const;
  inline void clear_bossid();
  static const int kBOSSIDFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& bossid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_bossid();
  inline ::google::protobuf::uint32 bossid(int index) const;
  inline void set_bossid(int index, ::google::protobuf::uint32 value);
  inline void add_bossid(::google::protobuf::uint32 value);
  
  // repeated uint32 HardBOSSID = 3;
  inline int hardbossid_size() const;
  inline void clear_hardbossid();
  static const int kHardBOSSIDFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& hardbossid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_hardbossid();
  inline ::google::protobuf::uint32 hardbossid(int index) const;
  inline void set_hardbossid(int index, ::google::protobuf::uint32 value);
  inline void add_hardbossid(::google::protobuf::uint32 value);
  
  // repeated uint32 ValueLimit = 4;
  inline int valuelimit_size() const;
  inline void clear_valuelimit();
  static const int kValueLimitFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& valuelimit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_valuelimit();
  inline ::google::protobuf::uint32 valuelimit(int index) const;
  inline void set_valuelimit(int index, ::google::protobuf::uint32 value);
  inline void add_valuelimit(::google::protobuf::uint32 value);
  
  // repeated string DropDesc = 5;
  inline int dropdesc_size() const;
  inline void clear_dropdesc();
  static const int kDropDescFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& dropdesc() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dropdesc();
  inline const ::std::string& dropdesc(int index) const;
  inline ::std::string* mutable_dropdesc(int index);
  inline void set_dropdesc(int index, const ::std::string& value);
  inline void set_dropdesc(int index, const char* value);
  inline void set_dropdesc(int index, const char* value, size_t size);
  inline ::std::string* add_dropdesc();
  inline void add_dropdesc(const ::std::string& value);
  inline void add_dropdesc(const char* value);
  inline void add_dropdesc(const char* value, size_t size);
  
  // repeated string HardDropDesc = 6;
  inline int harddropdesc_size() const;
  inline void clear_harddropdesc();
  static const int kHardDropDescFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& harddropdesc() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_harddropdesc();
  inline const ::std::string& harddropdesc(int index) const;
  inline ::std::string* mutable_harddropdesc(int index);
  inline void set_harddropdesc(int index, const ::std::string& value);
  inline void set_harddropdesc(int index, const char* value);
  inline void set_harddropdesc(int index, const char* value, size_t size);
  inline ::std::string* add_harddropdesc();
  inline void add_harddropdesc(const ::std::string& value);
  inline void add_harddropdesc(const char* value);
  inline void add_harddropdesc(const char* value, size_t size);
  
  // repeated uint32 SummonMinLevel = 7;
  inline int summonminlevel_size() const;
  inline void clear_summonminlevel();
  static const int kSummonMinLevelFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& summonminlevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_summonminlevel();
  inline ::google::protobuf::uint32 summonminlevel(int index) const;
  inline void set_summonminlevel(int index, ::google::protobuf::uint32 value);
  inline void add_summonminlevel(::google::protobuf::uint32 value);
  
  // repeated uint32 HardSummonMinLevel = 8;
  inline int hardsummonminlevel_size() const;
  inline void clear_hardsummonminlevel();
  static const int kHardSummonMinLevelFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& hardsummonminlevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_hardsummonminlevel();
  inline ::google::protobuf::uint32 hardsummonminlevel(int index) const;
  inline void set_hardsummonminlevel(int index, ::google::protobuf::uint32 value);
  inline void add_hardsummonminlevel(::google::protobuf::uint32 value);
  
  // repeated uint32 SummonMinValue = 9;
  inline int summonminvalue_size() const;
  inline void clear_summonminvalue();
  static const int kSummonMinValueFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& summonminvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_summonminvalue();
  inline ::google::protobuf::uint32 summonminvalue(int index) const;
  inline void set_summonminvalue(int index, ::google::protobuf::uint32 value);
  inline void add_summonminvalue(::google::protobuf::uint32 value);
  
  // repeated uint32 HardSummonMinValue = 10;
  inline int hardsummonminvalue_size() const;
  inline void clear_hardsummonminvalue();
  static const int kHardSummonMinValueFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& hardsummonminvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_hardsummonminvalue();
  inline ::google::protobuf::uint32 hardsummonminvalue(int index) const;
  inline void set_hardsummonminvalue(int index, ::google::protobuf::uint32 value);
  inline void add_hardsummonminvalue(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bossid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hardbossid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > valuelimit_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dropdesc_;
  ::google::protobuf::RepeatedPtrField< ::std::string> harddropdesc_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > summonminlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hardsummonminlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > summonminvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hardsummonminvalue_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCorpsBOSS* default_instance_;
};
// -------------------------------------------------------------------

class PBOffLineExpConfig : public ::google::protobuf::Message {
 public:
  PBOffLineExpConfig();
  virtual ~PBOffLineExpConfig();
  
  PBOffLineExpConfig(const PBOffLineExpConfig& from);
  
  inline PBOffLineExpConfig& operator=(const PBOffLineExpConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBOffLineExpConfig& default_instance();
  void Swap(PBOffLineExpConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBOffLineExpConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBOffLineExpConfig& from);
  void MergeFrom(const PBOffLineExpConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // optional uint32 OffLineUnit = 2;
  inline bool has_offlineunit() const;
  inline void clear_offlineunit();
  static const int kOffLineUnitFieldNumber = 2;
  inline ::google::protobuf::uint32 offlineunit() const;
  inline void set_offlineunit(::google::protobuf::uint32 value);
  
  // repeated uint32 OffLineExp = 3;
  inline int offlineexp_size() const;
  inline void clear_offlineexp();
  static const int kOffLineExpFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& offlineexp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_offlineexp();
  inline ::google::protobuf::uint32 offlineexp(int index) const;
  inline void set_offlineexp(int index, ::google::protobuf::uint32 value);
  inline void add_offlineexp(::google::protobuf::uint32 value);
  
  // optional uint32 OffLineLevel = 4;
  inline bool has_offlinelevel() const;
  inline void clear_offlinelevel();
  static const int kOffLineLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 offlinelevel() const;
  inline void set_offlinelevel(::google::protobuf::uint32 value);
  
  // repeated uint32 ExpLimit = 5;
  inline int explimit_size() const;
  inline void clear_explimit();
  static const int kExpLimitFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& explimit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_explimit();
  inline ::google::protobuf::uint32 explimit(int index) const;
  inline void set_explimit(int index, ::google::protobuf::uint32 value);
  inline void add_explimit(::google::protobuf::uint32 value);
  
  // optional uint32 OffLinePercent = 6;
  inline bool has_offlinepercent() const;
  inline void clear_offlinepercent();
  static const int kOffLinePercentFieldNumber = 6;
  inline ::google::protobuf::uint32 offlinepercent() const;
  inline void set_offlinepercent(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 offlineunit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > offlineexp_;
  ::google::protobuf::uint32 offlinelevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > explimit_;
  ::google::protobuf::uint32 offlinepercent_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBOffLineExpConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBRepeFameTable : public ::google::protobuf::Message {
 public:
  PBRepeFameTable();
  virtual ~PBRepeFameTable();
  
  PBRepeFameTable(const PBRepeFameTable& from);
  
  inline PBRepeFameTable& operator=(const PBRepeFameTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRepeFameTable& default_instance();
  void Swap(PBRepeFameTable* other);
  
  // implements Message ----------------------------------------------
  
  PBRepeFameTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBRepeFameTable& from);
  void MergeFrom(const PBRepeFameTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 FameType = 2;
  inline int fametype_size() const;
  inline void clear_fametype();
  static const int kFameTypeFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& fametype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_fametype();
  inline ::google::protobuf::uint32 fametype(int index) const;
  inline void set_fametype(int index, ::google::protobuf::uint32 value);
  inline void add_fametype(::google::protobuf::uint32 value);
  
  // repeated uint32 FameValue = 3;
  inline int famevalue_size() const;
  inline void clear_famevalue();
  static const int kFameValueFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& famevalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_famevalue();
  inline ::google::protobuf::uint32 famevalue(int index) const;
  inline void set_famevalue(int index, ::google::protobuf::uint32 value);
  inline void add_famevalue(::google::protobuf::uint32 value);
  
  // repeated uint32 ItemValue = 4;
  inline int itemvalue_size() const;
  inline void clear_itemvalue();
  static const int kItemValueFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& itemvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_itemvalue();
  inline ::google::protobuf::uint32 itemvalue(int index) const;
  inline void set_itemvalue(int index, ::google::protobuf::uint32 value);
  inline void add_itemvalue(::google::protobuf::uint32 value);
  
  // optional uint32 CombatItemID = 5;
  inline bool has_combatitemid() const;
  inline void clear_combatitemid();
  static const int kCombatItemIDFieldNumber = 5;
  inline ::google::protobuf::uint32 combatitemid() const;
  inline void set_combatitemid(::google::protobuf::uint32 value);
  
  // optional uint32 RepeItemID = 6;
  inline bool has_repeitemid() const;
  inline void clear_repeitemid();
  static const int kRepeItemIDFieldNumber = 6;
  inline ::google::protobuf::uint32 repeitemid() const;
  inline void set_repeitemid(::google::protobuf::uint32 value);
  
  // optional uint32 CommonItemID = 7;
  inline bool has_commonitemid() const;
  inline void clear_commonitemid();
  static const int kCommonItemIDFieldNumber = 7;
  inline ::google::protobuf::uint32 commonitemid() const;
  inline void set_commonitemid(::google::protobuf::uint32 value);
  
  // optional uint32 CombatLimit = 8;
  inline bool has_combatlimit() const;
  inline void clear_combatlimit();
  static const int kCombatLimitFieldNumber = 8;
  inline ::google::protobuf::uint32 combatlimit() const;
  inline void set_combatlimit(::google::protobuf::uint32 value);
  
  // optional uint32 RepeLimit = 9;
  inline bool has_repelimit() const;
  inline void clear_repelimit();
  static const int kRepeLimitFieldNumber = 9;
  inline ::google::protobuf::uint32 repelimit() const;
  inline void set_repelimit(::google::protobuf::uint32 value);
  
  // optional uint32 CommonLimit = 10;
  inline bool has_commonlimit() const;
  inline void clear_commonlimit();
  static const int kCommonLimitFieldNumber = 10;
  inline ::google::protobuf::uint32 commonlimit() const;
  inline void set_commonlimit(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fametype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > famevalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > itemvalue_;
  ::google::protobuf::uint32 combatitemid_;
  ::google::protobuf::uint32 repeitemid_;
  ::google::protobuf::uint32 commonitemid_;
  ::google::protobuf::uint32 combatlimit_;
  ::google::protobuf::uint32 repelimit_;
  ::google::protobuf::uint32 commonlimit_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBRepeFameTable* default_instance_;
};
// -------------------------------------------------------------------

class PBCastingSpiritTable : public ::google::protobuf::Message {
 public:
  PBCastingSpiritTable();
  virtual ~PBCastingSpiritTable();
  
  PBCastingSpiritTable(const PBCastingSpiritTable& from);
  
  inline PBCastingSpiritTable& operator=(const PBCastingSpiritTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCastingSpiritTable& default_instance();
  void Swap(PBCastingSpiritTable* other);
  
  // implements Message ----------------------------------------------
  
  PBCastingSpiritTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCastingSpiritTable& from);
  void MergeFrom(const PBCastingSpiritTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 TempID = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  inline ::google::protobuf::uint32 tempid() const;
  inline void set_tempid(::google::protobuf::uint32 value);
  
  // repeated uint32 OpenStatus = 2;
  inline int openstatus_size() const;
  inline void clear_openstatus();
  static const int kOpenStatusFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& openstatus() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_openstatus();
  inline ::google::protobuf::uint32 openstatus(int index) const;
  inline void set_openstatus(int index, ::google::protobuf::uint32 value);
  inline void add_openstatus(::google::protobuf::uint32 value);
  
  // repeated string PositionName = 3;
  inline int positionname_size() const;
  inline void clear_positionname();
  static const int kPositionNameFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& positionname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_positionname();
  inline const ::std::string& positionname(int index) const;
  inline ::std::string* mutable_positionname(int index);
  inline void set_positionname(int index, const ::std::string& value);
  inline void set_positionname(int index, const char* value);
  inline void set_positionname(int index, const char* value, size_t size);
  inline ::std::string* add_positionname();
  inline void add_positionname(const ::std::string& value);
  inline void add_positionname(const char* value);
  inline void add_positionname(const char* value, size_t size);
  
  // repeated string PositionDesc = 4;
  inline int positiondesc_size() const;
  inline void clear_positiondesc();
  static const int kPositionDescFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& positiondesc() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_positiondesc();
  inline const ::std::string& positiondesc(int index) const;
  inline ::std::string* mutable_positiondesc(int index);
  inline void set_positiondesc(int index, const ::std::string& value);
  inline void set_positiondesc(int index, const char* value);
  inline void set_positiondesc(int index, const char* value, size_t size);
  inline ::std::string* add_positiondesc();
  inline void add_positiondesc(const ::std::string& value);
  inline void add_positiondesc(const char* value);
  inline void add_positiondesc(const char* value, size_t size);
  
  // repeated string SpiritTypeName = 5;
  inline int spirittypename_size() const;
  inline void clear_spirittypename();
  static const int kSpiritTypeNameFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& spirittypename() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_spirittypename();
  inline const ::std::string& spirittypename(int index) const;
  inline ::std::string* mutable_spirittypename(int index);
  inline void set_spirittypename(int index, const ::std::string& value);
  inline void set_spirittypename(int index, const char* value);
  inline void set_spirittypename(int index, const char* value, size_t size);
  inline ::std::string* add_spirittypename();
  inline void add_spirittypename(const ::std::string& value);
  inline void add_spirittypename(const char* value);
  inline void add_spirittypename(const char* value, size_t size);
  
  // repeated string SpiritTypeDesc = 6;
  inline int spirittypedesc_size() const;
  inline void clear_spirittypedesc();
  static const int kSpiritTypeDescFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& spirittypedesc() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_spirittypedesc();
  inline const ::std::string& spirittypedesc(int index) const;
  inline ::std::string* mutable_spirittypedesc(int index);
  inline void set_spirittypedesc(int index, const ::std::string& value);
  inline void set_spirittypedesc(int index, const char* value);
  inline void set_spirittypedesc(int index, const char* value, size_t size);
  inline ::std::string* add_spirittypedesc();
  inline void add_spirittypedesc(const ::std::string& value);
  inline void add_spirittypedesc(const char* value);
  inline void add_spirittypedesc(const char* value, size_t size);
  
  // repeated uint32 SpiritItem = 7;
  inline int spirititem_size() const;
  inline void clear_spirititem();
  static const int kSpiritItemFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& spirititem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_spirititem();
  inline ::google::protobuf::uint32 spirititem(int index) const;
  inline void set_spirititem(int index, ::google::protobuf::uint32 value);
  inline void add_spirititem(::google::protobuf::uint32 value);
  
  // repeated uint32 SpiritItemNum = 8;
  inline int spirititemnum_size() const;
  inline void clear_spirititemnum();
  static const int kSpiritItemNumFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& spirititemnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_spirititemnum();
  inline ::google::protobuf::uint32 spirititemnum(int index) const;
  inline void set_spirititemnum(int index, ::google::protobuf::uint32 value);
  inline void add_spirititemnum(::google::protobuf::uint32 value);
  
  // repeated uint32 UpgradeMoney = 9;
  inline int upgrademoney_size() const;
  inline void clear_upgrademoney();
  static const int kUpgradeMoneyFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& upgrademoney() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_upgrademoney();
  inline ::google::protobuf::uint32 upgrademoney(int index) const;
  inline void set_upgrademoney(int index, ::google::protobuf::uint32 value);
  inline void add_upgrademoney(::google::protobuf::uint32 value);
  
  // repeated uint32 DowngradeMoney = 10;
  inline int downgrademoney_size() const;
  inline void clear_downgrademoney();
  static const int kDowngradeMoneyFieldNumber = 10;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& downgrademoney() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_downgrademoney();
  inline ::google::protobuf::uint32 downgrademoney(int index) const;
  inline void set_downgrademoney(int index, ::google::protobuf::uint32 value);
  inline void add_downgrademoney(::google::protobuf::uint32 value);
  
  // optional uint32 UpgradeItem = 11;
  inline bool has_upgradeitem() const;
  inline void clear_upgradeitem();
  static const int kUpgradeItemFieldNumber = 11;
  inline ::google::protobuf::uint32 upgradeitem() const;
  inline void set_upgradeitem(::google::protobuf::uint32 value);
  
  // optional uint32 DowngradeItem = 12;
  inline bool has_downgradeitem() const;
  inline void clear_downgradeitem();
  static const int kDowngradeItemFieldNumber = 12;
  inline ::google::protobuf::uint32 downgradeitem() const;
  inline void set_downgradeitem(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > openstatus_;
  ::google::protobuf::RepeatedPtrField< ::std::string> positionname_;
  ::google::protobuf::RepeatedPtrField< ::std::string> positiondesc_;
  ::google::protobuf::RepeatedPtrField< ::std::string> spirittypename_;
  ::google::protobuf::RepeatedPtrField< ::std::string> spirittypedesc_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > spirititem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > spirititemnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > upgrademoney_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > downgrademoney_;
  ::google::protobuf::uint32 upgradeitem_;
  ::google::protobuf::uint32 downgradeitem_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBCastingSpiritTable* default_instance_;
};
// -------------------------------------------------------------------

class PBSpiritItem : public ::google::protobuf::Message {
 public:
  PBSpiritItem();
  virtual ~PBSpiritItem();
  
  PBSpiritItem(const PBSpiritItem& from);
  
  inline PBSpiritItem& operator=(const PBSpiritItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSpiritItem& default_instance();
  void Swap(PBSpiritItem* other);
  
  // implements Message ----------------------------------------------
  
  PBSpiritItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSpiritItem& from);
  void MergeFrom(const PBSpiritItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  const ::google::protobuf::Descriptor* GetDescriptor() const;
  const ::google::protobuf::Reflection* GetReflection() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItemBase BaseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::PBItemBase& baseinfo() const;
  inline ::PBItemBase* mutable_baseinfo();
  
  // optional uint32 Grade = 2;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);
  
  // optional uint32 ColorGrade = 3;
  inline bool has_colorgrade() const;
  inline void clear_colorgrade();
  static const int kColorGradeFieldNumber = 3;
  inline ::google::protobuf::uint32 colorgrade() const;
  inline void set_colorgrade(::google::protobuf::uint32 value);
  
  // optional uint32 SpiritType = 4;
  inline bool has_spirittype() const;
  inline void clear_spirittype();
  static const int kSpiritTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 spirittype() const;
  inline void set_spirittype(::google::protobuf::uint32 value);
  
  // optional uint32 LevelLimit = 5;
  inline bool has_levellimit() const;
  inline void clear_levellimit();
  static const int kLevelLimitFieldNumber = 5;
  inline ::google::protobuf::uint32 levellimit() const;
  inline void set_levellimit(::google::protobuf::uint32 value);
  
  // optional uint32 EffectPoint = 6;
  inline bool has_effectpoint() const;
  inline void clear_effectpoint();
  static const int kEffectPointFieldNumber = 6;
  inline ::google::protobuf::uint32 effectpoint() const;
  inline void set_effectpoint(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::PBItemBase* baseinfo_;
  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 colorgrade_;
  ::google::protobuf::uint32 spirittype_;
  ::google::protobuf::uint32 levellimit_;
  ::google::protobuf::uint32 effectpoint_;
  friend void  protobuf_AddDesc_template_5fpb_2ehxx();
  friend void protobuf_AssignDesc_template_5fpb_2ehxx();
  friend void protobuf_ShutdownFile_template_5fpb_2ehxx();
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PBSpiritItem* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// PBItemSet

// repeated .PBItemBase Item = 1;
inline int PBItemSet::item_size() const {
  return item_.size();
}
inline void PBItemSet::clear_item() {
  item_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemBase >&
PBItemSet::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemBase >*
PBItemSet::mutable_item() {
  return &item_;
}
inline const ::PBItemBase& PBItemSet::item(int index) const {
  return item_.Get(index);
}
inline ::PBItemBase* PBItemSet::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::PBItemBase* PBItemSet::add_item() {
  return item_.Add();
}

// repeated .PBItemBindStone BindStone = 2;
inline int PBItemSet::bindstone_size() const {
  return bindstone_.size();
}
inline void PBItemSet::clear_bindstone() {
  bindstone_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemBindStone >&
PBItemSet::bindstone() const {
  return bindstone_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemBindStone >*
PBItemSet::mutable_bindstone() {
  return &bindstone_;
}
inline const ::PBItemBindStone& PBItemSet::bindstone(int index) const {
  return bindstone_.Get(index);
}
inline ::PBItemBindStone* PBItemSet::mutable_bindstone(int index) {
  return bindstone_.Mutable(index);
}
inline ::PBItemBindStone* PBItemSet::add_bindstone() {
  return bindstone_.Add();
}

// repeated .PBItemBluePrint BluePrint = 3;
inline int PBItemSet::blueprint_size() const {
  return blueprint_.size();
}
inline void PBItemSet::clear_blueprint() {
  blueprint_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemBluePrint >&
PBItemSet::blueprint() const {
  return blueprint_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemBluePrint >*
PBItemSet::mutable_blueprint() {
  return &blueprint_;
}
inline const ::PBItemBluePrint& PBItemSet::blueprint(int index) const {
  return blueprint_.Get(index);
}
inline ::PBItemBluePrint* PBItemSet::mutable_blueprint(int index) {
  return blueprint_.Mutable(index);
}
inline ::PBItemBluePrint* PBItemSet::add_blueprint() {
  return blueprint_.Add();
}

// repeated .PBItemBook ItemBook = 4;
inline int PBItemSet::itembook_size() const {
  return itembook_.size();
}
inline void PBItemSet::clear_itembook() {
  itembook_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemBook >&
PBItemSet::itembook() const {
  return itembook_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemBook >*
PBItemSet::mutable_itembook() {
  return &itembook_;
}
inline const ::PBItemBook& PBItemSet::itembook(int index) const {
  return itembook_.Get(index);
}
inline ::PBItemBook* PBItemSet::mutable_itembook(int index) {
  return itembook_.Mutable(index);
}
inline ::PBItemBook* PBItemSet::add_itembook() {
  return itembook_.Add();
}

// repeated .PBItemCard ItemCard = 5;
inline int PBItemSet::itemcard_size() const {
  return itemcard_.size();
}
inline void PBItemSet::clear_itemcard() {
  itemcard_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemCard >&
PBItemSet::itemcard() const {
  return itemcard_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemCard >*
PBItemSet::mutable_itemcard() {
  return &itemcard_;
}
inline const ::PBItemCard& PBItemSet::itemcard(int index) const {
  return itemcard_.Get(index);
}
inline ::PBItemCard* PBItemSet::mutable_itemcard(int index) {
  return itemcard_.Mutable(index);
}
inline ::PBItemCard* PBItemSet::add_itemcard() {
  return itemcard_.Add();
}

// repeated .PBItemExp ItemExp = 6;
inline int PBItemSet::itemexp_size() const {
  return itemexp_.size();
}
inline void PBItemSet::clear_itemexp() {
  itemexp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemExp >&
PBItemSet::itemexp() const {
  return itemexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemExp >*
PBItemSet::mutable_itemexp() {
  return &itemexp_;
}
inline const ::PBItemExp& PBItemSet::itemexp(int index) const {
  return itemexp_.Get(index);
}
inline ::PBItemExp* PBItemSet::mutable_itemexp(int index) {
  return itemexp_.Mutable(index);
}
inline ::PBItemExp* PBItemSet::add_itemexp() {
  return itemexp_.Add();
}

// repeated .PBItemHorse Horse = 7;
inline int PBItemSet::horse_size() const {
  return horse_.size();
}
inline void PBItemSet::clear_horse() {
  horse_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemHorse >&
PBItemSet::horse() const {
  return horse_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemHorse >*
PBItemSet::mutable_horse() {
  return &horse_;
}
inline const ::PBItemHorse& PBItemSet::horse(int index) const {
  return horse_.Get(index);
}
inline ::PBItemHorse* PBItemSet::mutable_horse(int index) {
  return horse_.Mutable(index);
}
inline ::PBItemHorse* PBItemSet::add_horse() {
  return horse_.Add();
}

// repeated .PBItemJewel Jewel = 8;
inline int PBItemSet::jewel_size() const {
  return jewel_.size();
}
inline void PBItemSet::clear_jewel() {
  jewel_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemJewel >&
PBItemSet::jewel() const {
  return jewel_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemJewel >*
PBItemSet::mutable_jewel() {
  return &jewel_;
}
inline const ::PBItemJewel& PBItemSet::jewel(int index) const {
  return jewel_.Get(index);
}
inline ::PBItemJewel* PBItemSet::mutable_jewel(int index) {
  return jewel_.Mutable(index);
}
inline ::PBItemJewel* PBItemSet::add_jewel() {
  return jewel_.Add();
}

// repeated .PBItemPetEgg PetEgg = 9;
inline int PBItemSet::petegg_size() const {
  return petegg_.size();
}
inline void PBItemSet::clear_petegg() {
  petegg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemPetEgg >&
PBItemSet::petegg() const {
  return petegg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemPetEgg >*
PBItemSet::mutable_petegg() {
  return &petegg_;
}
inline const ::PBItemPetEgg& PBItemSet::petegg(int index) const {
  return petegg_.Get(index);
}
inline ::PBItemPetEgg* PBItemSet::mutable_petegg(int index) {
  return petegg_.Mutable(index);
}
inline ::PBItemPetEgg* PBItemSet::add_petegg() {
  return petegg_.Add();
}

// repeated .PBItemPetFood PetFood = 10;
inline int PBItemSet::petfood_size() const {
  return petfood_.size();
}
inline void PBItemSet::clear_petfood() {
  petfood_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemPetFood >&
PBItemSet::petfood() const {
  return petfood_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemPetFood >*
PBItemSet::mutable_petfood() {
  return &petfood_;
}
inline const ::PBItemPetFood& PBItemSet::petfood(int index) const {
  return petfood_.Get(index);
}
inline ::PBItemPetFood* PBItemSet::mutable_petfood(int index) {
  return petfood_.Mutable(index);
}
inline ::PBItemPetFood* PBItemSet::add_petfood() {
  return petfood_.Add();
}

// repeated .PBItemPhysic Physic = 11;
inline int PBItemSet::physic_size() const {
  return physic_.size();
}
inline void PBItemSet::clear_physic() {
  physic_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemPhysic >&
PBItemSet::physic() const {
  return physic_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemPhysic >*
PBItemSet::mutable_physic() {
  return &physic_;
}
inline const ::PBItemPhysic& PBItemSet::physic(int index) const {
  return physic_.Get(index);
}
inline ::PBItemPhysic* PBItemSet::mutable_physic(int index) {
  return physic_.Mutable(index);
}
inline ::PBItemPhysic* PBItemSet::add_physic() {
  return physic_.Add();
}

// repeated .PBItemQuestion Question = 12;
inline int PBItemSet::question_size() const {
  return question_.size();
}
inline void PBItemSet::clear_question() {
  question_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemQuestion >&
PBItemSet::question() const {
  return question_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemQuestion >*
PBItemSet::mutable_question() {
  return &question_;
}
inline const ::PBItemQuestion& PBItemSet::question(int index) const {
  return question_.Get(index);
}
inline ::PBItemQuestion* PBItemSet::mutable_question(int index) {
  return question_.Mutable(index);
}
inline ::PBItemQuestion* PBItemSet::add_question() {
  return question_.Add();
}

// repeated .PBItemRelife Relife = 13;
inline int PBItemSet::relife_size() const {
  return relife_.size();
}
inline void PBItemSet::clear_relife() {
  relife_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemRelife >&
PBItemSet::relife() const {
  return relife_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemRelife >*
PBItemSet::mutable_relife() {
  return &relife_;
}
inline const ::PBItemRelife& PBItemSet::relife(int index) const {
  return relife_.Get(index);
}
inline ::PBItemRelife* PBItemSet::mutable_relife(int index) {
  return relife_.Mutable(index);
}
inline ::PBItemRelife* PBItemSet::add_relife() {
  return relife_.Add();
}

// repeated .PBItemReturn Return = 14;
inline int PBItemSet::return__size() const {
  return return__.size();
}
inline void PBItemSet::clear_return_() {
  return__.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemReturn >&
PBItemSet::return_() const {
  return return__;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemReturn >*
PBItemSet::mutable_return_() {
  return &return__;
}
inline const ::PBItemReturn& PBItemSet::return_(int index) const {
  return return__.Get(index);
}
inline ::PBItemReturn* PBItemSet::mutable_return_(int index) {
  return return__.Mutable(index);
}
inline ::PBItemReturn* PBItemSet::add_return_() {
  return return__.Add();
}

// repeated .PBItemReturnPaper ReturnPaper = 15;
inline int PBItemSet::returnpaper_size() const {
  return returnpaper_.size();
}
inline void PBItemSet::clear_returnpaper() {
  returnpaper_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemReturnPaper >&
PBItemSet::returnpaper() const {
  return returnpaper_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemReturnPaper >*
PBItemSet::mutable_returnpaper() {
  return &returnpaper_;
}
inline const ::PBItemReturnPaper& PBItemSet::returnpaper(int index) const {
  return returnpaper_.Get(index);
}
inline ::PBItemReturnPaper* PBItemSet::mutable_returnpaper(int index) {
  return returnpaper_.Mutable(index);
}
inline ::PBItemReturnPaper* PBItemSet::add_returnpaper() {
  return returnpaper_.Add();
}

// repeated .PBItemRune Rune = 16;
inline int PBItemSet::rune_size() const {
  return rune_.size();
}
inline void PBItemSet::clear_rune() {
  rune_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemRune >&
PBItemSet::rune() const {
  return rune_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemRune >*
PBItemSet::mutable_rune() {
  return &rune_;
}
inline const ::PBItemRune& PBItemSet::rune(int index) const {
  return rune_.Get(index);
}
inline ::PBItemRune* PBItemSet::mutable_rune(int index) {
  return rune_.Mutable(index);
}
inline ::PBItemRune* PBItemSet::add_rune() {
  return rune_.Add();
}

// repeated .PBItemScroll Scroll = 17;
inline int PBItemSet::scroll_size() const {
  return scroll_.size();
}
inline void PBItemSet::clear_scroll() {
  scroll_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemScroll >&
PBItemSet::scroll() const {
  return scroll_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemScroll >*
PBItemSet::mutable_scroll() {
  return &scroll_;
}
inline const ::PBItemScroll& PBItemSet::scroll(int index) const {
  return scroll_.Get(index);
}
inline ::PBItemScroll* PBItemSet::mutable_scroll(int index) {
  return scroll_.Mutable(index);
}
inline ::PBItemScroll* PBItemSet::add_scroll() {
  return scroll_.Add();
}

// repeated .PBItemSequence Sequence = 18;
inline int PBItemSet::sequence_size() const {
  return sequence_.size();
}
inline void PBItemSet::clear_sequence() {
  sequence_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemSequence >&
PBItemSet::sequence() const {
  return sequence_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemSequence >*
PBItemSet::mutable_sequence() {
  return &sequence_;
}
inline const ::PBItemSequence& PBItemSet::sequence(int index) const {
  return sequence_.Get(index);
}
inline ::PBItemSequence* PBItemSet::mutable_sequence(int index) {
  return sequence_.Mutable(index);
}
inline ::PBItemSequence* PBItemSet::add_sequence() {
  return sequence_.Add();
}

// repeated .PBItemShout Shout = 19;
inline int PBItemSet::shout_size() const {
  return shout_.size();
}
inline void PBItemSet::clear_shout() {
  shout_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemShout >&
PBItemSet::shout() const {
  return shout_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemShout >*
PBItemSet::mutable_shout() {
  return &shout_;
}
inline const ::PBItemShout& PBItemSet::shout(int index) const {
  return shout_.Get(index);
}
inline ::PBItemShout* PBItemSet::mutable_shout(int index) {
  return shout_.Mutable(index);
}
inline ::PBItemShout* PBItemSet::add_shout() {
  return shout_.Add();
}

// repeated .PBItemSkill ItemSkill = 20;
inline int PBItemSet::itemskill_size() const {
  return itemskill_.size();
}
inline void PBItemSet::clear_itemskill() {
  itemskill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemSkill >&
PBItemSet::itemskill() const {
  return itemskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemSkill >*
PBItemSet::mutable_itemskill() {
  return &itemskill_;
}
inline const ::PBItemSkill& PBItemSet::itemskill(int index) const {
  return itemskill_.Get(index);
}
inline ::PBItemSkill* PBItemSet::mutable_itemskill(int index) {
  return itemskill_.Mutable(index);
}
inline ::PBItemSkill* PBItemSet::add_itemskill() {
  return itemskill_.Add();
}

// repeated .PBItemStove Stove = 21;
inline int PBItemSet::stove_size() const {
  return stove_.size();
}
inline void PBItemSet::clear_stove() {
  stove_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemStove >&
PBItemSet::stove() const {
  return stove_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemStove >*
PBItemSet::mutable_stove() {
  return &stove_;
}
inline const ::PBItemStove& PBItemSet::stove(int index) const {
  return stove_.Get(index);
}
inline ::PBItemStove* PBItemSet::mutable_stove(int index) {
  return stove_.Mutable(index);
}
inline ::PBItemStove* PBItemSet::add_stove() {
  return stove_.Add();
}

// repeated .PBItemStuff Stuff = 22;
inline int PBItemSet::stuff_size() const {
  return stuff_.size();
}
inline void PBItemSet::clear_stuff() {
  stuff_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemStuff >&
PBItemSet::stuff() const {
  return stuff_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemStuff >*
PBItemSet::mutable_stuff() {
  return &stuff_;
}
inline const ::PBItemStuff& PBItemSet::stuff(int index) const {
  return stuff_.Get(index);
}
inline ::PBItemStuff* PBItemSet::mutable_stuff(int index) {
  return stuff_.Mutable(index);
}
inline ::PBItemStuff* PBItemSet::add_stuff() {
  return stuff_.Add();
}

// repeated .PBItemTask ItemTask = 23;
inline int PBItemSet::itemtask_size() const {
  return itemtask_.size();
}
inline void PBItemSet::clear_itemtask() {
  itemtask_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemTask >&
PBItemSet::itemtask() const {
  return itemtask_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemTask >*
PBItemSet::mutable_itemtask() {
  return &itemtask_;
}
inline const ::PBItemTask& PBItemSet::itemtask(int index) const {
  return itemtask_.Get(index);
}
inline ::PBItemTask* PBItemSet::mutable_itemtask(int index) {
  return itemtask_.Mutable(index);
}
inline ::PBItemTask* PBItemSet::add_itemtask() {
  return itemtask_.Add();
}

// repeated .PBItemTeleport Teleport = 24;
inline int PBItemSet::teleport_size() const {
  return teleport_.size();
}
inline void PBItemSet::clear_teleport() {
  teleport_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemTeleport >&
PBItemSet::teleport() const {
  return teleport_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemTeleport >*
PBItemSet::mutable_teleport() {
  return &teleport_;
}
inline const ::PBItemTeleport& PBItemSet::teleport(int index) const {
  return teleport_.Get(index);
}
inline ::PBItemTeleport* PBItemSet::mutable_teleport(int index) {
  return teleport_.Mutable(index);
}
inline ::PBItemTeleport* PBItemSet::add_teleport() {
  return teleport_.Add();
}

// repeated .PBItemTeleSymbol TeleSymbol = 25;
inline int PBItemSet::telesymbol_size() const {
  return telesymbol_.size();
}
inline void PBItemSet::clear_telesymbol() {
  telesymbol_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemTeleSymbol >&
PBItemSet::telesymbol() const {
  return telesymbol_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemTeleSymbol >*
PBItemSet::mutable_telesymbol() {
  return &telesymbol_;
}
inline const ::PBItemTeleSymbol& PBItemSet::telesymbol(int index) const {
  return telesymbol_.Get(index);
}
inline ::PBItemTeleSymbol* PBItemSet::mutable_telesymbol(int index) {
  return telesymbol_.Mutable(index);
}
inline ::PBItemTeleSymbol* PBItemSet::add_telesymbol() {
  return telesymbol_.Add();
}

// repeated .PBItemUpgLeast UpgLeast = 26;
inline int PBItemSet::upgleast_size() const {
  return upgleast_.size();
}
inline void PBItemSet::clear_upgleast() {
  upgleast_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemUpgLeast >&
PBItemSet::upgleast() const {
  return upgleast_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemUpgLeast >*
PBItemSet::mutable_upgleast() {
  return &upgleast_;
}
inline const ::PBItemUpgLeast& PBItemSet::upgleast(int index) const {
  return upgleast_.Get(index);
}
inline ::PBItemUpgLeast* PBItemSet::mutable_upgleast(int index) {
  return upgleast_.Mutable(index);
}
inline ::PBItemUpgLeast* PBItemSet::add_upgleast() {
  return upgleast_.Add();
}

// repeated .PBItemUpgLuck UpgLuck = 27;
inline int PBItemSet::upgluck_size() const {
  return upgluck_.size();
}
inline void PBItemSet::clear_upgluck() {
  upgluck_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemUpgLuck >&
PBItemSet::upgluck() const {
  return upgluck_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemUpgLuck >*
PBItemSet::mutable_upgluck() {
  return &upgluck_;
}
inline const ::PBItemUpgLuck& PBItemSet::upgluck(int index) const {
  return upgluck_.Get(index);
}
inline ::PBItemUpgLuck* PBItemSet::mutable_upgluck(int index) {
  return upgluck_.Mutable(index);
}
inline ::PBItemUpgLuck* PBItemSet::add_upgluck() {
  return upgluck_.Add();
}

// repeated .PBItemYuanBug YuanBug = 28;
inline int PBItemSet::yuanbug_size() const {
  return yuanbug_.size();
}
inline void PBItemSet::clear_yuanbug() {
  yuanbug_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemYuanBug >&
PBItemSet::yuanbug() const {
  return yuanbug_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemYuanBug >*
PBItemSet::mutable_yuanbug() {
  return &yuanbug_;
}
inline const ::PBItemYuanBug& PBItemSet::yuanbug(int index) const {
  return yuanbug_.Get(index);
}
inline ::PBItemYuanBug* PBItemSet::mutable_yuanbug(int index) {
  return yuanbug_.Mutable(index);
}
inline ::PBItemYuanBug* PBItemSet::add_yuanbug() {
  return yuanbug_.Add();
}

// repeated .PBItemYuanEgg YuanEgg = 29;
inline int PBItemSet::yuanegg_size() const {
  return yuanegg_.size();
}
inline void PBItemSet::clear_yuanegg() {
  yuanegg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemYuanEgg >&
PBItemSet::yuanegg() const {
  return yuanegg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemYuanEgg >*
PBItemSet::mutable_yuanegg() {
  return &yuanegg_;
}
inline const ::PBItemYuanEgg& PBItemSet::yuanegg(int index) const {
  return yuanegg_.Get(index);
}
inline ::PBItemYuanEgg* PBItemSet::mutable_yuanegg(int index) {
  return yuanegg_.Mutable(index);
}
inline ::PBItemYuanEgg* PBItemSet::add_yuanegg() {
  return yuanegg_.Add();
}

// repeated .PBRedStone RedStone = 30;
inline int PBItemSet::redstone_size() const {
  return redstone_.size();
}
inline void PBItemSet::clear_redstone() {
  redstone_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRedStone >&
PBItemSet::redstone() const {
  return redstone_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRedStone >*
PBItemSet::mutable_redstone() {
  return &redstone_;
}
inline const ::PBRedStone& PBItemSet::redstone(int index) const {
  return redstone_.Get(index);
}
inline ::PBRedStone* PBItemSet::mutable_redstone(int index) {
  return redstone_.Mutable(index);
}
inline ::PBRedStone* PBItemSet::add_redstone() {
  return redstone_.Add();
}

// repeated .PBItemAutoShout AutoShout = 31;
inline int PBItemSet::autoshout_size() const {
  return autoshout_.size();
}
inline void PBItemSet::clear_autoshout() {
  autoshout_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemAutoShout >&
PBItemSet::autoshout() const {
  return autoshout_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemAutoShout >*
PBItemSet::mutable_autoshout() {
  return &autoshout_;
}
inline const ::PBItemAutoShout& PBItemSet::autoshout(int index) const {
  return autoshout_.Get(index);
}
inline ::PBItemAutoShout* PBItemSet::mutable_autoshout(int index) {
  return autoshout_.Mutable(index);
}
inline ::PBItemAutoShout* PBItemSet::add_autoshout() {
  return autoshout_.Add();
}

// repeated .PBItemKitBag KitBag = 32;
inline int PBItemSet::kitbag_size() const {
  return kitbag_.size();
}
inline void PBItemSet::clear_kitbag() {
  kitbag_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemKitBag >&
PBItemSet::kitbag() const {
  return kitbag_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemKitBag >*
PBItemSet::mutable_kitbag() {
  return &kitbag_;
}
inline const ::PBItemKitBag& PBItemSet::kitbag(int index) const {
  return kitbag_.Get(index);
}
inline ::PBItemKitBag* PBItemSet::mutable_kitbag(int index) {
  return kitbag_.Mutable(index);
}
inline ::PBItemKitBag* PBItemSet::add_kitbag() {
  return kitbag_.Add();
}

// repeated .PBItemUpg ItemUpg = 33;
inline int PBItemSet::itemupg_size() const {
  return itemupg_.size();
}
inline void PBItemSet::clear_itemupg() {
  itemupg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemUpg >&
PBItemSet::itemupg() const {
  return itemupg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemUpg >*
PBItemSet::mutable_itemupg() {
  return &itemupg_;
}
inline const ::PBItemUpg& PBItemSet::itemupg(int index) const {
  return itemupg_.Get(index);
}
inline ::PBItemUpg* PBItemSet::mutable_itemupg(int index) {
  return itemupg_.Mutable(index);
}
inline ::PBItemUpg* PBItemSet::add_itemupg() {
  return itemupg_.Add();
}

// repeated .PBItemRemove ItemRemove = 34;
inline int PBItemSet::itemremove_size() const {
  return itemremove_.size();
}
inline void PBItemSet::clear_itemremove() {
  itemremove_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemRemove >&
PBItemSet::itemremove() const {
  return itemremove_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemRemove >*
PBItemSet::mutable_itemremove() {
  return &itemremove_;
}
inline const ::PBItemRemove& PBItemSet::itemremove(int index) const {
  return itemremove_.Get(index);
}
inline ::PBItemRemove* PBItemSet::mutable_itemremove(int index) {
  return itemremove_.Mutable(index);
}
inline ::PBItemRemove* PBItemSet::add_itemremove() {
  return itemremove_.Add();
}

// repeated .PBItemChange ItemChange = 35;
inline int PBItemSet::itemchange_size() const {
  return itemchange_.size();
}
inline void PBItemSet::clear_itemchange() {
  itemchange_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemChange >&
PBItemSet::itemchange() const {
  return itemchange_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemChange >*
PBItemSet::mutable_itemchange() {
  return &itemchange_;
}
inline const ::PBItemChange& PBItemSet::itemchange(int index) const {
  return itemchange_.Get(index);
}
inline ::PBItemChange* PBItemSet::mutable_itemchange(int index) {
  return itemchange_.Mutable(index);
}
inline ::PBItemChange* PBItemSet::add_itemchange() {
  return itemchange_.Add();
}

// repeated .PBItemAdapter ItemAdapter = 36;
inline int PBItemSet::itemadapter_size() const {
  return itemadapter_.size();
}
inline void PBItemSet::clear_itemadapter() {
  itemadapter_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemAdapter >&
PBItemSet::itemadapter() const {
  return itemadapter_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemAdapter >*
PBItemSet::mutable_itemadapter() {
  return &itemadapter_;
}
inline const ::PBItemAdapter& PBItemSet::itemadapter(int index) const {
  return itemadapter_.Get(index);
}
inline ::PBItemAdapter* PBItemSet::mutable_itemadapter(int index) {
  return itemadapter_.Mutable(index);
}
inline ::PBItemAdapter* PBItemSet::add_itemadapter() {
  return itemadapter_.Add();
}

// repeated .PBItemMineMap MineMap = 37;
inline int PBItemSet::minemap_size() const {
  return minemap_.size();
}
inline void PBItemSet::clear_minemap() {
  minemap_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemMineMap >&
PBItemSet::minemap() const {
  return minemap_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemMineMap >*
PBItemSet::mutable_minemap() {
  return &minemap_;
}
inline const ::PBItemMineMap& PBItemSet::minemap(int index) const {
  return minemap_.Get(index);
}
inline ::PBItemMineMap* PBItemSet::mutable_minemap(int index) {
  return minemap_.Mutable(index);
}
inline ::PBItemMineMap* PBItemSet::add_minemap() {
  return minemap_.Add();
}

// repeated .PBItemCall ItemCall = 38;
inline int PBItemSet::itemcall_size() const {
  return itemcall_.size();
}
inline void PBItemSet::clear_itemcall() {
  itemcall_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemCall >&
PBItemSet::itemcall() const {
  return itemcall_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemCall >*
PBItemSet::mutable_itemcall() {
  return &itemcall_;
}
inline const ::PBItemCall& PBItemSet::itemcall(int index) const {
  return itemcall_.Get(index);
}
inline ::PBItemCall* PBItemSet::mutable_itemcall(int index) {
  return itemcall_.Mutable(index);
}
inline ::PBItemCall* PBItemSet::add_itemcall() {
  return itemcall_.Add();
}

// repeated .PBItemGiftBag GiftBag = 39;
inline int PBItemSet::giftbag_size() const {
  return giftbag_.size();
}
inline void PBItemSet::clear_giftbag() {
  giftbag_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemGiftBag >&
PBItemSet::giftbag() const {
  return giftbag_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemGiftBag >*
PBItemSet::mutable_giftbag() {
  return &giftbag_;
}
inline const ::PBItemGiftBag& PBItemSet::giftbag(int index) const {
  return giftbag_.Get(index);
}
inline ::PBItemGiftBag* PBItemSet::mutable_giftbag(int index) {
  return giftbag_.Mutable(index);
}
inline ::PBItemGiftBag* PBItemSet::add_giftbag() {
  return giftbag_.Add();
}

// repeated .PBItemMagicWeapon MagicWeapons = 40;
inline int PBItemSet::magicweapons_size() const {
  return magicweapons_.size();
}
inline void PBItemSet::clear_magicweapons() {
  magicweapons_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemMagicWeapon >&
PBItemSet::magicweapons() const {
  return magicweapons_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemMagicWeapon >*
PBItemSet::mutable_magicweapons() {
  return &magicweapons_;
}
inline const ::PBItemMagicWeapon& PBItemSet::magicweapons(int index) const {
  return magicweapons_.Get(index);
}
inline ::PBItemMagicWeapon* PBItemSet::mutable_magicweapons(int index) {
  return magicweapons_.Mutable(index);
}
inline ::PBItemMagicWeapon* PBItemSet::add_magicweapons() {
  return magicweapons_.Add();
}

// repeated .PBItemToken Token = 41;
inline int PBItemSet::token_size() const {
  return token_.size();
}
inline void PBItemSet::clear_token() {
  token_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemToken >&
PBItemSet::token() const {
  return token_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemToken >*
PBItemSet::mutable_token() {
  return &token_;
}
inline const ::PBItemToken& PBItemSet::token(int index) const {
  return token_.Get(index);
}
inline ::PBItemToken* PBItemSet::mutable_token(int index) {
  return token_.Mutable(index);
}
inline ::PBItemToken* PBItemSet::add_token() {
  return token_.Add();
}

// repeated .PBFuncItem FuncItem = 42;
inline int PBItemSet::funcitem_size() const {
  return funcitem_.size();
}
inline void PBItemSet::clear_funcitem() {
  funcitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFuncItem >&
PBItemSet::funcitem() const {
  return funcitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFuncItem >*
PBItemSet::mutable_funcitem() {
  return &funcitem_;
}
inline const ::PBFuncItem& PBItemSet::funcitem(int index) const {
  return funcitem_.Get(index);
}
inline ::PBFuncItem* PBItemSet::mutable_funcitem(int index) {
  return funcitem_.Mutable(index);
}
inline ::PBFuncItem* PBItemSet::add_funcitem() {
  return funcitem_.Add();
}

// repeated .PBItemSkillBook SkillBook = 43;
inline int PBItemSet::skillbook_size() const {
  return skillbook_.size();
}
inline void PBItemSet::clear_skillbook() {
  skillbook_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemSkillBook >&
PBItemSet::skillbook() const {
  return skillbook_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemSkillBook >*
PBItemSet::mutable_skillbook() {
  return &skillbook_;
}
inline const ::PBItemSkillBook& PBItemSet::skillbook(int index) const {
  return skillbook_.Get(index);
}
inline ::PBItemSkillBook* PBItemSet::mutable_skillbook(int index) {
  return skillbook_.Mutable(index);
}
inline ::PBItemSkillBook* PBItemSet::add_skillbook() {
  return skillbook_.Add();
}

// repeated .PBItemRedPaper RedPaper = 44;
inline int PBItemSet::redpaper_size() const {
  return redpaper_.size();
}
inline void PBItemSet::clear_redpaper() {
  redpaper_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemRedPaper >&
PBItemSet::redpaper() const {
  return redpaper_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemRedPaper >*
PBItemSet::mutable_redpaper() {
  return &redpaper_;
}
inline const ::PBItemRedPaper& PBItemSet::redpaper(int index) const {
  return redpaper_.Get(index);
}
inline ::PBItemRedPaper* PBItemSet::mutable_redpaper(int index) {
  return redpaper_.Mutable(index);
}
inline ::PBItemRedPaper* PBItemSet::add_redpaper() {
  return redpaper_.Add();
}

// repeated .PBItemMagicStone MagicStone = 45;
inline int PBItemSet::magicstone_size() const {
  return magicstone_.size();
}
inline void PBItemSet::clear_magicstone() {
  magicstone_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemMagicStone >&
PBItemSet::magicstone() const {
  return magicstone_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemMagicStone >*
PBItemSet::mutable_magicstone() {
  return &magicstone_;
}
inline const ::PBItemMagicStone& PBItemSet::magicstone(int index) const {
  return magicstone_.Get(index);
}
inline ::PBItemMagicStone* PBItemSet::mutable_magicstone(int index) {
  return magicstone_.Mutable(index);
}
inline ::PBItemMagicStone* PBItemSet::add_magicstone() {
  return magicstone_.Add();
}

// repeated .PBItemVip VipItem = 46;
inline int PBItemSet::vipitem_size() const {
  return vipitem_.size();
}
inline void PBItemSet::clear_vipitem() {
  vipitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemVip >&
PBItemSet::vipitem() const {
  return vipitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemVip >*
PBItemSet::mutable_vipitem() {
  return &vipitem_;
}
inline const ::PBItemVip& PBItemSet::vipitem(int index) const {
  return vipitem_.Get(index);
}
inline ::PBItemVip* PBItemSet::mutable_vipitem(int index) {
  return vipitem_.Mutable(index);
}
inline ::PBItemVip* PBItemSet::add_vipitem() {
  return vipitem_.Add();
}

// repeated .PBItemClean CleanItem = 47;
inline int PBItemSet::cleanitem_size() const {
  return cleanitem_.size();
}
inline void PBItemSet::clear_cleanitem() {
  cleanitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemClean >&
PBItemSet::cleanitem() const {
  return cleanitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemClean >*
PBItemSet::mutable_cleanitem() {
  return &cleanitem_;
}
inline const ::PBItemClean& PBItemSet::cleanitem(int index) const {
  return cleanitem_.Get(index);
}
inline ::PBItemClean* PBItemSet::mutable_cleanitem(int index) {
  return cleanitem_.Mutable(index);
}
inline ::PBItemClean* PBItemSet::add_cleanitem() {
  return cleanitem_.Add();
}

// repeated .PBAwardInfo AwardInfo = 48;
inline int PBItemSet::awardinfo_size() const {
  return awardinfo_.size();
}
inline void PBItemSet::clear_awardinfo() {
  awardinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAwardInfo >&
PBItemSet::awardinfo() const {
  return awardinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAwardInfo >*
PBItemSet::mutable_awardinfo() {
  return &awardinfo_;
}
inline const ::PBAwardInfo& PBItemSet::awardinfo(int index) const {
  return awardinfo_.Get(index);
}
inline ::PBAwardInfo* PBItemSet::mutable_awardinfo(int index) {
  return awardinfo_.Mutable(index);
}
inline ::PBAwardInfo* PBItemSet::add_awardinfo() {
  return awardinfo_.Add();
}

// repeated .PBLeagueBag LeagueBag = 49;
inline int PBItemSet::leaguebag_size() const {
  return leaguebag_.size();
}
inline void PBItemSet::clear_leaguebag() {
  leaguebag_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLeagueBag >&
PBItemSet::leaguebag() const {
  return leaguebag_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLeagueBag >*
PBItemSet::mutable_leaguebag() {
  return &leaguebag_;
}
inline const ::PBLeagueBag& PBItemSet::leaguebag(int index) const {
  return leaguebag_.Get(index);
}
inline ::PBLeagueBag* PBItemSet::mutable_leaguebag(int index) {
  return leaguebag_.Mutable(index);
}
inline ::PBLeagueBag* PBItemSet::add_leaguebag() {
  return leaguebag_.Add();
}

// repeated .PBInvitation Invitation = 50;
inline int PBItemSet::invitation_size() const {
  return invitation_.size();
}
inline void PBItemSet::clear_invitation() {
  invitation_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBInvitation >&
PBItemSet::invitation() const {
  return invitation_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBInvitation >*
PBItemSet::mutable_invitation() {
  return &invitation_;
}
inline const ::PBInvitation& PBItemSet::invitation(int index) const {
  return invitation_.Get(index);
}
inline ::PBInvitation* PBItemSet::mutable_invitation(int index) {
  return invitation_.Mutable(index);
}
inline ::PBInvitation* PBItemSet::add_invitation() {
  return invitation_.Add();
}

// repeated .PBSysInvitation SysInvitation = 51;
inline int PBItemSet::sysinvitation_size() const {
  return sysinvitation_.size();
}
inline void PBItemSet::clear_sysinvitation() {
  sysinvitation_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSysInvitation >&
PBItemSet::sysinvitation() const {
  return sysinvitation_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSysInvitation >*
PBItemSet::mutable_sysinvitation() {
  return &sysinvitation_;
}
inline const ::PBSysInvitation& PBItemSet::sysinvitation(int index) const {
  return sysinvitation_.Get(index);
}
inline ::PBSysInvitation* PBItemSet::mutable_sysinvitation(int index) {
  return sysinvitation_.Mutable(index);
}
inline ::PBSysInvitation* PBItemSet::add_sysinvitation() {
  return sysinvitation_.Add();
}

// repeated .PBItemRefresh ItemRefresh = 52;
inline int PBItemSet::itemrefresh_size() const {
  return itemrefresh_.size();
}
inline void PBItemSet::clear_itemrefresh() {
  itemrefresh_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemRefresh >&
PBItemSet::itemrefresh() const {
  return itemrefresh_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemRefresh >*
PBItemSet::mutable_itemrefresh() {
  return &itemrefresh_;
}
inline const ::PBItemRefresh& PBItemSet::itemrefresh(int index) const {
  return itemrefresh_.Get(index);
}
inline ::PBItemRefresh* PBItemSet::mutable_itemrefresh(int index) {
  return itemrefresh_.Mutable(index);
}
inline ::PBItemRefresh* PBItemSet::add_itemrefresh() {
  return itemrefresh_.Add();
}

// repeated .PBItemSummon ItemSummon = 53;
inline int PBItemSet::itemsummon_size() const {
  return itemsummon_.size();
}
inline void PBItemSet::clear_itemsummon() {
  itemsummon_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemSummon >&
PBItemSet::itemsummon() const {
  return itemsummon_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemSummon >*
PBItemSet::mutable_itemsummon() {
  return &itemsummon_;
}
inline const ::PBItemSummon& PBItemSet::itemsummon(int index) const {
  return itemsummon_.Get(index);
}
inline ::PBItemSummon* PBItemSet::mutable_itemsummon(int index) {
  return itemsummon_.Mutable(index);
}
inline ::PBItemSummon* PBItemSet::add_itemsummon() {
  return itemsummon_.Add();
}

// repeated .PBItemDirect ItemDirect = 54;
inline int PBItemSet::itemdirect_size() const {
  return itemdirect_.size();
}
inline void PBItemSet::clear_itemdirect() {
  itemdirect_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemDirect >&
PBItemSet::itemdirect() const {
  return itemdirect_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemDirect >*
PBItemSet::mutable_itemdirect() {
  return &itemdirect_;
}
inline const ::PBItemDirect& PBItemSet::itemdirect(int index) const {
  return itemdirect_.Get(index);
}
inline ::PBItemDirect* PBItemSet::mutable_itemdirect(int index) {
  return itemdirect_.Mutable(index);
}
inline ::PBItemDirect* PBItemSet::add_itemdirect() {
  return itemdirect_.Add();
}

// repeated .PBItemGetStar ItemGetStar = 55;
inline int PBItemSet::itemgetstar_size() const {
  return itemgetstar_.size();
}
inline void PBItemSet::clear_itemgetstar() {
  itemgetstar_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemGetStar >&
PBItemSet::itemgetstar() const {
  return itemgetstar_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemGetStar >*
PBItemSet::mutable_itemgetstar() {
  return &itemgetstar_;
}
inline const ::PBItemGetStar& PBItemSet::itemgetstar(int index) const {
  return itemgetstar_.Get(index);
}
inline ::PBItemGetStar* PBItemSet::mutable_itemgetstar(int index) {
  return itemgetstar_.Mutable(index);
}
inline ::PBItemGetStar* PBItemSet::add_itemgetstar() {
  return itemgetstar_.Add();
}

// repeated .PBItemAutoCollect ItemAutoCollect = 56;
inline int PBItemSet::itemautocollect_size() const {
  return itemautocollect_.size();
}
inline void PBItemSet::clear_itemautocollect() {
  itemautocollect_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemAutoCollect >&
PBItemSet::itemautocollect() const {
  return itemautocollect_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemAutoCollect >*
PBItemSet::mutable_itemautocollect() {
  return &itemautocollect_;
}
inline const ::PBItemAutoCollect& PBItemSet::itemautocollect(int index) const {
  return itemautocollect_.Get(index);
}
inline ::PBItemAutoCollect* PBItemSet::mutable_itemautocollect(int index) {
  return itemautocollect_.Mutable(index);
}
inline ::PBItemAutoCollect* PBItemSet::add_itemautocollect() {
  return itemautocollect_.Add();
}

// repeated .PBItemBlackPills ItemBlackPills = 57;
inline int PBItemSet::itemblackpills_size() const {
  return itemblackpills_.size();
}
inline void PBItemSet::clear_itemblackpills() {
  itemblackpills_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemBlackPills >&
PBItemSet::itemblackpills() const {
  return itemblackpills_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemBlackPills >*
PBItemSet::mutable_itemblackpills() {
  return &itemblackpills_;
}
inline const ::PBItemBlackPills& PBItemSet::itemblackpills(int index) const {
  return itemblackpills_.Get(index);
}
inline ::PBItemBlackPills* PBItemSet::mutable_itemblackpills(int index) {
  return itemblackpills_.Mutable(index);
}
inline ::PBItemBlackPills* PBItemSet::add_itemblackpills() {
  return itemblackpills_.Add();
}

// repeated .PBItemExpContainer ExpContainer = 58;
inline int PBItemSet::expcontainer_size() const {
  return expcontainer_.size();
}
inline void PBItemSet::clear_expcontainer() {
  expcontainer_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemExpContainer >&
PBItemSet::expcontainer() const {
  return expcontainer_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemExpContainer >*
PBItemSet::mutable_expcontainer() {
  return &expcontainer_;
}
inline const ::PBItemExpContainer& PBItemSet::expcontainer(int index) const {
  return expcontainer_.Get(index);
}
inline ::PBItemExpContainer* PBItemSet::mutable_expcontainer(int index) {
  return expcontainer_.Mutable(index);
}
inline ::PBItemExpContainer* PBItemSet::add_expcontainer() {
  return expcontainer_.Add();
}

// repeated .PBItemExpPills ExpPills = 59;
inline int PBItemSet::exppills_size() const {
  return exppills_.size();
}
inline void PBItemSet::clear_exppills() {
  exppills_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemExpPills >&
PBItemSet::exppills() const {
  return exppills_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemExpPills >*
PBItemSet::mutable_exppills() {
  return &exppills_;
}
inline const ::PBItemExpPills& PBItemSet::exppills(int index) const {
  return exppills_.Get(index);
}
inline ::PBItemExpPills* PBItemSet::mutable_exppills(int index) {
  return exppills_.Mutable(index);
}
inline ::PBItemExpPills* PBItemSet::add_exppills() {
  return exppills_.Add();
}

// repeated .PBSpiritItem SpiritItem = 60;
inline int PBItemSet::spirititem_size() const {
  return spirititem_.size();
}
inline void PBItemSet::clear_spirititem() {
  spirititem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSpiritItem >&
PBItemSet::spirititem() const {
  return spirititem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSpiritItem >*
PBItemSet::mutable_spirititem() {
  return &spirititem_;
}
inline const ::PBSpiritItem& PBItemSet::spirititem(int index) const {
  return spirititem_.Get(index);
}
inline ::PBSpiritItem* PBItemSet::mutable_spirititem(int index) {
  return spirititem_.Mutable(index);
}
inline ::PBSpiritItem* PBItemSet::add_spirititem() {
  return spirititem_.Add();
}

// repeated .PBItemExpTome ExpTome = 61;
inline int PBItemSet::exptome_size() const {
  return exptome_.size();
}
inline void PBItemSet::clear_exptome() {
  exptome_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemExpTome >&
PBItemSet::exptome() const {
  return exptome_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemExpTome >*
PBItemSet::mutable_exptome() {
  return &exptome_;
}
inline const ::PBItemExpTome& PBItemSet::exptome(int index) const {
  return exptome_.Get(index);
}
inline ::PBItemExpTome* PBItemSet::mutable_exptome(int index) {
  return exptome_.Mutable(index);
}
inline ::PBItemExpTome* PBItemSet::add_exptome() {
  return exptome_.Add();
}

// -------------------------------------------------------------------

// PBConfigTable

// repeated .PBBeginner Beginner = 1;
inline int PBConfigTable::beginner_size() const {
  return beginner_.size();
}
inline void PBConfigTable::clear_beginner() {
  beginner_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBeginner >&
PBConfigTable::beginner() const {
  return beginner_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBeginner >*
PBConfigTable::mutable_beginner() {
  return &beginner_;
}
inline const ::PBBeginner& PBConfigTable::beginner(int index) const {
  return beginner_.Get(index);
}
inline ::PBBeginner* PBConfigTable::mutable_beginner(int index) {
  return beginner_.Mutable(index);
}
inline ::PBBeginner* PBConfigTable::add_beginner() {
  return beginner_.Add();
}

// repeated .PBData Data = 2;
inline int PBConfigTable::data_size() const {
  return data_.size();
}
inline void PBConfigTable::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBData >&
PBConfigTable::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBData >*
PBConfigTable::mutable_data() {
  return &data_;
}
inline const ::PBData& PBConfigTable::data(int index) const {
  return data_.Get(index);
}
inline ::PBData* PBConfigTable::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::PBData* PBConfigTable::add_data() {
  return data_.Add();
}

// repeated .PBDiploidTable Diploid = 3;
inline int PBConfigTable::diploid_size() const {
  return diploid_.size();
}
inline void PBConfigTable::clear_diploid() {
  diploid_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDiploidTable >&
PBConfigTable::diploid() const {
  return diploid_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDiploidTable >*
PBConfigTable::mutable_diploid() {
  return &diploid_;
}
inline const ::PBDiploidTable& PBConfigTable::diploid(int index) const {
  return diploid_.Get(index);
}
inline ::PBDiploidTable* PBConfigTable::mutable_diploid(int index) {
  return diploid_.Mutable(index);
}
inline ::PBDiploidTable* PBConfigTable::add_diploid() {
  return diploid_.Add();
}

// repeated .PBDropLevel DropLevel = 4;
inline int PBConfigTable::droplevel_size() const {
  return droplevel_.size();
}
inline void PBConfigTable::clear_droplevel() {
  droplevel_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDropLevel >&
PBConfigTable::droplevel() const {
  return droplevel_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDropLevel >*
PBConfigTable::mutable_droplevel() {
  return &droplevel_;
}
inline const ::PBDropLevel& PBConfigTable::droplevel(int index) const {
  return droplevel_.Get(index);
}
inline ::PBDropLevel* PBConfigTable::mutable_droplevel(int index) {
  return droplevel_.Mutable(index);
}
inline ::PBDropLevel* PBConfigTable::add_droplevel() {
  return droplevel_.Add();
}

// repeated .PBDropTable DropTable = 5;
inline int PBConfigTable::droptable_size() const {
  return droptable_.size();
}
inline void PBConfigTable::clear_droptable() {
  droptable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDropTable >&
PBConfigTable::droptable() const {
  return droptable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDropTable >*
PBConfigTable::mutable_droptable() {
  return &droptable_;
}
inline const ::PBDropTable& PBConfigTable::droptable(int index) const {
  return droptable_.Get(index);
}
inline ::PBDropTable* PBConfigTable::mutable_droptable(int index) {
  return droptable_.Mutable(index);
}
inline ::PBDropTable* PBConfigTable::add_droptable() {
  return droptable_.Add();
}

// repeated .PBRedStoneExpTable RedStoneTable = 6;
inline int PBConfigTable::redstonetable_size() const {
  return redstonetable_.size();
}
inline void PBConfigTable::clear_redstonetable() {
  redstonetable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRedStoneExpTable >&
PBConfigTable::redstonetable() const {
  return redstonetable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRedStoneExpTable >*
PBConfigTable::mutable_redstonetable() {
  return &redstonetable_;
}
inline const ::PBRedStoneExpTable& PBConfigTable::redstonetable(int index) const {
  return redstonetable_.Get(index);
}
inline ::PBRedStoneExpTable* PBConfigTable::mutable_redstonetable(int index) {
  return redstonetable_.Mutable(index);
}
inline ::PBRedStoneExpTable* PBConfigTable::add_redstonetable() {
  return redstonetable_.Add();
}

// repeated .PBReliveTable ReliveTable = 7;
inline int PBConfigTable::relivetable_size() const {
  return relivetable_.size();
}
inline void PBConfigTable::clear_relivetable() {
  relivetable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBReliveTable >&
PBConfigTable::relivetable() const {
  return relivetable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBReliveTable >*
PBConfigTable::mutable_relivetable() {
  return &relivetable_;
}
inline const ::PBReliveTable& PBConfigTable::relivetable(int index) const {
  return relivetable_.Get(index);
}
inline ::PBReliveTable* PBConfigTable::mutable_relivetable(int index) {
  return relivetable_.Mutable(index);
}
inline ::PBReliveTable* PBConfigTable::add_relivetable() {
  return relivetable_.Add();
}

// repeated .PBSellTable SellTable = 8;
inline int PBConfigTable::selltable_size() const {
  return selltable_.size();
}
inline void PBConfigTable::clear_selltable() {
  selltable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSellTable >&
PBConfigTable::selltable() const {
  return selltable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSellTable >*
PBConfigTable::mutable_selltable() {
  return &selltable_;
}
inline const ::PBSellTable& PBConfigTable::selltable(int index) const {
  return selltable_.Get(index);
}
inline ::PBSellTable* PBConfigTable::mutable_selltable(int index) {
  return selltable_.Mutable(index);
}
inline ::PBSellTable* PBConfigTable::add_selltable() {
  return selltable_.Add();
}

// repeated .PBTeleTable TeleTable = 9;
inline int PBConfigTable::teletable_size() const {
  return teletable_.size();
}
inline void PBConfigTable::clear_teletable() {
  teletable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeleTable >&
PBConfigTable::teletable() const {
  return teletable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeleTable >*
PBConfigTable::mutable_teletable() {
  return &teletable_;
}
inline const ::PBTeleTable& PBConfigTable::teletable(int index) const {
  return teletable_.Get(index);
}
inline ::PBTeleTable* PBConfigTable::mutable_teletable(int index) {
  return teletable_.Mutable(index);
}
inline ::PBTeleTable* PBConfigTable::add_teletable() {
  return teletable_.Add();
}

// repeated .PBAddPKTable AddPkTable = 10;
inline int PBConfigTable::addpktable_size() const {
  return addpktable_.size();
}
inline void PBConfigTable::clear_addpktable() {
  addpktable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAddPKTable >&
PBConfigTable::addpktable() const {
  return addpktable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAddPKTable >*
PBConfigTable::mutable_addpktable() {
  return &addpktable_;
}
inline const ::PBAddPKTable& PBConfigTable::addpktable(int index) const {
  return addpktable_.Get(index);
}
inline ::PBAddPKTable* PBConfigTable::mutable_addpktable(int index) {
  return addpktable_.Mutable(index);
}
inline ::PBAddPKTable* PBConfigTable::add_addpktable() {
  return addpktable_.Add();
}

// repeated .PBOfficialTable OfficialTable = 11;
inline int PBConfigTable::officialtable_size() const {
  return officialtable_.size();
}
inline void PBConfigTable::clear_officialtable() {
  officialtable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBOfficialTable >&
PBConfigTable::officialtable() const {
  return officialtable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBOfficialTable >*
PBConfigTable::mutable_officialtable() {
  return &officialtable_;
}
inline const ::PBOfficialTable& PBConfigTable::officialtable(int index) const {
  return officialtable_.Get(index);
}
inline ::PBOfficialTable* PBConfigTable::mutable_officialtable(int index) {
  return officialtable_.Mutable(index);
}
inline ::PBOfficialTable* PBConfigTable::add_officialtable() {
  return officialtable_.Add();
}

// repeated .PBOgreTran OgreTran = 12;
inline int PBConfigTable::ogretran_size() const {
  return ogretran_.size();
}
inline void PBConfigTable::clear_ogretran() {
  ogretran_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBOgreTran >&
PBConfigTable::ogretran() const {
  return ogretran_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBOgreTran >*
PBConfigTable::mutable_ogretran() {
  return &ogretran_;
}
inline const ::PBOgreTran& PBConfigTable::ogretran(int index) const {
  return ogretran_.Get(index);
}
inline ::PBOgreTran* PBConfigTable::mutable_ogretran(int index) {
  return ogretran_.Mutable(index);
}
inline ::PBOgreTran* PBConfigTable::add_ogretran() {
  return ogretran_.Add();
}

// repeated .PBTplMagicWeaponProIncTable MagicWeaponProTable = 13;
inline int PBConfigTable::magicweaponprotable_size() const {
  return magicweaponprotable_.size();
}
inline void PBConfigTable::clear_magicweaponprotable() {
  magicweaponprotable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTplMagicWeaponProIncTable >&
PBConfigTable::magicweaponprotable() const {
  return magicweaponprotable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTplMagicWeaponProIncTable >*
PBConfigTable::mutable_magicweaponprotable() {
  return &magicweaponprotable_;
}
inline const ::PBTplMagicWeaponProIncTable& PBConfigTable::magicweaponprotable(int index) const {
  return magicweaponprotable_.Get(index);
}
inline ::PBTplMagicWeaponProIncTable* PBConfigTable::mutable_magicweaponprotable(int index) {
  return magicweaponprotable_.Mutable(index);
}
inline ::PBTplMagicWeaponProIncTable* PBConfigTable::add_magicweaponprotable() {
  return magicweaponprotable_.Add();
}

// repeated .PBBindChargeTable BindChargeTabel = 14;
inline int PBConfigTable::bindchargetabel_size() const {
  return bindchargetabel_.size();
}
inline void PBConfigTable::clear_bindchargetabel() {
  bindchargetabel_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBindChargeTable >&
PBConfigTable::bindchargetabel() const {
  return bindchargetabel_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBindChargeTable >*
PBConfigTable::mutable_bindchargetabel() {
  return &bindchargetabel_;
}
inline const ::PBBindChargeTable& PBConfigTable::bindchargetabel(int index) const {
  return bindchargetabel_.Get(index);
}
inline ::PBBindChargeTable* PBConfigTable::mutable_bindchargetabel(int index) {
  return bindchargetabel_.Mutable(index);
}
inline ::PBBindChargeTable* PBConfigTable::add_bindchargetabel() {
  return bindchargetabel_.Add();
}

// repeated .PBPKValueTable PKTable = 15;
inline int PBConfigTable::pktable_size() const {
  return pktable_.size();
}
inline void PBConfigTable::clear_pktable() {
  pktable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPKValueTable >&
PBConfigTable::pktable() const {
  return pktable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPKValueTable >*
PBConfigTable::mutable_pktable() {
  return &pktable_;
}
inline const ::PBPKValueTable& PBConfigTable::pktable(int index) const {
  return pktable_.Get(index);
}
inline ::PBPKValueTable* PBConfigTable::mutable_pktable(int index) {
  return pktable_.Mutable(index);
}
inline ::PBPKValueTable* PBConfigTable::add_pktable() {
  return pktable_.Add();
}

// repeated .PBMagicWeaponSkillBoxProTable MagicWeaponSkillBox = 16;
inline int PBConfigTable::magicweaponskillbox_size() const {
  return magicweaponskillbox_.size();
}
inline void PBConfigTable::clear_magicweaponskillbox() {
  magicweaponskillbox_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponSkillBoxProTable >&
PBConfigTable::magicweaponskillbox() const {
  return magicweaponskillbox_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponSkillBoxProTable >*
PBConfigTable::mutable_magicweaponskillbox() {
  return &magicweaponskillbox_;
}
inline const ::PBMagicWeaponSkillBoxProTable& PBConfigTable::magicweaponskillbox(int index) const {
  return magicweaponskillbox_.Get(index);
}
inline ::PBMagicWeaponSkillBoxProTable* PBConfigTable::mutable_magicweaponskillbox(int index) {
  return magicweaponskillbox_.Mutable(index);
}
inline ::PBMagicWeaponSkillBoxProTable* PBConfigTable::add_magicweaponskillbox() {
  return magicweaponskillbox_.Add();
}

// repeated .PBEquipExchangeTable EquipExchange = 17;
inline int PBConfigTable::equipexchange_size() const {
  return equipexchange_.size();
}
inline void PBConfigTable::clear_equipexchange() {
  equipexchange_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipExchangeTable >&
PBConfigTable::equipexchange() const {
  return equipexchange_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipExchangeTable >*
PBConfigTable::mutable_equipexchange() {
  return &equipexchange_;
}
inline const ::PBEquipExchangeTable& PBConfigTable::equipexchange(int index) const {
  return equipexchange_.Get(index);
}
inline ::PBEquipExchangeTable* PBConfigTable::mutable_equipexchange(int index) {
  return equipexchange_.Mutable(index);
}
inline ::PBEquipExchangeTable* PBConfigTable::add_equipexchange() {
  return equipexchange_.Add();
}

// repeated .PBMapTable MapTable = 18;
inline int PBConfigTable::maptable_size() const {
  return maptable_.size();
}
inline void PBConfigTable::clear_maptable() {
  maptable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMapTable >&
PBConfigTable::maptable() const {
  return maptable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMapTable >*
PBConfigTable::mutable_maptable() {
  return &maptable_;
}
inline const ::PBMapTable& PBConfigTable::maptable(int index) const {
  return maptable_.Get(index);
}
inline ::PBMapTable* PBConfigTable::mutable_maptable(int index) {
  return maptable_.Mutable(index);
}
inline ::PBMapTable* PBConfigTable::add_maptable() {
  return maptable_.Add();
}

// repeated .PBMultiAttackTable MultiAttackTable = 19;
inline int PBConfigTable::multiattacktable_size() const {
  return multiattacktable_.size();
}
inline void PBConfigTable::clear_multiattacktable() {
  multiattacktable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMultiAttackTable >&
PBConfigTable::multiattacktable() const {
  return multiattacktable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMultiAttackTable >*
PBConfigTable::mutable_multiattacktable() {
  return &multiattacktable_;
}
inline const ::PBMultiAttackTable& PBConfigTable::multiattacktable(int index) const {
  return multiattacktable_.Get(index);
}
inline ::PBMultiAttackTable* PBConfigTable::mutable_multiattacktable(int index) {
  return multiattacktable_.Mutable(index);
}
inline ::PBMultiAttackTable* PBConfigTable::add_multiattacktable() {
  return multiattacktable_.Add();
}

// repeated .PBMatrixTable MatrixTable = 20;
inline int PBConfigTable::matrixtable_size() const {
  return matrixtable_.size();
}
inline void PBConfigTable::clear_matrixtable() {
  matrixtable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMatrixTable >&
PBConfigTable::matrixtable() const {
  return matrixtable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMatrixTable >*
PBConfigTable::mutable_matrixtable() {
  return &matrixtable_;
}
inline const ::PBMatrixTable& PBConfigTable::matrixtable(int index) const {
  return matrixtable_.Get(index);
}
inline ::PBMatrixTable* PBConfigTable::mutable_matrixtable(int index) {
  return matrixtable_.Mutable(index);
}
inline ::PBMatrixTable* PBConfigTable::add_matrixtable() {
  return matrixtable_.Add();
}

// repeated .PBTemplateMarriageConfig MarriageConfig = 21;
inline int PBConfigTable::marriageconfig_size() const {
  return marriageconfig_.size();
}
inline void PBConfigTable::clear_marriageconfig() {
  marriageconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateMarriageConfig >&
PBConfigTable::marriageconfig() const {
  return marriageconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTemplateMarriageConfig >*
PBConfigTable::mutable_marriageconfig() {
  return &marriageconfig_;
}
inline const ::PBTemplateMarriageConfig& PBConfigTable::marriageconfig(int index) const {
  return marriageconfig_.Get(index);
}
inline ::PBTemplateMarriageConfig* PBConfigTable::mutable_marriageconfig(int index) {
  return marriageconfig_.Mutable(index);
}
inline ::PBTemplateMarriageConfig* PBConfigTable::add_marriageconfig() {
  return marriageconfig_.Add();
}

// repeated .PBProGressConfig ProgressConfig = 22;
inline int PBConfigTable::progressconfig_size() const {
  return progressconfig_.size();
}
inline void PBConfigTable::clear_progressconfig() {
  progressconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBProGressConfig >&
PBConfigTable::progressconfig() const {
  return progressconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBProGressConfig >*
PBConfigTable::mutable_progressconfig() {
  return &progressconfig_;
}
inline const ::PBProGressConfig& PBConfigTable::progressconfig(int index) const {
  return progressconfig_.Get(index);
}
inline ::PBProGressConfig* PBConfigTable::mutable_progressconfig(int index) {
  return progressconfig_.Mutable(index);
}
inline ::PBProGressConfig* PBConfigTable::add_progressconfig() {
  return progressconfig_.Add();
}

// repeated .PBCountTable CountTable = 23;
inline int PBConfigTable::counttable_size() const {
  return counttable_.size();
}
inline void PBConfigTable::clear_counttable() {
  counttable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCountTable >&
PBConfigTable::counttable() const {
  return counttable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCountTable >*
PBConfigTable::mutable_counttable() {
  return &counttable_;
}
inline const ::PBCountTable& PBConfigTable::counttable(int index) const {
  return counttable_.Get(index);
}
inline ::PBCountTable* PBConfigTable::mutable_counttable(int index) {
  return counttable_.Mutable(index);
}
inline ::PBCountTable* PBConfigTable::add_counttable() {
  return counttable_.Add();
}

// repeated .PBActivityConfig ActivityConfig = 24;
inline int PBConfigTable::activityconfig_size() const {
  return activityconfig_.size();
}
inline void PBConfigTable::clear_activityconfig() {
  activityconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBActivityConfig >&
PBConfigTable::activityconfig() const {
  return activityconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBActivityConfig >*
PBConfigTable::mutable_activityconfig() {
  return &activityconfig_;
}
inline const ::PBActivityConfig& PBConfigTable::activityconfig(int index) const {
  return activityconfig_.Get(index);
}
inline ::PBActivityConfig* PBConfigTable::mutable_activityconfig(int index) {
  return activityconfig_.Mutable(index);
}
inline ::PBActivityConfig* PBConfigTable::add_activityconfig() {
  return activityconfig_.Add();
}

// repeated .PBDirectTable DirectTable = 25;
inline int PBConfigTable::directtable_size() const {
  return directtable_.size();
}
inline void PBConfigTable::clear_directtable() {
  directtable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDirectTable >&
PBConfigTable::directtable() const {
  return directtable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDirectTable >*
PBConfigTable::mutable_directtable() {
  return &directtable_;
}
inline const ::PBDirectTable& PBConfigTable::directtable(int index) const {
  return directtable_.Get(index);
}
inline ::PBDirectTable* PBConfigTable::mutable_directtable(int index) {
  return directtable_.Mutable(index);
}
inline ::PBDirectTable* PBConfigTable::add_directtable() {
  return directtable_.Add();
}

// repeated .PBWorldBattleConfig BattleConfig = 26;
inline int PBConfigTable::battleconfig_size() const {
  return battleconfig_.size();
}
inline void PBConfigTable::clear_battleconfig() {
  battleconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWorldBattleConfig >&
PBConfigTable::battleconfig() const {
  return battleconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWorldBattleConfig >*
PBConfigTable::mutable_battleconfig() {
  return &battleconfig_;
}
inline const ::PBWorldBattleConfig& PBConfigTable::battleconfig(int index) const {
  return battleconfig_.Get(index);
}
inline ::PBWorldBattleConfig* PBConfigTable::mutable_battleconfig(int index) {
  return battleconfig_.Mutable(index);
}
inline ::PBWorldBattleConfig* PBConfigTable::add_battleconfig() {
  return battleconfig_.Add();
}

// repeated .PBLevelMoneyLmt MoneyLmt = 27;
inline int PBConfigTable::moneylmt_size() const {
  return moneylmt_.size();
}
inline void PBConfigTable::clear_moneylmt() {
  moneylmt_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLevelMoneyLmt >&
PBConfigTable::moneylmt() const {
  return moneylmt_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLevelMoneyLmt >*
PBConfigTable::mutable_moneylmt() {
  return &moneylmt_;
}
inline const ::PBLevelMoneyLmt& PBConfigTable::moneylmt(int index) const {
  return moneylmt_.Get(index);
}
inline ::PBLevelMoneyLmt* PBConfigTable::mutable_moneylmt(int index) {
  return moneylmt_.Mutable(index);
}
inline ::PBLevelMoneyLmt* PBConfigTable::add_moneylmt() {
  return moneylmt_.Add();
}

// repeated .PBHandinTable HandinTable = 28;
inline int PBConfigTable::handintable_size() const {
  return handintable_.size();
}
inline void PBConfigTable::clear_handintable() {
  handintable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBHandinTable >&
PBConfigTable::handintable() const {
  return handintable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBHandinTable >*
PBConfigTable::mutable_handintable() {
  return &handintable_;
}
inline const ::PBHandinTable& PBConfigTable::handintable(int index) const {
  return handintable_.Get(index);
}
inline ::PBHandinTable* PBConfigTable::mutable_handintable(int index) {
  return handintable_.Mutable(index);
}
inline ::PBHandinTable* PBConfigTable::add_handintable() {
  return handintable_.Add();
}

// repeated .PBHandinEncourage HandinEncourage = 29;
inline int PBConfigTable::handinencourage_size() const {
  return handinencourage_.size();
}
inline void PBConfigTable::clear_handinencourage() {
  handinencourage_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBHandinEncourage >&
PBConfigTable::handinencourage() const {
  return handinencourage_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBHandinEncourage >*
PBConfigTable::mutable_handinencourage() {
  return &handinencourage_;
}
inline const ::PBHandinEncourage& PBConfigTable::handinencourage(int index) const {
  return handinencourage_.Get(index);
}
inline ::PBHandinEncourage* PBConfigTable::mutable_handinencourage(int index) {
  return handinencourage_.Mutable(index);
}
inline ::PBHandinEncourage* PBConfigTable::add_handinencourage() {
  return handinencourage_.Add();
}

// repeated .PBItemChangeCamp changeCamp = 30;
inline int PBConfigTable::changecamp_size() const {
  return changecamp_.size();
}
inline void PBConfigTable::clear_changecamp() {
  changecamp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemChangeCamp >&
PBConfigTable::changecamp() const {
  return changecamp_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemChangeCamp >*
PBConfigTable::mutable_changecamp() {
  return &changecamp_;
}
inline const ::PBItemChangeCamp& PBConfigTable::changecamp(int index) const {
  return changecamp_.Get(index);
}
inline ::PBItemChangeCamp* PBConfigTable::mutable_changecamp(int index) {
  return changecamp_.Mutable(index);
}
inline ::PBItemChangeCamp* PBConfigTable::add_changecamp() {
  return changecamp_.Add();
}

// repeated .PBAccuseConfig AccuseConfig = 31;
inline int PBConfigTable::accuseconfig_size() const {
  return accuseconfig_.size();
}
inline void PBConfigTable::clear_accuseconfig() {
  accuseconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAccuseConfig >&
PBConfigTable::accuseconfig() const {
  return accuseconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAccuseConfig >*
PBConfigTable::mutable_accuseconfig() {
  return &accuseconfig_;
}
inline const ::PBAccuseConfig& PBConfigTable::accuseconfig(int index) const {
  return accuseconfig_.Get(index);
}
inline ::PBAccuseConfig* PBConfigTable::mutable_accuseconfig(int index) {
  return accuseconfig_.Mutable(index);
}
inline ::PBAccuseConfig* PBConfigTable::add_accuseconfig() {
  return accuseconfig_.Add();
}

// repeated .PBComRuneConfig ComRuneConfig = 32;
inline int PBConfigTable::comruneconfig_size() const {
  return comruneconfig_.size();
}
inline void PBConfigTable::clear_comruneconfig() {
  comruneconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBComRuneConfig >&
PBConfigTable::comruneconfig() const {
  return comruneconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBComRuneConfig >*
PBConfigTable::mutable_comruneconfig() {
  return &comruneconfig_;
}
inline const ::PBComRuneConfig& PBConfigTable::comruneconfig(int index) const {
  return comruneconfig_.Get(index);
}
inline ::PBComRuneConfig* PBConfigTable::mutable_comruneconfig(int index) {
  return comruneconfig_.Mutable(index);
}
inline ::PBComRuneConfig* PBConfigTable::add_comruneconfig() {
  return comruneconfig_.Add();
}

// repeated .PBMagicWeaponDecomposeTable MWDecomposTab = 33;
inline int PBConfigTable::mwdecompostab_size() const {
  return mwdecompostab_.size();
}
inline void PBConfigTable::clear_mwdecompostab() {
  mwdecompostab_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponDecomposeTable >&
PBConfigTable::mwdecompostab() const {
  return mwdecompostab_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponDecomposeTable >*
PBConfigTable::mutable_mwdecompostab() {
  return &mwdecompostab_;
}
inline const ::PBMagicWeaponDecomposeTable& PBConfigTable::mwdecompostab(int index) const {
  return mwdecompostab_.Get(index);
}
inline ::PBMagicWeaponDecomposeTable* PBConfigTable::mutable_mwdecompostab(int index) {
  return mwdecompostab_.Mutable(index);
}
inline ::PBMagicWeaponDecomposeTable* PBConfigTable::add_mwdecompostab() {
  return mwdecompostab_.Add();
}

// repeated .PBMagicWeaponQuickUpTable MWQuickUpTab = 34;
inline int PBConfigTable::mwquickuptab_size() const {
  return mwquickuptab_.size();
}
inline void PBConfigTable::clear_mwquickuptab() {
  mwquickuptab_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponQuickUpTable >&
PBConfigTable::mwquickuptab() const {
  return mwquickuptab_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponQuickUpTable >*
PBConfigTable::mutable_mwquickuptab() {
  return &mwquickuptab_;
}
inline const ::PBMagicWeaponQuickUpTable& PBConfigTable::mwquickuptab(int index) const {
  return mwquickuptab_.Get(index);
}
inline ::PBMagicWeaponQuickUpTable* PBConfigTable::mutable_mwquickuptab(int index) {
  return mwquickuptab_.Mutable(index);
}
inline ::PBMagicWeaponQuickUpTable* PBConfigTable::add_mwquickuptab() {
  return mwquickuptab_.Add();
}

// repeated .PBGlobalMapConfig GlobalMapConfig = 35;
inline int PBConfigTable::globalmapconfig_size() const {
  return globalmapconfig_.size();
}
inline void PBConfigTable::clear_globalmapconfig() {
  globalmapconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGlobalMapConfig >&
PBConfigTable::globalmapconfig() const {
  return globalmapconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBGlobalMapConfig >*
PBConfigTable::mutable_globalmapconfig() {
  return &globalmapconfig_;
}
inline const ::PBGlobalMapConfig& PBConfigTable::globalmapconfig(int index) const {
  return globalmapconfig_.Get(index);
}
inline ::PBGlobalMapConfig* PBConfigTable::mutable_globalmapconfig(int index) {
  return globalmapconfig_.Mutable(index);
}
inline ::PBGlobalMapConfig* PBConfigTable::add_globalmapconfig() {
  return globalmapconfig_.Add();
}

// repeated .PBOffLineExpConfig OffLineExpConfig = 36;
inline int PBConfigTable::offlineexpconfig_size() const {
  return offlineexpconfig_.size();
}
inline void PBConfigTable::clear_offlineexpconfig() {
  offlineexpconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBOffLineExpConfig >&
PBConfigTable::offlineexpconfig() const {
  return offlineexpconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBOffLineExpConfig >*
PBConfigTable::mutable_offlineexpconfig() {
  return &offlineexpconfig_;
}
inline const ::PBOffLineExpConfig& PBConfigTable::offlineexpconfig(int index) const {
  return offlineexpconfig_.Get(index);
}
inline ::PBOffLineExpConfig* PBConfigTable::mutable_offlineexpconfig(int index) {
  return offlineexpconfig_.Mutable(index);
}
inline ::PBOffLineExpConfig* PBConfigTable::add_offlineexpconfig() {
  return offlineexpconfig_.Add();
}

// repeated .PBRepeFameTable RepeFameTable = 37;
inline int PBConfigTable::repefametable_size() const {
  return repefametable_.size();
}
inline void PBConfigTable::clear_repefametable() {
  repefametable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRepeFameTable >&
PBConfigTable::repefametable() const {
  return repefametable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRepeFameTable >*
PBConfigTable::mutable_repefametable() {
  return &repefametable_;
}
inline const ::PBRepeFameTable& PBConfigTable::repefametable(int index) const {
  return repefametable_.Get(index);
}
inline ::PBRepeFameTable* PBConfigTable::mutable_repefametable(int index) {
  return repefametable_.Mutable(index);
}
inline ::PBRepeFameTable* PBConfigTable::add_repefametable() {
  return repefametable_.Add();
}

// repeated .PBCastingSpiritTable CastingSpiritTable = 38;
inline int PBConfigTable::castingspirittable_size() const {
  return castingspirittable_.size();
}
inline void PBConfigTable::clear_castingspirittable() {
  castingspirittable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCastingSpiritTable >&
PBConfigTable::castingspirittable() const {
  return castingspirittable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCastingSpiritTable >*
PBConfigTable::mutable_castingspirittable() {
  return &castingspirittable_;
}
inline const ::PBCastingSpiritTable& PBConfigTable::castingspirittable(int index) const {
  return castingspirittable_.Get(index);
}
inline ::PBCastingSpiritTable* PBConfigTable::mutable_castingspirittable(int index) {
  return castingspirittable_.Mutable(index);
}
inline ::PBCastingSpiritTable* PBConfigTable::add_castingspirittable() {
  return castingspirittable_.Add();
}

// -------------------------------------------------------------------

// PBSkillSet

// repeated .PBAureoleSkill AureoleSkill = 1;
inline int PBSkillSet::aureoleskill_size() const {
  return aureoleskill_.size();
}
inline void PBSkillSet::clear_aureoleskill() {
  aureoleskill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAureoleSkill >&
PBSkillSet::aureoleskill() const {
  return aureoleskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAureoleSkill >*
PBSkillSet::mutable_aureoleskill() {
  return &aureoleskill_;
}
inline const ::PBAureoleSkill& PBSkillSet::aureoleskill(int index) const {
  return aureoleskill_.Get(index);
}
inline ::PBAureoleSkill* PBSkillSet::mutable_aureoleskill(int index) {
  return aureoleskill_.Mutable(index);
}
inline ::PBAureoleSkill* PBSkillSet::add_aureoleskill() {
  return aureoleskill_.Add();
}

// repeated .PBBuff Buff = 2;
inline int PBSkillSet::buff_size() const {
  return buff_.size();
}
inline void PBSkillSet::clear_buff() {
  buff_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBuff >&
PBSkillSet::buff() const {
  return buff_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBuff >*
PBSkillSet::mutable_buff() {
  return &buff_;
}
inline const ::PBBuff& PBSkillSet::buff(int index) const {
  return buff_.Get(index);
}
inline ::PBBuff* PBSkillSet::mutable_buff(int index) {
  return buff_.Mutable(index);
}
inline ::PBBuff* PBSkillSet::add_buff() {
  return buff_.Add();
}

// repeated .PBNormalSkill NormalSkill = 3;
inline int PBSkillSet::normalskill_size() const {
  return normalskill_.size();
}
inline void PBSkillSet::clear_normalskill() {
  normalskill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBNormalSkill >&
PBSkillSet::normalskill() const {
  return normalskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBNormalSkill >*
PBSkillSet::mutable_normalskill() {
  return &normalskill_;
}
inline const ::PBNormalSkill& PBSkillSet::normalskill(int index) const {
  return normalskill_.Get(index);
}
inline ::PBNormalSkill* PBSkillSet::mutable_normalskill(int index) {
  return normalskill_.Mutable(index);
}
inline ::PBNormalSkill* PBSkillSet::add_normalskill() {
  return normalskill_.Add();
}

// repeated .PBSkill Skill = 4;
inline int PBSkillSet::skill_size() const {
  return skill_.size();
}
inline void PBSkillSet::clear_skill() {
  skill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkill >&
PBSkillSet::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkill >*
PBSkillSet::mutable_skill() {
  return &skill_;
}
inline const ::PBSkill& PBSkillSet::skill(int index) const {
  return skill_.Get(index);
}
inline ::PBSkill* PBSkillSet::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::PBSkill* PBSkillSet::add_skill() {
  return skill_.Add();
}

// repeated .PBSkillTree SkillTree = 5;
inline int PBSkillSet::skilltree_size() const {
  return skilltree_.size();
}
inline void PBSkillSet::clear_skilltree() {
  skilltree_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkillTree >&
PBSkillSet::skilltree() const {
  return skilltree_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkillTree >*
PBSkillSet::mutable_skilltree() {
  return &skilltree_;
}
inline const ::PBSkillTree& PBSkillSet::skilltree(int index) const {
  return skilltree_.Get(index);
}
inline ::PBSkillTree* PBSkillSet::mutable_skilltree(int index) {
  return skilltree_.Mutable(index);
}
inline ::PBSkillTree* PBSkillSet::add_skilltree() {
  return skilltree_.Add();
}

// repeated .PBSkillTreeNode SkillTreeNode = 6;
inline int PBSkillSet::skilltreenode_size() const {
  return skilltreenode_.size();
}
inline void PBSkillSet::clear_skilltreenode() {
  skilltreenode_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode >&
PBSkillSet::skilltreenode() const {
  return skilltreenode_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode >*
PBSkillSet::mutable_skilltreenode() {
  return &skilltreenode_;
}
inline const ::PBSkillTreeNode& PBSkillSet::skilltreenode(int index) const {
  return skilltreenode_.Get(index);
}
inline ::PBSkillTreeNode* PBSkillSet::mutable_skilltreenode(int index) {
  return skilltreenode_.Mutable(index);
}
inline ::PBSkillTreeNode* PBSkillSet::add_skilltreenode() {
  return skilltreenode_.Add();
}

// repeated .PBTrapSkill TrapSkill = 7;
inline int PBSkillSet::trapskill_size() const {
  return trapskill_.size();
}
inline void PBSkillSet::clear_trapskill() {
  trapskill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTrapSkill >&
PBSkillSet::trapskill() const {
  return trapskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTrapSkill >*
PBSkillSet::mutable_trapskill() {
  return &trapskill_;
}
inline const ::PBTrapSkill& PBSkillSet::trapskill(int index) const {
  return trapskill_.Get(index);
}
inline ::PBTrapSkill* PBSkillSet::mutable_trapskill(int index) {
  return trapskill_.Mutable(index);
}
inline ::PBTrapSkill* PBSkillSet::add_trapskill() {
  return trapskill_.Add();
}

// repeated .PBMultiBuff MultiBuff = 8;
inline int PBSkillSet::multibuff_size() const {
  return multibuff_.size();
}
inline void PBSkillSet::clear_multibuff() {
  multibuff_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMultiBuff >&
PBSkillSet::multibuff() const {
  return multibuff_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMultiBuff >*
PBSkillSet::mutable_multibuff() {
  return &multibuff_;
}
inline const ::PBMultiBuff& PBSkillSet::multibuff(int index) const {
  return multibuff_.Get(index);
}
inline ::PBMultiBuff* PBSkillSet::mutable_multibuff(int index) {
  return multibuff_.Mutable(index);
}
inline ::PBMultiBuff* PBSkillSet::add_multibuff() {
  return multibuff_.Add();
}

// repeated .PBFangCunTree FangCunTree = 9;
inline int PBSkillSet::fangcuntree_size() const {
  return fangcuntree_.size();
}
inline void PBSkillSet::clear_fangcuntree() {
  fangcuntree_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFangCunTree >&
PBSkillSet::fangcuntree() const {
  return fangcuntree_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFangCunTree >*
PBSkillSet::mutable_fangcuntree() {
  return &fangcuntree_;
}
inline const ::PBFangCunTree& PBSkillSet::fangcuntree(int index) const {
  return fangcuntree_.Get(index);
}
inline ::PBFangCunTree* PBSkillSet::mutable_fangcuntree(int index) {
  return fangcuntree_.Mutable(index);
}
inline ::PBFangCunTree* PBSkillSet::add_fangcuntree() {
  return fangcuntree_.Add();
}

// repeated .PBFangCunTreeNode FangCunNode = 10;
inline int PBSkillSet::fangcunnode_size() const {
  return fangcunnode_.size();
}
inline void PBSkillSet::clear_fangcunnode() {
  fangcunnode_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode >&
PBSkillSet::fangcunnode() const {
  return fangcunnode_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode >*
PBSkillSet::mutable_fangcunnode() {
  return &fangcunnode_;
}
inline const ::PBFangCunTreeNode& PBSkillSet::fangcunnode(int index) const {
  return fangcunnode_.Get(index);
}
inline ::PBFangCunTreeNode* PBSkillSet::mutable_fangcunnode(int index) {
  return fangcunnode_.Mutable(index);
}
inline ::PBFangCunTreeNode* PBSkillSet::add_fangcunnode() {
  return fangcunnode_.Add();
}

// -------------------------------------------------------------------

// PBEquipSet

// repeated .PBEquipArmor EquipArmor = 1;
inline int PBEquipSet::equiparmor_size() const {
  return equiparmor_.size();
}
inline void PBEquipSet::clear_equiparmor() {
  equiparmor_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipArmor >&
PBEquipSet::equiparmor() const {
  return equiparmor_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipArmor >*
PBEquipSet::mutable_equiparmor() {
  return &equiparmor_;
}
inline const ::PBEquipArmor& PBEquipSet::equiparmor(int index) const {
  return equiparmor_.Get(index);
}
inline ::PBEquipArmor* PBEquipSet::mutable_equiparmor(int index) {
  return equiparmor_.Mutable(index);
}
inline ::PBEquipArmor* PBEquipSet::add_equiparmor() {
  return equiparmor_.Add();
}

// repeated .PBEquipFashion EquipFashion = 2;
inline int PBEquipSet::equipfashion_size() const {
  return equipfashion_.size();
}
inline void PBEquipSet::clear_equipfashion() {
  equipfashion_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipFashion >&
PBEquipSet::equipfashion() const {
  return equipfashion_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipFashion >*
PBEquipSet::mutable_equipfashion() {
  return &equipfashion_;
}
inline const ::PBEquipFashion& PBEquipSet::equipfashion(int index) const {
  return equipfashion_.Get(index);
}
inline ::PBEquipFashion* PBEquipSet::mutable_equipfashion(int index) {
  return equipfashion_.Mutable(index);
}
inline ::PBEquipFashion* PBEquipSet::add_equipfashion() {
  return equipfashion_.Add();
}

// repeated .PBEquipment Equipment = 3;
inline int PBEquipSet::equipment_size() const {
  return equipment_.size();
}
inline void PBEquipSet::clear_equipment() {
  equipment_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipment >&
PBEquipSet::equipment() const {
  return equipment_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipment >*
PBEquipSet::mutable_equipment() {
  return &equipment_;
}
inline const ::PBEquipment& PBEquipSet::equipment(int index) const {
  return equipment_.Get(index);
}
inline ::PBEquipment* PBEquipSet::mutable_equipment(int index) {
  return equipment_.Mutable(index);
}
inline ::PBEquipment* PBEquipSet::add_equipment() {
  return equipment_.Add();
}

// repeated .PBEquipUpg EquipUpg = 4;
inline int PBEquipSet::equipupg_size() const {
  return equipupg_.size();
}
inline void PBEquipSet::clear_equipupg() {
  equipupg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipUpg >&
PBEquipSet::equipupg() const {
  return equipupg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipUpg >*
PBEquipSet::mutable_equipupg() {
  return &equipupg_;
}
inline const ::PBEquipUpg& PBEquipSet::equipupg(int index) const {
  return equipupg_.Get(index);
}
inline ::PBEquipUpg* PBEquipSet::mutable_equipupg(int index) {
  return equipupg_.Mutable(index);
}
inline ::PBEquipUpg* PBEquipSet::add_equipupg() {
  return equipupg_.Add();
}

// repeated .PBEquipWeapon Weapon = 5;
inline int PBEquipSet::weapon_size() const {
  return weapon_.size();
}
inline void PBEquipSet::clear_weapon() {
  weapon_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipWeapon >&
PBEquipSet::weapon() const {
  return weapon_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipWeapon >*
PBEquipSet::mutable_weapon() {
  return &weapon_;
}
inline const ::PBEquipWeapon& PBEquipSet::weapon(int index) const {
  return weapon_.Get(index);
}
inline ::PBEquipWeapon* PBEquipSet::mutable_weapon(int index) {
  return weapon_.Mutable(index);
}
inline ::PBEquipWeapon* PBEquipSet::add_weapon() {
  return weapon_.Add();
}

// repeated .PBOpenSlot OpenSlot = 6;
inline int PBEquipSet::openslot_size() const {
  return openslot_.size();
}
inline void PBEquipSet::clear_openslot() {
  openslot_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBOpenSlot >&
PBEquipSet::openslot() const {
  return openslot_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBOpenSlot >*
PBEquipSet::mutable_openslot() {
  return &openslot_;
}
inline const ::PBOpenSlot& PBEquipSet::openslot(int index) const {
  return openslot_.Get(index);
}
inline ::PBOpenSlot* PBEquipSet::mutable_openslot(int index) {
  return openslot_.Mutable(index);
}
inline ::PBOpenSlot* PBEquipSet::add_openslot() {
  return openslot_.Add();
}

// repeated .PBProduceEquip ProduceEquip = 7;
inline int PBEquipSet::produceequip_size() const {
  return produceequip_.size();
}
inline void PBEquipSet::clear_produceequip() {
  produceequip_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBProduceEquip >&
PBEquipSet::produceequip() const {
  return produceequip_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBProduceEquip >*
PBEquipSet::mutable_produceequip() {
  return &produceequip_;
}
inline const ::PBProduceEquip& PBEquipSet::produceequip(int index) const {
  return produceequip_.Get(index);
}
inline ::PBProduceEquip* PBEquipSet::mutable_produceequip(int index) {
  return produceequip_.Mutable(index);
}
inline ::PBProduceEquip* PBEquipSet::add_produceequip() {
  return produceequip_.Add();
}

// repeated .PBProduceExp ProduceExp = 8;
inline int PBEquipSet::produceexp_size() const {
  return produceexp_.size();
}
inline void PBEquipSet::clear_produceexp() {
  produceexp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBProduceExp >&
PBEquipSet::produceexp() const {
  return produceexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBProduceExp >*
PBEquipSet::mutable_produceexp() {
  return &produceexp_;
}
inline const ::PBProduceExp& PBEquipSet::produceexp(int index) const {
  return produceexp_.Get(index);
}
inline ::PBProduceExp* PBEquipSet::mutable_produceexp(int index) {
  return produceexp_.Mutable(index);
}
inline ::PBProduceExp* PBEquipSet::add_produceexp() {
  return produceexp_.Add();
}

// repeated .PBProducePhysic ProducePhysic = 9;
inline int PBEquipSet::producephysic_size() const {
  return producephysic_.size();
}
inline void PBEquipSet::clear_producephysic() {
  producephysic_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBProducePhysic >&
PBEquipSet::producephysic() const {
  return producephysic_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBProducePhysic >*
PBEquipSet::mutable_producephysic() {
  return &producephysic_;
}
inline const ::PBProducePhysic& PBEquipSet::producephysic(int index) const {
  return producephysic_.Get(index);
}
inline ::PBProducePhysic* PBEquipSet::mutable_producephysic(int index) {
  return producephysic_.Mutable(index);
}
inline ::PBProducePhysic* PBEquipSet::add_producephysic() {
  return producephysic_.Add();
}

// repeated .PBSpell Spell = 10;
inline int PBEquipSet::spell_size() const {
  return spell_.size();
}
inline void PBEquipSet::clear_spell() {
  spell_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSpell >&
PBEquipSet::spell() const {
  return spell_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSpell >*
PBEquipSet::mutable_spell() {
  return &spell_;
}
inline const ::PBSpell& PBEquipSet::spell(int index) const {
  return spell_.Get(index);
}
inline ::PBSpell* PBEquipSet::mutable_spell(int index) {
  return spell_.Mutable(index);
}
inline ::PBSpell* PBEquipSet::add_spell() {
  return spell_.Add();
}

// repeated .PBSuitNormal SuitNormal = 11;
inline int PBEquipSet::suitnormal_size() const {
  return suitnormal_.size();
}
inline void PBEquipSet::clear_suitnormal() {
  suitnormal_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSuitNormal >&
PBEquipSet::suitnormal() const {
  return suitnormal_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSuitNormal >*
PBEquipSet::mutable_suitnormal() {
  return &suitnormal_;
}
inline const ::PBSuitNormal& PBEquipSet::suitnormal(int index) const {
  return suitnormal_.Get(index);
}
inline ::PBSuitNormal* PBEquipSet::mutable_suitnormal(int index) {
  return suitnormal_.Mutable(index);
}
inline ::PBSuitNormal* PBEquipSet::add_suitnormal() {
  return suitnormal_.Add();
}

// repeated .PBSuitProducer SuitProducer = 12;
inline int PBEquipSet::suitproducer_size() const {
  return suitproducer_.size();
}
inline void PBEquipSet::clear_suitproducer() {
  suitproducer_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSuitProducer >&
PBEquipSet::suitproducer() const {
  return suitproducer_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSuitProducer >*
PBEquipSet::mutable_suitproducer() {
  return &suitproducer_;
}
inline const ::PBSuitProducer& PBEquipSet::suitproducer(int index) const {
  return suitproducer_.Get(index);
}
inline ::PBSuitProducer* PBEquipSet::mutable_suitproducer(int index) {
  return suitproducer_.Mutable(index);
}
inline ::PBSuitProducer* PBEquipSet::add_suitproducer() {
  return suitproducer_.Add();
}

// repeated .PBMultiCompose MultiCompose = 13;
inline int PBEquipSet::multicompose_size() const {
  return multicompose_.size();
}
inline void PBEquipSet::clear_multicompose() {
  multicompose_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMultiCompose >&
PBEquipSet::multicompose() const {
  return multicompose_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMultiCompose >*
PBEquipSet::mutable_multicompose() {
  return &multicompose_;
}
inline const ::PBMultiCompose& PBEquipSet::multicompose(int index) const {
  return multicompose_.Get(index);
}
inline ::PBMultiCompose* PBEquipSet::mutable_multicompose(int index) {
  return multicompose_.Mutable(index);
}
inline ::PBMultiCompose* PBEquipSet::add_multicompose() {
  return multicompose_.Add();
}

// repeated .PBCompose Compose = 14;
inline int PBEquipSet::compose_size() const {
  return compose_.size();
}
inline void PBEquipSet::clear_compose() {
  compose_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCompose >&
PBEquipSet::compose() const {
  return compose_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCompose >*
PBEquipSet::mutable_compose() {
  return &compose_;
}
inline const ::PBCompose& PBEquipSet::compose(int index) const {
  return compose_.Get(index);
}
inline ::PBCompose* PBEquipSet::mutable_compose(int index) {
  return compose_.Mutable(index);
}
inline ::PBCompose* PBEquipSet::add_compose() {
  return compose_.Add();
}

// repeated .PBCTemplateDecompound Decompound = 15;
inline int PBEquipSet::decompound_size() const {
  return decompound_.size();
}
inline void PBEquipSet::clear_decompound() {
  decompound_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCTemplateDecompound >&
PBEquipSet::decompound() const {
  return decompound_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCTemplateDecompound >*
PBEquipSet::mutable_decompound() {
  return &decompound_;
}
inline const ::PBCTemplateDecompound& PBEquipSet::decompound(int index) const {
  return decompound_.Get(index);
}
inline ::PBCTemplateDecompound* PBEquipSet::mutable_decompound(int index) {
  return decompound_.Mutable(index);
}
inline ::PBCTemplateDecompound* PBEquipSet::add_decompound() {
  return decompound_.Add();
}

// repeated .PBLightTable LightTable = 16;
inline int PBEquipSet::lighttable_size() const {
  return lighttable_.size();
}
inline void PBEquipSet::clear_lighttable() {
  lighttable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLightTable >&
PBEquipSet::lighttable() const {
  return lighttable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLightTable >*
PBEquipSet::mutable_lighttable() {
  return &lighttable_;
}
inline const ::PBLightTable& PBEquipSet::lighttable(int index) const {
  return lighttable_.Get(index);
}
inline ::PBLightTable* PBEquipSet::mutable_lighttable(int index) {
  return lighttable_.Mutable(index);
}
inline ::PBLightTable* PBEquipSet::add_lighttable() {
  return lighttable_.Add();
}

// repeated .PBMWProJudgeEffTable MWJudgeEff = 17;
inline int PBEquipSet::mwjudgeeff_size() const {
  return mwjudgeeff_.size();
}
inline void PBEquipSet::clear_mwjudgeeff() {
  mwjudgeeff_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeEffTable >&
PBEquipSet::mwjudgeeff() const {
  return mwjudgeeff_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeEffTable >*
PBEquipSet::mutable_mwjudgeeff() {
  return &mwjudgeeff_;
}
inline const ::PBMWProJudgeEffTable& PBEquipSet::mwjudgeeff(int index) const {
  return mwjudgeeff_.Get(index);
}
inline ::PBMWProJudgeEffTable* PBEquipSet::mutable_mwjudgeeff(int index) {
  return mwjudgeeff_.Mutable(index);
}
inline ::PBMWProJudgeEffTable* PBEquipSet::add_mwjudgeeff() {
  return mwjudgeeff_.Add();
}

// repeated .PBMWProJudgeSpirTable MWJudgeSpir = 18;
inline int PBEquipSet::mwjudgespir_size() const {
  return mwjudgespir_.size();
}
inline void PBEquipSet::clear_mwjudgespir() {
  mwjudgespir_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeSpirTable >&
PBEquipSet::mwjudgespir() const {
  return mwjudgespir_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMWProJudgeSpirTable >*
PBEquipSet::mutable_mwjudgespir() {
  return &mwjudgespir_;
}
inline const ::PBMWProJudgeSpirTable& PBEquipSet::mwjudgespir(int index) const {
  return mwjudgespir_.Get(index);
}
inline ::PBMWProJudgeSpirTable* PBEquipSet::mutable_mwjudgespir(int index) {
  return mwjudgespir_.Mutable(index);
}
inline ::PBMWProJudgeSpirTable* PBEquipSet::add_mwjudgespir() {
  return mwjudgespir_.Add();
}

// repeated .PBMWLevelQuotietyTab MWQuotiety = 19;
inline int PBEquipSet::mwquotiety_size() const {
  return mwquotiety_.size();
}
inline void PBEquipSet::clear_mwquotiety() {
  mwquotiety_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMWLevelQuotietyTab >&
PBEquipSet::mwquotiety() const {
  return mwquotiety_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMWLevelQuotietyTab >*
PBEquipSet::mutable_mwquotiety() {
  return &mwquotiety_;
}
inline const ::PBMWLevelQuotietyTab& PBEquipSet::mwquotiety(int index) const {
  return mwquotiety_.Get(index);
}
inline ::PBMWLevelQuotietyTab* PBEquipSet::mutable_mwquotiety(int index) {
  return mwquotiety_.Mutable(index);
}
inline ::PBMWLevelQuotietyTab* PBEquipSet::add_mwquotiety() {
  return mwquotiety_.Add();
}

// -------------------------------------------------------------------

// PBTemplate

// optional .PBItemSet ItemSet = 1;
inline bool PBTemplate::has_itemset() const {
  return _has_bit(0);
}
inline void PBTemplate::clear_itemset() {
  if (itemset_ != NULL) itemset_->::PBItemSet::Clear();
  _clear_bit(0);
}
inline const ::PBItemSet& PBTemplate::itemset() const {
  return itemset_ != NULL ? *itemset_ : *default_instance_->itemset_;
}
inline ::PBItemSet* PBTemplate::mutable_itemset() {
  _set_bit(0);
  if (itemset_ == NULL) itemset_ = new ::PBItemSet;
  return itemset_;
}

// optional .PBConfigTable ConfigTable = 2;
inline bool PBTemplate::has_configtable() const {
  return _has_bit(1);
}
inline void PBTemplate::clear_configtable() {
  if (configtable_ != NULL) configtable_->::PBConfigTable::Clear();
  _clear_bit(1);
}
inline const ::PBConfigTable& PBTemplate::configtable() const {
  return configtable_ != NULL ? *configtable_ : *default_instance_->configtable_;
}
inline ::PBConfigTable* PBTemplate::mutable_configtable() {
  _set_bit(1);
  if (configtable_ == NULL) configtable_ = new ::PBConfigTable;
  return configtable_;
}

// optional .PBSkillSet SkillSet = 3;
inline bool PBTemplate::has_skillset() const {
  return _has_bit(2);
}
inline void PBTemplate::clear_skillset() {
  if (skillset_ != NULL) skillset_->::PBSkillSet::Clear();
  _clear_bit(2);
}
inline const ::PBSkillSet& PBTemplate::skillset() const {
  return skillset_ != NULL ? *skillset_ : *default_instance_->skillset_;
}
inline ::PBSkillSet* PBTemplate::mutable_skillset() {
  _set_bit(2);
  if (skillset_ == NULL) skillset_ = new ::PBSkillSet;
  return skillset_;
}

// optional .PBEquipSet EquipSet = 4;
inline bool PBTemplate::has_equipset() const {
  return _has_bit(3);
}
inline void PBTemplate::clear_equipset() {
  if (equipset_ != NULL) equipset_->::PBEquipSet::Clear();
  _clear_bit(3);
}
inline const ::PBEquipSet& PBTemplate::equipset() const {
  return equipset_ != NULL ? *equipset_ : *default_instance_->equipset_;
}
inline ::PBEquipSet* PBTemplate::mutable_equipset() {
  _set_bit(3);
  if (equipset_ == NULL) equipset_ = new ::PBEquipSet;
  return equipset_;
}

// repeated .PBBattlePet BattlePet = 5;
inline int PBTemplate::battlepet_size() const {
  return battlepet_.size();
}
inline void PBTemplate::clear_battlepet() {
  battlepet_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBattlePet >&
PBTemplate::battlepet() const {
  return battlepet_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBattlePet >*
PBTemplate::mutable_battlepet() {
  return &battlepet_;
}
inline const ::PBBattlePet& PBTemplate::battlepet(int index) const {
  return battlepet_.Get(index);
}
inline ::PBBattlePet* PBTemplate::mutable_battlepet(int index) {
  return battlepet_.Mutable(index);
}
inline ::PBBattlePet* PBTemplate::add_battlepet() {
  return battlepet_.Add();
}

// repeated .PBHonorObtain HonorObtain = 6;
inline int PBTemplate::honorobtain_size() const {
  return honorobtain_.size();
}
inline void PBTemplate::clear_honorobtain() {
  honorobtain_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBHonorObtain >&
PBTemplate::honorobtain() const {
  return honorobtain_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBHonorObtain >*
PBTemplate::mutable_honorobtain() {
  return &honorobtain_;
}
inline const ::PBHonorObtain& PBTemplate::honorobtain(int index) const {
  return honorobtain_.Get(index);
}
inline ::PBHonorObtain* PBTemplate::mutable_honorobtain(int index) {
  return honorobtain_.Mutable(index);
}
inline ::PBHonorObtain* PBTemplate::add_honorobtain() {
  return honorobtain_.Add();
}

// repeated .PBHonorToExp HonorToExp = 7;
inline int PBTemplate::honortoexp_size() const {
  return honortoexp_.size();
}
inline void PBTemplate::clear_honortoexp() {
  honortoexp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBHonorToExp >&
PBTemplate::honortoexp() const {
  return honortoexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBHonorToExp >*
PBTemplate::mutable_honortoexp() {
  return &honortoexp_;
}
inline const ::PBHonorToExp& PBTemplate::honortoexp(int index) const {
  return honortoexp_.Get(index);
}
inline ::PBHonorToExp* PBTemplate::mutable_honortoexp(int index) {
  return honortoexp_.Mutable(index);
}
inline ::PBHonorToExp* PBTemplate::add_honortoexp() {
  return honortoexp_.Add();
}

// repeated .PBLevelExp LevelExp = 8;
inline int PBTemplate::levelexp_size() const {
  return levelexp_.size();
}
inline void PBTemplate::clear_levelexp() {
  levelexp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLevelExp >&
PBTemplate::levelexp() const {
  return levelexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLevelExp >*
PBTemplate::mutable_levelexp() {
  return &levelexp_;
}
inline const ::PBLevelExp& PBTemplate::levelexp(int index) const {
  return levelexp_.Get(index);
}
inline ::PBLevelExp* PBTemplate::mutable_levelexp(int index) {
  return levelexp_.Mutable(index);
}
inline ::PBLevelExp* PBTemplate::add_levelexp() {
  return levelexp_.Add();
}

// repeated .PBLevelProperty LevelPro = 9;
inline int PBTemplate::levelpro_size() const {
  return levelpro_.size();
}
inline void PBTemplate::clear_levelpro() {
  levelpro_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLevelProperty >&
PBTemplate::levelpro() const {
  return levelpro_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLevelProperty >*
PBTemplate::mutable_levelpro() {
  return &levelpro_;
}
inline const ::PBLevelProperty& PBTemplate::levelpro(int index) const {
  return levelpro_.Get(index);
}
inline ::PBLevelProperty* PBTemplate::mutable_levelpro(int index) {
  return levelpro_.Mutable(index);
}
inline ::PBLevelProperty* PBTemplate::add_levelpro() {
  return levelpro_.Add();
}

// repeated .PBMetier Metier = 10;
inline int PBTemplate::metier_size() const {
  return metier_.size();
}
inline void PBTemplate::clear_metier() {
  metier_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMetier >&
PBTemplate::metier() const {
  return metier_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMetier >*
PBTemplate::mutable_metier() {
  return &metier_;
}
inline const ::PBMetier& PBTemplate::metier(int index) const {
  return metier_.Get(index);
}
inline ::PBMetier* PBTemplate::mutable_metier(int index) {
  return metier_.Mutable(index);
}
inline ::PBMetier* PBTemplate::add_metier() {
  return metier_.Add();
}

// repeated .PBMetierPro MetierPro = 11;
inline int PBTemplate::metierpro_size() const {
  return metierpro_.size();
}
inline void PBTemplate::clear_metierpro() {
  metierpro_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMetierPro >&
PBTemplate::metierpro() const {
  return metierpro_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMetierPro >*
PBTemplate::mutable_metierpro() {
  return &metierpro_;
}
inline const ::PBMetierPro& PBTemplate::metierpro(int index) const {
  return metierpro_.Get(index);
}
inline ::PBMetierPro* PBTemplate::mutable_metierpro(int index) {
  return metierpro_.Mutable(index);
}
inline ::PBMetierPro* PBTemplate::add_metierpro() {
  return metierpro_.Add();
}

// repeated .PBMine Mine = 12;
inline int PBTemplate::mine_size() const {
  return mine_.size();
}
inline void PBTemplate::clear_mine() {
  mine_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMine >&
PBTemplate::mine() const {
  return mine_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMine >*
PBTemplate::mutable_mine() {
  return &mine_;
}
inline const ::PBMine& PBTemplate::mine(int index) const {
  return mine_.Get(index);
}
inline ::PBMine* PBTemplate::mutable_mine(int index) {
  return mine_.Mutable(index);
}
inline ::PBMine* PBTemplate::add_mine() {
  return mine_.Add();
}

// repeated .PBNpc Npc = 13;
inline int PBTemplate::npc_size() const {
  return npc_.size();
}
inline void PBTemplate::clear_npc() {
  npc_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBNpc >&
PBTemplate::npc() const {
  return npc_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBNpc >*
PBTemplate::mutable_npc() {
  return &npc_;
}
inline const ::PBNpc& PBTemplate::npc(int index) const {
  return npc_.Get(index);
}
inline ::PBNpc* PBTemplate::mutable_npc(int index) {
  return npc_.Mutable(index);
}
inline ::PBNpc* PBTemplate::add_npc() {
  return npc_.Add();
}

// repeated .PBNPCCollect NpcCollect = 15;
inline int PBTemplate::npccollect_size() const {
  return npccollect_.size();
}
inline void PBTemplate::clear_npccollect() {
  npccollect_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBNPCCollect >&
PBTemplate::npccollect() const {
  return npccollect_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBNPCCollect >*
PBTemplate::mutable_npccollect() {
  return &npccollect_;
}
inline const ::PBNPCCollect& PBTemplate::npccollect(int index) const {
  return npccollect_.Get(index);
}
inline ::PBNPCCollect* PBTemplate::mutable_npccollect(int index) {
  return npccollect_.Mutable(index);
}
inline ::PBNPCCollect* PBTemplate::add_npccollect() {
  return npccollect_.Add();
}

// repeated .PBOgreBox Box = 16;
inline int PBTemplate::box_size() const {
  return box_.size();
}
inline void PBTemplate::clear_box() {
  box_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBOgreBox >&
PBTemplate::box() const {
  return box_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBOgreBox >*
PBTemplate::mutable_box() {
  return &box_;
}
inline const ::PBOgreBox& PBTemplate::box(int index) const {
  return box_.Get(index);
}
inline ::PBOgreBox* PBTemplate::mutable_box(int index) {
  return box_.Mutable(index);
}
inline ::PBOgreBox* PBTemplate::add_box() {
  return box_.Add();
}

// repeated .PBOgreProperty OgreProperty = 17;
inline int PBTemplate::ogreproperty_size() const {
  return ogreproperty_.size();
}
inline void PBTemplate::clear_ogreproperty() {
  ogreproperty_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBOgreProperty >&
PBTemplate::ogreproperty() const {
  return ogreproperty_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBOgreProperty >*
PBTemplate::mutable_ogreproperty() {
  return &ogreproperty_;
}
inline const ::PBOgreProperty& PBTemplate::ogreproperty(int index) const {
  return ogreproperty_.Get(index);
}
inline ::PBOgreProperty* PBTemplate::mutable_ogreproperty(int index) {
  return ogreproperty_.Mutable(index);
}
inline ::PBOgreProperty* PBTemplate::add_ogreproperty() {
  return ogreproperty_.Add();
}

// repeated .PBPetLevelExp PetLevelExp = 18;
inline int PBTemplate::petlevelexp_size() const {
  return petlevelexp_.size();
}
inline void PBTemplate::clear_petlevelexp() {
  petlevelexp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPetLevelExp >&
PBTemplate::petlevelexp() const {
  return petlevelexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPetLevelExp >*
PBTemplate::mutable_petlevelexp() {
  return &petlevelexp_;
}
inline const ::PBPetLevelExp& PBTemplate::petlevelexp(int index) const {
  return petlevelexp_.Get(index);
}
inline ::PBPetLevelExp* PBTemplate::mutable_petlevelexp(int index) {
  return petlevelexp_.Mutable(index);
}
inline ::PBPetLevelExp* PBTemplate::add_petlevelexp() {
  return petlevelexp_.Add();
}

// repeated .PBQuestionExp QuestionExp = 19;
inline int PBTemplate::questionexp_size() const {
  return questionexp_.size();
}
inline void PBTemplate::clear_questionexp() {
  questionexp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBQuestionExp >&
PBTemplate::questionexp() const {
  return questionexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBQuestionExp >*
PBTemplate::mutable_questionexp() {
  return &questionexp_;
}
inline const ::PBQuestionExp& PBTemplate::questionexp(int index) const {
  return questionexp_.Get(index);
}
inline ::PBQuestionExp* PBTemplate::mutable_questionexp(int index) {
  return questionexp_.Mutable(index);
}
inline ::PBQuestionExp* PBTemplate::add_questionexp() {
  return questionexp_.Add();
}

// repeated .PBShowPet ShowPet = 20;
inline int PBTemplate::showpet_size() const {
  return showpet_.size();
}
inline void PBTemplate::clear_showpet() {
  showpet_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBShowPet >&
PBTemplate::showpet() const {
  return showpet_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBShowPet >*
PBTemplate::mutable_showpet() {
  return &showpet_;
}
inline const ::PBShowPet& PBTemplate::showpet(int index) const {
  return showpet_.Get(index);
}
inline ::PBShowPet* PBTemplate::mutable_showpet(int index) {
  return showpet_.Mutable(index);
}
inline ::PBShowPet* PBTemplate::add_showpet() {
  return showpet_.Add();
}

// repeated .PBSummonBeast SummonBeast = 21;
inline int PBTemplate::summonbeast_size() const {
  return summonbeast_.size();
}
inline void PBTemplate::clear_summonbeast() {
  summonbeast_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSummonBeast >&
PBTemplate::summonbeast() const {
  return summonbeast_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSummonBeast >*
PBTemplate::mutable_summonbeast() {
  return &summonbeast_;
}
inline const ::PBSummonBeast& PBTemplate::summonbeast(int index) const {
  return summonbeast_.Get(index);
}
inline ::PBSummonBeast* PBTemplate::mutable_summonbeast(int index) {
  return summonbeast_.Mutable(index);
}
inline ::PBSummonBeast* PBTemplate::add_summonbeast() {
  return summonbeast_.Add();
}

// repeated .PBTemplateProperty TplProperty = 22;
inline int PBTemplate::tplproperty_size() const {
  return tplproperty_.size();
}
inline void PBTemplate::clear_tplproperty() {
  tplproperty_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateProperty >&
PBTemplate::tplproperty() const {
  return tplproperty_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTemplateProperty >*
PBTemplate::mutable_tplproperty() {
  return &tplproperty_;
}
inline const ::PBTemplateProperty& PBTemplate::tplproperty(int index) const {
  return tplproperty_.Get(index);
}
inline ::PBTemplateProperty* PBTemplate::mutable_tplproperty(int index) {
  return tplproperty_.Mutable(index);
}
inline ::PBTemplateProperty* PBTemplate::add_tplproperty() {
  return tplproperty_.Add();
}

// repeated .PBTemplatePropertyTable TplProTable = 23;
inline int PBTemplate::tplprotable_size() const {
  return tplprotable_.size();
}
inline void PBTemplate::clear_tplprotable() {
  tplprotable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTemplatePropertyTable >&
PBTemplate::tplprotable() const {
  return tplprotable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTemplatePropertyTable >*
PBTemplate::mutable_tplprotable() {
  return &tplprotable_;
}
inline const ::PBTemplatePropertyTable& PBTemplate::tplprotable(int index) const {
  return tplprotable_.Get(index);
}
inline ::PBTemplatePropertyTable* PBTemplate::mutable_tplprotable(int index) {
  return tplprotable_.Mutable(index);
}
inline ::PBTemplatePropertyTable* PBTemplate::add_tplprotable() {
  return tplprotable_.Add();
}

// repeated .PBTotalDrop TotalDrop = 24;
inline int PBTemplate::totaldrop_size() const {
  return totaldrop_.size();
}
inline void PBTemplate::clear_totaldrop() {
  totaldrop_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTotalDrop >&
PBTemplate::totaldrop() const {
  return totaldrop_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTotalDrop >*
PBTemplate::mutable_totaldrop() {
  return &totaldrop_;
}
inline const ::PBTotalDrop& PBTemplate::totaldrop(int index) const {
  return totaldrop_.Get(index);
}
inline ::PBTotalDrop* PBTemplate::mutable_totaldrop(int index) {
  return totaldrop_.Mutable(index);
}
inline ::PBTotalDrop* PBTemplate::add_totaldrop() {
  return totaldrop_.Add();
}

// repeated .PBBlock Block = 25;
inline int PBTemplate::block_size() const {
  return block_.size();
}
inline void PBTemplate::clear_block() {
  block_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBlock >&
PBTemplate::block() const {
  return block_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBlock >*
PBTemplate::mutable_block() {
  return &block_;
}
inline const ::PBBlock& PBTemplate::block(int index) const {
  return block_.Get(index);
}
inline ::PBBlock* PBTemplate::mutable_block(int index) {
  return block_.Mutable(index);
}
inline ::PBBlock* PBTemplate::add_block() {
  return block_.Add();
}

// repeated .PBTplHierogram Hierogram = 26;
inline int PBTemplate::hierogram_size() const {
  return hierogram_.size();
}
inline void PBTemplate::clear_hierogram() {
  hierogram_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTplHierogram >&
PBTemplate::hierogram() const {
  return hierogram_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTplHierogram >*
PBTemplate::mutable_hierogram() {
  return &hierogram_;
}
inline const ::PBTplHierogram& PBTemplate::hierogram(int index) const {
  return hierogram_.Get(index);
}
inline ::PBTplHierogram* PBTemplate::mutable_hierogram(int index) {
  return hierogram_.Mutable(index);
}
inline ::PBTplHierogram* PBTemplate::add_hierogram() {
  return hierogram_.Add();
}

// repeated .PBTemplateTalent Talent = 27;
inline int PBTemplate::talent_size() const {
  return talent_.size();
}
inline void PBTemplate::clear_talent() {
  talent_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateTalent >&
PBTemplate::talent() const {
  return talent_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTemplateTalent >*
PBTemplate::mutable_talent() {
  return &talent_;
}
inline const ::PBTemplateTalent& PBTemplate::talent(int index) const {
  return talent_.Get(index);
}
inline ::PBTemplateTalent* PBTemplate::mutable_talent(int index) {
  return talent_.Mutable(index);
}
inline ::PBTemplateTalent* PBTemplate::add_talent() {
  return talent_.Add();
}

// repeated .PBTplBuffImmunity BuffImmunity = 28;
inline int PBTemplate::buffimmunity_size() const {
  return buffimmunity_.size();
}
inline void PBTemplate::clear_buffimmunity() {
  buffimmunity_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTplBuffImmunity >&
PBTemplate::buffimmunity() const {
  return buffimmunity_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTplBuffImmunity >*
PBTemplate::mutable_buffimmunity() {
  return &buffimmunity_;
}
inline const ::PBTplBuffImmunity& PBTemplate::buffimmunity(int index) const {
  return buffimmunity_.Get(index);
}
inline ::PBTplBuffImmunity* PBTemplate::mutable_buffimmunity(int index) {
  return buffimmunity_.Mutable(index);
}
inline ::PBTplBuffImmunity* PBTemplate::add_buffimmunity() {
  return buffimmunity_.Add();
}

// repeated .PBTemplateLifeSkill LifeSkill = 29;
inline int PBTemplate::lifeskill_size() const {
  return lifeskill_.size();
}
inline void PBTemplate::clear_lifeskill() {
  lifeskill_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateLifeSkill >&
PBTemplate::lifeskill() const {
  return lifeskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTemplateLifeSkill >*
PBTemplate::mutable_lifeskill() {
  return &lifeskill_;
}
inline const ::PBTemplateLifeSkill& PBTemplate::lifeskill(int index) const {
  return lifeskill_.Get(index);
}
inline ::PBTemplateLifeSkill* PBTemplate::mutable_lifeskill(int index) {
  return lifeskill_.Mutable(index);
}
inline ::PBTemplateLifeSkill* PBTemplate::add_lifeskill() {
  return lifeskill_.Add();
}

// repeated .PBLifeSkillScroll LifeSkillScroll = 30;
inline int PBTemplate::lifeskillscroll_size() const {
  return lifeskillscroll_.size();
}
inline void PBTemplate::clear_lifeskillscroll() {
  lifeskillscroll_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLifeSkillScroll >&
PBTemplate::lifeskillscroll() const {
  return lifeskillscroll_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLifeSkillScroll >*
PBTemplate::mutable_lifeskillscroll() {
  return &lifeskillscroll_;
}
inline const ::PBLifeSkillScroll& PBTemplate::lifeskillscroll(int index) const {
  return lifeskillscroll_.Get(index);
}
inline ::PBLifeSkillScroll* PBTemplate::mutable_lifeskillscroll(int index) {
  return lifeskillscroll_.Mutable(index);
}
inline ::PBLifeSkillScroll* PBTemplate::add_lifeskillscroll() {
  return lifeskillscroll_.Add();
}

// repeated .PBTitleManager TitleManager = 31;
inline int PBTemplate::titlemanager_size() const {
  return titlemanager_.size();
}
inline void PBTemplate::clear_titlemanager() {
  titlemanager_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTitleManager >&
PBTemplate::titlemanager() const {
  return titlemanager_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTitleManager >*
PBTemplate::mutable_titlemanager() {
  return &titlemanager_;
}
inline const ::PBTitleManager& PBTemplate::titlemanager(int index) const {
  return titlemanager_.Get(index);
}
inline ::PBTitleManager* PBTemplate::mutable_titlemanager(int index) {
  return titlemanager_.Mutable(index);
}
inline ::PBTitleManager* PBTemplate::add_titlemanager() {
  return titlemanager_.Add();
}

// repeated .PBSkillStorage MagicWeaponSkillStorage = 32;
inline int PBTemplate::magicweaponskillstorage_size() const {
  return magicweaponskillstorage_.size();
}
inline void PBTemplate::clear_magicweaponskillstorage() {
  magicweaponskillstorage_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkillStorage >&
PBTemplate::magicweaponskillstorage() const {
  return magicweaponskillstorage_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkillStorage >*
PBTemplate::mutable_magicweaponskillstorage() {
  return &magicweaponskillstorage_;
}
inline const ::PBSkillStorage& PBTemplate::magicweaponskillstorage(int index) const {
  return magicweaponskillstorage_.Get(index);
}
inline ::PBSkillStorage* PBTemplate::mutable_magicweaponskillstorage(int index) {
  return magicweaponskillstorage_.Mutable(index);
}
inline ::PBSkillStorage* PBTemplate::add_magicweaponskillstorage() {
  return magicweaponskillstorage_.Add();
}

// repeated .PBCDGroupTable CDGroupTable = 33;
inline int PBTemplate::cdgrouptable_size() const {
  return cdgrouptable_.size();
}
inline void PBTemplate::clear_cdgrouptable() {
  cdgrouptable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCDGroupTable >&
PBTemplate::cdgrouptable() const {
  return cdgrouptable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCDGroupTable >*
PBTemplate::mutable_cdgrouptable() {
  return &cdgrouptable_;
}
inline const ::PBCDGroupTable& PBTemplate::cdgrouptable(int index) const {
  return cdgrouptable_.Get(index);
}
inline ::PBCDGroupTable* PBTemplate::mutable_cdgrouptable(int index) {
  return cdgrouptable_.Mutable(index);
}
inline ::PBCDGroupTable* PBTemplate::add_cdgrouptable() {
  return cdgrouptable_.Add();
}

// repeated .PBApConfig ApConfig = 34;
inline int PBTemplate::apconfig_size() const {
  return apconfig_.size();
}
inline void PBTemplate::clear_apconfig() {
  apconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBApConfig >&
PBTemplate::apconfig() const {
  return apconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBApConfig >*
PBTemplate::mutable_apconfig() {
  return &apconfig_;
}
inline const ::PBApConfig& PBTemplate::apconfig(int index) const {
  return apconfig_.Get(index);
}
inline ::PBApConfig* PBTemplate::mutable_apconfig(int index) {
  return apconfig_.Mutable(index);
}
inline ::PBApConfig* PBTemplate::add_apconfig() {
  return apconfig_.Add();
}

// repeated .PBJudgeConfig JudgeConfig = 35;
inline int PBTemplate::judgeconfig_size() const {
  return judgeconfig_.size();
}
inline void PBTemplate::clear_judgeconfig() {
  judgeconfig_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeConfig >&
PBTemplate::judgeconfig() const {
  return judgeconfig_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBJudgeConfig >*
PBTemplate::mutable_judgeconfig() {
  return &judgeconfig_;
}
inline const ::PBJudgeConfig& PBTemplate::judgeconfig(int index) const {
  return judgeconfig_.Get(index);
}
inline ::PBJudgeConfig* PBTemplate::mutable_judgeconfig(int index) {
  return judgeconfig_.Mutable(index);
}
inline ::PBJudgeConfig* PBTemplate::add_judgeconfig() {
  return judgeconfig_.Add();
}

// repeated .PBWizardTable WizardTable = 36;
inline int PBTemplate::wizardtable_size() const {
  return wizardtable_.size();
}
inline void PBTemplate::clear_wizardtable() {
  wizardtable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWizardTable >&
PBTemplate::wizardtable() const {
  return wizardtable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWizardTable >*
PBTemplate::mutable_wizardtable() {
  return &wizardtable_;
}
inline const ::PBWizardTable& PBTemplate::wizardtable(int index) const {
  return wizardtable_.Get(index);
}
inline ::PBWizardTable* PBTemplate::mutable_wizardtable(int index) {
  return wizardtable_.Mutable(index);
}
inline ::PBWizardTable* PBTemplate::add_wizardtable() {
  return wizardtable_.Add();
}

// repeated .PBTrend Trend = 37;
inline int PBTemplate::trend_size() const {
  return trend_.size();
}
inline void PBTemplate::clear_trend() {
  trend_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTrend >&
PBTemplate::trend() const {
  return trend_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTrend >*
PBTemplate::mutable_trend() {
  return &trend_;
}
inline const ::PBTrend& PBTemplate::trend(int index) const {
  return trend_.Get(index);
}
inline ::PBTrend* PBTemplate::mutable_trend(int index) {
  return trend_.Mutable(index);
}
inline ::PBTrend* PBTemplate::add_trend() {
  return trend_.Add();
}

// repeated .PBAchieveAward AchieveAward = 38;
inline int PBTemplate::achieveaward_size() const {
  return achieveaward_.size();
}
inline void PBTemplate::clear_achieveaward() {
  achieveaward_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAchieveAward >&
PBTemplate::achieveaward() const {
  return achieveaward_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAchieveAward >*
PBTemplate::mutable_achieveaward() {
  return &achieveaward_;
}
inline const ::PBAchieveAward& PBTemplate::achieveaward(int index) const {
  return achieveaward_.Get(index);
}
inline ::PBAchieveAward* PBTemplate::mutable_achieveaward(int index) {
  return achieveaward_.Mutable(index);
}
inline ::PBAchieveAward* PBTemplate::add_achieveaward() {
  return achieveaward_.Add();
}

// repeated .PBPower Power = 39;
inline int PBTemplate::power_size() const {
  return power_.size();
}
inline void PBTemplate::clear_power() {
  power_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPower >&
PBTemplate::power() const {
  return power_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPower >*
PBTemplate::mutable_power() {
  return &power_;
}
inline const ::PBPower& PBTemplate::power(int index) const {
  return power_.Get(index);
}
inline ::PBPower* PBTemplate::mutable_power(int index) {
  return power_.Mutable(index);
}
inline ::PBPower* PBTemplate::add_power() {
  return power_.Add();
}

// repeated .PBOfficial Official = 40;
inline int PBTemplate::official_size() const {
  return official_.size();
}
inline void PBTemplate::clear_official() {
  official_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBOfficial >&
PBTemplate::official() const {
  return official_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBOfficial >*
PBTemplate::mutable_official() {
  return &official_;
}
inline const ::PBOfficial& PBTemplate::official(int index) const {
  return official_.Get(index);
}
inline ::PBOfficial* PBTemplate::mutable_official(int index) {
  return official_.Mutable(index);
}
inline ::PBOfficial* PBTemplate::add_official() {
  return official_.Add();
}

// repeated .PBConstructExp ConstructExp = 41;
inline int PBTemplate::constructexp_size() const {
  return constructexp_.size();
}
inline void PBTemplate::clear_constructexp() {
  constructexp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBConstructExp >&
PBTemplate::constructexp() const {
  return constructexp_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBConstructExp >*
PBTemplate::mutable_constructexp() {
  return &constructexp_;
}
inline const ::PBConstructExp& PBTemplate::constructexp(int index) const {
  return constructexp_.Get(index);
}
inline ::PBConstructExp* PBTemplate::mutable_constructexp(int index) {
  return constructexp_.Mutable(index);
}
inline ::PBConstructExp* PBTemplate::add_constructexp() {
  return constructexp_.Add();
}

// repeated .PBTemplateTalentStage TalentStage = 42;
inline int PBTemplate::talentstage_size() const {
  return talentstage_.size();
}
inline void PBTemplate::clear_talentstage() {
  talentstage_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTemplateTalentStage >&
PBTemplate::talentstage() const {
  return talentstage_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTemplateTalentStage >*
PBTemplate::mutable_talentstage() {
  return &talentstage_;
}
inline const ::PBTemplateTalentStage& PBTemplate::talentstage(int index) const {
  return talentstage_.Get(index);
}
inline ::PBTemplateTalentStage* PBTemplate::mutable_talentstage(int index) {
  return talentstage_.Mutable(index);
}
inline ::PBTemplateTalentStage* PBTemplate::add_talentstage() {
  return talentstage_.Add();
}

// repeated .PBCorpsBOSS CorpsBOSS = 43;
inline int PBTemplate::corpsboss_size() const {
  return corpsboss_.size();
}
inline void PBTemplate::clear_corpsboss() {
  corpsboss_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsBOSS >&
PBTemplate::corpsboss() const {
  return corpsboss_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsBOSS >*
PBTemplate::mutable_corpsboss() {
  return &corpsboss_;
}
inline const ::PBCorpsBOSS& PBTemplate::corpsboss(int index) const {
  return corpsboss_.Get(index);
}
inline ::PBCorpsBOSS* PBTemplate::mutable_corpsboss(int index) {
  return corpsboss_.Mutable(index);
}
inline ::PBCorpsBOSS* PBTemplate::add_corpsboss() {
  return corpsboss_.Add();
}

// -------------------------------------------------------------------

// PBHandinEncourage

// optional uint32 TempId = 1;
inline bool PBHandinEncourage::has_tempid() const {
  return _has_bit(0);
}
inline void PBHandinEncourage::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBHandinEncourage::tempid() const {
  return tempid_;
}
inline void PBHandinEncourage::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 HandinItemType = 2;
inline bool PBHandinEncourage::has_handinitemtype() const {
  return _has_bit(1);
}
inline void PBHandinEncourage::clear_handinitemtype() {
  handinitemtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBHandinEncourage::handinitemtype() const {
  return handinitemtype_;
}
inline void PBHandinEncourage::set_handinitemtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  handinitemtype_ = value;
}

// optional uint32 HandinItemID = 3;
inline bool PBHandinEncourage::has_handinitemid() const {
  return _has_bit(2);
}
inline void PBHandinEncourage::clear_handinitemid() {
  handinitemid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBHandinEncourage::handinitemid() const {
  return handinitemid_;
}
inline void PBHandinEncourage::set_handinitemid(::google::protobuf::uint32 value) {
  _set_bit(2);
  handinitemid_ = value;
}

// optional uint32 HandinItemNum = 4;
inline bool PBHandinEncourage::has_handinitemnum() const {
  return _has_bit(3);
}
inline void PBHandinEncourage::clear_handinitemnum() {
  handinitemnum_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBHandinEncourage::handinitemnum() const {
  return handinitemnum_;
}
inline void PBHandinEncourage::set_handinitemnum(::google::protobuf::uint32 value) {
  _set_bit(3);
  handinitemnum_ = value;
}

// optional uint32 EncourageType = 5;
inline bool PBHandinEncourage::has_encouragetype() const {
  return _has_bit(4);
}
inline void PBHandinEncourage::clear_encouragetype() {
  encouragetype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBHandinEncourage::encouragetype() const {
  return encouragetype_;
}
inline void PBHandinEncourage::set_encouragetype(::google::protobuf::uint32 value) {
  _set_bit(4);
  encouragetype_ = value;
}

// optional uint32 EncourageId = 6;
inline bool PBHandinEncourage::has_encourageid() const {
  return _has_bit(5);
}
inline void PBHandinEncourage::clear_encourageid() {
  encourageid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBHandinEncourage::encourageid() const {
  return encourageid_;
}
inline void PBHandinEncourage::set_encourageid(::google::protobuf::uint32 value) {
  _set_bit(5);
  encourageid_ = value;
}

// optional uint32 EncourageNum = 7;
inline bool PBHandinEncourage::has_encouragenum() const {
  return _has_bit(6);
}
inline void PBHandinEncourage::clear_encouragenum() {
  encouragenum_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBHandinEncourage::encouragenum() const {
  return encouragenum_;
}
inline void PBHandinEncourage::set_encouragenum(::google::protobuf::uint32 value) {
  _set_bit(6);
  encouragenum_ = value;
}

// -------------------------------------------------------------------

// PBHandinTable

// optional uint32 TempID = 1;
inline bool PBHandinTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBHandinTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBHandinTable::tempid() const {
  return tempid_;
}
inline void PBHandinTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 ActivityId = 2;
inline bool PBHandinTable::has_activityid() const {
  return _has_bit(1);
}
inline void PBHandinTable::clear_activityid() {
  activityid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBHandinTable::activityid() const {
  return activityid_;
}
inline void PBHandinTable::set_activityid(::google::protobuf::uint32 value) {
  _set_bit(1);
  activityid_ = value;
}

// repeated uint32 EncourageTplID = 3;
inline int PBHandinTable::encouragetplid_size() const {
  return encouragetplid_.size();
}
inline void PBHandinTable::clear_encouragetplid() {
  encouragetplid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHandinTable::encouragetplid() const {
  return encouragetplid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHandinTable::mutable_encouragetplid() {
  return &encouragetplid_;
}
inline ::google::protobuf::uint32 PBHandinTable::encouragetplid(int index) const {
  return encouragetplid_.Get(index);
}
inline void PBHandinTable::set_encouragetplid(int index, ::google::protobuf::uint32 value) {
  encouragetplid_.Set(index, value);
}
inline void PBHandinTable::add_encouragetplid(::google::protobuf::uint32 value) {
  encouragetplid_.Add(value);
}

// -------------------------------------------------------------------

// PBItemBase

// optional uint32 TempID = 1;
inline bool PBItemBase::has_tempid() const {
  return _has_bit(0);
}
inline void PBItemBase::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemBase::tempid() const {
  return tempid_;
}
inline void PBItemBase::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 ItemType = 2;
inline bool PBItemBase::has_itemtype() const {
  return _has_bit(1);
}
inline void PBItemBase::clear_itemtype() {
  itemtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemBase::itemtype() const {
  return itemtype_;
}
inline void PBItemBase::set_itemtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemtype_ = value;
}

// optional uint32 ProcessType = 3;
inline bool PBItemBase::has_processtype() const {
  return _has_bit(2);
}
inline void PBItemBase::clear_processtype() {
  processtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemBase::processtype() const {
  return processtype_;
}
inline void PBItemBase::set_processtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  processtype_ = value;
}

// optional uint32 PileLimit = 4;
inline bool PBItemBase::has_pilelimit() const {
  return _has_bit(3);
}
inline void PBItemBase::clear_pilelimit() {
  pilelimit_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemBase::pilelimit() const {
  return pilelimit_;
}
inline void PBItemBase::set_pilelimit(::google::protobuf::uint32 value) {
  _set_bit(3);
  pilelimit_ = value;
}

// optional string ItemName = 5;
inline bool PBItemBase::has_itemname() const {
  return _has_bit(4);
}
inline void PBItemBase::clear_itemname() {
  if (itemname_ != &_default_itemname_) {
    itemname_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& PBItemBase::itemname() const {
  return *itemname_;
}
inline void PBItemBase::set_itemname(const ::std::string& value) {
  _set_bit(4);
  if (itemname_ == &_default_itemname_) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
}
inline void PBItemBase::set_itemname(const char* value) {
  _set_bit(4);
  if (itemname_ == &_default_itemname_) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
}
inline void PBItemBase::set_itemname(const char* value, size_t size) {
  _set_bit(4);
  if (itemname_ == &_default_itemname_) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemBase::mutable_itemname() {
  _set_bit(4);
  if (itemname_ == &_default_itemname_) {
    itemname_ = new ::std::string;
  }
  return itemname_;
}

// optional string ModelName = 6;
inline bool PBItemBase::has_modelname() const {
  return _has_bit(5);
}
inline void PBItemBase::clear_modelname() {
  if (modelname_ != &_default_modelname_) {
    modelname_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& PBItemBase::modelname() const {
  return *modelname_;
}
inline void PBItemBase::set_modelname(const ::std::string& value) {
  _set_bit(5);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void PBItemBase::set_modelname(const char* value) {
  _set_bit(5);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void PBItemBase::set_modelname(const char* value, size_t size) {
  _set_bit(5);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemBase::mutable_modelname() {
  _set_bit(5);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  return modelname_;
}

// optional string IconName = 7;
inline bool PBItemBase::has_iconname() const {
  return _has_bit(6);
}
inline void PBItemBase::clear_iconname() {
  if (iconname_ != &_default_iconname_) {
    iconname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& PBItemBase::iconname() const {
  return *iconname_;
}
inline void PBItemBase::set_iconname(const ::std::string& value) {
  _set_bit(6);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(value);
}
inline void PBItemBase::set_iconname(const char* value) {
  _set_bit(6);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(value);
}
inline void PBItemBase::set_iconname(const char* value, size_t size) {
  _set_bit(6);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemBase::mutable_iconname() {
  _set_bit(6);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  return iconname_;
}

// optional uint32 PurchasePrice = 8;
inline bool PBItemBase::has_purchaseprice() const {
  return _has_bit(7);
}
inline void PBItemBase::clear_purchaseprice() {
  purchaseprice_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemBase::purchaseprice() const {
  return purchaseprice_;
}
inline void PBItemBase::set_purchaseprice(::google::protobuf::uint32 value) {
  _set_bit(7);
  purchaseprice_ = value;
}

// optional uint32 SalePrice = 9;
inline bool PBItemBase::has_saleprice() const {
  return _has_bit(8);
}
inline void PBItemBase::clear_saleprice() {
  saleprice_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemBase::saleprice() const {
  return saleprice_;
}
inline void PBItemBase::set_saleprice(::google::protobuf::uint32 value) {
  _set_bit(8);
  saleprice_ = value;
}

// optional uint32 PurchaseBindMoney = 10;
inline bool PBItemBase::has_purchasebindmoney() const {
  return _has_bit(9);
}
inline void PBItemBase::clear_purchasebindmoney() {
  purchasebindmoney_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemBase::purchasebindmoney() const {
  return purchasebindmoney_;
}
inline void PBItemBase::set_purchasebindmoney(::google::protobuf::uint32 value) {
  _set_bit(9);
  purchasebindmoney_ = value;
}

// optional uint32 SaleBindMoney = 11;
inline bool PBItemBase::has_salebindmoney() const {
  return _has_bit(10);
}
inline void PBItemBase::clear_salebindmoney() {
  salebindmoney_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemBase::salebindmoney() const {
  return salebindmoney_;
}
inline void PBItemBase::set_salebindmoney(::google::protobuf::uint32 value) {
  _set_bit(10);
  salebindmoney_ = value;
}

// optional string Describe = 12;
inline bool PBItemBase::has_describe() const {
  return _has_bit(11);
}
inline void PBItemBase::clear_describe() {
  if (describe_ != &_default_describe_) {
    describe_->clear();
  }
  _clear_bit(11);
}
inline const ::std::string& PBItemBase::describe() const {
  return *describe_;
}
inline void PBItemBase::set_describe(const ::std::string& value) {
  _set_bit(11);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void PBItemBase::set_describe(const char* value) {
  _set_bit(11);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void PBItemBase::set_describe(const char* value, size_t size) {
  _set_bit(11);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemBase::mutable_describe() {
  _set_bit(11);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  return describe_;
}

// optional uint32 LastTime = 13;
inline bool PBItemBase::has_lasttime() const {
  return _has_bit(12);
}
inline void PBItemBase::clear_lasttime() {
  lasttime_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemBase::lasttime() const {
  return lasttime_;
}
inline void PBItemBase::set_lasttime(::google::protobuf::uint32 value) {
  _set_bit(12);
  lasttime_ = value;
}

// optional uint32 StopAttack = 14;
inline bool PBItemBase::has_stopattack() const {
  return _has_bit(13);
}
inline void PBItemBase::clear_stopattack() {
  stopattack_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemBase::stopattack() const {
  return stopattack_;
}
inline void PBItemBase::set_stopattack(::google::protobuf::uint32 value) {
  _set_bit(13);
  stopattack_ = value;
}

// optional string TypeDesc = 15;
inline bool PBItemBase::has_typedesc() const {
  return _has_bit(14);
}
inline void PBItemBase::clear_typedesc() {
  if (typedesc_ != &_default_typedesc_) {
    typedesc_->clear();
  }
  _clear_bit(14);
}
inline const ::std::string& PBItemBase::typedesc() const {
  return *typedesc_;
}
inline void PBItemBase::set_typedesc(const ::std::string& value) {
  _set_bit(14);
  if (typedesc_ == &_default_typedesc_) {
    typedesc_ = new ::std::string;
  }
  typedesc_->assign(value);
}
inline void PBItemBase::set_typedesc(const char* value) {
  _set_bit(14);
  if (typedesc_ == &_default_typedesc_) {
    typedesc_ = new ::std::string;
  }
  typedesc_->assign(value);
}
inline void PBItemBase::set_typedesc(const char* value, size_t size) {
  _set_bit(14);
  if (typedesc_ == &_default_typedesc_) {
    typedesc_ = new ::std::string;
  }
  typedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemBase::mutable_typedesc() {
  _set_bit(14);
  if (typedesc_ == &_default_typedesc_) {
    typedesc_ = new ::std::string;
  }
  return typedesc_;
}

// optional uint32 CanUse = 16;
inline bool PBItemBase::has_canuse() const {
  return _has_bit(15);
}
inline void PBItemBase::clear_canuse() {
  canuse_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBItemBase::canuse() const {
  return canuse_;
}
inline void PBItemBase::set_canuse(::google::protobuf::uint32 value) {
  _set_bit(15);
  canuse_ = value;
}

// optional uint32 SkillID = 17;
inline bool PBItemBase::has_skillid() const {
  return _has_bit(16);
}
inline void PBItemBase::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBItemBase::skillid() const {
  return skillid_;
}
inline void PBItemBase::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(16);
  skillid_ = value;
}

// optional uint32 Level = 18;
inline bool PBItemBase::has_level() const {
  return _has_bit(17);
}
inline void PBItemBase::clear_level() {
  level_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBItemBase::level() const {
  return level_;
}
inline void PBItemBase::set_level(::google::protobuf::uint32 value) {
  _set_bit(17);
  level_ = value;
}

// optional uint32 Disappear = 19;
inline bool PBItemBase::has_disappear() const {
  return _has_bit(18);
}
inline void PBItemBase::clear_disappear() {
  disappear_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBItemBase::disappear() const {
  return disappear_;
}
inline void PBItemBase::set_disappear(::google::protobuf::uint32 value) {
  _set_bit(18);
  disappear_ = value;
}

// repeated uint32 CDGroup = 20;
inline int PBItemBase::cdgroup_size() const {
  return cdgroup_.size();
}
inline void PBItemBase::clear_cdgroup() {
  cdgroup_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemBase::cdgroup() const {
  return cdgroup_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemBase::mutable_cdgroup() {
  return &cdgroup_;
}
inline ::google::protobuf::uint32 PBItemBase::cdgroup(int index) const {
  return cdgroup_.Get(index);
}
inline void PBItemBase::set_cdgroup(int index, ::google::protobuf::uint32 value) {
  cdgroup_.Set(index, value);
}
inline void PBItemBase::add_cdgroup(::google::protobuf::uint32 value) {
  cdgroup_.Add(value);
}

// repeated uint32 LmtMapID = 21;
inline int PBItemBase::lmtmapid_size() const {
  return lmtmapid_.size();
}
inline void PBItemBase::clear_lmtmapid() {
  lmtmapid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemBase::lmtmapid() const {
  return lmtmapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemBase::mutable_lmtmapid() {
  return &lmtmapid_;
}
inline ::google::protobuf::uint32 PBItemBase::lmtmapid(int index) const {
  return lmtmapid_.Get(index);
}
inline void PBItemBase::set_lmtmapid(int index, ::google::protobuf::uint32 value) {
  lmtmapid_.Set(index, value);
}
inline void PBItemBase::add_lmtmapid(::google::protobuf::uint32 value) {
  lmtmapid_.Add(value);
}

// optional uint32 ValidTime = 22;
inline bool PBItemBase::has_validtime() const {
  return _has_bit(21);
}
inline void PBItemBase::clear_validtime() {
  validtime_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBItemBase::validtime() const {
  return validtime_;
}
inline void PBItemBase::set_validtime(::google::protobuf::uint32 value) {
  _set_bit(21);
  validtime_ = value;
}

// optional uint32 ValidType = 23;
inline bool PBItemBase::has_validtype() const {
  return _has_bit(22);
}
inline void PBItemBase::clear_validtype() {
  validtype_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBItemBase::validtype() const {
  return validtype_;
}
inline void PBItemBase::set_validtype(::google::protobuf::uint32 value) {
  _set_bit(22);
  validtype_ = value;
}

// optional uint32 CommonID = 24;
inline bool PBItemBase::has_commonid() const {
  return _has_bit(23);
}
inline void PBItemBase::clear_commonid() {
  commonid_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBItemBase::commonid() const {
  return commonid_;
}
inline void PBItemBase::set_commonid(::google::protobuf::uint32 value) {
  _set_bit(23);
  commonid_ = value;
}

// optional uint32 EatType = 25;
inline bool PBItemBase::has_eattype() const {
  return _has_bit(24);
}
inline void PBItemBase::clear_eattype() {
  eattype_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBItemBase::eattype() const {
  return eattype_;
}
inline void PBItemBase::set_eattype(::google::protobuf::uint32 value) {
  _set_bit(24);
  eattype_ = value;
}

// optional uint32 EatValue = 26;
inline bool PBItemBase::has_eatvalue() const {
  return _has_bit(25);
}
inline void PBItemBase::clear_eatvalue() {
  eatvalue_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBItemBase::eatvalue() const {
  return eatvalue_;
}
inline void PBItemBase::set_eatvalue(::google::protobuf::uint32 value) {
  _set_bit(25);
  eatvalue_ = value;
}

// optional uint32 CountType = 27;
inline bool PBItemBase::has_counttype() const {
  return _has_bit(26);
}
inline void PBItemBase::clear_counttype() {
  counttype_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBItemBase::counttype() const {
  return counttype_;
}
inline void PBItemBase::set_counttype(::google::protobuf::uint32 value) {
  _set_bit(26);
  counttype_ = value;
}

// optional uint32 LmtLineID = 28;
inline bool PBItemBase::has_lmtlineid() const {
  return _has_bit(27);
}
inline void PBItemBase::clear_lmtlineid() {
  lmtlineid_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBItemBase::lmtlineid() const {
  return lmtlineid_;
}
inline void PBItemBase::set_lmtlineid(::google::protobuf::uint32 value) {
  _set_bit(27);
  lmtlineid_ = value;
}

// repeated uint32 LmtUseMapID = 29;
inline int PBItemBase::lmtusemapid_size() const {
  return lmtusemapid_.size();
}
inline void PBItemBase::clear_lmtusemapid() {
  lmtusemapid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemBase::lmtusemapid() const {
  return lmtusemapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemBase::mutable_lmtusemapid() {
  return &lmtusemapid_;
}
inline ::google::protobuf::uint32 PBItemBase::lmtusemapid(int index) const {
  return lmtusemapid_.Get(index);
}
inline void PBItemBase::set_lmtusemapid(int index, ::google::protobuf::uint32 value) {
  lmtusemapid_.Set(index, value);
}
inline void PBItemBase::add_lmtusemapid(::google::protobuf::uint32 value) {
  lmtusemapid_.Add(value);
}

// repeated uint32 LmtRepetionID = 30;
inline int PBItemBase::lmtrepetionid_size() const {
  return lmtrepetionid_.size();
}
inline void PBItemBase::clear_lmtrepetionid() {
  lmtrepetionid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemBase::lmtrepetionid() const {
  return lmtrepetionid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemBase::mutable_lmtrepetionid() {
  return &lmtrepetionid_;
}
inline ::google::protobuf::uint32 PBItemBase::lmtrepetionid(int index) const {
  return lmtrepetionid_.Get(index);
}
inline void PBItemBase::set_lmtrepetionid(int index, ::google::protobuf::uint32 value) {
  lmtrepetionid_.Set(index, value);
}
inline void PBItemBase::add_lmtrepetionid(::google::protobuf::uint32 value) {
  lmtrepetionid_.Add(value);
}

// optional uint32 CompID = 31;
inline bool PBItemBase::has_compid() const {
  return _has_bit(30);
}
inline void PBItemBase::clear_compid() {
  compid_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBItemBase::compid() const {
  return compid_;
}
inline void PBItemBase::set_compid(::google::protobuf::uint32 value) {
  _set_bit(30);
  compid_ = value;
}

// optional uint32 InvilidDate = 32;
inline bool PBItemBase::has_inviliddate() const {
  return _has_bit(31);
}
inline void PBItemBase::clear_inviliddate() {
  inviliddate_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBItemBase::inviliddate() const {
  return inviliddate_;
}
inline void PBItemBase::set_inviliddate(::google::protobuf::uint32 value) {
  _set_bit(31);
  inviliddate_ = value;
}

// -------------------------------------------------------------------

// PBItemReturn

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemReturn::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemReturn::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemReturn::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemReturn::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 Timer = 2;
inline bool PBItemReturn::has_timer() const {
  return _has_bit(1);
}
inline void PBItemReturn::clear_timer() {
  timer_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemReturn::timer() const {
  return timer_;
}
inline void PBItemReturn::set_timer(::google::protobuf::uint32 value) {
  _set_bit(1);
  timer_ = value;
}

// -------------------------------------------------------------------

// PBItemSkillBook

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemSkillBook::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemSkillBook::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemSkillBook::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemSkillBook::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 Color = 2;
inline bool PBItemSkillBook::has_color() const {
  return _has_bit(1);
}
inline void PBItemSkillBook::clear_color() {
  color_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemSkillBook::color() const {
  return color_;
}
inline void PBItemSkillBook::set_color(::google::protobuf::uint32 value) {
  _set_bit(1);
  color_ = value;
}

// optional uint32 SkillID = 3;
inline bool PBItemSkillBook::has_skillid() const {
  return _has_bit(2);
}
inline void PBItemSkillBook::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemSkillBook::skillid() const {
  return skillid_;
}
inline void PBItemSkillBook::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(2);
  skillid_ = value;
}

// optional uint32 SuccProb = 4;
inline bool PBItemSkillBook::has_succprob() const {
  return _has_bit(3);
}
inline void PBItemSkillBook::clear_succprob() {
  succprob_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemSkillBook::succprob() const {
  return succprob_;
}
inline void PBItemSkillBook::set_succprob(::google::protobuf::uint32 value) {
  _set_bit(3);
  succprob_ = value;
}

// optional uint32 NeedMoneyType = 5;
inline bool PBItemSkillBook::has_needmoneytype() const {
  return _has_bit(4);
}
inline void PBItemSkillBook::clear_needmoneytype() {
  needmoneytype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemSkillBook::needmoneytype() const {
  return needmoneytype_;
}
inline void PBItemSkillBook::set_needmoneytype(::google::protobuf::uint32 value) {
  _set_bit(4);
  needmoneytype_ = value;
}

// optional uint32 NeedMoney = 6;
inline bool PBItemSkillBook::has_needmoney() const {
  return _has_bit(5);
}
inline void PBItemSkillBook::clear_needmoney() {
  needmoney_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemSkillBook::needmoney() const {
  return needmoney_;
}
inline void PBItemSkillBook::set_needmoney(::google::protobuf::uint32 value) {
  _set_bit(5);
  needmoney_ = value;
}

// -------------------------------------------------------------------

// PBItemBindStone

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemBindStone::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemBindStone::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemBindStone::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemBindStone::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 FaceGroupID = 2;
inline bool PBItemBindStone::has_facegroupid() const {
  return _has_bit(1);
}
inline void PBItemBindStone::clear_facegroupid() {
  facegroupid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemBindStone::facegroupid() const {
  return facegroupid_;
}
inline void PBItemBindStone::set_facegroupid(::google::protobuf::uint32 value) {
  _set_bit(1);
  facegroupid_ = value;
}

// optional uint32 BindStoneType = 3;
inline bool PBItemBindStone::has_bindstonetype() const {
  return _has_bit(2);
}
inline void PBItemBindStone::clear_bindstonetype() {
  bindstonetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemBindStone::bindstonetype() const {
  return bindstonetype_;
}
inline void PBItemBindStone::set_bindstonetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  bindstonetype_ = value;
}

// -------------------------------------------------------------------

// PBItemScroll

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemScroll::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemScroll::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemScroll::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemScroll::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 GetTaskID = 2;
inline bool PBItemScroll::has_gettaskid() const {
  return _has_bit(1);
}
inline void PBItemScroll::clear_gettaskid() {
  gettaskid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemScroll::gettaskid() const {
  return gettaskid_;
}
inline void PBItemScroll::set_gettaskid(::google::protobuf::uint32 value) {
  _set_bit(1);
  gettaskid_ = value;
}

// -------------------------------------------------------------------

// PBItemCall

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemCall::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemCall::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemCall::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemCall::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 CallNpcID = 2;
inline bool PBItemCall::has_callnpcid() const {
  return _has_bit(1);
}
inline void PBItemCall::clear_callnpcid() {
  callnpcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemCall::callnpcid() const {
  return callnpcid_;
}
inline void PBItemCall::set_callnpcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  callnpcid_ = value;
}

// optional int32 X = 3;
inline bool PBItemCall::has_x() const {
  return _has_bit(2);
}
inline void PBItemCall::clear_x() {
  x_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBItemCall::x() const {
  return x_;
}
inline void PBItemCall::set_x(::google::protobuf::int32 value) {
  _set_bit(2);
  x_ = value;
}

// optional int32 Y = 4;
inline bool PBItemCall::has_y() const {
  return _has_bit(3);
}
inline void PBItemCall::clear_y() {
  y_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PBItemCall::y() const {
  return y_;
}
inline void PBItemCall::set_y(::google::protobuf::int32 value) {
  _set_bit(3);
  y_ = value;
}

// optional int32 IsDestroy = 5;
inline bool PBItemCall::has_isdestroy() const {
  return _has_bit(4);
}
inline void PBItemCall::clear_isdestroy() {
  isdestroy_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 PBItemCall::isdestroy() const {
  return isdestroy_;
}
inline void PBItemCall::set_isdestroy(::google::protobuf::int32 value) {
  _set_bit(4);
  isdestroy_ = value;
}

// optional int32 MapID = 6;
inline bool PBItemCall::has_mapid() const {
  return _has_bit(5);
}
inline void PBItemCall::clear_mapid() {
  mapid_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PBItemCall::mapid() const {
  return mapid_;
}
inline void PBItemCall::set_mapid(::google::protobuf::int32 value) {
  _set_bit(5);
  mapid_ = value;
}

// optional int32 LmtMapID = 7;
inline bool PBItemCall::has_lmtmapid() const {
  return _has_bit(6);
}
inline void PBItemCall::clear_lmtmapid() {
  lmtmapid_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 PBItemCall::lmtmapid() const {
  return lmtmapid_;
}
inline void PBItemCall::set_lmtmapid(::google::protobuf::int32 value) {
  _set_bit(6);
  lmtmapid_ = value;
}

// optional int32 LmtX = 8;
inline bool PBItemCall::has_lmtx() const {
  return _has_bit(7);
}
inline void PBItemCall::clear_lmtx() {
  lmtx_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 PBItemCall::lmtx() const {
  return lmtx_;
}
inline void PBItemCall::set_lmtx(::google::protobuf::int32 value) {
  _set_bit(7);
  lmtx_ = value;
}

// optional int32 LmtY = 9;
inline bool PBItemCall::has_lmty() const {
  return _has_bit(8);
}
inline void PBItemCall::clear_lmty() {
  lmty_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 PBItemCall::lmty() const {
  return lmty_;
}
inline void PBItemCall::set_lmty(::google::protobuf::int32 value) {
  _set_bit(8);
  lmty_ = value;
}

// optional int32 LmtWide = 10;
inline bool PBItemCall::has_lmtwide() const {
  return _has_bit(9);
}
inline void PBItemCall::clear_lmtwide() {
  lmtwide_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 PBItemCall::lmtwide() const {
  return lmtwide_;
}
inline void PBItemCall::set_lmtwide(::google::protobuf::int32 value) {
  _set_bit(9);
  lmtwide_ = value;
}

// optional int32 LmtHeight = 11;
inline bool PBItemCall::has_lmtheight() const {
  return _has_bit(10);
}
inline void PBItemCall::clear_lmtheight() {
  lmtheight_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 PBItemCall::lmtheight() const {
  return lmtheight_;
}
inline void PBItemCall::set_lmtheight(::google::protobuf::int32 value) {
  _set_bit(10);
  lmtheight_ = value;
}

// -------------------------------------------------------------------

// PBItemCard

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemCard::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemCard::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemCard::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemCard::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional string ShowText = 2;
inline bool PBItemCard::has_showtext() const {
  return _has_bit(1);
}
inline void PBItemCard::clear_showtext() {
  if (showtext_ != &_default_showtext_) {
    showtext_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBItemCard::showtext() const {
  return *showtext_;
}
inline void PBItemCard::set_showtext(const ::std::string& value) {
  _set_bit(1);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(value);
}
inline void PBItemCard::set_showtext(const char* value) {
  _set_bit(1);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(value);
}
inline void PBItemCard::set_showtext(const char* value, size_t size) {
  _set_bit(1);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemCard::mutable_showtext() {
  _set_bit(1);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  return showtext_;
}

// optional uint32 Order = 3;
inline bool PBItemCard::has_order() const {
  return _has_bit(2);
}
inline void PBItemCard::clear_order() {
  order_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemCard::order() const {
  return order_;
}
inline void PBItemCard::set_order(::google::protobuf::uint32 value) {
  _set_bit(2);
  order_ = value;
}

// optional string Weapon = 4;
inline bool PBItemCard::has_weapon() const {
  return _has_bit(3);
}
inline void PBItemCard::clear_weapon() {
  if (weapon_ != &_default_weapon_) {
    weapon_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBItemCard::weapon() const {
  return *weapon_;
}
inline void PBItemCard::set_weapon(const ::std::string& value) {
  _set_bit(3);
  if (weapon_ == &_default_weapon_) {
    weapon_ = new ::std::string;
  }
  weapon_->assign(value);
}
inline void PBItemCard::set_weapon(const char* value) {
  _set_bit(3);
  if (weapon_ == &_default_weapon_) {
    weapon_ = new ::std::string;
  }
  weapon_->assign(value);
}
inline void PBItemCard::set_weapon(const char* value, size_t size) {
  _set_bit(3);
  if (weapon_ == &_default_weapon_) {
    weapon_ = new ::std::string;
  }
  weapon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemCard::mutable_weapon() {
  _set_bit(3);
  if (weapon_ == &_default_weapon_) {
    weapon_ = new ::std::string;
  }
  return weapon_;
}

// optional string Skill = 5;
inline bool PBItemCard::has_skill() const {
  return _has_bit(4);
}
inline void PBItemCard::clear_skill() {
  if (skill_ != &_default_skill_) {
    skill_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& PBItemCard::skill() const {
  return *skill_;
}
inline void PBItemCard::set_skill(const ::std::string& value) {
  _set_bit(4);
  if (skill_ == &_default_skill_) {
    skill_ = new ::std::string;
  }
  skill_->assign(value);
}
inline void PBItemCard::set_skill(const char* value) {
  _set_bit(4);
  if (skill_ == &_default_skill_) {
    skill_ = new ::std::string;
  }
  skill_->assign(value);
}
inline void PBItemCard::set_skill(const char* value, size_t size) {
  _set_bit(4);
  if (skill_ == &_default_skill_) {
    skill_ = new ::std::string;
  }
  skill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemCard::mutable_skill() {
  _set_bit(4);
  if (skill_ == &_default_skill_) {
    skill_ = new ::std::string;
  }
  return skill_;
}

// optional string Level = 6;
inline bool PBItemCard::has_level() const {
  return _has_bit(5);
}
inline void PBItemCard::clear_level() {
  if (level_ != &_default_level_) {
    level_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& PBItemCard::level() const {
  return *level_;
}
inline void PBItemCard::set_level(const ::std::string& value) {
  _set_bit(5);
  if (level_ == &_default_level_) {
    level_ = new ::std::string;
  }
  level_->assign(value);
}
inline void PBItemCard::set_level(const char* value) {
  _set_bit(5);
  if (level_ == &_default_level_) {
    level_ = new ::std::string;
  }
  level_->assign(value);
}
inline void PBItemCard::set_level(const char* value, size_t size) {
  _set_bit(5);
  if (level_ == &_default_level_) {
    level_ = new ::std::string;
  }
  level_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemCard::mutable_level() {
  _set_bit(5);
  if (level_ == &_default_level_) {
    level_ = new ::std::string;
  }
  return level_;
}

// optional uint32 Exp = 7;
inline bool PBItemCard::has_exp() const {
  return _has_bit(6);
}
inline void PBItemCard::clear_exp() {
  exp_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemCard::exp() const {
  return exp_;
}
inline void PBItemCard::set_exp(::google::protobuf::uint32 value) {
  _set_bit(6);
  exp_ = value;
}

// optional uint32 CanExchange = 8;
inline bool PBItemCard::has_canexchange() const {
  return _has_bit(7);
}
inline void PBItemCard::clear_canexchange() {
  canexchange_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemCard::canexchange() const {
  return canexchange_;
}
inline void PBItemCard::set_canexchange(::google::protobuf::uint32 value) {
  _set_bit(7);
  canexchange_ = value;
}

// optional uint32 CanChallenge = 9;
inline bool PBItemCard::has_canchallenge() const {
  return _has_bit(8);
}
inline void PBItemCard::clear_canchallenge() {
  canchallenge_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemCard::canchallenge() const {
  return canchallenge_;
}
inline void PBItemCard::set_canchallenge(::google::protobuf::uint32 value) {
  _set_bit(8);
  canchallenge_ = value;
}

// optional uint32 Type = 10;
inline bool PBItemCard::has_type() const {
  return _has_bit(9);
}
inline void PBItemCard::clear_type() {
  type_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemCard::type() const {
  return type_;
}
inline void PBItemCard::set_type(::google::protobuf::uint32 value) {
  _set_bit(9);
  type_ = value;
}

// optional uint32 Pos = 11;
inline bool PBItemCard::has_pos() const {
  return _has_bit(10);
}
inline void PBItemCard::clear_pos() {
  pos_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemCard::pos() const {
  return pos_;
}
inline void PBItemCard::set_pos(::google::protobuf::uint32 value) {
  _set_bit(10);
  pos_ = value;
}

// optional uint32 Bonus = 12;
inline bool PBItemCard::has_bonus() const {
  return _has_bit(11);
}
inline void PBItemCard::clear_bonus() {
  bonus_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemCard::bonus() const {
  return bonus_;
}
inline void PBItemCard::set_bonus(::google::protobuf::uint32 value) {
  _set_bit(11);
  bonus_ = value;
}

// optional uint32 SkillID1 = 13;
inline bool PBItemCard::has_skillid1() const {
  return _has_bit(12);
}
inline void PBItemCard::clear_skillid1() {
  skillid1_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemCard::skillid1() const {
  return skillid1_;
}
inline void PBItemCard::set_skillid1(::google::protobuf::uint32 value) {
  _set_bit(12);
  skillid1_ = value;
}

// optional uint32 SkillID2 = 14;
inline bool PBItemCard::has_skillid2() const {
  return _has_bit(13);
}
inline void PBItemCard::clear_skillid2() {
  skillid2_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemCard::skillid2() const {
  return skillid2_;
}
inline void PBItemCard::set_skillid2(::google::protobuf::uint32 value) {
  _set_bit(13);
  skillid2_ = value;
}

// -------------------------------------------------------------------

// PBItemTeleport

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemTeleport::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemTeleport::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemTeleport::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemTeleport::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 MapID = 2;
inline bool PBItemTeleport::has_mapid() const {
  return _has_bit(1);
}
inline void PBItemTeleport::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemTeleport::mapid() const {
  return mapid_;
}
inline void PBItemTeleport::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 UseTimes = 3;
inline bool PBItemTeleport::has_usetimes() const {
  return _has_bit(2);
}
inline void PBItemTeleport::clear_usetimes() {
  usetimes_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemTeleport::usetimes() const {
  return usetimes_;
}
inline void PBItemTeleport::set_usetimes(::google::protobuf::uint32 value) {
  _set_bit(2);
  usetimes_ = value;
}

// -------------------------------------------------------------------

// PBItemReturnPaper

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemReturnPaper::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemReturnPaper::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemReturnPaper::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemReturnPaper::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 LineID = 2;
inline bool PBItemReturnPaper::has_lineid() const {
  return _has_bit(1);
}
inline void PBItemReturnPaper::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemReturnPaper::lineid() const {
  return lineid_;
}
inline void PBItemReturnPaper::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 MapID = 3;
inline bool PBItemReturnPaper::has_mapid() const {
  return _has_bit(2);
}
inline void PBItemReturnPaper::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemReturnPaper::mapid() const {
  return mapid_;
}
inline void PBItemReturnPaper::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 PosX = 4;
inline bool PBItemReturnPaper::has_posx() const {
  return _has_bit(3);
}
inline void PBItemReturnPaper::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemReturnPaper::posx() const {
  return posx_;
}
inline void PBItemReturnPaper::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool PBItemReturnPaper::has_posy() const {
  return _has_bit(4);
}
inline void PBItemReturnPaper::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemReturnPaper::posy() const {
  return posy_;
}
inline void PBItemReturnPaper::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// -------------------------------------------------------------------

// PBItemTeleSymbol

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemTeleSymbol::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemTeleSymbol::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemTeleSymbol::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemTeleSymbol::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 TeleTable = 2;
inline bool PBItemTeleSymbol::has_teletable() const {
  return _has_bit(1);
}
inline void PBItemTeleSymbol::clear_teletable() {
  teletable_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemTeleSymbol::teletable() const {
  return teletable_;
}
inline void PBItemTeleSymbol::set_teletable(::google::protobuf::uint32 value) {
  _set_bit(1);
  teletable_ = value;
}

// optional uint32 UseTimes = 3;
inline bool PBItemTeleSymbol::has_usetimes() const {
  return _has_bit(2);
}
inline void PBItemTeleSymbol::clear_usetimes() {
  usetimes_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemTeleSymbol::usetimes() const {
  return usetimes_;
}
inline void PBItemTeleSymbol::set_usetimes(::google::protobuf::uint32 value) {
  _set_bit(2);
  usetimes_ = value;
}

// -------------------------------------------------------------------

// PBItemStove

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemStove::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemStove::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemStove::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemStove::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 LineID = 2;
inline bool PBItemStove::has_lineid() const {
  return _has_bit(1);
}
inline void PBItemStove::clear_lineid() {
  lineid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemStove::lineid() const {
  return lineid_;
}
inline void PBItemStove::set_lineid(::google::protobuf::uint32 value) {
  _set_bit(1);
  lineid_ = value;
}

// optional uint32 MapID = 3;
inline bool PBItemStove::has_mapid() const {
  return _has_bit(2);
}
inline void PBItemStove::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemStove::mapid() const {
  return mapid_;
}
inline void PBItemStove::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 PosX = 4;
inline bool PBItemStove::has_posx() const {
  return _has_bit(3);
}
inline void PBItemStove::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemStove::posx() const {
  return posx_;
}
inline void PBItemStove::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool PBItemStove::has_posy() const {
  return _has_bit(4);
}
inline void PBItemStove::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemStove::posy() const {
  return posy_;
}
inline void PBItemStove::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional uint32 CoolTime = 6;
inline bool PBItemStove::has_cooltime() const {
  return _has_bit(5);
}
inline void PBItemStove::clear_cooltime() {
  cooltime_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemStove::cooltime() const {
  return cooltime_;
}
inline void PBItemStove::set_cooltime(::google::protobuf::uint32 value) {
  _set_bit(5);
  cooltime_ = value;
}

// optional uint32 MetierLimit = 7;
inline bool PBItemStove::has_metierlimit() const {
  return _has_bit(6);
}
inline void PBItemStove::clear_metierlimit() {
  metierlimit_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemStove::metierlimit() const {
  return metierlimit_;
}
inline void PBItemStove::set_metierlimit(::google::protobuf::uint32 value) {
  _set_bit(6);
  metierlimit_ = value;
}

// optional uint32 LevelLimit = 8;
inline bool PBItemStove::has_levellimit() const {
  return _has_bit(7);
}
inline void PBItemStove::clear_levellimit() {
  levellimit_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemStove::levellimit() const {
  return levellimit_;
}
inline void PBItemStove::set_levellimit(::google::protobuf::uint32 value) {
  _set_bit(7);
  levellimit_ = value;
}

// -------------------------------------------------------------------

// PBItemPetEgg

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemPetEgg::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemPetEgg::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemPetEgg::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemPetEgg::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 PetTempID = 2;
inline bool PBItemPetEgg::has_pettempid() const {
  return _has_bit(1);
}
inline void PBItemPetEgg::clear_pettempid() {
  pettempid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemPetEgg::pettempid() const {
  return pettempid_;
}
inline void PBItemPetEgg::set_pettempid(::google::protobuf::uint32 value) {
  _set_bit(1);
  pettempid_ = value;
}

// optional uint32 NeedItemID = 3;
inline bool PBItemPetEgg::has_needitemid() const {
  return _has_bit(2);
}
inline void PBItemPetEgg::clear_needitemid() {
  needitemid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemPetEgg::needitemid() const {
  return needitemid_;
}
inline void PBItemPetEgg::set_needitemid(::google::protobuf::uint32 value) {
  _set_bit(2);
  needitemid_ = value;
}

// optional uint32 RevertPrice = 4;
inline bool PBItemPetEgg::has_revertprice() const {
  return _has_bit(3);
}
inline void PBItemPetEgg::clear_revertprice() {
  revertprice_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemPetEgg::revertprice() const {
  return revertprice_;
}
inline void PBItemPetEgg::set_revertprice(::google::protobuf::uint32 value) {
  _set_bit(3);
  revertprice_ = value;
}

// optional uint32 InitAdvice = 5;
inline bool PBItemPetEgg::has_initadvice() const {
  return _has_bit(4);
}
inline void PBItemPetEgg::clear_initadvice() {
  initadvice_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemPetEgg::initadvice() const {
  return initadvice_;
}
inline void PBItemPetEgg::set_initadvice(::google::protobuf::uint32 value) {
  _set_bit(4);
  initadvice_ = value;
}

// optional uint32 InitLevel = 6;
inline bool PBItemPetEgg::has_initlevel() const {
  return _has_bit(5);
}
inline void PBItemPetEgg::clear_initlevel() {
  initlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemPetEgg::initlevel() const {
  return initlevel_;
}
inline void PBItemPetEgg::set_initlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  initlevel_ = value;
}

// optional uint32 InitExp = 7;
inline bool PBItemPetEgg::has_initexp() const {
  return _has_bit(6);
}
inline void PBItemPetEgg::clear_initexp() {
  initexp_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemPetEgg::initexp() const {
  return initexp_;
}
inline void PBItemPetEgg::set_initexp(::google::protobuf::uint32 value) {
  _set_bit(6);
  initexp_ = value;
}

// optional uint32 InitSkillPoint = 8;
inline bool PBItemPetEgg::has_initskillpoint() const {
  return _has_bit(7);
}
inline void PBItemPetEgg::clear_initskillpoint() {
  initskillpoint_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemPetEgg::initskillpoint() const {
  return initskillpoint_;
}
inline void PBItemPetEgg::set_initskillpoint(::google::protobuf::uint32 value) {
  _set_bit(7);
  initskillpoint_ = value;
}

// repeated uint32 InitSkillID = 9;
inline int PBItemPetEgg::initskillid_size() const {
  return initskillid_.size();
}
inline void PBItemPetEgg::clear_initskillid() {
  initskillid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemPetEgg::initskillid() const {
  return initskillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemPetEgg::mutable_initskillid() {
  return &initskillid_;
}
inline ::google::protobuf::uint32 PBItemPetEgg::initskillid(int index) const {
  return initskillid_.Get(index);
}
inline void PBItemPetEgg::set_initskillid(int index, ::google::protobuf::uint32 value) {
  initskillid_.Set(index, value);
}
inline void PBItemPetEgg::add_initskillid(::google::protobuf::uint32 value) {
  initskillid_.Add(value);
}

// repeated uint32 InitSkillLevel = 10;
inline int PBItemPetEgg::initskilllevel_size() const {
  return initskilllevel_.size();
}
inline void PBItemPetEgg::clear_initskilllevel() {
  initskilllevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemPetEgg::initskilllevel() const {
  return initskilllevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemPetEgg::mutable_initskilllevel() {
  return &initskilllevel_;
}
inline ::google::protobuf::uint32 PBItemPetEgg::initskilllevel(int index) const {
  return initskilllevel_.Get(index);
}
inline void PBItemPetEgg::set_initskilllevel(int index, ::google::protobuf::uint32 value) {
  initskilllevel_.Set(index, value);
}
inline void PBItemPetEgg::add_initskilllevel(::google::protobuf::uint32 value) {
  initskilllevel_.Add(value);
}

// -------------------------------------------------------------------

// PBItemPetFood

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemPetFood::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemPetFood::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemPetFood::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemPetFood::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 InitLevel = 2;
inline bool PBItemPetFood::has_initlevel() const {
  return _has_bit(1);
}
inline void PBItemPetFood::clear_initlevel() {
  initlevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemPetFood::initlevel() const {
  return initlevel_;
}
inline void PBItemPetFood::set_initlevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  initlevel_ = value;
}

// optional uint32 FullLevel = 3;
inline bool PBItemPetFood::has_fulllevel() const {
  return _has_bit(2);
}
inline void PBItemPetFood::clear_fulllevel() {
  fulllevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemPetFood::fulllevel() const {
  return fulllevel_;
}
inline void PBItemPetFood::set_fulllevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  fulllevel_ = value;
}

// optional uint32 TypeMask = 4;
inline bool PBItemPetFood::has_typemask() const {
  return _has_bit(3);
}
inline void PBItemPetFood::clear_typemask() {
  typemask_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemPetFood::typemask() const {
  return typemask_;
}
inline void PBItemPetFood::set_typemask(::google::protobuf::uint32 value) {
  _set_bit(3);
  typemask_ = value;
}

// -------------------------------------------------------------------

// PBItemRelife

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemRelife::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemRelife::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemRelife::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemRelife::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 Timer = 2;
inline bool PBItemRelife::has_timer() const {
  return _has_bit(1);
}
inline void PBItemRelife::clear_timer() {
  timer_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemRelife::timer() const {
  return timer_;
}
inline void PBItemRelife::set_timer(::google::protobuf::uint32 value) {
  _set_bit(1);
  timer_ = value;
}

// optional uint32 CoolTime = 3;
inline bool PBItemRelife::has_cooltime() const {
  return _has_bit(2);
}
inline void PBItemRelife::clear_cooltime() {
  cooltime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemRelife::cooltime() const {
  return cooltime_;
}
inline void PBItemRelife::set_cooltime(::google::protobuf::uint32 value) {
  _set_bit(2);
  cooltime_ = value;
}

// optional uint32 ShareCD = 4;
inline bool PBItemRelife::has_sharecd() const {
  return _has_bit(3);
}
inline void PBItemRelife::clear_sharecd() {
  sharecd_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemRelife::sharecd() const {
  return sharecd_;
}
inline void PBItemRelife::set_sharecd(::google::protobuf::uint32 value) {
  _set_bit(3);
  sharecd_ = value;
}

// -------------------------------------------------------------------

// PBItemSkill

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemSkill::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemSkill::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemSkill::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemSkill::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 LevelLimit = 2;
inline bool PBItemSkill::has_levellimit() const {
  return _has_bit(1);
}
inline void PBItemSkill::clear_levellimit() {
  levellimit_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemSkill::levellimit() const {
  return levellimit_;
}
inline void PBItemSkill::set_levellimit(::google::protobuf::uint32 value) {
  _set_bit(1);
  levellimit_ = value;
}

// optional uint32 SkillID = 3;
inline bool PBItemSkill::has_skillid() const {
  return _has_bit(2);
}
inline void PBItemSkill::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemSkill::skillid() const {
  return skillid_;
}
inline void PBItemSkill::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(2);
  skillid_ = value;
}

// optional uint32 CoolTime = 4;
inline bool PBItemSkill::has_cooltime() const {
  return _has_bit(3);
}
inline void PBItemSkill::clear_cooltime() {
  cooltime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemSkill::cooltime() const {
  return cooltime_;
}
inline void PBItemSkill::set_cooltime(::google::protobuf::uint32 value) {
  _set_bit(3);
  cooltime_ = value;
}

// optional uint32 ShareCD = 5;
inline bool PBItemSkill::has_sharecd() const {
  return _has_bit(4);
}
inline void PBItemSkill::clear_sharecd() {
  sharecd_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemSkill::sharecd() const {
  return sharecd_;
}
inline void PBItemSkill::set_sharecd(::google::protobuf::uint32 value) {
  _set_bit(4);
  sharecd_ = value;
}

// optional uint32 OprType = 6;
inline bool PBItemSkill::has_oprtype() const {
  return _has_bit(5);
}
inline void PBItemSkill::clear_oprtype() {
  oprtype_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemSkill::oprtype() const {
  return oprtype_;
}
inline void PBItemSkill::set_oprtype(::google::protobuf::uint32 value) {
  _set_bit(5);
  oprtype_ = value;
}

// optional uint32 BuffID = 7;
inline bool PBItemSkill::has_buffid() const {
  return _has_bit(6);
}
inline void PBItemSkill::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemSkill::buffid() const {
  return buffid_;
}
inline void PBItemSkill::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(6);
  buffid_ = value;
}

// -------------------------------------------------------------------

// PBItemBook

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemBook::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemBook::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemBook::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemBook::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 OPType = 2;
inline bool PBItemBook::has_optype() const {
  return _has_bit(1);
}
inline void PBItemBook::clear_optype() {
  optype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemBook::optype() const {
  return optype_;
}
inline void PBItemBook::set_optype(::google::protobuf::uint32 value) {
  _set_bit(1);
  optype_ = value;
}

// -------------------------------------------------------------------

// PBItemUpg

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemUpg::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemUpg::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemUpg::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemUpg::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 MaxLevel = 2;
inline bool PBItemUpg::has_maxlevel() const {
  return _has_bit(1);
}
inline void PBItemUpg::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemUpg::maxlevel() const {
  return maxlevel_;
}
inline void PBItemUpg::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  maxlevel_ = value;
}

// optional uint32 Type = 3;
inline bool PBItemUpg::has_type() const {
  return _has_bit(2);
}
inline void PBItemUpg::clear_type() {
  type_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemUpg::type() const {
  return type_;
}
inline void PBItemUpg::set_type(::google::protobuf::uint32 value) {
  _set_bit(2);
  type_ = value;
}

// optional uint32 Limit = 4;
inline bool PBItemUpg::has_limit() const {
  return _has_bit(3);
}
inline void PBItemUpg::clear_limit() {
  limit_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemUpg::limit() const {
  return limit_;
}
inline void PBItemUpg::set_limit(::google::protobuf::uint32 value) {
  _set_bit(3);
  limit_ = value;
}

// optional uint32 Fail = 5;
inline bool PBItemUpg::has_fail() const {
  return _has_bit(4);
}
inline void PBItemUpg::clear_fail() {
  fail_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemUpg::fail() const {
  return fail_;
}
inline void PBItemUpg::set_fail(::google::protobuf::uint32 value) {
  _set_bit(4);
  fail_ = value;
}

// repeated uint32 Luck = 6;
inline int PBItemUpg::luck_size() const {
  return luck_.size();
}
inline void PBItemUpg::clear_luck() {
  luck_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemUpg::luck() const {
  return luck_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemUpg::mutable_luck() {
  return &luck_;
}
inline ::google::protobuf::uint32 PBItemUpg::luck(int index) const {
  return luck_.Get(index);
}
inline void PBItemUpg::set_luck(int index, ::google::protobuf::uint32 value) {
  luck_.Set(index, value);
}
inline void PBItemUpg::add_luck(::google::protobuf::uint32 value) {
  luck_.Add(value);
}

// optional uint32 UpType = 7;
inline bool PBItemUpg::has_uptype() const {
  return _has_bit(6);
}
inline void PBItemUpg::clear_uptype() {
  uptype_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemUpg::uptype() const {
  return uptype_;
}
inline void PBItemUpg::set_uptype(::google::protobuf::uint32 value) {
  _set_bit(6);
  uptype_ = value;
}

// -------------------------------------------------------------------

// PBItemUpgLuck

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemUpgLuck::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemUpgLuck::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemUpgLuck::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemUpgLuck::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 IncLuck1 = 2;
inline bool PBItemUpgLuck::has_incluck1() const {
  return _has_bit(1);
}
inline void PBItemUpgLuck::clear_incluck1() {
  incluck1_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemUpgLuck::incluck1() const {
  return incluck1_;
}
inline void PBItemUpgLuck::set_incluck1(::google::protobuf::uint32 value) {
  _set_bit(1);
  incluck1_ = value;
}

// optional uint32 IncLuck2 = 3;
inline bool PBItemUpgLuck::has_incluck2() const {
  return _has_bit(2);
}
inline void PBItemUpgLuck::clear_incluck2() {
  incluck2_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemUpgLuck::incluck2() const {
  return incluck2_;
}
inline void PBItemUpgLuck::set_incluck2(::google::protobuf::uint32 value) {
  _set_bit(2);
  incluck2_ = value;
}

// repeated uint32 IncLuck3 = 4;
inline int PBItemUpgLuck::incluck3_size() const {
  return incluck3_.size();
}
inline void PBItemUpgLuck::clear_incluck3() {
  incluck3_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemUpgLuck::incluck3() const {
  return incluck3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemUpgLuck::mutable_incluck3() {
  return &incluck3_;
}
inline ::google::protobuf::uint32 PBItemUpgLuck::incluck3(int index) const {
  return incluck3_.Get(index);
}
inline void PBItemUpgLuck::set_incluck3(int index, ::google::protobuf::uint32 value) {
  incluck3_.Set(index, value);
}
inline void PBItemUpgLuck::add_incluck3(::google::protobuf::uint32 value) {
  incluck3_.Add(value);
}

// optional uint32 Level = 5;
inline bool PBItemUpgLuck::has_level() const {
  return _has_bit(4);
}
inline void PBItemUpgLuck::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemUpgLuck::level() const {
  return level_;
}
inline void PBItemUpgLuck::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// -------------------------------------------------------------------

// PBItemUpgLeast

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemUpgLeast::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemUpgLeast::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemUpgLeast::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemUpgLeast::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 IncLuck1 = 2;
inline bool PBItemUpgLeast::has_incluck1() const {
  return _has_bit(1);
}
inline void PBItemUpgLeast::clear_incluck1() {
  incluck1_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemUpgLeast::incluck1() const {
  return incluck1_;
}
inline void PBItemUpgLeast::set_incluck1(::google::protobuf::uint32 value) {
  _set_bit(1);
  incluck1_ = value;
}

// optional uint32 IncLuck2 = 3;
inline bool PBItemUpgLeast::has_incluck2() const {
  return _has_bit(2);
}
inline void PBItemUpgLeast::clear_incluck2() {
  incluck2_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemUpgLeast::incluck2() const {
  return incluck2_;
}
inline void PBItemUpgLeast::set_incluck2(::google::protobuf::uint32 value) {
  _set_bit(2);
  incluck2_ = value;
}

// optional uint32 Type = 4;
inline bool PBItemUpgLeast::has_type() const {
  return _has_bit(3);
}
inline void PBItemUpgLeast::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemUpgLeast::type() const {
  return type_;
}
inline void PBItemUpgLeast::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// -------------------------------------------------------------------

// PBItemRemove

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemRemove::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemRemove::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemRemove::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemRemove::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// repeated uint32 Rand = 2;
inline int PBItemRemove::rand_size() const {
  return rand_.size();
}
inline void PBItemRemove::clear_rand() {
  rand_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemRemove::rand() const {
  return rand_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemRemove::mutable_rand() {
  return &rand_;
}
inline ::google::protobuf::uint32 PBItemRemove::rand(int index) const {
  return rand_.Get(index);
}
inline void PBItemRemove::set_rand(int index, ::google::protobuf::uint32 value) {
  rand_.Set(index, value);
}
inline void PBItemRemove::add_rand(::google::protobuf::uint32 value) {
  rand_.Add(value);
}

// optional uint32 Bind = 3;
inline bool PBItemRemove::has_bind() const {
  return _has_bit(2);
}
inline void PBItemRemove::clear_bind() {
  bind_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemRemove::bind() const {
  return bind_;
}
inline void PBItemRemove::set_bind(::google::protobuf::uint32 value) {
  _set_bit(2);
  bind_ = value;
}

// optional uint32 Level = 4;
inline bool PBItemRemove::has_level() const {
  return _has_bit(3);
}
inline void PBItemRemove::clear_level() {
  level_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemRemove::level() const {
  return level_;
}
inline void PBItemRemove::set_level(::google::protobuf::uint32 value) {
  _set_bit(3);
  level_ = value;
}

// optional uint32 Low = 5;
inline bool PBItemRemove::has_low() const {
  return _has_bit(4);
}
inline void PBItemRemove::clear_low() {
  low_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemRemove::low() const {
  return low_;
}
inline void PBItemRemove::set_low(::google::protobuf::uint32 value) {
  _set_bit(4);
  low_ = value;
}

// -------------------------------------------------------------------

// PBItemChange

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemChange::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemChange::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemChange::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemChange::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 Type = 2;
inline bool PBItemChange::has_type() const {
  return _has_bit(1);
}
inline void PBItemChange::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemChange::type() const {
  return type_;
}
inline void PBItemChange::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional uint32 Res = 3;
inline bool PBItemChange::has_res() const {
  return _has_bit(2);
}
inline void PBItemChange::clear_res() {
  res_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemChange::res() const {
  return res_;
}
inline void PBItemChange::set_res(::google::protobuf::uint32 value) {
  _set_bit(2);
  res_ = value;
}

// optional uint32 MetierRequire = 4;
inline bool PBItemChange::has_metierrequire() const {
  return _has_bit(3);
}
inline void PBItemChange::clear_metierrequire() {
  metierrequire_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemChange::metierrequire() const {
  return metierrequire_;
}
inline void PBItemChange::set_metierrequire(::google::protobuf::uint32 value) {
  _set_bit(3);
  metierrequire_ = value;
}

// -------------------------------------------------------------------

// PBItemQuestion

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemQuestion::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemQuestion::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemQuestion::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemQuestion::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// repeated uint32 QuestionRate = 2;
inline int PBItemQuestion::questionrate_size() const {
  return questionrate_.size();
}
inline void PBItemQuestion::clear_questionrate() {
  questionrate_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemQuestion::questionrate() const {
  return questionrate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemQuestion::mutable_questionrate() {
  return &questionrate_;
}
inline ::google::protobuf::uint32 PBItemQuestion::questionrate(int index) const {
  return questionrate_.Get(index);
}
inline void PBItemQuestion::set_questionrate(int index, ::google::protobuf::uint32 value) {
  questionrate_.Set(index, value);
}
inline void PBItemQuestion::add_questionrate(::google::protobuf::uint32 value) {
  questionrate_.Add(value);
}

// optional uint32 ExpAddRae = 3;
inline bool PBItemQuestion::has_expaddrae() const {
  return _has_bit(2);
}
inline void PBItemQuestion::clear_expaddrae() {
  expaddrae_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemQuestion::expaddrae() const {
  return expaddrae_;
}
inline void PBItemQuestion::set_expaddrae(::google::protobuf::uint32 value) {
  _set_bit(2);
  expaddrae_ = value;
}

// optional uint32 EachTimeLength = 4;
inline bool PBItemQuestion::has_eachtimelength() const {
  return _has_bit(3);
}
inline void PBItemQuestion::clear_eachtimelength() {
  eachtimelength_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemQuestion::eachtimelength() const {
  return eachtimelength_;
}
inline void PBItemQuestion::set_eachtimelength(::google::protobuf::uint32 value) {
  _set_bit(3);
  eachtimelength_ = value;
}

// optional uint32 TotalTimeLength = 5;
inline bool PBItemQuestion::has_totaltimelength() const {
  return _has_bit(4);
}
inline void PBItemQuestion::clear_totaltimelength() {
  totaltimelength_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemQuestion::totaltimelength() const {
  return totaltimelength_;
}
inline void PBItemQuestion::set_totaltimelength(::google::protobuf::uint32 value) {
  _set_bit(4);
  totaltimelength_ = value;
}

// optional uint32 RepeatTimeAllowed = 6;
inline bool PBItemQuestion::has_repeattimeallowed() const {
  return _has_bit(5);
}
inline void PBItemQuestion::clear_repeattimeallowed() {
  repeattimeallowed_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemQuestion::repeattimeallowed() const {
  return repeattimeallowed_;
}
inline void PBItemQuestion::set_repeattimeallowed(::google::protobuf::uint32 value) {
  _set_bit(5);
  repeattimeallowed_ = value;
}

// -------------------------------------------------------------------

// PBItemTask

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemTask::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemTask::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemTask::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemTask::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 UseTimes = 2;
inline bool PBItemTask::has_usetimes() const {
  return _has_bit(1);
}
inline void PBItemTask::clear_usetimes() {
  usetimes_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemTask::usetimes() const {
  return usetimes_;
}
inline void PBItemTask::set_usetimes(::google::protobuf::uint32 value) {
  _set_bit(1);
  usetimes_ = value;
}

// optional uint32 ValidTime = 3;
inline bool PBItemTask::has_validtime() const {
  return _has_bit(2);
}
inline void PBItemTask::clear_validtime() {
  validtime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemTask::validtime() const {
  return validtime_;
}
inline void PBItemTask::set_validtime(::google::protobuf::uint32 value) {
  _set_bit(2);
  validtime_ = value;
}

// optional string ShowText = 4;
inline bool PBItemTask::has_showtext() const {
  return _has_bit(3);
}
inline void PBItemTask::clear_showtext() {
  if (showtext_ != &_default_showtext_) {
    showtext_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBItemTask::showtext() const {
  return *showtext_;
}
inline void PBItemTask::set_showtext(const ::std::string& value) {
  _set_bit(3);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(value);
}
inline void PBItemTask::set_showtext(const char* value) {
  _set_bit(3);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(value);
}
inline void PBItemTask::set_showtext(const char* value, size_t size) {
  _set_bit(3);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemTask::mutable_showtext() {
  _set_bit(3);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  return showtext_;
}

// optional uint32 MapID = 5;
inline bool PBItemTask::has_mapid() const {
  return _has_bit(4);
}
inline void PBItemTask::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemTask::mapid() const {
  return mapid_;
}
inline void PBItemTask::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(4);
  mapid_ = value;
}

// optional uint32 PosX = 6;
inline bool PBItemTask::has_posx() const {
  return _has_bit(5);
}
inline void PBItemTask::clear_posx() {
  posx_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemTask::posx() const {
  return posx_;
}
inline void PBItemTask::set_posx(::google::protobuf::uint32 value) {
  _set_bit(5);
  posx_ = value;
}

// optional uint32 PosY = 7;
inline bool PBItemTask::has_posy() const {
  return _has_bit(6);
}
inline void PBItemTask::clear_posy() {
  posy_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemTask::posy() const {
  return posy_;
}
inline void PBItemTask::set_posy(::google::protobuf::uint32 value) {
  _set_bit(6);
  posy_ = value;
}

// optional uint32 Width = 8;
inline bool PBItemTask::has_width() const {
  return _has_bit(7);
}
inline void PBItemTask::clear_width() {
  width_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemTask::width() const {
  return width_;
}
inline void PBItemTask::set_width(::google::protobuf::uint32 value) {
  _set_bit(7);
  width_ = value;
}

// optional uint32 Height = 9;
inline bool PBItemTask::has_height() const {
  return _has_bit(8);
}
inline void PBItemTask::clear_height() {
  height_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemTask::height() const {
  return height_;
}
inline void PBItemTask::set_height(::google::protobuf::uint32 value) {
  _set_bit(8);
  height_ = value;
}

// optional uint32 GetTaskID = 10;
inline bool PBItemTask::has_gettaskid() const {
  return _has_bit(9);
}
inline void PBItemTask::clear_gettaskid() {
  gettaskid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemTask::gettaskid() const {
  return gettaskid_;
}
inline void PBItemTask::set_gettaskid(::google::protobuf::uint32 value) {
  _set_bit(9);
  gettaskid_ = value;
}

// optional uint32 GiveItemID = 11;
inline bool PBItemTask::has_giveitemid() const {
  return _has_bit(10);
}
inline void PBItemTask::clear_giveitemid() {
  giveitemid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemTask::giveitemid() const {
  return giveitemid_;
}
inline void PBItemTask::set_giveitemid(::google::protobuf::uint32 value) {
  _set_bit(10);
  giveitemid_ = value;
}

// optional uint32 ChangeTime = 12;
inline bool PBItemTask::has_changetime() const {
  return _has_bit(11);
}
inline void PBItemTask::clear_changetime() {
  changetime_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemTask::changetime() const {
  return changetime_;
}
inline void PBItemTask::set_changetime(::google::protobuf::uint32 value) {
  _set_bit(11);
  changetime_ = value;
}

// optional uint32 ChangeItem = 13;
inline bool PBItemTask::has_changeitem() const {
  return _has_bit(12);
}
inline void PBItemTask::clear_changeitem() {
  changeitem_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemTask::changeitem() const {
  return changeitem_;
}
inline void PBItemTask::set_changeitem(::google::protobuf::uint32 value) {
  _set_bit(12);
  changeitem_ = value;
}

// optional uint32 FailTaskID = 14;
inline bool PBItemTask::has_failtaskid() const {
  return _has_bit(13);
}
inline void PBItemTask::clear_failtaskid() {
  failtaskid_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemTask::failtaskid() const {
  return failtaskid_;
}
inline void PBItemTask::set_failtaskid(::google::protobuf::uint32 value) {
  _set_bit(13);
  failtaskid_ = value;
}

// -------------------------------------------------------------------

// PBItemStuff

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemStuff::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemStuff::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemStuff::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemStuff::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 ShowColor = 2;
inline bool PBItemStuff::has_showcolor() const {
  return _has_bit(1);
}
inline void PBItemStuff::clear_showcolor() {
  showcolor_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemStuff::showcolor() const {
  return showcolor_;
}
inline void PBItemStuff::set_showcolor(::google::protobuf::uint32 value) {
  _set_bit(1);
  showcolor_ = value;
}

// optional uint32 ComposeID = 3;
inline bool PBItemStuff::has_composeid() const {
  return _has_bit(2);
}
inline void PBItemStuff::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemStuff::composeid() const {
  return composeid_;
}
inline void PBItemStuff::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(2);
  composeid_ = value;
}

// -------------------------------------------------------------------

// PBItemExp

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemExp::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemExp::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemExp::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemExp::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 IncRate = 2;
inline bool PBItemExp::has_incrate() const {
  return _has_bit(1);
}
inline void PBItemExp::clear_incrate() {
  incrate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemExp::incrate() const {
  return incrate_;
}
inline void PBItemExp::set_incrate(::google::protobuf::uint32 value) {
  _set_bit(1);
  incrate_ = value;
}

// optional uint32 Time = 3;
inline bool PBItemExp::has_time() const {
  return _has_bit(2);
}
inline void PBItemExp::clear_time() {
  time_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemExp::time() const {
  return time_;
}
inline void PBItemExp::set_time(::google::protobuf::uint32 value) {
  _set_bit(2);
  time_ = value;
}

// -------------------------------------------------------------------

// PBItemChangeCamp

// optional uint32 TmpID = 1;
inline bool PBItemChangeCamp::has_tmpid() const {
  return _has_bit(0);
}
inline void PBItemChangeCamp::clear_tmpid() {
  tmpid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemChangeCamp::tmpid() const {
  return tmpid_;
}
inline void PBItemChangeCamp::set_tmpid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tmpid_ = value;
}

// optional uint32 m_itemId = 2;
inline bool PBItemChangeCamp::has_m_itemid() const {
  return _has_bit(1);
}
inline void PBItemChangeCamp::clear_m_itemid() {
  m_itemid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemChangeCamp::m_itemid() const {
  return m_itemid_;
}
inline void PBItemChangeCamp::set_m_itemid(::google::protobuf::uint32 value) {
  _set_bit(1);
  m_itemid_ = value;
}

// optional uint32 m_giftId = 3;
inline bool PBItemChangeCamp::has_m_giftid() const {
  return _has_bit(2);
}
inline void PBItemChangeCamp::clear_m_giftid() {
  m_giftid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemChangeCamp::m_giftid() const {
  return m_giftid_;
}
inline void PBItemChangeCamp::set_m_giftid(::google::protobuf::uint32 value) {
  _set_bit(2);
  m_giftid_ = value;
}

// optional uint32 m_cd_time = 4;
inline bool PBItemChangeCamp::has_m_cd_time() const {
  return _has_bit(3);
}
inline void PBItemChangeCamp::clear_m_cd_time() {
  m_cd_time_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemChangeCamp::m_cd_time() const {
  return m_cd_time_;
}
inline void PBItemChangeCamp::set_m_cd_time(::google::protobuf::uint32 value) {
  _set_bit(3);
  m_cd_time_ = value;
}

// -------------------------------------------------------------------

// PBComRuneUnit

// optional uint32 m_whitenum = 1;
inline bool PBComRuneUnit::has_m_whitenum() const {
  return _has_bit(0);
}
inline void PBComRuneUnit::clear_m_whitenum() {
  m_whitenum_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBComRuneUnit::m_whitenum() const {
  return m_whitenum_;
}
inline void PBComRuneUnit::set_m_whitenum(::google::protobuf::uint32 value) {
  _set_bit(0);
  m_whitenum_ = value;
}

// optional uint32 m_bluenum = 2;
inline bool PBComRuneUnit::has_m_bluenum() const {
  return _has_bit(1);
}
inline void PBComRuneUnit::clear_m_bluenum() {
  m_bluenum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBComRuneUnit::m_bluenum() const {
  return m_bluenum_;
}
inline void PBComRuneUnit::set_m_bluenum(::google::protobuf::uint32 value) {
  _set_bit(1);
  m_bluenum_ = value;
}

// optional uint32 m_purplenum = 3;
inline bool PBComRuneUnit::has_m_purplenum() const {
  return _has_bit(2);
}
inline void PBComRuneUnit::clear_m_purplenum() {
  m_purplenum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBComRuneUnit::m_purplenum() const {
  return m_purplenum_;
}
inline void PBComRuneUnit::set_m_purplenum(::google::protobuf::uint32 value) {
  _set_bit(2);
  m_purplenum_ = value;
}

// optional uint32 m_rand = 4;
inline bool PBComRuneUnit::has_m_rand() const {
  return _has_bit(3);
}
inline void PBComRuneUnit::clear_m_rand() {
  m_rand_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBComRuneUnit::m_rand() const {
  return m_rand_;
}
inline void PBComRuneUnit::set_m_rand(::google::protobuf::uint32 value) {
  _set_bit(3);
  m_rand_ = value;
}

// optional uint32 m_money = 5;
inline bool PBComRuneUnit::has_m_money() const {
  return _has_bit(4);
}
inline void PBComRuneUnit::clear_m_money() {
  m_money_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBComRuneUnit::m_money() const {
  return m_money_;
}
inline void PBComRuneUnit::set_m_money(::google::protobuf::uint32 value) {
  _set_bit(4);
  m_money_ = value;
}

// optional uint32 m_runeLevel = 6;
inline bool PBComRuneUnit::has_m_runelevel() const {
  return _has_bit(5);
}
inline void PBComRuneUnit::clear_m_runelevel() {
  m_runelevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBComRuneUnit::m_runelevel() const {
  return m_runelevel_;
}
inline void PBComRuneUnit::set_m_runelevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  m_runelevel_ = value;
}

// -------------------------------------------------------------------

// PBComRuneConfig

// optional uint32 TmpID = 1;
inline bool PBComRuneConfig::has_tmpid() const {
  return _has_bit(0);
}
inline void PBComRuneConfig::clear_tmpid() {
  tmpid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBComRuneConfig::tmpid() const {
  return tmpid_;
}
inline void PBComRuneConfig::set_tmpid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tmpid_ = value;
}

// optional uint32 m_upRuneRand = 2;
inline bool PBComRuneConfig::has_m_uprunerand() const {
  return _has_bit(1);
}
inline void PBComRuneConfig::clear_m_uprunerand() {
  m_uprunerand_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBComRuneConfig::m_uprunerand() const {
  return m_uprunerand_;
}
inline void PBComRuneConfig::set_m_uprunerand(::google::protobuf::uint32 value) {
  _set_bit(1);
  m_uprunerand_ = value;
}

// optional uint32 m_max = 3;
inline bool PBComRuneConfig::has_m_max() const {
  return _has_bit(2);
}
inline void PBComRuneConfig::clear_m_max() {
  m_max_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBComRuneConfig::m_max() const {
  return m_max_;
}
inline void PBComRuneConfig::set_m_max(::google::protobuf::uint32 value) {
  _set_bit(2);
  m_max_ = value;
}

// optional uint32 m_min = 4;
inline bool PBComRuneConfig::has_m_min() const {
  return _has_bit(3);
}
inline void PBComRuneConfig::clear_m_min() {
  m_min_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBComRuneConfig::m_min() const {
  return m_min_;
}
inline void PBComRuneConfig::set_m_min(::google::protobuf::uint32 value) {
  _set_bit(3);
  m_min_ = value;
}

// repeated .PBComRuneUnit m_upRuneUnit = 5;
inline int PBComRuneConfig::m_upruneunit_size() const {
  return m_upruneunit_.size();
}
inline void PBComRuneConfig::clear_m_upruneunit() {
  m_upruneunit_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBComRuneUnit >&
PBComRuneConfig::m_upruneunit() const {
  return m_upruneunit_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBComRuneUnit >*
PBComRuneConfig::mutable_m_upruneunit() {
  return &m_upruneunit_;
}
inline const ::PBComRuneUnit& PBComRuneConfig::m_upruneunit(int index) const {
  return m_upruneunit_.Get(index);
}
inline ::PBComRuneUnit* PBComRuneConfig::mutable_m_upruneunit(int index) {
  return m_upruneunit_.Mutable(index);
}
inline ::PBComRuneUnit* PBComRuneConfig::add_m_upruneunit() {
  return m_upruneunit_.Add();
}

// -------------------------------------------------------------------

// PBItemShout

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemShout::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemShout::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemShout::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemShout::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 FaceGroupID = 2;
inline bool PBItemShout::has_facegroupid() const {
  return _has_bit(1);
}
inline void PBItemShout::clear_facegroupid() {
  facegroupid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemShout::facegroupid() const {
  return facegroupid_;
}
inline void PBItemShout::set_facegroupid(::google::protobuf::uint32 value) {
  _set_bit(1);
  facegroupid_ = value;
}

// -------------------------------------------------------------------

// PBItemAutoShout

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemAutoShout::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemAutoShout::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemAutoShout::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemAutoShout::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 FaceGroupID = 2;
inline bool PBItemAutoShout::has_facegroupid() const {
  return _has_bit(1);
}
inline void PBItemAutoShout::clear_facegroupid() {
  facegroupid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemAutoShout::facegroupid() const {
  return facegroupid_;
}
inline void PBItemAutoShout::set_facegroupid(::google::protobuf::uint32 value) {
  _set_bit(1);
  facegroupid_ = value;
}

// -------------------------------------------------------------------

// PBItemPhysic

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemPhysic::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemPhysic::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemPhysic::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemPhysic::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 ShowType = 2;
inline bool PBItemPhysic::has_showtype() const {
  return _has_bit(1);
}
inline void PBItemPhysic::clear_showtype() {
  showtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemPhysic::showtype() const {
  return showtype_;
}
inline void PBItemPhysic::set_showtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  showtype_ = value;
}

// optional uint32 BuffID = 3;
inline bool PBItemPhysic::has_buffid() const {
  return _has_bit(2);
}
inline void PBItemPhysic::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemPhysic::buffid() const {
  return buffid_;
}
inline void PBItemPhysic::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(2);
  buffid_ = value;
}

// optional uint32 LevelLimit = 4;
inline bool PBItemPhysic::has_levellimit() const {
  return _has_bit(3);
}
inline void PBItemPhysic::clear_levellimit() {
  levellimit_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemPhysic::levellimit() const {
  return levellimit_;
}
inline void PBItemPhysic::set_levellimit(::google::protobuf::uint32 value) {
  _set_bit(3);
  levellimit_ = value;
}

// optional uint32 HPMaxValue = 5;
inline bool PBItemPhysic::has_hpmaxvalue() const {
  return _has_bit(4);
}
inline void PBItemPhysic::clear_hpmaxvalue() {
  hpmaxvalue_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemPhysic::hpmaxvalue() const {
  return hpmaxvalue_;
}
inline void PBItemPhysic::set_hpmaxvalue(::google::protobuf::uint32 value) {
  _set_bit(4);
  hpmaxvalue_ = value;
}

// optional uint32 HPTime = 6;
inline bool PBItemPhysic::has_hptime() const {
  return _has_bit(5);
}
inline void PBItemPhysic::clear_hptime() {
  hptime_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemPhysic::hptime() const {
  return hptime_;
}
inline void PBItemPhysic::set_hptime(::google::protobuf::uint32 value) {
  _set_bit(5);
  hptime_ = value;
}

// optional uint32 HPIncTime = 7;
inline bool PBItemPhysic::has_hpinctime() const {
  return _has_bit(6);
}
inline void PBItemPhysic::clear_hpinctime() {
  hpinctime_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemPhysic::hpinctime() const {
  return hpinctime_;
}
inline void PBItemPhysic::set_hpinctime(::google::protobuf::uint32 value) {
  _set_bit(6);
  hpinctime_ = value;
}

// optional uint32 HPInvValue = 8;
inline bool PBItemPhysic::has_hpinvvalue() const {
  return _has_bit(7);
}
inline void PBItemPhysic::clear_hpinvvalue() {
  hpinvvalue_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemPhysic::hpinvvalue() const {
  return hpinvvalue_;
}
inline void PBItemPhysic::set_hpinvvalue(::google::protobuf::uint32 value) {
  _set_bit(7);
  hpinvvalue_ = value;
}

// optional uint32 MPMaxValue = 9;
inline bool PBItemPhysic::has_mpmaxvalue() const {
  return _has_bit(8);
}
inline void PBItemPhysic::clear_mpmaxvalue() {
  mpmaxvalue_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemPhysic::mpmaxvalue() const {
  return mpmaxvalue_;
}
inline void PBItemPhysic::set_mpmaxvalue(::google::protobuf::uint32 value) {
  _set_bit(8);
  mpmaxvalue_ = value;
}

// optional uint32 MPTime = 10;
inline bool PBItemPhysic::has_mptime() const {
  return _has_bit(9);
}
inline void PBItemPhysic::clear_mptime() {
  mptime_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemPhysic::mptime() const {
  return mptime_;
}
inline void PBItemPhysic::set_mptime(::google::protobuf::uint32 value) {
  _set_bit(9);
  mptime_ = value;
}

// optional uint32 MPIncTime = 11;
inline bool PBItemPhysic::has_mpinctime() const {
  return _has_bit(10);
}
inline void PBItemPhysic::clear_mpinctime() {
  mpinctime_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemPhysic::mpinctime() const {
  return mpinctime_;
}
inline void PBItemPhysic::set_mpinctime(::google::protobuf::uint32 value) {
  _set_bit(10);
  mpinctime_ = value;
}

// optional uint32 MPInvValue = 12;
inline bool PBItemPhysic::has_mpinvvalue() const {
  return _has_bit(11);
}
inline void PBItemPhysic::clear_mpinvvalue() {
  mpinvvalue_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemPhysic::mpinvvalue() const {
  return mpinvvalue_;
}
inline void PBItemPhysic::set_mpinvvalue(::google::protobuf::uint32 value) {
  _set_bit(11);
  mpinvvalue_ = value;
}

// optional uint32 CoolTime = 13;
inline bool PBItemPhysic::has_cooltime() const {
  return _has_bit(12);
}
inline void PBItemPhysic::clear_cooltime() {
  cooltime_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemPhysic::cooltime() const {
  return cooltime_;
}
inline void PBItemPhysic::set_cooltime(::google::protobuf::uint32 value) {
  _set_bit(12);
  cooltime_ = value;
}

// optional uint32 ShareCD = 14;
inline bool PBItemPhysic::has_sharecd() const {
  return _has_bit(13);
}
inline void PBItemPhysic::clear_sharecd() {
  sharecd_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemPhysic::sharecd() const {
  return sharecd_;
}
inline void PBItemPhysic::set_sharecd(::google::protobuf::uint32 value) {
  _set_bit(13);
  sharecd_ = value;
}

// optional uint32 HPPercent = 15;
inline bool PBItemPhysic::has_hppercent() const {
  return _has_bit(14);
}
inline void PBItemPhysic::clear_hppercent() {
  hppercent_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBItemPhysic::hppercent() const {
  return hppercent_;
}
inline void PBItemPhysic::set_hppercent(::google::protobuf::uint32 value) {
  _set_bit(14);
  hppercent_ = value;
}

// optional uint32 MPPercent = 16;
inline bool PBItemPhysic::has_mppercent() const {
  return _has_bit(15);
}
inline void PBItemPhysic::clear_mppercent() {
  mppercent_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBItemPhysic::mppercent() const {
  return mppercent_;
}
inline void PBItemPhysic::set_mppercent(::google::protobuf::uint32 value) {
  _set_bit(15);
  mppercent_ = value;
}

// optional uint32 MaxHPPercent = 17;
inline bool PBItemPhysic::has_maxhppercent() const {
  return _has_bit(16);
}
inline void PBItemPhysic::clear_maxhppercent() {
  maxhppercent_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBItemPhysic::maxhppercent() const {
  return maxhppercent_;
}
inline void PBItemPhysic::set_maxhppercent(::google::protobuf::uint32 value) {
  _set_bit(16);
  maxhppercent_ = value;
}

// optional uint32 MaxMPPercent = 18;
inline bool PBItemPhysic::has_maxmppercent() const {
  return _has_bit(17);
}
inline void PBItemPhysic::clear_maxmppercent() {
  maxmppercent_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBItemPhysic::maxmppercent() const {
  return maxmppercent_;
}
inline void PBItemPhysic::set_maxmppercent(::google::protobuf::uint32 value) {
  _set_bit(17);
  maxmppercent_ = value;
}

// optional uint32 LifeSkilType = 19;
inline bool PBItemPhysic::has_lifeskiltype() const {
  return _has_bit(18);
}
inline void PBItemPhysic::clear_lifeskiltype() {
  lifeskiltype_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBItemPhysic::lifeskiltype() const {
  return lifeskiltype_;
}
inline void PBItemPhysic::set_lifeskiltype(::google::protobuf::uint32 value) {
  _set_bit(18);
  lifeskiltype_ = value;
}

// optional uint32 DegreeValue = 20;
inline bool PBItemPhysic::has_degreevalue() const {
  return _has_bit(19);
}
inline void PBItemPhysic::clear_degreevalue() {
  degreevalue_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBItemPhysic::degreevalue() const {
  return degreevalue_;
}
inline void PBItemPhysic::set_degreevalue(::google::protobuf::uint32 value) {
  _set_bit(19);
  degreevalue_ = value;
}

// optional uint32 PhisicType = 21;
inline bool PBItemPhysic::has_phisictype() const {
  return _has_bit(20);
}
inline void PBItemPhysic::clear_phisictype() {
  phisictype_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBItemPhysic::phisictype() const {
  return phisictype_;
}
inline void PBItemPhysic::set_phisictype(::google::protobuf::uint32 value) {
  _set_bit(20);
  phisictype_ = value;
}

// optional uint32 ApValue = 22;
inline bool PBItemPhysic::has_apvalue() const {
  return _has_bit(21);
}
inline void PBItemPhysic::clear_apvalue() {
  apvalue_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBItemPhysic::apvalue() const {
  return apvalue_;
}
inline void PBItemPhysic::set_apvalue(::google::protobuf::uint32 value) {
  _set_bit(21);
  apvalue_ = value;
}

// optional uint32 Color = 23;
inline bool PBItemPhysic::has_color() const {
  return _has_bit(22);
}
inline void PBItemPhysic::clear_color() {
  color_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBItemPhysic::color() const {
  return color_;
}
inline void PBItemPhysic::set_color(::google::protobuf::uint32 value) {
  _set_bit(22);
  color_ = value;
}

// -------------------------------------------------------------------

// PBItemHorse

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemHorse::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemHorse::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemHorse::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemHorse::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 MetierLimit = 2;
inline bool PBItemHorse::has_metierlimit() const {
  return _has_bit(1);
}
inline void PBItemHorse::clear_metierlimit() {
  metierlimit_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemHorse::metierlimit() const {
  return metierlimit_;
}
inline void PBItemHorse::set_metierlimit(::google::protobuf::uint32 value) {
  _set_bit(1);
  metierlimit_ = value;
}

// optional uint32 LevelLimit = 3;
inline bool PBItemHorse::has_levellimit() const {
  return _has_bit(2);
}
inline void PBItemHorse::clear_levellimit() {
  levellimit_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemHorse::levellimit() const {
  return levellimit_;
}
inline void PBItemHorse::set_levellimit(::google::protobuf::uint32 value) {
  _set_bit(2);
  levellimit_ = value;
}

// optional uint32 PersonLimit = 4;
inline bool PBItemHorse::has_personlimit() const {
  return _has_bit(3);
}
inline void PBItemHorse::clear_personlimit() {
  personlimit_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemHorse::personlimit() const {
  return personlimit_;
}
inline void PBItemHorse::set_personlimit(::google::protobuf::uint32 value) {
  _set_bit(3);
  personlimit_ = value;
}

// optional uint32 UseTime = 5;
inline bool PBItemHorse::has_usetime() const {
  return _has_bit(4);
}
inline void PBItemHorse::clear_usetime() {
  usetime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemHorse::usetime() const {
  return usetime_;
}
inline void PBItemHorse::set_usetime(::google::protobuf::uint32 value) {
  _set_bit(4);
  usetime_ = value;
}

// optional uint32 IncreaseSpeedPer = 6;
inline bool PBItemHorse::has_increasespeedper() const {
  return _has_bit(5);
}
inline void PBItemHorse::clear_increasespeedper() {
  increasespeedper_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemHorse::increasespeedper() const {
  return increasespeedper_;
}
inline void PBItemHorse::set_increasespeedper(::google::protobuf::uint32 value) {
  _set_bit(5);
  increasespeedper_ = value;
}

// optional string ModelName = 7;
inline bool PBItemHorse::has_modelname() const {
  return _has_bit(6);
}
inline void PBItemHorse::clear_modelname() {
  if (modelname_ != &_default_modelname_) {
    modelname_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& PBItemHorse::modelname() const {
  return *modelname_;
}
inline void PBItemHorse::set_modelname(const ::std::string& value) {
  _set_bit(6);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void PBItemHorse::set_modelname(const char* value) {
  _set_bit(6);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void PBItemHorse::set_modelname(const char* value, size_t size) {
  _set_bit(6);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemHorse::mutable_modelname() {
  _set_bit(6);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  return modelname_;
}

// optional uint32 CoolTime = 8;
inline bool PBItemHorse::has_cooltime() const {
  return _has_bit(7);
}
inline void PBItemHorse::clear_cooltime() {
  cooltime_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemHorse::cooltime() const {
  return cooltime_;
}
inline void PBItemHorse::set_cooltime(::google::protobuf::uint32 value) {
  _set_bit(7);
  cooltime_ = value;
}

// optional uint32 ShareCD = 9;
inline bool PBItemHorse::has_sharecd() const {
  return _has_bit(8);
}
inline void PBItemHorse::clear_sharecd() {
  sharecd_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemHorse::sharecd() const {
  return sharecd_;
}
inline void PBItemHorse::set_sharecd(::google::protobuf::uint32 value) {
  _set_bit(8);
  sharecd_ = value;
}

// optional uint32 SpeedBuff = 10;
inline bool PBItemHorse::has_speedbuff() const {
  return _has_bit(9);
}
inline void PBItemHorse::clear_speedbuff() {
  speedbuff_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemHorse::speedbuff() const {
  return speedbuff_;
}
inline void PBItemHorse::set_speedbuff(::google::protobuf::uint32 value) {
  _set_bit(9);
  speedbuff_ = value;
}

// optional uint32 UsingTime = 11;
inline bool PBItemHorse::has_usingtime() const {
  return _has_bit(10);
}
inline void PBItemHorse::clear_usingtime() {
  usingtime_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemHorse::usingtime() const {
  return usingtime_;
}
inline void PBItemHorse::set_usingtime(::google::protobuf::uint32 value) {
  _set_bit(10);
  usingtime_ = value;
}

// optional string ShowText = 12;
inline bool PBItemHorse::has_showtext() const {
  return _has_bit(11);
}
inline void PBItemHorse::clear_showtext() {
  if (showtext_ != &_default_showtext_) {
    showtext_->clear();
  }
  _clear_bit(11);
}
inline const ::std::string& PBItemHorse::showtext() const {
  return *showtext_;
}
inline void PBItemHorse::set_showtext(const ::std::string& value) {
  _set_bit(11);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(value);
}
inline void PBItemHorse::set_showtext(const char* value) {
  _set_bit(11);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(value);
}
inline void PBItemHorse::set_showtext(const char* value, size_t size) {
  _set_bit(11);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  showtext_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemHorse::mutable_showtext() {
  _set_bit(11);
  if (showtext_ == &_default_showtext_) {
    showtext_ = new ::std::string;
  }
  return showtext_;
}

// optional uint32 OffHorseProb = 13;
inline bool PBItemHorse::has_offhorseprob() const {
  return _has_bit(12);
}
inline void PBItemHorse::clear_offhorseprob() {
  offhorseprob_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemHorse::offhorseprob() const {
  return offhorseprob_;
}
inline void PBItemHorse::set_offhorseprob(::google::protobuf::uint32 value) {
  _set_bit(12);
  offhorseprob_ = value;
}

// optional uint32 OffBuffID = 14;
inline bool PBItemHorse::has_offbuffid() const {
  return _has_bit(13);
}
inline void PBItemHorse::clear_offbuffid() {
  offbuffid_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemHorse::offbuffid() const {
  return offbuffid_;
}
inline void PBItemHorse::set_offbuffid(::google::protobuf::uint32 value) {
  _set_bit(13);
  offbuffid_ = value;
}

// optional uint32 InitAP = 15;
inline bool PBItemHorse::has_initap() const {
  return _has_bit(14);
}
inline void PBItemHorse::clear_initap() {
  initap_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBItemHorse::initap() const {
  return initap_;
}
inline void PBItemHorse::set_initap(::google::protobuf::uint32 value) {
  _set_bit(14);
  initap_ = value;
}

// optional uint32 DeltaAP = 16;
inline bool PBItemHorse::has_deltaap() const {
  return _has_bit(15);
}
inline void PBItemHorse::clear_deltaap() {
  deltaap_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBItemHorse::deltaap() const {
  return deltaap_;
}
inline void PBItemHorse::set_deltaap(::google::protobuf::uint32 value) {
  _set_bit(15);
  deltaap_ = value;
}

// -------------------------------------------------------------------

// PBStuff

// optional uint32 StuffID = 1;
inline bool PBStuff::has_stuffid() const {
  return _has_bit(0);
}
inline void PBStuff::clear_stuffid() {
  stuffid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBStuff::stuffid() const {
  return stuffid_;
}
inline void PBStuff::set_stuffid(::google::protobuf::uint32 value) {
  _set_bit(0);
  stuffid_ = value;
}

// optional uint32 Number = 2;
inline bool PBStuff::has_number() const {
  return _has_bit(1);
}
inline void PBStuff::clear_number() {
  number_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBStuff::number() const {
  return number_;
}
inline void PBStuff::set_number(::google::protobuf::uint32 value) {
  _set_bit(1);
  number_ = value;
}

// -------------------------------------------------------------------

// PBProduct

// optional uint32 ProductID = 1;
inline bool PBProduct::has_productid() const {
  return _has_bit(0);
}
inline void PBProduct::clear_productid() {
  productid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBProduct::productid() const {
  return productid_;
}
inline void PBProduct::set_productid(::google::protobuf::uint32 value) {
  _set_bit(0);
  productid_ = value;
}

// optional uint32 Percent = 2;
inline bool PBProduct::has_percent() const {
  return _has_bit(1);
}
inline void PBProduct::clear_percent() {
  percent_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBProduct::percent() const {
  return percent_;
}
inline void PBProduct::set_percent(::google::protobuf::uint32 value) {
  _set_bit(1);
  percent_ = value;
}

// -------------------------------------------------------------------

// PBItemBluePrint

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemBluePrint::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemBluePrint::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemBluePrint::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemBluePrint::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 TempID = 2;
inline bool PBItemBluePrint::has_tempid() const {
  return _has_bit(1);
}
inline void PBItemBluePrint::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemBluePrint::tempid() const {
  return tempid_;
}
inline void PBItemBluePrint::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(1);
  tempid_ = value;
}

// optional uint32 NeedSkillID = 3;
inline bool PBItemBluePrint::has_needskillid() const {
  return _has_bit(2);
}
inline void PBItemBluePrint::clear_needskillid() {
  needskillid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemBluePrint::needskillid() const {
  return needskillid_;
}
inline void PBItemBluePrint::set_needskillid(::google::protobuf::uint32 value) {
  _set_bit(2);
  needskillid_ = value;
}

// optional uint32 NeedSkillLevel = 4;
inline bool PBItemBluePrint::has_needskilllevel() const {
  return _has_bit(3);
}
inline void PBItemBluePrint::clear_needskilllevel() {
  needskilllevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemBluePrint::needskilllevel() const {
  return needskilllevel_;
}
inline void PBItemBluePrint::set_needskilllevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  needskilllevel_ = value;
}

// optional uint32 ProduceCount = 5;
inline bool PBItemBluePrint::has_producecount() const {
  return _has_bit(4);
}
inline void PBItemBluePrint::clear_producecount() {
  producecount_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemBluePrint::producecount() const {
  return producecount_;
}
inline void PBItemBluePrint::set_producecount(::google::protobuf::uint32 value) {
  _set_bit(4);
  producecount_ = value;
}

// optional uint32 ProduceCost = 6;
inline bool PBItemBluePrint::has_producecost() const {
  return _has_bit(5);
}
inline void PBItemBluePrint::clear_producecost() {
  producecost_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemBluePrint::producecost() const {
  return producecost_;
}
inline void PBItemBluePrint::set_producecost(::google::protobuf::uint32 value) {
  _set_bit(5);
  producecost_ = value;
}

// optional uint32 ObtainExp = 7;
inline bool PBItemBluePrint::has_obtainexp() const {
  return _has_bit(6);
}
inline void PBItemBluePrint::clear_obtainexp() {
  obtainexp_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemBluePrint::obtainexp() const {
  return obtainexp_;
}
inline void PBItemBluePrint::set_obtainexp(::google::protobuf::uint32 value) {
  _set_bit(6);
  obtainexp_ = value;
}

// repeated .PBStuff Stuff = 8;
inline int PBItemBluePrint::stuff_size() const {
  return stuff_.size();
}
inline void PBItemBluePrint::clear_stuff() {
  stuff_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBStuff >&
PBItemBluePrint::stuff() const {
  return stuff_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBStuff >*
PBItemBluePrint::mutable_stuff() {
  return &stuff_;
}
inline const ::PBStuff& PBItemBluePrint::stuff(int index) const {
  return stuff_.Get(index);
}
inline ::PBStuff* PBItemBluePrint::mutable_stuff(int index) {
  return stuff_.Mutable(index);
}
inline ::PBStuff* PBItemBluePrint::add_stuff() {
  return stuff_.Add();
}

// repeated .PBProduct Product = 9;
inline int PBItemBluePrint::product_size() const {
  return product_.size();
}
inline void PBItemBluePrint::clear_product() {
  product_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBProduct >&
PBItemBluePrint::product() const {
  return product_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBProduct >*
PBItemBluePrint::mutable_product() {
  return &product_;
}
inline const ::PBProduct& PBItemBluePrint::product(int index) const {
  return product_.Get(index);
}
inline ::PBProduct* PBItemBluePrint::mutable_product(int index) {
  return product_.Mutable(index);
}
inline ::PBProduct* PBItemBluePrint::add_product() {
  return product_.Add();
}

// -------------------------------------------------------------------

// PBItemRune

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemRune::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemRune::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemRune::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemRune::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 SuitID = 2;
inline bool PBItemRune::has_suitid() const {
  return _has_bit(1);
}
inline void PBItemRune::clear_suitid() {
  suitid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemRune::suitid() const {
  return suitid_;
}
inline void PBItemRune::set_suitid(::google::protobuf::uint32 value) {
  _set_bit(1);
  suitid_ = value;
}

// optional string Word = 3;
inline bool PBItemRune::has_word() const {
  return _has_bit(2);
}
inline void PBItemRune::clear_word() {
  if (word_ != &_default_word_) {
    word_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBItemRune::word() const {
  return *word_;
}
inline void PBItemRune::set_word(const ::std::string& value) {
  _set_bit(2);
  if (word_ == &_default_word_) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void PBItemRune::set_word(const char* value) {
  _set_bit(2);
  if (word_ == &_default_word_) {
    word_ = new ::std::string;
  }
  word_->assign(value);
}
inline void PBItemRune::set_word(const char* value, size_t size) {
  _set_bit(2);
  if (word_ == &_default_word_) {
    word_ = new ::std::string;
  }
  word_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemRune::mutable_word() {
  _set_bit(2);
  if (word_ == &_default_word_) {
    word_ = new ::std::string;
  }
  return word_;
}

// optional uint32 OrderID = 4;
inline bool PBItemRune::has_orderid() const {
  return _has_bit(3);
}
inline void PBItemRune::clear_orderid() {
  orderid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemRune::orderid() const {
  return orderid_;
}
inline void PBItemRune::set_orderid(::google::protobuf::uint32 value) {
  _set_bit(3);
  orderid_ = value;
}

// optional uint32 InsertCharge = 5;
inline bool PBItemRune::has_insertcharge() const {
  return _has_bit(4);
}
inline void PBItemRune::clear_insertcharge() {
  insertcharge_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemRune::insertcharge() const {
  return insertcharge_;
}
inline void PBItemRune::set_insertcharge(::google::protobuf::uint32 value) {
  _set_bit(4);
  insertcharge_ = value;
}

// optional uint32 PropertyID = 6;
inline bool PBItemRune::has_propertyid() const {
  return _has_bit(5);
}
inline void PBItemRune::clear_propertyid() {
  propertyid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemRune::propertyid() const {
  return propertyid_;
}
inline void PBItemRune::set_propertyid(::google::protobuf::uint32 value) {
  _set_bit(5);
  propertyid_ = value;
}

// optional uint32 RuneIndex = 7;
inline bool PBItemRune::has_runeindex() const {
  return _has_bit(6);
}
inline void PBItemRune::clear_runeindex() {
  runeindex_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemRune::runeindex() const {
  return runeindex_;
}
inline void PBItemRune::set_runeindex(::google::protobuf::uint32 value) {
  _set_bit(6);
  runeindex_ = value;
}

// optional uint32 ShowColor = 8;
inline bool PBItemRune::has_showcolor() const {
  return _has_bit(7);
}
inline void PBItemRune::clear_showcolor() {
  showcolor_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemRune::showcolor() const {
  return showcolor_;
}
inline void PBItemRune::set_showcolor(::google::protobuf::uint32 value) {
  _set_bit(7);
  showcolor_ = value;
}

// -------------------------------------------------------------------

// PBItemJewel

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemJewel::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemJewel::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemJewel::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemJewel::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 TypeID = 2;
inline bool PBItemJewel::has_typeid_() const {
  return _has_bit(1);
}
inline void PBItemJewel::clear_typeid_() {
  typeid__ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemJewel::typeid_() const {
  return typeid__;
}
inline void PBItemJewel::set_typeid_(::google::protobuf::uint32 value) {
  _set_bit(1);
  typeid__ = value;
}

// optional uint32 Pos = 3;
inline bool PBItemJewel::has_pos() const {
  return _has_bit(2);
}
inline void PBItemJewel::clear_pos() {
  pos_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemJewel::pos() const {
  return pos_;
}
inline void PBItemJewel::set_pos(::google::protobuf::uint32 value) {
  _set_bit(2);
  pos_ = value;
}

// optional uint32 ShowColor = 4;
inline bool PBItemJewel::has_showcolor() const {
  return _has_bit(3);
}
inline void PBItemJewel::clear_showcolor() {
  showcolor_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemJewel::showcolor() const {
  return showcolor_;
}
inline void PBItemJewel::set_showcolor(::google::protobuf::uint32 value) {
  _set_bit(3);
  showcolor_ = value;
}

// optional uint32 Property = 5;
inline bool PBItemJewel::has_property() const {
  return _has_bit(4);
}
inline void PBItemJewel::clear_property() {
  property_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemJewel::property() const {
  return property_;
}
inline void PBItemJewel::set_property(::google::protobuf::uint32 value) {
  _set_bit(4);
  property_ = value;
}

// optional uint32 Unique = 6;
inline bool PBItemJewel::has_unique() const {
  return _has_bit(5);
}
inline void PBItemJewel::clear_unique() {
  unique_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemJewel::unique() const {
  return unique_;
}
inline void PBItemJewel::set_unique(::google::protobuf::uint32 value) {
  _set_bit(5);
  unique_ = value;
}

// repeated uint32 JewelID = 7;
inline int PBItemJewel::jewelid_size() const {
  return jewelid_.size();
}
inline void PBItemJewel::clear_jewelid() {
  jewelid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemJewel::jewelid() const {
  return jewelid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemJewel::mutable_jewelid() {
  return &jewelid_;
}
inline ::google::protobuf::uint32 PBItemJewel::jewelid(int index) const {
  return jewelid_.Get(index);
}
inline void PBItemJewel::set_jewelid(int index, ::google::protobuf::uint32 value) {
  jewelid_.Set(index, value);
}
inline void PBItemJewel::add_jewelid(::google::protobuf::uint32 value) {
  jewelid_.Add(value);
}

// optional uint32 ComposeID = 8;
inline bool PBItemJewel::has_composeid() const {
  return _has_bit(7);
}
inline void PBItemJewel::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemJewel::composeid() const {
  return composeid_;
}
inline void PBItemJewel::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(7);
  composeid_ = value;
}

// optional uint32 InsertCharge = 9;
inline bool PBItemJewel::has_insertcharge() const {
  return _has_bit(8);
}
inline void PBItemJewel::clear_insertcharge() {
  insertcharge_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemJewel::insertcharge() const {
  return insertcharge_;
}
inline void PBItemJewel::set_insertcharge(::google::protobuf::uint32 value) {
  _set_bit(8);
  insertcharge_ = value;
}

// optional uint32 RemoveCharge = 10;
inline bool PBItemJewel::has_removecharge() const {
  return _has_bit(9);
}
inline void PBItemJewel::clear_removecharge() {
  removecharge_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemJewel::removecharge() const {
  return removecharge_;
}
inline void PBItemJewel::set_removecharge(::google::protobuf::uint32 value) {
  _set_bit(9);
  removecharge_ = value;
}

// optional uint32 ComposeCharge = 11;
inline bool PBItemJewel::has_composecharge() const {
  return _has_bit(10);
}
inline void PBItemJewel::clear_composecharge() {
  composecharge_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemJewel::composecharge() const {
  return composecharge_;
}
inline void PBItemJewel::set_composecharge(::google::protobuf::uint32 value) {
  _set_bit(10);
  composecharge_ = value;
}

// optional uint32 Level = 12;
inline bool PBItemJewel::has_level() const {
  return _has_bit(11);
}
inline void PBItemJewel::clear_level() {
  level_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemJewel::level() const {
  return level_;
}
inline void PBItemJewel::set_level(::google::protobuf::uint32 value) {
  _set_bit(11);
  level_ = value;
}

// repeated uint32 Rand = 13;
inline int PBItemJewel::rand_size() const {
  return rand_.size();
}
inline void PBItemJewel::clear_rand() {
  rand_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemJewel::rand() const {
  return rand_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemJewel::mutable_rand() {
  return &rand_;
}
inline ::google::protobuf::uint32 PBItemJewel::rand(int index) const {
  return rand_.Get(index);
}
inline void PBItemJewel::set_rand(int index, ::google::protobuf::uint32 value) {
  rand_.Set(index, value);
}
inline void PBItemJewel::add_rand(::google::protobuf::uint32 value) {
  rand_.Add(value);
}

// optional uint32 NewJewelID = 14;
inline bool PBItemJewel::has_newjewelid() const {
  return _has_bit(13);
}
inline void PBItemJewel::clear_newjewelid() {
  newjewelid_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemJewel::newjewelid() const {
  return newjewelid_;
}
inline void PBItemJewel::set_newjewelid(::google::protobuf::uint32 value) {
  _set_bit(13);
  newjewelid_ = value;
}

// repeated uint32 NewRand = 15;
inline int PBItemJewel::newrand_size() const {
  return newrand_.size();
}
inline void PBItemJewel::clear_newrand() {
  newrand_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemJewel::newrand() const {
  return newrand_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemJewel::mutable_newrand() {
  return &newrand_;
}
inline ::google::protobuf::uint32 PBItemJewel::newrand(int index) const {
  return newrand_.Get(index);
}
inline void PBItemJewel::set_newrand(int index, ::google::protobuf::uint32 value) {
  newrand_.Set(index, value);
}
inline void PBItemJewel::add_newrand(::google::protobuf::uint32 value) {
  newrand_.Add(value);
}

// repeated uint32 CarveJewelID = 16;
inline int PBItemJewel::carvejewelid_size() const {
  return carvejewelid_.size();
}
inline void PBItemJewel::clear_carvejewelid() {
  carvejewelid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemJewel::carvejewelid() const {
  return carvejewelid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemJewel::mutable_carvejewelid() {
  return &carvejewelid_;
}
inline ::google::protobuf::uint32 PBItemJewel::carvejewelid(int index) const {
  return carvejewelid_.Get(index);
}
inline void PBItemJewel::set_carvejewelid(int index, ::google::protobuf::uint32 value) {
  carvejewelid_.Set(index, value);
}
inline void PBItemJewel::add_carvejewelid(::google::protobuf::uint32 value) {
  carvejewelid_.Add(value);
}

// repeated uint32 CarveRand = 17;
inline int PBItemJewel::carverand_size() const {
  return carverand_.size();
}
inline void PBItemJewel::clear_carverand() {
  carverand_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemJewel::carverand() const {
  return carverand_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemJewel::mutable_carverand() {
  return &carverand_;
}
inline ::google::protobuf::uint32 PBItemJewel::carverand(int index) const {
  return carverand_.Get(index);
}
inline void PBItemJewel::set_carverand(int index, ::google::protobuf::uint32 value) {
  carverand_.Set(index, value);
}
inline void PBItemJewel::add_carverand(::google::protobuf::uint32 value) {
  carverand_.Add(value);
}

// optional uint32 CarveCharge = 18;
inline bool PBItemJewel::has_carvecharge() const {
  return _has_bit(17);
}
inline void PBItemJewel::clear_carvecharge() {
  carvecharge_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBItemJewel::carvecharge() const {
  return carvecharge_;
}
inline void PBItemJewel::set_carvecharge(::google::protobuf::uint32 value) {
  _set_bit(17);
  carvecharge_ = value;
}

// optional uint32 CardID = 19;
inline bool PBItemJewel::has_cardid() const {
  return _has_bit(18);
}
inline void PBItemJewel::clear_cardid() {
  cardid_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBItemJewel::cardid() const {
  return cardid_;
}
inline void PBItemJewel::set_cardid(::google::protobuf::uint32 value) {
  _set_bit(18);
  cardid_ = value;
}

// optional uint32 CanCarve = 20;
inline bool PBItemJewel::has_cancarve() const {
  return _has_bit(19);
}
inline void PBItemJewel::clear_cancarve() {
  cancarve_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBItemJewel::cancarve() const {
  return cancarve_;
}
inline void PBItemJewel::set_cancarve(::google::protobuf::uint32 value) {
  _set_bit(19);
  cancarve_ = value;
}

// optional uint32 AffectRand = 21;
inline bool PBItemJewel::has_affectrand() const {
  return _has_bit(20);
}
inline void PBItemJewel::clear_affectrand() {
  affectrand_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBItemJewel::affectrand() const {
  return affectrand_;
}
inline void PBItemJewel::set_affectrand(::google::protobuf::uint32 value) {
  _set_bit(20);
  affectrand_ = value;
}

// optional uint32 JewComID = 22;
inline bool PBItemJewel::has_jewcomid() const {
  return _has_bit(21);
}
inline void PBItemJewel::clear_jewcomid() {
  jewcomid_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBItemJewel::jewcomid() const {
  return jewcomid_;
}
inline void PBItemJewel::set_jewcomid(::google::protobuf::uint32 value) {
  _set_bit(21);
  jewcomid_ = value;
}

// optional uint32 ComLevel = 23;
inline bool PBItemJewel::has_comlevel() const {
  return _has_bit(22);
}
inline void PBItemJewel::clear_comlevel() {
  comlevel_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBItemJewel::comlevel() const {
  return comlevel_;
}
inline void PBItemJewel::set_comlevel(::google::protobuf::uint32 value) {
  _set_bit(22);
  comlevel_ = value;
}

// -------------------------------------------------------------------

// PBItemYuanBug

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemYuanBug::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemYuanBug::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemYuanBug::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemYuanBug::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 Yuan = 2;
inline bool PBItemYuanBug::has_yuan() const {
  return _has_bit(1);
}
inline void PBItemYuanBug::clear_yuan() {
  yuan_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemYuanBug::yuan() const {
  return yuan_;
}
inline void PBItemYuanBug::set_yuan(::google::protobuf::uint32 value) {
  _set_bit(1);
  yuan_ = value;
}

// optional uint32 EggID = 3;
inline bool PBItemYuanBug::has_eggid() const {
  return _has_bit(2);
}
inline void PBItemYuanBug::clear_eggid() {
  eggid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemYuanBug::eggid() const {
  return eggid_;
}
inline void PBItemYuanBug::set_eggid(::google::protobuf::uint32 value) {
  _set_bit(2);
  eggid_ = value;
}

// optional uint32 YuanType = 4;
inline bool PBItemYuanBug::has_yuantype() const {
  return _has_bit(3);
}
inline void PBItemYuanBug::clear_yuantype() {
  yuantype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemYuanBug::yuantype() const {
  return yuantype_;
}
inline void PBItemYuanBug::set_yuantype(::google::protobuf::uint32 value) {
  _set_bit(3);
  yuantype_ = value;
}

// -------------------------------------------------------------------

// PBItemYuanEgg

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemYuanEgg::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemYuanEgg::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemYuanEgg::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemYuanEgg::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 Level = 2;
inline bool PBItemYuanEgg::has_level() const {
  return _has_bit(1);
}
inline void PBItemYuanEgg::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemYuanEgg::level() const {
  return level_;
}
inline void PBItemYuanEgg::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 ComposeID = 3;
inline bool PBItemYuanEgg::has_composeid() const {
  return _has_bit(2);
}
inline void PBItemYuanEgg::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemYuanEgg::composeid() const {
  return composeid_;
}
inline void PBItemYuanEgg::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(2);
  composeid_ = value;
}

// optional uint32 MaxEquip = 4;
inline bool PBItemYuanEgg::has_maxequip() const {
  return _has_bit(3);
}
inline void PBItemYuanEgg::clear_maxequip() {
  maxequip_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemYuanEgg::maxequip() const {
  return maxequip_;
}
inline void PBItemYuanEgg::set_maxequip(::google::protobuf::uint32 value) {
  _set_bit(3);
  maxequip_ = value;
}

// -------------------------------------------------------------------

// PBItemSequence

// optional uint32 TempID = 1;
inline bool PBItemSequence::has_tempid() const {
  return _has_bit(0);
}
inline void PBItemSequence::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemSequence::tempid() const {
  return tempid_;
}
inline void PBItemSequence::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Sequence = 2;
inline int PBItemSequence::sequence_size() const {
  return sequence_.size();
}
inline void PBItemSequence::clear_sequence() {
  sequence_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemSequence::sequence() const {
  return sequence_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemSequence::mutable_sequence() {
  return &sequence_;
}
inline ::google::protobuf::uint32 PBItemSequence::sequence(int index) const {
  return sequence_.Get(index);
}
inline void PBItemSequence::set_sequence(int index, ::google::protobuf::uint32 value) {
  sequence_.Set(index, value);
}
inline void PBItemSequence::add_sequence(::google::protobuf::uint32 value) {
  sequence_.Add(value);
}

// -------------------------------------------------------------------

// PBEquipment

// optional .PBItemBase BaseInfo = 1;
inline bool PBEquipment::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBEquipment::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBEquipment::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBEquipment::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional string ModalName = 2;
inline bool PBEquipment::has_modalname() const {
  return _has_bit(1);
}
inline void PBEquipment::clear_modalname() {
  if (modalname_ != &_default_modalname_) {
    modalname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBEquipment::modalname() const {
  return *modalname_;
}
inline void PBEquipment::set_modalname(const ::std::string& value) {
  _set_bit(1);
  if (modalname_ == &_default_modalname_) {
    modalname_ = new ::std::string;
  }
  modalname_->assign(value);
}
inline void PBEquipment::set_modalname(const char* value) {
  _set_bit(1);
  if (modalname_ == &_default_modalname_) {
    modalname_ = new ::std::string;
  }
  modalname_->assign(value);
}
inline void PBEquipment::set_modalname(const char* value, size_t size) {
  _set_bit(1);
  if (modalname_ == &_default_modalname_) {
    modalname_ = new ::std::string;
  }
  modalname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBEquipment::mutable_modalname() {
  _set_bit(1);
  if (modalname_ == &_default_modalname_) {
    modalname_ = new ::std::string;
  }
  return modalname_;
}

// optional uint32 ShowLevel = 3;
inline bool PBEquipment::has_showlevel() const {
  return _has_bit(2);
}
inline void PBEquipment::clear_showlevel() {
  showlevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBEquipment::showlevel() const {
  return showlevel_;
}
inline void PBEquipment::set_showlevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  showlevel_ = value;
}

// optional uint32 EquipType = 4;
inline bool PBEquipment::has_equiptype() const {
  return _has_bit(3);
}
inline void PBEquipment::clear_equiptype() {
  equiptype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBEquipment::equiptype() const {
  return equiptype_;
}
inline void PBEquipment::set_equiptype(::google::protobuf::uint32 value) {
  _set_bit(3);
  equiptype_ = value;
}

// optional uint32 ShowColor = 5;
inline bool PBEquipment::has_showcolor() const {
  return _has_bit(4);
}
inline void PBEquipment::clear_showcolor() {
  showcolor_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBEquipment::showcolor() const {
  return showcolor_;
}
inline void PBEquipment::set_showcolor(::google::protobuf::uint32 value) {
  _set_bit(4);
  showcolor_ = value;
}

// repeated uint32 StrRequire = 6;
inline int PBEquipment::strrequire_size() const {
  return strrequire_.size();
}
inline void PBEquipment::clear_strrequire() {
  strrequire_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::strrequire() const {
  return strrequire_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_strrequire() {
  return &strrequire_;
}
inline ::google::protobuf::uint32 PBEquipment::strrequire(int index) const {
  return strrequire_.Get(index);
}
inline void PBEquipment::set_strrequire(int index, ::google::protobuf::uint32 value) {
  strrequire_.Set(index, value);
}
inline void PBEquipment::add_strrequire(::google::protobuf::uint32 value) {
  strrequire_.Add(value);
}

// repeated uint32 ConRequire = 7;
inline int PBEquipment::conrequire_size() const {
  return conrequire_.size();
}
inline void PBEquipment::clear_conrequire() {
  conrequire_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::conrequire() const {
  return conrequire_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_conrequire() {
  return &conrequire_;
}
inline ::google::protobuf::uint32 PBEquipment::conrequire(int index) const {
  return conrequire_.Get(index);
}
inline void PBEquipment::set_conrequire(int index, ::google::protobuf::uint32 value) {
  conrequire_.Set(index, value);
}
inline void PBEquipment::add_conrequire(::google::protobuf::uint32 value) {
  conrequire_.Add(value);
}

// repeated uint32 StaRequire = 8;
inline int PBEquipment::starequire_size() const {
  return starequire_.size();
}
inline void PBEquipment::clear_starequire() {
  starequire_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::starequire() const {
  return starequire_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_starequire() {
  return &starequire_;
}
inline ::google::protobuf::uint32 PBEquipment::starequire(int index) const {
  return starequire_.Get(index);
}
inline void PBEquipment::set_starequire(int index, ::google::protobuf::uint32 value) {
  starequire_.Set(index, value);
}
inline void PBEquipment::add_starequire(::google::protobuf::uint32 value) {
  starequire_.Add(value);
}

// repeated uint32 WisRequire = 9;
inline int PBEquipment::wisrequire_size() const {
  return wisrequire_.size();
}
inline void PBEquipment::clear_wisrequire() {
  wisrequire_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::wisrequire() const {
  return wisrequire_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_wisrequire() {
  return &wisrequire_;
}
inline ::google::protobuf::uint32 PBEquipment::wisrequire(int index) const {
  return wisrequire_.Get(index);
}
inline void PBEquipment::set_wisrequire(int index, ::google::protobuf::uint32 value) {
  wisrequire_.Set(index, value);
}
inline void PBEquipment::add_wisrequire(::google::protobuf::uint32 value) {
  wisrequire_.Add(value);
}

// repeated uint32 SprRequire = 10;
inline int PBEquipment::sprrequire_size() const {
  return sprrequire_.size();
}
inline void PBEquipment::clear_sprrequire() {
  sprrequire_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::sprrequire() const {
  return sprrequire_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_sprrequire() {
  return &sprrequire_;
}
inline ::google::protobuf::uint32 PBEquipment::sprrequire(int index) const {
  return sprrequire_.Get(index);
}
inline void PBEquipment::set_sprrequire(int index, ::google::protobuf::uint32 value) {
  sprrequire_.Set(index, value);
}
inline void PBEquipment::add_sprrequire(::google::protobuf::uint32 value) {
  sprrequire_.Add(value);
}

// optional uint32 MetierRequire = 11;
inline bool PBEquipment::has_metierrequire() const {
  return _has_bit(10);
}
inline void PBEquipment::clear_metierrequire() {
  metierrequire_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBEquipment::metierrequire() const {
  return metierrequire_;
}
inline void PBEquipment::set_metierrequire(::google::protobuf::uint32 value) {
  _set_bit(10);
  metierrequire_ = value;
}

// optional uint32 LevelRequire = 12;
inline bool PBEquipment::has_levelrequire() const {
  return _has_bit(11);
}
inline void PBEquipment::clear_levelrequire() {
  levelrequire_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBEquipment::levelrequire() const {
  return levelrequire_;
}
inline void PBEquipment::set_levelrequire(::google::protobuf::uint32 value) {
  _set_bit(11);
  levelrequire_ = value;
}

// optional uint32 SexRequire = 13;
inline bool PBEquipment::has_sexrequire() const {
  return _has_bit(12);
}
inline void PBEquipment::clear_sexrequire() {
  sexrequire_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBEquipment::sexrequire() const {
  return sexrequire_;
}
inline void PBEquipment::set_sexrequire(::google::protobuf::uint32 value) {
  _set_bit(12);
  sexrequire_ = value;
}

// optional uint32 YuanValue = 14;
inline bool PBEquipment::has_yuanvalue() const {
  return _has_bit(13);
}
inline void PBEquipment::clear_yuanvalue() {
  yuanvalue_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBEquipment::yuanvalue() const {
  return yuanvalue_;
}
inline void PBEquipment::set_yuanvalue(::google::protobuf::uint32 value) {
  _set_bit(13);
  yuanvalue_ = value;
}

// optional uint32 EquipDurability = 15;
inline bool PBEquipment::has_equipdurability() const {
  return _has_bit(14);
}
inline void PBEquipment::clear_equipdurability() {
  equipdurability_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBEquipment::equipdurability() const {
  return equipdurability_;
}
inline void PBEquipment::set_equipdurability(::google::protobuf::uint32 value) {
  _set_bit(14);
  equipdurability_ = value;
}

// optional uint32 BaseMendCharge = 16;
inline bool PBEquipment::has_basemendcharge() const {
  return _has_bit(15);
}
inline void PBEquipment::clear_basemendcharge() {
  basemendcharge_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBEquipment::basemendcharge() const {
  return basemendcharge_;
}
inline void PBEquipment::set_basemendcharge(::google::protobuf::uint32 value) {
  _set_bit(15);
  basemendcharge_ = value;
}

// optional uint32 NpcAbrasionRate = 17;
inline bool PBEquipment::has_npcabrasionrate() const {
  return _has_bit(16);
}
inline void PBEquipment::clear_npcabrasionrate() {
  npcabrasionrate_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBEquipment::npcabrasionrate() const {
  return npcabrasionrate_;
}
inline void PBEquipment::set_npcabrasionrate(::google::protobuf::uint32 value) {
  _set_bit(16);
  npcabrasionrate_ = value;
}

// optional uint32 PlayerAbrasionRate = 18;
inline bool PBEquipment::has_playerabrasionrate() const {
  return _has_bit(17);
}
inline void PBEquipment::clear_playerabrasionrate() {
  playerabrasionrate_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBEquipment::playerabrasionrate() const {
  return playerabrasionrate_;
}
inline void PBEquipment::set_playerabrasionrate(::google::protobuf::uint32 value) {
  _set_bit(17);
  playerabrasionrate_ = value;
}

// optional uint32 CanUpGrade = 19;
inline bool PBEquipment::has_canupgrade() const {
  return _has_bit(18);
}
inline void PBEquipment::clear_canupgrade() {
  canupgrade_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBEquipment::canupgrade() const {
  return canupgrade_;
}
inline void PBEquipment::set_canupgrade(::google::protobuf::uint32 value) {
  _set_bit(18);
  canupgrade_ = value;
}

// optional uint32 UpgCharge = 20;
inline bool PBEquipment::has_upgcharge() const {
  return _has_bit(19);
}
inline void PBEquipment::clear_upgcharge() {
  upgcharge_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBEquipment::upgcharge() const {
  return upgcharge_;
}
inline void PBEquipment::set_upgcharge(::google::protobuf::uint32 value) {
  _set_bit(19);
  upgcharge_ = value;
}

// optional uint32 NeedBindMoney = 21;
inline bool PBEquipment::has_needbindmoney() const {
  return _has_bit(20);
}
inline void PBEquipment::clear_needbindmoney() {
  needbindmoney_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBEquipment::needbindmoney() const {
  return needbindmoney_;
}
inline void PBEquipment::set_needbindmoney(::google::protobuf::uint32 value) {
  _set_bit(20);
  needbindmoney_ = value;
}

// repeated uint32 UpgPropertyID = 22;
inline int PBEquipment::upgpropertyid_size() const {
  return upgpropertyid_.size();
}
inline void PBEquipment::clear_upgpropertyid() {
  upgpropertyid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::upgpropertyid() const {
  return upgpropertyid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_upgpropertyid() {
  return &upgpropertyid_;
}
inline ::google::protobuf::uint32 PBEquipment::upgpropertyid(int index) const {
  return upgpropertyid_.Get(index);
}
inline void PBEquipment::set_upgpropertyid(int index, ::google::protobuf::uint32 value) {
  upgpropertyid_.Set(index, value);
}
inline void PBEquipment::add_upgpropertyid(::google::protobuf::uint32 value) {
  upgpropertyid_.Add(value);
}

// repeated uint32 UpgValue = 23;
inline int PBEquipment::upgvalue_size() const {
  return upgvalue_.size();
}
inline void PBEquipment::clear_upgvalue() {
  upgvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::upgvalue() const {
  return upgvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_upgvalue() {
  return &upgvalue_;
}
inline ::google::protobuf::uint32 PBEquipment::upgvalue(int index) const {
  return upgvalue_.Get(index);
}
inline void PBEquipment::set_upgvalue(int index, ::google::protobuf::uint32 value) {
  upgvalue_.Set(index, value);
}
inline void PBEquipment::add_upgvalue(::google::protobuf::uint32 value) {
  upgvalue_.Add(value);
}

// repeated uint32 MaxSlotNumber1 = 24;
inline int PBEquipment::maxslotnumber1_size() const {
  return maxslotnumber1_.size();
}
inline void PBEquipment::clear_maxslotnumber1() {
  maxslotnumber1_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::maxslotnumber1() const {
  return maxslotnumber1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_maxslotnumber1() {
  return &maxslotnumber1_;
}
inline ::google::protobuf::uint32 PBEquipment::maxslotnumber1(int index) const {
  return maxslotnumber1_.Get(index);
}
inline void PBEquipment::set_maxslotnumber1(int index, ::google::protobuf::uint32 value) {
  maxslotnumber1_.Set(index, value);
}
inline void PBEquipment::add_maxslotnumber1(::google::protobuf::uint32 value) {
  maxslotnumber1_.Add(value);
}

// optional uint32 MaxSlotNumber2 = 25;
inline bool PBEquipment::has_maxslotnumber2() const {
  return _has_bit(24);
}
inline void PBEquipment::clear_maxslotnumber2() {
  maxslotnumber2_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBEquipment::maxslotnumber2() const {
  return maxslotnumber2_;
}
inline void PBEquipment::set_maxslotnumber2(::google::protobuf::uint32 value) {
  _set_bit(24);
  maxslotnumber2_ = value;
}

// repeated uint32 PropertyPercent = 26;
inline int PBEquipment::propertypercent_size() const {
  return propertypercent_.size();
}
inline void PBEquipment::clear_propertypercent() {
  propertypercent_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::propertypercent() const {
  return propertypercent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_propertypercent() {
  return &propertypercent_;
}
inline ::google::protobuf::uint32 PBEquipment::propertypercent(int index) const {
  return propertypercent_.Get(index);
}
inline void PBEquipment::set_propertypercent(int index, ::google::protobuf::uint32 value) {
  propertypercent_.Set(index, value);
}
inline void PBEquipment::add_propertypercent(::google::protobuf::uint32 value) {
  propertypercent_.Add(value);
}

// repeated uint32 PropertyTableID = 27;
inline int PBEquipment::propertytableid_size() const {
  return propertytableid_.size();
}
inline void PBEquipment::clear_propertytableid() {
  propertytableid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::propertytableid() const {
  return propertytableid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_propertytableid() {
  return &propertytableid_;
}
inline ::google::protobuf::uint32 PBEquipment::propertytableid(int index) const {
  return propertytableid_.Get(index);
}
inline void PBEquipment::set_propertytableid(int index, ::google::protobuf::uint32 value) {
  propertytableid_.Set(index, value);
}
inline void PBEquipment::add_propertytableid(::google::protobuf::uint32 value) {
  propertytableid_.Add(value);
}

// repeated uint32 PropertyPercentEx = 28;
inline int PBEquipment::propertypercentex_size() const {
  return propertypercentex_.size();
}
inline void PBEquipment::clear_propertypercentex() {
  propertypercentex_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::propertypercentex() const {
  return propertypercentex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_propertypercentex() {
  return &propertypercentex_;
}
inline ::google::protobuf::uint32 PBEquipment::propertypercentex(int index) const {
  return propertypercentex_.Get(index);
}
inline void PBEquipment::set_propertypercentex(int index, ::google::protobuf::uint32 value) {
  propertypercentex_.Set(index, value);
}
inline void PBEquipment::add_propertypercentex(::google::protobuf::uint32 value) {
  propertypercentex_.Add(value);
}

// repeated uint32 PropertyTableIDEx = 29;
inline int PBEquipment::propertytableidex_size() const {
  return propertytableidex_.size();
}
inline void PBEquipment::clear_propertytableidex() {
  propertytableidex_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::propertytableidex() const {
  return propertytableidex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_propertytableidex() {
  return &propertytableidex_;
}
inline ::google::protobuf::uint32 PBEquipment::propertytableidex(int index) const {
  return propertytableidex_.Get(index);
}
inline void PBEquipment::set_propertytableidex(int index, ::google::protobuf::uint32 value) {
  propertytableidex_.Set(index, value);
}
inline void PBEquipment::add_propertytableidex(::google::protobuf::uint32 value) {
  propertytableidex_.Add(value);
}

// repeated uint32 PAttackDiff = 30;
inline int PBEquipment::pattackdiff_size() const {
  return pattackdiff_.size();
}
inline void PBEquipment::clear_pattackdiff() {
  pattackdiff_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::pattackdiff() const {
  return pattackdiff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_pattackdiff() {
  return &pattackdiff_;
}
inline ::google::protobuf::uint32 PBEquipment::pattackdiff(int index) const {
  return pattackdiff_.Get(index);
}
inline void PBEquipment::set_pattackdiff(int index, ::google::protobuf::uint32 value) {
  pattackdiff_.Set(index, value);
}
inline void PBEquipment::add_pattackdiff(::google::protobuf::uint32 value) {
  pattackdiff_.Add(value);
}

// repeated uint32 JudgePercent1 = 31;
inline int PBEquipment::judgepercent1_size() const {
  return judgepercent1_.size();
}
inline void PBEquipment::clear_judgepercent1() {
  judgepercent1_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::judgepercent1() const {
  return judgepercent1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_judgepercent1() {
  return &judgepercent1_;
}
inline ::google::protobuf::uint32 PBEquipment::judgepercent1(int index) const {
  return judgepercent1_.Get(index);
}
inline void PBEquipment::set_judgepercent1(int index, ::google::protobuf::uint32 value) {
  judgepercent1_.Set(index, value);
}
inline void PBEquipment::add_judgepercent1(::google::protobuf::uint32 value) {
  judgepercent1_.Add(value);
}

// repeated uint32 JudgePercent2 = 32;
inline int PBEquipment::judgepercent2_size() const {
  return judgepercent2_.size();
}
inline void PBEquipment::clear_judgepercent2() {
  judgepercent2_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::judgepercent2() const {
  return judgepercent2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_judgepercent2() {
  return &judgepercent2_;
}
inline ::google::protobuf::uint32 PBEquipment::judgepercent2(int index) const {
  return judgepercent2_.Get(index);
}
inline void PBEquipment::set_judgepercent2(int index, ::google::protobuf::uint32 value) {
  judgepercent2_.Set(index, value);
}
inline void PBEquipment::add_judgepercent2(::google::protobuf::uint32 value) {
  judgepercent2_.Add(value);
}

// repeated uint32 ResDefPercent = 33;
inline int PBEquipment::resdefpercent_size() const {
  return resdefpercent_.size();
}
inline void PBEquipment::clear_resdefpercent() {
  resdefpercent_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::resdefpercent() const {
  return resdefpercent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_resdefpercent() {
  return &resdefpercent_;
}
inline ::google::protobuf::uint32 PBEquipment::resdefpercent(int index) const {
  return resdefpercent_.Get(index);
}
inline void PBEquipment::set_resdefpercent(int index, ::google::protobuf::uint32 value) {
  resdefpercent_.Set(index, value);
}
inline void PBEquipment::add_resdefpercent(::google::protobuf::uint32 value) {
  resdefpercent_.Add(value);
}

// repeated uint32 ResAttPercent = 34;
inline int PBEquipment::resattpercent_size() const {
  return resattpercent_.size();
}
inline void PBEquipment::clear_resattpercent() {
  resattpercent_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::resattpercent() const {
  return resattpercent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_resattpercent() {
  return &resattpercent_;
}
inline ::google::protobuf::uint32 PBEquipment::resattpercent(int index) const {
  return resattpercent_.Get(index);
}
inline void PBEquipment::set_resattpercent(int index, ::google::protobuf::uint32 value) {
  resattpercent_.Set(index, value);
}
inline void PBEquipment::add_resattpercent(::google::protobuf::uint32 value) {
  resattpercent_.Add(value);
}

// repeated uint32 ResDefValue = 35;
inline int PBEquipment::resdefvalue_size() const {
  return resdefvalue_.size();
}
inline void PBEquipment::clear_resdefvalue() {
  resdefvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::resdefvalue() const {
  return resdefvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_resdefvalue() {
  return &resdefvalue_;
}
inline ::google::protobuf::uint32 PBEquipment::resdefvalue(int index) const {
  return resdefvalue_.Get(index);
}
inline void PBEquipment::set_resdefvalue(int index, ::google::protobuf::uint32 value) {
  resdefvalue_.Set(index, value);
}
inline void PBEquipment::add_resdefvalue(::google::protobuf::uint32 value) {
  resdefvalue_.Add(value);
}

// repeated uint32 ResAttValue = 36;
inline int PBEquipment::resattvalue_size() const {
  return resattvalue_.size();
}
inline void PBEquipment::clear_resattvalue() {
  resattvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::resattvalue() const {
  return resattvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_resattvalue() {
  return &resattvalue_;
}
inline ::google::protobuf::uint32 PBEquipment::resattvalue(int index) const {
  return resattvalue_.Get(index);
}
inline void PBEquipment::set_resattvalue(int index, ::google::protobuf::uint32 value) {
  resattvalue_.Set(index, value);
}
inline void PBEquipment::add_resattvalue(::google::protobuf::uint32 value) {
  resattvalue_.Add(value);
}

// optional uint32 SuitID = 37;
inline bool PBEquipment::has_suitid() const {
  return _has_bit(36);
}
inline void PBEquipment::clear_suitid() {
  suitid_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBEquipment::suitid() const {
  return suitid_;
}
inline void PBEquipment::set_suitid(::google::protobuf::uint32 value) {
  _set_bit(36);
  suitid_ = value;
}

// optional uint32 SuitPos = 38;
inline bool PBEquipment::has_suitpos() const {
  return _has_bit(37);
}
inline void PBEquipment::clear_suitpos() {
  suitpos_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBEquipment::suitpos() const {
  return suitpos_;
}
inline void PBEquipment::set_suitpos(::google::protobuf::uint32 value) {
  _set_bit(37);
  suitpos_ = value;
}

// repeated uint32 MAttackDiff = 39;
inline int PBEquipment::mattackdiff_size() const {
  return mattackdiff_.size();
}
inline void PBEquipment::clear_mattackdiff() {
  mattackdiff_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::mattackdiff() const {
  return mattackdiff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_mattackdiff() {
  return &mattackdiff_;
}
inline ::google::protobuf::uint32 PBEquipment::mattackdiff(int index) const {
  return mattackdiff_.Get(index);
}
inline void PBEquipment::set_mattackdiff(int index, ::google::protobuf::uint32 value) {
  mattackdiff_.Set(index, value);
}
inline void PBEquipment::add_mattackdiff(::google::protobuf::uint32 value) {
  mattackdiff_.Add(value);
}

// optional uint32 OpenCharge = 40;
inline bool PBEquipment::has_opencharge() const {
  return _has_bit(39);
}
inline void PBEquipment::clear_opencharge() {
  opencharge_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBEquipment::opencharge() const {
  return opencharge_;
}
inline void PBEquipment::set_opencharge(::google::protobuf::uint32 value) {
  _set_bit(39);
  opencharge_ = value;
}

// optional uint32 AddCharge = 41;
inline bool PBEquipment::has_addcharge() const {
  return _has_bit(40);
}
inline void PBEquipment::clear_addcharge() {
  addcharge_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBEquipment::addcharge() const {
  return addcharge_;
}
inline void PBEquipment::set_addcharge(::google::protobuf::uint32 value) {
  _set_bit(40);
  addcharge_ = value;
}

// optional uint32 JudgeCharge = 42;
inline bool PBEquipment::has_judgecharge() const {
  return _has_bit(41);
}
inline void PBEquipment::clear_judgecharge() {
  judgecharge_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 PBEquipment::judgecharge() const {
  return judgecharge_;
}
inline void PBEquipment::set_judgecharge(::google::protobuf::uint32 value) {
  _set_bit(41);
  judgecharge_ = value;
}

// optional uint32 ReJudgeCharge = 43;
inline bool PBEquipment::has_rejudgecharge() const {
  return _has_bit(42);
}
inline void PBEquipment::clear_rejudgecharge() {
  rejudgecharge_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 PBEquipment::rejudgecharge() const {
  return rejudgecharge_;
}
inline void PBEquipment::set_rejudgecharge(::google::protobuf::uint32 value) {
  _set_bit(42);
  rejudgecharge_ = value;
}

// optional uint32 DefUpgCharge = 44;
inline bool PBEquipment::has_defupgcharge() const {
  return _has_bit(43);
}
inline void PBEquipment::clear_defupgcharge() {
  defupgcharge_ = 0u;
  _clear_bit(43);
}
inline ::google::protobuf::uint32 PBEquipment::defupgcharge() const {
  return defupgcharge_;
}
inline void PBEquipment::set_defupgcharge(::google::protobuf::uint32 value) {
  _set_bit(43);
  defupgcharge_ = value;
}

// optional uint32 DefChangeCharge = 45;
inline bool PBEquipment::has_defchangecharge() const {
  return _has_bit(44);
}
inline void PBEquipment::clear_defchangecharge() {
  defchangecharge_ = 0u;
  _clear_bit(44);
}
inline ::google::protobuf::uint32 PBEquipment::defchangecharge() const {
  return defchangecharge_;
}
inline void PBEquipment::set_defchangecharge(::google::protobuf::uint32 value) {
  _set_bit(44);
  defchangecharge_ = value;
}

// optional uint32 AttUpgCharge = 46;
inline bool PBEquipment::has_attupgcharge() const {
  return _has_bit(45);
}
inline void PBEquipment::clear_attupgcharge() {
  attupgcharge_ = 0u;
  _clear_bit(45);
}
inline ::google::protobuf::uint32 PBEquipment::attupgcharge() const {
  return attupgcharge_;
}
inline void PBEquipment::set_attupgcharge(::google::protobuf::uint32 value) {
  _set_bit(45);
  attupgcharge_ = value;
}

// optional uint32 AttChangeCharge = 47;
inline bool PBEquipment::has_attchangecharge() const {
  return _has_bit(46);
}
inline void PBEquipment::clear_attchangecharge() {
  attchangecharge_ = 0u;
  _clear_bit(46);
}
inline ::google::protobuf::uint32 PBEquipment::attchangecharge() const {
  return attchangecharge_;
}
inline void PBEquipment::set_attchangecharge(::google::protobuf::uint32 value) {
  _set_bit(46);
  attchangecharge_ = value;
}

// optional uint32 CanDefUpgrade = 48;
inline bool PBEquipment::has_candefupgrade() const {
  return _has_bit(47);
}
inline void PBEquipment::clear_candefupgrade() {
  candefupgrade_ = 0u;
  _clear_bit(47);
}
inline ::google::protobuf::uint32 PBEquipment::candefupgrade() const {
  return candefupgrade_;
}
inline void PBEquipment::set_candefupgrade(::google::protobuf::uint32 value) {
  _set_bit(47);
  candefupgrade_ = value;
}

// optional uint32 CanAttUpgrade = 49;
inline bool PBEquipment::has_canattupgrade() const {
  return _has_bit(48);
}
inline void PBEquipment::clear_canattupgrade() {
  canattupgrade_ = 0u;
  _clear_bit(48);
}
inline ::google::protobuf::uint32 PBEquipment::canattupgrade() const {
  return canattupgrade_;
}
inline void PBEquipment::set_canattupgrade(::google::protobuf::uint32 value) {
  _set_bit(48);
  canattupgrade_ = value;
}

// optional uint32 BindBonus = 50;
inline bool PBEquipment::has_bindbonus() const {
  return _has_bit(49);
}
inline void PBEquipment::clear_bindbonus() {
  bindbonus_ = 0u;
  _clear_bit(49);
}
inline ::google::protobuf::uint32 PBEquipment::bindbonus() const {
  return bindbonus_;
}
inline void PBEquipment::set_bindbonus(::google::protobuf::uint32 value) {
  _set_bit(49);
  bindbonus_ = value;
}

// optional uint32 MultiCompose = 51;
inline bool PBEquipment::has_multicompose() const {
  return _has_bit(50);
}
inline void PBEquipment::clear_multicompose() {
  multicompose_ = 0u;
  _clear_bit(50);
}
inline ::google::protobuf::uint32 PBEquipment::multicompose() const {
  return multicompose_;
}
inline void PBEquipment::set_multicompose(::google::protobuf::uint32 value) {
  _set_bit(50);
  multicompose_ = value;
}

// optional uint32 CanChange = 52;
inline bool PBEquipment::has_canchange() const {
  return _has_bit(51);
}
inline void PBEquipment::clear_canchange() {
  canchange_ = 0u;
  _clear_bit(51);
}
inline ::google::protobuf::uint32 PBEquipment::canchange() const {
  return canchange_;
}
inline void PBEquipment::set_canchange(::google::protobuf::uint32 value) {
  _set_bit(51);
  canchange_ = value;
}

// optional uint32 ChangeCharge = 53;
inline bool PBEquipment::has_changecharge() const {
  return _has_bit(52);
}
inline void PBEquipment::clear_changecharge() {
  changecharge_ = 0u;
  _clear_bit(52);
}
inline ::google::protobuf::uint32 PBEquipment::changecharge() const {
  return changecharge_;
}
inline void PBEquipment::set_changecharge(::google::protobuf::uint32 value) {
  _set_bit(52);
  changecharge_ = value;
}

// optional uint32 CanSplit = 54;
inline bool PBEquipment::has_cansplit() const {
  return _has_bit(53);
}
inline void PBEquipment::clear_cansplit() {
  cansplit_ = 0u;
  _clear_bit(53);
}
inline ::google::protobuf::uint32 PBEquipment::cansplit() const {
  return cansplit_;
}
inline void PBEquipment::set_cansplit(::google::protobuf::uint32 value) {
  _set_bit(53);
  cansplit_ = value;
}

// repeated uint32 SplitID = 55;
inline int PBEquipment::splitid_size() const {
  return splitid_.size();
}
inline void PBEquipment::clear_splitid() {
  splitid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::splitid() const {
  return splitid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_splitid() {
  return &splitid_;
}
inline ::google::protobuf::uint32 PBEquipment::splitid(int index) const {
  return splitid_.Get(index);
}
inline void PBEquipment::set_splitid(int index, ::google::protobuf::uint32 value) {
  splitid_.Set(index, value);
}
inline void PBEquipment::add_splitid(::google::protobuf::uint32 value) {
  splitid_.Add(value);
}

// repeated uint32 SplitNum = 56;
inline int PBEquipment::splitnum_size() const {
  return splitnum_.size();
}
inline void PBEquipment::clear_splitnum() {
  splitnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::splitnum() const {
  return splitnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_splitnum() {
  return &splitnum_;
}
inline ::google::protobuf::uint32 PBEquipment::splitnum(int index) const {
  return splitnum_.Get(index);
}
inline void PBEquipment::set_splitnum(int index, ::google::protobuf::uint32 value) {
  splitnum_.Set(index, value);
}
inline void PBEquipment::add_splitnum(::google::protobuf::uint32 value) {
  splitnum_.Add(value);
}

// optional uint32 SplitCharge = 57;
inline bool PBEquipment::has_splitcharge() const {
  return _has_bit(56);
}
inline void PBEquipment::clear_splitcharge() {
  splitcharge_ = 0u;
  _clear_bit(56);
}
inline ::google::protobuf::uint32 PBEquipment::splitcharge() const {
  return splitcharge_;
}
inline void PBEquipment::set_splitcharge(::google::protobuf::uint32 value) {
  _set_bit(56);
  splitcharge_ = value;
}

// repeated uint32 UpgExtra1 = 58;
inline int PBEquipment::upgextra1_size() const {
  return upgextra1_.size();
}
inline void PBEquipment::clear_upgextra1() {
  upgextra1_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::upgextra1() const {
  return upgextra1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_upgextra1() {
  return &upgextra1_;
}
inline ::google::protobuf::uint32 PBEquipment::upgextra1(int index) const {
  return upgextra1_.Get(index);
}
inline void PBEquipment::set_upgextra1(int index, ::google::protobuf::uint32 value) {
  upgextra1_.Set(index, value);
}
inline void PBEquipment::add_upgextra1(::google::protobuf::uint32 value) {
  upgextra1_.Add(value);
}

// repeated uint32 UpgExtra2 = 59;
inline int PBEquipment::upgextra2_size() const {
  return upgextra2_.size();
}
inline void PBEquipment::clear_upgextra2() {
  upgextra2_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipment::upgextra2() const {
  return upgextra2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipment::mutable_upgextra2() {
  return &upgextra2_;
}
inline ::google::protobuf::uint32 PBEquipment::upgextra2(int index) const {
  return upgextra2_.Get(index);
}
inline void PBEquipment::set_upgextra2(int index, ::google::protobuf::uint32 value) {
  upgextra2_.Set(index, value);
}
inline void PBEquipment::add_upgextra2(::google::protobuf::uint32 value) {
  upgextra2_.Add(value);
}

// optional uint32 ExtCharge = 60;
inline bool PBEquipment::has_extcharge() const {
  return _has_bit(59);
}
inline void PBEquipment::clear_extcharge() {
  extcharge_ = 0u;
  _clear_bit(59);
}
inline ::google::protobuf::uint32 PBEquipment::extcharge() const {
  return extcharge_;
}
inline void PBEquipment::set_extcharge(::google::protobuf::uint32 value) {
  _set_bit(59);
  extcharge_ = value;
}

// optional uint32 ResistTran = 61;
inline bool PBEquipment::has_resisttran() const {
  return _has_bit(60);
}
inline void PBEquipment::clear_resisttran() {
  resisttran_ = 0u;
  _clear_bit(60);
}
inline ::google::protobuf::uint32 PBEquipment::resisttran() const {
  return resisttran_;
}
inline void PBEquipment::set_resisttran(::google::protobuf::uint32 value) {
  _set_bit(60);
  resisttran_ = value;
}

// optional uint32 IsShenQi = 62;
inline bool PBEquipment::has_isshenqi() const {
  return _has_bit(61);
}
inline void PBEquipment::clear_isshenqi() {
  isshenqi_ = 0u;
  _clear_bit(61);
}
inline ::google::protobuf::uint32 PBEquipment::isshenqi() const {
  return isshenqi_;
}
inline void PBEquipment::set_isshenqi(::google::protobuf::uint32 value) {
  _set_bit(61);
  isshenqi_ = value;
}

// -------------------------------------------------------------------

// PBEquipFashion

// optional .PBEquipment EquipInfo = 1;
inline bool PBEquipFashion::has_equipinfo() const {
  return _has_bit(0);
}
inline void PBEquipFashion::clear_equipinfo() {
  if (equipinfo_ != NULL) equipinfo_->::PBEquipment::Clear();
  _clear_bit(0);
}
inline const ::PBEquipment& PBEquipFashion::equipinfo() const {
  return equipinfo_ != NULL ? *equipinfo_ : *default_instance_->equipinfo_;
}
inline ::PBEquipment* PBEquipFashion::mutable_equipinfo() {
  _set_bit(0);
  if (equipinfo_ == NULL) equipinfo_ = new ::PBEquipment;
  return equipinfo_;
}

// optional uint32 BuffID = 2;
inline bool PBEquipFashion::has_buffid() const {
  return _has_bit(1);
}
inline void PBEquipFashion::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBEquipFashion::buffid() const {
  return buffid_;
}
inline void PBEquipFashion::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(1);
  buffid_ = value;
}

// -------------------------------------------------------------------

// PBEquipWeapon

// optional .PBEquipment EquipInfo = 1;
inline bool PBEquipWeapon::has_equipinfo() const {
  return _has_bit(0);
}
inline void PBEquipWeapon::clear_equipinfo() {
  if (equipinfo_ != NULL) equipinfo_->::PBEquipment::Clear();
  _clear_bit(0);
}
inline const ::PBEquipment& PBEquipWeapon::equipinfo() const {
  return equipinfo_ != NULL ? *equipinfo_ : *default_instance_->equipinfo_;
}
inline ::PBEquipment* PBEquipWeapon::mutable_equipinfo() {
  _set_bit(0);
  if (equipinfo_ == NULL) equipinfo_ = new ::PBEquipment;
  return equipinfo_;
}

// optional uint32 WeaponType = 2;
inline bool PBEquipWeapon::has_weapontype() const {
  return _has_bit(1);
}
inline void PBEquipWeapon::clear_weapontype() {
  weapontype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBEquipWeapon::weapontype() const {
  return weapontype_;
}
inline void PBEquipWeapon::set_weapontype(::google::protobuf::uint32 value) {
  _set_bit(1);
  weapontype_ = value;
}

// optional uint32 AttackType = 3;
inline bool PBEquipWeapon::has_attacktype() const {
  return _has_bit(2);
}
inline void PBEquipWeapon::clear_attacktype() {
  attacktype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBEquipWeapon::attacktype() const {
  return attacktype_;
}
inline void PBEquipWeapon::set_attacktype(::google::protobuf::uint32 value) {
  _set_bit(2);
  attacktype_ = value;
}

// optional uint32 AttackDistance = 4;
inline bool PBEquipWeapon::has_attackdistance() const {
  return _has_bit(3);
}
inline void PBEquipWeapon::clear_attackdistance() {
  attackdistance_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBEquipWeapon::attackdistance() const {
  return attackdistance_;
}
inline void PBEquipWeapon::set_attackdistance(::google::protobuf::uint32 value) {
  _set_bit(3);
  attackdistance_ = value;
}

// -------------------------------------------------------------------

// PBEquipArmor

// optional .PBEquipment EquipInfo = 1;
inline bool PBEquipArmor::has_equipinfo() const {
  return _has_bit(0);
}
inline void PBEquipArmor::clear_equipinfo() {
  if (equipinfo_ != NULL) equipinfo_->::PBEquipment::Clear();
  _clear_bit(0);
}
inline const ::PBEquipment& PBEquipArmor::equipinfo() const {
  return equipinfo_ != NULL ? *equipinfo_ : *default_instance_->equipinfo_;
}
inline ::PBEquipment* PBEquipArmor::mutable_equipinfo() {
  _set_bit(0);
  if (equipinfo_ == NULL) equipinfo_ = new ::PBEquipment;
  return equipinfo_;
}

// optional uint32 ShowType = 2;
inline bool PBEquipArmor::has_showtype() const {
  return _has_bit(1);
}
inline void PBEquipArmor::clear_showtype() {
  showtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBEquipArmor::showtype() const {
  return showtype_;
}
inline void PBEquipArmor::set_showtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  showtype_ = value;
}

// optional string ArmorSuit = 3;
inline bool PBEquipArmor::has_armorsuit() const {
  return _has_bit(2);
}
inline void PBEquipArmor::clear_armorsuit() {
  if (armorsuit_ != &_default_armorsuit_) {
    armorsuit_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBEquipArmor::armorsuit() const {
  return *armorsuit_;
}
inline void PBEquipArmor::set_armorsuit(const ::std::string& value) {
  _set_bit(2);
  if (armorsuit_ == &_default_armorsuit_) {
    armorsuit_ = new ::std::string;
  }
  armorsuit_->assign(value);
}
inline void PBEquipArmor::set_armorsuit(const char* value) {
  _set_bit(2);
  if (armorsuit_ == &_default_armorsuit_) {
    armorsuit_ = new ::std::string;
  }
  armorsuit_->assign(value);
}
inline void PBEquipArmor::set_armorsuit(const char* value, size_t size) {
  _set_bit(2);
  if (armorsuit_ == &_default_armorsuit_) {
    armorsuit_ = new ::std::string;
  }
  armorsuit_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBEquipArmor::mutable_armorsuit() {
  _set_bit(2);
  if (armorsuit_ == &_default_armorsuit_) {
    armorsuit_ = new ::std::string;
  }
  return armorsuit_;
}

// -------------------------------------------------------------------

// PBTemplateProperty

// optional uint32 TempID = 1;
inline bool PBTemplateProperty::has_tempid() const {
  return _has_bit(0);
}
inline void PBTemplateProperty::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTemplateProperty::tempid() const {
  return tempid_;
}
inline void PBTemplateProperty::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string PropertyName = 2;
inline bool PBTemplateProperty::has_propertyname() const {
  return _has_bit(1);
}
inline void PBTemplateProperty::clear_propertyname() {
  if (propertyname_ != &_default_propertyname_) {
    propertyname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBTemplateProperty::propertyname() const {
  return *propertyname_;
}
inline void PBTemplateProperty::set_propertyname(const ::std::string& value) {
  _set_bit(1);
  if (propertyname_ == &_default_propertyname_) {
    propertyname_ = new ::std::string;
  }
  propertyname_->assign(value);
}
inline void PBTemplateProperty::set_propertyname(const char* value) {
  _set_bit(1);
  if (propertyname_ == &_default_propertyname_) {
    propertyname_ = new ::std::string;
  }
  propertyname_->assign(value);
}
inline void PBTemplateProperty::set_propertyname(const char* value, size_t size) {
  _set_bit(1);
  if (propertyname_ == &_default_propertyname_) {
    propertyname_ = new ::std::string;
  }
  propertyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTemplateProperty::mutable_propertyname() {
  _set_bit(1);
  if (propertyname_ == &_default_propertyname_) {
    propertyname_ = new ::std::string;
  }
  return propertyname_;
}

// optional uint32 PropertyFunc = 3;
inline bool PBTemplateProperty::has_propertyfunc() const {
  return _has_bit(2);
}
inline void PBTemplateProperty::clear_propertyfunc() {
  propertyfunc_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTemplateProperty::propertyfunc() const {
  return propertyfunc_;
}
inline void PBTemplateProperty::set_propertyfunc(::google::protobuf::uint32 value) {
  _set_bit(2);
  propertyfunc_ = value;
}

// optional uint32 CanOut = 4;
inline bool PBTemplateProperty::has_canout() const {
  return _has_bit(3);
}
inline void PBTemplateProperty::clear_canout() {
  canout_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTemplateProperty::canout() const {
  return canout_;
}
inline void PBTemplateProperty::set_canout(::google::protobuf::uint32 value) {
  _set_bit(3);
  canout_ = value;
}

// optional uint32 IntMinValue = 5;
inline bool PBTemplateProperty::has_intminvalue() const {
  return _has_bit(4);
}
inline void PBTemplateProperty::clear_intminvalue() {
  intminvalue_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTemplateProperty::intminvalue() const {
  return intminvalue_;
}
inline void PBTemplateProperty::set_intminvalue(::google::protobuf::uint32 value) {
  _set_bit(4);
  intminvalue_ = value;
}

// optional uint32 IntMaxValue = 6;
inline bool PBTemplateProperty::has_intmaxvalue() const {
  return _has_bit(5);
}
inline void PBTemplateProperty::clear_intmaxvalue() {
  intmaxvalue_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBTemplateProperty::intmaxvalue() const {
  return intmaxvalue_;
}
inline void PBTemplateProperty::set_intmaxvalue(::google::protobuf::uint32 value) {
  _set_bit(5);
  intmaxvalue_ = value;
}

// optional uint32 FloatMinValue = 7;
inline bool PBTemplateProperty::has_floatminvalue() const {
  return _has_bit(6);
}
inline void PBTemplateProperty::clear_floatminvalue() {
  floatminvalue_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBTemplateProperty::floatminvalue() const {
  return floatminvalue_;
}
inline void PBTemplateProperty::set_floatminvalue(::google::protobuf::uint32 value) {
  _set_bit(6);
  floatminvalue_ = value;
}

// optional uint32 FloatMaxValue = 8;
inline bool PBTemplateProperty::has_floatmaxvalue() const {
  return _has_bit(7);
}
inline void PBTemplateProperty::clear_floatmaxvalue() {
  floatmaxvalue_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBTemplateProperty::floatmaxvalue() const {
  return floatmaxvalue_;
}
inline void PBTemplateProperty::set_floatmaxvalue(::google::protobuf::uint32 value) {
  _set_bit(7);
  floatmaxvalue_ = value;
}

// optional uint32 SkillID = 9;
inline bool PBTemplateProperty::has_skillid() const {
  return _has_bit(8);
}
inline void PBTemplateProperty::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBTemplateProperty::skillid() const {
  return skillid_;
}
inline void PBTemplateProperty::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(8);
  skillid_ = value;
}

// optional uint32 Area = 10;
inline bool PBTemplateProperty::has_area() const {
  return _has_bit(9);
}
inline void PBTemplateProperty::clear_area() {
  area_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBTemplateProperty::area() const {
  return area_;
}
inline void PBTemplateProperty::set_area(::google::protobuf::uint32 value) {
  _set_bit(9);
  area_ = value;
}

// -------------------------------------------------------------------

// PBPropertyPercent

// optional uint32 TempID = 1;
inline bool PBPropertyPercent::has_tempid() const {
  return _has_bit(0);
}
inline void PBPropertyPercent::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPropertyPercent::tempid() const {
  return tempid_;
}
inline void PBPropertyPercent::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 Percent = 2;
inline bool PBPropertyPercent::has_percent() const {
  return _has_bit(1);
}
inline void PBPropertyPercent::clear_percent() {
  percent_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPropertyPercent::percent() const {
  return percent_;
}
inline void PBPropertyPercent::set_percent(::google::protobuf::uint32 value) {
  _set_bit(1);
  percent_ = value;
}

// -------------------------------------------------------------------

// PBTemplatePropertyTable

// optional uint32 TempID = 1;
inline bool PBTemplatePropertyTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBTemplatePropertyTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTemplatePropertyTable::tempid() const {
  return tempid_;
}
inline void PBTemplatePropertyTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBPropertyPercent Property = 2;
inline int PBTemplatePropertyTable::property_size() const {
  return property_.size();
}
inline void PBTemplatePropertyTable::clear_property() {
  property_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPropertyPercent >&
PBTemplatePropertyTable::property() const {
  return property_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPropertyPercent >*
PBTemplatePropertyTable::mutable_property() {
  return &property_;
}
inline const ::PBPropertyPercent& PBTemplatePropertyTable::property(int index) const {
  return property_.Get(index);
}
inline ::PBPropertyPercent* PBTemplatePropertyTable::mutable_property(int index) {
  return property_.Mutable(index);
}
inline ::PBPropertyPercent* PBTemplatePropertyTable::add_property() {
  return property_.Add();
}

// -------------------------------------------------------------------

// PBMetier

// optional uint32 TempID = 1;
inline bool PBMetier::has_tempid() const {
  return _has_bit(0);
}
inline void PBMetier::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMetier::tempid() const {
  return tempid_;
}
inline void PBMetier::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string MetierName = 2;
inline bool PBMetier::has_metiername() const {
  return _has_bit(1);
}
inline void PBMetier::clear_metiername() {
  if (metiername_ != &_default_metiername_) {
    metiername_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBMetier::metiername() const {
  return *metiername_;
}
inline void PBMetier::set_metiername(const ::std::string& value) {
  _set_bit(1);
  if (metiername_ == &_default_metiername_) {
    metiername_ = new ::std::string;
  }
  metiername_->assign(value);
}
inline void PBMetier::set_metiername(const char* value) {
  _set_bit(1);
  if (metiername_ == &_default_metiername_) {
    metiername_ = new ::std::string;
  }
  metiername_->assign(value);
}
inline void PBMetier::set_metiername(const char* value, size_t size) {
  _set_bit(1);
  if (metiername_ == &_default_metiername_) {
    metiername_ = new ::std::string;
  }
  metiername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMetier::mutable_metiername() {
  _set_bit(1);
  if (metiername_ == &_default_metiername_) {
    metiername_ = new ::std::string;
  }
  return metiername_;
}

// optional uint32 MetierID = 3;
inline bool PBMetier::has_metierid() const {
  return _has_bit(2);
}
inline void PBMetier::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMetier::metierid() const {
  return metierid_;
}
inline void PBMetier::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(2);
  metierid_ = value;
}

// repeated uint32 GenerID = 4;
inline int PBMetier::generid_size() const {
  return generid_.size();
}
inline void PBMetier::clear_generid() {
  generid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMetier::generid() const {
  return generid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMetier::mutable_generid() {
  return &generid_;
}
inline ::google::protobuf::uint32 PBMetier::generid(int index) const {
  return generid_.Get(index);
}
inline void PBMetier::set_generid(int index, ::google::protobuf::uint32 value) {
  generid_.Set(index, value);
}
inline void PBMetier::add_generid(::google::protobuf::uint32 value) {
  generid_.Add(value);
}

// optional uint32 SkillPoint = 5;
inline bool PBMetier::has_skillpoint() const {
  return _has_bit(4);
}
inline void PBMetier::clear_skillpoint() {
  skillpoint_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBMetier::skillpoint() const {
  return skillpoint_;
}
inline void PBMetier::set_skillpoint(::google::protobuf::uint32 value) {
  _set_bit(4);
  skillpoint_ = value;
}

// optional uint32 PropertyPoint = 6;
inline bool PBMetier::has_propertypoint() const {
  return _has_bit(5);
}
inline void PBMetier::clear_propertypoint() {
  propertypoint_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBMetier::propertypoint() const {
  return propertypoint_;
}
inline void PBMetier::set_propertypoint(::google::protobuf::uint32 value) {
  _set_bit(5);
  propertypoint_ = value;
}

// optional uint32 WalkSpeed = 7;
inline bool PBMetier::has_walkspeed() const {
  return _has_bit(6);
}
inline void PBMetier::clear_walkspeed() {
  walkspeed_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBMetier::walkspeed() const {
  return walkspeed_;
}
inline void PBMetier::set_walkspeed(::google::protobuf::uint32 value) {
  _set_bit(6);
  walkspeed_ = value;
}

// optional uint32 RunSpeed = 8;
inline bool PBMetier::has_runspeed() const {
  return _has_bit(7);
}
inline void PBMetier::clear_runspeed() {
  runspeed_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBMetier::runspeed() const {
  return runspeed_;
}
inline void PBMetier::set_runspeed(::google::protobuf::uint32 value) {
  _set_bit(7);
  runspeed_ = value;
}

// optional uint32 InitLevel = 9;
inline bool PBMetier::has_initlevel() const {
  return _has_bit(8);
}
inline void PBMetier::clear_initlevel() {
  initlevel_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMetier::initlevel() const {
  return initlevel_;
}
inline void PBMetier::set_initlevel(::google::protobuf::uint32 value) {
  _set_bit(8);
  initlevel_ = value;
}

// optional uint32 InitHP = 10;
inline bool PBMetier::has_inithp() const {
  return _has_bit(9);
}
inline void PBMetier::clear_inithp() {
  inithp_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBMetier::inithp() const {
  return inithp_;
}
inline void PBMetier::set_inithp(::google::protobuf::uint32 value) {
  _set_bit(9);
  inithp_ = value;
}

// optional uint32 InitMP = 11;
inline bool PBMetier::has_initmp() const {
  return _has_bit(10);
}
inline void PBMetier::clear_initmp() {
  initmp_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBMetier::initmp() const {
  return initmp_;
}
inline void PBMetier::set_initmp(::google::protobuf::uint32 value) {
  _set_bit(10);
  initmp_ = value;
}

// optional uint32 InitPAttack = 12;
inline bool PBMetier::has_initpattack() const {
  return _has_bit(11);
}
inline void PBMetier::clear_initpattack() {
  initpattack_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBMetier::initpattack() const {
  return initpattack_;
}
inline void PBMetier::set_initpattack(::google::protobuf::uint32 value) {
  _set_bit(11);
  initpattack_ = value;
}

// optional uint32 InitPDefense = 13;
inline bool PBMetier::has_initpdefense() const {
  return _has_bit(12);
}
inline void PBMetier::clear_initpdefense() {
  initpdefense_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBMetier::initpdefense() const {
  return initpdefense_;
}
inline void PBMetier::set_initpdefense(::google::protobuf::uint32 value) {
  _set_bit(12);
  initpdefense_ = value;
}

// optional uint32 InitMAttack = 14;
inline bool PBMetier::has_initmattack() const {
  return _has_bit(13);
}
inline void PBMetier::clear_initmattack() {
  initmattack_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBMetier::initmattack() const {
  return initmattack_;
}
inline void PBMetier::set_initmattack(::google::protobuf::uint32 value) {
  _set_bit(13);
  initmattack_ = value;
}

// optional uint32 InitMDefense = 15;
inline bool PBMetier::has_initmdefense() const {
  return _has_bit(14);
}
inline void PBMetier::clear_initmdefense() {
  initmdefense_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBMetier::initmdefense() const {
  return initmdefense_;
}
inline void PBMetier::set_initmdefense(::google::protobuf::uint32 value) {
  _set_bit(14);
  initmdefense_ = value;
}

// optional uint32 InitAbnResist = 16;
inline bool PBMetier::has_initabnresist() const {
  return _has_bit(15);
}
inline void PBMetier::clear_initabnresist() {
  initabnresist_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBMetier::initabnresist() const {
  return initabnresist_;
}
inline void PBMetier::set_initabnresist(::google::protobuf::uint32 value) {
  _set_bit(15);
  initabnresist_ = value;
}

// optional uint32 InitWindResist = 17;
inline bool PBMetier::has_initwindresist() const {
  return _has_bit(16);
}
inline void PBMetier::clear_initwindresist() {
  initwindresist_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBMetier::initwindresist() const {
  return initwindresist_;
}
inline void PBMetier::set_initwindresist(::google::protobuf::uint32 value) {
  _set_bit(16);
  initwindresist_ = value;
}

// optional uint32 InitFireResist = 18;
inline bool PBMetier::has_initfireresist() const {
  return _has_bit(17);
}
inline void PBMetier::clear_initfireresist() {
  initfireresist_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBMetier::initfireresist() const {
  return initfireresist_;
}
inline void PBMetier::set_initfireresist(::google::protobuf::uint32 value) {
  _set_bit(17);
  initfireresist_ = value;
}

// optional uint32 InitWaterResist = 19;
inline bool PBMetier::has_initwaterresist() const {
  return _has_bit(18);
}
inline void PBMetier::clear_initwaterresist() {
  initwaterresist_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBMetier::initwaterresist() const {
  return initwaterresist_;
}
inline void PBMetier::set_initwaterresist(::google::protobuf::uint32 value) {
  _set_bit(18);
  initwaterresist_ = value;
}

// optional uint32 InitLightResist = 20;
inline bool PBMetier::has_initlightresist() const {
  return _has_bit(19);
}
inline void PBMetier::clear_initlightresist() {
  initlightresist_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBMetier::initlightresist() const {
  return initlightresist_;
}
inline void PBMetier::set_initlightresist(::google::protobuf::uint32 value) {
  _set_bit(19);
  initlightresist_ = value;
}

// optional uint32 InitEarthResist = 21;
inline bool PBMetier::has_initearthresist() const {
  return _has_bit(20);
}
inline void PBMetier::clear_initearthresist() {
  initearthresist_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBMetier::initearthresist() const {
  return initearthresist_;
}
inline void PBMetier::set_initearthresist(::google::protobuf::uint32 value) {
  _set_bit(20);
  initearthresist_ = value;
}

// optional uint32 InitSadowResist = 22;
inline bool PBMetier::has_initsadowresist() const {
  return _has_bit(21);
}
inline void PBMetier::clear_initsadowresist() {
  initsadowresist_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBMetier::initsadowresist() const {
  return initsadowresist_;
}
inline void PBMetier::set_initsadowresist(::google::protobuf::uint32 value) {
  _set_bit(21);
  initsadowresist_ = value;
}

// optional uint32 InitDeathRate = 23;
inline bool PBMetier::has_initdeathrate() const {
  return _has_bit(22);
}
inline void PBMetier::clear_initdeathrate() {
  initdeathrate_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBMetier::initdeathrate() const {
  return initdeathrate_;
}
inline void PBMetier::set_initdeathrate(::google::protobuf::uint32 value) {
  _set_bit(22);
  initdeathrate_ = value;
}

// optional uint32 InitDeathValue = 24;
inline bool PBMetier::has_initdeathvalue() const {
  return _has_bit(23);
}
inline void PBMetier::clear_initdeathvalue() {
  initdeathvalue_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBMetier::initdeathvalue() const {
  return initdeathvalue_;
}
inline void PBMetier::set_initdeathvalue(::google::protobuf::uint32 value) {
  _set_bit(23);
  initdeathvalue_ = value;
}

// optional uint32 InitNmlHitrate = 25;
inline bool PBMetier::has_initnmlhitrate() const {
  return _has_bit(24);
}
inline void PBMetier::clear_initnmlhitrate() {
  initnmlhitrate_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBMetier::initnmlhitrate() const {
  return initnmlhitrate_;
}
inline void PBMetier::set_initnmlhitrate(::google::protobuf::uint32 value) {
  _set_bit(24);
  initnmlhitrate_ = value;
}

// optional uint32 InitNormalDuck = 26;
inline bool PBMetier::has_initnormalduck() const {
  return _has_bit(25);
}
inline void PBMetier::clear_initnormalduck() {
  initnormalduck_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBMetier::initnormalduck() const {
  return initnormalduck_;
}
inline void PBMetier::set_initnormalduck(::google::protobuf::uint32 value) {
  _set_bit(25);
  initnormalduck_ = value;
}

// optional uint32 InitSkillDuck = 27;
inline bool PBMetier::has_initskillduck() const {
  return _has_bit(26);
}
inline void PBMetier::clear_initskillduck() {
  initskillduck_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBMetier::initskillduck() const {
  return initskillduck_;
}
inline void PBMetier::set_initskillduck(::google::protobuf::uint32 value) {
  _set_bit(26);
  initskillduck_ = value;
}

// optional uint32 DeltaHP = 28;
inline bool PBMetier::has_deltahp() const {
  return _has_bit(27);
}
inline void PBMetier::clear_deltahp() {
  deltahp_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBMetier::deltahp() const {
  return deltahp_;
}
inline void PBMetier::set_deltahp(::google::protobuf::uint32 value) {
  _set_bit(27);
  deltahp_ = value;
}

// optional uint32 DeltaMP = 29;
inline bool PBMetier::has_deltamp() const {
  return _has_bit(28);
}
inline void PBMetier::clear_deltamp() {
  deltamp_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBMetier::deltamp() const {
  return deltamp_;
}
inline void PBMetier::set_deltamp(::google::protobuf::uint32 value) {
  _set_bit(28);
  deltamp_ = value;
}

// optional uint32 DeltaPAttack = 30;
inline bool PBMetier::has_deltapattack() const {
  return _has_bit(29);
}
inline void PBMetier::clear_deltapattack() {
  deltapattack_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBMetier::deltapattack() const {
  return deltapattack_;
}
inline void PBMetier::set_deltapattack(::google::protobuf::uint32 value) {
  _set_bit(29);
  deltapattack_ = value;
}

// optional uint32 DeltaPDefense = 31;
inline bool PBMetier::has_deltapdefense() const {
  return _has_bit(30);
}
inline void PBMetier::clear_deltapdefense() {
  deltapdefense_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBMetier::deltapdefense() const {
  return deltapdefense_;
}
inline void PBMetier::set_deltapdefense(::google::protobuf::uint32 value) {
  _set_bit(30);
  deltapdefense_ = value;
}

// optional uint32 DeltaMAttack = 32;
inline bool PBMetier::has_deltamattack() const {
  return _has_bit(31);
}
inline void PBMetier::clear_deltamattack() {
  deltamattack_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBMetier::deltamattack() const {
  return deltamattack_;
}
inline void PBMetier::set_deltamattack(::google::protobuf::uint32 value) {
  _set_bit(31);
  deltamattack_ = value;
}

// optional uint32 DeltaMDefense = 33;
inline bool PBMetier::has_deltamdefense() const {
  return _has_bit(32);
}
inline void PBMetier::clear_deltamdefense() {
  deltamdefense_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBMetier::deltamdefense() const {
  return deltamdefense_;
}
inline void PBMetier::set_deltamdefense(::google::protobuf::uint32 value) {
  _set_bit(32);
  deltamdefense_ = value;
}

// optional uint32 DeltaAbnResist = 34;
inline bool PBMetier::has_deltaabnresist() const {
  return _has_bit(33);
}
inline void PBMetier::clear_deltaabnresist() {
  deltaabnresist_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 PBMetier::deltaabnresist() const {
  return deltaabnresist_;
}
inline void PBMetier::set_deltaabnresist(::google::protobuf::uint32 value) {
  _set_bit(33);
  deltaabnresist_ = value;
}

// optional uint32 DeltaWindResist = 35;
inline bool PBMetier::has_deltawindresist() const {
  return _has_bit(34);
}
inline void PBMetier::clear_deltawindresist() {
  deltawindresist_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBMetier::deltawindresist() const {
  return deltawindresist_;
}
inline void PBMetier::set_deltawindresist(::google::protobuf::uint32 value) {
  _set_bit(34);
  deltawindresist_ = value;
}

// optional uint32 DeltaFireResist = 36;
inline bool PBMetier::has_deltafireresist() const {
  return _has_bit(35);
}
inline void PBMetier::clear_deltafireresist() {
  deltafireresist_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 PBMetier::deltafireresist() const {
  return deltafireresist_;
}
inline void PBMetier::set_deltafireresist(::google::protobuf::uint32 value) {
  _set_bit(35);
  deltafireresist_ = value;
}

// optional uint32 DeltaWaterResist = 37;
inline bool PBMetier::has_deltawaterresist() const {
  return _has_bit(36);
}
inline void PBMetier::clear_deltawaterresist() {
  deltawaterresist_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBMetier::deltawaterresist() const {
  return deltawaterresist_;
}
inline void PBMetier::set_deltawaterresist(::google::protobuf::uint32 value) {
  _set_bit(36);
  deltawaterresist_ = value;
}

// optional uint32 DeltaLightResist = 38;
inline bool PBMetier::has_deltalightresist() const {
  return _has_bit(37);
}
inline void PBMetier::clear_deltalightresist() {
  deltalightresist_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBMetier::deltalightresist() const {
  return deltalightresist_;
}
inline void PBMetier::set_deltalightresist(::google::protobuf::uint32 value) {
  _set_bit(37);
  deltalightresist_ = value;
}

// optional uint32 DeltaEarthResist = 39;
inline bool PBMetier::has_deltaearthresist() const {
  return _has_bit(38);
}
inline void PBMetier::clear_deltaearthresist() {
  deltaearthresist_ = 0u;
  _clear_bit(38);
}
inline ::google::protobuf::uint32 PBMetier::deltaearthresist() const {
  return deltaearthresist_;
}
inline void PBMetier::set_deltaearthresist(::google::protobuf::uint32 value) {
  _set_bit(38);
  deltaearthresist_ = value;
}

// optional uint32 DeltaShadowResist = 40;
inline bool PBMetier::has_deltashadowresist() const {
  return _has_bit(39);
}
inline void PBMetier::clear_deltashadowresist() {
  deltashadowresist_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBMetier::deltashadowresist() const {
  return deltashadowresist_;
}
inline void PBMetier::set_deltashadowresist(::google::protobuf::uint32 value) {
  _set_bit(39);
  deltashadowresist_ = value;
}

// optional uint32 DeltaDeathRate = 41;
inline bool PBMetier::has_deltadeathrate() const {
  return _has_bit(40);
}
inline void PBMetier::clear_deltadeathrate() {
  deltadeathrate_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBMetier::deltadeathrate() const {
  return deltadeathrate_;
}
inline void PBMetier::set_deltadeathrate(::google::protobuf::uint32 value) {
  _set_bit(40);
  deltadeathrate_ = value;
}

// optional uint32 DeltaDeathValue = 42;
inline bool PBMetier::has_deltadeathvalue() const {
  return _has_bit(41);
}
inline void PBMetier::clear_deltadeathvalue() {
  deltadeathvalue_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 PBMetier::deltadeathvalue() const {
  return deltadeathvalue_;
}
inline void PBMetier::set_deltadeathvalue(::google::protobuf::uint32 value) {
  _set_bit(41);
  deltadeathvalue_ = value;
}

// optional uint32 DeltaNormalHitrate = 43;
inline bool PBMetier::has_deltanormalhitrate() const {
  return _has_bit(42);
}
inline void PBMetier::clear_deltanormalhitrate() {
  deltanormalhitrate_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 PBMetier::deltanormalhitrate() const {
  return deltanormalhitrate_;
}
inline void PBMetier::set_deltanormalhitrate(::google::protobuf::uint32 value) {
  _set_bit(42);
  deltanormalhitrate_ = value;
}

// optional uint32 DeltaNormalDuck = 44;
inline bool PBMetier::has_deltanormalduck() const {
  return _has_bit(43);
}
inline void PBMetier::clear_deltanormalduck() {
  deltanormalduck_ = 0u;
  _clear_bit(43);
}
inline ::google::protobuf::uint32 PBMetier::deltanormalduck() const {
  return deltanormalduck_;
}
inline void PBMetier::set_deltanormalduck(::google::protobuf::uint32 value) {
  _set_bit(43);
  deltanormalduck_ = value;
}

// optional uint32 DeltaSkillDuck = 45;
inline bool PBMetier::has_deltaskillduck() const {
  return _has_bit(44);
}
inline void PBMetier::clear_deltaskillduck() {
  deltaskillduck_ = 0u;
  _clear_bit(44);
}
inline ::google::protobuf::uint32 PBMetier::deltaskillduck() const {
  return deltaskillduck_;
}
inline void PBMetier::set_deltaskillduck(::google::protobuf::uint32 value) {
  _set_bit(44);
  deltaskillduck_ = value;
}

// optional uint32 PAttackPerStr = 46;
inline bool PBMetier::has_pattackperstr() const {
  return _has_bit(45);
}
inline void PBMetier::clear_pattackperstr() {
  pattackperstr_ = 0u;
  _clear_bit(45);
}
inline ::google::protobuf::uint32 PBMetier::pattackperstr() const {
  return pattackperstr_;
}
inline void PBMetier::set_pattackperstr(::google::protobuf::uint32 value) {
  _set_bit(45);
  pattackperstr_ = value;
}

// optional uint32 DeathValuePerStr = 47;
inline bool PBMetier::has_deathvalueperstr() const {
  return _has_bit(46);
}
inline void PBMetier::clear_deathvalueperstr() {
  deathvalueperstr_ = 0u;
  _clear_bit(46);
}
inline ::google::protobuf::uint32 PBMetier::deathvalueperstr() const {
  return deathvalueperstr_;
}
inline void PBMetier::set_deathvalueperstr(::google::protobuf::uint32 value) {
  _set_bit(46);
  deathvalueperstr_ = value;
}

// optional uint32 MaxHPPerStr = 48;
inline bool PBMetier::has_maxhpperstr() const {
  return _has_bit(47);
}
inline void PBMetier::clear_maxhpperstr() {
  maxhpperstr_ = 0u;
  _clear_bit(47);
}
inline ::google::protobuf::uint32 PBMetier::maxhpperstr() const {
  return maxhpperstr_;
}
inline void PBMetier::set_maxhpperstr(::google::protobuf::uint32 value) {
  _set_bit(47);
  maxhpperstr_ = value;
}

// optional uint32 PDefensePerCon = 49;
inline bool PBMetier::has_pdefensepercon() const {
  return _has_bit(48);
}
inline void PBMetier::clear_pdefensepercon() {
  pdefensepercon_ = 0u;
  _clear_bit(48);
}
inline ::google::protobuf::uint32 PBMetier::pdefensepercon() const {
  return pdefensepercon_;
}
inline void PBMetier::set_pdefensepercon(::google::protobuf::uint32 value) {
  _set_bit(48);
  pdefensepercon_ = value;
}

// optional uint32 HPRSpeedPerCon = 50;
inline bool PBMetier::has_hprspeedpercon() const {
  return _has_bit(49);
}
inline void PBMetier::clear_hprspeedpercon() {
  hprspeedpercon_ = 0u;
  _clear_bit(49);
}
inline ::google::protobuf::uint32 PBMetier::hprspeedpercon() const {
  return hprspeedpercon_;
}
inline void PBMetier::set_hprspeedpercon(::google::protobuf::uint32 value) {
  _set_bit(49);
  hprspeedpercon_ = value;
}

// optional uint32 MaxHPPerSta = 51;
inline bool PBMetier::has_maxhppersta() const {
  return _has_bit(50);
}
inline void PBMetier::clear_maxhppersta() {
  maxhppersta_ = 0u;
  _clear_bit(50);
}
inline ::google::protobuf::uint32 PBMetier::maxhppersta() const {
  return maxhppersta_;
}
inline void PBMetier::set_maxhppersta(::google::protobuf::uint32 value) {
  _set_bit(50);
  maxhppersta_ = value;
}

// optional uint32 AbnResistPerSta = 52;
inline bool PBMetier::has_abnresistpersta() const {
  return _has_bit(51);
}
inline void PBMetier::clear_abnresistpersta() {
  abnresistpersta_ = 0u;
  _clear_bit(51);
}
inline ::google::protobuf::uint32 PBMetier::abnresistpersta() const {
  return abnresistpersta_;
}
inline void PBMetier::set_abnresistpersta(::google::protobuf::uint32 value) {
  _set_bit(51);
  abnresistpersta_ = value;
}

// optional uint32 MAttackPerWis = 53;
inline bool PBMetier::has_mattackperwis() const {
  return _has_bit(52);
}
inline void PBMetier::clear_mattackperwis() {
  mattackperwis_ = 0u;
  _clear_bit(52);
}
inline ::google::protobuf::uint32 PBMetier::mattackperwis() const {
  return mattackperwis_;
}
inline void PBMetier::set_mattackperwis(::google::protobuf::uint32 value) {
  _set_bit(52);
  mattackperwis_ = value;
}

// optional uint32 MaxMPPerWis = 54;
inline bool PBMetier::has_maxmpperwis() const {
  return _has_bit(53);
}
inline void PBMetier::clear_maxmpperwis() {
  maxmpperwis_ = 0u;
  _clear_bit(53);
}
inline ::google::protobuf::uint32 PBMetier::maxmpperwis() const {
  return maxmpperwis_;
}
inline void PBMetier::set_maxmpperwis(::google::protobuf::uint32 value) {
  _set_bit(53);
  maxmpperwis_ = value;
}

// optional uint32 DeathValuePerWis = 55;
inline bool PBMetier::has_deathvalueperwis() const {
  return _has_bit(54);
}
inline void PBMetier::clear_deathvalueperwis() {
  deathvalueperwis_ = 0u;
  _clear_bit(54);
}
inline ::google::protobuf::uint32 PBMetier::deathvalueperwis() const {
  return deathvalueperwis_;
}
inline void PBMetier::set_deathvalueperwis(::google::protobuf::uint32 value) {
  _set_bit(54);
  deathvalueperwis_ = value;
}

// optional uint32 MDefensePerSpr = 56;
inline bool PBMetier::has_mdefenseperspr() const {
  return _has_bit(55);
}
inline void PBMetier::clear_mdefenseperspr() {
  mdefenseperspr_ = 0u;
  _clear_bit(55);
}
inline ::google::protobuf::uint32 PBMetier::mdefenseperspr() const {
  return mdefenseperspr_;
}
inline void PBMetier::set_mdefenseperspr(::google::protobuf::uint32 value) {
  _set_bit(55);
  mdefenseperspr_ = value;
}

// optional uint32 MaxMPPerSpr = 57;
inline bool PBMetier::has_maxmpperspr() const {
  return _has_bit(56);
}
inline void PBMetier::clear_maxmpperspr() {
  maxmpperspr_ = 0u;
  _clear_bit(56);
}
inline ::google::protobuf::uint32 PBMetier::maxmpperspr() const {
  return maxmpperspr_;
}
inline void PBMetier::set_maxmpperspr(::google::protobuf::uint32 value) {
  _set_bit(56);
  maxmpperspr_ = value;
}

// optional uint32 MPRSpeedPerSpr = 58;
inline bool PBMetier::has_mprspeedperspr() const {
  return _has_bit(57);
}
inline void PBMetier::clear_mprspeedperspr() {
  mprspeedperspr_ = 0u;
  _clear_bit(57);
}
inline ::google::protobuf::uint32 PBMetier::mprspeedperspr() const {
  return mprspeedperspr_;
}
inline void PBMetier::set_mprspeedperspr(::google::protobuf::uint32 value) {
  _set_bit(57);
  mprspeedperspr_ = value;
}

// optional uint32 NormalHPRSpeed = 59;
inline bool PBMetier::has_normalhprspeed() const {
  return _has_bit(58);
}
inline void PBMetier::clear_normalhprspeed() {
  normalhprspeed_ = 0u;
  _clear_bit(58);
}
inline ::google::protobuf::uint32 PBMetier::normalhprspeed() const {
  return normalhprspeed_;
}
inline void PBMetier::set_normalhprspeed(::google::protobuf::uint32 value) {
  _set_bit(58);
  normalhprspeed_ = value;
}

// optional uint32 NormalSitHPRSpeed = 60;
inline bool PBMetier::has_normalsithprspeed() const {
  return _has_bit(59);
}
inline void PBMetier::clear_normalsithprspeed() {
  normalsithprspeed_ = 0u;
  _clear_bit(59);
}
inline ::google::protobuf::uint32 PBMetier::normalsithprspeed() const {
  return normalsithprspeed_;
}
inline void PBMetier::set_normalsithprspeed(::google::protobuf::uint32 value) {
  _set_bit(59);
  normalsithprspeed_ = value;
}

// optional uint32 BattleHPRSpeed = 61;
inline bool PBMetier::has_battlehprspeed() const {
  return _has_bit(60);
}
inline void PBMetier::clear_battlehprspeed() {
  battlehprspeed_ = 0u;
  _clear_bit(60);
}
inline ::google::protobuf::uint32 PBMetier::battlehprspeed() const {
  return battlehprspeed_;
}
inline void PBMetier::set_battlehprspeed(::google::protobuf::uint32 value) {
  _set_bit(60);
  battlehprspeed_ = value;
}

// optional uint32 BattleSitHPRSpeed = 62;
inline bool PBMetier::has_battlesithprspeed() const {
  return _has_bit(61);
}
inline void PBMetier::clear_battlesithprspeed() {
  battlesithprspeed_ = 0u;
  _clear_bit(61);
}
inline ::google::protobuf::uint32 PBMetier::battlesithprspeed() const {
  return battlesithprspeed_;
}
inline void PBMetier::set_battlesithprspeed(::google::protobuf::uint32 value) {
  _set_bit(61);
  battlesithprspeed_ = value;
}

// optional uint32 NormalMPRSpeed = 63;
inline bool PBMetier::has_normalmprspeed() const {
  return _has_bit(62);
}
inline void PBMetier::clear_normalmprspeed() {
  normalmprspeed_ = 0u;
  _clear_bit(62);
}
inline ::google::protobuf::uint32 PBMetier::normalmprspeed() const {
  return normalmprspeed_;
}
inline void PBMetier::set_normalmprspeed(::google::protobuf::uint32 value) {
  _set_bit(62);
  normalmprspeed_ = value;
}

// optional uint32 NormalSitMPRSpeed = 64;
inline bool PBMetier::has_normalsitmprspeed() const {
  return _has_bit(63);
}
inline void PBMetier::clear_normalsitmprspeed() {
  normalsitmprspeed_ = 0u;
  _clear_bit(63);
}
inline ::google::protobuf::uint32 PBMetier::normalsitmprspeed() const {
  return normalsitmprspeed_;
}
inline void PBMetier::set_normalsitmprspeed(::google::protobuf::uint32 value) {
  _set_bit(63);
  normalsitmprspeed_ = value;
}

// optional uint32 BattleMPRSpeed = 65;
inline bool PBMetier::has_battlemprspeed() const {
  return _has_bit(64);
}
inline void PBMetier::clear_battlemprspeed() {
  battlemprspeed_ = 0u;
  _clear_bit(64);
}
inline ::google::protobuf::uint32 PBMetier::battlemprspeed() const {
  return battlemprspeed_;
}
inline void PBMetier::set_battlemprspeed(::google::protobuf::uint32 value) {
  _set_bit(64);
  battlemprspeed_ = value;
}

// optional uint32 BattleSitMPRSpeed = 66;
inline bool PBMetier::has_battlesitmprspeed() const {
  return _has_bit(65);
}
inline void PBMetier::clear_battlesitmprspeed() {
  battlesitmprspeed_ = 0u;
  _clear_bit(65);
}
inline ::google::protobuf::uint32 PBMetier::battlesitmprspeed() const {
  return battlesitmprspeed_;
}
inline void PBMetier::set_battlesitmprspeed(::google::protobuf::uint32 value) {
  _set_bit(65);
  battlesitmprspeed_ = value;
}

// optional uint32 InitIgnoreDuck = 67;
inline bool PBMetier::has_initignoreduck() const {
  return _has_bit(66);
}
inline void PBMetier::clear_initignoreduck() {
  initignoreduck_ = 0u;
  _clear_bit(66);
}
inline ::google::protobuf::uint32 PBMetier::initignoreduck() const {
  return initignoreduck_;
}
inline void PBMetier::set_initignoreduck(::google::protobuf::uint32 value) {
  _set_bit(66);
  initignoreduck_ = value;
}

// optional uint32 DeltaIgnoreDuck = 68;
inline bool PBMetier::has_deltaignoreduck() const {
  return _has_bit(67);
}
inline void PBMetier::clear_deltaignoreduck() {
  deltaignoreduck_ = 0u;
  _clear_bit(67);
}
inline ::google::protobuf::uint32 PBMetier::deltaignoreduck() const {
  return deltaignoreduck_;
}
inline void PBMetier::set_deltaignoreduck(::google::protobuf::uint32 value) {
  _set_bit(67);
  deltaignoreduck_ = value;
}

// optional uint32 MAttackPerStr = 69;
inline bool PBMetier::has_mattackperstr() const {
  return _has_bit(68);
}
inline void PBMetier::clear_mattackperstr() {
  mattackperstr_ = 0u;
  _clear_bit(68);
}
inline ::google::protobuf::uint32 PBMetier::mattackperstr() const {
  return mattackperstr_;
}
inline void PBMetier::set_mattackperstr(::google::protobuf::uint32 value) {
  _set_bit(68);
  mattackperstr_ = value;
}

// optional uint32 DeathRatePerStr = 70;
inline bool PBMetier::has_deathrateperstr() const {
  return _has_bit(69);
}
inline void PBMetier::clear_deathrateperstr() {
  deathrateperstr_ = 0u;
  _clear_bit(69);
}
inline ::google::protobuf::uint32 PBMetier::deathrateperstr() const {
  return deathrateperstr_;
}
inline void PBMetier::set_deathrateperstr(::google::protobuf::uint32 value) {
  _set_bit(69);
  deathrateperstr_ = value;
}

// optional uint32 MaxMPPerStr = 71;
inline bool PBMetier::has_maxmpperstr() const {
  return _has_bit(70);
}
inline void PBMetier::clear_maxmpperstr() {
  maxmpperstr_ = 0u;
  _clear_bit(70);
}
inline ::google::protobuf::uint32 PBMetier::maxmpperstr() const {
  return maxmpperstr_;
}
inline void PBMetier::set_maxmpperstr(::google::protobuf::uint32 value) {
  _set_bit(70);
  maxmpperstr_ = value;
}

// optional uint32 PDefensePerStr = 72;
inline bool PBMetier::has_pdefenseperstr() const {
  return _has_bit(71);
}
inline void PBMetier::clear_pdefenseperstr() {
  pdefenseperstr_ = 0u;
  _clear_bit(71);
}
inline ::google::protobuf::uint32 PBMetier::pdefenseperstr() const {
  return pdefenseperstr_;
}
inline void PBMetier::set_pdefenseperstr(::google::protobuf::uint32 value) {
  _set_bit(71);
  pdefenseperstr_ = value;
}

// optional uint32 MDefensePerStr = 73;
inline bool PBMetier::has_mdefenseperstr() const {
  return _has_bit(72);
}
inline void PBMetier::clear_mdefenseperstr() {
  mdefenseperstr_ = 0u;
  _clear_bit(72);
}
inline ::google::protobuf::uint32 PBMetier::mdefenseperstr() const {
  return mdefenseperstr_;
}
inline void PBMetier::set_mdefenseperstr(::google::protobuf::uint32 value) {
  _set_bit(72);
  mdefenseperstr_ = value;
}

// optional uint32 NmlHitratePerStr = 74;
inline bool PBMetier::has_nmlhitrateperstr() const {
  return _has_bit(73);
}
inline void PBMetier::clear_nmlhitrateperstr() {
  nmlhitrateperstr_ = 0u;
  _clear_bit(73);
}
inline ::google::protobuf::uint32 PBMetier::nmlhitrateperstr() const {
  return nmlhitrateperstr_;
}
inline void PBMetier::set_nmlhitrateperstr(::google::protobuf::uint32 value) {
  _set_bit(73);
  nmlhitrateperstr_ = value;
}

// optional uint32 NormalDuckPerStr = 75;
inline bool PBMetier::has_normalduckperstr() const {
  return _has_bit(74);
}
inline void PBMetier::clear_normalduckperstr() {
  normalduckperstr_ = 0u;
  _clear_bit(74);
}
inline ::google::protobuf::uint32 PBMetier::normalduckperstr() const {
  return normalduckperstr_;
}
inline void PBMetier::set_normalduckperstr(::google::protobuf::uint32 value) {
  _set_bit(74);
  normalduckperstr_ = value;
}

// optional uint32 IgnoreDuckPerStr = 76;
inline bool PBMetier::has_ignoreduckperstr() const {
  return _has_bit(75);
}
inline void PBMetier::clear_ignoreduckperstr() {
  ignoreduckperstr_ = 0u;
  _clear_bit(75);
}
inline ::google::protobuf::uint32 PBMetier::ignoreduckperstr() const {
  return ignoreduckperstr_;
}
inline void PBMetier::set_ignoreduckperstr(::google::protobuf::uint32 value) {
  _set_bit(75);
  ignoreduckperstr_ = value;
}

// optional uint32 PAttackPerCon = 77;
inline bool PBMetier::has_pattackpercon() const {
  return _has_bit(76);
}
inline void PBMetier::clear_pattackpercon() {
  pattackpercon_ = 0u;
  _clear_bit(76);
}
inline ::google::protobuf::uint32 PBMetier::pattackpercon() const {
  return pattackpercon_;
}
inline void PBMetier::set_pattackpercon(::google::protobuf::uint32 value) {
  _set_bit(76);
  pattackpercon_ = value;
}

// optional uint32 MAttackPerCon = 78;
inline bool PBMetier::has_mattackpercon() const {
  return _has_bit(77);
}
inline void PBMetier::clear_mattackpercon() {
  mattackpercon_ = 0u;
  _clear_bit(77);
}
inline ::google::protobuf::uint32 PBMetier::mattackpercon() const {
  return mattackpercon_;
}
inline void PBMetier::set_mattackpercon(::google::protobuf::uint32 value) {
  _set_bit(77);
  mattackpercon_ = value;
}

// optional uint32 DeathRatePerCon = 79;
inline bool PBMetier::has_deathratepercon() const {
  return _has_bit(78);
}
inline void PBMetier::clear_deathratepercon() {
  deathratepercon_ = 0u;
  _clear_bit(78);
}
inline ::google::protobuf::uint32 PBMetier::deathratepercon() const {
  return deathratepercon_;
}
inline void PBMetier::set_deathratepercon(::google::protobuf::uint32 value) {
  _set_bit(78);
  deathratepercon_ = value;
}

// optional uint32 DeathValuePerCon = 80;
inline bool PBMetier::has_deathvaluepercon() const {
  return _has_bit(79);
}
inline void PBMetier::clear_deathvaluepercon() {
  deathvaluepercon_ = 0u;
  _clear_bit(79);
}
inline ::google::protobuf::uint32 PBMetier::deathvaluepercon() const {
  return deathvaluepercon_;
}
inline void PBMetier::set_deathvaluepercon(::google::protobuf::uint32 value) {
  _set_bit(79);
  deathvaluepercon_ = value;
}

// optional uint32 MaxHPPerCon = 81;
inline bool PBMetier::has_maxhppercon() const {
  return _has_bit(80);
}
inline void PBMetier::clear_maxhppercon() {
  maxhppercon_ = 0u;
  _clear_bit(80);
}
inline ::google::protobuf::uint32 PBMetier::maxhppercon() const {
  return maxhppercon_;
}
inline void PBMetier::set_maxhppercon(::google::protobuf::uint32 value) {
  _set_bit(80);
  maxhppercon_ = value;
}

// optional uint32 MaxMPPerCon = 82;
inline bool PBMetier::has_maxmppercon() const {
  return _has_bit(81);
}
inline void PBMetier::clear_maxmppercon() {
  maxmppercon_ = 0u;
  _clear_bit(81);
}
inline ::google::protobuf::uint32 PBMetier::maxmppercon() const {
  return maxmppercon_;
}
inline void PBMetier::set_maxmppercon(::google::protobuf::uint32 value) {
  _set_bit(81);
  maxmppercon_ = value;
}

// optional uint32 MDefensePerCon = 83;
inline bool PBMetier::has_mdefensepercon() const {
  return _has_bit(82);
}
inline void PBMetier::clear_mdefensepercon() {
  mdefensepercon_ = 0u;
  _clear_bit(82);
}
inline ::google::protobuf::uint32 PBMetier::mdefensepercon() const {
  return mdefensepercon_;
}
inline void PBMetier::set_mdefensepercon(::google::protobuf::uint32 value) {
  _set_bit(82);
  mdefensepercon_ = value;
}

// optional uint32 NmlHitratePerCon = 84;
inline bool PBMetier::has_nmlhitratepercon() const {
  return _has_bit(83);
}
inline void PBMetier::clear_nmlhitratepercon() {
  nmlhitratepercon_ = 0u;
  _clear_bit(83);
}
inline ::google::protobuf::uint32 PBMetier::nmlhitratepercon() const {
  return nmlhitratepercon_;
}
inline void PBMetier::set_nmlhitratepercon(::google::protobuf::uint32 value) {
  _set_bit(83);
  nmlhitratepercon_ = value;
}

// optional uint32 NormalDuckPerCon = 85;
inline bool PBMetier::has_normalduckpercon() const {
  return _has_bit(84);
}
inline void PBMetier::clear_normalduckpercon() {
  normalduckpercon_ = 0u;
  _clear_bit(84);
}
inline ::google::protobuf::uint32 PBMetier::normalduckpercon() const {
  return normalduckpercon_;
}
inline void PBMetier::set_normalduckpercon(::google::protobuf::uint32 value) {
  _set_bit(84);
  normalduckpercon_ = value;
}

// optional uint32 IgnoreDuckPerCon = 86;
inline bool PBMetier::has_ignoreduckpercon() const {
  return _has_bit(85);
}
inline void PBMetier::clear_ignoreduckpercon() {
  ignoreduckpercon_ = 0u;
  _clear_bit(85);
}
inline ::google::protobuf::uint32 PBMetier::ignoreduckpercon() const {
  return ignoreduckpercon_;
}
inline void PBMetier::set_ignoreduckpercon(::google::protobuf::uint32 value) {
  _set_bit(85);
  ignoreduckpercon_ = value;
}

// optional uint32 PReducePerSta = 87;
inline bool PBMetier::has_preducepersta() const {
  return _has_bit(86);
}
inline void PBMetier::clear_preducepersta() {
  preducepersta_ = 0u;
  _clear_bit(86);
}
inline ::google::protobuf::uint32 PBMetier::preducepersta() const {
  return preducepersta_;
}
inline void PBMetier::set_preducepersta(::google::protobuf::uint32 value) {
  _set_bit(86);
  preducepersta_ = value;
}

// optional uint32 MReducePerSta = 88;
inline bool PBMetier::has_mreducepersta() const {
  return _has_bit(87);
}
inline void PBMetier::clear_mreducepersta() {
  mreducepersta_ = 0u;
  _clear_bit(87);
}
inline ::google::protobuf::uint32 PBMetier::mreducepersta() const {
  return mreducepersta_;
}
inline void PBMetier::set_mreducepersta(::google::protobuf::uint32 value) {
  _set_bit(87);
  mreducepersta_ = value;
}

// optional uint32 PAttackPerWis = 89;
inline bool PBMetier::has_pattackperwis() const {
  return _has_bit(88);
}
inline void PBMetier::clear_pattackperwis() {
  pattackperwis_ = 0u;
  _clear_bit(88);
}
inline ::google::protobuf::uint32 PBMetier::pattackperwis() const {
  return pattackperwis_;
}
inline void PBMetier::set_pattackperwis(::google::protobuf::uint32 value) {
  _set_bit(88);
  pattackperwis_ = value;
}

// optional uint32 MaxHPPerWis = 90;
inline bool PBMetier::has_maxhpperwis() const {
  return _has_bit(89);
}
inline void PBMetier::clear_maxhpperwis() {
  maxhpperwis_ = 0u;
  _clear_bit(89);
}
inline ::google::protobuf::uint32 PBMetier::maxhpperwis() const {
  return maxhpperwis_;
}
inline void PBMetier::set_maxhpperwis(::google::protobuf::uint32 value) {
  _set_bit(89);
  maxhpperwis_ = value;
}

// optional uint32 DeathRatePerWis = 91;
inline bool PBMetier::has_deathrateperwis() const {
  return _has_bit(90);
}
inline void PBMetier::clear_deathrateperwis() {
  deathrateperwis_ = 0u;
  _clear_bit(90);
}
inline ::google::protobuf::uint32 PBMetier::deathrateperwis() const {
  return deathrateperwis_;
}
inline void PBMetier::set_deathrateperwis(::google::protobuf::uint32 value) {
  _set_bit(90);
  deathrateperwis_ = value;
}

// optional uint32 PDefensePerWis = 92;
inline bool PBMetier::has_pdefenseperwis() const {
  return _has_bit(91);
}
inline void PBMetier::clear_pdefenseperwis() {
  pdefenseperwis_ = 0u;
  _clear_bit(91);
}
inline ::google::protobuf::uint32 PBMetier::pdefenseperwis() const {
  return pdefenseperwis_;
}
inline void PBMetier::set_pdefenseperwis(::google::protobuf::uint32 value) {
  _set_bit(91);
  pdefenseperwis_ = value;
}

// optional uint32 MDefensePerWis = 93;
inline bool PBMetier::has_mdefenseperwis() const {
  return _has_bit(92);
}
inline void PBMetier::clear_mdefenseperwis() {
  mdefenseperwis_ = 0u;
  _clear_bit(92);
}
inline ::google::protobuf::uint32 PBMetier::mdefenseperwis() const {
  return mdefenseperwis_;
}
inline void PBMetier::set_mdefenseperwis(::google::protobuf::uint32 value) {
  _set_bit(92);
  mdefenseperwis_ = value;
}

// optional uint32 NmlHitratePerWis = 94;
inline bool PBMetier::has_nmlhitrateperwis() const {
  return _has_bit(93);
}
inline void PBMetier::clear_nmlhitrateperwis() {
  nmlhitrateperwis_ = 0u;
  _clear_bit(93);
}
inline ::google::protobuf::uint32 PBMetier::nmlhitrateperwis() const {
  return nmlhitrateperwis_;
}
inline void PBMetier::set_nmlhitrateperwis(::google::protobuf::uint32 value) {
  _set_bit(93);
  nmlhitrateperwis_ = value;
}

// optional uint32 NormalDuckPerWis = 95;
inline bool PBMetier::has_normalduckperwis() const {
  return _has_bit(94);
}
inline void PBMetier::clear_normalduckperwis() {
  normalduckperwis_ = 0u;
  _clear_bit(94);
}
inline ::google::protobuf::uint32 PBMetier::normalduckperwis() const {
  return normalduckperwis_;
}
inline void PBMetier::set_normalduckperwis(::google::protobuf::uint32 value) {
  _set_bit(94);
  normalduckperwis_ = value;
}

// optional uint32 IgnoreDuckPerWis = 96;
inline bool PBMetier::has_ignoreduckperwis() const {
  return _has_bit(95);
}
inline void PBMetier::clear_ignoreduckperwis() {
  ignoreduckperwis_ = 0u;
  _clear_bit(95);
}
inline ::google::protobuf::uint32 PBMetier::ignoreduckperwis() const {
  return ignoreduckperwis_;
}
inline void PBMetier::set_ignoreduckperwis(::google::protobuf::uint32 value) {
  _set_bit(95);
  ignoreduckperwis_ = value;
}

// optional uint32 PAttackPerSpr = 97;
inline bool PBMetier::has_pattackperspr() const {
  return _has_bit(96);
}
inline void PBMetier::clear_pattackperspr() {
  pattackperspr_ = 0u;
  _clear_bit(96);
}
inline ::google::protobuf::uint32 PBMetier::pattackperspr() const {
  return pattackperspr_;
}
inline void PBMetier::set_pattackperspr(::google::protobuf::uint32 value) {
  _set_bit(96);
  pattackperspr_ = value;
}

// optional uint32 MAttackPerSpr = 98;
inline bool PBMetier::has_mattackperspr() const {
  return _has_bit(97);
}
inline void PBMetier::clear_mattackperspr() {
  mattackperspr_ = 0u;
  _clear_bit(97);
}
inline ::google::protobuf::uint32 PBMetier::mattackperspr() const {
  return mattackperspr_;
}
inline void PBMetier::set_mattackperspr(::google::protobuf::uint32 value) {
  _set_bit(97);
  mattackperspr_ = value;
}

// optional uint32 DeathRatePerSpr = 99;
inline bool PBMetier::has_deathrateperspr() const {
  return _has_bit(98);
}
inline void PBMetier::clear_deathrateperspr() {
  deathrateperspr_ = 0u;
  _clear_bit(98);
}
inline ::google::protobuf::uint32 PBMetier::deathrateperspr() const {
  return deathrateperspr_;
}
inline void PBMetier::set_deathrateperspr(::google::protobuf::uint32 value) {
  _set_bit(98);
  deathrateperspr_ = value;
}

// optional uint32 DeathValuePerSpr = 100;
inline bool PBMetier::has_deathvalueperspr() const {
  return _has_bit(99);
}
inline void PBMetier::clear_deathvalueperspr() {
  deathvalueperspr_ = 0u;
  _clear_bit(99);
}
inline ::google::protobuf::uint32 PBMetier::deathvalueperspr() const {
  return deathvalueperspr_;
}
inline void PBMetier::set_deathvalueperspr(::google::protobuf::uint32 value) {
  _set_bit(99);
  deathvalueperspr_ = value;
}

// optional uint32 MaxHPPerSpr = 101;
inline bool PBMetier::has_maxhpperspr() const {
  return _has_bit(100);
}
inline void PBMetier::clear_maxhpperspr() {
  maxhpperspr_ = 0u;
  _clear_bit(100);
}
inline ::google::protobuf::uint32 PBMetier::maxhpperspr() const {
  return maxhpperspr_;
}
inline void PBMetier::set_maxhpperspr(::google::protobuf::uint32 value) {
  _set_bit(100);
  maxhpperspr_ = value;
}

// optional uint32 PDefensePerSpr = 102;
inline bool PBMetier::has_pdefenseperspr() const {
  return _has_bit(101);
}
inline void PBMetier::clear_pdefenseperspr() {
  pdefenseperspr_ = 0u;
  _clear_bit(101);
}
inline ::google::protobuf::uint32 PBMetier::pdefenseperspr() const {
  return pdefenseperspr_;
}
inline void PBMetier::set_pdefenseperspr(::google::protobuf::uint32 value) {
  _set_bit(101);
  pdefenseperspr_ = value;
}

// optional uint32 NmlHitratePerSpr = 103;
inline bool PBMetier::has_nmlhitrateperspr() const {
  return _has_bit(102);
}
inline void PBMetier::clear_nmlhitrateperspr() {
  nmlhitrateperspr_ = 0u;
  _clear_bit(102);
}
inline ::google::protobuf::uint32 PBMetier::nmlhitrateperspr() const {
  return nmlhitrateperspr_;
}
inline void PBMetier::set_nmlhitrateperspr(::google::protobuf::uint32 value) {
  _set_bit(102);
  nmlhitrateperspr_ = value;
}

// optional uint32 NormalDuckPerSpr = 104;
inline bool PBMetier::has_normalduckperspr() const {
  return _has_bit(103);
}
inline void PBMetier::clear_normalduckperspr() {
  normalduckperspr_ = 0u;
  _clear_bit(103);
}
inline ::google::protobuf::uint32 PBMetier::normalduckperspr() const {
  return normalduckperspr_;
}
inline void PBMetier::set_normalduckperspr(::google::protobuf::uint32 value) {
  _set_bit(103);
  normalduckperspr_ = value;
}

// optional uint32 IgnoreDuckPerSpr = 105;
inline bool PBMetier::has_ignoreduckperspr() const {
  return _has_bit(104);
}
inline void PBMetier::clear_ignoreduckperspr() {
  ignoreduckperspr_ = 0u;
  _clear_bit(104);
}
inline ::google::protobuf::uint32 PBMetier::ignoreduckperspr() const {
  return ignoreduckperspr_;
}
inline void PBMetier::set_ignoreduckperspr(::google::protobuf::uint32 value) {
  _set_bit(104);
  ignoreduckperspr_ = value;
}

// optional uint32 InitDeathDefense = 106;
inline bool PBMetier::has_initdeathdefense() const {
  return _has_bit(105);
}
inline void PBMetier::clear_initdeathdefense() {
  initdeathdefense_ = 0u;
  _clear_bit(105);
}
inline ::google::protobuf::uint32 PBMetier::initdeathdefense() const {
  return initdeathdefense_;
}
inline void PBMetier::set_initdeathdefense(::google::protobuf::uint32 value) {
  _set_bit(105);
  initdeathdefense_ = value;
}

// optional uint32 DeltaDeathDefense = 107;
inline bool PBMetier::has_deltadeathdefense() const {
  return _has_bit(106);
}
inline void PBMetier::clear_deltadeathdefense() {
  deltadeathdefense_ = 0u;
  _clear_bit(106);
}
inline ::google::protobuf::uint32 PBMetier::deltadeathdefense() const {
  return deltadeathdefense_;
}
inline void PBMetier::set_deltadeathdefense(::google::protobuf::uint32 value) {
  _set_bit(106);
  deltadeathdefense_ = value;
}

// optional uint32 DeathDefensePerStr = 108;
inline bool PBMetier::has_deathdefenseperstr() const {
  return _has_bit(107);
}
inline void PBMetier::clear_deathdefenseperstr() {
  deathdefenseperstr_ = 0u;
  _clear_bit(107);
}
inline ::google::protobuf::uint32 PBMetier::deathdefenseperstr() const {
  return deathdefenseperstr_;
}
inline void PBMetier::set_deathdefenseperstr(::google::protobuf::uint32 value) {
  _set_bit(107);
  deathdefenseperstr_ = value;
}

// optional uint32 DeathDefensePerCon = 109;
inline bool PBMetier::has_deathdefensepercon() const {
  return _has_bit(108);
}
inline void PBMetier::clear_deathdefensepercon() {
  deathdefensepercon_ = 0u;
  _clear_bit(108);
}
inline ::google::protobuf::uint32 PBMetier::deathdefensepercon() const {
  return deathdefensepercon_;
}
inline void PBMetier::set_deathdefensepercon(::google::protobuf::uint32 value) {
  _set_bit(108);
  deathdefensepercon_ = value;
}

// optional uint32 DeathDefensePerSta = 110;
inline bool PBMetier::has_deathdefensepersta() const {
  return _has_bit(109);
}
inline void PBMetier::clear_deathdefensepersta() {
  deathdefensepersta_ = 0u;
  _clear_bit(109);
}
inline ::google::protobuf::uint32 PBMetier::deathdefensepersta() const {
  return deathdefensepersta_;
}
inline void PBMetier::set_deathdefensepersta(::google::protobuf::uint32 value) {
  _set_bit(109);
  deathdefensepersta_ = value;
}

// optional uint32 DeathDefensePerWis = 111;
inline bool PBMetier::has_deathdefenseperwis() const {
  return _has_bit(110);
}
inline void PBMetier::clear_deathdefenseperwis() {
  deathdefenseperwis_ = 0u;
  _clear_bit(110);
}
inline ::google::protobuf::uint32 PBMetier::deathdefenseperwis() const {
  return deathdefenseperwis_;
}
inline void PBMetier::set_deathdefenseperwis(::google::protobuf::uint32 value) {
  _set_bit(110);
  deathdefenseperwis_ = value;
}

// optional uint32 DeathDefensePerSpr = 112;
inline bool PBMetier::has_deathdefenseperspr() const {
  return _has_bit(111);
}
inline void PBMetier::clear_deathdefenseperspr() {
  deathdefenseperspr_ = 0u;
  _clear_bit(111);
}
inline ::google::protobuf::uint32 PBMetier::deathdefenseperspr() const {
  return deathdefenseperspr_;
}
inline void PBMetier::set_deathdefenseperspr(::google::protobuf::uint32 value) {
  _set_bit(111);
  deathdefenseperspr_ = value;
}

// -------------------------------------------------------------------

// PBNpc

// optional .PBOgreProperty Ogre = 1;
inline bool PBNpc::has_ogre() const {
  return _has_bit(0);
}
inline void PBNpc::clear_ogre() {
  if (ogre_ != NULL) ogre_->::PBOgreProperty::Clear();
  _clear_bit(0);
}
inline const ::PBOgreProperty& PBNpc::ogre() const {
  return ogre_ != NULL ? *ogre_ : *default_instance_->ogre_;
}
inline ::PBOgreProperty* PBNpc::mutable_ogre() {
  _set_bit(0);
  if (ogre_ == NULL) ogre_ = new ::PBOgreProperty;
  return ogre_;
}

// optional uint32 FuncType = 2;
inline bool PBNpc::has_functype() const {
  return _has_bit(1);
}
inline void PBNpc::clear_functype() {
  functype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBNpc::functype() const {
  return functype_;
}
inline void PBNpc::set_functype(::google::protobuf::uint32 value) {
  _set_bit(1);
  functype_ = value;
}

// optional string Talk = 3;
inline bool PBNpc::has_talk() const {
  return _has_bit(2);
}
inline void PBNpc::clear_talk() {
  if (talk_ != &_default_talk_) {
    talk_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBNpc::talk() const {
  return *talk_;
}
inline void PBNpc::set_talk(const ::std::string& value) {
  _set_bit(2);
  if (talk_ == &_default_talk_) {
    talk_ = new ::std::string;
  }
  talk_->assign(value);
}
inline void PBNpc::set_talk(const char* value) {
  _set_bit(2);
  if (talk_ == &_default_talk_) {
    talk_ = new ::std::string;
  }
  talk_->assign(value);
}
inline void PBNpc::set_talk(const char* value, size_t size) {
  _set_bit(2);
  if (talk_ == &_default_talk_) {
    talk_ = new ::std::string;
  }
  talk_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBNpc::mutable_talk() {
  _set_bit(2);
  if (talk_ == &_default_talk_) {
    talk_ = new ::std::string;
  }
  return talk_;
}

// optional uint32 StageID = 4;
inline bool PBNpc::has_stageid() const {
  return _has_bit(3);
}
inline void PBNpc::clear_stageid() {
  stageid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBNpc::stageid() const {
  return stageid_;
}
inline void PBNpc::set_stageid(::google::protobuf::uint32 value) {
  _set_bit(3);
  stageid_ = value;
}

// optional uint32 TalkServiceID = 5;
inline bool PBNpc::has_talkserviceid() const {
  return _has_bit(4);
}
inline void PBNpc::clear_talkserviceid() {
  talkserviceid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBNpc::talkserviceid() const {
  return talkserviceid_;
}
inline void PBNpc::set_talkserviceid(::google::protobuf::uint32 value) {
  _set_bit(4);
  talkserviceid_ = value;
}

// optional uint32 SellServiceID = 6;
inline bool PBNpc::has_sellserviceid() const {
  return _has_bit(5);
}
inline void PBNpc::clear_sellserviceid() {
  sellserviceid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBNpc::sellserviceid() const {
  return sellserviceid_;
}
inline void PBNpc::set_sellserviceid(::google::protobuf::uint32 value) {
  _set_bit(5);
  sellserviceid_ = value;
}

// optional uint32 MailService = 7;
inline bool PBNpc::has_mailservice() const {
  return _has_bit(6);
}
inline void PBNpc::clear_mailservice() {
  mailservice_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBNpc::mailservice() const {
  return mailservice_;
}
inline void PBNpc::set_mailservice(::google::protobuf::uint32 value) {
  _set_bit(6);
  mailservice_ = value;
}

// optional uint32 StorageService = 8;
inline bool PBNpc::has_storageservice() const {
  return _has_bit(7);
}
inline void PBNpc::clear_storageservice() {
  storageservice_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBNpc::storageservice() const {
  return storageservice_;
}
inline void PBNpc::set_storageservice(::google::protobuf::uint32 value) {
  _set_bit(7);
  storageservice_ = value;
}

// optional uint32 UpgService = 9;
inline bool PBNpc::has_upgservice() const {
  return _has_bit(8);
}
inline void PBNpc::clear_upgservice() {
  upgservice_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBNpc::upgservice() const {
  return upgservice_;
}
inline void PBNpc::set_upgservice(::google::protobuf::uint32 value) {
  _set_bit(8);
  upgservice_ = value;
}

// optional uint32 EqtBindService = 10;
inline bool PBNpc::has_eqtbindservice() const {
  return _has_bit(9);
}
inline void PBNpc::clear_eqtbindservice() {
  eqtbindservice_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBNpc::eqtbindservice() const {
  return eqtbindservice_;
}
inline void PBNpc::set_eqtbindservice(::google::protobuf::uint32 value) {
  _set_bit(9);
  eqtbindservice_ = value;
}

// optional uint32 WelfareService = 11;
inline bool PBNpc::has_welfareservice() const {
  return _has_bit(10);
}
inline void PBNpc::clear_welfareservice() {
  welfareservice_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBNpc::welfareservice() const {
  return welfareservice_;
}
inline void PBNpc::set_welfareservice(::google::protobuf::uint32 value) {
  _set_bit(10);
  welfareservice_ = value;
}

// optional string Describe = 12;
inline bool PBNpc::has_describe() const {
  return _has_bit(11);
}
inline void PBNpc::clear_describe() {
  if (describe_ != &_default_describe_) {
    describe_->clear();
  }
  _clear_bit(11);
}
inline const ::std::string& PBNpc::describe() const {
  return *describe_;
}
inline void PBNpc::set_describe(const ::std::string& value) {
  _set_bit(11);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void PBNpc::set_describe(const char* value) {
  _set_bit(11);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void PBNpc::set_describe(const char* value, size_t size) {
  _set_bit(11);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBNpc::mutable_describe() {
  _set_bit(11);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  return describe_;
}

// optional uint32 StudySkillID = 13;
inline bool PBNpc::has_studyskillid() const {
  return _has_bit(12);
}
inline void PBNpc::clear_studyskillid() {
  studyskillid_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBNpc::studyskillid() const {
  return studyskillid_;
}
inline void PBNpc::set_studyskillid(::google::protobuf::uint32 value) {
  _set_bit(12);
  studyskillid_ = value;
}

// optional uint32 TownX = 14;
inline bool PBNpc::has_townx() const {
  return _has_bit(13);
}
inline void PBNpc::clear_townx() {
  townx_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBNpc::townx() const {
  return townx_;
}
inline void PBNpc::set_townx(::google::protobuf::uint32 value) {
  _set_bit(13);
  townx_ = value;
}

// optional uint32 TownY = 15;
inline bool PBNpc::has_towny() const {
  return _has_bit(14);
}
inline void PBNpc::clear_towny() {
  towny_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBNpc::towny() const {
  return towny_;
}
inline void PBNpc::set_towny(::google::protobuf::uint32 value) {
  _set_bit(14);
  towny_ = value;
}

// optional uint32 StorageTaskNpc = 16;
inline bool PBNpc::has_storagetasknpc() const {
  return _has_bit(15);
}
inline void PBNpc::clear_storagetasknpc() {
  storagetasknpc_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBNpc::storagetasknpc() const {
  return storagetasknpc_;
}
inline void PBNpc::set_storagetasknpc(::google::protobuf::uint32 value) {
  _set_bit(15);
  storagetasknpc_ = value;
}

// optional uint32 StorageTaskID = 17;
inline bool PBNpc::has_storagetaskid() const {
  return _has_bit(16);
}
inline void PBNpc::clear_storagetaskid() {
  storagetaskid_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBNpc::storagetaskid() const {
  return storagetaskid_;
}
inline void PBNpc::set_storagetaskid(::google::protobuf::uint32 value) {
  _set_bit(16);
  storagetaskid_ = value;
}

// optional uint32 DownLevel = 18;
inline bool PBNpc::has_downlevel() const {
  return _has_bit(17);
}
inline void PBNpc::clear_downlevel() {
  downlevel_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBNpc::downlevel() const {
  return downlevel_;
}
inline void PBNpc::set_downlevel(::google::protobuf::uint32 value) {
  _set_bit(17);
  downlevel_ = value;
}

// optional uint32 UpLevel = 19;
inline bool PBNpc::has_uplevel() const {
  return _has_bit(18);
}
inline void PBNpc::clear_uplevel() {
  uplevel_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBNpc::uplevel() const {
  return uplevel_;
}
inline void PBNpc::set_uplevel(::google::protobuf::uint32 value) {
  _set_bit(18);
  uplevel_ = value;
}

// optional uint32 DiploidTable = 20;
inline bool PBNpc::has_diploidtable() const {
  return _has_bit(19);
}
inline void PBNpc::clear_diploidtable() {
  diploidtable_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBNpc::diploidtable() const {
  return diploidtable_;
}
inline void PBNpc::set_diploidtable(::google::protobuf::uint32 value) {
  _set_bit(19);
  diploidtable_ = value;
}

// optional uint32 ResetPService = 21;
inline bool PBNpc::has_resetpservice() const {
  return _has_bit(20);
}
inline void PBNpc::clear_resetpservice() {
  resetpservice_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBNpc::resetpservice() const {
  return resetpservice_;
}
inline void PBNpc::set_resetpservice(::google::protobuf::uint32 value) {
  _set_bit(20);
  resetpservice_ = value;
}

// optional uint32 FamilyService = 22;
inline bool PBNpc::has_familyservice() const {
  return _has_bit(21);
}
inline void PBNpc::clear_familyservice() {
  familyservice_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBNpc::familyservice() const {
  return familyservice_;
}
inline void PBNpc::set_familyservice(::google::protobuf::uint32 value) {
  _set_bit(21);
  familyservice_ = value;
}

// optional uint32 CorpService = 23;
inline bool PBNpc::has_corpservice() const {
  return _has_bit(22);
}
inline void PBNpc::clear_corpservice() {
  corpservice_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBNpc::corpservice() const {
  return corpservice_;
}
inline void PBNpc::set_corpservice(::google::protobuf::uint32 value) {
  _set_bit(22);
  corpservice_ = value;
}

// optional uint32 ChangeService = 24;
inline bool PBNpc::has_changeservice() const {
  return _has_bit(23);
}
inline void PBNpc::clear_changeservice() {
  changeservice_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBNpc::changeservice() const {
  return changeservice_;
}
inline void PBNpc::set_changeservice(::google::protobuf::uint32 value) {
  _set_bit(23);
  changeservice_ = value;
}

// optional uint32 JudgeService = 25;
inline bool PBNpc::has_judgeservice() const {
  return _has_bit(24);
}
inline void PBNpc::clear_judgeservice() {
  judgeservice_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBNpc::judgeservice() const {
  return judgeservice_;
}
inline void PBNpc::set_judgeservice(::google::protobuf::uint32 value) {
  _set_bit(24);
  judgeservice_ = value;
}

// optional uint32 ActivityService = 26;
inline bool PBNpc::has_activityservice() const {
  return _has_bit(25);
}
inline void PBNpc::clear_activityservice() {
  activityservice_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBNpc::activityservice() const {
  return activityservice_;
}
inline void PBNpc::set_activityservice(::google::protobuf::uint32 value) {
  _set_bit(25);
  activityservice_ = value;
}

// optional uint32 ExchangeService = 27;
inline bool PBNpc::has_exchangeservice() const {
  return _has_bit(26);
}
inline void PBNpc::clear_exchangeservice() {
  exchangeservice_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBNpc::exchangeservice() const {
  return exchangeservice_;
}
inline void PBNpc::set_exchangeservice(::google::protobuf::uint32 value) {
  _set_bit(26);
  exchangeservice_ = value;
}

// optional uint32 HonorService = 28;
inline bool PBNpc::has_honorservice() const {
  return _has_bit(27);
}
inline void PBNpc::clear_honorservice() {
  honorservice_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBNpc::honorservice() const {
  return honorservice_;
}
inline void PBNpc::set_honorservice(::google::protobuf::uint32 value) {
  _set_bit(27);
  honorservice_ = value;
}

// optional uint32 Battle = 29;
inline bool PBNpc::has_battle() const {
  return _has_bit(28);
}
inline void PBNpc::clear_battle() {
  battle_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBNpc::battle() const {
  return battle_;
}
inline void PBNpc::set_battle(::google::protobuf::uint32 value) {
  _set_bit(28);
  battle_ = value;
}

// optional uint32 LifeSkillService = 30;
inline bool PBNpc::has_lifeskillservice() const {
  return _has_bit(29);
}
inline void PBNpc::clear_lifeskillservice() {
  lifeskillservice_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBNpc::lifeskillservice() const {
  return lifeskillservice_;
}
inline void PBNpc::set_lifeskillservice(::google::protobuf::uint32 value) {
  _set_bit(29);
  lifeskillservice_ = value;
}

// optional uint32 BidDay = 31;
inline bool PBNpc::has_bidday() const {
  return _has_bit(30);
}
inline void PBNpc::clear_bidday() {
  bidday_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBNpc::bidday() const {
  return bidday_;
}
inline void PBNpc::set_bidday(::google::protobuf::uint32 value) {
  _set_bit(30);
  bidday_ = value;
}

// optional uint32 BidHour = 32;
inline bool PBNpc::has_bidhour() const {
  return _has_bit(31);
}
inline void PBNpc::clear_bidhour() {
  bidhour_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBNpc::bidhour() const {
  return bidhour_;
}
inline void PBNpc::set_bidhour(::google::protobuf::uint32 value) {
  _set_bit(31);
  bidhour_ = value;
}

// optional uint32 BidMinute = 33;
inline bool PBNpc::has_bidminute() const {
  return _has_bit(32);
}
inline void PBNpc::clear_bidminute() {
  bidminute_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBNpc::bidminute() const {
  return bidminute_;
}
inline void PBNpc::set_bidminute(::google::protobuf::uint32 value) {
  _set_bit(32);
  bidminute_ = value;
}

// optional uint32 CoprsBattle = 34;
inline bool PBNpc::has_coprsbattle() const {
  return _has_bit(33);
}
inline void PBNpc::clear_coprsbattle() {
  coprsbattle_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 PBNpc::coprsbattle() const {
  return coprsbattle_;
}
inline void PBNpc::set_coprsbattle(::google::protobuf::uint32 value) {
  _set_bit(33);
  coprsbattle_ = value;
}

// optional uint32 MinBidPrice = 35;
inline bool PBNpc::has_minbidprice() const {
  return _has_bit(34);
}
inline void PBNpc::clear_minbidprice() {
  minbidprice_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBNpc::minbidprice() const {
  return minbidprice_;
}
inline void PBNpc::set_minbidprice(::google::protobuf::uint32 value) {
  _set_bit(34);
  minbidprice_ = value;
}

// optional uint32 BattleCity = 36;
inline bool PBNpc::has_battlecity() const {
  return _has_bit(35);
}
inline void PBNpc::clear_battlecity() {
  battlecity_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 PBNpc::battlecity() const {
  return battlecity_;
}
inline void PBNpc::set_battlecity(::google::protobuf::uint32 value) {
  _set_bit(35);
  battlecity_ = value;
}

// optional uint32 MWProJudgeService = 37;
inline bool PBNpc::has_mwprojudgeservice() const {
  return _has_bit(36);
}
inline void PBNpc::clear_mwprojudgeservice() {
  mwprojudgeservice_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBNpc::mwprojudgeservice() const {
  return mwprojudgeservice_;
}
inline void PBNpc::set_mwprojudgeservice(::google::protobuf::uint32 value) {
  _set_bit(36);
  mwprojudgeservice_ = value;
}

// optional uint32 MWSkillJudgeService = 38;
inline bool PBNpc::has_mwskilljudgeservice() const {
  return _has_bit(37);
}
inline void PBNpc::clear_mwskilljudgeservice() {
  mwskilljudgeservice_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBNpc::mwskilljudgeservice() const {
  return mwskilljudgeservice_;
}
inline void PBNpc::set_mwskilljudgeservice(::google::protobuf::uint32 value) {
  _set_bit(37);
  mwskilljudgeservice_ = value;
}

// optional uint32 EquipExchangeService = 39;
inline bool PBNpc::has_equipexchangeservice() const {
  return _has_bit(38);
}
inline void PBNpc::clear_equipexchangeservice() {
  equipexchangeservice_ = 0u;
  _clear_bit(38);
}
inline ::google::protobuf::uint32 PBNpc::equipexchangeservice() const {
  return equipexchangeservice_;
}
inline void PBNpc::set_equipexchangeservice(::google::protobuf::uint32 value) {
  _set_bit(38);
  equipexchangeservice_ = value;
}

// optional uint32 ExchangeTableID = 40;
inline bool PBNpc::has_exchangetableid() const {
  return _has_bit(39);
}
inline void PBNpc::clear_exchangetableid() {
  exchangetableid_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBNpc::exchangetableid() const {
  return exchangetableid_;
}
inline void PBNpc::set_exchangetableid(::google::protobuf::uint32 value) {
  _set_bit(39);
  exchangetableid_ = value;
}

// optional uint32 CorpsBidDay = 41;
inline bool PBNpc::has_corpsbidday() const {
  return _has_bit(40);
}
inline void PBNpc::clear_corpsbidday() {
  corpsbidday_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBNpc::corpsbidday() const {
  return corpsbidday_;
}
inline void PBNpc::set_corpsbidday(::google::protobuf::uint32 value) {
  _set_bit(40);
  corpsbidday_ = value;
}

// optional uint32 CorpsBidHour = 42;
inline bool PBNpc::has_corpsbidhour() const {
  return _has_bit(41);
}
inline void PBNpc::clear_corpsbidhour() {
  corpsbidhour_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 PBNpc::corpsbidhour() const {
  return corpsbidhour_;
}
inline void PBNpc::set_corpsbidhour(::google::protobuf::uint32 value) {
  _set_bit(41);
  corpsbidhour_ = value;
}

// optional uint32 CorpsBidMinute = 43;
inline bool PBNpc::has_corpsbidminute() const {
  return _has_bit(42);
}
inline void PBNpc::clear_corpsbidminute() {
  corpsbidminute_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 PBNpc::corpsbidminute() const {
  return corpsbidminute_;
}
inline void PBNpc::set_corpsbidminute(::google::protobuf::uint32 value) {
  _set_bit(42);
  corpsbidminute_ = value;
}

// optional uint32 MWClearPointService = 44;
inline bool PBNpc::has_mwclearpointservice() const {
  return _has_bit(43);
}
inline void PBNpc::clear_mwclearpointservice() {
  mwclearpointservice_ = 0u;
  _clear_bit(43);
}
inline ::google::protobuf::uint32 PBNpc::mwclearpointservice() const {
  return mwclearpointservice_;
}
inline void PBNpc::set_mwclearpointservice(::google::protobuf::uint32 value) {
  _set_bit(43);
  mwclearpointservice_ = value;
}

// optional uint32 MWSecondJudgeService = 45;
inline bool PBNpc::has_mwsecondjudgeservice() const {
  return _has_bit(44);
}
inline void PBNpc::clear_mwsecondjudgeservice() {
  mwsecondjudgeservice_ = 0u;
  _clear_bit(44);
}
inline ::google::protobuf::uint32 PBNpc::mwsecondjudgeservice() const {
  return mwsecondjudgeservice_;
}
inline void PBNpc::set_mwsecondjudgeservice(::google::protobuf::uint32 value) {
  _set_bit(44);
  mwsecondjudgeservice_ = value;
}

// optional uint32 UnionService = 46;
inline bool PBNpc::has_unionservice() const {
  return _has_bit(45);
}
inline void PBNpc::clear_unionservice() {
  unionservice_ = 0u;
  _clear_bit(45);
}
inline ::google::protobuf::uint32 PBNpc::unionservice() const {
  return unionservice_;
}
inline void PBNpc::set_unionservice(::google::protobuf::uint32 value) {
  _set_bit(45);
  unionservice_ = value;
}

// optional uint32 CountryService = 47;
inline bool PBNpc::has_countryservice() const {
  return _has_bit(46);
}
inline void PBNpc::clear_countryservice() {
  countryservice_ = 0u;
  _clear_bit(46);
}
inline ::google::protobuf::uint32 PBNpc::countryservice() const {
  return countryservice_;
}
inline void PBNpc::set_countryservice(::google::protobuf::uint32 value) {
  _set_bit(46);
  countryservice_ = value;
}

// optional uint32 FriendService = 48;
inline bool PBNpc::has_friendservice() const {
  return _has_bit(47);
}
inline void PBNpc::clear_friendservice() {
  friendservice_ = 0u;
  _clear_bit(47);
}
inline ::google::protobuf::uint32 PBNpc::friendservice() const {
  return friendservice_;
}
inline void PBNpc::set_friendservice(::google::protobuf::uint32 value) {
  _set_bit(47);
  friendservice_ = value;
}

// optional uint32 CountryType = 49;
inline bool PBNpc::has_countrytype() const {
  return _has_bit(48);
}
inline void PBNpc::clear_countrytype() {
  countrytype_ = 0u;
  _clear_bit(48);
}
inline ::google::protobuf::uint32 PBNpc::countrytype() const {
  return countrytype_;
}
inline void PBNpc::set_countrytype(::google::protobuf::uint32 value) {
  _set_bit(48);
  countrytype_ = value;
}

// optional uint32 GoldenYBService = 50;
inline bool PBNpc::has_goldenybservice() const {
  return _has_bit(49);
}
inline void PBNpc::clear_goldenybservice() {
  goldenybservice_ = 0u;
  _clear_bit(49);
}
inline ::google::protobuf::uint32 PBNpc::goldenybservice() const {
  return goldenybservice_;
}
inline void PBNpc::set_goldenybservice(::google::protobuf::uint32 value) {
  _set_bit(49);
  goldenybservice_ = value;
}

// optional uint32 ChairManTaskService = 51;
inline bool PBNpc::has_chairmantaskservice() const {
  return _has_bit(50);
}
inline void PBNpc::clear_chairmantaskservice() {
  chairmantaskservice_ = 0u;
  _clear_bit(50);
}
inline ::google::protobuf::uint32 PBNpc::chairmantaskservice() const {
  return chairmantaskservice_;
}
inline void PBNpc::set_chairmantaskservice(::google::protobuf::uint32 value) {
  _set_bit(50);
  chairmantaskservice_ = value;
}

// optional uint32 ChairManTaskID = 52;
inline bool PBNpc::has_chairmantaskid() const {
  return _has_bit(51);
}
inline void PBNpc::clear_chairmantaskid() {
  chairmantaskid_ = 0u;
  _clear_bit(51);
}
inline ::google::protobuf::uint32 PBNpc::chairmantaskid() const {
  return chairmantaskid_;
}
inline void PBNpc::set_chairmantaskid(::google::protobuf::uint32 value) {
  _set_bit(51);
  chairmantaskid_ = value;
}

// optional uint32 MarriageService = 53;
inline bool PBNpc::has_marriageservice() const {
  return _has_bit(52);
}
inline void PBNpc::clear_marriageservice() {
  marriageservice_ = 0u;
  _clear_bit(52);
}
inline ::google::protobuf::uint32 PBNpc::marriageservice() const {
  return marriageservice_;
}
inline void PBNpc::set_marriageservice(::google::protobuf::uint32 value) {
  _set_bit(52);
  marriageservice_ = value;
}

// optional uint32 MatrixService = 54;
inline bool PBNpc::has_matrixservice() const {
  return _has_bit(53);
}
inline void PBNpc::clear_matrixservice() {
  matrixservice_ = 0u;
  _clear_bit(53);
}
inline ::google::protobuf::uint32 PBNpc::matrixservice() const {
  return matrixservice_;
}
inline void PBNpc::set_matrixservice(::google::protobuf::uint32 value) {
  _set_bit(53);
  matrixservice_ = value;
}

// optional uint32 FamilyType = 55;
inline bool PBNpc::has_familytype() const {
  return _has_bit(54);
}
inline void PBNpc::clear_familytype() {
  familytype_ = 0u;
  _clear_bit(54);
}
inline ::google::protobuf::uint32 PBNpc::familytype() const {
  return familytype_;
}
inline void PBNpc::set_familytype(::google::protobuf::uint32 value) {
  _set_bit(54);
  familytype_ = value;
}

// optional uint32 StoneBuff = 56;
inline bool PBNpc::has_stonebuff() const {
  return _has_bit(55);
}
inline void PBNpc::clear_stonebuff() {
  stonebuff_ = 0u;
  _clear_bit(55);
}
inline ::google::protobuf::uint32 PBNpc::stonebuff() const {
  return stonebuff_;
}
inline void PBNpc::set_stonebuff(::google::protobuf::uint32 value) {
  _set_bit(55);
  stonebuff_ = value;
}

// optional uint32 Disappear = 57;
inline bool PBNpc::has_disappear() const {
  return _has_bit(56);
}
inline void PBNpc::clear_disappear() {
  disappear_ = 0u;
  _clear_bit(56);
}
inline ::google::protobuf::uint32 PBNpc::disappear() const {
  return disappear_;
}
inline void PBNpc::set_disappear(::google::protobuf::uint32 value) {
  _set_bit(56);
  disappear_ = value;
}

// optional uint32 RefreshService = 58;
inline bool PBNpc::has_refreshservice() const {
  return _has_bit(57);
}
inline void PBNpc::clear_refreshservice() {
  refreshservice_ = 0u;
  _clear_bit(57);
}
inline ::google::protobuf::uint32 PBNpc::refreshservice() const {
  return refreshservice_;
}
inline void PBNpc::set_refreshservice(::google::protobuf::uint32 value) {
  _set_bit(57);
  refreshservice_ = value;
}

// optional uint32 PedalIndex = 59;
inline bool PBNpc::has_pedalindex() const {
  return _has_bit(58);
}
inline void PBNpc::clear_pedalindex() {
  pedalindex_ = 0u;
  _clear_bit(58);
}
inline ::google::protobuf::uint32 PBNpc::pedalindex() const {
  return pedalindex_;
}
inline void PBNpc::set_pedalindex(::google::protobuf::uint32 value) {
  _set_bit(58);
  pedalindex_ = value;
}

// optional uint32 DirectService = 60;
inline bool PBNpc::has_directservice() const {
  return _has_bit(59);
}
inline void PBNpc::clear_directservice() {
  directservice_ = 0u;
  _clear_bit(59);
}
inline ::google::protobuf::uint32 PBNpc::directservice() const {
  return directservice_;
}
inline void PBNpc::set_directservice(::google::protobuf::uint32 value) {
  _set_bit(59);
  directservice_ = value;
}

// optional uint32 ExtraService = 61;
inline bool PBNpc::has_extraservice() const {
  return _has_bit(60);
}
inline void PBNpc::clear_extraservice() {
  extraservice_ = 0u;
  _clear_bit(60);
}
inline ::google::protobuf::uint32 PBNpc::extraservice() const {
  return extraservice_;
}
inline void PBNpc::set_extraservice(::google::protobuf::uint32 value) {
  _set_bit(60);
  extraservice_ = value;
}

// optional uint32 WarService = 62;
inline bool PBNpc::has_warservice() const {
  return _has_bit(61);
}
inline void PBNpc::clear_warservice() {
  warservice_ = 0u;
  _clear_bit(61);
}
inline ::google::protobuf::uint32 PBNpc::warservice() const {
  return warservice_;
}
inline void PBNpc::set_warservice(::google::protobuf::uint32 value) {
  _set_bit(61);
  warservice_ = value;
}

// optional uint32 WarOpType = 63;
inline bool PBNpc::has_waroptype() const {
  return _has_bit(62);
}
inline void PBNpc::clear_waroptype() {
  waroptype_ = 0u;
  _clear_bit(62);
}
inline ::google::protobuf::uint32 PBNpc::waroptype() const {
  return waroptype_;
}
inline void PBNpc::set_waroptype(::google::protobuf::uint32 value) {
  _set_bit(62);
  waroptype_ = value;
}

// optional uint32 WarValue = 64;
inline bool PBNpc::has_warvalue() const {
  return _has_bit(63);
}
inline void PBNpc::clear_warvalue() {
  warvalue_ = 0u;
  _clear_bit(63);
}
inline ::google::protobuf::uint32 PBNpc::warvalue() const {
  return warvalue_;
}
inline void PBNpc::set_warvalue(::google::protobuf::uint32 value) {
  _set_bit(63);
  warvalue_ = value;
}

// optional uint32 WarCamp = 65;
inline bool PBNpc::has_warcamp() const {
  return _has_bit(64);
}
inline void PBNpc::clear_warcamp() {
  warcamp_ = 0u;
  _clear_bit(64);
}
inline ::google::protobuf::uint32 PBNpc::warcamp() const {
  return warcamp_;
}
inline void PBNpc::set_warcamp(::google::protobuf::uint32 value) {
  _set_bit(64);
  warcamp_ = value;
}

// optional uint32 EquipLevelService = 66;
inline bool PBNpc::has_equiplevelservice() const {
  return _has_bit(65);
}
inline void PBNpc::clear_equiplevelservice() {
  equiplevelservice_ = 0u;
  _clear_bit(65);
}
inline ::google::protobuf::uint32 PBNpc::equiplevelservice() const {
  return equiplevelservice_;
}
inline void PBNpc::set_equiplevelservice(::google::protobuf::uint32 value) {
  _set_bit(65);
  equiplevelservice_ = value;
}

// optional uint32 WarHonor = 67;
inline bool PBNpc::has_warhonor() const {
  return _has_bit(66);
}
inline void PBNpc::clear_warhonor() {
  warhonor_ = 0u;
  _clear_bit(66);
}
inline ::google::protobuf::uint32 PBNpc::warhonor() const {
  return warhonor_;
}
inline void PBNpc::set_warhonor(::google::protobuf::uint32 value) {
  _set_bit(66);
  warhonor_ = value;
}

// optional uint32 FangCunService = 68;
inline bool PBNpc::has_fangcunservice() const {
  return _has_bit(67);
}
inline void PBNpc::clear_fangcunservice() {
  fangcunservice_ = 0u;
  _clear_bit(67);
}
inline ::google::protobuf::uint32 PBNpc::fangcunservice() const {
  return fangcunservice_;
}
inline void PBNpc::set_fangcunservice(::google::protobuf::uint32 value) {
  _set_bit(67);
  fangcunservice_ = value;
}

// optional uint32 ResistTran = 69;
inline bool PBNpc::has_resisttran() const {
  return _has_bit(68);
}
inline void PBNpc::clear_resisttran() {
  resisttran_ = 0u;
  _clear_bit(68);
}
inline ::google::protobuf::uint32 PBNpc::resisttran() const {
  return resisttran_;
}
inline void PBNpc::set_resisttran(::google::protobuf::uint32 value) {
  _set_bit(68);
  resisttran_ = value;
}

// optional uint32 FBFunc = 70;
inline bool PBNpc::has_fbfunc() const {
  return _has_bit(69);
}
inline void PBNpc::clear_fbfunc() {
  fbfunc_ = 0u;
  _clear_bit(69);
}
inline ::google::protobuf::uint32 PBNpc::fbfunc() const {
  return fbfunc_;
}
inline void PBNpc::set_fbfunc(::google::protobuf::uint32 value) {
  _set_bit(69);
  fbfunc_ = value;
}

// optional uint32 FBFunc_Parame1 = 71;
inline bool PBNpc::has_fbfunc_parame1() const {
  return _has_bit(70);
}
inline void PBNpc::clear_fbfunc_parame1() {
  fbfunc_parame1_ = 0u;
  _clear_bit(70);
}
inline ::google::protobuf::uint32 PBNpc::fbfunc_parame1() const {
  return fbfunc_parame1_;
}
inline void PBNpc::set_fbfunc_parame1(::google::protobuf::uint32 value) {
  _set_bit(70);
  fbfunc_parame1_ = value;
}

// optional uint32 FBFunc_Parame2 = 72;
inline bool PBNpc::has_fbfunc_parame2() const {
  return _has_bit(71);
}
inline void PBNpc::clear_fbfunc_parame2() {
  fbfunc_parame2_ = 0u;
  _clear_bit(71);
}
inline ::google::protobuf::uint32 PBNpc::fbfunc_parame2() const {
  return fbfunc_parame2_;
}
inline void PBNpc::set_fbfunc_parame2(::google::protobuf::uint32 value) {
  _set_bit(71);
  fbfunc_parame2_ = value;
}

// optional string FBFunc_Str = 73;
inline bool PBNpc::has_fbfunc_str() const {
  return _has_bit(72);
}
inline void PBNpc::clear_fbfunc_str() {
  if (fbfunc_str_ != &_default_fbfunc_str_) {
    fbfunc_str_->clear();
  }
  _clear_bit(72);
}
inline const ::std::string& PBNpc::fbfunc_str() const {
  return *fbfunc_str_;
}
inline void PBNpc::set_fbfunc_str(const ::std::string& value) {
  _set_bit(72);
  if (fbfunc_str_ == &_default_fbfunc_str_) {
    fbfunc_str_ = new ::std::string;
  }
  fbfunc_str_->assign(value);
}
inline void PBNpc::set_fbfunc_str(const char* value) {
  _set_bit(72);
  if (fbfunc_str_ == &_default_fbfunc_str_) {
    fbfunc_str_ = new ::std::string;
  }
  fbfunc_str_->assign(value);
}
inline void PBNpc::set_fbfunc_str(const char* value, size_t size) {
  _set_bit(72);
  if (fbfunc_str_ == &_default_fbfunc_str_) {
    fbfunc_str_ = new ::std::string;
  }
  fbfunc_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBNpc::mutable_fbfunc_str() {
  _set_bit(72);
  if (fbfunc_str_ == &_default_fbfunc_str_) {
    fbfunc_str_ = new ::std::string;
  }
  return fbfunc_str_;
}

// optional uint32 TaxService = 74;
inline bool PBNpc::has_taxservice() const {
  return _has_bit(73);
}
inline void PBNpc::clear_taxservice() {
  taxservice_ = 0u;
  _clear_bit(73);
}
inline ::google::protobuf::uint32 PBNpc::taxservice() const {
  return taxservice_;
}
inline void PBNpc::set_taxservice(::google::protobuf::uint32 value) {
  _set_bit(73);
  taxservice_ = value;
}

// optional uint32 ChangeCampService = 75;
inline bool PBNpc::has_changecampservice() const {
  return _has_bit(74);
}
inline void PBNpc::clear_changecampservice() {
  changecampservice_ = 0u;
  _clear_bit(74);
}
inline ::google::protobuf::uint32 PBNpc::changecampservice() const {
  return changecampservice_;
}
inline void PBNpc::set_changecampservice(::google::protobuf::uint32 value) {
  _set_bit(74);
  changecampservice_ = value;
}

// optional uint32 WeakProtectService = 76;
inline bool PBNpc::has_weakprotectservice() const {
  return _has_bit(75);
}
inline void PBNpc::clear_weakprotectservice() {
  weakprotectservice_ = 0u;
  _clear_bit(75);
}
inline ::google::protobuf::uint32 PBNpc::weakprotectservice() const {
  return weakprotectservice_;
}
inline void PBNpc::set_weakprotectservice(::google::protobuf::uint32 value) {
  _set_bit(75);
  weakprotectservice_ = value;
}

// optional uint32 YaoQianShuRank = 77;
inline bool PBNpc::has_yaoqianshurank() const {
  return _has_bit(76);
}
inline void PBNpc::clear_yaoqianshurank() {
  yaoqianshurank_ = 0u;
  _clear_bit(76);
}
inline ::google::protobuf::uint32 PBNpc::yaoqianshurank() const {
  return yaoqianshurank_;
}
inline void PBNpc::set_yaoqianshurank(::google::protobuf::uint32 value) {
  _set_bit(76);
  yaoqianshurank_ = value;
}

// optional uint32 Handin = 78;
inline bool PBNpc::has_handin() const {
  return _has_bit(77);
}
inline void PBNpc::clear_handin() {
  handin_ = 0u;
  _clear_bit(77);
}
inline ::google::protobuf::uint32 PBNpc::handin() const {
  return handin_;
}
inline void PBNpc::set_handin(::google::protobuf::uint32 value) {
  _set_bit(77);
  handin_ = value;
}

// optional uint32 SpecialEvent = 79;
inline bool PBNpc::has_specialevent() const {
  return _has_bit(78);
}
inline void PBNpc::clear_specialevent() {
  specialevent_ = 0u;
  _clear_bit(78);
}
inline ::google::protobuf::uint32 PBNpc::specialevent() const {
  return specialevent_;
}
inline void PBNpc::set_specialevent(::google::protobuf::uint32 value) {
  _set_bit(78);
  specialevent_ = value;
}

// optional uint32 YaoQianInfo = 80;
inline bool PBNpc::has_yaoqianinfo() const {
  return _has_bit(79);
}
inline void PBNpc::clear_yaoqianinfo() {
  yaoqianinfo_ = 0u;
  _clear_bit(79);
}
inline ::google::protobuf::uint32 PBNpc::yaoqianinfo() const {
  return yaoqianinfo_;
}
inline void PBNpc::set_yaoqianinfo(::google::protobuf::uint32 value) {
  _set_bit(79);
  yaoqianinfo_ = value;
}

// optional uint32 TreasureBowl = 81;
inline bool PBNpc::has_treasurebowl() const {
  return _has_bit(80);
}
inline void PBNpc::clear_treasurebowl() {
  treasurebowl_ = 0u;
  _clear_bit(80);
}
inline ::google::protobuf::uint32 PBNpc::treasurebowl() const {
  return treasurebowl_;
}
inline void PBNpc::set_treasurebowl(::google::protobuf::uint32 value) {
  _set_bit(80);
  treasurebowl_ = value;
}

// optional uint32 MWDecomposeService = 82;
inline bool PBNpc::has_mwdecomposeservice() const {
  return _has_bit(81);
}
inline void PBNpc::clear_mwdecomposeservice() {
  mwdecomposeservice_ = 0u;
  _clear_bit(81);
}
inline ::google::protobuf::uint32 PBNpc::mwdecomposeservice() const {
  return mwdecomposeservice_;
}
inline void PBNpc::set_mwdecomposeservice(::google::protobuf::uint32 value) {
  _set_bit(81);
  mwdecomposeservice_ = value;
}

// optional uint32 MWImprintService = 83;
inline bool PBNpc::has_mwimprintservice() const {
  return _has_bit(82);
}
inline void PBNpc::clear_mwimprintservice() {
  mwimprintservice_ = 0u;
  _clear_bit(82);
}
inline ::google::protobuf::uint32 PBNpc::mwimprintservice() const {
  return mwimprintservice_;
}
inline void PBNpc::set_mwimprintservice(::google::protobuf::uint32 value) {
  _set_bit(82);
  mwimprintservice_ = value;
}

// optional uint32 MWUpdateService = 84;
inline bool PBNpc::has_mwupdateservice() const {
  return _has_bit(83);
}
inline void PBNpc::clear_mwupdateservice() {
  mwupdateservice_ = 0u;
  _clear_bit(83);
}
inline ::google::protobuf::uint32 PBNpc::mwupdateservice() const {
  return mwupdateservice_;
}
inline void PBNpc::set_mwupdateservice(::google::protobuf::uint32 value) {
  _set_bit(83);
  mwupdateservice_ = value;
}

// optional uint32 MWUpdateExService = 85;
inline bool PBNpc::has_mwupdateexservice() const {
  return _has_bit(84);
}
inline void PBNpc::clear_mwupdateexservice() {
  mwupdateexservice_ = 0u;
  _clear_bit(84);
}
inline ::google::protobuf::uint32 PBNpc::mwupdateexservice() const {
  return mwupdateexservice_;
}
inline void PBNpc::set_mwupdateexservice(::google::protobuf::uint32 value) {
  _set_bit(84);
  mwupdateexservice_ = value;
}

// optional uint32 CorpsBidStartDay = 86;
inline bool PBNpc::has_corpsbidstartday() const {
  return _has_bit(85);
}
inline void PBNpc::clear_corpsbidstartday() {
  corpsbidstartday_ = 0u;
  _clear_bit(85);
}
inline ::google::protobuf::uint32 PBNpc::corpsbidstartday() const {
  return corpsbidstartday_;
}
inline void PBNpc::set_corpsbidstartday(::google::protobuf::uint32 value) {
  _set_bit(85);
  corpsbidstartday_ = value;
}

// optional uint32 CorpsBidStartHour = 87;
inline bool PBNpc::has_corpsbidstarthour() const {
  return _has_bit(86);
}
inline void PBNpc::clear_corpsbidstarthour() {
  corpsbidstarthour_ = 0u;
  _clear_bit(86);
}
inline ::google::protobuf::uint32 PBNpc::corpsbidstarthour() const {
  return corpsbidstarthour_;
}
inline void PBNpc::set_corpsbidstarthour(::google::protobuf::uint32 value) {
  _set_bit(86);
  corpsbidstarthour_ = value;
}

// optional uint32 CorpsBidStartMinute = 88;
inline bool PBNpc::has_corpsbidstartminute() const {
  return _has_bit(87);
}
inline void PBNpc::clear_corpsbidstartminute() {
  corpsbidstartminute_ = 0u;
  _clear_bit(87);
}
inline ::google::protobuf::uint32 PBNpc::corpsbidstartminute() const {
  return corpsbidstartminute_;
}
inline void PBNpc::set_corpsbidstartminute(::google::protobuf::uint32 value) {
  _set_bit(87);
  corpsbidstartminute_ = value;
}

// optional uint32 LastOneService = 89;
inline bool PBNpc::has_lastoneservice() const {
  return _has_bit(88);
}
inline void PBNpc::clear_lastoneservice() {
  lastoneservice_ = 0u;
  _clear_bit(88);
}
inline ::google::protobuf::uint32 PBNpc::lastoneservice() const {
  return lastoneservice_;
}
inline void PBNpc::set_lastoneservice(::google::protobuf::uint32 value) {
  _set_bit(88);
  lastoneservice_ = value;
}

// optional uint32 FamilyBidStartHour = 90;
inline bool PBNpc::has_familybidstarthour() const {
  return _has_bit(89);
}
inline void PBNpc::clear_familybidstarthour() {
  familybidstarthour_ = 0u;
  _clear_bit(89);
}
inline ::google::protobuf::uint32 PBNpc::familybidstarthour() const {
  return familybidstarthour_;
}
inline void PBNpc::set_familybidstarthour(::google::protobuf::uint32 value) {
  _set_bit(89);
  familybidstarthour_ = value;
}

// optional uint32 FamilyBidStartMinute = 91;
inline bool PBNpc::has_familybidstartminute() const {
  return _has_bit(90);
}
inline void PBNpc::clear_familybidstartminute() {
  familybidstartminute_ = 0u;
  _clear_bit(90);
}
inline ::google::protobuf::uint32 PBNpc::familybidstartminute() const {
  return familybidstartminute_;
}
inline void PBNpc::set_familybidstartminute(::google::protobuf::uint32 value) {
  _set_bit(90);
  familybidstartminute_ = value;
}

// optional uint32 MWQLComposeService = 92;
inline bool PBNpc::has_mwqlcomposeservice() const {
  return _has_bit(91);
}
inline void PBNpc::clear_mwqlcomposeservice() {
  mwqlcomposeservice_ = 0u;
  _clear_bit(91);
}
inline ::google::protobuf::uint32 PBNpc::mwqlcomposeservice() const {
  return mwqlcomposeservice_;
}
inline void PBNpc::set_mwqlcomposeservice(::google::protobuf::uint32 value) {
  _set_bit(91);
  mwqlcomposeservice_ = value;
}

// optional uint32 RandomTeleService = 93;
inline bool PBNpc::has_randomteleservice() const {
  return _has_bit(92);
}
inline void PBNpc::clear_randomteleservice() {
  randomteleservice_ = 0u;
  _clear_bit(92);
}
inline ::google::protobuf::uint32 PBNpc::randomteleservice() const {
  return randomteleservice_;
}
inline void PBNpc::set_randomteleservice(::google::protobuf::uint32 value) {
  _set_bit(92);
  randomteleservice_ = value;
}

// optional uint32 IntroduceMapID = 94;
inline bool PBNpc::has_introducemapid() const {
  return _has_bit(93);
}
inline void PBNpc::clear_introducemapid() {
  introducemapid_ = 0u;
  _clear_bit(93);
}
inline ::google::protobuf::uint32 PBNpc::introducemapid() const {
  return introducemapid_;
}
inline void PBNpc::set_introducemapid(::google::protobuf::uint32 value) {
  _set_bit(93);
  introducemapid_ = value;
}

// optional uint32 ShiTuService = 95;
inline bool PBNpc::has_shituservice() const {
  return _has_bit(94);
}
inline void PBNpc::clear_shituservice() {
  shituservice_ = 0u;
  _clear_bit(94);
}
inline ::google::protobuf::uint32 PBNpc::shituservice() const {
  return shituservice_;
}
inline void PBNpc::set_shituservice(::google::protobuf::uint32 value) {
  _set_bit(94);
  shituservice_ = value;
}

// optional uint32 SwornService = 96;
inline bool PBNpc::has_swornservice() const {
  return _has_bit(95);
}
inline void PBNpc::clear_swornservice() {
  swornservice_ = 0u;
  _clear_bit(95);
}
inline ::google::protobuf::uint32 PBNpc::swornservice() const {
  return swornservice_;
}
inline void PBNpc::set_swornservice(::google::protobuf::uint32 value) {
  _set_bit(95);
  swornservice_ = value;
}

// optional uint32 GlobalWarService = 97;
inline bool PBNpc::has_globalwarservice() const {
  return _has_bit(96);
}
inline void PBNpc::clear_globalwarservice() {
  globalwarservice_ = 0u;
  _clear_bit(96);
}
inline ::google::protobuf::uint32 PBNpc::globalwarservice() const {
  return globalwarservice_;
}
inline void PBNpc::set_globalwarservice(::google::protobuf::uint32 value) {
  _set_bit(96);
  globalwarservice_ = value;
}

// optional uint32 SuperEquipExchange = 98;
inline bool PBNpc::has_superequipexchange() const {
  return _has_bit(97);
}
inline void PBNpc::clear_superequipexchange() {
  superequipexchange_ = 0u;
  _clear_bit(97);
}
inline ::google::protobuf::uint32 PBNpc::superequipexchange() const {
  return superequipexchange_;
}
inline void PBNpc::set_superequipexchange(::google::protobuf::uint32 value) {
  _set_bit(97);
  superequipexchange_ = value;
}

// -------------------------------------------------------------------

// PBSellItem

// optional string PageName = 1;
inline bool PBSellItem::has_pagename() const {
  return _has_bit(0);
}
inline void PBSellItem::clear_pagename() {
  if (pagename_ != &_default_pagename_) {
    pagename_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBSellItem::pagename() const {
  return *pagename_;
}
inline void PBSellItem::set_pagename(const ::std::string& value) {
  _set_bit(0);
  if (pagename_ == &_default_pagename_) {
    pagename_ = new ::std::string;
  }
  pagename_->assign(value);
}
inline void PBSellItem::set_pagename(const char* value) {
  _set_bit(0);
  if (pagename_ == &_default_pagename_) {
    pagename_ = new ::std::string;
  }
  pagename_->assign(value);
}
inline void PBSellItem::set_pagename(const char* value, size_t size) {
  _set_bit(0);
  if (pagename_ == &_default_pagename_) {
    pagename_ = new ::std::string;
  }
  pagename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSellItem::mutable_pagename() {
  _set_bit(0);
  if (pagename_ == &_default_pagename_) {
    pagename_ = new ::std::string;
  }
  return pagename_;
}

// repeated uint32 ItemID = 2;
inline int PBSellItem::itemid_size() const {
  return itemid_.size();
}
inline void PBSellItem::clear_itemid() {
  itemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSellItem::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSellItem::mutable_itemid() {
  return &itemid_;
}
inline ::google::protobuf::uint32 PBSellItem::itemid(int index) const {
  return itemid_.Get(index);
}
inline void PBSellItem::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
}
inline void PBSellItem::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
}

// repeated uint32 ItemGoldPrice = 3;
inline int PBSellItem::itemgoldprice_size() const {
  return itemgoldprice_.size();
}
inline void PBSellItem::clear_itemgoldprice() {
  itemgoldprice_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSellItem::itemgoldprice() const {
  return itemgoldprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSellItem::mutable_itemgoldprice() {
  return &itemgoldprice_;
}
inline ::google::protobuf::uint32 PBSellItem::itemgoldprice(int index) const {
  return itemgoldprice_.Get(index);
}
inline void PBSellItem::set_itemgoldprice(int index, ::google::protobuf::uint32 value) {
  itemgoldprice_.Set(index, value);
}
inline void PBSellItem::add_itemgoldprice(::google::protobuf::uint32 value) {
  itemgoldprice_.Add(value);
}

// repeated uint32 ItemNum = 4;
inline int PBSellItem::itemnum_size() const {
  return itemnum_.size();
}
inline void PBSellItem::clear_itemnum() {
  itemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSellItem::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSellItem::mutable_itemnum() {
  return &itemnum_;
}
inline ::google::protobuf::uint32 PBSellItem::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void PBSellItem::set_itemnum(int index, ::google::protobuf::uint32 value) {
  itemnum_.Set(index, value);
}
inline void PBSellItem::add_itemnum(::google::protobuf::uint32 value) {
  itemnum_.Add(value);
}

// repeated uint32 ItemRefreshDay = 5;
inline int PBSellItem::itemrefreshday_size() const {
  return itemrefreshday_.size();
}
inline void PBSellItem::clear_itemrefreshday() {
  itemrefreshday_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSellItem::itemrefreshday() const {
  return itemrefreshday_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSellItem::mutable_itemrefreshday() {
  return &itemrefreshday_;
}
inline ::google::protobuf::uint32 PBSellItem::itemrefreshday(int index) const {
  return itemrefreshday_.Get(index);
}
inline void PBSellItem::set_itemrefreshday(int index, ::google::protobuf::uint32 value) {
  itemrefreshday_.Set(index, value);
}
inline void PBSellItem::add_itemrefreshday(::google::protobuf::uint32 value) {
  itemrefreshday_.Add(value);
}

// -------------------------------------------------------------------

// PBSellTable

// optional uint32 TempID = 1;
inline bool PBSellTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBSellTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSellTable::tempid() const {
  return tempid_;
}
inline void PBSellTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBSellItem Item = 2;
inline int PBSellTable::item_size() const {
  return item_.size();
}
inline void PBSellTable::clear_item() {
  item_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSellItem >&
PBSellTable::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSellItem >*
PBSellTable::mutable_item() {
  return &item_;
}
inline const ::PBSellItem& PBSellTable::item(int index) const {
  return item_.Get(index);
}
inline ::PBSellItem* PBSellTable::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::PBSellItem* PBSellTable::add_item() {
  return item_.Add();
}

// optional uint32 SellTableType = 3;
inline bool PBSellTable::has_selltabletype() const {
  return _has_bit(2);
}
inline void PBSellTable::clear_selltabletype() {
  selltabletype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSellTable::selltabletype() const {
  return selltabletype_;
}
inline void PBSellTable::set_selltabletype(::google::protobuf::uint32 value) {
  _set_bit(2);
  selltabletype_ = value;
}

// optional uint32 WarCityMapID = 4;
inline bool PBSellTable::has_warcitymapid() const {
  return _has_bit(3);
}
inline void PBSellTable::clear_warcitymapid() {
  warcitymapid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSellTable::warcitymapid() const {
  return warcitymapid_;
}
inline void PBSellTable::set_warcitymapid(::google::protobuf::uint32 value) {
  _set_bit(3);
  warcitymapid_ = value;
}

// -------------------------------------------------------------------

// PBTotalDrop

// optional uint32 TempID = 1;
inline bool PBTotalDrop::has_tempid() const {
  return _has_bit(0);
}
inline void PBTotalDrop::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTotalDrop::tempid() const {
  return tempid_;
}
inline void PBTotalDrop::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 DropTableID = 2;
inline int PBTotalDrop::droptableid_size() const {
  return droptableid_.size();
}
inline void PBTotalDrop::clear_droptableid() {
  droptableid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTotalDrop::droptableid() const {
  return droptableid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTotalDrop::mutable_droptableid() {
  return &droptableid_;
}
inline ::google::protobuf::uint32 PBTotalDrop::droptableid(int index) const {
  return droptableid_.Get(index);
}
inline void PBTotalDrop::set_droptableid(int index, ::google::protobuf::uint32 value) {
  droptableid_.Set(index, value);
}
inline void PBTotalDrop::add_droptableid(::google::protobuf::uint32 value) {
  droptableid_.Add(value);
}

// repeated uint32 DropCount = 3;
inline int PBTotalDrop::dropcount_size() const {
  return dropcount_.size();
}
inline void PBTotalDrop::clear_dropcount() {
  dropcount_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTotalDrop::dropcount() const {
  return dropcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTotalDrop::mutable_dropcount() {
  return &dropcount_;
}
inline ::google::protobuf::uint32 PBTotalDrop::dropcount(int index) const {
  return dropcount_.Get(index);
}
inline void PBTotalDrop::set_dropcount(int index, ::google::protobuf::uint32 value) {
  dropcount_.Set(index, value);
}
inline void PBTotalDrop::add_dropcount(::google::protobuf::uint32 value) {
  dropcount_.Add(value);
}

// -------------------------------------------------------------------

// PBDropItem

// optional uint32 DropItemID = 1;
inline bool PBDropItem::has_dropitemid() const {
  return _has_bit(0);
}
inline void PBDropItem::clear_dropitemid() {
  dropitemid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDropItem::dropitemid() const {
  return dropitemid_;
}
inline void PBDropItem::set_dropitemid(::google::protobuf::uint32 value) {
  _set_bit(0);
  dropitemid_ = value;
}

// optional uint32 DropProbability = 2;
inline bool PBDropItem::has_dropprobability() const {
  return _has_bit(1);
}
inline void PBDropItem::clear_dropprobability() {
  dropprobability_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBDropItem::dropprobability() const {
  return dropprobability_;
}
inline void PBDropItem::set_dropprobability(::google::protobuf::uint32 value) {
  _set_bit(1);
  dropprobability_ = value;
}

// optional uint32 LevelProbablity = 3;
inline bool PBDropItem::has_levelprobablity() const {
  return _has_bit(2);
}
inline void PBDropItem::clear_levelprobablity() {
  levelprobablity_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBDropItem::levelprobablity() const {
  return levelprobablity_;
}
inline void PBDropItem::set_levelprobablity(::google::protobuf::uint32 value) {
  _set_bit(2);
  levelprobablity_ = value;
}

// optional uint32 Notify = 4;
inline bool PBDropItem::has_notify() const {
  return _has_bit(3);
}
inline void PBDropItem::clear_notify() {
  notify_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBDropItem::notify() const {
  return notify_;
}
inline void PBDropItem::set_notify(::google::protobuf::uint32 value) {
  _set_bit(3);
  notify_ = value;
}

// optional uint32 Special = 5;
inline bool PBDropItem::has_special() const {
  return _has_bit(4);
}
inline void PBDropItem::clear_special() {
  special_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBDropItem::special() const {
  return special_;
}
inline void PBDropItem::set_special(::google::protobuf::uint32 value) {
  _set_bit(4);
  special_ = value;
}

// optional uint32 Show = 6;
inline bool PBDropItem::has_show() const {
  return _has_bit(5);
}
inline void PBDropItem::clear_show() {
  show_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBDropItem::show() const {
  return show_;
}
inline void PBDropItem::set_show(::google::protobuf::uint32 value) {
  _set_bit(5);
  show_ = value;
}

// -------------------------------------------------------------------

// PBDropTable

// optional uint32 TempID = 1;
inline bool PBDropTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBDropTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDropTable::tempid() const {
  return tempid_;
}
inline void PBDropTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 DropTurn = 2;
inline bool PBDropTable::has_dropturn() const {
  return _has_bit(1);
}
inline void PBDropTable::clear_dropturn() {
  dropturn_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBDropTable::dropturn() const {
  return dropturn_;
}
inline void PBDropTable::set_dropturn(::google::protobuf::uint32 value) {
  _set_bit(1);
  dropturn_ = value;
}

// repeated uint32 DropNumberRate = 3;
inline int PBDropTable::dropnumberrate_size() const {
  return dropnumberrate_.size();
}
inline void PBDropTable::clear_dropnumberrate() {
  dropnumberrate_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBDropTable::dropnumberrate() const {
  return dropnumberrate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBDropTable::mutable_dropnumberrate() {
  return &dropnumberrate_;
}
inline ::google::protobuf::uint32 PBDropTable::dropnumberrate(int index) const {
  return dropnumberrate_.Get(index);
}
inline void PBDropTable::set_dropnumberrate(int index, ::google::protobuf::uint32 value) {
  dropnumberrate_.Set(index, value);
}
inline void PBDropTable::add_dropnumberrate(::google::protobuf::uint32 value) {
  dropnumberrate_.Add(value);
}

// repeated .PBDropItem DropItem = 4;
inline int PBDropTable::dropitem_size() const {
  return dropitem_.size();
}
inline void PBDropTable::clear_dropitem() {
  dropitem_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDropItem >&
PBDropTable::dropitem() const {
  return dropitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDropItem >*
PBDropTable::mutable_dropitem() {
  return &dropitem_;
}
inline const ::PBDropItem& PBDropTable::dropitem(int index) const {
  return dropitem_.Get(index);
}
inline ::PBDropItem* PBDropTable::mutable_dropitem(int index) {
  return dropitem_.Mutable(index);
}
inline ::PBDropItem* PBDropTable::add_dropitem() {
  return dropitem_.Add();
}

// -------------------------------------------------------------------

// PBNPCCollect

// optional uint32 TempID = 1;
inline bool PBNPCCollect::has_tempid() const {
  return _has_bit(0);
}
inline void PBNPCCollect::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBNPCCollect::tempid() const {
  return tempid_;
}
inline void PBNPCCollect::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBNPCCollect::has_name() const {
  return _has_bit(1);
}
inline void PBNPCCollect::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBNPCCollect::name() const {
  return *name_;
}
inline void PBNPCCollect::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBNPCCollect::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBNPCCollect::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBNPCCollect::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string ModelName = 3;
inline bool PBNPCCollect::has_modelname() const {
  return _has_bit(2);
}
inline void PBNPCCollect::clear_modelname() {
  if (modelname_ != &_default_modelname_) {
    modelname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBNPCCollect::modelname() const {
  return *modelname_;
}
inline void PBNPCCollect::set_modelname(const ::std::string& value) {
  _set_bit(2);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void PBNPCCollect::set_modelname(const char* value) {
  _set_bit(2);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void PBNPCCollect::set_modelname(const char* value, size_t size) {
  _set_bit(2);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBNPCCollect::mutable_modelname() {
  _set_bit(2);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  return modelname_;
}

// repeated uint32 TaskID = 4;
inline int PBNPCCollect::taskid_size() const {
  return taskid_.size();
}
inline void PBNPCCollect::clear_taskid() {
  taskid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::taskid() const {
  return taskid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_taskid() {
  return &taskid_;
}
inline ::google::protobuf::uint32 PBNPCCollect::taskid(int index) const {
  return taskid_.Get(index);
}
inline void PBNPCCollect::set_taskid(int index, ::google::protobuf::uint32 value) {
  taskid_.Set(index, value);
}
inline void PBNPCCollect::add_taskid(::google::protobuf::uint32 value) {
  taskid_.Add(value);
}

// repeated uint32 ItemID = 5;
inline int PBNPCCollect::itemid_size() const {
  return itemid_.size();
}
inline void PBNPCCollect::clear_itemid() {
  itemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_itemid() {
  return &itemid_;
}
inline ::google::protobuf::uint32 PBNPCCollect::itemid(int index) const {
  return itemid_.Get(index);
}
inline void PBNPCCollect::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
}
inline void PBNPCCollect::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
}

// optional uint32 DropID = 6;
inline bool PBNPCCollect::has_dropid() const {
  return _has_bit(5);
}
inline void PBNPCCollect::clear_dropid() {
  dropid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBNPCCollect::dropid() const {
  return dropid_;
}
inline void PBNPCCollect::set_dropid(::google::protobuf::uint32 value) {
  _set_bit(5);
  dropid_ = value;
}

// optional uint32 Number = 7;
inline bool PBNPCCollect::has_number() const {
  return _has_bit(6);
}
inline void PBNPCCollect::clear_number() {
  number_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBNPCCollect::number() const {
  return number_;
}
inline void PBNPCCollect::set_number(::google::protobuf::uint32 value) {
  _set_bit(6);
  number_ = value;
}

// optional uint32 SkillType = 8;
inline bool PBNPCCollect::has_skilltype() const {
  return _has_bit(7);
}
inline void PBNPCCollect::clear_skilltype() {
  skilltype_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBNPCCollect::skilltype() const {
  return skilltype_;
}
inline void PBNPCCollect::set_skilltype(::google::protobuf::uint32 value) {
  _set_bit(7);
  skilltype_ = value;
}

// optional uint32 SkillKind = 9;
inline bool PBNPCCollect::has_skillkind() const {
  return _has_bit(8);
}
inline void PBNPCCollect::clear_skillkind() {
  skillkind_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBNPCCollect::skillkind() const {
  return skillkind_;
}
inline void PBNPCCollect::set_skillkind(::google::protobuf::uint32 value) {
  _set_bit(8);
  skillkind_ = value;
}

// optional uint32 CollectDegree = 10;
inline bool PBNPCCollect::has_collectdegree() const {
  return _has_bit(9);
}
inline void PBNPCCollect::clear_collectdegree() {
  collectdegree_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBNPCCollect::collectdegree() const {
  return collectdegree_;
}
inline void PBNPCCollect::set_collectdegree(::google::protobuf::uint32 value) {
  _set_bit(9);
  collectdegree_ = value;
}

// repeated uint32 value = 11;
inline int PBNPCCollect::value_size() const {
  return value_.size();
}
inline void PBNPCCollect::clear_value() {
  value_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::value() const {
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_value() {
  return &value_;
}
inline ::google::protobuf::uint32 PBNPCCollect::value(int index) const {
  return value_.Get(index);
}
inline void PBNPCCollect::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
}
inline void PBNPCCollect::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
}

// repeated uint32 Probality = 12;
inline int PBNPCCollect::probality_size() const {
  return probality_.size();
}
inline void PBNPCCollect::clear_probality() {
  probality_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::probality() const {
  return probality_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_probality() {
  return &probality_;
}
inline ::google::protobuf::uint32 PBNPCCollect::probality(int index) const {
  return probality_.Get(index);
}
inline void PBNPCCollect::set_probality(int index, ::google::protobuf::uint32 value) {
  probality_.Set(index, value);
}
inline void PBNPCCollect::add_probality(::google::protobuf::uint32 value) {
  probality_.Add(value);
}

// repeated uint32 DegreeValue = 13;
inline int PBNPCCollect::degreevalue_size() const {
  return degreevalue_.size();
}
inline void PBNPCCollect::clear_degreevalue() {
  degreevalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::degreevalue() const {
  return degreevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_degreevalue() {
  return &degreevalue_;
}
inline ::google::protobuf::uint32 PBNPCCollect::degreevalue(int index) const {
  return degreevalue_.Get(index);
}
inline void PBNPCCollect::set_degreevalue(int index, ::google::protobuf::uint32 value) {
  degreevalue_.Set(index, value);
}
inline void PBNPCCollect::add_degreevalue(::google::protobuf::uint32 value) {
  degreevalue_.Add(value);
}

// optional uint32 apcost = 14;
inline bool PBNPCCollect::has_apcost() const {
  return _has_bit(13);
}
inline void PBNPCCollect::clear_apcost() {
  apcost_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBNPCCollect::apcost() const {
  return apcost_;
}
inline void PBNPCCollect::set_apcost(::google::protobuf::uint32 value) {
  _set_bit(13);
  apcost_ = value;
}

// repeated uint32 ItemNum = 15;
inline int PBNPCCollect::itemnum_size() const {
  return itemnum_.size();
}
inline void PBNPCCollect::clear_itemnum() {
  itemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_itemnum() {
  return &itemnum_;
}
inline ::google::protobuf::uint32 PBNPCCollect::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void PBNPCCollect::set_itemnum(int index, ::google::protobuf::uint32 value) {
  itemnum_.Set(index, value);
}
inline void PBNPCCollect::add_itemnum(::google::protobuf::uint32 value) {
  itemnum_.Add(value);
}

// repeated uint32 ItemProbality = 16;
inline int PBNPCCollect::itemprobality_size() const {
  return itemprobality_.size();
}
inline void PBNPCCollect::clear_itemprobality() {
  itemprobality_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::itemprobality() const {
  return itemprobality_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_itemprobality() {
  return &itemprobality_;
}
inline ::google::protobuf::uint32 PBNPCCollect::itemprobality(int index) const {
  return itemprobality_.Get(index);
}
inline void PBNPCCollect::set_itemprobality(int index, ::google::protobuf::uint32 value) {
  itemprobality_.Set(index, value);
}
inline void PBNPCCollect::add_itemprobality(::google::protobuf::uint32 value) {
  itemprobality_.Add(value);
}

// optional uint32 CollectLevel = 17;
inline bool PBNPCCollect::has_collectlevel() const {
  return _has_bit(16);
}
inline void PBNPCCollect::clear_collectlevel() {
  collectlevel_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBNPCCollect::collectlevel() const {
  return collectlevel_;
}
inline void PBNPCCollect::set_collectlevel(::google::protobuf::uint32 value) {
  _set_bit(16);
  collectlevel_ = value;
}

// repeated uint32 ExtraItemNum = 18;
inline int PBNPCCollect::extraitemnum_size() const {
  return extraitemnum_.size();
}
inline void PBNPCCollect::clear_extraitemnum() {
  extraitemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::extraitemnum() const {
  return extraitemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_extraitemnum() {
  return &extraitemnum_;
}
inline ::google::protobuf::uint32 PBNPCCollect::extraitemnum(int index) const {
  return extraitemnum_.Get(index);
}
inline void PBNPCCollect::set_extraitemnum(int index, ::google::protobuf::uint32 value) {
  extraitemnum_.Set(index, value);
}
inline void PBNPCCollect::add_extraitemnum(::google::protobuf::uint32 value) {
  extraitemnum_.Add(value);
}

// repeated uint32 ExtraItemProbality = 19;
inline int PBNPCCollect::extraitemprobality_size() const {
  return extraitemprobality_.size();
}
inline void PBNPCCollect::clear_extraitemprobality() {
  extraitemprobality_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNPCCollect::extraitemprobality() const {
  return extraitemprobality_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNPCCollect::mutable_extraitemprobality() {
  return &extraitemprobality_;
}
inline ::google::protobuf::uint32 PBNPCCollect::extraitemprobality(int index) const {
  return extraitemprobality_.Get(index);
}
inline void PBNPCCollect::set_extraitemprobality(int index, ::google::protobuf::uint32 value) {
  extraitemprobality_.Set(index, value);
}
inline void PBNPCCollect::add_extraitemprobality(::google::protobuf::uint32 value) {
  extraitemprobality_.Add(value);
}

// optional uint32 CollectTaskType = 20;
inline bool PBNPCCollect::has_collecttasktype() const {
  return _has_bit(19);
}
inline void PBNPCCollect::clear_collecttasktype() {
  collecttasktype_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBNPCCollect::collecttasktype() const {
  return collecttasktype_;
}
inline void PBNPCCollect::set_collecttasktype(::google::protobuf::uint32 value) {
  _set_bit(19);
  collecttasktype_ = value;
}

// -------------------------------------------------------------------

// PBOgreProperty

// optional uint32 TempID = 1;
inline bool PBOgreProperty::has_tempid() const {
  return _has_bit(0);
}
inline void PBOgreProperty::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBOgreProperty::tempid() const {
  return tempid_;
}
inline void PBOgreProperty::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBOgreProperty::has_name() const {
  return _has_bit(1);
}
inline void PBOgreProperty::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBOgreProperty::name() const {
  return *name_;
}
inline void PBOgreProperty::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBOgreProperty::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBOgreProperty::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBOgreProperty::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string ModelName = 3;
inline bool PBOgreProperty::has_modelname() const {
  return _has_bit(2);
}
inline void PBOgreProperty::clear_modelname() {
  if (modelname_ != &_default_modelname_) {
    modelname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBOgreProperty::modelname() const {
  return *modelname_;
}
inline void PBOgreProperty::set_modelname(const ::std::string& value) {
  _set_bit(2);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void PBOgreProperty::set_modelname(const char* value) {
  _set_bit(2);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(value);
}
inline void PBOgreProperty::set_modelname(const char* value, size_t size) {
  _set_bit(2);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  modelname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBOgreProperty::mutable_modelname() {
  _set_bit(2);
  if (modelname_ == &_default_modelname_) {
    modelname_ = new ::std::string;
  }
  return modelname_;
}

// optional uint32 OgreType = 4;
inline bool PBOgreProperty::has_ogretype() const {
  return _has_bit(3);
}
inline void PBOgreProperty::clear_ogretype() {
  ogretype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBOgreProperty::ogretype() const {
  return ogretype_;
}
inline void PBOgreProperty::set_ogretype(::google::protobuf::uint32 value) {
  _set_bit(3);
  ogretype_ = value;
}

// optional uint32 DropType = 5;
inline bool PBOgreProperty::has_droptype() const {
  return _has_bit(4);
}
inline void PBOgreProperty::clear_droptype() {
  droptype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBOgreProperty::droptype() const {
  return droptype_;
}
inline void PBOgreProperty::set_droptype(::google::protobuf::uint32 value) {
  _set_bit(4);
  droptype_ = value;
}

// optional uint32 StrategyID = 6;
inline bool PBOgreProperty::has_strategyid() const {
  return _has_bit(5);
}
inline void PBOgreProperty::clear_strategyid() {
  strategyid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBOgreProperty::strategyid() const {
  return strategyid_;
}
inline void PBOgreProperty::set_strategyid(::google::protobuf::uint32 value) {
  _set_bit(5);
  strategyid_ = value;
}

// optional uint32 DropID = 7;
inline bool PBOgreProperty::has_dropid() const {
  return _has_bit(6);
}
inline void PBOgreProperty::clear_dropid() {
  dropid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBOgreProperty::dropid() const {
  return dropid_;
}
inline void PBOgreProperty::set_dropid(::google::protobuf::uint32 value) {
  _set_bit(6);
  dropid_ = value;
}

// optional uint32 Level = 8;
inline bool PBOgreProperty::has_level() const {
  return _has_bit(7);
}
inline void PBOgreProperty::clear_level() {
  level_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBOgreProperty::level() const {
  return level_;
}
inline void PBOgreProperty::set_level(::google::protobuf::uint32 value) {
  _set_bit(7);
  level_ = value;
}

// optional uint32 DisplayeLevel = 9;
inline bool PBOgreProperty::has_displayelevel() const {
  return _has_bit(8);
}
inline void PBOgreProperty::clear_displayelevel() {
  displayelevel_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBOgreProperty::displayelevel() const {
  return displayelevel_;
}
inline void PBOgreProperty::set_displayelevel(::google::protobuf::uint32 value) {
  _set_bit(8);
  displayelevel_ = value;
}

// optional uint32 AttackRate = 10;
inline bool PBOgreProperty::has_attackrate() const {
  return _has_bit(9);
}
inline void PBOgreProperty::clear_attackrate() {
  attackrate_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBOgreProperty::attackrate() const {
  return attackrate_;
}
inline void PBOgreProperty::set_attackrate(::google::protobuf::uint32 value) {
  _set_bit(9);
  attackrate_ = value;
}

// optional uint32 AttackTime = 11;
inline bool PBOgreProperty::has_attacktime() const {
  return _has_bit(10);
}
inline void PBOgreProperty::clear_attacktime() {
  attacktime_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBOgreProperty::attacktime() const {
  return attacktime_;
}
inline void PBOgreProperty::set_attacktime(::google::protobuf::uint32 value) {
  _set_bit(10);
  attacktime_ = value;
}

// optional uint32 HPRSpeed = 12;
inline bool PBOgreProperty::has_hprspeed() const {
  return _has_bit(11);
}
inline void PBOgreProperty::clear_hprspeed() {
  hprspeed_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBOgreProperty::hprspeed() const {
  return hprspeed_;
}
inline void PBOgreProperty::set_hprspeed(::google::protobuf::uint32 value) {
  _set_bit(11);
  hprspeed_ = value;
}

// optional uint32 MPRSpeeds = 13;
inline bool PBOgreProperty::has_mprspeeds() const {
  return _has_bit(12);
}
inline void PBOgreProperty::clear_mprspeeds() {
  mprspeeds_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBOgreProperty::mprspeeds() const {
  return mprspeeds_;
}
inline void PBOgreProperty::set_mprspeeds(::google::protobuf::uint32 value) {
  _set_bit(12);
  mprspeeds_ = value;
}

// optional uint32 RunSpeed = 14;
inline bool PBOgreProperty::has_runspeed() const {
  return _has_bit(13);
}
inline void PBOgreProperty::clear_runspeed() {
  runspeed_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBOgreProperty::runspeed() const {
  return runspeed_;
}
inline void PBOgreProperty::set_runspeed(::google::protobuf::uint32 value) {
  _set_bit(13);
  runspeed_ = value;
}

// optional uint32 InitLevel = 15;
inline bool PBOgreProperty::has_initlevel() const {
  return _has_bit(14);
}
inline void PBOgreProperty::clear_initlevel() {
  initlevel_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBOgreProperty::initlevel() const {
  return initlevel_;
}
inline void PBOgreProperty::set_initlevel(::google::protobuf::uint32 value) {
  _set_bit(14);
  initlevel_ = value;
}

// optional uint32 HP = 16;
inline bool PBOgreProperty::has_hp() const {
  return _has_bit(15);
}
inline void PBOgreProperty::clear_hp() {
  hp_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBOgreProperty::hp() const {
  return hp_;
}
inline void PBOgreProperty::set_hp(::google::protobuf::uint32 value) {
  _set_bit(15);
  hp_ = value;
}

// optional uint32 MP = 17;
inline bool PBOgreProperty::has_mp() const {
  return _has_bit(16);
}
inline void PBOgreProperty::clear_mp() {
  mp_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBOgreProperty::mp() const {
  return mp_;
}
inline void PBOgreProperty::set_mp(::google::protobuf::uint32 value) {
  _set_bit(16);
  mp_ = value;
}

// optional uint32 PAttack = 18;
inline bool PBOgreProperty::has_pattack() const {
  return _has_bit(17);
}
inline void PBOgreProperty::clear_pattack() {
  pattack_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBOgreProperty::pattack() const {
  return pattack_;
}
inline void PBOgreProperty::set_pattack(::google::protobuf::uint32 value) {
  _set_bit(17);
  pattack_ = value;
}

// optional uint32 PDefence = 19;
inline bool PBOgreProperty::has_pdefence() const {
  return _has_bit(18);
}
inline void PBOgreProperty::clear_pdefence() {
  pdefence_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBOgreProperty::pdefence() const {
  return pdefence_;
}
inline void PBOgreProperty::set_pdefence(::google::protobuf::uint32 value) {
  _set_bit(18);
  pdefence_ = value;
}

// optional uint32 PAttackRange = 20;
inline bool PBOgreProperty::has_pattackrange() const {
  return _has_bit(19);
}
inline void PBOgreProperty::clear_pattackrange() {
  pattackrange_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBOgreProperty::pattackrange() const {
  return pattackrange_;
}
inline void PBOgreProperty::set_pattackrange(::google::protobuf::uint32 value) {
  _set_bit(19);
  pattackrange_ = value;
}

// optional uint32 PReducePer = 21;
inline bool PBOgreProperty::has_preduceper() const {
  return _has_bit(20);
}
inline void PBOgreProperty::clear_preduceper() {
  preduceper_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBOgreProperty::preduceper() const {
  return preduceper_;
}
inline void PBOgreProperty::set_preduceper(::google::protobuf::uint32 value) {
  _set_bit(20);
  preduceper_ = value;
}

// optional uint32 MAttack = 22;
inline bool PBOgreProperty::has_mattack() const {
  return _has_bit(21);
}
inline void PBOgreProperty::clear_mattack() {
  mattack_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBOgreProperty::mattack() const {
  return mattack_;
}
inline void PBOgreProperty::set_mattack(::google::protobuf::uint32 value) {
  _set_bit(21);
  mattack_ = value;
}

// optional uint32 MDefence = 23;
inline bool PBOgreProperty::has_mdefence() const {
  return _has_bit(22);
}
inline void PBOgreProperty::clear_mdefence() {
  mdefence_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBOgreProperty::mdefence() const {
  return mdefence_;
}
inline void PBOgreProperty::set_mdefence(::google::protobuf::uint32 value) {
  _set_bit(22);
  mdefence_ = value;
}

// optional uint32 MAttackRange = 24;
inline bool PBOgreProperty::has_mattackrange() const {
  return _has_bit(23);
}
inline void PBOgreProperty::clear_mattackrange() {
  mattackrange_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBOgreProperty::mattackrange() const {
  return mattackrange_;
}
inline void PBOgreProperty::set_mattackrange(::google::protobuf::uint32 value) {
  _set_bit(23);
  mattackrange_ = value;
}

// optional uint32 MReducePer = 25;
inline bool PBOgreProperty::has_mreduceper() const {
  return _has_bit(24);
}
inline void PBOgreProperty::clear_mreduceper() {
  mreduceper_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBOgreProperty::mreduceper() const {
  return mreduceper_;
}
inline void PBOgreProperty::set_mreduceper(::google::protobuf::uint32 value) {
  _set_bit(24);
  mreduceper_ = value;
}

// optional uint32 DeathRate = 26;
inline bool PBOgreProperty::has_deathrate() const {
  return _has_bit(25);
}
inline void PBOgreProperty::clear_deathrate() {
  deathrate_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBOgreProperty::deathrate() const {
  return deathrate_;
}
inline void PBOgreProperty::set_deathrate(::google::protobuf::uint32 value) {
  _set_bit(25);
  deathrate_ = value;
}

// optional uint32 DeathValue = 27;
inline bool PBOgreProperty::has_deathvalue() const {
  return _has_bit(26);
}
inline void PBOgreProperty::clear_deathvalue() {
  deathvalue_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBOgreProperty::deathvalue() const {
  return deathvalue_;
}
inline void PBOgreProperty::set_deathvalue(::google::protobuf::uint32 value) {
  _set_bit(26);
  deathvalue_ = value;
}

// optional uint32 DeathDefense = 28;
inline bool PBOgreProperty::has_deathdefense() const {
  return _has_bit(27);
}
inline void PBOgreProperty::clear_deathdefense() {
  deathdefense_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBOgreProperty::deathdefense() const {
  return deathdefense_;
}
inline void PBOgreProperty::set_deathdefense(::google::protobuf::uint32 value) {
  _set_bit(27);
  deathdefense_ = value;
}

// optional uint32 NormalHitrate = 29;
inline bool PBOgreProperty::has_normalhitrate() const {
  return _has_bit(28);
}
inline void PBOgreProperty::clear_normalhitrate() {
  normalhitrate_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBOgreProperty::normalhitrate() const {
  return normalhitrate_;
}
inline void PBOgreProperty::set_normalhitrate(::google::protobuf::uint32 value) {
  _set_bit(28);
  normalhitrate_ = value;
}

// optional uint32 NormalDuck = 30;
inline bool PBOgreProperty::has_normalduck() const {
  return _has_bit(29);
}
inline void PBOgreProperty::clear_normalduck() {
  normalduck_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBOgreProperty::normalduck() const {
  return normalduck_;
}
inline void PBOgreProperty::set_normalduck(::google::protobuf::uint32 value) {
  _set_bit(29);
  normalduck_ = value;
}

// optional uint32 Recover = 31;
inline bool PBOgreProperty::has_recover() const {
  return _has_bit(30);
}
inline void PBOgreProperty::clear_recover() {
  recover_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBOgreProperty::recover() const {
  return recover_;
}
inline void PBOgreProperty::set_recover(::google::protobuf::uint32 value) {
  _set_bit(30);
  recover_ = value;
}

// optional uint32 IgnoreDuck = 32;
inline bool PBOgreProperty::has_ignoreduck() const {
  return _has_bit(31);
}
inline void PBOgreProperty::clear_ignoreduck() {
  ignoreduck_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBOgreProperty::ignoreduck() const {
  return ignoreduck_;
}
inline void PBOgreProperty::set_ignoreduck(::google::protobuf::uint32 value) {
  _set_bit(31);
  ignoreduck_ = value;
}

// repeated uint32 ResDef = 33;
inline int PBOgreProperty::resdef_size() const {
  return resdef_.size();
}
inline void PBOgreProperty::clear_resdef() {
  resdef_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreProperty::resdef() const {
  return resdef_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreProperty::mutable_resdef() {
  return &resdef_;
}
inline ::google::protobuf::uint32 PBOgreProperty::resdef(int index) const {
  return resdef_.Get(index);
}
inline void PBOgreProperty::set_resdef(int index, ::google::protobuf::uint32 value) {
  resdef_.Set(index, value);
}
inline void PBOgreProperty::add_resdef(::google::protobuf::uint32 value) {
  resdef_.Add(value);
}

// repeated uint32 ResAtt = 34;
inline int PBOgreProperty::resatt_size() const {
  return resatt_.size();
}
inline void PBOgreProperty::clear_resatt() {
  resatt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreProperty::resatt() const {
  return resatt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreProperty::mutable_resatt() {
  return &resatt_;
}
inline ::google::protobuf::uint32 PBOgreProperty::resatt(int index) const {
  return resatt_.Get(index);
}
inline void PBOgreProperty::set_resatt(int index, ::google::protobuf::uint32 value) {
  resatt_.Set(index, value);
}
inline void PBOgreProperty::add_resatt(::google::protobuf::uint32 value) {
  resatt_.Add(value);
}

// optional uint32 NeedDelay = 35;
inline bool PBOgreProperty::has_needdelay() const {
  return _has_bit(34);
}
inline void PBOgreProperty::clear_needdelay() {
  needdelay_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBOgreProperty::needdelay() const {
  return needdelay_;
}
inline void PBOgreProperty::set_needdelay(::google::protobuf::uint32 value) {
  _set_bit(34);
  needdelay_ = value;
}

// optional uint32 PatrolType = 36;
inline bool PBOgreProperty::has_patroltype() const {
  return _has_bit(35);
}
inline void PBOgreProperty::clear_patroltype() {
  patroltype_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 PBOgreProperty::patroltype() const {
  return patroltype_;
}
inline void PBOgreProperty::set_patroltype(::google::protobuf::uint32 value) {
  _set_bit(35);
  patroltype_ = value;
}

// optional uint32 IsInitiative = 37;
inline bool PBOgreProperty::has_isinitiative() const {
  return _has_bit(36);
}
inline void PBOgreProperty::clear_isinitiative() {
  isinitiative_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBOgreProperty::isinitiative() const {
  return isinitiative_;
}
inline void PBOgreProperty::set_isinitiative(::google::protobuf::uint32 value) {
  _set_bit(36);
  isinitiative_ = value;
}

// optional uint32 WalkDistance = 38;
inline bool PBOgreProperty::has_walkdistance() const {
  return _has_bit(37);
}
inline void PBOgreProperty::clear_walkdistance() {
  walkdistance_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBOgreProperty::walkdistance() const {
  return walkdistance_;
}
inline void PBOgreProperty::set_walkdistance(::google::protobuf::uint32 value) {
  _set_bit(37);
  walkdistance_ = value;
}

// optional uint32 TeleTime = 39;
inline bool PBOgreProperty::has_teletime() const {
  return _has_bit(38);
}
inline void PBOgreProperty::clear_teletime() {
  teletime_ = 0u;
  _clear_bit(38);
}
inline ::google::protobuf::uint32 PBOgreProperty::teletime() const {
  return teletime_;
}
inline void PBOgreProperty::set_teletime(::google::protobuf::uint32 value) {
  _set_bit(38);
  teletime_ = value;
}

// optional uint32 EnmityDistance = 40;
inline bool PBOgreProperty::has_enmitydistance() const {
  return _has_bit(39);
}
inline void PBOgreProperty::clear_enmitydistance() {
  enmitydistance_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBOgreProperty::enmitydistance() const {
  return enmitydistance_;
}
inline void PBOgreProperty::set_enmitydistance(::google::protobuf::uint32 value) {
  _set_bit(39);
  enmitydistance_ = value;
}

// optional uint32 EnmityTime = 41;
inline bool PBOgreProperty::has_enmitytime() const {
  return _has_bit(40);
}
inline void PBOgreProperty::clear_enmitytime() {
  enmitytime_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBOgreProperty::enmitytime() const {
  return enmitytime_;
}
inline void PBOgreProperty::set_enmitytime(::google::protobuf::uint32 value) {
  _set_bit(40);
  enmitytime_ = value;
}

// optional uint32 ClearTimer = 42;
inline bool PBOgreProperty::has_cleartimer() const {
  return _has_bit(41);
}
inline void PBOgreProperty::clear_cleartimer() {
  cleartimer_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 PBOgreProperty::cleartimer() const {
  return cleartimer_;
}
inline void PBOgreProperty::set_cleartimer(::google::protobuf::uint32 value) {
  _set_bit(41);
  cleartimer_ = value;
}

// optional uint32 Exp = 43;
inline bool PBOgreProperty::has_exp() const {
  return _has_bit(42);
}
inline void PBOgreProperty::clear_exp() {
  exp_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 PBOgreProperty::exp() const {
  return exp_;
}
inline void PBOgreProperty::set_exp(::google::protobuf::uint32 value) {
  _set_bit(42);
  exp_ = value;
}

// optional uint32 InitMoney = 44;
inline bool PBOgreProperty::has_initmoney() const {
  return _has_bit(43);
}
inline void PBOgreProperty::clear_initmoney() {
  initmoney_ = 0u;
  _clear_bit(43);
}
inline ::google::protobuf::uint32 PBOgreProperty::initmoney() const {
  return initmoney_;
}
inline void PBOgreProperty::set_initmoney(::google::protobuf::uint32 value) {
  _set_bit(43);
  initmoney_ = value;
}

// optional uint32 DeltaMoney = 45;
inline bool PBOgreProperty::has_deltamoney() const {
  return _has_bit(44);
}
inline void PBOgreProperty::clear_deltamoney() {
  deltamoney_ = 0u;
  _clear_bit(44);
}
inline ::google::protobuf::uint32 PBOgreProperty::deltamoney() const {
  return deltamoney_;
}
inline void PBOgreProperty::set_deltamoney(::google::protobuf::uint32 value) {
  _set_bit(44);
  deltamoney_ = value;
}

// optional uint32 Resist = 46;
inline bool PBOgreProperty::has_resist() const {
  return _has_bit(45);
}
inline void PBOgreProperty::clear_resist() {
  resist_ = 0u;
  _clear_bit(45);
}
inline ::google::protobuf::uint32 PBOgreProperty::resist() const {
  return resist_;
}
inline void PBOgreProperty::set_resist(::google::protobuf::uint32 value) {
  _set_bit(45);
  resist_ = value;
}

// optional uint32 TranID = 47;
inline bool PBOgreProperty::has_tranid() const {
  return _has_bit(46);
}
inline void PBOgreProperty::clear_tranid() {
  tranid_ = 0u;
  _clear_bit(46);
}
inline ::google::protobuf::uint32 PBOgreProperty::tranid() const {
  return tranid_;
}
inline void PBOgreProperty::set_tranid(::google::protobuf::uint32 value) {
  _set_bit(46);
  tranid_ = value;
}

// optional uint32 PkType = 48;
inline bool PBOgreProperty::has_pktype() const {
  return _has_bit(47);
}
inline void PBOgreProperty::clear_pktype() {
  pktype_ = 0u;
  _clear_bit(47);
}
inline ::google::protobuf::uint32 PBOgreProperty::pktype() const {
  return pktype_;
}
inline void PBOgreProperty::set_pktype(::google::protobuf::uint32 value) {
  _set_bit(47);
  pktype_ = value;
}

// optional uint32 GroupID = 49;
inline bool PBOgreProperty::has_groupid() const {
  return _has_bit(48);
}
inline void PBOgreProperty::clear_groupid() {
  groupid_ = 0u;
  _clear_bit(48);
}
inline ::google::protobuf::uint32 PBOgreProperty::groupid() const {
  return groupid_;
}
inline void PBOgreProperty::set_groupid(::google::protobuf::uint32 value) {
  _set_bit(48);
  groupid_ = value;
}

// optional uint32 SkillID = 50;
inline bool PBOgreProperty::has_skillid() const {
  return _has_bit(49);
}
inline void PBOgreProperty::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(49);
}
inline ::google::protobuf::uint32 PBOgreProperty::skillid() const {
  return skillid_;
}
inline void PBOgreProperty::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(49);
  skillid_ = value;
}

// optional uint32 SkillLevel = 51;
inline bool PBOgreProperty::has_skilllevel() const {
  return _has_bit(50);
}
inline void PBOgreProperty::clear_skilllevel() {
  skilllevel_ = 0u;
  _clear_bit(50);
}
inline ::google::protobuf::uint32 PBOgreProperty::skilllevel() const {
  return skilllevel_;
}
inline void PBOgreProperty::set_skilllevel(::google::protobuf::uint32 value) {
  _set_bit(50);
  skilllevel_ = value;
}

// optional uint32 SearchDistance = 52;
inline bool PBOgreProperty::has_searchdistance() const {
  return _has_bit(51);
}
inline void PBOgreProperty::clear_searchdistance() {
  searchdistance_ = 0u;
  _clear_bit(51);
}
inline ::google::protobuf::uint32 PBOgreProperty::searchdistance() const {
  return searchdistance_;
}
inline void PBOgreProperty::set_searchdistance(::google::protobuf::uint32 value) {
  _set_bit(51);
  searchdistance_ = value;
}

// optional uint32 LeftTime = 57;
inline bool PBOgreProperty::has_lefttime() const {
  return _has_bit(52);
}
inline void PBOgreProperty::clear_lefttime() {
  lefttime_ = 0u;
  _clear_bit(52);
}
inline ::google::protobuf::uint32 PBOgreProperty::lefttime() const {
  return lefttime_;
}
inline void PBOgreProperty::set_lefttime(::google::protobuf::uint32 value) {
  _set_bit(52);
  lefttime_ = value;
}

// optional uint32 ResShow = 58;
inline bool PBOgreProperty::has_resshow() const {
  return _has_bit(53);
}
inline void PBOgreProperty::clear_resshow() {
  resshow_ = 0u;
  _clear_bit(53);
}
inline ::google::protobuf::uint32 PBOgreProperty::resshow() const {
  return resshow_;
}
inline void PBOgreProperty::set_resshow(::google::protobuf::uint32 value) {
  _set_bit(53);
  resshow_ = value;
}

// repeated uint32 FailTaskID = 59;
inline int PBOgreProperty::failtaskid_size() const {
  return failtaskid_.size();
}
inline void PBOgreProperty::clear_failtaskid() {
  failtaskid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreProperty::failtaskid() const {
  return failtaskid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreProperty::mutable_failtaskid() {
  return &failtaskid_;
}
inline ::google::protobuf::uint32 PBOgreProperty::failtaskid(int index) const {
  return failtaskid_.Get(index);
}
inline void PBOgreProperty::set_failtaskid(int index, ::google::protobuf::uint32 value) {
  failtaskid_.Set(index, value);
}
inline void PBOgreProperty::add_failtaskid(::google::protobuf::uint32 value) {
  failtaskid_.Add(value);
}

// optional uint32 JusticeValue = 60;
inline bool PBOgreProperty::has_justicevalue() const {
  return _has_bit(55);
}
inline void PBOgreProperty::clear_justicevalue() {
  justicevalue_ = 0u;
  _clear_bit(55);
}
inline ::google::protobuf::uint32 PBOgreProperty::justicevalue() const {
  return justicevalue_;
}
inline void PBOgreProperty::set_justicevalue(::google::protobuf::uint32 value) {
  _set_bit(55);
  justicevalue_ = value;
}

// optional uint32 BuffImmunity = 61;
inline bool PBOgreProperty::has_buffimmunity() const {
  return _has_bit(56);
}
inline void PBOgreProperty::clear_buffimmunity() {
  buffimmunity_ = 0u;
  _clear_bit(56);
}
inline ::google::protobuf::uint32 PBOgreProperty::buffimmunity() const {
  return buffimmunity_;
}
inline void PBOgreProperty::set_buffimmunity(::google::protobuf::uint32 value) {
  _set_bit(56);
  buffimmunity_ = value;
}

// optional uint32 ObtainTitle = 62;
inline bool PBOgreProperty::has_obtaintitle() const {
  return _has_bit(57);
}
inline void PBOgreProperty::clear_obtaintitle() {
  obtaintitle_ = 0u;
  _clear_bit(57);
}
inline ::google::protobuf::uint32 PBOgreProperty::obtaintitle() const {
  return obtaintitle_;
}
inline void PBOgreProperty::set_obtaintitle(::google::protobuf::uint32 value) {
  _set_bit(57);
  obtaintitle_ = value;
}

// optional uint32 AwardID = 63;
inline bool PBOgreProperty::has_awardid() const {
  return _has_bit(58);
}
inline void PBOgreProperty::clear_awardid() {
  awardid_ = 0u;
  _clear_bit(58);
}
inline ::google::protobuf::uint32 PBOgreProperty::awardid() const {
  return awardid_;
}
inline void PBOgreProperty::set_awardid(::google::protobuf::uint32 value) {
  _set_bit(58);
  awardid_ = value;
}

// optional uint32 LmtLineID = 64;
inline bool PBOgreProperty::has_lmtlineid() const {
  return _has_bit(59);
}
inline void PBOgreProperty::clear_lmtlineid() {
  lmtlineid_ = 0u;
  _clear_bit(59);
}
inline ::google::protobuf::uint32 PBOgreProperty::lmtlineid() const {
  return lmtlineid_;
}
inline void PBOgreProperty::set_lmtlineid(::google::protobuf::uint32 value) {
  _set_bit(59);
  lmtlineid_ = value;
}

// optional uint32 RedstoneID = 65;
inline bool PBOgreProperty::has_redstoneid() const {
  return _has_bit(60);
}
inline void PBOgreProperty::clear_redstoneid() {
  redstoneid_ = 0u;
  _clear_bit(60);
}
inline ::google::protobuf::uint32 PBOgreProperty::redstoneid() const {
  return redstoneid_;
}
inline void PBOgreProperty::set_redstoneid(::google::protobuf::uint32 value) {
  _set_bit(60);
  redstoneid_ = value;
}

// optional uint32 OgreEvent = 66;
inline bool PBOgreProperty::has_ogreevent() const {
  return _has_bit(61);
}
inline void PBOgreProperty::clear_ogreevent() {
  ogreevent_ = 0u;
  _clear_bit(61);
}
inline ::google::protobuf::uint32 PBOgreProperty::ogreevent() const {
  return ogreevent_;
}
inline void PBOgreProperty::set_ogreevent(::google::protobuf::uint32 value) {
  _set_bit(61);
  ogreevent_ = value;
}

// optional uint32 CorpsValue = 67;
inline bool PBOgreProperty::has_corpsvalue() const {
  return _has_bit(62);
}
inline void PBOgreProperty::clear_corpsvalue() {
  corpsvalue_ = 0u;
  _clear_bit(62);
}
inline ::google::protobuf::uint32 PBOgreProperty::corpsvalue() const {
  return corpsvalue_;
}
inline void PBOgreProperty::set_corpsvalue(::google::protobuf::uint32 value) {
  _set_bit(62);
  corpsvalue_ = value;
}

// optional uint32 DropsDescID = 69;
inline bool PBOgreProperty::has_dropsdescid() const {
  return _has_bit(63);
}
inline void PBOgreProperty::clear_dropsdescid() {
  dropsdescid_ = 0u;
  _clear_bit(63);
}
inline ::google::protobuf::uint32 PBOgreProperty::dropsdescid() const {
  return dropsdescid_;
}
inline void PBOgreProperty::set_dropsdescid(::google::protobuf::uint32 value) {
  _set_bit(63);
  dropsdescid_ = value;
}

// optional uint32 DiffcultIndex = 70;
inline bool PBOgreProperty::has_diffcultindex() const {
  return _has_bit(64);
}
inline void PBOgreProperty::clear_diffcultindex() {
  diffcultindex_ = 0u;
  _clear_bit(64);
}
inline ::google::protobuf::uint32 PBOgreProperty::diffcultindex() const {
  return diffcultindex_;
}
inline void PBOgreProperty::set_diffcultindex(::google::protobuf::uint32 value) {
  _set_bit(64);
  diffcultindex_ = value;
}

// optional uint32 DiffcultAward = 71;
inline bool PBOgreProperty::has_diffcultaward() const {
  return _has_bit(65);
}
inline void PBOgreProperty::clear_diffcultaward() {
  diffcultaward_ = 0u;
  _clear_bit(65);
}
inline ::google::protobuf::uint32 PBOgreProperty::diffcultaward() const {
  return diffcultaward_;
}
inline void PBOgreProperty::set_diffcultaward(::google::protobuf::uint32 value) {
  _set_bit(65);
  diffcultaward_ = value;
}

// -------------------------------------------------------------------

// PBBox_Click

// optional uint32 Event = 1;
inline bool PBBox_Click::has_event() const {
  return _has_bit(0);
}
inline void PBBox_Click::clear_event() {
  event_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBox_Click::event() const {
  return event_;
}
inline void PBBox_Click::set_event(::google::protobuf::uint32 value) {
  _set_bit(0);
  event_ = value;
}

// optional uint32 Probability = 2;
inline bool PBBox_Click::has_probability() const {
  return _has_bit(1);
}
inline void PBBox_Click::clear_probability() {
  probability_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBBox_Click::probability() const {
  return probability_;
}
inline void PBBox_Click::set_probability(::google::protobuf::uint32 value) {
  _set_bit(1);
  probability_ = value;
}

// -------------------------------------------------------------------

// PBOgreBox

// optional .PBOgreProperty OgreInfo = 1;
inline bool PBOgreBox::has_ogreinfo() const {
  return _has_bit(0);
}
inline void PBOgreBox::clear_ogreinfo() {
  if (ogreinfo_ != NULL) ogreinfo_->::PBOgreProperty::Clear();
  _clear_bit(0);
}
inline const ::PBOgreProperty& PBOgreBox::ogreinfo() const {
  return ogreinfo_ != NULL ? *ogreinfo_ : *default_instance_->ogreinfo_;
}
inline ::PBOgreProperty* PBOgreBox::mutable_ogreinfo() {
  _set_bit(0);
  if (ogreinfo_ == NULL) ogreinfo_ = new ::PBOgreProperty;
  return ogreinfo_;
}

// repeated .PBBox_Click Click = 2;
inline int PBOgreBox::click_size() const {
  return click_.size();
}
inline void PBOgreBox::clear_click() {
  click_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBox_Click >&
PBOgreBox::click() const {
  return click_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBox_Click >*
PBOgreBox::mutable_click() {
  return &click_;
}
inline const ::PBBox_Click& PBOgreBox::click(int index) const {
  return click_.Get(index);
}
inline ::PBBox_Click* PBOgreBox::mutable_click(int index) {
  return click_.Mutable(index);
}
inline ::PBBox_Click* PBOgreBox::add_click() {
  return click_.Add();
}

// optional uint32 BoxType = 3;
inline bool PBOgreBox::has_boxtype() const {
  return _has_bit(2);
}
inline void PBOgreBox::clear_boxtype() {
  boxtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBOgreBox::boxtype() const {
  return boxtype_;
}
inline void PBOgreBox::set_boxtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  boxtype_ = value;
}

// optional uint32 KeyID = 4;
inline bool PBOgreBox::has_keyid() const {
  return _has_bit(3);
}
inline void PBOgreBox::clear_keyid() {
  keyid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBOgreBox::keyid() const {
  return keyid_;
}
inline void PBOgreBox::set_keyid(::google::protobuf::uint32 value) {
  _set_bit(3);
  keyid_ = value;
}

// -------------------------------------------------------------------

// PBShowPet

// optional uint32 TempID = 1;
inline bool PBShowPet::has_tempid() const {
  return _has_bit(0);
}
inline void PBShowPet::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBShowPet::tempid() const {
  return tempid_;
}
inline void PBShowPet::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBShowPet::has_name() const {
  return _has_bit(1);
}
inline void PBShowPet::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBShowPet::name() const {
  return *name_;
}
inline void PBShowPet::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBShowPet::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBShowPet::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBShowPet::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string Model = 3;
inline bool PBShowPet::has_model() const {
  return _has_bit(2);
}
inline void PBShowPet::clear_model() {
  if (model_ != &_default_model_) {
    model_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBShowPet::model() const {
  return *model_;
}
inline void PBShowPet::set_model(const ::std::string& value) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void PBShowPet::set_model(const char* value) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void PBShowPet::set_model(const char* value, size_t size) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBShowPet::mutable_model() {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  return model_;
}

// optional string IconName = 4;
inline bool PBShowPet::has_iconname() const {
  return _has_bit(3);
}
inline void PBShowPet::clear_iconname() {
  if (iconname_ != &_default_iconname_) {
    iconname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBShowPet::iconname() const {
  return *iconname_;
}
inline void PBShowPet::set_iconname(const ::std::string& value) {
  _set_bit(3);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(value);
}
inline void PBShowPet::set_iconname(const char* value) {
  _set_bit(3);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(value);
}
inline void PBShowPet::set_iconname(const char* value, size_t size) {
  _set_bit(3);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBShowPet::mutable_iconname() {
  _set_bit(3);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  return iconname_;
}

// optional uint32 MetierID = 5;
inline bool PBShowPet::has_metierid() const {
  return _has_bit(4);
}
inline void PBShowPet::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBShowPet::metierid() const {
  return metierid_;
}
inline void PBShowPet::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(4);
  metierid_ = value;
}

// optional uint32 MaxLevel = 6;
inline bool PBShowPet::has_maxlevel() const {
  return _has_bit(5);
}
inline void PBShowPet::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBShowPet::maxlevel() const {
  return maxlevel_;
}
inline void PBShowPet::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  maxlevel_ = value;
}

// optional uint32 LevelRequire = 7;
inline bool PBShowPet::has_levelrequire() const {
  return _has_bit(6);
}
inline void PBShowPet::clear_levelrequire() {
  levelrequire_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBShowPet::levelrequire() const {
  return levelrequire_;
}
inline void PBShowPet::set_levelrequire(::google::protobuf::uint32 value) {
  _set_bit(6);
  levelrequire_ = value;
}

// optional uint32 ExceedLevel = 8;
inline bool PBShowPet::has_exceedlevel() const {
  return _has_bit(7);
}
inline void PBShowPet::clear_exceedlevel() {
  exceedlevel_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBShowPet::exceedlevel() const {
  return exceedlevel_;
}
inline void PBShowPet::set_exceedlevel(::google::protobuf::uint32 value) {
  _set_bit(7);
  exceedlevel_ = value;
}

// optional uint32 PetItemID = 9;
inline bool PBShowPet::has_petitemid() const {
  return _has_bit(8);
}
inline void PBShowPet::clear_petitemid() {
  petitemid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBShowPet::petitemid() const {
  return petitemid_;
}
inline void PBShowPet::set_petitemid(::google::protobuf::uint32 value) {
  _set_bit(8);
  petitemid_ = value;
}

// optional uint32 RevertCost = 10;
inline bool PBShowPet::has_revertcost() const {
  return _has_bit(9);
}
inline void PBShowPet::clear_revertcost() {
  revertcost_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBShowPet::revertcost() const {
  return revertcost_;
}
inline void PBShowPet::set_revertcost(::google::protobuf::uint32 value) {
  _set_bit(9);
  revertcost_ = value;
}

// optional uint32 InitStorage = 11;
inline bool PBShowPet::has_initstorage() const {
  return _has_bit(10);
}
inline void PBShowPet::clear_initstorage() {
  initstorage_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBShowPet::initstorage() const {
  return initstorage_;
}
inline void PBShowPet::set_initstorage(::google::protobuf::uint32 value) {
  _set_bit(10);
  initstorage_ = value;
}

// optional uint32 LevelIncStorage = 12;
inline bool PBShowPet::has_levelincstorage() const {
  return _has_bit(11);
}
inline void PBShowPet::clear_levelincstorage() {
  levelincstorage_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBShowPet::levelincstorage() const {
  return levelincstorage_;
}
inline void PBShowPet::set_levelincstorage(::google::protobuf::uint32 value) {
  _set_bit(11);
  levelincstorage_ = value;
}

// optional uint32 IncStorage = 13;
inline bool PBShowPet::has_incstorage() const {
  return _has_bit(12);
}
inline void PBShowPet::clear_incstorage() {
  incstorage_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBShowPet::incstorage() const {
  return incstorage_;
}
inline void PBShowPet::set_incstorage(::google::protobuf::uint32 value) {
  _set_bit(12);
  incstorage_ = value;
}

// optional uint32 ExpPerMin = 14;
inline bool PBShowPet::has_exppermin() const {
  return _has_bit(13);
}
inline void PBShowPet::clear_exppermin() {
  exppermin_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBShowPet::exppermin() const {
  return exppermin_;
}
inline void PBShowPet::set_exppermin(::google::protobuf::uint32 value) {
  _set_bit(13);
  exppermin_ = value;
}

// optional uint32 RepletionLimit = 15;
inline bool PBShowPet::has_repletionlimit() const {
  return _has_bit(14);
}
inline void PBShowPet::clear_repletionlimit() {
  repletionlimit_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBShowPet::repletionlimit() const {
  return repletionlimit_;
}
inline void PBShowPet::set_repletionlimit(::google::protobuf::uint32 value) {
  _set_bit(14);
  repletionlimit_ = value;
}

// optional uint32 RepletionHP = 16;
inline bool PBShowPet::has_repletionhp() const {
  return _has_bit(15);
}
inline void PBShowPet::clear_repletionhp() {
  repletionhp_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBShowPet::repletionhp() const {
  return repletionhp_;
}
inline void PBShowPet::set_repletionhp(::google::protobuf::uint32 value) {
  _set_bit(15);
  repletionhp_ = value;
}

// optional uint32 RevertHPValue = 17;
inline bool PBShowPet::has_reverthpvalue() const {
  return _has_bit(16);
}
inline void PBShowPet::clear_reverthpvalue() {
  reverthpvalue_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBShowPet::reverthpvalue() const {
  return reverthpvalue_;
}
inline void PBShowPet::set_reverthpvalue(::google::protobuf::uint32 value) {
  _set_bit(16);
  reverthpvalue_ = value;
}

// optional uint32 MinRepletion1 = 18;
inline bool PBShowPet::has_minrepletion1() const {
  return _has_bit(17);
}
inline void PBShowPet::clear_minrepletion1() {
  minrepletion1_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBShowPet::minrepletion1() const {
  return minrepletion1_;
}
inline void PBShowPet::set_minrepletion1(::google::protobuf::uint32 value) {
  _set_bit(17);
  minrepletion1_ = value;
}

// optional uint32 MaxRepletion1 = 19;
inline bool PBShowPet::has_maxrepletion1() const {
  return _has_bit(18);
}
inline void PBShowPet::clear_maxrepletion1() {
  maxrepletion1_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBShowPet::maxrepletion1() const {
  return maxrepletion1_;
}
inline void PBShowPet::set_maxrepletion1(::google::protobuf::uint32 value) {
  _set_bit(18);
  maxrepletion1_ = value;
}

// optional uint32 ExpSpeedRate1 = 20;
inline bool PBShowPet::has_expspeedrate1() const {
  return _has_bit(19);
}
inline void PBShowPet::clear_expspeedrate1() {
  expspeedrate1_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBShowPet::expspeedrate1() const {
  return expspeedrate1_;
}
inline void PBShowPet::set_expspeedrate1(::google::protobuf::uint32 value) {
  _set_bit(19);
  expspeedrate1_ = value;
}

// optional uint32 MinRepletion2 = 21;
inline bool PBShowPet::has_minrepletion2() const {
  return _has_bit(20);
}
inline void PBShowPet::clear_minrepletion2() {
  minrepletion2_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBShowPet::minrepletion2() const {
  return minrepletion2_;
}
inline void PBShowPet::set_minrepletion2(::google::protobuf::uint32 value) {
  _set_bit(20);
  minrepletion2_ = value;
}

// optional uint32 MaxRepletion2 = 22;
inline bool PBShowPet::has_maxrepletion2() const {
  return _has_bit(21);
}
inline void PBShowPet::clear_maxrepletion2() {
  maxrepletion2_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBShowPet::maxrepletion2() const {
  return maxrepletion2_;
}
inline void PBShowPet::set_maxrepletion2(::google::protobuf::uint32 value) {
  _set_bit(21);
  maxrepletion2_ = value;
}

// optional uint32 ExpSpeedRate2 = 23;
inline bool PBShowPet::has_expspeedrate2() const {
  return _has_bit(22);
}
inline void PBShowPet::clear_expspeedrate2() {
  expspeedrate2_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBShowPet::expspeedrate2() const {
  return expspeedrate2_;
}
inline void PBShowPet::set_expspeedrate2(::google::protobuf::uint32 value) {
  _set_bit(22);
  expspeedrate2_ = value;
}

// optional uint32 MinRepletion3 = 24;
inline bool PBShowPet::has_minrepletion3() const {
  return _has_bit(23);
}
inline void PBShowPet::clear_minrepletion3() {
  minrepletion3_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBShowPet::minrepletion3() const {
  return minrepletion3_;
}
inline void PBShowPet::set_minrepletion3(::google::protobuf::uint32 value) {
  _set_bit(23);
  minrepletion3_ = value;
}

// optional uint32 MaxRepletion3 = 25;
inline bool PBShowPet::has_maxrepletion3() const {
  return _has_bit(24);
}
inline void PBShowPet::clear_maxrepletion3() {
  maxrepletion3_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBShowPet::maxrepletion3() const {
  return maxrepletion3_;
}
inline void PBShowPet::set_maxrepletion3(::google::protobuf::uint32 value) {
  _set_bit(24);
  maxrepletion3_ = value;
}

// optional uint32 ExpSpeedRate3 = 26;
inline bool PBShowPet::has_expspeedrate3() const {
  return _has_bit(25);
}
inline void PBShowPet::clear_expspeedrate3() {
  expspeedrate3_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBShowPet::expspeedrate3() const {
  return expspeedrate3_;
}
inline void PBShowPet::set_expspeedrate3(::google::protobuf::uint32 value) {
  _set_bit(25);
  expspeedrate3_ = value;
}

// optional uint32 MinRepletion4 = 27;
inline bool PBShowPet::has_minrepletion4() const {
  return _has_bit(26);
}
inline void PBShowPet::clear_minrepletion4() {
  minrepletion4_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBShowPet::minrepletion4() const {
  return minrepletion4_;
}
inline void PBShowPet::set_minrepletion4(::google::protobuf::uint32 value) {
  _set_bit(26);
  minrepletion4_ = value;
}

// optional uint32 MaxRepletion4 = 28;
inline bool PBShowPet::has_maxrepletion4() const {
  return _has_bit(27);
}
inline void PBShowPet::clear_maxrepletion4() {
  maxrepletion4_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBShowPet::maxrepletion4() const {
  return maxrepletion4_;
}
inline void PBShowPet::set_maxrepletion4(::google::protobuf::uint32 value) {
  _set_bit(27);
  maxrepletion4_ = value;
}

// optional uint32 ExpSpeedRate4 = 29;
inline bool PBShowPet::has_expspeedrate4() const {
  return _has_bit(28);
}
inline void PBShowPet::clear_expspeedrate4() {
  expspeedrate4_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBShowPet::expspeedrate4() const {
  return expspeedrate4_;
}
inline void PBShowPet::set_expspeedrate4(::google::protobuf::uint32 value) {
  _set_bit(28);
  expspeedrate4_ = value;
}

// optional uint32 MinRepletion5 = 30;
inline bool PBShowPet::has_minrepletion5() const {
  return _has_bit(29);
}
inline void PBShowPet::clear_minrepletion5() {
  minrepletion5_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBShowPet::minrepletion5() const {
  return minrepletion5_;
}
inline void PBShowPet::set_minrepletion5(::google::protobuf::uint32 value) {
  _set_bit(29);
  minrepletion5_ = value;
}

// optional uint32 MaxRepletion5 = 31;
inline bool PBShowPet::has_maxrepletion5() const {
  return _has_bit(30);
}
inline void PBShowPet::clear_maxrepletion5() {
  maxrepletion5_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBShowPet::maxrepletion5() const {
  return maxrepletion5_;
}
inline void PBShowPet::set_maxrepletion5(::google::protobuf::uint32 value) {
  _set_bit(30);
  maxrepletion5_ = value;
}

// optional uint32 ExpSpeedRate5 = 32;
inline bool PBShowPet::has_expspeedrate5() const {
  return _has_bit(31);
}
inline void PBShowPet::clear_expspeedrate5() {
  expspeedrate5_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBShowPet::expspeedrate5() const {
  return expspeedrate5_;
}
inline void PBShowPet::set_expspeedrate5(::google::protobuf::uint32 value) {
  _set_bit(31);
  expspeedrate5_ = value;
}

// optional uint32 FoodCombo = 33;
inline bool PBShowPet::has_foodcombo() const {
  return _has_bit(32);
}
inline void PBShowPet::clear_foodcombo() {
  foodcombo_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBShowPet::foodcombo() const {
  return foodcombo_;
}
inline void PBShowPet::set_foodcombo(::google::protobuf::uint32 value) {
  _set_bit(32);
  foodcombo_ = value;
}

// -------------------------------------------------------------------

// PBBattlePet

// optional uint32 TempID = 1;
inline bool PBBattlePet::has_tempid() const {
  return _has_bit(0);
}
inline void PBBattlePet::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBattlePet::tempid() const {
  return tempid_;
}
inline void PBBattlePet::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBBattlePet::has_name() const {
  return _has_bit(1);
}
inline void PBBattlePet::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBBattlePet::name() const {
  return *name_;
}
inline void PBBattlePet::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBBattlePet::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBBattlePet::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBattlePet::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string Model = 3;
inline bool PBBattlePet::has_model() const {
  return _has_bit(2);
}
inline void PBBattlePet::clear_model() {
  if (model_ != &_default_model_) {
    model_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBBattlePet::model() const {
  return *model_;
}
inline void PBBattlePet::set_model(const ::std::string& value) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void PBBattlePet::set_model(const char* value) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void PBBattlePet::set_model(const char* value, size_t size) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBattlePet::mutable_model() {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  return model_;
}

// optional string IconName = 4;
inline bool PBBattlePet::has_iconname() const {
  return _has_bit(3);
}
inline void PBBattlePet::clear_iconname() {
  if (iconname_ != &_default_iconname_) {
    iconname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBBattlePet::iconname() const {
  return *iconname_;
}
inline void PBBattlePet::set_iconname(const ::std::string& value) {
  _set_bit(3);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(value);
}
inline void PBBattlePet::set_iconname(const char* value) {
  _set_bit(3);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(value);
}
inline void PBBattlePet::set_iconname(const char* value, size_t size) {
  _set_bit(3);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  iconname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBattlePet::mutable_iconname() {
  _set_bit(3);
  if (iconname_ == &_default_iconname_) {
    iconname_ = new ::std::string;
  }
  return iconname_;
}

// optional uint32 MetierID = 5;
inline bool PBBattlePet::has_metierid() const {
  return _has_bit(4);
}
inline void PBBattlePet::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBBattlePet::metierid() const {
  return metierid_;
}
inline void PBBattlePet::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(4);
  metierid_ = value;
}

// optional uint32 MaxLevel = 6;
inline bool PBBattlePet::has_maxlevel() const {
  return _has_bit(5);
}
inline void PBBattlePet::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBBattlePet::maxlevel() const {
  return maxlevel_;
}
inline void PBBattlePet::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  maxlevel_ = value;
}

// optional uint32 LevelRequire = 7;
inline bool PBBattlePet::has_levelrequire() const {
  return _has_bit(6);
}
inline void PBBattlePet::clear_levelrequire() {
  levelrequire_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBBattlePet::levelrequire() const {
  return levelrequire_;
}
inline void PBBattlePet::set_levelrequire(::google::protobuf::uint32 value) {
  _set_bit(6);
  levelrequire_ = value;
}

// optional uint32 ExceedLevel = 8;
inline bool PBBattlePet::has_exceedlevel() const {
  return _has_bit(7);
}
inline void PBBattlePet::clear_exceedlevel() {
  exceedlevel_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBBattlePet::exceedlevel() const {
  return exceedlevel_;
}
inline void PBBattlePet::set_exceedlevel(::google::protobuf::uint32 value) {
  _set_bit(7);
  exceedlevel_ = value;
}

// optional uint32 PetItemID = 9;
inline bool PBBattlePet::has_petitemid() const {
  return _has_bit(8);
}
inline void PBBattlePet::clear_petitemid() {
  petitemid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBBattlePet::petitemid() const {
  return petitemid_;
}
inline void PBBattlePet::set_petitemid(::google::protobuf::uint32 value) {
  _set_bit(8);
  petitemid_ = value;
}

// optional uint32 RevertCost = 10;
inline bool PBBattlePet::has_revertcost() const {
  return _has_bit(9);
}
inline void PBBattlePet::clear_revertcost() {
  revertcost_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBBattlePet::revertcost() const {
  return revertcost_;
}
inline void PBBattlePet::set_revertcost(::google::protobuf::uint32 value) {
  _set_bit(9);
  revertcost_ = value;
}

// optional uint32 RepletionLimit = 11;
inline bool PBBattlePet::has_repletionlimit() const {
  return _has_bit(10);
}
inline void PBBattlePet::clear_repletionlimit() {
  repletionlimit_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBBattlePet::repletionlimit() const {
  return repletionlimit_;
}
inline void PBBattlePet::set_repletionlimit(::google::protobuf::uint32 value) {
  _set_bit(10);
  repletionlimit_ = value;
}

// optional uint32 MinRepletion1 = 12;
inline bool PBBattlePet::has_minrepletion1() const {
  return _has_bit(11);
}
inline void PBBattlePet::clear_minrepletion1() {
  minrepletion1_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBBattlePet::minrepletion1() const {
  return minrepletion1_;
}
inline void PBBattlePet::set_minrepletion1(::google::protobuf::uint32 value) {
  _set_bit(11);
  minrepletion1_ = value;
}

// optional uint32 MaxRepletion1 = 13;
inline bool PBBattlePet::has_maxrepletion1() const {
  return _has_bit(12);
}
inline void PBBattlePet::clear_maxrepletion1() {
  maxrepletion1_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBBattlePet::maxrepletion1() const {
  return maxrepletion1_;
}
inline void PBBattlePet::set_maxrepletion1(::google::protobuf::uint32 value) {
  _set_bit(12);
  maxrepletion1_ = value;
}

// optional uint32 ExpSpeedRate1 = 14;
inline bool PBBattlePet::has_expspeedrate1() const {
  return _has_bit(13);
}
inline void PBBattlePet::clear_expspeedrate1() {
  expspeedrate1_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBBattlePet::expspeedrate1() const {
  return expspeedrate1_;
}
inline void PBBattlePet::set_expspeedrate1(::google::protobuf::uint32 value) {
  _set_bit(13);
  expspeedrate1_ = value;
}

// optional uint32 HPRate1 = 15;
inline bool PBBattlePet::has_hprate1() const {
  return _has_bit(14);
}
inline void PBBattlePet::clear_hprate1() {
  hprate1_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBBattlePet::hprate1() const {
  return hprate1_;
}
inline void PBBattlePet::set_hprate1(::google::protobuf::uint32 value) {
  _set_bit(14);
  hprate1_ = value;
}

// optional uint32 AttackRate1 = 16;
inline bool PBBattlePet::has_attackrate1() const {
  return _has_bit(15);
}
inline void PBBattlePet::clear_attackrate1() {
  attackrate1_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBBattlePet::attackrate1() const {
  return attackrate1_;
}
inline void PBBattlePet::set_attackrate1(::google::protobuf::uint32 value) {
  _set_bit(15);
  attackrate1_ = value;
}

// optional uint32 MinRepletion2 = 17;
inline bool PBBattlePet::has_minrepletion2() const {
  return _has_bit(16);
}
inline void PBBattlePet::clear_minrepletion2() {
  minrepletion2_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBBattlePet::minrepletion2() const {
  return minrepletion2_;
}
inline void PBBattlePet::set_minrepletion2(::google::protobuf::uint32 value) {
  _set_bit(16);
  minrepletion2_ = value;
}

// optional uint32 MaxRepletion2 = 18;
inline bool PBBattlePet::has_maxrepletion2() const {
  return _has_bit(17);
}
inline void PBBattlePet::clear_maxrepletion2() {
  maxrepletion2_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBBattlePet::maxrepletion2() const {
  return maxrepletion2_;
}
inline void PBBattlePet::set_maxrepletion2(::google::protobuf::uint32 value) {
  _set_bit(17);
  maxrepletion2_ = value;
}

// optional uint32 ExpSpeedRate2 = 19;
inline bool PBBattlePet::has_expspeedrate2() const {
  return _has_bit(18);
}
inline void PBBattlePet::clear_expspeedrate2() {
  expspeedrate2_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBBattlePet::expspeedrate2() const {
  return expspeedrate2_;
}
inline void PBBattlePet::set_expspeedrate2(::google::protobuf::uint32 value) {
  _set_bit(18);
  expspeedrate2_ = value;
}

// optional uint32 HPRate2 = 20;
inline bool PBBattlePet::has_hprate2() const {
  return _has_bit(19);
}
inline void PBBattlePet::clear_hprate2() {
  hprate2_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBBattlePet::hprate2() const {
  return hprate2_;
}
inline void PBBattlePet::set_hprate2(::google::protobuf::uint32 value) {
  _set_bit(19);
  hprate2_ = value;
}

// optional uint32 AttackRate2 = 21;
inline bool PBBattlePet::has_attackrate2() const {
  return _has_bit(20);
}
inline void PBBattlePet::clear_attackrate2() {
  attackrate2_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBBattlePet::attackrate2() const {
  return attackrate2_;
}
inline void PBBattlePet::set_attackrate2(::google::protobuf::uint32 value) {
  _set_bit(20);
  attackrate2_ = value;
}

// optional uint32 MinRepletion3 = 22;
inline bool PBBattlePet::has_minrepletion3() const {
  return _has_bit(21);
}
inline void PBBattlePet::clear_minrepletion3() {
  minrepletion3_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBBattlePet::minrepletion3() const {
  return minrepletion3_;
}
inline void PBBattlePet::set_minrepletion3(::google::protobuf::uint32 value) {
  _set_bit(21);
  minrepletion3_ = value;
}

// optional uint32 MaxRepletion3 = 23;
inline bool PBBattlePet::has_maxrepletion3() const {
  return _has_bit(22);
}
inline void PBBattlePet::clear_maxrepletion3() {
  maxrepletion3_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBBattlePet::maxrepletion3() const {
  return maxrepletion3_;
}
inline void PBBattlePet::set_maxrepletion3(::google::protobuf::uint32 value) {
  _set_bit(22);
  maxrepletion3_ = value;
}

// optional uint32 ExpSpeedRate3 = 24;
inline bool PBBattlePet::has_expspeedrate3() const {
  return _has_bit(23);
}
inline void PBBattlePet::clear_expspeedrate3() {
  expspeedrate3_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBBattlePet::expspeedrate3() const {
  return expspeedrate3_;
}
inline void PBBattlePet::set_expspeedrate3(::google::protobuf::uint32 value) {
  _set_bit(23);
  expspeedrate3_ = value;
}

// optional uint32 HPRate3 = 25;
inline bool PBBattlePet::has_hprate3() const {
  return _has_bit(24);
}
inline void PBBattlePet::clear_hprate3() {
  hprate3_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBBattlePet::hprate3() const {
  return hprate3_;
}
inline void PBBattlePet::set_hprate3(::google::protobuf::uint32 value) {
  _set_bit(24);
  hprate3_ = value;
}

// optional uint32 AttackRate3 = 26;
inline bool PBBattlePet::has_attackrate3() const {
  return _has_bit(25);
}
inline void PBBattlePet::clear_attackrate3() {
  attackrate3_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBBattlePet::attackrate3() const {
  return attackrate3_;
}
inline void PBBattlePet::set_attackrate3(::google::protobuf::uint32 value) {
  _set_bit(25);
  attackrate3_ = value;
}

// optional uint32 MinRepletion4 = 27;
inline bool PBBattlePet::has_minrepletion4() const {
  return _has_bit(26);
}
inline void PBBattlePet::clear_minrepletion4() {
  minrepletion4_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBBattlePet::minrepletion4() const {
  return minrepletion4_;
}
inline void PBBattlePet::set_minrepletion4(::google::protobuf::uint32 value) {
  _set_bit(26);
  minrepletion4_ = value;
}

// optional uint32 MaxRepletion4 = 28;
inline bool PBBattlePet::has_maxrepletion4() const {
  return _has_bit(27);
}
inline void PBBattlePet::clear_maxrepletion4() {
  maxrepletion4_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBBattlePet::maxrepletion4() const {
  return maxrepletion4_;
}
inline void PBBattlePet::set_maxrepletion4(::google::protobuf::uint32 value) {
  _set_bit(27);
  maxrepletion4_ = value;
}

// optional uint32 ExpSpeedRate4 = 29;
inline bool PBBattlePet::has_expspeedrate4() const {
  return _has_bit(28);
}
inline void PBBattlePet::clear_expspeedrate4() {
  expspeedrate4_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBBattlePet::expspeedrate4() const {
  return expspeedrate4_;
}
inline void PBBattlePet::set_expspeedrate4(::google::protobuf::uint32 value) {
  _set_bit(28);
  expspeedrate4_ = value;
}

// optional uint32 HPRate4 = 30;
inline bool PBBattlePet::has_hprate4() const {
  return _has_bit(29);
}
inline void PBBattlePet::clear_hprate4() {
  hprate4_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBBattlePet::hprate4() const {
  return hprate4_;
}
inline void PBBattlePet::set_hprate4(::google::protobuf::uint32 value) {
  _set_bit(29);
  hprate4_ = value;
}

// optional uint32 AttackRate4 = 31;
inline bool PBBattlePet::has_attackrate4() const {
  return _has_bit(30);
}
inline void PBBattlePet::clear_attackrate4() {
  attackrate4_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBBattlePet::attackrate4() const {
  return attackrate4_;
}
inline void PBBattlePet::set_attackrate4(::google::protobuf::uint32 value) {
  _set_bit(30);
  attackrate4_ = value;
}

// optional uint32 MinRepletion5 = 32;
inline bool PBBattlePet::has_minrepletion5() const {
  return _has_bit(31);
}
inline void PBBattlePet::clear_minrepletion5() {
  minrepletion5_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBBattlePet::minrepletion5() const {
  return minrepletion5_;
}
inline void PBBattlePet::set_minrepletion5(::google::protobuf::uint32 value) {
  _set_bit(31);
  minrepletion5_ = value;
}

// optional uint32 MaxRepletion5 = 33;
inline bool PBBattlePet::has_maxrepletion5() const {
  return _has_bit(32);
}
inline void PBBattlePet::clear_maxrepletion5() {
  maxrepletion5_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBBattlePet::maxrepletion5() const {
  return maxrepletion5_;
}
inline void PBBattlePet::set_maxrepletion5(::google::protobuf::uint32 value) {
  _set_bit(32);
  maxrepletion5_ = value;
}

// optional uint32 ExpSpeedRate5 = 34;
inline bool PBBattlePet::has_expspeedrate5() const {
  return _has_bit(33);
}
inline void PBBattlePet::clear_expspeedrate5() {
  expspeedrate5_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 PBBattlePet::expspeedrate5() const {
  return expspeedrate5_;
}
inline void PBBattlePet::set_expspeedrate5(::google::protobuf::uint32 value) {
  _set_bit(33);
  expspeedrate5_ = value;
}

// optional uint32 HPRate5 = 35;
inline bool PBBattlePet::has_hprate5() const {
  return _has_bit(34);
}
inline void PBBattlePet::clear_hprate5() {
  hprate5_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBBattlePet::hprate5() const {
  return hprate5_;
}
inline void PBBattlePet::set_hprate5(::google::protobuf::uint32 value) {
  _set_bit(34);
  hprate5_ = value;
}

// optional uint32 AttackRate5 = 36;
inline bool PBBattlePet::has_attackrate5() const {
  return _has_bit(35);
}
inline void PBBattlePet::clear_attackrate5() {
  attackrate5_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 PBBattlePet::attackrate5() const {
  return attackrate5_;
}
inline void PBBattlePet::set_attackrate5(::google::protobuf::uint32 value) {
  _set_bit(35);
  attackrate5_ = value;
}

// optional uint32 HPValue = 37;
inline bool PBBattlePet::has_hpvalue() const {
  return _has_bit(36);
}
inline void PBBattlePet::clear_hpvalue() {
  hpvalue_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBBattlePet::hpvalue() const {
  return hpvalue_;
}
inline void PBBattlePet::set_hpvalue(::google::protobuf::uint32 value) {
  _set_bit(36);
  hpvalue_ = value;
}

// optional uint32 HPPotential = 38;
inline bool PBBattlePet::has_hppotential() const {
  return _has_bit(37);
}
inline void PBBattlePet::clear_hppotential() {
  hppotential_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBBattlePet::hppotential() const {
  return hppotential_;
}
inline void PBBattlePet::set_hppotential(::google::protobuf::uint32 value) {
  _set_bit(37);
  hppotential_ = value;
}

// optional uint32 MPValue = 39;
inline bool PBBattlePet::has_mpvalue() const {
  return _has_bit(38);
}
inline void PBBattlePet::clear_mpvalue() {
  mpvalue_ = 0u;
  _clear_bit(38);
}
inline ::google::protobuf::uint32 PBBattlePet::mpvalue() const {
  return mpvalue_;
}
inline void PBBattlePet::set_mpvalue(::google::protobuf::uint32 value) {
  _set_bit(38);
  mpvalue_ = value;
}

// optional uint32 MPPotential = 40;
inline bool PBBattlePet::has_mppotential() const {
  return _has_bit(39);
}
inline void PBBattlePet::clear_mppotential() {
  mppotential_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBBattlePet::mppotential() const {
  return mppotential_;
}
inline void PBBattlePet::set_mppotential(::google::protobuf::uint32 value) {
  _set_bit(39);
  mppotential_ = value;
}

// optional uint32 PAttack = 41;
inline bool PBBattlePet::has_pattack() const {
  return _has_bit(40);
}
inline void PBBattlePet::clear_pattack() {
  pattack_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBBattlePet::pattack() const {
  return pattack_;
}
inline void PBBattlePet::set_pattack(::google::protobuf::uint32 value) {
  _set_bit(40);
  pattack_ = value;
}

// optional uint32 PAttackPotential = 42;
inline bool PBBattlePet::has_pattackpotential() const {
  return _has_bit(41);
}
inline void PBBattlePet::clear_pattackpotential() {
  pattackpotential_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 PBBattlePet::pattackpotential() const {
  return pattackpotential_;
}
inline void PBBattlePet::set_pattackpotential(::google::protobuf::uint32 value) {
  _set_bit(41);
  pattackpotential_ = value;
}

// optional uint32 MAttack = 43;
inline bool PBBattlePet::has_mattack() const {
  return _has_bit(42);
}
inline void PBBattlePet::clear_mattack() {
  mattack_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 PBBattlePet::mattack() const {
  return mattack_;
}
inline void PBBattlePet::set_mattack(::google::protobuf::uint32 value) {
  _set_bit(42);
  mattack_ = value;
}

// optional uint32 MAttackPotential = 44;
inline bool PBBattlePet::has_mattackpotential() const {
  return _has_bit(43);
}
inline void PBBattlePet::clear_mattackpotential() {
  mattackpotential_ = 0u;
  _clear_bit(43);
}
inline ::google::protobuf::uint32 PBBattlePet::mattackpotential() const {
  return mattackpotential_;
}
inline void PBBattlePet::set_mattackpotential(::google::protobuf::uint32 value) {
  _set_bit(43);
  mattackpotential_ = value;
}

// optional uint32 PDefence = 45;
inline bool PBBattlePet::has_pdefence() const {
  return _has_bit(44);
}
inline void PBBattlePet::clear_pdefence() {
  pdefence_ = 0u;
  _clear_bit(44);
}
inline ::google::protobuf::uint32 PBBattlePet::pdefence() const {
  return pdefence_;
}
inline void PBBattlePet::set_pdefence(::google::protobuf::uint32 value) {
  _set_bit(44);
  pdefence_ = value;
}

// optional uint32 PDefencePotential = 46;
inline bool PBBattlePet::has_pdefencepotential() const {
  return _has_bit(45);
}
inline void PBBattlePet::clear_pdefencepotential() {
  pdefencepotential_ = 0u;
  _clear_bit(45);
}
inline ::google::protobuf::uint32 PBBattlePet::pdefencepotential() const {
  return pdefencepotential_;
}
inline void PBBattlePet::set_pdefencepotential(::google::protobuf::uint32 value) {
  _set_bit(45);
  pdefencepotential_ = value;
}

// optional uint32 MDefence = 47;
inline bool PBBattlePet::has_mdefence() const {
  return _has_bit(46);
}
inline void PBBattlePet::clear_mdefence() {
  mdefence_ = 0u;
  _clear_bit(46);
}
inline ::google::protobuf::uint32 PBBattlePet::mdefence() const {
  return mdefence_;
}
inline void PBBattlePet::set_mdefence(::google::protobuf::uint32 value) {
  _set_bit(46);
  mdefence_ = value;
}

// optional uint32 MDefencePotential = 48;
inline bool PBBattlePet::has_mdefencepotential() const {
  return _has_bit(47);
}
inline void PBBattlePet::clear_mdefencepotential() {
  mdefencepotential_ = 0u;
  _clear_bit(47);
}
inline ::google::protobuf::uint32 PBBattlePet::mdefencepotential() const {
  return mdefencepotential_;
}
inline void PBBattlePet::set_mdefencepotential(::google::protobuf::uint32 value) {
  _set_bit(47);
  mdefencepotential_ = value;
}

// optional uint32 PResist = 49;
inline bool PBBattlePet::has_presist() const {
  return _has_bit(48);
}
inline void PBBattlePet::clear_presist() {
  presist_ = 0u;
  _clear_bit(48);
}
inline ::google::protobuf::uint32 PBBattlePet::presist() const {
  return presist_;
}
inline void PBBattlePet::set_presist(::google::protobuf::uint32 value) {
  _set_bit(48);
  presist_ = value;
}

// optional uint32 PResistPotential = 50;
inline bool PBBattlePet::has_presistpotential() const {
  return _has_bit(49);
}
inline void PBBattlePet::clear_presistpotential() {
  presistpotential_ = 0u;
  _clear_bit(49);
}
inline ::google::protobuf::uint32 PBBattlePet::presistpotential() const {
  return presistpotential_;
}
inline void PBBattlePet::set_presistpotential(::google::protobuf::uint32 value) {
  _set_bit(49);
  presistpotential_ = value;
}

// optional uint32 MResist = 51;
inline bool PBBattlePet::has_mresist() const {
  return _has_bit(50);
}
inline void PBBattlePet::clear_mresist() {
  mresist_ = 0u;
  _clear_bit(50);
}
inline ::google::protobuf::uint32 PBBattlePet::mresist() const {
  return mresist_;
}
inline void PBBattlePet::set_mresist(::google::protobuf::uint32 value) {
  _set_bit(50);
  mresist_ = value;
}

// optional uint32 MResistPotential = 52;
inline bool PBBattlePet::has_mresistpotential() const {
  return _has_bit(51);
}
inline void PBBattlePet::clear_mresistpotential() {
  mresistpotential_ = 0u;
  _clear_bit(51);
}
inline ::google::protobuf::uint32 PBBattlePet::mresistpotential() const {
  return mresistpotential_;
}
inline void PBBattlePet::set_mresistpotential(::google::protobuf::uint32 value) {
  _set_bit(51);
  mresistpotential_ = value;
}

// optional uint32 AbnResist = 53;
inline bool PBBattlePet::has_abnresist() const {
  return _has_bit(52);
}
inline void PBBattlePet::clear_abnresist() {
  abnresist_ = 0u;
  _clear_bit(52);
}
inline ::google::protobuf::uint32 PBBattlePet::abnresist() const {
  return abnresist_;
}
inline void PBBattlePet::set_abnresist(::google::protobuf::uint32 value) {
  _set_bit(52);
  abnresist_ = value;
}

// optional uint32 AbnResistPotential = 54;
inline bool PBBattlePet::has_abnresistpotential() const {
  return _has_bit(53);
}
inline void PBBattlePet::clear_abnresistpotential() {
  abnresistpotential_ = 0u;
  _clear_bit(53);
}
inline ::google::protobuf::uint32 PBBattlePet::abnresistpotential() const {
  return abnresistpotential_;
}
inline void PBBattlePet::set_abnresistpotential(::google::protobuf::uint32 value) {
  _set_bit(53);
  abnresistpotential_ = value;
}

// optional uint32 FireResist = 55;
inline bool PBBattlePet::has_fireresist() const {
  return _has_bit(54);
}
inline void PBBattlePet::clear_fireresist() {
  fireresist_ = 0u;
  _clear_bit(54);
}
inline ::google::protobuf::uint32 PBBattlePet::fireresist() const {
  return fireresist_;
}
inline void PBBattlePet::set_fireresist(::google::protobuf::uint32 value) {
  _set_bit(54);
  fireresist_ = value;
}

// optional uint32 FireResistPotential = 56;
inline bool PBBattlePet::has_fireresistpotential() const {
  return _has_bit(55);
}
inline void PBBattlePet::clear_fireresistpotential() {
  fireresistpotential_ = 0u;
  _clear_bit(55);
}
inline ::google::protobuf::uint32 PBBattlePet::fireresistpotential() const {
  return fireresistpotential_;
}
inline void PBBattlePet::set_fireresistpotential(::google::protobuf::uint32 value) {
  _set_bit(55);
  fireresistpotential_ = value;
}

// optional uint32 WindResist = 57;
inline bool PBBattlePet::has_windresist() const {
  return _has_bit(56);
}
inline void PBBattlePet::clear_windresist() {
  windresist_ = 0u;
  _clear_bit(56);
}
inline ::google::protobuf::uint32 PBBattlePet::windresist() const {
  return windresist_;
}
inline void PBBattlePet::set_windresist(::google::protobuf::uint32 value) {
  _set_bit(56);
  windresist_ = value;
}

// optional uint32 WindResistPotential = 58;
inline bool PBBattlePet::has_windresistpotential() const {
  return _has_bit(57);
}
inline void PBBattlePet::clear_windresistpotential() {
  windresistpotential_ = 0u;
  _clear_bit(57);
}
inline ::google::protobuf::uint32 PBBattlePet::windresistpotential() const {
  return windresistpotential_;
}
inline void PBBattlePet::set_windresistpotential(::google::protobuf::uint32 value) {
  _set_bit(57);
  windresistpotential_ = value;
}

// optional uint32 LightResist = 59;
inline bool PBBattlePet::has_lightresist() const {
  return _has_bit(58);
}
inline void PBBattlePet::clear_lightresist() {
  lightresist_ = 0u;
  _clear_bit(58);
}
inline ::google::protobuf::uint32 PBBattlePet::lightresist() const {
  return lightresist_;
}
inline void PBBattlePet::set_lightresist(::google::protobuf::uint32 value) {
  _set_bit(58);
  lightresist_ = value;
}

// optional uint32 LightResistPotential = 60;
inline bool PBBattlePet::has_lightresistpotential() const {
  return _has_bit(59);
}
inline void PBBattlePet::clear_lightresistpotential() {
  lightresistpotential_ = 0u;
  _clear_bit(59);
}
inline ::google::protobuf::uint32 PBBattlePet::lightresistpotential() const {
  return lightresistpotential_;
}
inline void PBBattlePet::set_lightresistpotential(::google::protobuf::uint32 value) {
  _set_bit(59);
  lightresistpotential_ = value;
}

// optional uint32 ShadowResist = 61;
inline bool PBBattlePet::has_shadowresist() const {
  return _has_bit(60);
}
inline void PBBattlePet::clear_shadowresist() {
  shadowresist_ = 0u;
  _clear_bit(60);
}
inline ::google::protobuf::uint32 PBBattlePet::shadowresist() const {
  return shadowresist_;
}
inline void PBBattlePet::set_shadowresist(::google::protobuf::uint32 value) {
  _set_bit(60);
  shadowresist_ = value;
}

// optional uint32 ShadowResistPotential = 62;
inline bool PBBattlePet::has_shadowresistpotential() const {
  return _has_bit(61);
}
inline void PBBattlePet::clear_shadowresistpotential() {
  shadowresistpotential_ = 0u;
  _clear_bit(61);
}
inline ::google::protobuf::uint32 PBBattlePet::shadowresistpotential() const {
  return shadowresistpotential_;
}
inline void PBBattlePet::set_shadowresistpotential(::google::protobuf::uint32 value) {
  _set_bit(61);
  shadowresistpotential_ = value;
}

// optional uint32 WaterResist = 63;
inline bool PBBattlePet::has_waterresist() const {
  return _has_bit(62);
}
inline void PBBattlePet::clear_waterresist() {
  waterresist_ = 0u;
  _clear_bit(62);
}
inline ::google::protobuf::uint32 PBBattlePet::waterresist() const {
  return waterresist_;
}
inline void PBBattlePet::set_waterresist(::google::protobuf::uint32 value) {
  _set_bit(62);
  waterresist_ = value;
}

// optional uint32 WaterResistPotential = 64;
inline bool PBBattlePet::has_waterresistpotential() const {
  return _has_bit(63);
}
inline void PBBattlePet::clear_waterresistpotential() {
  waterresistpotential_ = 0u;
  _clear_bit(63);
}
inline ::google::protobuf::uint32 PBBattlePet::waterresistpotential() const {
  return waterresistpotential_;
}
inline void PBBattlePet::set_waterresistpotential(::google::protobuf::uint32 value) {
  _set_bit(63);
  waterresistpotential_ = value;
}

// optional uint32 EarthResist = 65;
inline bool PBBattlePet::has_earthresist() const {
  return _has_bit(64);
}
inline void PBBattlePet::clear_earthresist() {
  earthresist_ = 0u;
  _clear_bit(64);
}
inline ::google::protobuf::uint32 PBBattlePet::earthresist() const {
  return earthresist_;
}
inline void PBBattlePet::set_earthresist(::google::protobuf::uint32 value) {
  _set_bit(64);
  earthresist_ = value;
}

// optional uint32 EarthResistPotential = 66;
inline bool PBBattlePet::has_earthresistpotential() const {
  return _has_bit(65);
}
inline void PBBattlePet::clear_earthresistpotential() {
  earthresistpotential_ = 0u;
  _clear_bit(65);
}
inline ::google::protobuf::uint32 PBBattlePet::earthresistpotential() const {
  return earthresistpotential_;
}
inline void PBBattlePet::set_earthresistpotential(::google::protobuf::uint32 value) {
  _set_bit(65);
  earthresistpotential_ = value;
}

// optional uint32 FoodCombo = 67;
inline bool PBBattlePet::has_foodcombo() const {
  return _has_bit(66);
}
inline void PBBattlePet::clear_foodcombo() {
  foodcombo_ = 0u;
  _clear_bit(66);
}
inline ::google::protobuf::uint32 PBBattlePet::foodcombo() const {
  return foodcombo_;
}
inline void PBBattlePet::set_foodcombo(::google::protobuf::uint32 value) {
  _set_bit(66);
  foodcombo_ = value;
}

// -------------------------------------------------------------------

// PBMineOutput

// optional uint32 StuffID = 1;
inline bool PBMineOutput::has_stuffid() const {
  return _has_bit(0);
}
inline void PBMineOutput::clear_stuffid() {
  stuffid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMineOutput::stuffid() const {
  return stuffid_;
}
inline void PBMineOutput::set_stuffid(::google::protobuf::uint32 value) {
  _set_bit(0);
  stuffid_ = value;
}

// optional uint32 Percent = 2;
inline bool PBMineOutput::has_percent() const {
  return _has_bit(1);
}
inline void PBMineOutput::clear_percent() {
  percent_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMineOutput::percent() const {
  return percent_;
}
inline void PBMineOutput::set_percent(::google::protobuf::uint32 value) {
  _set_bit(1);
  percent_ = value;
}

// -------------------------------------------------------------------

// PBMineOgre

// optional uint32 NpcID = 1;
inline bool PBMineOgre::has_npcid() const {
  return _has_bit(0);
}
inline void PBMineOgre::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMineOgre::npcid() const {
  return npcid_;
}
inline void PBMineOgre::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(0);
  npcid_ = value;
}

// optional uint32 Number = 2;
inline bool PBMineOgre::has_number() const {
  return _has_bit(1);
}
inline void PBMineOgre::clear_number() {
  number_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMineOgre::number() const {
  return number_;
}
inline void PBMineOgre::set_number(::google::protobuf::uint32 value) {
  _set_bit(1);
  number_ = value;
}

// optional uint32 Percent = 3;
inline bool PBMineOgre::has_percent() const {
  return _has_bit(2);
}
inline void PBMineOgre::clear_percent() {
  percent_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMineOgre::percent() const {
  return percent_;
}
inline void PBMineOgre::set_percent(::google::protobuf::uint32 value) {
  _set_bit(2);
  percent_ = value;
}

// -------------------------------------------------------------------

// PBMine

// optional uint32 TempID = 1;
inline bool PBMine::has_tempid() const {
  return _has_bit(0);
}
inline void PBMine::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMine::tempid() const {
  return tempid_;
}
inline void PBMine::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBMine::has_name() const {
  return _has_bit(1);
}
inline void PBMine::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBMine::name() const {
  return *name_;
}
inline void PBMine::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBMine::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBMine::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMine::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 Level = 3;
inline bool PBMine::has_level() const {
  return _has_bit(2);
}
inline void PBMine::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMine::level() const {
  return level_;
}
inline void PBMine::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// optional uint32 LevelRequire = 4;
inline bool PBMine::has_levelrequire() const {
  return _has_bit(3);
}
inline void PBMine::clear_levelrequire() {
  levelrequire_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMine::levelrequire() const {
  return levelrequire_;
}
inline void PBMine::set_levelrequire(::google::protobuf::uint32 value) {
  _set_bit(3);
  levelrequire_ = value;
}

// optional uint32 ToolID = 5;
inline bool PBMine::has_toolid() const {
  return _has_bit(4);
}
inline void PBMine::clear_toolid() {
  toolid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBMine::toolid() const {
  return toolid_;
}
inline void PBMine::set_toolid(::google::protobuf::uint32 value) {
  _set_bit(4);
  toolid_ = value;
}

// optional uint32 DecRate = 6;
inline bool PBMine::has_decrate() const {
  return _has_bit(5);
}
inline void PBMine::clear_decrate() {
  decrate_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBMine::decrate() const {
  return decrate_;
}
inline void PBMine::set_decrate(::google::protobuf::uint32 value) {
  _set_bit(5);
  decrate_ = value;
}

// optional uint32 MineTimeLow = 7;
inline bool PBMine::has_minetimelow() const {
  return _has_bit(6);
}
inline void PBMine::clear_minetimelow() {
  minetimelow_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBMine::minetimelow() const {
  return minetimelow_;
}
inline void PBMine::set_minetimelow(::google::protobuf::uint32 value) {
  _set_bit(6);
  minetimelow_ = value;
}

// optional uint32 MineTimeHigh = 8;
inline bool PBMine::has_minetimehigh() const {
  return _has_bit(7);
}
inline void PBMine::clear_minetimehigh() {
  minetimehigh_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBMine::minetimehigh() const {
  return minetimehigh_;
}
inline void PBMine::set_minetimehigh(::google::protobuf::uint32 value) {
  _set_bit(7);
  minetimehigh_ = value;
}

// optional string Model = 9;
inline bool PBMine::has_model() const {
  return _has_bit(8);
}
inline void PBMine::clear_model() {
  if (model_ != &_default_model_) {
    model_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& PBMine::model() const {
  return *model_;
}
inline void PBMine::set_model(const ::std::string& value) {
  _set_bit(8);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void PBMine::set_model(const char* value) {
  _set_bit(8);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void PBMine::set_model(const char* value, size_t size) {
  _set_bit(8);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMine::mutable_model() {
  _set_bit(8);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  return model_;
}

// repeated .PBMineOutput Output = 10;
inline int PBMine::output_size() const {
  return output_.size();
}
inline void PBMine::clear_output() {
  output_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMineOutput >&
PBMine::output() const {
  return output_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMineOutput >*
PBMine::mutable_output() {
  return &output_;
}
inline const ::PBMineOutput& PBMine::output(int index) const {
  return output_.Get(index);
}
inline ::PBMineOutput* PBMine::mutable_output(int index) {
  return output_.Mutable(index);
}
inline ::PBMineOutput* PBMine::add_output() {
  return output_.Add();
}

// repeated .PBMineOgre MineOgre = 11;
inline int PBMine::mineogre_size() const {
  return mineogre_.size();
}
inline void PBMine::clear_mineogre() {
  mineogre_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMineOgre >&
PBMine::mineogre() const {
  return mineogre_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMineOgre >*
PBMine::mutable_mineogre() {
  return &mineogre_;
}
inline const ::PBMineOgre& PBMine::mineogre(int index) const {
  return mineogre_.Get(index);
}
inline ::PBMineOgre* PBMine::mutable_mineogre(int index) {
  return mineogre_.Mutable(index);
}
inline ::PBMineOgre* PBMine::add_mineogre() {
  return mineogre_.Add();
}

// -------------------------------------------------------------------

// PBSkillTreeNode

// optional uint32 SkillID = 1;
inline bool PBSkillTreeNode::has_skillid() const {
  return _has_bit(0);
}
inline void PBSkillTreeNode::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSkillTreeNode::skillid() const {
  return skillid_;
}
inline void PBSkillTreeNode::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional uint32 MaxLevel = 2;
inline bool PBSkillTreeNode::has_maxlevel() const {
  return _has_bit(1);
}
inline void PBSkillTreeNode::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSkillTreeNode::maxlevel() const {
  return maxlevel_;
}
inline void PBSkillTreeNode::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  maxlevel_ = value;
}

// optional uint32 NeedSkillID = 3;
inline bool PBSkillTreeNode::has_needskillid() const {
  return _has_bit(2);
}
inline void PBSkillTreeNode::clear_needskillid() {
  needskillid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSkillTreeNode::needskillid() const {
  return needskillid_;
}
inline void PBSkillTreeNode::set_needskillid(::google::protobuf::uint32 value) {
  _set_bit(2);
  needskillid_ = value;
}

// optional uint32 NeedSkillPoint = 4;
inline bool PBSkillTreeNode::has_needskillpoint() const {
  return _has_bit(3);
}
inline void PBSkillTreeNode::clear_needskillpoint() {
  needskillpoint_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSkillTreeNode::needskillpoint() const {
  return needskillpoint_;
}
inline void PBSkillTreeNode::set_needskillpoint(::google::protobuf::uint32 value) {
  _set_bit(3);
  needskillpoint_ = value;
}

// optional uint32 NeedGenerID = 5;
inline bool PBSkillTreeNode::has_needgenerid() const {
  return _has_bit(4);
}
inline void PBSkillTreeNode::clear_needgenerid() {
  needgenerid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBSkillTreeNode::needgenerid() const {
  return needgenerid_;
}
inline void PBSkillTreeNode::set_needgenerid(::google::protobuf::uint32 value) {
  _set_bit(4);
  needgenerid_ = value;
}

// optional uint32 NeedGenerPoint = 6;
inline bool PBSkillTreeNode::has_needgenerpoint() const {
  return _has_bit(5);
}
inline void PBSkillTreeNode::clear_needgenerpoint() {
  needgenerpoint_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBSkillTreeNode::needgenerpoint() const {
  return needgenerpoint_;
}
inline void PBSkillTreeNode::set_needgenerpoint(::google::protobuf::uint32 value) {
  _set_bit(5);
  needgenerpoint_ = value;
}

// optional uint32 Level = 7;
inline bool PBSkillTreeNode::has_level() const {
  return _has_bit(6);
}
inline void PBSkillTreeNode::clear_level() {
  level_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBSkillTreeNode::level() const {
  return level_;
}
inline void PBSkillTreeNode::set_level(::google::protobuf::uint32 value) {
  _set_bit(6);
  level_ = value;
}

// optional uint32 NeedBook = 8;
inline bool PBSkillTreeNode::has_needbook() const {
  return _has_bit(7);
}
inline void PBSkillTreeNode::clear_needbook() {
  needbook_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBSkillTreeNode::needbook() const {
  return needbook_;
}
inline void PBSkillTreeNode::set_needbook(::google::protobuf::uint32 value) {
  _set_bit(7);
  needbook_ = value;
}

// -------------------------------------------------------------------

// PBSkillTree

// optional uint32 TempID = 1;
inline bool PBSkillTree::has_tempid() const {
  return _has_bit(0);
}
inline void PBSkillTree::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSkillTree::tempid() const {
  return tempid_;
}
inline void PBSkillTree::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string GenerName = 2;
inline bool PBSkillTree::has_genername() const {
  return _has_bit(1);
}
inline void PBSkillTree::clear_genername() {
  if (genername_ != &_default_genername_) {
    genername_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBSkillTree::genername() const {
  return *genername_;
}
inline void PBSkillTree::set_genername(const ::std::string& value) {
  _set_bit(1);
  if (genername_ == &_default_genername_) {
    genername_ = new ::std::string;
  }
  genername_->assign(value);
}
inline void PBSkillTree::set_genername(const char* value) {
  _set_bit(1);
  if (genername_ == &_default_genername_) {
    genername_ = new ::std::string;
  }
  genername_->assign(value);
}
inline void PBSkillTree::set_genername(const char* value, size_t size) {
  _set_bit(1);
  if (genername_ == &_default_genername_) {
    genername_ = new ::std::string;
  }
  genername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSkillTree::mutable_genername() {
  _set_bit(1);
  if (genername_ == &_default_genername_) {
    genername_ = new ::std::string;
  }
  return genername_;
}

// optional uint32 GenerID = 3;
inline bool PBSkillTree::has_generid() const {
  return _has_bit(2);
}
inline void PBSkillTree::clear_generid() {
  generid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSkillTree::generid() const {
  return generid_;
}
inline void PBSkillTree::set_generid(::google::protobuf::uint32 value) {
  _set_bit(2);
  generid_ = value;
}

// repeated .PBSkillTreeNode SkillNode = 4;
inline int PBSkillTree::skillnode_size() const {
  return skillnode_.size();
}
inline void PBSkillTree::clear_skillnode() {
  skillnode_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode >&
PBSkillTree::skillnode() const {
  return skillnode_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkillTreeNode >*
PBSkillTree::mutable_skillnode() {
  return &skillnode_;
}
inline const ::PBSkillTreeNode& PBSkillTree::skillnode(int index) const {
  return skillnode_.Get(index);
}
inline ::PBSkillTreeNode* PBSkillTree::mutable_skillnode(int index) {
  return skillnode_.Mutable(index);
}
inline ::PBSkillTreeNode* PBSkillTree::add_skillnode() {
  return skillnode_.Add();
}

// -------------------------------------------------------------------

// PBCost

// optional uint32 CostType = 1;
inline bool PBCost::has_costtype() const {
  return _has_bit(0);
}
inline void PBCost::clear_costtype() {
  costtype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCost::costtype() const {
  return costtype_;
}
inline void PBCost::set_costtype(::google::protobuf::uint32 value) {
  _set_bit(0);
  costtype_ = value;
}

// repeated uint32 CostParam = 2;
inline int PBCost::costparam_size() const {
  return costparam_.size();
}
inline void PBCost::clear_costparam() {
  costparam_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCost::costparam() const {
  return costparam_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCost::mutable_costparam() {
  return &costparam_;
}
inline ::google::protobuf::uint32 PBCost::costparam(int index) const {
  return costparam_.Get(index);
}
inline void PBCost::set_costparam(int index, ::google::protobuf::uint32 value) {
  costparam_.Set(index, value);
}
inline void PBCost::add_costparam(::google::protobuf::uint32 value) {
  costparam_.Add(value);
}

// -------------------------------------------------------------------

// PBUseCondition

// optional uint32 ConditionType = 1;
inline bool PBUseCondition::has_conditiontype() const {
  return _has_bit(0);
}
inline void PBUseCondition::clear_conditiontype() {
  conditiontype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBUseCondition::conditiontype() const {
  return conditiontype_;
}
inline void PBUseCondition::set_conditiontype(::google::protobuf::uint32 value) {
  _set_bit(0);
  conditiontype_ = value;
}

// optional uint32 Param = 2;
inline bool PBUseCondition::has_param() const {
  return _has_bit(1);
}
inline void PBUseCondition::clear_param() {
  param_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBUseCondition::param() const {
  return param_;
}
inline void PBUseCondition::set_param(::google::protobuf::uint32 value) {
  _set_bit(1);
  param_ = value;
}

// -------------------------------------------------------------------

// PBSkill

// optional uint32 TempID = 1;
inline bool PBSkill::has_tempid() const {
  return _has_bit(0);
}
inline void PBSkill::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSkill::tempid() const {
  return tempid_;
}
inline void PBSkill::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBSkill::has_name() const {
  return _has_bit(1);
}
inline void PBSkill::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBSkill::name() const {
  return *name_;
}
inline void PBSkill::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSkill::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSkill::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSkill::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 SkillID = 3;
inline bool PBSkill::has_skillid() const {
  return _has_bit(2);
}
inline void PBSkill::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSkill::skillid() const {
  return skillid_;
}
inline void PBSkill::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(2);
  skillid_ = value;
}

// optional uint32 RequireWeapon = 4;
inline bool PBSkill::has_requireweapon() const {
  return _has_bit(3);
}
inline void PBSkill::clear_requireweapon() {
  requireweapon_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSkill::requireweapon() const {
  return requireweapon_;
}
inline void PBSkill::set_requireweapon(::google::protobuf::uint32 value) {
  _set_bit(3);
  requireweapon_ = value;
}

// optional uint32 MetierID = 5;
inline bool PBSkill::has_metierid() const {
  return _has_bit(4);
}
inline void PBSkill::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBSkill::metierid() const {
  return metierid_;
}
inline void PBSkill::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(4);
  metierid_ = value;
}

// optional uint32 GenerID = 6;
inline bool PBSkill::has_generid() const {
  return _has_bit(5);
}
inline void PBSkill::clear_generid() {
  generid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBSkill::generid() const {
  return generid_;
}
inline void PBSkill::set_generid(::google::protobuf::uint32 value) {
  _set_bit(5);
  generid_ = value;
}

// optional uint32 SkillLevel = 7;
inline bool PBSkill::has_skilllevel() const {
  return _has_bit(6);
}
inline void PBSkill::clear_skilllevel() {
  skilllevel_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBSkill::skilllevel() const {
  return skilllevel_;
}
inline void PBSkill::set_skilllevel(::google::protobuf::uint32 value) {
  _set_bit(6);
  skilllevel_ = value;
}

// optional string SkillIcon = 8;
inline bool PBSkill::has_skillicon() const {
  return _has_bit(7);
}
inline void PBSkill::clear_skillicon() {
  if (skillicon_ != &_default_skillicon_) {
    skillicon_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& PBSkill::skillicon() const {
  return *skillicon_;
}
inline void PBSkill::set_skillicon(const ::std::string& value) {
  _set_bit(7);
  if (skillicon_ == &_default_skillicon_) {
    skillicon_ = new ::std::string;
  }
  skillicon_->assign(value);
}
inline void PBSkill::set_skillicon(const char* value) {
  _set_bit(7);
  if (skillicon_ == &_default_skillicon_) {
    skillicon_ = new ::std::string;
  }
  skillicon_->assign(value);
}
inline void PBSkill::set_skillicon(const char* value, size_t size) {
  _set_bit(7);
  if (skillicon_ == &_default_skillicon_) {
    skillicon_ = new ::std::string;
  }
  skillicon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSkill::mutable_skillicon() {
  _set_bit(7);
  if (skillicon_ == &_default_skillicon_) {
    skillicon_ = new ::std::string;
  }
  return skillicon_;
}

// optional string SkillDescribe = 9;
inline bool PBSkill::has_skilldescribe() const {
  return _has_bit(8);
}
inline void PBSkill::clear_skilldescribe() {
  if (skilldescribe_ != &_default_skilldescribe_) {
    skilldescribe_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& PBSkill::skilldescribe() const {
  return *skilldescribe_;
}
inline void PBSkill::set_skilldescribe(const ::std::string& value) {
  _set_bit(8);
  if (skilldescribe_ == &_default_skilldescribe_) {
    skilldescribe_ = new ::std::string;
  }
  skilldescribe_->assign(value);
}
inline void PBSkill::set_skilldescribe(const char* value) {
  _set_bit(8);
  if (skilldescribe_ == &_default_skilldescribe_) {
    skilldescribe_ = new ::std::string;
  }
  skilldescribe_->assign(value);
}
inline void PBSkill::set_skilldescribe(const char* value, size_t size) {
  _set_bit(8);
  if (skilldescribe_ == &_default_skilldescribe_) {
    skilldescribe_ = new ::std::string;
  }
  skilldescribe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSkill::mutable_skilldescribe() {
  _set_bit(8);
  if (skilldescribe_ == &_default_skilldescribe_) {
    skilldescribe_ = new ::std::string;
  }
  return skilldescribe_;
}

// optional uint32 FireType = 10;
inline bool PBSkill::has_firetype() const {
  return _has_bit(9);
}
inline void PBSkill::clear_firetype() {
  firetype_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBSkill::firetype() const {
  return firetype_;
}
inline void PBSkill::set_firetype(::google::protobuf::uint32 value) {
  _set_bit(9);
  firetype_ = value;
}

// optional uint32 SkillType = 11;
inline bool PBSkill::has_skilltype() const {
  return _has_bit(10);
}
inline void PBSkill::clear_skilltype() {
  skilltype_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBSkill::skilltype() const {
  return skilltype_;
}
inline void PBSkill::set_skilltype(::google::protobuf::uint32 value) {
  _set_bit(10);
  skilltype_ = value;
}

// optional uint32 TimeType = 12;
inline bool PBSkill::has_timetype() const {
  return _has_bit(11);
}
inline void PBSkill::clear_timetype() {
  timetype_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBSkill::timetype() const {
  return timetype_;
}
inline void PBSkill::set_timetype(::google::protobuf::uint32 value) {
  _set_bit(11);
  timetype_ = value;
}

// optional uint32 AniTime = 13;
inline bool PBSkill::has_anitime() const {
  return _has_bit(12);
}
inline void PBSkill::clear_anitime() {
  anitime_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBSkill::anitime() const {
  return anitime_;
}
inline void PBSkill::set_anitime(::google::protobuf::uint32 value) {
  _set_bit(12);
  anitime_ = value;
}

// optional uint32 FireTime = 14;
inline bool PBSkill::has_firetime() const {
  return _has_bit(13);
}
inline void PBSkill::clear_firetime() {
  firetime_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBSkill::firetime() const {
  return firetime_;
}
inline void PBSkill::set_firetime(::google::protobuf::uint32 value) {
  _set_bit(13);
  firetime_ = value;
}

// optional uint32 CDTime = 15;
inline bool PBSkill::has_cdtime() const {
  return _has_bit(14);
}
inline void PBSkill::clear_cdtime() {
  cdtime_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBSkill::cdtime() const {
  return cdtime_;
}
inline void PBSkill::set_cdtime(::google::protobuf::uint32 value) {
  _set_bit(14);
  cdtime_ = value;
}

// repeated .PBCost Cost = 16;
inline int PBSkill::cost_size() const {
  return cost_.size();
}
inline void PBSkill::clear_cost() {
  cost_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCost >&
PBSkill::cost() const {
  return cost_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCost >*
PBSkill::mutable_cost() {
  return &cost_;
}
inline const ::PBCost& PBSkill::cost(int index) const {
  return cost_.Get(index);
}
inline ::PBCost* PBSkill::mutable_cost(int index) {
  return cost_.Mutable(index);
}
inline ::PBCost* PBSkill::add_cost() {
  return cost_.Add();
}

// optional uint32 NeedDelay = 17;
inline bool PBSkill::has_needdelay() const {
  return _has_bit(16);
}
inline void PBSkill::clear_needdelay() {
  needdelay_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBSkill::needdelay() const {
  return needdelay_;
}
inline void PBSkill::set_needdelay(::google::protobuf::uint32 value) {
  _set_bit(16);
  needdelay_ = value;
}

// optional uint32 SkillFuncID1 = 18;
inline bool PBSkill::has_skillfuncid1() const {
  return _has_bit(17);
}
inline void PBSkill::clear_skillfuncid1() {
  skillfuncid1_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBSkill::skillfuncid1() const {
  return skillfuncid1_;
}
inline void PBSkill::set_skillfuncid1(::google::protobuf::uint32 value) {
  _set_bit(17);
  skillfuncid1_ = value;
}

// repeated uint32 Parameter1 = 19;
inline int PBSkill::parameter1_size() const {
  return parameter1_.size();
}
inline void PBSkill::clear_parameter1() {
  parameter1_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSkill::parameter1() const {
  return parameter1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSkill::mutable_parameter1() {
  return &parameter1_;
}
inline ::google::protobuf::uint32 PBSkill::parameter1(int index) const {
  return parameter1_.Get(index);
}
inline void PBSkill::set_parameter1(int index, ::google::protobuf::uint32 value) {
  parameter1_.Set(index, value);
}
inline void PBSkill::add_parameter1(::google::protobuf::uint32 value) {
  parameter1_.Add(value);
}

// optional uint32 SkillFuncID2 = 20;
inline bool PBSkill::has_skillfuncid2() const {
  return _has_bit(19);
}
inline void PBSkill::clear_skillfuncid2() {
  skillfuncid2_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBSkill::skillfuncid2() const {
  return skillfuncid2_;
}
inline void PBSkill::set_skillfuncid2(::google::protobuf::uint32 value) {
  _set_bit(19);
  skillfuncid2_ = value;
}

// repeated uint32 Parameter2 = 21;
inline int PBSkill::parameter2_size() const {
  return parameter2_.size();
}
inline void PBSkill::clear_parameter2() {
  parameter2_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSkill::parameter2() const {
  return parameter2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSkill::mutable_parameter2() {
  return &parameter2_;
}
inline ::google::protobuf::uint32 PBSkill::parameter2(int index) const {
  return parameter2_.Get(index);
}
inline void PBSkill::set_parameter2(int index, ::google::protobuf::uint32 value) {
  parameter2_.Set(index, value);
}
inline void PBSkill::add_parameter2(::google::protobuf::uint32 value) {
  parameter2_.Add(value);
}

// optional uint32 SkillFuncID3 = 22;
inline bool PBSkill::has_skillfuncid3() const {
  return _has_bit(21);
}
inline void PBSkill::clear_skillfuncid3() {
  skillfuncid3_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBSkill::skillfuncid3() const {
  return skillfuncid3_;
}
inline void PBSkill::set_skillfuncid3(::google::protobuf::uint32 value) {
  _set_bit(21);
  skillfuncid3_ = value;
}

// repeated uint32 Parameter3 = 23;
inline int PBSkill::parameter3_size() const {
  return parameter3_.size();
}
inline void PBSkill::clear_parameter3() {
  parameter3_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSkill::parameter3() const {
  return parameter3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSkill::mutable_parameter3() {
  return &parameter3_;
}
inline ::google::protobuf::uint32 PBSkill::parameter3(int index) const {
  return parameter3_.Get(index);
}
inline void PBSkill::set_parameter3(int index, ::google::protobuf::uint32 value) {
  parameter3_.Set(index, value);
}
inline void PBSkill::add_parameter3(::google::protobuf::uint32 value) {
  parameter3_.Add(value);
}

// optional uint32 SkillFuncID4 = 24;
inline bool PBSkill::has_skillfuncid4() const {
  return _has_bit(23);
}
inline void PBSkill::clear_skillfuncid4() {
  skillfuncid4_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBSkill::skillfuncid4() const {
  return skillfuncid4_;
}
inline void PBSkill::set_skillfuncid4(::google::protobuf::uint32 value) {
  _set_bit(23);
  skillfuncid4_ = value;
}

// repeated uint32 Parameter4 = 25;
inline int PBSkill::parameter4_size() const {
  return parameter4_.size();
}
inline void PBSkill::clear_parameter4() {
  parameter4_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSkill::parameter4() const {
  return parameter4_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSkill::mutable_parameter4() {
  return &parameter4_;
}
inline ::google::protobuf::uint32 PBSkill::parameter4(int index) const {
  return parameter4_.Get(index);
}
inline void PBSkill::set_parameter4(int index, ::google::protobuf::uint32 value) {
  parameter4_.Set(index, value);
}
inline void PBSkill::add_parameter4(::google::protobuf::uint32 value) {
  parameter4_.Add(value);
}

// optional string SkillAction = 26;
inline bool PBSkill::has_skillaction() const {
  return _has_bit(25);
}
inline void PBSkill::clear_skillaction() {
  if (skillaction_ != &_default_skillaction_) {
    skillaction_->clear();
  }
  _clear_bit(25);
}
inline const ::std::string& PBSkill::skillaction() const {
  return *skillaction_;
}
inline void PBSkill::set_skillaction(const ::std::string& value) {
  _set_bit(25);
  if (skillaction_ == &_default_skillaction_) {
    skillaction_ = new ::std::string;
  }
  skillaction_->assign(value);
}
inline void PBSkill::set_skillaction(const char* value) {
  _set_bit(25);
  if (skillaction_ == &_default_skillaction_) {
    skillaction_ = new ::std::string;
  }
  skillaction_->assign(value);
}
inline void PBSkill::set_skillaction(const char* value, size_t size) {
  _set_bit(25);
  if (skillaction_ == &_default_skillaction_) {
    skillaction_ = new ::std::string;
  }
  skillaction_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSkill::mutable_skillaction() {
  _set_bit(25);
  if (skillaction_ == &_default_skillaction_) {
    skillaction_ = new ::std::string;
  }
  return skillaction_;
}

// optional uint32 AutoRepeat = 27;
inline bool PBSkill::has_autorepeat() const {
  return _has_bit(26);
}
inline void PBSkill::clear_autorepeat() {
  autorepeat_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBSkill::autorepeat() const {
  return autorepeat_;
}
inline void PBSkill::set_autorepeat(::google::protobuf::uint32 value) {
  _set_bit(26);
  autorepeat_ = value;
}

// optional uint32 AutoNormalAttack = 28;
inline bool PBSkill::has_autonormalattack() const {
  return _has_bit(27);
}
inline void PBSkill::clear_autonormalattack() {
  autonormalattack_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBSkill::autonormalattack() const {
  return autonormalattack_;
}
inline void PBSkill::set_autonormalattack(::google::protobuf::uint32 value) {
  _set_bit(27);
  autonormalattack_ = value;
}

// optional uint32 AutoCoolingSkill = 29;
inline bool PBSkill::has_autocoolingskill() const {
  return _has_bit(28);
}
inline void PBSkill::clear_autocoolingskill() {
  autocoolingskill_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBSkill::autocoolingskill() const {
  return autocoolingskill_;
}
inline void PBSkill::set_autocoolingskill(::google::protobuf::uint32 value) {
  _set_bit(28);
  autocoolingskill_ = value;
}

// repeated .PBUseCondition UseCondition = 30;
inline int PBSkill::usecondition_size() const {
  return usecondition_.size();
}
inline void PBSkill::clear_usecondition() {
  usecondition_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBUseCondition >&
PBSkill::usecondition() const {
  return usecondition_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBUseCondition >*
PBSkill::mutable_usecondition() {
  return &usecondition_;
}
inline const ::PBUseCondition& PBSkill::usecondition(int index) const {
  return usecondition_.Get(index);
}
inline ::PBUseCondition* PBSkill::mutable_usecondition(int index) {
  return usecondition_.Mutable(index);
}
inline ::PBUseCondition* PBSkill::add_usecondition() {
  return usecondition_.Add();
}

// optional uint32 StudyGold = 31;
inline bool PBSkill::has_studygold() const {
  return _has_bit(30);
}
inline void PBSkill::clear_studygold() {
  studygold_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBSkill::studygold() const {
  return studygold_;
}
inline void PBSkill::set_studygold(::google::protobuf::uint32 value) {
  _set_bit(30);
  studygold_ = value;
}

// optional uint32 StudyBindMoney = 32;
inline bool PBSkill::has_studybindmoney() const {
  return _has_bit(31);
}
inline void PBSkill::clear_studybindmoney() {
  studybindmoney_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBSkill::studybindmoney() const {
  return studybindmoney_;
}
inline void PBSkill::set_studybindmoney(::google::protobuf::uint32 value) {
  _set_bit(31);
  studybindmoney_ = value;
}

// optional uint32 SkillListShowType = 33;
inline bool PBSkill::has_skilllistshowtype() const {
  return _has_bit(32);
}
inline void PBSkill::clear_skilllistshowtype() {
  skilllistshowtype_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBSkill::skilllistshowtype() const {
  return skilllistshowtype_;
}
inline void PBSkill::set_skilllistshowtype(::google::protobuf::uint32 value) {
  _set_bit(32);
  skilllistshowtype_ = value;
}

// optional uint32 SkillTempType = 34;
inline bool PBSkill::has_skilltemptype() const {
  return _has_bit(33);
}
inline void PBSkill::clear_skilltemptype() {
  skilltemptype_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 PBSkill::skilltemptype() const {
  return skilltemptype_;
}
inline void PBSkill::set_skilltemptype(::google::protobuf::uint32 value) {
  _set_bit(33);
  skilltemptype_ = value;
}

// optional uint32 StudySkillLevel = 35;
inline bool PBSkill::has_studyskilllevel() const {
  return _has_bit(34);
}
inline void PBSkill::clear_studyskilllevel() {
  studyskilllevel_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBSkill::studyskilllevel() const {
  return studyskilllevel_;
}
inline void PBSkill::set_studyskilllevel(::google::protobuf::uint32 value) {
  _set_bit(34);
  studyskilllevel_ = value;
}

// optional uint32 InsertAutoState = 36;
inline bool PBSkill::has_insertautostate() const {
  return _has_bit(35);
}
inline void PBSkill::clear_insertautostate() {
  insertautostate_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 PBSkill::insertautostate() const {
  return insertautostate_;
}
inline void PBSkill::set_insertautostate(::google::protobuf::uint32 value) {
  _set_bit(35);
  insertautostate_ = value;
}

// optional uint32 BreakAutoState = 37;
inline bool PBSkill::has_breakautostate() const {
  return _has_bit(36);
}
inline void PBSkill::clear_breakautostate() {
  breakautostate_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBSkill::breakautostate() const {
  return breakautostate_;
}
inline void PBSkill::set_breakautostate(::google::protobuf::uint32 value) {
  _set_bit(36);
  breakautostate_ = value;
}

// optional uint32 NeedTarget = 38;
inline bool PBSkill::has_needtarget() const {
  return _has_bit(37);
}
inline void PBSkill::clear_needtarget() {
  needtarget_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBSkill::needtarget() const {
  return needtarget_;
}
inline void PBSkill::set_needtarget(::google::protobuf::uint32 value) {
  _set_bit(37);
  needtarget_ = value;
}

// optional uint32 NeedPet = 39;
inline bool PBSkill::has_needpet() const {
  return _has_bit(38);
}
inline void PBSkill::clear_needpet() {
  needpet_ = 0u;
  _clear_bit(38);
}
inline ::google::protobuf::uint32 PBSkill::needpet() const {
  return needpet_;
}
inline void PBSkill::set_needpet(::google::protobuf::uint32 value) {
  _set_bit(38);
  needpet_ = value;
}

// optional uint32 ActionCamp = 40;
inline bool PBSkill::has_actioncamp() const {
  return _has_bit(39);
}
inline void PBSkill::clear_actioncamp() {
  actioncamp_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBSkill::actioncamp() const {
  return actioncamp_;
}
inline void PBSkill::set_actioncamp(::google::protobuf::uint32 value) {
  _set_bit(39);
  actioncamp_ = value;
}

// optional uint32 DamageType = 41;
inline bool PBSkill::has_damagetype() const {
  return _has_bit(40);
}
inline void PBSkill::clear_damagetype() {
  damagetype_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBSkill::damagetype() const {
  return damagetype_;
}
inline void PBSkill::set_damagetype(::google::protobuf::uint32 value) {
  _set_bit(40);
  damagetype_ = value;
}

// optional uint32 BindStudyGold = 42;
inline bool PBSkill::has_bindstudygold() const {
  return _has_bit(41);
}
inline void PBSkill::clear_bindstudygold() {
  bindstudygold_ = 0u;
  _clear_bit(41);
}
inline ::google::protobuf::uint32 PBSkill::bindstudygold() const {
  return bindstudygold_;
}
inline void PBSkill::set_bindstudygold(::google::protobuf::uint32 value) {
  _set_bit(41);
  bindstudygold_ = value;
}

// optional uint32 AttackFix = 43;
inline bool PBSkill::has_attackfix() const {
  return _has_bit(42);
}
inline void PBSkill::clear_attackfix() {
  attackfix_ = 0u;
  _clear_bit(42);
}
inline ::google::protobuf::uint32 PBSkill::attackfix() const {
  return attackfix_;
}
inline void PBSkill::set_attackfix(::google::protobuf::uint32 value) {
  _set_bit(42);
  attackfix_ = value;
}

// optional uint32 AttackPer = 44;
inline bool PBSkill::has_attackper() const {
  return _has_bit(43);
}
inline void PBSkill::clear_attackper() {
  attackper_ = 0u;
  _clear_bit(43);
}
inline ::google::protobuf::uint32 PBSkill::attackper() const {
  return attackper_;
}
inline void PBSkill::set_attackper(::google::protobuf::uint32 value) {
  _set_bit(43);
  attackper_ = value;
}

// optional uint32 ResType = 45;
inline bool PBSkill::has_restype() const {
  return _has_bit(44);
}
inline void PBSkill::clear_restype() {
  restype_ = 0u;
  _clear_bit(44);
}
inline ::google::protobuf::uint32 PBSkill::restype() const {
  return restype_;
}
inline void PBSkill::set_restype(::google::protobuf::uint32 value) {
  _set_bit(44);
  restype_ = value;
}

// optional uint32 ResValue = 46;
inline bool PBSkill::has_resvalue() const {
  return _has_bit(45);
}
inline void PBSkill::clear_resvalue() {
  resvalue_ = 0u;
  _clear_bit(45);
}
inline ::google::protobuf::uint32 PBSkill::resvalue() const {
  return resvalue_;
}
inline void PBSkill::set_resvalue(::google::protobuf::uint32 value) {
  _set_bit(45);
  resvalue_ = value;
}

// optional uint32 IsMWSkill = 47;
inline bool PBSkill::has_ismwskill() const {
  return _has_bit(46);
}
inline void PBSkill::clear_ismwskill() {
  ismwskill_ = 0u;
  _clear_bit(46);
}
inline ::google::protobuf::uint32 PBSkill::ismwskill() const {
  return ismwskill_;
}
inline void PBSkill::set_ismwskill(::google::protobuf::uint32 value) {
  _set_bit(46);
  ismwskill_ = value;
}

// optional string SkillTypeDesc = 48;
inline bool PBSkill::has_skilltypedesc() const {
  return _has_bit(47);
}
inline void PBSkill::clear_skilltypedesc() {
  if (skilltypedesc_ != &_default_skilltypedesc_) {
    skilltypedesc_->clear();
  }
  _clear_bit(47);
}
inline const ::std::string& PBSkill::skilltypedesc() const {
  return *skilltypedesc_;
}
inline void PBSkill::set_skilltypedesc(const ::std::string& value) {
  _set_bit(47);
  if (skilltypedesc_ == &_default_skilltypedesc_) {
    skilltypedesc_ = new ::std::string;
  }
  skilltypedesc_->assign(value);
}
inline void PBSkill::set_skilltypedesc(const char* value) {
  _set_bit(47);
  if (skilltypedesc_ == &_default_skilltypedesc_) {
    skilltypedesc_ = new ::std::string;
  }
  skilltypedesc_->assign(value);
}
inline void PBSkill::set_skilltypedesc(const char* value, size_t size) {
  _set_bit(47);
  if (skilltypedesc_ == &_default_skilltypedesc_) {
    skilltypedesc_ = new ::std::string;
  }
  skilltypedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSkill::mutable_skilltypedesc() {
  _set_bit(47);
  if (skilltypedesc_ == &_default_skilltypedesc_) {
    skilltypedesc_ = new ::std::string;
  }
  return skilltypedesc_;
}

// optional uint32 IsMWOffset = 49;
inline bool PBSkill::has_ismwoffset() const {
  return _has_bit(48);
}
inline void PBSkill::clear_ismwoffset() {
  ismwoffset_ = 0u;
  _clear_bit(48);
}
inline ::google::protobuf::uint32 PBSkill::ismwoffset() const {
  return ismwoffset_;
}
inline void PBSkill::set_ismwoffset(::google::protobuf::uint32 value) {
  _set_bit(48);
  ismwoffset_ = value;
}

// repeated uint32 CDGroup = 50;
inline int PBSkill::cdgroup_size() const {
  return cdgroup_.size();
}
inline void PBSkill::clear_cdgroup() {
  cdgroup_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSkill::cdgroup() const {
  return cdgroup_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSkill::mutable_cdgroup() {
  return &cdgroup_;
}
inline ::google::protobuf::uint32 PBSkill::cdgroup(int index) const {
  return cdgroup_.Get(index);
}
inline void PBSkill::set_cdgroup(int index, ::google::protobuf::uint32 value) {
  cdgroup_.Set(index, value);
}
inline void PBSkill::add_cdgroup(::google::protobuf::uint32 value) {
  cdgroup_.Add(value);
}

// optional uint32 CanClean = 51;
inline bool PBSkill::has_canclean() const {
  return _has_bit(50);
}
inline void PBSkill::clear_canclean() {
  canclean_ = 0u;
  _clear_bit(50);
}
inline ::google::protobuf::uint32 PBSkill::canclean() const {
  return canclean_;
}
inline void PBSkill::set_canclean(::google::protobuf::uint32 value) {
  _set_bit(50);
  canclean_ = value;
}

// optional uint32 TargetLevel = 52;
inline bool PBSkill::has_targetlevel() const {
  return _has_bit(51);
}
inline void PBSkill::clear_targetlevel() {
  targetlevel_ = 0u;
  _clear_bit(51);
}
inline ::google::protobuf::uint32 PBSkill::targetlevel() const {
  return targetlevel_;
}
inline void PBSkill::set_targetlevel(::google::protobuf::uint32 value) {
  _set_bit(51);
  targetlevel_ = value;
}

// optional uint32 SummonIndex = 53;
inline bool PBSkill::has_summonindex() const {
  return _has_bit(52);
}
inline void PBSkill::clear_summonindex() {
  summonindex_ = 0u;
  _clear_bit(52);
}
inline ::google::protobuf::uint32 PBSkill::summonindex() const {
  return summonindex_;
}
inline void PBSkill::set_summonindex(::google::protobuf::uint32 value) {
  _set_bit(52);
  summonindex_ = value;
}

// -------------------------------------------------------------------

// PBAureoleType

// optional uint32 AureoleArea = 1;
inline bool PBAureoleType::has_aureolearea() const {
  return _has_bit(0);
}
inline void PBAureoleType::clear_aureolearea() {
  aureolearea_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBAureoleType::aureolearea() const {
  return aureolearea_;
}
inline void PBAureoleType::set_aureolearea(::google::protobuf::uint32 value) {
  _set_bit(0);
  aureolearea_ = value;
}

// optional uint32 BuffID = 2;
inline bool PBAureoleType::has_buffid() const {
  return _has_bit(1);
}
inline void PBAureoleType::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBAureoleType::buffid() const {
  return buffid_;
}
inline void PBAureoleType::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(1);
  buffid_ = value;
}

// -------------------------------------------------------------------

// PBAureoleSkill

// optional .PBSkill SkillInfo = 1;
inline bool PBAureoleSkill::has_skillinfo() const {
  return _has_bit(0);
}
inline void PBAureoleSkill::clear_skillinfo() {
  if (skillinfo_ != NULL) skillinfo_->::PBSkill::Clear();
  _clear_bit(0);
}
inline const ::PBSkill& PBAureoleSkill::skillinfo() const {
  return skillinfo_ != NULL ? *skillinfo_ : *default_instance_->skillinfo_;
}
inline ::PBSkill* PBAureoleSkill::mutable_skillinfo() {
  _set_bit(0);
  if (skillinfo_ == NULL) skillinfo_ = new ::PBSkill;
  return skillinfo_;
}

// optional uint32 Inceessary = 2;
inline bool PBAureoleSkill::has_inceessary() const {
  return _has_bit(1);
}
inline void PBAureoleSkill::clear_inceessary() {
  inceessary_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBAureoleSkill::inceessary() const {
  return inceessary_;
}
inline void PBAureoleSkill::set_inceessary(::google::protobuf::uint32 value) {
  _set_bit(1);
  inceessary_ = value;
}

// optional uint32 InceessaryTime = 3;
inline bool PBAureoleSkill::has_inceessarytime() const {
  return _has_bit(2);
}
inline void PBAureoleSkill::clear_inceessarytime() {
  inceessarytime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBAureoleSkill::inceessarytime() const {
  return inceessarytime_;
}
inline void PBAureoleSkill::set_inceessarytime(::google::protobuf::uint32 value) {
  _set_bit(2);
  inceessarytime_ = value;
}

// repeated .PBCost Cost = 4;
inline int PBAureoleSkill::cost_size() const {
  return cost_.size();
}
inline void PBAureoleSkill::clear_cost() {
  cost_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCost >&
PBAureoleSkill::cost() const {
  return cost_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCost >*
PBAureoleSkill::mutable_cost() {
  return &cost_;
}
inline const ::PBCost& PBAureoleSkill::cost(int index) const {
  return cost_.Get(index);
}
inline ::PBCost* PBAureoleSkill::mutable_cost(int index) {
  return cost_.Mutable(index);
}
inline ::PBCost* PBAureoleSkill::add_cost() {
  return cost_.Add();
}

// optional uint32 AureoleDistance = 5;
inline bool PBAureoleSkill::has_aureoledistance() const {
  return _has_bit(4);
}
inline void PBAureoleSkill::clear_aureoledistance() {
  aureoledistance_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBAureoleSkill::aureoledistance() const {
  return aureoledistance_;
}
inline void PBAureoleSkill::set_aureoledistance(::google::protobuf::uint32 value) {
  _set_bit(4);
  aureoledistance_ = value;
}

// repeated .PBAureoleType AureoleType = 6;
inline int PBAureoleSkill::aureoletype_size() const {
  return aureoletype_.size();
}
inline void PBAureoleSkill::clear_aureoletype() {
  aureoletype_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAureoleType >&
PBAureoleSkill::aureoletype() const {
  return aureoletype_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAureoleType >*
PBAureoleSkill::mutable_aureoletype() {
  return &aureoletype_;
}
inline const ::PBAureoleType& PBAureoleSkill::aureoletype(int index) const {
  return aureoletype_.Get(index);
}
inline ::PBAureoleType* PBAureoleSkill::mutable_aureoletype(int index) {
  return aureoletype_.Mutable(index);
}
inline ::PBAureoleType* PBAureoleSkill::add_aureoletype() {
  return aureoletype_.Add();
}

// -------------------------------------------------------------------

// PBNormalSkill

// optional .PBSkill SkillInfo = 1;
inline bool PBNormalSkill::has_skillinfo() const {
  return _has_bit(0);
}
inline void PBNormalSkill::clear_skillinfo() {
  if (skillinfo_ != NULL) skillinfo_->::PBSkill::Clear();
  _clear_bit(0);
}
inline const ::PBSkill& PBNormalSkill::skillinfo() const {
  return skillinfo_ != NULL ? *skillinfo_ : *default_instance_->skillinfo_;
}
inline ::PBSkill* PBNormalSkill::mutable_skillinfo() {
  _set_bit(0);
  if (skillinfo_ == NULL) skillinfo_ = new ::PBSkill;
  return skillinfo_;
}

// optional uint32 SkillHitrate = 2;
inline bool PBNormalSkill::has_skillhitrate() const {
  return _has_bit(1);
}
inline void PBNormalSkill::clear_skillhitrate() {
  skillhitrate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBNormalSkill::skillhitrate() const {
  return skillhitrate_;
}
inline void PBNormalSkill::set_skillhitrate(::google::protobuf::uint32 value) {
  _set_bit(1);
  skillhitrate_ = value;
}

// optional uint32 MinDistance = 3;
inline bool PBNormalSkill::has_mindistance() const {
  return _has_bit(2);
}
inline void PBNormalSkill::clear_mindistance() {
  mindistance_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBNormalSkill::mindistance() const {
  return mindistance_;
}
inline void PBNormalSkill::set_mindistance(::google::protobuf::uint32 value) {
  _set_bit(2);
  mindistance_ = value;
}

// optional uint32 MaxDistance = 4;
inline bool PBNormalSkill::has_maxdistance() const {
  return _has_bit(3);
}
inline void PBNormalSkill::clear_maxdistance() {
  maxdistance_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBNormalSkill::maxdistance() const {
  return maxdistance_;
}
inline void PBNormalSkill::set_maxdistance(::google::protobuf::uint32 value) {
  _set_bit(3);
  maxdistance_ = value;
}

// optional uint32 EfktMaxNum = 5;
inline bool PBNormalSkill::has_efktmaxnum() const {
  return _has_bit(4);
}
inline void PBNormalSkill::clear_efktmaxnum() {
  efktmaxnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBNormalSkill::efktmaxnum() const {
  return efktmaxnum_;
}
inline void PBNormalSkill::set_efktmaxnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  efktmaxnum_ = value;
}

// optional uint32 AttackRange = 6;
inline bool PBNormalSkill::has_attackrange() const {
  return _has_bit(5);
}
inline void PBNormalSkill::clear_attackrange() {
  attackrange_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBNormalSkill::attackrange() const {
  return attackrange_;
}
inline void PBNormalSkill::set_attackrange(::google::protobuf::uint32 value) {
  _set_bit(5);
  attackrange_ = value;
}

// repeated uint32 RandParam = 7;
inline int PBNormalSkill::randparam_size() const {
  return randparam_.size();
}
inline void PBNormalSkill::clear_randparam() {
  randparam_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNormalSkill::randparam() const {
  return randparam_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNormalSkill::mutable_randparam() {
  return &randparam_;
}
inline ::google::protobuf::uint32 PBNormalSkill::randparam(int index) const {
  return randparam_.Get(index);
}
inline void PBNormalSkill::set_randparam(int index, ::google::protobuf::uint32 value) {
  randparam_.Set(index, value);
}
inline void PBNormalSkill::add_randparam(::google::protobuf::uint32 value) {
  randparam_.Add(value);
}

// repeated uint32 BuffGroupID = 8;
inline int PBNormalSkill::buffgroupid_size() const {
  return buffgroupid_.size();
}
inline void PBNormalSkill::clear_buffgroupid() {
  buffgroupid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBNormalSkill::buffgroupid() const {
  return buffgroupid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBNormalSkill::mutable_buffgroupid() {
  return &buffgroupid_;
}
inline ::google::protobuf::uint32 PBNormalSkill::buffgroupid(int index) const {
  return buffgroupid_.Get(index);
}
inline void PBNormalSkill::set_buffgroupid(int index, ::google::protobuf::uint32 value) {
  buffgroupid_.Set(index, value);
}
inline void PBNormalSkill::add_buffgroupid(::google::protobuf::uint32 value) {
  buffgroupid_.Add(value);
}

// optional uint32 ContinuedRule = 9;
inline bool PBNormalSkill::has_continuedrule() const {
  return _has_bit(8);
}
inline void PBNormalSkill::clear_continuedrule() {
  continuedrule_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBNormalSkill::continuedrule() const {
  return continuedrule_;
}
inline void PBNormalSkill::set_continuedrule(::google::protobuf::uint32 value) {
  _set_bit(8);
  continuedrule_ = value;
}

// optional uint32 ContinuedTime = 10;
inline bool PBNormalSkill::has_continuedtime() const {
  return _has_bit(9);
}
inline void PBNormalSkill::clear_continuedtime() {
  continuedtime_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBNormalSkill::continuedtime() const {
  return continuedtime_;
}
inline void PBNormalSkill::set_continuedtime(::google::protobuf::uint32 value) {
  _set_bit(9);
  continuedtime_ = value;
}

// optional uint32 ContinuedNum = 11;
inline bool PBNormalSkill::has_continuednum() const {
  return _has_bit(10);
}
inline void PBNormalSkill::clear_continuednum() {
  continuednum_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBNormalSkill::continuednum() const {
  return continuednum_;
}
inline void PBNormalSkill::set_continuednum(::google::protobuf::uint32 value) {
  _set_bit(10);
  continuednum_ = value;
}

// optional uint32 IgnoreArmor = 12;
inline bool PBNormalSkill::has_ignorearmor() const {
  return _has_bit(11);
}
inline void PBNormalSkill::clear_ignorearmor() {
  ignorearmor_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBNormalSkill::ignorearmor() const {
  return ignorearmor_;
}
inline void PBNormalSkill::set_ignorearmor(::google::protobuf::uint32 value) {
  _set_bit(11);
  ignorearmor_ = value;
}

// -------------------------------------------------------------------

// PBTrapSkill

// optional .PBSkill SkillInfo = 1;
inline bool PBTrapSkill::has_skillinfo() const {
  return _has_bit(0);
}
inline void PBTrapSkill::clear_skillinfo() {
  if (skillinfo_ != NULL) skillinfo_->::PBSkill::Clear();
  _clear_bit(0);
}
inline const ::PBSkill& PBTrapSkill::skillinfo() const {
  return skillinfo_ != NULL ? *skillinfo_ : *default_instance_->skillinfo_;
}
inline ::PBSkill* PBTrapSkill::mutable_skillinfo() {
  _set_bit(0);
  if (skillinfo_ == NULL) skillinfo_ = new ::PBSkill;
  return skillinfo_;
}

// optional uint32 LastTime = 2;
inline bool PBTrapSkill::has_lasttime() const {
  return _has_bit(1);
}
inline void PBTrapSkill::clear_lasttime() {
  lasttime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTrapSkill::lasttime() const {
  return lasttime_;
}
inline void PBTrapSkill::set_lasttime(::google::protobuf::uint32 value) {
  _set_bit(1);
  lasttime_ = value;
}

// optional uint32 ApplyType = 3;
inline bool PBTrapSkill::has_applytype() const {
  return _has_bit(2);
}
inline void PBTrapSkill::clear_applytype() {
  applytype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTrapSkill::applytype() const {
  return applytype_;
}
inline void PBTrapSkill::set_applytype(::google::protobuf::uint32 value) {
  _set_bit(2);
  applytype_ = value;
}

// optional uint32 TouchRange = 4;
inline bool PBTrapSkill::has_touchrange() const {
  return _has_bit(3);
}
inline void PBTrapSkill::clear_touchrange() {
  touchrange_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTrapSkill::touchrange() const {
  return touchrange_;
}
inline void PBTrapSkill::set_touchrange(::google::protobuf::uint32 value) {
  _set_bit(3);
  touchrange_ = value;
}

// optional uint32 ApplyRange = 5;
inline bool PBTrapSkill::has_applyrange() const {
  return _has_bit(4);
}
inline void PBTrapSkill::clear_applyrange() {
  applyrange_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTrapSkill::applyrange() const {
  return applyrange_;
}
inline void PBTrapSkill::set_applyrange(::google::protobuf::uint32 value) {
  _set_bit(4);
  applyrange_ = value;
}

// optional string TrapRes = 6;
inline bool PBTrapSkill::has_trapres() const {
  return _has_bit(5);
}
inline void PBTrapSkill::clear_trapres() {
  if (trapres_ != &_default_trapres_) {
    trapres_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& PBTrapSkill::trapres() const {
  return *trapres_;
}
inline void PBTrapSkill::set_trapres(const ::std::string& value) {
  _set_bit(5);
  if (trapres_ == &_default_trapres_) {
    trapres_ = new ::std::string;
  }
  trapres_->assign(value);
}
inline void PBTrapSkill::set_trapres(const char* value) {
  _set_bit(5);
  if (trapres_ == &_default_trapres_) {
    trapres_ = new ::std::string;
  }
  trapres_->assign(value);
}
inline void PBTrapSkill::set_trapres(const char* value, size_t size) {
  _set_bit(5);
  if (trapres_ == &_default_trapres_) {
    trapres_ = new ::std::string;
  }
  trapres_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTrapSkill::mutable_trapres() {
  _set_bit(5);
  if (trapres_ == &_default_trapres_) {
    trapres_ = new ::std::string;
  }
  return trapres_;
}

// repeated uint32 BuffGroupID = 7;
inline int PBTrapSkill::buffgroupid_size() const {
  return buffgroupid_.size();
}
inline void PBTrapSkill::clear_buffgroupid() {
  buffgroupid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTrapSkill::buffgroupid() const {
  return buffgroupid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTrapSkill::mutable_buffgroupid() {
  return &buffgroupid_;
}
inline ::google::protobuf::uint32 PBTrapSkill::buffgroupid(int index) const {
  return buffgroupid_.Get(index);
}
inline void PBTrapSkill::set_buffgroupid(int index, ::google::protobuf::uint32 value) {
  buffgroupid_.Set(index, value);
}
inline void PBTrapSkill::add_buffgroupid(::google::protobuf::uint32 value) {
  buffgroupid_.Add(value);
}

// repeated uint32 Condition = 8;
inline int PBTrapSkill::condition_size() const {
  return condition_.size();
}
inline void PBTrapSkill::clear_condition() {
  condition_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTrapSkill::condition() const {
  return condition_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTrapSkill::mutable_condition() {
  return &condition_;
}
inline ::google::protobuf::uint32 PBTrapSkill::condition(int index) const {
  return condition_.Get(index);
}
inline void PBTrapSkill::set_condition(int index, ::google::protobuf::uint32 value) {
  condition_.Set(index, value);
}
inline void PBTrapSkill::add_condition(::google::protobuf::uint32 value) {
  condition_.Add(value);
}

// optional uint32 EffectMaxNumber = 9;
inline bool PBTrapSkill::has_effectmaxnumber() const {
  return _has_bit(8);
}
inline void PBTrapSkill::clear_effectmaxnumber() {
  effectmaxnumber_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBTrapSkill::effectmaxnumber() const {
  return effectmaxnumber_;
}
inline void PBTrapSkill::set_effectmaxnumber(::google::protobuf::uint32 value) {
  _set_bit(8);
  effectmaxnumber_ = value;
}

// -------------------------------------------------------------------

// PBBuffFunc

// optional uint32 FuncType = 1;
inline bool PBBuffFunc::has_functype() const {
  return _has_bit(0);
}
inline void PBBuffFunc::clear_functype() {
  functype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBuffFunc::functype() const {
  return functype_;
}
inline void PBBuffFunc::set_functype(::google::protobuf::uint32 value) {
  _set_bit(0);
  functype_ = value;
}

// repeated uint32 Parame = 2;
inline int PBBuffFunc::parame_size() const {
  return parame_.size();
}
inline void PBBuffFunc::clear_parame() {
  parame_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBuffFunc::parame() const {
  return parame_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBuffFunc::mutable_parame() {
  return &parame_;
}
inline ::google::protobuf::uint32 PBBuffFunc::parame(int index) const {
  return parame_.Get(index);
}
inline void PBBuffFunc::set_parame(int index, ::google::protobuf::uint32 value) {
  parame_.Set(index, value);
}
inline void PBBuffFunc::add_parame(::google::protobuf::uint32 value) {
  parame_.Add(value);
}

// -------------------------------------------------------------------

// PBBuff

// optional uint32 TempID = 1;
inline bool PBBuff::has_tempid() const {
  return _has_bit(0);
}
inline void PBBuff::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBuff::tempid() const {
  return tempid_;
}
inline void PBBuff::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 BuffServiceID = 2;
inline bool PBBuff::has_buffserviceid() const {
  return _has_bit(1);
}
inline void PBBuff::clear_buffserviceid() {
  buffserviceid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBBuff::buffserviceid() const {
  return buffserviceid_;
}
inline void PBBuff::set_buffserviceid(::google::protobuf::uint32 value) {
  _set_bit(1);
  buffserviceid_ = value;
}

// optional uint32 IdenValue = 3;
inline bool PBBuff::has_idenvalue() const {
  return _has_bit(2);
}
inline void PBBuff::clear_idenvalue() {
  idenvalue_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBBuff::idenvalue() const {
  return idenvalue_;
}
inline void PBBuff::set_idenvalue(::google::protobuf::uint32 value) {
  _set_bit(2);
  idenvalue_ = value;
}

// optional uint32 BuffStyle = 4;
inline bool PBBuff::has_buffstyle() const {
  return _has_bit(3);
}
inline void PBBuff::clear_buffstyle() {
  buffstyle_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBBuff::buffstyle() const {
  return buffstyle_;
}
inline void PBBuff::set_buffstyle(::google::protobuf::uint32 value) {
  _set_bit(3);
  buffstyle_ = value;
}

// optional uint32 FirstActiveTime = 5;
inline bool PBBuff::has_firstactivetime() const {
  return _has_bit(4);
}
inline void PBBuff::clear_firstactivetime() {
  firstactivetime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBBuff::firstactivetime() const {
  return firstactivetime_;
}
inline void PBBuff::set_firstactivetime(::google::protobuf::uint32 value) {
  _set_bit(4);
  firstactivetime_ = value;
}

// optional uint32 ActiveTime = 6;
inline bool PBBuff::has_activetime() const {
  return _has_bit(5);
}
inline void PBBuff::clear_activetime() {
  activetime_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBBuff::activetime() const {
  return activetime_;
}
inline void PBBuff::set_activetime(::google::protobuf::uint32 value) {
  _set_bit(5);
  activetime_ = value;
}

// repeated .PBBuffFunc BuffFunc = 7;
inline int PBBuff::bufffunc_size() const {
  return bufffunc_.size();
}
inline void PBBuff::clear_bufffunc() {
  bufffunc_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBuffFunc >&
PBBuff::bufffunc() const {
  return bufffunc_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBuffFunc >*
PBBuff::mutable_bufffunc() {
  return &bufffunc_;
}
inline const ::PBBuffFunc& PBBuff::bufffunc(int index) const {
  return bufffunc_.Get(index);
}
inline ::PBBuffFunc* PBBuff::mutable_bufffunc(int index) {
  return bufffunc_.Mutable(index);
}
inline ::PBBuffFunc* PBBuff::add_bufffunc() {
  return bufffunc_.Add();
}

// optional string BuffName = 8;
inline bool PBBuff::has_buffname() const {
  return _has_bit(7);
}
inline void PBBuff::clear_buffname() {
  if (buffname_ != &_default_buffname_) {
    buffname_->clear();
  }
  _clear_bit(7);
}
inline const ::std::string& PBBuff::buffname() const {
  return *buffname_;
}
inline void PBBuff::set_buffname(const ::std::string& value) {
  _set_bit(7);
  if (buffname_ == &_default_buffname_) {
    buffname_ = new ::std::string;
  }
  buffname_->assign(value);
}
inline void PBBuff::set_buffname(const char* value) {
  _set_bit(7);
  if (buffname_ == &_default_buffname_) {
    buffname_ = new ::std::string;
  }
  buffname_->assign(value);
}
inline void PBBuff::set_buffname(const char* value, size_t size) {
  _set_bit(7);
  if (buffname_ == &_default_buffname_) {
    buffname_ = new ::std::string;
  }
  buffname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBuff::mutable_buffname() {
  _set_bit(7);
  if (buffname_ == &_default_buffname_) {
    buffname_ = new ::std::string;
  }
  return buffname_;
}

// optional string BuffIcon = 9;
inline bool PBBuff::has_bufficon() const {
  return _has_bit(8);
}
inline void PBBuff::clear_bufficon() {
  if (bufficon_ != &_default_bufficon_) {
    bufficon_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& PBBuff::bufficon() const {
  return *bufficon_;
}
inline void PBBuff::set_bufficon(const ::std::string& value) {
  _set_bit(8);
  if (bufficon_ == &_default_bufficon_) {
    bufficon_ = new ::std::string;
  }
  bufficon_->assign(value);
}
inline void PBBuff::set_bufficon(const char* value) {
  _set_bit(8);
  if (bufficon_ == &_default_bufficon_) {
    bufficon_ = new ::std::string;
  }
  bufficon_->assign(value);
}
inline void PBBuff::set_bufficon(const char* value, size_t size) {
  _set_bit(8);
  if (bufficon_ == &_default_bufficon_) {
    bufficon_ = new ::std::string;
  }
  bufficon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBuff::mutable_bufficon() {
  _set_bit(8);
  if (bufficon_ == &_default_bufficon_) {
    bufficon_ = new ::std::string;
  }
  return bufficon_;
}

// optional string BuffDescribe = 10;
inline bool PBBuff::has_buffdescribe() const {
  return _has_bit(9);
}
inline void PBBuff::clear_buffdescribe() {
  if (buffdescribe_ != &_default_buffdescribe_) {
    buffdescribe_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& PBBuff::buffdescribe() const {
  return *buffdescribe_;
}
inline void PBBuff::set_buffdescribe(const ::std::string& value) {
  _set_bit(9);
  if (buffdescribe_ == &_default_buffdescribe_) {
    buffdescribe_ = new ::std::string;
  }
  buffdescribe_->assign(value);
}
inline void PBBuff::set_buffdescribe(const char* value) {
  _set_bit(9);
  if (buffdescribe_ == &_default_buffdescribe_) {
    buffdescribe_ = new ::std::string;
  }
  buffdescribe_->assign(value);
}
inline void PBBuff::set_buffdescribe(const char* value, size_t size) {
  _set_bit(9);
  if (buffdescribe_ == &_default_buffdescribe_) {
    buffdescribe_ = new ::std::string;
  }
  buffdescribe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBuff::mutable_buffdescribe() {
  _set_bit(9);
  if (buffdescribe_ == &_default_buffdescribe_) {
    buffdescribe_ = new ::std::string;
  }
  return buffdescribe_;
}

// optional uint32 Hitrate = 11;
inline bool PBBuff::has_hitrate() const {
  return _has_bit(10);
}
inline void PBBuff::clear_hitrate() {
  hitrate_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBBuff::hitrate() const {
  return hitrate_;
}
inline void PBBuff::set_hitrate(::google::protobuf::uint32 value) {
  _set_bit(10);
  hitrate_ = value;
}

// optional uint32 BuffValue = 12;
inline bool PBBuff::has_buffvalue() const {
  return _has_bit(11);
}
inline void PBBuff::clear_buffvalue() {
  buffvalue_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBBuff::buffvalue() const {
  return buffvalue_;
}
inline void PBBuff::set_buffvalue(::google::protobuf::uint32 value) {
  _set_bit(11);
  buffvalue_ = value;
}

// optional uint32 ResistType = 13;
inline bool PBBuff::has_resisttype() const {
  return _has_bit(12);
}
inline void PBBuff::clear_resisttype() {
  resisttype_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBBuff::resisttype() const {
  return resisttype_;
}
inline void PBBuff::set_resisttype(::google::protobuf::uint32 value) {
  _set_bit(12);
  resisttype_ = value;
}

// optional uint32 LastTime = 14;
inline bool PBBuff::has_lasttime() const {
  return _has_bit(13);
}
inline void PBBuff::clear_lasttime() {
  lasttime_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBBuff::lasttime() const {
  return lasttime_;
}
inline void PBBuff::set_lasttime(::google::protobuf::uint32 value) {
  _set_bit(13);
  lasttime_ = value;
}

// optional uint32 BuffType = 15;
inline bool PBBuff::has_bufftype() const {
  return _has_bit(14);
}
inline void PBBuff::clear_bufftype() {
  bufftype_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBBuff::bufftype() const {
  return bufftype_;
}
inline void PBBuff::set_bufftype(::google::protobuf::uint32 value) {
  _set_bit(14);
  bufftype_ = value;
}

// optional uint32 CancelBuff = 16;
inline bool PBBuff::has_cancelbuff() const {
  return _has_bit(15);
}
inline void PBBuff::clear_cancelbuff() {
  cancelbuff_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBBuff::cancelbuff() const {
  return cancelbuff_;
}
inline void PBBuff::set_cancelbuff(::google::protobuf::uint32 value) {
  _set_bit(15);
  cancelbuff_ = value;
}

// optional uint32 EnableBattle = 17;
inline bool PBBuff::has_enablebattle() const {
  return _has_bit(16);
}
inline void PBBuff::clear_enablebattle() {
  enablebattle_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBBuff::enablebattle() const {
  return enablebattle_;
}
inline void PBBuff::set_enablebattle(::google::protobuf::uint32 value) {
  _set_bit(16);
  enablebattle_ = value;
}

// optional string BuffAni = 18;
inline bool PBBuff::has_buffani() const {
  return _has_bit(17);
}
inline void PBBuff::clear_buffani() {
  if (buffani_ != &_default_buffani_) {
    buffani_->clear();
  }
  _clear_bit(17);
}
inline const ::std::string& PBBuff::buffani() const {
  return *buffani_;
}
inline void PBBuff::set_buffani(const ::std::string& value) {
  _set_bit(17);
  if (buffani_ == &_default_buffani_) {
    buffani_ = new ::std::string;
  }
  buffani_->assign(value);
}
inline void PBBuff::set_buffani(const char* value) {
  _set_bit(17);
  if (buffani_ == &_default_buffani_) {
    buffani_ = new ::std::string;
  }
  buffani_->assign(value);
}
inline void PBBuff::set_buffani(const char* value, size_t size) {
  _set_bit(17);
  if (buffani_ == &_default_buffani_) {
    buffani_ = new ::std::string;
  }
  buffani_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBBuff::mutable_buffani() {
  _set_bit(17);
  if (buffani_ == &_default_buffani_) {
    buffani_ = new ::std::string;
  }
  return buffani_;
}

// optional uint32 BuffRow = 19;
inline bool PBBuff::has_buffrow() const {
  return _has_bit(18);
}
inline void PBBuff::clear_buffrow() {
  buffrow_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBBuff::buffrow() const {
  return buffrow_;
}
inline void PBBuff::set_buffrow(::google::protobuf::uint32 value) {
  _set_bit(18);
  buffrow_ = value;
}

// optional uint32 BuffDieDel = 20;
inline bool PBBuff::has_buffdiedel() const {
  return _has_bit(19);
}
inline void PBBuff::clear_buffdiedel() {
  buffdiedel_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBBuff::buffdiedel() const {
  return buffdiedel_;
}
inline void PBBuff::set_buffdiedel(::google::protobuf::uint32 value) {
  _set_bit(19);
  buffdiedel_ = value;
}

// optional uint32 TimerType = 21;
inline bool PBBuff::has_timertype() const {
  return _has_bit(20);
}
inline void PBBuff::clear_timertype() {
  timertype_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBBuff::timertype() const {
  return timertype_;
}
inline void PBBuff::set_timertype(::google::protobuf::uint32 value) {
  _set_bit(20);
  timertype_ = value;
}

// optional uint32 BuffClear = 22;
inline bool PBBuff::has_buffclear() const {
  return _has_bit(21);
}
inline void PBBuff::clear_buffclear() {
  buffclear_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBBuff::buffclear() const {
  return buffclear_;
}
inline void PBBuff::set_buffclear(::google::protobuf::uint32 value) {
  _set_bit(21);
  buffclear_ = value;
}

// optional uint32 BuffMapID = 23;
inline bool PBBuff::has_buffmapid() const {
  return _has_bit(22);
}
inline void PBBuff::clear_buffmapid() {
  buffmapid_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBBuff::buffmapid() const {
  return buffmapid_;
}
inline void PBBuff::set_buffmapid(::google::protobuf::uint32 value) {
  _set_bit(22);
  buffmapid_ = value;
}

// optional uint32 BuffLineID = 24;
inline bool PBBuff::has_bufflineid() const {
  return _has_bit(23);
}
inline void PBBuff::clear_bufflineid() {
  bufflineid_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBBuff::bufflineid() const {
  return bufflineid_;
}
inline void PBBuff::set_bufflineid(::google::protobuf::uint32 value) {
  _set_bit(23);
  bufflineid_ = value;
}

// optional uint32 SkillLevel = 25;
inline bool PBBuff::has_skilllevel() const {
  return _has_bit(24);
}
inline void PBBuff::clear_skilllevel() {
  skilllevel_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBBuff::skilllevel() const {
  return skilllevel_;
}
inline void PBBuff::set_skilllevel(::google::protobuf::uint32 value) {
  _set_bit(24);
  skilllevel_ = value;
}

// optional uint32 BuffMapType = 26;
inline bool PBBuff::has_buffmaptype() const {
  return _has_bit(25);
}
inline void PBBuff::clear_buffmaptype() {
  buffmaptype_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBBuff::buffmaptype() const {
  return buffmaptype_;
}
inline void PBBuff::set_buffmaptype(::google::protobuf::uint32 value) {
  _set_bit(25);
  buffmaptype_ = value;
}

// optional uint32 CountryBuff = 27;
inline bool PBBuff::has_countrybuff() const {
  return _has_bit(26);
}
inline void PBBuff::clear_countrybuff() {
  countrybuff_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBBuff::countrybuff() const {
  return countrybuff_;
}
inline void PBBuff::set_countrybuff(::google::protobuf::uint32 value) {
  _set_bit(26);
  countrybuff_ = value;
}

// optional uint32 BuffSuperposition = 28;
inline bool PBBuff::has_buffsuperposition() const {
  return _has_bit(27);
}
inline void PBBuff::clear_buffsuperposition() {
  buffsuperposition_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBBuff::buffsuperposition() const {
  return buffsuperposition_;
}
inline void PBBuff::set_buffsuperposition(::google::protobuf::uint32 value) {
  _set_bit(27);
  buffsuperposition_ = value;
}

// optional uint32 Accurate = 29;
inline bool PBBuff::has_accurate() const {
  return _has_bit(28);
}
inline void PBBuff::clear_accurate() {
  accurate_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBBuff::accurate() const {
  return accurate_;
}
inline void PBBuff::set_accurate(::google::protobuf::uint32 value) {
  _set_bit(28);
  accurate_ = value;
}

// optional uint32 OffRemove = 30;
inline bool PBBuff::has_offremove() const {
  return _has_bit(29);
}
inline void PBBuff::clear_offremove() {
  offremove_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBBuff::offremove() const {
  return offremove_;
}
inline void PBBuff::set_offremove(::google::protobuf::uint32 value) {
  _set_bit(29);
  offremove_ = value;
}

// optional uint32 Transform = 31;
inline bool PBBuff::has_transform() const {
  return _has_bit(30);
}
inline void PBBuff::clear_transform() {
  transform_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBBuff::transform() const {
  return transform_;
}
inline void PBBuff::set_transform(::google::protobuf::uint32 value) {
  _set_bit(30);
  transform_ = value;
}

// optional uint32 RemoveCountID = 32;
inline bool PBBuff::has_removecountid() const {
  return _has_bit(31);
}
inline void PBBuff::clear_removecountid() {
  removecountid_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBBuff::removecountid() const {
  return removecountid_;
}
inline void PBBuff::set_removecountid(::google::protobuf::uint32 value) {
  _set_bit(31);
  removecountid_ = value;
}

// -------------------------------------------------------------------

// PBLevelExp

// optional uint32 TempID = 1;
inline bool PBLevelExp::has_tempid() const {
  return _has_bit(0);
}
inline void PBLevelExp::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBLevelExp::tempid() const {
  return tempid_;
}
inline void PBLevelExp::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint64 LevelExp = 2;
inline int PBLevelExp::levelexp_size() const {
  return levelexp_.size();
}
inline void PBLevelExp::clear_levelexp() {
  levelexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PBLevelExp::levelexp() const {
  return levelexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PBLevelExp::mutable_levelexp() {
  return &levelexp_;
}
inline ::google::protobuf::uint64 PBLevelExp::levelexp(int index) const {
  return levelexp_.Get(index);
}
inline void PBLevelExp::set_levelexp(int index, ::google::protobuf::uint64 value) {
  levelexp_.Set(index, value);
}
inline void PBLevelExp::add_levelexp(::google::protobuf::uint64 value) {
  levelexp_.Add(value);
}

// -------------------------------------------------------------------

// PBSingleMoneyLmt

// optional uint32 BagMoneyLmt = 1;
inline bool PBSingleMoneyLmt::has_bagmoneylmt() const {
  return _has_bit(0);
}
inline void PBSingleMoneyLmt::clear_bagmoneylmt() {
  bagmoneylmt_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSingleMoneyLmt::bagmoneylmt() const {
  return bagmoneylmt_;
}
inline void PBSingleMoneyLmt::set_bagmoneylmt(::google::protobuf::uint32 value) {
  _set_bit(0);
  bagmoneylmt_ = value;
}

// optional uint32 BagBindMoneyLmt = 2;
inline bool PBSingleMoneyLmt::has_bagbindmoneylmt() const {
  return _has_bit(1);
}
inline void PBSingleMoneyLmt::clear_bagbindmoneylmt() {
  bagbindmoneylmt_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSingleMoneyLmt::bagbindmoneylmt() const {
  return bagbindmoneylmt_;
}
inline void PBSingleMoneyLmt::set_bagbindmoneylmt(::google::protobuf::uint32 value) {
  _set_bit(1);
  bagbindmoneylmt_ = value;
}

// optional uint32 StorageMoneyLmt = 3;
inline bool PBSingleMoneyLmt::has_storagemoneylmt() const {
  return _has_bit(2);
}
inline void PBSingleMoneyLmt::clear_storagemoneylmt() {
  storagemoneylmt_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSingleMoneyLmt::storagemoneylmt() const {
  return storagemoneylmt_;
}
inline void PBSingleMoneyLmt::set_storagemoneylmt(::google::protobuf::uint32 value) {
  _set_bit(2);
  storagemoneylmt_ = value;
}

// optional uint32 StorageBindMoneyLmt = 4;
inline bool PBSingleMoneyLmt::has_storagebindmoneylmt() const {
  return _has_bit(3);
}
inline void PBSingleMoneyLmt::clear_storagebindmoneylmt() {
  storagebindmoneylmt_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSingleMoneyLmt::storagebindmoneylmt() const {
  return storagebindmoneylmt_;
}
inline void PBSingleMoneyLmt::set_storagebindmoneylmt(::google::protobuf::uint32 value) {
  _set_bit(3);
  storagebindmoneylmt_ = value;
}

// -------------------------------------------------------------------

// PBLevelMoneyLmt

// optional uint32 TempID = 1;
inline bool PBLevelMoneyLmt::has_tempid() const {
  return _has_bit(0);
}
inline void PBLevelMoneyLmt::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBLevelMoneyLmt::tempid() const {
  return tempid_;
}
inline void PBLevelMoneyLmt::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBSingleMoneyLmt LmtTable = 2;
inline int PBLevelMoneyLmt::lmttable_size() const {
  return lmttable_.size();
}
inline void PBLevelMoneyLmt::clear_lmttable() {
  lmttable_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSingleMoneyLmt >&
PBLevelMoneyLmt::lmttable() const {
  return lmttable_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSingleMoneyLmt >*
PBLevelMoneyLmt::mutable_lmttable() {
  return &lmttable_;
}
inline const ::PBSingleMoneyLmt& PBLevelMoneyLmt::lmttable(int index) const {
  return lmttable_.Get(index);
}
inline ::PBSingleMoneyLmt* PBLevelMoneyLmt::mutable_lmttable(int index) {
  return lmttable_.Mutable(index);
}
inline ::PBSingleMoneyLmt* PBLevelMoneyLmt::add_lmttable() {
  return lmttable_.Add();
}

// -------------------------------------------------------------------

// PBPetLevelExp

// optional uint32 TempID = 1;
inline bool PBPetLevelExp::has_tempid() const {
  return _has_bit(0);
}
inline void PBPetLevelExp::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPetLevelExp::tempid() const {
  return tempid_;
}
inline void PBPetLevelExp::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 LevelExp = 2;
inline int PBPetLevelExp::levelexp_size() const {
  return levelexp_.size();
}
inline void PBPetLevelExp::clear_levelexp() {
  levelexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPetLevelExp::levelexp() const {
  return levelexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPetLevelExp::mutable_levelexp() {
  return &levelexp_;
}
inline ::google::protobuf::uint32 PBPetLevelExp::levelexp(int index) const {
  return levelexp_.Get(index);
}
inline void PBPetLevelExp::set_levelexp(int index, ::google::protobuf::uint32 value) {
  levelexp_.Set(index, value);
}
inline void PBPetLevelExp::add_levelexp(::google::protobuf::uint32 value) {
  levelexp_.Add(value);
}

// -------------------------------------------------------------------

// PBProduceExp

// optional uint32 TempID = 1;
inline bool PBProduceExp::has_tempid() const {
  return _has_bit(0);
}
inline void PBProduceExp::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBProduceExp::tempid() const {
  return tempid_;
}
inline void PBProduceExp::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 LevelExp = 2;
inline int PBProduceExp::levelexp_size() const {
  return levelexp_.size();
}
inline void PBProduceExp::clear_levelexp() {
  levelexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBProduceExp::levelexp() const {
  return levelexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBProduceExp::mutable_levelexp() {
  return &levelexp_;
}
inline ::google::protobuf::uint32 PBProduceExp::levelexp(int index) const {
  return levelexp_.Get(index);
}
inline void PBProduceExp::set_levelexp(int index, ::google::protobuf::uint32 value) {
  levelexp_.Set(index, value);
}
inline void PBProduceExp::add_levelexp(::google::protobuf::uint32 value) {
  levelexp_.Add(value);
}

// -------------------------------------------------------------------

// PBUpg

// optional uint32 Success = 1;
inline bool PBUpg::has_success() const {
  return _has_bit(0);
}
inline void PBUpg::clear_success() {
  success_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBUpg::success() const {
  return success_;
}
inline void PBUpg::set_success(::google::protobuf::uint32 value) {
  _set_bit(0);
  success_ = value;
}

// optional uint32 Failure = 2;
inline bool PBUpg::has_failure() const {
  return _has_bit(1);
}
inline void PBUpg::clear_failure() {
  failure_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBUpg::failure() const {
  return failure_;
}
inline void PBUpg::set_failure(::google::protobuf::uint32 value) {
  _set_bit(1);
  failure_ = value;
}

// optional uint32 Result = 3;
inline bool PBUpg::has_result() const {
  return _has_bit(2);
}
inline void PBUpg::clear_result() {
  result_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBUpg::result() const {
  return result_;
}
inline void PBUpg::set_result(::google::protobuf::uint32 value) {
  _set_bit(2);
  result_ = value;
}

// optional uint32 IncLevel = 4;
inline bool PBUpg::has_inclevel() const {
  return _has_bit(3);
}
inline void PBUpg::clear_inclevel() {
  inclevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBUpg::inclevel() const {
  return inclevel_;
}
inline void PBUpg::set_inclevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  inclevel_ = value;
}

// optional uint32 ExtSuccess = 5;
inline bool PBUpg::has_extsuccess() const {
  return _has_bit(4);
}
inline void PBUpg::clear_extsuccess() {
  extsuccess_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBUpg::extsuccess() const {
  return extsuccess_;
}
inline void PBUpg::set_extsuccess(::google::protobuf::uint32 value) {
  _set_bit(4);
  extsuccess_ = value;
}

// -------------------------------------------------------------------

// PBEquipUpg

// optional uint32 TempID = 1;
inline bool PBEquipUpg::has_tempid() const {
  return _has_bit(0);
}
inline void PBEquipUpg::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBEquipUpg::tempid() const {
  return tempid_;
}
inline void PBEquipUpg::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBUpg EquipUpg = 2;
inline int PBEquipUpg::equipupg_size() const {
  return equipupg_.size();
}
inline void PBEquipUpg::clear_equipupg() {
  equipupg_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBUpg >&
PBEquipUpg::equipupg() const {
  return equipupg_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBUpg >*
PBEquipUpg::mutable_equipupg() {
  return &equipupg_;
}
inline const ::PBUpg& PBEquipUpg::equipupg(int index) const {
  return equipupg_.Get(index);
}
inline ::PBUpg* PBEquipUpg::mutable_equipupg(int index) {
  return equipupg_.Mutable(index);
}
inline ::PBUpg* PBEquipUpg::add_equipupg() {
  return equipupg_.Add();
}

// -------------------------------------------------------------------

// PBSuitProducer

// optional uint32 TempID = 1;
inline bool PBSuitProducer::has_tempid() const {
  return _has_bit(0);
}
inline void PBSuitProducer::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSuitProducer::tempid() const {
  return tempid_;
}
inline void PBSuitProducer::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 PropertyTempID = 2;
inline int PBSuitProducer::propertytempid_size() const {
  return propertytempid_.size();
}
inline void PBSuitProducer::clear_propertytempid() {
  propertytempid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSuitProducer::propertytempid() const {
  return propertytempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSuitProducer::mutable_propertytempid() {
  return &propertytempid_;
}
inline ::google::protobuf::uint32 PBSuitProducer::propertytempid(int index) const {
  return propertytempid_.Get(index);
}
inline void PBSuitProducer::set_propertytempid(int index, ::google::protobuf::uint32 value) {
  propertytempid_.Set(index, value);
}
inline void PBSuitProducer::add_propertytempid(::google::protobuf::uint32 value) {
  propertytempid_.Add(value);
}

// repeated uint32 UpgTempID = 3;
inline int PBSuitProducer::upgtempid_size() const {
  return upgtempid_.size();
}
inline void PBSuitProducer::clear_upgtempid() {
  upgtempid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSuitProducer::upgtempid() const {
  return upgtempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSuitProducer::mutable_upgtempid() {
  return &upgtempid_;
}
inline ::google::protobuf::uint32 PBSuitProducer::upgtempid(int index) const {
  return upgtempid_.Get(index);
}
inline void PBSuitProducer::set_upgtempid(int index, ::google::protobuf::uint32 value) {
  upgtempid_.Set(index, value);
}
inline void PBSuitProducer::add_upgtempid(::google::protobuf::uint32 value) {
  upgtempid_.Add(value);
}

// repeated uint32 ExtTempID = 4;
inline int PBSuitProducer::exttempid_size() const {
  return exttempid_.size();
}
inline void PBSuitProducer::clear_exttempid() {
  exttempid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSuitProducer::exttempid() const {
  return exttempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSuitProducer::mutable_exttempid() {
  return &exttempid_;
}
inline ::google::protobuf::uint32 PBSuitProducer::exttempid(int index) const {
  return exttempid_.Get(index);
}
inline void PBSuitProducer::set_exttempid(int index, ::google::protobuf::uint32 value) {
  exttempid_.Set(index, value);
}
inline void PBSuitProducer::add_exttempid(::google::protobuf::uint32 value) {
  exttempid_.Add(value);
}

// repeated string DescribeText = 5;
inline int PBSuitProducer::describetext_size() const {
  return describetext_.size();
}
inline void PBSuitProducer::clear_describetext() {
  describetext_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBSuitProducer::describetext() const {
  return describetext_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBSuitProducer::mutable_describetext() {
  return &describetext_;
}
inline const ::std::string& PBSuitProducer::describetext(int index) const {
  return describetext_.Get(index);
}
inline ::std::string* PBSuitProducer::mutable_describetext(int index) {
  return describetext_.Mutable(index);
}
inline void PBSuitProducer::set_describetext(int index, const ::std::string& value) {
  describetext_.Mutable(index)->assign(value);
}
inline void PBSuitProducer::set_describetext(int index, const char* value) {
  describetext_.Mutable(index)->assign(value);
}
inline void PBSuitProducer::set_describetext(int index, const char* value, size_t size) {
  describetext_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSuitProducer::add_describetext() {
  return describetext_.Add();
}
inline void PBSuitProducer::add_describetext(const ::std::string& value) {
  describetext_.Add()->assign(value);
}
inline void PBSuitProducer::add_describetext(const char* value) {
  describetext_.Add()->assign(value);
}
inline void PBSuitProducer::add_describetext(const char* value, size_t size) {
  describetext_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// PBSuitNormal

// optional uint32 TempID = 1;
inline bool PBSuitNormal::has_tempid() const {
  return _has_bit(0);
}
inline void PBSuitNormal::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSuitNormal::tempid() const {
  return tempid_;
}
inline void PBSuitNormal::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBSuitNormal::has_name() const {
  return _has_bit(1);
}
inline void PBSuitNormal::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBSuitNormal::name() const {
  return *name_;
}
inline void PBSuitNormal::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSuitNormal::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSuitNormal::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSuitNormal::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// repeated uint32 EquipTempID = 3;
inline int PBSuitNormal::equiptempid_size() const {
  return equiptempid_.size();
}
inline void PBSuitNormal::clear_equiptempid() {
  equiptempid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSuitNormal::equiptempid() const {
  return equiptempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSuitNormal::mutable_equiptempid() {
  return &equiptempid_;
}
inline ::google::protobuf::uint32 PBSuitNormal::equiptempid(int index) const {
  return equiptempid_.Get(index);
}
inline void PBSuitNormal::set_equiptempid(int index, ::google::protobuf::uint32 value) {
  equiptempid_.Set(index, value);
}
inline void PBSuitNormal::add_equiptempid(::google::protobuf::uint32 value) {
  equiptempid_.Add(value);
}

// optional string ActiveTitle = 4;
inline bool PBSuitNormal::has_activetitle() const {
  return _has_bit(3);
}
inline void PBSuitNormal::clear_activetitle() {
  if (activetitle_ != &_default_activetitle_) {
    activetitle_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBSuitNormal::activetitle() const {
  return *activetitle_;
}
inline void PBSuitNormal::set_activetitle(const ::std::string& value) {
  _set_bit(3);
  if (activetitle_ == &_default_activetitle_) {
    activetitle_ = new ::std::string;
  }
  activetitle_->assign(value);
}
inline void PBSuitNormal::set_activetitle(const char* value) {
  _set_bit(3);
  if (activetitle_ == &_default_activetitle_) {
    activetitle_ = new ::std::string;
  }
  activetitle_->assign(value);
}
inline void PBSuitNormal::set_activetitle(const char* value, size_t size) {
  _set_bit(3);
  if (activetitle_ == &_default_activetitle_) {
    activetitle_ = new ::std::string;
  }
  activetitle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSuitNormal::mutable_activetitle() {
  _set_bit(3);
  if (activetitle_ == &_default_activetitle_) {
    activetitle_ = new ::std::string;
  }
  return activetitle_;
}

// repeated uint32 PropertyTempID = 5;
inline int PBSuitNormal::propertytempid_size() const {
  return propertytempid_.size();
}
inline void PBSuitNormal::clear_propertytempid() {
  propertytempid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSuitNormal::propertytempid() const {
  return propertytempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSuitNormal::mutable_propertytempid() {
  return &propertytempid_;
}
inline ::google::protobuf::uint32 PBSuitNormal::propertytempid(int index) const {
  return propertytempid_.Get(index);
}
inline void PBSuitNormal::set_propertytempid(int index, ::google::protobuf::uint32 value) {
  propertytempid_.Set(index, value);
}
inline void PBSuitNormal::add_propertytempid(::google::protobuf::uint32 value) {
  propertytempid_.Add(value);
}

// -------------------------------------------------------------------

// PBSpell

// optional uint32 TempID = 1;
inline bool PBSpell::has_tempid() const {
  return _has_bit(0);
}
inline void PBSpell::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSpell::tempid() const {
  return tempid_;
}
inline void PBSpell::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBSpell::has_name() const {
  return _has_bit(1);
}
inline void PBSpell::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBSpell::name() const {
  return *name_;
}
inline void PBSpell::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSpell::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSpell::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSpell::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 SuitID = 3;
inline bool PBSpell::has_suitid() const {
  return _has_bit(2);
}
inline void PBSpell::clear_suitid() {
  suitid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSpell::suitid() const {
  return suitid_;
}
inline void PBSpell::set_suitid(::google::protobuf::uint32 value) {
  _set_bit(2);
  suitid_ = value;
}

// repeated uint32 LetterID = 4;
inline int PBSpell::letterid_size() const {
  return letterid_.size();
}
inline void PBSpell::clear_letterid() {
  letterid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSpell::letterid() const {
  return letterid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSpell::mutable_letterid() {
  return &letterid_;
}
inline ::google::protobuf::uint32 PBSpell::letterid(int index) const {
  return letterid_.Get(index);
}
inline void PBSpell::set_letterid(int index, ::google::protobuf::uint32 value) {
  letterid_.Set(index, value);
}
inline void PBSpell::add_letterid(::google::protobuf::uint32 value) {
  letterid_.Add(value);
}

// repeated uint32 Require = 5;
inline int PBSpell::require_size() const {
  return require_.size();
}
inline void PBSpell::clear_require() {
  require_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSpell::require() const {
  return require_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSpell::mutable_require() {
  return &require_;
}
inline ::google::protobuf::uint32 PBSpell::require(int index) const {
  return require_.Get(index);
}
inline void PBSpell::set_require(int index, ::google::protobuf::uint32 value) {
  require_.Set(index, value);
}
inline void PBSpell::add_require(::google::protobuf::uint32 value) {
  require_.Add(value);
}

// repeated uint32 PropertyTempID = 6;
inline int PBSpell::propertytempid_size() const {
  return propertytempid_.size();
}
inline void PBSpell::clear_propertytempid() {
  propertytempid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSpell::propertytempid() const {
  return propertytempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSpell::mutable_propertytempid() {
  return &propertytempid_;
}
inline ::google::protobuf::uint32 PBSpell::propertytempid(int index) const {
  return propertytempid_.Get(index);
}
inline void PBSpell::set_propertytempid(int index, ::google::protobuf::uint32 value) {
  propertytempid_.Set(index, value);
}
inline void PBSpell::add_propertytempid(::google::protobuf::uint32 value) {
  propertytempid_.Add(value);
}

// repeated string DescribeText = 7;
inline int PBSpell::describetext_size() const {
  return describetext_.size();
}
inline void PBSpell::clear_describetext() {
  describetext_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBSpell::describetext() const {
  return describetext_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBSpell::mutable_describetext() {
  return &describetext_;
}
inline const ::std::string& PBSpell::describetext(int index) const {
  return describetext_.Get(index);
}
inline ::std::string* PBSpell::mutable_describetext(int index) {
  return describetext_.Mutable(index);
}
inline void PBSpell::set_describetext(int index, const ::std::string& value) {
  describetext_.Mutable(index)->assign(value);
}
inline void PBSpell::set_describetext(int index, const char* value) {
  describetext_.Mutable(index)->assign(value);
}
inline void PBSpell::set_describetext(int index, const char* value, size_t size) {
  describetext_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSpell::add_describetext() {
  return describetext_.Add();
}
inline void PBSpell::add_describetext(const ::std::string& value) {
  describetext_.Add()->assign(value);
}
inline void PBSpell::add_describetext(const char* value) {
  describetext_.Add()->assign(value);
}
inline void PBSpell::add_describetext(const char* value, size_t size) {
  describetext_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// PBProduceEquip

// optional uint32 TempID = 1;
inline bool PBProduceEquip::has_tempid() const {
  return _has_bit(0);
}
inline void PBProduceEquip::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBProduceEquip::tempid() const {
  return tempid_;
}
inline void PBProduceEquip::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 Type = 2;
inline bool PBProduceEquip::has_type() const {
  return _has_bit(1);
}
inline void PBProduceEquip::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBProduceEquip::type() const {
  return type_;
}
inline void PBProduceEquip::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional uint32 DetailID1 = 3;
inline bool PBProduceEquip::has_detailid1() const {
  return _has_bit(2);
}
inline void PBProduceEquip::clear_detailid1() {
  detailid1_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBProduceEquip::detailid1() const {
  return detailid1_;
}
inline void PBProduceEquip::set_detailid1(::google::protobuf::uint32 value) {
  _set_bit(2);
  detailid1_ = value;
}

// optional uint32 DetailID2 = 4;
inline bool PBProduceEquip::has_detailid2() const {
  return _has_bit(3);
}
inline void PBProduceEquip::clear_detailid2() {
  detailid2_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBProduceEquip::detailid2() const {
  return detailid2_;
}
inline void PBProduceEquip::set_detailid2(::google::protobuf::uint32 value) {
  _set_bit(3);
  detailid2_ = value;
}

// optional uint32 Level = 5;
inline bool PBProduceEquip::has_level() const {
  return _has_bit(4);
}
inline void PBProduceEquip::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBProduceEquip::level() const {
  return level_;
}
inline void PBProduceEquip::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional string Name = 6;
inline bool PBProduceEquip::has_name() const {
  return _has_bit(5);
}
inline void PBProduceEquip::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& PBProduceEquip::name() const {
  return *name_;
}
inline void PBProduceEquip::set_name(const ::std::string& value) {
  _set_bit(5);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBProduceEquip::set_name(const char* value) {
  _set_bit(5);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBProduceEquip::set_name(const char* value, size_t size) {
  _set_bit(5);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBProduceEquip::mutable_name() {
  _set_bit(5);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 MaterialID = 7;
inline bool PBProduceEquip::has_materialid() const {
  return _has_bit(6);
}
inline void PBProduceEquip::clear_materialid() {
  materialid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBProduceEquip::materialid() const {
  return materialid_;
}
inline void PBProduceEquip::set_materialid(::google::protobuf::uint32 value) {
  _set_bit(6);
  materialid_ = value;
}

// optional uint32 MaterialNum = 8;
inline bool PBProduceEquip::has_materialnum() const {
  return _has_bit(7);
}
inline void PBProduceEquip::clear_materialnum() {
  materialnum_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBProduceEquip::materialnum() const {
  return materialnum_;
}
inline void PBProduceEquip::set_materialnum(::google::protobuf::uint32 value) {
  _set_bit(7);
  materialnum_ = value;
}

// optional uint32 MaterialRank = 9;
inline bool PBProduceEquip::has_materialrank() const {
  return _has_bit(8);
}
inline void PBProduceEquip::clear_materialrank() {
  materialrank_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBProduceEquip::materialrank() const {
  return materialrank_;
}
inline void PBProduceEquip::set_materialrank(::google::protobuf::uint32 value) {
  _set_bit(8);
  materialrank_ = value;
}

// optional uint32 ItemID1 = 10;
inline bool PBProduceEquip::has_itemid1() const {
  return _has_bit(9);
}
inline void PBProduceEquip::clear_itemid1() {
  itemid1_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBProduceEquip::itemid1() const {
  return itemid1_;
}
inline void PBProduceEquip::set_itemid1(::google::protobuf::uint32 value) {
  _set_bit(9);
  itemid1_ = value;
}

// optional uint32 ItemRand1 = 11;
inline bool PBProduceEquip::has_itemrand1() const {
  return _has_bit(10);
}
inline void PBProduceEquip::clear_itemrand1() {
  itemrand1_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBProduceEquip::itemrand1() const {
  return itemrand1_;
}
inline void PBProduceEquip::set_itemrand1(::google::protobuf::uint32 value) {
  _set_bit(10);
  itemrand1_ = value;
}

// optional uint32 ItemID2 = 12;
inline bool PBProduceEquip::has_itemid2() const {
  return _has_bit(11);
}
inline void PBProduceEquip::clear_itemid2() {
  itemid2_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBProduceEquip::itemid2() const {
  return itemid2_;
}
inline void PBProduceEquip::set_itemid2(::google::protobuf::uint32 value) {
  _set_bit(11);
  itemid2_ = value;
}

// optional uint32 ItemRand2 = 13;
inline bool PBProduceEquip::has_itemrand2() const {
  return _has_bit(12);
}
inline void PBProduceEquip::clear_itemrand2() {
  itemrand2_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBProduceEquip::itemrand2() const {
  return itemrand2_;
}
inline void PBProduceEquip::set_itemrand2(::google::protobuf::uint32 value) {
  _set_bit(12);
  itemrand2_ = value;
}

// optional uint32 ItemID3 = 14;
inline bool PBProduceEquip::has_itemid3() const {
  return _has_bit(13);
}
inline void PBProduceEquip::clear_itemid3() {
  itemid3_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBProduceEquip::itemid3() const {
  return itemid3_;
}
inline void PBProduceEquip::set_itemid3(::google::protobuf::uint32 value) {
  _set_bit(13);
  itemid3_ = value;
}

// optional uint32 ItemRand3 = 15;
inline bool PBProduceEquip::has_itemrand3() const {
  return _has_bit(14);
}
inline void PBProduceEquip::clear_itemrand3() {
  itemrand3_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBProduceEquip::itemrand3() const {
  return itemrand3_;
}
inline void PBProduceEquip::set_itemrand3(::google::protobuf::uint32 value) {
  _set_bit(14);
  itemrand3_ = value;
}

// optional uint32 Money = 16;
inline bool PBProduceEquip::has_money() const {
  return _has_bit(15);
}
inline void PBProduceEquip::clear_money() {
  money_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBProduceEquip::money() const {
  return money_;
}
inline void PBProduceEquip::set_money(::google::protobuf::uint32 value) {
  _set_bit(15);
  money_ = value;
}

// optional uint32 BindMoney = 17;
inline bool PBProduceEquip::has_bindmoney() const {
  return _has_bit(16);
}
inline void PBProduceEquip::clear_bindmoney() {
  bindmoney_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBProduceEquip::bindmoney() const {
  return bindmoney_;
}
inline void PBProduceEquip::set_bindmoney(::google::protobuf::uint32 value) {
  _set_bit(16);
  bindmoney_ = value;
}

// optional uint32 IconID = 18;
inline bool PBProduceEquip::has_iconid() const {
  return _has_bit(17);
}
inline void PBProduceEquip::clear_iconid() {
  iconid_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBProduceEquip::iconid() const {
  return iconid_;
}
inline void PBProduceEquip::set_iconid(::google::protobuf::uint32 value) {
  _set_bit(17);
  iconid_ = value;
}

// optional string Describe = 19;
inline bool PBProduceEquip::has_describe() const {
  return _has_bit(18);
}
inline void PBProduceEquip::clear_describe() {
  if (describe_ != &_default_describe_) {
    describe_->clear();
  }
  _clear_bit(18);
}
inline const ::std::string& PBProduceEquip::describe() const {
  return *describe_;
}
inline void PBProduceEquip::set_describe(const ::std::string& value) {
  _set_bit(18);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void PBProduceEquip::set_describe(const char* value) {
  _set_bit(18);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void PBProduceEquip::set_describe(const char* value, size_t size) {
  _set_bit(18);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBProduceEquip::mutable_describe() {
  _set_bit(18);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  return describe_;
}

// optional uint32 Exp = 20;
inline bool PBProduceEquip::has_exp() const {
  return _has_bit(19);
}
inline void PBProduceEquip::clear_exp() {
  exp_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBProduceEquip::exp() const {
  return exp_;
}
inline void PBProduceEquip::set_exp(::google::protobuf::uint32 value) {
  _set_bit(19);
  exp_ = value;
}

// -------------------------------------------------------------------

// PBProducePhysic

// optional uint32 TempID = 1;
inline bool PBProducePhysic::has_tempid() const {
  return _has_bit(0);
}
inline void PBProducePhysic::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBProducePhysic::tempid() const {
  return tempid_;
}
inline void PBProducePhysic::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 Type = 2;
inline bool PBProducePhysic::has_type() const {
  return _has_bit(1);
}
inline void PBProducePhysic::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBProducePhysic::type() const {
  return type_;
}
inline void PBProducePhysic::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional uint32 Level = 3;
inline bool PBProducePhysic::has_level() const {
  return _has_bit(2);
}
inline void PBProducePhysic::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBProducePhysic::level() const {
  return level_;
}
inline void PBProducePhysic::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// optional string Name = 4;
inline bool PBProducePhysic::has_name() const {
  return _has_bit(3);
}
inline void PBProducePhysic::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBProducePhysic::name() const {
  return *name_;
}
inline void PBProducePhysic::set_name(const ::std::string& value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBProducePhysic::set_name(const char* value) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBProducePhysic::set_name(const char* value, size_t size) {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBProducePhysic::mutable_name() {
  _set_bit(3);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 MaterialID = 5;
inline bool PBProducePhysic::has_materialid() const {
  return _has_bit(4);
}
inline void PBProducePhysic::clear_materialid() {
  materialid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBProducePhysic::materialid() const {
  return materialid_;
}
inline void PBProducePhysic::set_materialid(::google::protobuf::uint32 value) {
  _set_bit(4);
  materialid_ = value;
}

// optional uint32 MaterialNum = 6;
inline bool PBProducePhysic::has_materialnum() const {
  return _has_bit(5);
}
inline void PBProducePhysic::clear_materialnum() {
  materialnum_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBProducePhysic::materialnum() const {
  return materialnum_;
}
inline void PBProducePhysic::set_materialnum(::google::protobuf::uint32 value) {
  _set_bit(5);
  materialnum_ = value;
}

// optional uint32 ItemID = 7;
inline bool PBProducePhysic::has_itemid() const {
  return _has_bit(6);
}
inline void PBProducePhysic::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBProducePhysic::itemid() const {
  return itemid_;
}
inline void PBProducePhysic::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(6);
  itemid_ = value;
}

// optional uint32 Exp = 8;
inline bool PBProducePhysic::has_exp() const {
  return _has_bit(7);
}
inline void PBProducePhysic::clear_exp() {
  exp_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBProducePhysic::exp() const {
  return exp_;
}
inline void PBProducePhysic::set_exp(::google::protobuf::uint32 value) {
  _set_bit(7);
  exp_ = value;
}

// optional uint32 Money = 9;
inline bool PBProducePhysic::has_money() const {
  return _has_bit(8);
}
inline void PBProducePhysic::clear_money() {
  money_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBProducePhysic::money() const {
  return money_;
}
inline void PBProducePhysic::set_money(::google::protobuf::uint32 value) {
  _set_bit(8);
  money_ = value;
}

// optional uint32 BindMoney = 10;
inline bool PBProducePhysic::has_bindmoney() const {
  return _has_bit(9);
}
inline void PBProducePhysic::clear_bindmoney() {
  bindmoney_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBProducePhysic::bindmoney() const {
  return bindmoney_;
}
inline void PBProducePhysic::set_bindmoney(::google::protobuf::uint32 value) {
  _set_bit(9);
  bindmoney_ = value;
}

// -------------------------------------------------------------------

// PBOpenSlot

// optional uint32 TempID = 1;
inline bool PBOpenSlot::has_tempid() const {
  return _has_bit(0);
}
inline void PBOpenSlot::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBOpenSlot::tempid() const {
  return tempid_;
}
inline void PBOpenSlot::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 SlotLevel = 2;
inline int PBOpenSlot::slotlevel_size() const {
  return slotlevel_.size();
}
inline void PBOpenSlot::clear_slotlevel() {
  slotlevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOpenSlot::slotlevel() const {
  return slotlevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOpenSlot::mutable_slotlevel() {
  return &slotlevel_;
}
inline ::google::protobuf::uint32 PBOpenSlot::slotlevel(int index) const {
  return slotlevel_.Get(index);
}
inline void PBOpenSlot::set_slotlevel(int index, ::google::protobuf::uint32 value) {
  slotlevel_.Set(index, value);
}
inline void PBOpenSlot::add_slotlevel(::google::protobuf::uint32 value) {
  slotlevel_.Add(value);
}

// repeated uint32 SlotNumber = 3;
inline int PBOpenSlot::slotnumber_size() const {
  return slotnumber_.size();
}
inline void PBOpenSlot::clear_slotnumber() {
  slotnumber_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOpenSlot::slotnumber() const {
  return slotnumber_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOpenSlot::mutable_slotnumber() {
  return &slotnumber_;
}
inline ::google::protobuf::uint32 PBOpenSlot::slotnumber(int index) const {
  return slotnumber_.Get(index);
}
inline void PBOpenSlot::set_slotnumber(int index, ::google::protobuf::uint32 value) {
  slotnumber_.Set(index, value);
}
inline void PBOpenSlot::add_slotnumber(::google::protobuf::uint32 value) {
  slotnumber_.Add(value);
}

// -------------------------------------------------------------------

// PBCompose

// optional uint32 TempID = 1;
inline bool PBCompose::has_tempid() const {
  return _has_bit(0);
}
inline void PBCompose::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCompose::tempid() const {
  return tempid_;
}
inline void PBCompose::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 MaterialID = 2;
inline bool PBCompose::has_materialid() const {
  return _has_bit(1);
}
inline void PBCompose::clear_materialid() {
  materialid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBCompose::materialid() const {
  return materialid_;
}
inline void PBCompose::set_materialid(::google::protobuf::uint32 value) {
  _set_bit(1);
  materialid_ = value;
}

// optional uint32 MaterialNum = 3;
inline bool PBCompose::has_materialnum() const {
  return _has_bit(2);
}
inline void PBCompose::clear_materialnum() {
  materialnum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBCompose::materialnum() const {
  return materialnum_;
}
inline void PBCompose::set_materialnum(::google::protobuf::uint32 value) {
  _set_bit(2);
  materialnum_ = value;
}

// optional uint32 ItemID = 4;
inline bool PBCompose::has_itemid() const {
  return _has_bit(3);
}
inline void PBCompose::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBCompose::itemid() const {
  return itemid_;
}
inline void PBCompose::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(3);
  itemid_ = value;
}

// optional uint32 ItemNum = 5;
inline bool PBCompose::has_itemnum() const {
  return _has_bit(4);
}
inline void PBCompose::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBCompose::itemnum() const {
  return itemnum_;
}
inline void PBCompose::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemnum_ = value;
}

// -------------------------------------------------------------------

// PBMultiCompose

// optional uint32 TempID = 1;
inline bool PBMultiCompose::has_tempid() const {
  return _has_bit(0);
}
inline void PBMultiCompose::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMultiCompose::tempid() const {
  return tempid_;
}
inline void PBMultiCompose::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Describe = 2;
inline bool PBMultiCompose::has_describe() const {
  return _has_bit(1);
}
inline void PBMultiCompose::clear_describe() {
  if (describe_ != &_default_describe_) {
    describe_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBMultiCompose::describe() const {
  return *describe_;
}
inline void PBMultiCompose::set_describe(const ::std::string& value) {
  _set_bit(1);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void PBMultiCompose::set_describe(const char* value) {
  _set_bit(1);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void PBMultiCompose::set_describe(const char* value, size_t size) {
  _set_bit(1);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMultiCompose::mutable_describe() {
  _set_bit(1);
  if (describe_ == &_default_describe_) {
    describe_ = new ::std::string;
  }
  return describe_;
}

// repeated uint32 MaterialID = 3;
inline int PBMultiCompose::materialid_size() const {
  return materialid_.size();
}
inline void PBMultiCompose::clear_materialid() {
  materialid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::materialid() const {
  return materialid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_materialid() {
  return &materialid_;
}
inline ::google::protobuf::uint32 PBMultiCompose::materialid(int index) const {
  return materialid_.Get(index);
}
inline void PBMultiCompose::set_materialid(int index, ::google::protobuf::uint32 value) {
  materialid_.Set(index, value);
}
inline void PBMultiCompose::add_materialid(::google::protobuf::uint32 value) {
  materialid_.Add(value);
}

// repeated uint32 MaterialNum = 4;
inline int PBMultiCompose::materialnum_size() const {
  return materialnum_.size();
}
inline void PBMultiCompose::clear_materialnum() {
  materialnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::materialnum() const {
  return materialnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_materialnum() {
  return &materialnum_;
}
inline ::google::protobuf::uint32 PBMultiCompose::materialnum(int index) const {
  return materialnum_.Get(index);
}
inline void PBMultiCompose::set_materialnum(int index, ::google::protobuf::uint32 value) {
  materialnum_.Set(index, value);
}
inline void PBMultiCompose::add_materialnum(::google::protobuf::uint32 value) {
  materialnum_.Add(value);
}

// repeated uint32 ItemID = 5;
inline int PBMultiCompose::itemid_size() const {
  return itemid_.size();
}
inline void PBMultiCompose::clear_itemid() {
  itemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_itemid() {
  return &itemid_;
}
inline ::google::protobuf::uint32 PBMultiCompose::itemid(int index) const {
  return itemid_.Get(index);
}
inline void PBMultiCompose::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
}
inline void PBMultiCompose::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
}

// repeated uint32 ItemNum = 6;
inline int PBMultiCompose::itemnum_size() const {
  return itemnum_.size();
}
inline void PBMultiCompose::clear_itemnum() {
  itemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_itemnum() {
  return &itemnum_;
}
inline ::google::protobuf::uint32 PBMultiCompose::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void PBMultiCompose::set_itemnum(int index, ::google::protobuf::uint32 value) {
  itemnum_.Set(index, value);
}
inline void PBMultiCompose::add_itemnum(::google::protobuf::uint32 value) {
  itemnum_.Add(value);
}

// optional uint32 Exp = 7;
inline bool PBMultiCompose::has_exp() const {
  return _has_bit(6);
}
inline void PBMultiCompose::clear_exp() {
  exp_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBMultiCompose::exp() const {
  return exp_;
}
inline void PBMultiCompose::set_exp(::google::protobuf::uint32 value) {
  _set_bit(6);
  exp_ = value;
}

// optional uint32 Order = 8;
inline bool PBMultiCompose::has_order() const {
  return _has_bit(7);
}
inline void PBMultiCompose::clear_order() {
  order_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBMultiCompose::order() const {
  return order_;
}
inline void PBMultiCompose::set_order(::google::protobuf::uint32 value) {
  _set_bit(7);
  order_ = value;
}

// optional uint32 LifeSkillType = 9;
inline bool PBMultiCompose::has_lifeskilltype() const {
  return _has_bit(8);
}
inline void PBMultiCompose::clear_lifeskilltype() {
  lifeskilltype_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMultiCompose::lifeskilltype() const {
  return lifeskilltype_;
}
inline void PBMultiCompose::set_lifeskilltype(::google::protobuf::uint32 value) {
  _set_bit(8);
  lifeskilltype_ = value;
}

// optional uint32 LifeSkillKind = 10;
inline bool PBMultiCompose::has_lifeskillkind() const {
  return _has_bit(9);
}
inline void PBMultiCompose::clear_lifeskillkind() {
  lifeskillkind_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBMultiCompose::lifeskillkind() const {
  return lifeskillkind_;
}
inline void PBMultiCompose::set_lifeskillkind(::google::protobuf::uint32 value) {
  _set_bit(9);
  lifeskillkind_ = value;
}

// optional uint32 SpecializedDegree = 11;
inline bool PBMultiCompose::has_specializeddegree() const {
  return _has_bit(10);
}
inline void PBMultiCompose::clear_specializeddegree() {
  specializeddegree_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBMultiCompose::specializeddegree() const {
  return specializeddegree_;
}
inline void PBMultiCompose::set_specializeddegree(::google::protobuf::uint32 value) {
  _set_bit(10);
  specializeddegree_ = value;
}

// optional uint32 LifeComposeType = 12;
inline bool PBMultiCompose::has_lifecomposetype() const {
  return _has_bit(11);
}
inline void PBMultiCompose::clear_lifecomposetype() {
  lifecomposetype_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBMultiCompose::lifecomposetype() const {
  return lifecomposetype_;
}
inline void PBMultiCompose::set_lifecomposetype(::google::protobuf::uint32 value) {
  _set_bit(11);
  lifecomposetype_ = value;
}

// optional uint32 CreatValue = 13;
inline bool PBMultiCompose::has_creatvalue() const {
  return _has_bit(12);
}
inline void PBMultiCompose::clear_creatvalue() {
  creatvalue_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBMultiCompose::creatvalue() const {
  return creatvalue_;
}
inline void PBMultiCompose::set_creatvalue(::google::protobuf::uint32 value) {
  _set_bit(12);
  creatvalue_ = value;
}

// optional uint32 StudyMoney = 14;
inline bool PBMultiCompose::has_studymoney() const {
  return _has_bit(13);
}
inline void PBMultiCompose::clear_studymoney() {
  studymoney_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBMultiCompose::studymoney() const {
  return studymoney_;
}
inline void PBMultiCompose::set_studymoney(::google::protobuf::uint32 value) {
  _set_bit(13);
  studymoney_ = value;
}

// optional uint32 SkillCreatDegree = 15;
inline bool PBMultiCompose::has_skillcreatdegree() const {
  return _has_bit(14);
}
inline void PBMultiCompose::clear_skillcreatdegree() {
  skillcreatdegree_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBMultiCompose::skillcreatdegree() const {
  return skillcreatdegree_;
}
inline void PBMultiCompose::set_skillcreatdegree(::google::protobuf::uint32 value) {
  _set_bit(14);
  skillcreatdegree_ = value;
}

// repeated uint32 value = 16;
inline int PBMultiCompose::value_size() const {
  return value_.size();
}
inline void PBMultiCompose::clear_value() {
  value_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::value() const {
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_value() {
  return &value_;
}
inline ::google::protobuf::uint32 PBMultiCompose::value(int index) const {
  return value_.Get(index);
}
inline void PBMultiCompose::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
}
inline void PBMultiCompose::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
}

// repeated uint32 Probality = 17;
inline int PBMultiCompose::probality_size() const {
  return probality_.size();
}
inline void PBMultiCompose::clear_probality() {
  probality_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::probality() const {
  return probality_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_probality() {
  return &probality_;
}
inline ::google::protobuf::uint32 PBMultiCompose::probality(int index) const {
  return probality_.Get(index);
}
inline void PBMultiCompose::set_probality(int index, ::google::protobuf::uint32 value) {
  probality_.Set(index, value);
}
inline void PBMultiCompose::add_probality(::google::protobuf::uint32 value) {
  probality_.Add(value);
}

// repeated uint32 DegreeValue = 18;
inline int PBMultiCompose::degreevalue_size() const {
  return degreevalue_.size();
}
inline void PBMultiCompose::clear_degreevalue() {
  degreevalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::degreevalue() const {
  return degreevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_degreevalue() {
  return &degreevalue_;
}
inline ::google::protobuf::uint32 PBMultiCompose::degreevalue(int index) const {
  return degreevalue_.Get(index);
}
inline void PBMultiCompose::set_degreevalue(int index, ::google::protobuf::uint32 value) {
  degreevalue_.Set(index, value);
}
inline void PBMultiCompose::add_degreevalue(::google::protobuf::uint32 value) {
  degreevalue_.Add(value);
}

// optional uint32 ApNeedCost = 19;
inline bool PBMultiCompose::has_apneedcost() const {
  return _has_bit(18);
}
inline void PBMultiCompose::clear_apneedcost() {
  apneedcost_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBMultiCompose::apneedcost() const {
  return apneedcost_;
}
inline void PBMultiCompose::set_apneedcost(::google::protobuf::uint32 value) {
  _set_bit(18);
  apneedcost_ = value;
}

// optional uint32 UsedTimes = 20;
inline bool PBMultiCompose::has_usedtimes() const {
  return _has_bit(19);
}
inline void PBMultiCompose::clear_usedtimes() {
  usedtimes_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBMultiCompose::usedtimes() const {
  return usedtimes_;
}
inline void PBMultiCompose::set_usedtimes(::google::protobuf::uint32 value) {
  _set_bit(19);
  usedtimes_ = value;
}

// optional uint32 MinValue = 21;
inline bool PBMultiCompose::has_minvalue() const {
  return _has_bit(20);
}
inline void PBMultiCompose::clear_minvalue() {
  minvalue_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBMultiCompose::minvalue() const {
  return minvalue_;
}
inline void PBMultiCompose::set_minvalue(::google::protobuf::uint32 value) {
  _set_bit(20);
  minvalue_ = value;
}

// optional uint32 ComposeType = 22;
inline bool PBMultiCompose::has_composetype() const {
  return _has_bit(21);
}
inline void PBMultiCompose::clear_composetype() {
  composetype_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBMultiCompose::composetype() const {
  return composetype_;
}
inline void PBMultiCompose::set_composetype(::google::protobuf::uint32 value) {
  _set_bit(21);
  composetype_ = value;
}

// optional uint32 EquipMetierType = 23;
inline bool PBMultiCompose::has_equipmetiertype() const {
  return _has_bit(22);
}
inline void PBMultiCompose::clear_equipmetiertype() {
  equipmetiertype_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBMultiCompose::equipmetiertype() const {
  return equipmetiertype_;
}
inline void PBMultiCompose::set_equipmetiertype(::google::protobuf::uint32 value) {
  _set_bit(22);
  equipmetiertype_ = value;
}

// optional uint32 SrcEquipID = 24;
inline bool PBMultiCompose::has_srcequipid() const {
  return _has_bit(23);
}
inline void PBMultiCompose::clear_srcequipid() {
  srcequipid_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBMultiCompose::srcequipid() const {
  return srcequipid_;
}
inline void PBMultiCompose::set_srcequipid(::google::protobuf::uint32 value) {
  _set_bit(23);
  srcequipid_ = value;
}

// optional uint32 DesEquipID = 25;
inline bool PBMultiCompose::has_desequipid() const {
  return _has_bit(24);
}
inline void PBMultiCompose::clear_desequipid() {
  desequipid_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBMultiCompose::desequipid() const {
  return desequipid_;
}
inline void PBMultiCompose::set_desequipid(::google::protobuf::uint32 value) {
  _set_bit(24);
  desequipid_ = value;
}

// optional uint32 Contribute = 26;
inline bool PBMultiCompose::has_contribute() const {
  return _has_bit(25);
}
inline void PBMultiCompose::clear_contribute() {
  contribute_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBMultiCompose::contribute() const {
  return contribute_;
}
inline void PBMultiCompose::set_contribute(::google::protobuf::uint32 value) {
  _set_bit(25);
  contribute_ = value;
}

// repeated uint32 UpgItemID = 27;
inline int PBMultiCompose::upgitemid_size() const {
  return upgitemid_.size();
}
inline void PBMultiCompose::clear_upgitemid() {
  upgitemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::upgitemid() const {
  return upgitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_upgitemid() {
  return &upgitemid_;
}
inline ::google::protobuf::uint32 PBMultiCompose::upgitemid(int index) const {
  return upgitemid_.Get(index);
}
inline void PBMultiCompose::set_upgitemid(int index, ::google::protobuf::uint32 value) {
  upgitemid_.Set(index, value);
}
inline void PBMultiCompose::add_upgitemid(::google::protobuf::uint32 value) {
  upgitemid_.Add(value);
}

// repeated uint32 UpgItemNum = 28;
inline int PBMultiCompose::upgitemnum_size() const {
  return upgitemnum_.size();
}
inline void PBMultiCompose::clear_upgitemnum() {
  upgitemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::upgitemnum() const {
  return upgitemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_upgitemnum() {
  return &upgitemnum_;
}
inline ::google::protobuf::uint32 PBMultiCompose::upgitemnum(int index) const {
  return upgitemnum_.Get(index);
}
inline void PBMultiCompose::set_upgitemnum(int index, ::google::protobuf::uint32 value) {
  upgitemnum_.Set(index, value);
}
inline void PBMultiCompose::add_upgitemnum(::google::protobuf::uint32 value) {
  upgitemnum_.Add(value);
}

// repeated uint32 NeedValueType = 29;
inline int PBMultiCompose::needvaluetype_size() const {
  return needvaluetype_.size();
}
inline void PBMultiCompose::clear_needvaluetype() {
  needvaluetype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::needvaluetype() const {
  return needvaluetype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_needvaluetype() {
  return &needvaluetype_;
}
inline ::google::protobuf::uint32 PBMultiCompose::needvaluetype(int index) const {
  return needvaluetype_.Get(index);
}
inline void PBMultiCompose::set_needvaluetype(int index, ::google::protobuf::uint32 value) {
  needvaluetype_.Set(index, value);
}
inline void PBMultiCompose::add_needvaluetype(::google::protobuf::uint32 value) {
  needvaluetype_.Add(value);
}

// repeated uint32 NeedValue = 30;
inline int PBMultiCompose::needvalue_size() const {
  return needvalue_.size();
}
inline void PBMultiCompose::clear_needvalue() {
  needvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiCompose::needvalue() const {
  return needvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiCompose::mutable_needvalue() {
  return &needvalue_;
}
inline ::google::protobuf::uint32 PBMultiCompose::needvalue(int index) const {
  return needvalue_.Get(index);
}
inline void PBMultiCompose::set_needvalue(int index, ::google::protobuf::uint32 value) {
  needvalue_.Set(index, value);
}
inline void PBMultiCompose::add_needvalue(::google::protobuf::uint32 value) {
  needvalue_.Add(value);
}

// -------------------------------------------------------------------

// PBTeleTable

// optional uint32 TempID = 1;
inline bool PBTeleTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBTeleTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTeleTable::tempid() const {
  return tempid_;
}
inline void PBTeleTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 LineID = 2;
inline int PBTeleTable::lineid_size() const {
  return lineid_.size();
}
inline void PBTeleTable::clear_lineid() {
  lineid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeleTable::lineid() const {
  return lineid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeleTable::mutable_lineid() {
  return &lineid_;
}
inline ::google::protobuf::uint32 PBTeleTable::lineid(int index) const {
  return lineid_.Get(index);
}
inline void PBTeleTable::set_lineid(int index, ::google::protobuf::uint32 value) {
  lineid_.Set(index, value);
}
inline void PBTeleTable::add_lineid(::google::protobuf::uint32 value) {
  lineid_.Add(value);
}

// repeated uint32 MapID = 3;
inline int PBTeleTable::mapid_size() const {
  return mapid_.size();
}
inline void PBTeleTable::clear_mapid() {
  mapid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeleTable::mapid() const {
  return mapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeleTable::mutable_mapid() {
  return &mapid_;
}
inline ::google::protobuf::uint32 PBTeleTable::mapid(int index) const {
  return mapid_.Get(index);
}
inline void PBTeleTable::set_mapid(int index, ::google::protobuf::uint32 value) {
  mapid_.Set(index, value);
}
inline void PBTeleTable::add_mapid(::google::protobuf::uint32 value) {
  mapid_.Add(value);
}

// repeated uint32 PosX = 4;
inline int PBTeleTable::posx_size() const {
  return posx_.size();
}
inline void PBTeleTable::clear_posx() {
  posx_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeleTable::posx() const {
  return posx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeleTable::mutable_posx() {
  return &posx_;
}
inline ::google::protobuf::uint32 PBTeleTable::posx(int index) const {
  return posx_.Get(index);
}
inline void PBTeleTable::set_posx(int index, ::google::protobuf::uint32 value) {
  posx_.Set(index, value);
}
inline void PBTeleTable::add_posx(::google::protobuf::uint32 value) {
  posx_.Add(value);
}

// repeated uint32 PosY = 5;
inline int PBTeleTable::posy_size() const {
  return posy_.size();
}
inline void PBTeleTable::clear_posy() {
  posy_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeleTable::posy() const {
  return posy_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeleTable::mutable_posy() {
  return &posy_;
}
inline ::google::protobuf::uint32 PBTeleTable::posy(int index) const {
  return posy_.Get(index);
}
inline void PBTeleTable::set_posy(int index, ::google::protobuf::uint32 value) {
  posy_.Set(index, value);
}
inline void PBTeleTable::add_posy(::google::protobuf::uint32 value) {
  posy_.Add(value);
}

// repeated string Describe = 6;
inline int PBTeleTable::describe_size() const {
  return describe_.size();
}
inline void PBTeleTable::clear_describe() {
  describe_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBTeleTable::describe() const {
  return describe_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBTeleTable::mutable_describe() {
  return &describe_;
}
inline const ::std::string& PBTeleTable::describe(int index) const {
  return describe_.Get(index);
}
inline ::std::string* PBTeleTable::mutable_describe(int index) {
  return describe_.Mutable(index);
}
inline void PBTeleTable::set_describe(int index, const ::std::string& value) {
  describe_.Mutable(index)->assign(value);
}
inline void PBTeleTable::set_describe(int index, const char* value) {
  describe_.Mutable(index)->assign(value);
}
inline void PBTeleTable::set_describe(int index, const char* value, size_t size) {
  describe_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeleTable::add_describe() {
  return describe_.Add();
}
inline void PBTeleTable::add_describe(const ::std::string& value) {
  describe_.Add()->assign(value);
}
inline void PBTeleTable::add_describe(const char* value) {
  describe_.Add()->assign(value);
}
inline void PBTeleTable::add_describe(const char* value, size_t size) {
  describe_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 Money = 7;
inline int PBTeleTable::money_size() const {
  return money_.size();
}
inline void PBTeleTable::clear_money() {
  money_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeleTable::money() const {
  return money_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeleTable::mutable_money() {
  return &money_;
}
inline ::google::protobuf::uint32 PBTeleTable::money(int index) const {
  return money_.Get(index);
}
inline void PBTeleTable::set_money(int index, ::google::protobuf::uint32 value) {
  money_.Set(index, value);
}
inline void PBTeleTable::add_money(::google::protobuf::uint32 value) {
  money_.Add(value);
}

// optional uint32 BindMoney = 8;
inline bool PBTeleTable::has_bindmoney() const {
  return _has_bit(7);
}
inline void PBTeleTable::clear_bindmoney() {
  bindmoney_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBTeleTable::bindmoney() const {
  return bindmoney_;
}
inline void PBTeleTable::set_bindmoney(::google::protobuf::uint32 value) {
  _set_bit(7);
  bindmoney_ = value;
}

// repeated uint32 NeedTempID = 9;
inline int PBTeleTable::needtempid_size() const {
  return needtempid_.size();
}
inline void PBTeleTable::clear_needtempid() {
  needtempid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeleTable::needtempid() const {
  return needtempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeleTable::mutable_needtempid() {
  return &needtempid_;
}
inline ::google::protobuf::uint32 PBTeleTable::needtempid(int index) const {
  return needtempid_.Get(index);
}
inline void PBTeleTable::set_needtempid(int index, ::google::protobuf::uint32 value) {
  needtempid_.Set(index, value);
}
inline void PBTeleTable::add_needtempid(::google::protobuf::uint32 value) {
  needtempid_.Add(value);
}

// repeated uint32 NeedBuffID = 10;
inline int PBTeleTable::needbuffid_size() const {
  return needbuffid_.size();
}
inline void PBTeleTable::clear_needbuffid() {
  needbuffid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeleTable::needbuffid() const {
  return needbuffid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeleTable::mutable_needbuffid() {
  return &needbuffid_;
}
inline ::google::protobuf::uint32 PBTeleTable::needbuffid(int index) const {
  return needbuffid_.Get(index);
}
inline void PBTeleTable::set_needbuffid(int index, ::google::protobuf::uint32 value) {
  needbuffid_.Set(index, value);
}
inline void PBTeleTable::add_needbuffid(::google::protobuf::uint32 value) {
  needbuffid_.Add(value);
}

// repeated uint32 NeedLevel = 11;
inline int PBTeleTable::needlevel_size() const {
  return needlevel_.size();
}
inline void PBTeleTable::clear_needlevel() {
  needlevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeleTable::needlevel() const {
  return needlevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeleTable::mutable_needlevel() {
  return &needlevel_;
}
inline ::google::protobuf::uint32 PBTeleTable::needlevel(int index) const {
  return needlevel_.Get(index);
}
inline void PBTeleTable::set_needlevel(int index, ::google::protobuf::uint32 value) {
  needlevel_.Set(index, value);
}
inline void PBTeleTable::add_needlevel(::google::protobuf::uint32 value) {
  needlevel_.Add(value);
}

// -------------------------------------------------------------------

// PBData

// optional uint32 TempID = 1;
inline bool PBData::has_tempid() const {
  return _has_bit(0);
}
inline void PBData::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBData::tempid() const {
  return tempid_;
}
inline void PBData::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 LevelFix = 2;
inline int PBData::levelfix_size() const {
  return levelfix_.size();
}
inline void PBData::clear_levelfix() {
  levelfix_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBData::levelfix() const {
  return levelfix_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBData::mutable_levelfix() {
  return &levelfix_;
}
inline ::google::protobuf::uint32 PBData::levelfix(int index) const {
  return levelfix_.Get(index);
}
inline void PBData::set_levelfix(int index, ::google::protobuf::uint32 value) {
  levelfix_.Set(index, value);
}
inline void PBData::add_levelfix(::google::protobuf::uint32 value) {
  levelfix_.Add(value);
}

// repeated uint32 TeamFix = 3;
inline int PBData::teamfix_size() const {
  return teamfix_.size();
}
inline void PBData::clear_teamfix() {
  teamfix_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBData::teamfix() const {
  return teamfix_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBData::mutable_teamfix() {
  return &teamfix_;
}
inline ::google::protobuf::uint32 PBData::teamfix(int index) const {
  return teamfix_.Get(index);
}
inline void PBData::set_teamfix(int index, ::google::protobuf::uint32 value) {
  teamfix_.Set(index, value);
}
inline void PBData::add_teamfix(::google::protobuf::uint32 value) {
  teamfix_.Add(value);
}

// -------------------------------------------------------------------

// PBPetData

// optional uint32 NameColor = 1;
inline bool PBPetData::has_namecolor() const {
  return _has_bit(0);
}
inline void PBPetData::clear_namecolor() {
  namecolor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPetData::namecolor() const {
  return namecolor_;
}
inline void PBPetData::set_namecolor(::google::protobuf::uint32 value) {
  _set_bit(0);
  namecolor_ = value;
}

// optional uint32 AttackType = 2;
inline bool PBPetData::has_attacktype() const {
  return _has_bit(1);
}
inline void PBPetData::clear_attacktype() {
  attacktype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPetData::attacktype() const {
  return attacktype_;
}
inline void PBPetData::set_attacktype(::google::protobuf::uint32 value) {
  _set_bit(1);
  attacktype_ = value;
}

// optional uint32 PAttackUp = 3;
inline bool PBPetData::has_pattackup() const {
  return _has_bit(2);
}
inline void PBPetData::clear_pattackup() {
  pattackup_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBPetData::pattackup() const {
  return pattackup_;
}
inline void PBPetData::set_pattackup(::google::protobuf::uint32 value) {
  _set_bit(2);
  pattackup_ = value;
}

// optional uint32 PAttackLow = 4;
inline bool PBPetData::has_pattacklow() const {
  return _has_bit(3);
}
inline void PBPetData::clear_pattacklow() {
  pattacklow_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBPetData::pattacklow() const {
  return pattacklow_;
}
inline void PBPetData::set_pattacklow(::google::protobuf::uint32 value) {
  _set_bit(3);
  pattacklow_ = value;
}

// optional uint32 MAttackUp = 5;
inline bool PBPetData::has_mattackup() const {
  return _has_bit(4);
}
inline void PBPetData::clear_mattackup() {
  mattackup_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBPetData::mattackup() const {
  return mattackup_;
}
inline void PBPetData::set_mattackup(::google::protobuf::uint32 value) {
  _set_bit(4);
  mattackup_ = value;
}

// optional uint32 MAttackLow = 6;
inline bool PBPetData::has_mattacklow() const {
  return _has_bit(5);
}
inline void PBPetData::clear_mattacklow() {
  mattacklow_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBPetData::mattacklow() const {
  return mattacklow_;
}
inline void PBPetData::set_mattacklow(::google::protobuf::uint32 value) {
  _set_bit(5);
  mattacklow_ = value;
}

// optional uint32 Speed = 7;
inline bool PBPetData::has_speed() const {
  return _has_bit(6);
}
inline void PBPetData::clear_speed() {
  speed_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBPetData::speed() const {
  return speed_;
}
inline void PBPetData::set_speed(::google::protobuf::uint32 value) {
  _set_bit(6);
  speed_ = value;
}

// optional uint32 PDefence = 8;
inline bool PBPetData::has_pdefence() const {
  return _has_bit(7);
}
inline void PBPetData::clear_pdefence() {
  pdefence_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBPetData::pdefence() const {
  return pdefence_;
}
inline void PBPetData::set_pdefence(::google::protobuf::uint32 value) {
  _set_bit(7);
  pdefence_ = value;
}

// optional uint32 MDefence = 9;
inline bool PBPetData::has_mdefence() const {
  return _has_bit(8);
}
inline void PBPetData::clear_mdefence() {
  mdefence_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBPetData::mdefence() const {
  return mdefence_;
}
inline void PBPetData::set_mdefence(::google::protobuf::uint32 value) {
  _set_bit(8);
  mdefence_ = value;
}

// optional uint32 MaxHP = 10;
inline bool PBPetData::has_maxhp() const {
  return _has_bit(9);
}
inline void PBPetData::clear_maxhp() {
  maxhp_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBPetData::maxhp() const {
  return maxhp_;
}
inline void PBPetData::set_maxhp(::google::protobuf::uint32 value) {
  _set_bit(9);
  maxhp_ = value;
}

// optional uint32 HPRSpeed = 11;
inline bool PBPetData::has_hprspeed() const {
  return _has_bit(10);
}
inline void PBPetData::clear_hprspeed() {
  hprspeed_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBPetData::hprspeed() const {
  return hprspeed_;
}
inline void PBPetData::set_hprspeed(::google::protobuf::uint32 value) {
  _set_bit(10);
  hprspeed_ = value;
}

// optional uint32 DeathRate = 12;
inline bool PBPetData::has_deathrate() const {
  return _has_bit(11);
}
inline void PBPetData::clear_deathrate() {
  deathrate_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBPetData::deathrate() const {
  return deathrate_;
}
inline void PBPetData::set_deathrate(::google::protobuf::uint32 value) {
  _set_bit(11);
  deathrate_ = value;
}

// optional uint32 DeathValue = 13;
inline bool PBPetData::has_deathvalue() const {
  return _has_bit(12);
}
inline void PBPetData::clear_deathvalue() {
  deathvalue_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBPetData::deathvalue() const {
  return deathvalue_;
}
inline void PBPetData::set_deathvalue(::google::protobuf::uint32 value) {
  _set_bit(12);
  deathvalue_ = value;
}

// optional uint32 NormalDuck = 14;
inline bool PBPetData::has_normalduck() const {
  return _has_bit(13);
}
inline void PBPetData::clear_normalduck() {
  normalduck_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBPetData::normalduck() const {
  return normalduck_;
}
inline void PBPetData::set_normalduck(::google::protobuf::uint32 value) {
  _set_bit(13);
  normalduck_ = value;
}

// optional uint32 SkillDuck = 15;
inline bool PBPetData::has_skillduck() const {
  return _has_bit(14);
}
inline void PBPetData::clear_skillduck() {
  skillduck_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBPetData::skillduck() const {
  return skillduck_;
}
inline void PBPetData::set_skillduck(::google::protobuf::uint32 value) {
  _set_bit(14);
  skillduck_ = value;
}

// optional uint32 SkillID = 16;
inline bool PBPetData::has_skillid() const {
  return _has_bit(15);
}
inline void PBPetData::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBPetData::skillid() const {
  return skillid_;
}
inline void PBPetData::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(15);
  skillid_ = value;
}

// optional uint32 SkillLevel = 17;
inline bool PBPetData::has_skilllevel() const {
  return _has_bit(16);
}
inline void PBPetData::clear_skilllevel() {
  skilllevel_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBPetData::skilllevel() const {
  return skilllevel_;
}
inline void PBPetData::set_skilllevel(::google::protobuf::uint32 value) {
  _set_bit(16);
  skilllevel_ = value;
}

// optional uint32 PAttackRange = 18;
inline bool PBPetData::has_pattackrange() const {
  return _has_bit(17);
}
inline void PBPetData::clear_pattackrange() {
  pattackrange_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBPetData::pattackrange() const {
  return pattackrange_;
}
inline void PBPetData::set_pattackrange(::google::protobuf::uint32 value) {
  _set_bit(17);
  pattackrange_ = value;
}

// optional uint32 MAttackRange = 19;
inline bool PBPetData::has_mattackrange() const {
  return _has_bit(18);
}
inline void PBPetData::clear_mattackrange() {
  mattackrange_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBPetData::mattackrange() const {
  return mattackrange_;
}
inline void PBPetData::set_mattackrange(::google::protobuf::uint32 value) {
  _set_bit(18);
  mattackrange_ = value;
}

// optional uint32 PReducePer = 20;
inline bool PBPetData::has_preduceper() const {
  return _has_bit(19);
}
inline void PBPetData::clear_preduceper() {
  preduceper_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBPetData::preduceper() const {
  return preduceper_;
}
inline void PBPetData::set_preduceper(::google::protobuf::uint32 value) {
  _set_bit(19);
  preduceper_ = value;
}

// optional uint32 MReducePer = 21;
inline bool PBPetData::has_mreduceper() const {
  return _has_bit(20);
}
inline void PBPetData::clear_mreduceper() {
  mreduceper_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBPetData::mreduceper() const {
  return mreduceper_;
}
inline void PBPetData::set_mreduceper(::google::protobuf::uint32 value) {
  _set_bit(20);
  mreduceper_ = value;
}

// optional uint32 DeathDefense = 22;
inline bool PBPetData::has_deathdefense() const {
  return _has_bit(21);
}
inline void PBPetData::clear_deathdefense() {
  deathdefense_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBPetData::deathdefense() const {
  return deathdefense_;
}
inline void PBPetData::set_deathdefense(::google::protobuf::uint32 value) {
  _set_bit(21);
  deathdefense_ = value;
}

// optional uint32 IgnoreDuck = 23;
inline bool PBPetData::has_ignoreduck() const {
  return _has_bit(22);
}
inline void PBPetData::clear_ignoreduck() {
  ignoreduck_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBPetData::ignoreduck() const {
  return ignoreduck_;
}
inline void PBPetData::set_ignoreduck(::google::protobuf::uint32 value) {
  _set_bit(22);
  ignoreduck_ = value;
}

// repeated uint32 ResDef = 24;
inline int PBPetData::resdef_size() const {
  return resdef_.size();
}
inline void PBPetData::clear_resdef() {
  resdef_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPetData::resdef() const {
  return resdef_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPetData::mutable_resdef() {
  return &resdef_;
}
inline ::google::protobuf::uint32 PBPetData::resdef(int index) const {
  return resdef_.Get(index);
}
inline void PBPetData::set_resdef(int index, ::google::protobuf::uint32 value) {
  resdef_.Set(index, value);
}
inline void PBPetData::add_resdef(::google::protobuf::uint32 value) {
  resdef_.Add(value);
}

// repeated uint32 ResAtt = 25;
inline int PBPetData::resatt_size() const {
  return resatt_.size();
}
inline void PBPetData::clear_resatt() {
  resatt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPetData::resatt() const {
  return resatt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPetData::mutable_resatt() {
  return &resatt_;
}
inline ::google::protobuf::uint32 PBPetData::resatt(int index) const {
  return resatt_.Get(index);
}
inline void PBPetData::set_resatt(int index, ::google::protobuf::uint32 value) {
  resatt_.Set(index, value);
}
inline void PBPetData::add_resatt(::google::protobuf::uint32 value) {
  resatt_.Add(value);
}

// optional uint32 AttPercent = 26;
inline bool PBPetData::has_attpercent() const {
  return _has_bit(25);
}
inline void PBPetData::clear_attpercent() {
  attpercent_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBPetData::attpercent() const {
  return attpercent_;
}
inline void PBPetData::set_attpercent(::google::protobuf::uint32 value) {
  _set_bit(25);
  attpercent_ = value;
}

// optional uint32 DefPercent = 27;
inline bool PBPetData::has_defpercent() const {
  return _has_bit(26);
}
inline void PBPetData::clear_defpercent() {
  defpercent_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBPetData::defpercent() const {
  return defpercent_;
}
inline void PBPetData::set_defpercent(::google::protobuf::uint32 value) {
  _set_bit(26);
  defpercent_ = value;
}

// optional uint32 HPPercent = 28;
inline bool PBPetData::has_hppercent() const {
  return _has_bit(27);
}
inline void PBPetData::clear_hppercent() {
  hppercent_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBPetData::hppercent() const {
  return hppercent_;
}
inline void PBPetData::set_hppercent(::google::protobuf::uint32 value) {
  _set_bit(27);
  hppercent_ = value;
}

// -------------------------------------------------------------------

// PBSummonBeast

// optional uint32 TempID = 1;
inline bool PBSummonBeast::has_tempid() const {
  return _has_bit(0);
}
inline void PBSummonBeast::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSummonBeast::tempid() const {
  return tempid_;
}
inline void PBSummonBeast::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBSummonBeast::has_name() const {
  return _has_bit(1);
}
inline void PBSummonBeast::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBSummonBeast::name() const {
  return *name_;
}
inline void PBSummonBeast::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSummonBeast::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBSummonBeast::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSummonBeast::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string Model = 3;
inline bool PBSummonBeast::has_model() const {
  return _has_bit(2);
}
inline void PBSummonBeast::clear_model() {
  if (model_ != &_default_model_) {
    model_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBSummonBeast::model() const {
  return *model_;
}
inline void PBSummonBeast::set_model(const ::std::string& value) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void PBSummonBeast::set_model(const char* value) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void PBSummonBeast::set_model(const char* value, size_t size) {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBSummonBeast::mutable_model() {
  _set_bit(2);
  if (model_ == &_default_model_) {
    model_ = new ::std::string;
  }
  return model_;
}

// optional uint32 Level = 4;
inline bool PBSummonBeast::has_level() const {
  return _has_bit(3);
}
inline void PBSummonBeast::clear_level() {
  level_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSummonBeast::level() const {
  return level_;
}
inline void PBSummonBeast::set_level(::google::protobuf::uint32 value) {
  _set_bit(3);
  level_ = value;
}

// repeated uint32 LevelUpDelayTime = 5;
inline int PBSummonBeast::levelupdelaytime_size() const {
  return levelupdelaytime_.size();
}
inline void PBSummonBeast::clear_levelupdelaytime() {
  levelupdelaytime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSummonBeast::levelupdelaytime() const {
  return levelupdelaytime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSummonBeast::mutable_levelupdelaytime() {
  return &levelupdelaytime_;
}
inline ::google::protobuf::uint32 PBSummonBeast::levelupdelaytime(int index) const {
  return levelupdelaytime_.Get(index);
}
inline void PBSummonBeast::set_levelupdelaytime(int index, ::google::protobuf::uint32 value) {
  levelupdelaytime_.Set(index, value);
}
inline void PBSummonBeast::add_levelupdelaytime(::google::protobuf::uint32 value) {
  levelupdelaytime_.Add(value);
}

// repeated .PBPetData PetData = 6;
inline int PBSummonBeast::petdata_size() const {
  return petdata_.size();
}
inline void PBSummonBeast::clear_petdata() {
  petdata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPetData >&
PBSummonBeast::petdata() const {
  return petdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPetData >*
PBSummonBeast::mutable_petdata() {
  return &petdata_;
}
inline const ::PBPetData& PBSummonBeast::petdata(int index) const {
  return petdata_.Get(index);
}
inline ::PBPetData* PBSummonBeast::mutable_petdata(int index) {
  return petdata_.Mutable(index);
}
inline ::PBPetData* PBSummonBeast::add_petdata() {
  return petdata_.Add();
}

// optional uint32 AttackFrequency = 7;
inline bool PBSummonBeast::has_attackfrequency() const {
  return _has_bit(6);
}
inline void PBSummonBeast::clear_attackfrequency() {
  attackfrequency_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBSummonBeast::attackfrequency() const {
  return attackfrequency_;
}
inline void PBSummonBeast::set_attackfrequency(::google::protobuf::uint32 value) {
  _set_bit(6);
  attackfrequency_ = value;
}

// -------------------------------------------------------------------

// PBBeginner

// optional uint32 TempID = 1;
inline bool PBBeginner::has_tempid() const {
  return _has_bit(0);
}
inline void PBBeginner::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBeginner::tempid() const {
  return tempid_;
}
inline void PBBeginner::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 EquipItemID = 2;
inline int PBBeginner::equipitemid_size() const {
  return equipitemid_.size();
}
inline void PBBeginner::clear_equipitemid() {
  equipitemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::equipitemid() const {
  return equipitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_equipitemid() {
  return &equipitemid_;
}
inline ::google::protobuf::uint32 PBBeginner::equipitemid(int index) const {
  return equipitemid_.Get(index);
}
inline void PBBeginner::set_equipitemid(int index, ::google::protobuf::uint32 value) {
  equipitemid_.Set(index, value);
}
inline void PBBeginner::add_equipitemid(::google::protobuf::uint32 value) {
  equipitemid_.Add(value);
}

// repeated uint32 EquipItemNum = 3;
inline int PBBeginner::equipitemnum_size() const {
  return equipitemnum_.size();
}
inline void PBBeginner::clear_equipitemnum() {
  equipitemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::equipitemnum() const {
  return equipitemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_equipitemnum() {
  return &equipitemnum_;
}
inline ::google::protobuf::uint32 PBBeginner::equipitemnum(int index) const {
  return equipitemnum_.Get(index);
}
inline void PBBeginner::set_equipitemnum(int index, ::google::protobuf::uint32 value) {
  equipitemnum_.Set(index, value);
}
inline void PBBeginner::add_equipitemnum(::google::protobuf::uint32 value) {
  equipitemnum_.Add(value);
}

// repeated uint32 BaggageItemID = 4;
inline int PBBeginner::baggageitemid_size() const {
  return baggageitemid_.size();
}
inline void PBBeginner::clear_baggageitemid() {
  baggageitemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::baggageitemid() const {
  return baggageitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_baggageitemid() {
  return &baggageitemid_;
}
inline ::google::protobuf::uint32 PBBeginner::baggageitemid(int index) const {
  return baggageitemid_.Get(index);
}
inline void PBBeginner::set_baggageitemid(int index, ::google::protobuf::uint32 value) {
  baggageitemid_.Set(index, value);
}
inline void PBBeginner::add_baggageitemid(::google::protobuf::uint32 value) {
  baggageitemid_.Add(value);
}

// repeated uint32 BaggageItemNum = 5;
inline int PBBeginner::baggageitemnum_size() const {
  return baggageitemnum_.size();
}
inline void PBBeginner::clear_baggageitemnum() {
  baggageitemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::baggageitemnum() const {
  return baggageitemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_baggageitemnum() {
  return &baggageitemnum_;
}
inline ::google::protobuf::uint32 PBBeginner::baggageitemnum(int index) const {
  return baggageitemnum_.Get(index);
}
inline void PBBeginner::set_baggageitemnum(int index, ::google::protobuf::uint32 value) {
  baggageitemnum_.Set(index, value);
}
inline void PBBeginner::add_baggageitemnum(::google::protobuf::uint32 value) {
  baggageitemnum_.Add(value);
}

// repeated uint32 SkillID = 6;
inline int PBBeginner::skillid_size() const {
  return skillid_.size();
}
inline void PBBeginner::clear_skillid() {
  skillid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skillid() const {
  return skillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skillid() {
  return &skillid_;
}
inline ::google::protobuf::uint32 PBBeginner::skillid(int index) const {
  return skillid_.Get(index);
}
inline void PBBeginner::set_skillid(int index, ::google::protobuf::uint32 value) {
  skillid_.Set(index, value);
}
inline void PBBeginner::add_skillid(::google::protobuf::uint32 value) {
  skillid_.Add(value);
}

// repeated uint32 SkillLevel = 7;
inline int PBBeginner::skilllevel_size() const {
  return skilllevel_.size();
}
inline void PBBeginner::clear_skilllevel() {
  skilllevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skilllevel() const {
  return skilllevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skilllevel() {
  return &skilllevel_;
}
inline ::google::protobuf::uint32 PBBeginner::skilllevel(int index) const {
  return skilllevel_.Get(index);
}
inline void PBBeginner::set_skilllevel(int index, ::google::protobuf::uint32 value) {
  skilllevel_.Set(index, value);
}
inline void PBBeginner::add_skilllevel(::google::protobuf::uint32 value) {
  skilllevel_.Add(value);
}

// optional uint32 StrNum = 8;
inline bool PBBeginner::has_strnum() const {
  return _has_bit(7);
}
inline void PBBeginner::clear_strnum() {
  strnum_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBBeginner::strnum() const {
  return strnum_;
}
inline void PBBeginner::set_strnum(::google::protobuf::uint32 value) {
  _set_bit(7);
  strnum_ = value;
}

// optional uint32 ConNum = 9;
inline bool PBBeginner::has_connum() const {
  return _has_bit(8);
}
inline void PBBeginner::clear_connum() {
  connum_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBBeginner::connum() const {
  return connum_;
}
inline void PBBeginner::set_connum(::google::protobuf::uint32 value) {
  _set_bit(8);
  connum_ = value;
}

// optional uint32 StaNum = 10;
inline bool PBBeginner::has_stanum() const {
  return _has_bit(9);
}
inline void PBBeginner::clear_stanum() {
  stanum_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBBeginner::stanum() const {
  return stanum_;
}
inline void PBBeginner::set_stanum(::google::protobuf::uint32 value) {
  _set_bit(9);
  stanum_ = value;
}

// optional uint32 WisNum = 11;
inline bool PBBeginner::has_wisnum() const {
  return _has_bit(10);
}
inline void PBBeginner::clear_wisnum() {
  wisnum_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBBeginner::wisnum() const {
  return wisnum_;
}
inline void PBBeginner::set_wisnum(::google::protobuf::uint32 value) {
  _set_bit(10);
  wisnum_ = value;
}

// optional uint32 SprNum = 12;
inline bool PBBeginner::has_sprnum() const {
  return _has_bit(11);
}
inline void PBBeginner::clear_sprnum() {
  sprnum_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBBeginner::sprnum() const {
  return sprnum_;
}
inline void PBBeginner::set_sprnum(::google::protobuf::uint32 value) {
  _set_bit(11);
  sprnum_ = value;
}

// optional uint32 SkillNum = 13;
inline bool PBBeginner::has_skillnum() const {
  return _has_bit(12);
}
inline void PBBeginner::clear_skillnum() {
  skillnum_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBBeginner::skillnum() const {
  return skillnum_;
}
inline void PBBeginner::set_skillnum(::google::protobuf::uint32 value) {
  _set_bit(12);
  skillnum_ = value;
}

// optional uint32 PoxX1 = 14;
inline bool PBBeginner::has_poxx1() const {
  return _has_bit(13);
}
inline void PBBeginner::clear_poxx1() {
  poxx1_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBBeginner::poxx1() const {
  return poxx1_;
}
inline void PBBeginner::set_poxx1(::google::protobuf::uint32 value) {
  _set_bit(13);
  poxx1_ = value;
}

// optional uint32 PoxX2 = 15;
inline bool PBBeginner::has_poxx2() const {
  return _has_bit(14);
}
inline void PBBeginner::clear_poxx2() {
  poxx2_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBBeginner::poxx2() const {
  return poxx2_;
}
inline void PBBeginner::set_poxx2(::google::protobuf::uint32 value) {
  _set_bit(14);
  poxx2_ = value;
}

// optional uint32 PoxY1 = 16;
inline bool PBBeginner::has_poxy1() const {
  return _has_bit(15);
}
inline void PBBeginner::clear_poxy1() {
  poxy1_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBBeginner::poxy1() const {
  return poxy1_;
}
inline void PBBeginner::set_poxy1(::google::protobuf::uint32 value) {
  _set_bit(15);
  poxy1_ = value;
}

// optional uint32 PoxY2 = 17;
inline bool PBBeginner::has_poxy2() const {
  return _has_bit(16);
}
inline void PBBeginner::clear_poxy2() {
  poxy2_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBBeginner::poxy2() const {
  return poxy2_;
}
inline void PBBeginner::set_poxy2(::google::protobuf::uint32 value) {
  _set_bit(16);
  poxy2_ = value;
}

// repeated uint32 SkillID1 = 18;
inline int PBBeginner::skillid1_size() const {
  return skillid1_.size();
}
inline void PBBeginner::clear_skillid1() {
  skillid1_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skillid1() const {
  return skillid1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skillid1() {
  return &skillid1_;
}
inline ::google::protobuf::uint32 PBBeginner::skillid1(int index) const {
  return skillid1_.Get(index);
}
inline void PBBeginner::set_skillid1(int index, ::google::protobuf::uint32 value) {
  skillid1_.Set(index, value);
}
inline void PBBeginner::add_skillid1(::google::protobuf::uint32 value) {
  skillid1_.Add(value);
}

// repeated uint32 SkillLevel1 = 19;
inline int PBBeginner::skilllevel1_size() const {
  return skilllevel1_.size();
}
inline void PBBeginner::clear_skilllevel1() {
  skilllevel1_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skilllevel1() const {
  return skilllevel1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skilllevel1() {
  return &skilllevel1_;
}
inline ::google::protobuf::uint32 PBBeginner::skilllevel1(int index) const {
  return skilllevel1_.Get(index);
}
inline void PBBeginner::set_skilllevel1(int index, ::google::protobuf::uint32 value) {
  skilllevel1_.Set(index, value);
}
inline void PBBeginner::add_skilllevel1(::google::protobuf::uint32 value) {
  skilllevel1_.Add(value);
}

// repeated uint32 SkillID2 = 20;
inline int PBBeginner::skillid2_size() const {
  return skillid2_.size();
}
inline void PBBeginner::clear_skillid2() {
  skillid2_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skillid2() const {
  return skillid2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skillid2() {
  return &skillid2_;
}
inline ::google::protobuf::uint32 PBBeginner::skillid2(int index) const {
  return skillid2_.Get(index);
}
inline void PBBeginner::set_skillid2(int index, ::google::protobuf::uint32 value) {
  skillid2_.Set(index, value);
}
inline void PBBeginner::add_skillid2(::google::protobuf::uint32 value) {
  skillid2_.Add(value);
}

// repeated uint32 SkillLevel2 = 21;
inline int PBBeginner::skilllevel2_size() const {
  return skilllevel2_.size();
}
inline void PBBeginner::clear_skilllevel2() {
  skilllevel2_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skilllevel2() const {
  return skilllevel2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skilllevel2() {
  return &skilllevel2_;
}
inline ::google::protobuf::uint32 PBBeginner::skilllevel2(int index) const {
  return skilllevel2_.Get(index);
}
inline void PBBeginner::set_skilllevel2(int index, ::google::protobuf::uint32 value) {
  skilllevel2_.Set(index, value);
}
inline void PBBeginner::add_skilllevel2(::google::protobuf::uint32 value) {
  skilllevel2_.Add(value);
}

// repeated uint32 SkillID3 = 22;
inline int PBBeginner::skillid3_size() const {
  return skillid3_.size();
}
inline void PBBeginner::clear_skillid3() {
  skillid3_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skillid3() const {
  return skillid3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skillid3() {
  return &skillid3_;
}
inline ::google::protobuf::uint32 PBBeginner::skillid3(int index) const {
  return skillid3_.Get(index);
}
inline void PBBeginner::set_skillid3(int index, ::google::protobuf::uint32 value) {
  skillid3_.Set(index, value);
}
inline void PBBeginner::add_skillid3(::google::protobuf::uint32 value) {
  skillid3_.Add(value);
}

// repeated uint32 SkillLevel3 = 23;
inline int PBBeginner::skilllevel3_size() const {
  return skilllevel3_.size();
}
inline void PBBeginner::clear_skilllevel3() {
  skilllevel3_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skilllevel3() const {
  return skilllevel3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skilllevel3() {
  return &skilllevel3_;
}
inline ::google::protobuf::uint32 PBBeginner::skilllevel3(int index) const {
  return skilllevel3_.Get(index);
}
inline void PBBeginner::set_skilllevel3(int index, ::google::protobuf::uint32 value) {
  skilllevel3_.Set(index, value);
}
inline void PBBeginner::add_skilllevel3(::google::protobuf::uint32 value) {
  skilllevel3_.Add(value);
}

// repeated uint32 SkillID4 = 24;
inline int PBBeginner::skillid4_size() const {
  return skillid4_.size();
}
inline void PBBeginner::clear_skillid4() {
  skillid4_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skillid4() const {
  return skillid4_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skillid4() {
  return &skillid4_;
}
inline ::google::protobuf::uint32 PBBeginner::skillid4(int index) const {
  return skillid4_.Get(index);
}
inline void PBBeginner::set_skillid4(int index, ::google::protobuf::uint32 value) {
  skillid4_.Set(index, value);
}
inline void PBBeginner::add_skillid4(::google::protobuf::uint32 value) {
  skillid4_.Add(value);
}

// repeated uint32 SkillLevel4 = 25;
inline int PBBeginner::skilllevel4_size() const {
  return skilllevel4_.size();
}
inline void PBBeginner::clear_skilllevel4() {
  skilllevel4_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skilllevel4() const {
  return skilllevel4_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skilllevel4() {
  return &skilllevel4_;
}
inline ::google::protobuf::uint32 PBBeginner::skilllevel4(int index) const {
  return skilllevel4_.Get(index);
}
inline void PBBeginner::set_skilllevel4(int index, ::google::protobuf::uint32 value) {
  skilllevel4_.Set(index, value);
}
inline void PBBeginner::add_skilllevel4(::google::protobuf::uint32 value) {
  skilllevel4_.Add(value);
}

// repeated uint32 SkillID5 = 26;
inline int PBBeginner::skillid5_size() const {
  return skillid5_.size();
}
inline void PBBeginner::clear_skillid5() {
  skillid5_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skillid5() const {
  return skillid5_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skillid5() {
  return &skillid5_;
}
inline ::google::protobuf::uint32 PBBeginner::skillid5(int index) const {
  return skillid5_.Get(index);
}
inline void PBBeginner::set_skillid5(int index, ::google::protobuf::uint32 value) {
  skillid5_.Set(index, value);
}
inline void PBBeginner::add_skillid5(::google::protobuf::uint32 value) {
  skillid5_.Add(value);
}

// repeated uint32 SkillLevel5 = 27;
inline int PBBeginner::skilllevel5_size() const {
  return skilllevel5_.size();
}
inline void PBBeginner::clear_skilllevel5() {
  skilllevel5_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skilllevel5() const {
  return skilllevel5_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skilllevel5() {
  return &skilllevel5_;
}
inline ::google::protobuf::uint32 PBBeginner::skilllevel5(int index) const {
  return skilllevel5_.Get(index);
}
inline void PBBeginner::set_skilllevel5(int index, ::google::protobuf::uint32 value) {
  skilllevel5_.Set(index, value);
}
inline void PBBeginner::add_skilllevel5(::google::protobuf::uint32 value) {
  skilllevel5_.Add(value);
}

// repeated uint32 SkillID6 = 28;
inline int PBBeginner::skillid6_size() const {
  return skillid6_.size();
}
inline void PBBeginner::clear_skillid6() {
  skillid6_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skillid6() const {
  return skillid6_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skillid6() {
  return &skillid6_;
}
inline ::google::protobuf::uint32 PBBeginner::skillid6(int index) const {
  return skillid6_.Get(index);
}
inline void PBBeginner::set_skillid6(int index, ::google::protobuf::uint32 value) {
  skillid6_.Set(index, value);
}
inline void PBBeginner::add_skillid6(::google::protobuf::uint32 value) {
  skillid6_.Add(value);
}

// repeated uint32 SkillLevel6 = 29;
inline int PBBeginner::skilllevel6_size() const {
  return skilllevel6_.size();
}
inline void PBBeginner::clear_skilllevel6() {
  skilllevel6_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBBeginner::skilllevel6() const {
  return skilllevel6_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBBeginner::mutable_skilllevel6() {
  return &skilllevel6_;
}
inline ::google::protobuf::uint32 PBBeginner::skilllevel6(int index) const {
  return skilllevel6_.Get(index);
}
inline void PBBeginner::set_skilllevel6(int index, ::google::protobuf::uint32 value) {
  skilllevel6_.Set(index, value);
}
inline void PBBeginner::add_skilllevel6(::google::protobuf::uint32 value) {
  skilllevel6_.Add(value);
}

// optional uint32 BeginnerProtectLevel = 30;
inline bool PBBeginner::has_beginnerprotectlevel() const {
  return _has_bit(29);
}
inline void PBBeginner::clear_beginnerprotectlevel() {
  beginnerprotectlevel_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBBeginner::beginnerprotectlevel() const {
  return beginnerprotectlevel_;
}
inline void PBBeginner::set_beginnerprotectlevel(::google::protobuf::uint32 value) {
  _set_bit(29);
  beginnerprotectlevel_ = value;
}

// optional uint32 TransProtectTime = 31;
inline bool PBBeginner::has_transprotecttime() const {
  return _has_bit(30);
}
inline void PBBeginner::clear_transprotecttime() {
  transprotecttime_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBBeginner::transprotecttime() const {
  return transprotecttime_;
}
inline void PBBeginner::set_transprotecttime(::google::protobuf::uint32 value) {
  _set_bit(30);
  transprotecttime_ = value;
}

// optional uint32 MapID = 32;
inline bool PBBeginner::has_mapid() const {
  return _has_bit(31);
}
inline void PBBeginner::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(31);
}
inline ::google::protobuf::uint32 PBBeginner::mapid() const {
  return mapid_;
}
inline void PBBeginner::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(31);
  mapid_ = value;
}

// optional uint32 DeathDuraRate = 33;
inline bool PBBeginner::has_deathdurarate() const {
  return _has_bit(32);
}
inline void PBBeginner::clear_deathdurarate() {
  deathdurarate_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBBeginner::deathdurarate() const {
  return deathdurarate_;
}
inline void PBBeginner::set_deathdurarate(::google::protobuf::uint32 value) {
  _set_bit(32);
  deathdurarate_ = value;
}

// optional uint32 CanMendUseBindMoney = 34;
inline bool PBBeginner::has_canmendusebindmoney() const {
  return _has_bit(33);
}
inline void PBBeginner::clear_canmendusebindmoney() {
  canmendusebindmoney_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 PBBeginner::canmendusebindmoney() const {
  return canmendusebindmoney_;
}
inline void PBBeginner::set_canmendusebindmoney(::google::protobuf::uint32 value) {
  _set_bit(33);
  canmendusebindmoney_ = value;
}

// optional uint32 BeginnerAP = 35;
inline bool PBBeginner::has_beginnerap() const {
  return _has_bit(34);
}
inline void PBBeginner::clear_beginnerap() {
  beginnerap_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBBeginner::beginnerap() const {
  return beginnerap_;
}
inline void PBBeginner::set_beginnerap(::google::protobuf::uint32 value) {
  _set_bit(34);
  beginnerap_ = value;
}

// -------------------------------------------------------------------

// PBDropLevel

// optional uint32 TempID = 1;
inline bool PBDropLevel::has_tempid() const {
  return _has_bit(0);
}
inline void PBDropLevel::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDropLevel::tempid() const {
  return tempid_;
}
inline void PBDropLevel::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Ran = 2;
inline int PBDropLevel::ran_size() const {
  return ran_.size();
}
inline void PBDropLevel::clear_ran() {
  ran_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBDropLevel::ran() const {
  return ran_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBDropLevel::mutable_ran() {
  return &ran_;
}
inline ::google::protobuf::uint32 PBDropLevel::ran(int index) const {
  return ran_.Get(index);
}
inline void PBDropLevel::set_ran(int index, ::google::protobuf::uint32 value) {
  ran_.Set(index, value);
}
inline void PBDropLevel::add_ran(::google::protobuf::uint32 value) {
  ran_.Add(value);
}

// -------------------------------------------------------------------

// PBOgreTran

// optional uint32 TempID = 1;
inline bool PBOgreTran::has_tempid() const {
  return _has_bit(0);
}
inline void PBOgreTran::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBOgreTran::tempid() const {
  return tempid_;
}
inline void PBOgreTran::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Drop = 2;
inline int PBOgreTran::drop_size() const {
  return drop_.size();
}
inline void PBOgreTran::clear_drop() {
  drop_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::drop() const {
  return drop_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_drop() {
  return &drop_;
}
inline ::google::protobuf::uint32 PBOgreTran::drop(int index) const {
  return drop_.Get(index);
}
inline void PBOgreTran::set_drop(int index, ::google::protobuf::uint32 value) {
  drop_.Set(index, value);
}
inline void PBOgreTran::add_drop(::google::protobuf::uint32 value) {
  drop_.Add(value);
}

// repeated uint32 HP = 3;
inline int PBOgreTran::hp_size() const {
  return hp_.size();
}
inline void PBOgreTran::clear_hp() {
  hp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::hp() const {
  return hp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_hp() {
  return &hp_;
}
inline ::google::protobuf::uint32 PBOgreTran::hp(int index) const {
  return hp_.Get(index);
}
inline void PBOgreTran::set_hp(int index, ::google::protobuf::uint32 value) {
  hp_.Set(index, value);
}
inline void PBOgreTran::add_hp(::google::protobuf::uint32 value) {
  hp_.Add(value);
}

// repeated uint32 MP = 4;
inline int PBOgreTran::mp_size() const {
  return mp_.size();
}
inline void PBOgreTran::clear_mp() {
  mp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::mp() const {
  return mp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_mp() {
  return &mp_;
}
inline ::google::protobuf::uint32 PBOgreTran::mp(int index) const {
  return mp_.Get(index);
}
inline void PBOgreTran::set_mp(int index, ::google::protobuf::uint32 value) {
  mp_.Set(index, value);
}
inline void PBOgreTran::add_mp(::google::protobuf::uint32 value) {
  mp_.Add(value);
}

// repeated uint32 PA = 5;
inline int PBOgreTran::pa_size() const {
  return pa_.size();
}
inline void PBOgreTran::clear_pa() {
  pa_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::pa() const {
  return pa_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_pa() {
  return &pa_;
}
inline ::google::protobuf::uint32 PBOgreTran::pa(int index) const {
  return pa_.Get(index);
}
inline void PBOgreTran::set_pa(int index, ::google::protobuf::uint32 value) {
  pa_.Set(index, value);
}
inline void PBOgreTran::add_pa(::google::protobuf::uint32 value) {
  pa_.Add(value);
}

// repeated uint32 MA = 6;
inline int PBOgreTran::ma_size() const {
  return ma_.size();
}
inline void PBOgreTran::clear_ma() {
  ma_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::ma() const {
  return ma_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_ma() {
  return &ma_;
}
inline ::google::protobuf::uint32 PBOgreTran::ma(int index) const {
  return ma_.Get(index);
}
inline void PBOgreTran::set_ma(int index, ::google::protobuf::uint32 value) {
  ma_.Set(index, value);
}
inline void PBOgreTran::add_ma(::google::protobuf::uint32 value) {
  ma_.Add(value);
}

// repeated uint32 PD = 7;
inline int PBOgreTran::pd_size() const {
  return pd_.size();
}
inline void PBOgreTran::clear_pd() {
  pd_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::pd() const {
  return pd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_pd() {
  return &pd_;
}
inline ::google::protobuf::uint32 PBOgreTran::pd(int index) const {
  return pd_.Get(index);
}
inline void PBOgreTran::set_pd(int index, ::google::protobuf::uint32 value) {
  pd_.Set(index, value);
}
inline void PBOgreTran::add_pd(::google::protobuf::uint32 value) {
  pd_.Add(value);
}

// repeated uint32 MD = 8;
inline int PBOgreTran::md_size() const {
  return md_.size();
}
inline void PBOgreTran::clear_md() {
  md_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::md() const {
  return md_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_md() {
  return &md_;
}
inline ::google::protobuf::uint32 PBOgreTran::md(int index) const {
  return md_.Get(index);
}
inline void PBOgreTran::set_md(int index, ::google::protobuf::uint32 value) {
  md_.Set(index, value);
}
inline void PBOgreTran::add_md(::google::protobuf::uint32 value) {
  md_.Add(value);
}

// repeated uint32 Hit = 9;
inline int PBOgreTran::hit_size() const {
  return hit_.size();
}
inline void PBOgreTran::clear_hit() {
  hit_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::hit() const {
  return hit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_hit() {
  return &hit_;
}
inline ::google::protobuf::uint32 PBOgreTran::hit(int index) const {
  return hit_.Get(index);
}
inline void PBOgreTran::set_hit(int index, ::google::protobuf::uint32 value) {
  hit_.Set(index, value);
}
inline void PBOgreTran::add_hit(::google::protobuf::uint32 value) {
  hit_.Add(value);
}

// repeated uint32 Dodge = 10;
inline int PBOgreTran::dodge_size() const {
  return dodge_.size();
}
inline void PBOgreTran::clear_dodge() {
  dodge_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::dodge() const {
  return dodge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_dodge() {
  return &dodge_;
}
inline ::google::protobuf::uint32 PBOgreTran::dodge(int index) const {
  return dodge_.Get(index);
}
inline void PBOgreTran::set_dodge(int index, ::google::protobuf::uint32 value) {
  dodge_.Set(index, value);
}
inline void PBOgreTran::add_dodge(::google::protobuf::uint32 value) {
  dodge_.Add(value);
}

// repeated uint32 Exp = 11;
inline int PBOgreTran::exp_size() const {
  return exp_.size();
}
inline void PBOgreTran::clear_exp() {
  exp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::exp() const {
  return exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_exp() {
  return &exp_;
}
inline ::google::protobuf::uint32 PBOgreTran::exp(int index) const {
  return exp_.Get(index);
}
inline void PBOgreTran::set_exp(int index, ::google::protobuf::uint32 value) {
  exp_.Set(index, value);
}
inline void PBOgreTran::add_exp(::google::protobuf::uint32 value) {
  exp_.Add(value);
}

// repeated uint32 Ignore = 12;
inline int PBOgreTran::ignore_size() const {
  return ignore_.size();
}
inline void PBOgreTran::clear_ignore() {
  ignore_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::ignore() const {
  return ignore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_ignore() {
  return &ignore_;
}
inline ::google::protobuf::uint32 PBOgreTran::ignore(int index) const {
  return ignore_.Get(index);
}
inline void PBOgreTran::set_ignore(int index, ::google::protobuf::uint32 value) {
  ignore_.Set(index, value);
}
inline void PBOgreTran::add_ignore(::google::protobuf::uint32 value) {
  ignore_.Add(value);
}

// repeated uint32 Death = 13;
inline int PBOgreTran::death_size() const {
  return death_.size();
}
inline void PBOgreTran::clear_death() {
  death_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::death() const {
  return death_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_death() {
  return &death_;
}
inline ::google::protobuf::uint32 PBOgreTran::death(int index) const {
  return death_.Get(index);
}
inline void PBOgreTran::set_death(int index, ::google::protobuf::uint32 value) {
  death_.Set(index, value);
}
inline void PBOgreTran::add_death(::google::protobuf::uint32 value) {
  death_.Add(value);
}

// repeated uint32 ResDef = 14;
inline int PBOgreTran::resdef_size() const {
  return resdef_.size();
}
inline void PBOgreTran::clear_resdef() {
  resdef_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::resdef() const {
  return resdef_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_resdef() {
  return &resdef_;
}
inline ::google::protobuf::uint32 PBOgreTran::resdef(int index) const {
  return resdef_.Get(index);
}
inline void PBOgreTran::set_resdef(int index, ::google::protobuf::uint32 value) {
  resdef_.Set(index, value);
}
inline void PBOgreTran::add_resdef(::google::protobuf::uint32 value) {
  resdef_.Add(value);
}

// repeated uint32 ResAtt = 15;
inline int PBOgreTran::resatt_size() const {
  return resatt_.size();
}
inline void PBOgreTran::clear_resatt() {
  resatt_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOgreTran::resatt() const {
  return resatt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOgreTran::mutable_resatt() {
  return &resatt_;
}
inline ::google::protobuf::uint32 PBOgreTran::resatt(int index) const {
  return resatt_.Get(index);
}
inline void PBOgreTran::set_resatt(int index, ::google::protobuf::uint32 value) {
  resatt_.Set(index, value);
}
inline void PBOgreTran::add_resatt(::google::protobuf::uint32 value) {
  resatt_.Add(value);
}

// -------------------------------------------------------------------

// PBMetierPro

// optional uint32 TempID = 1;
inline bool PBMetierPro::has_tempid() const {
  return _has_bit(0);
}
inline void PBMetierPro::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMetierPro::tempid() const {
  return tempid_;
}
inline void PBMetierPro::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 MetierRequire = 2;
inline bool PBMetierPro::has_metierrequire() const {
  return _has_bit(1);
}
inline void PBMetierPro::clear_metierrequire() {
  metierrequire_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMetierPro::metierrequire() const {
  return metierrequire_;
}
inline void PBMetierPro::set_metierrequire(::google::protobuf::uint32 value) {
  _set_bit(1);
  metierrequire_ = value;
}

// optional uint32 Option = 3;
inline bool PBMetierPro::has_option() const {
  return _has_bit(2);
}
inline void PBMetierPro::clear_option() {
  option_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMetierPro::option() const {
  return option_;
}
inline void PBMetierPro::set_option(::google::protobuf::uint32 value) {
  _set_bit(2);
  option_ = value;
}

// repeated uint32 MetierProperty = 4;
inline int PBMetierPro::metierproperty_size() const {
  return metierproperty_.size();
}
inline void PBMetierPro::clear_metierproperty() {
  metierproperty_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMetierPro::metierproperty() const {
  return metierproperty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMetierPro::mutable_metierproperty() {
  return &metierproperty_;
}
inline ::google::protobuf::uint32 PBMetierPro::metierproperty(int index) const {
  return metierproperty_.Get(index);
}
inline void PBMetierPro::set_metierproperty(int index, ::google::protobuf::uint32 value) {
  metierproperty_.Set(index, value);
}
inline void PBMetierPro::add_metierproperty(::google::protobuf::uint32 value) {
  metierproperty_.Add(value);
}

// -------------------------------------------------------------------

// PBLevelProperty

// optional uint32 TempID = 1;
inline bool PBLevelProperty::has_tempid() const {
  return _has_bit(0);
}
inline void PBLevelProperty::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBLevelProperty::tempid() const {
  return tempid_;
}
inline void PBLevelProperty::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 Option = 2;
inline bool PBLevelProperty::has_option() const {
  return _has_bit(1);
}
inline void PBLevelProperty::clear_option() {
  option_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBLevelProperty::option() const {
  return option_;
}
inline void PBLevelProperty::set_option(::google::protobuf::uint32 value) {
  _set_bit(1);
  option_ = value;
}

// repeated uint32 LevelProperty = 3;
inline int PBLevelProperty::levelproperty_size() const {
  return levelproperty_.size();
}
inline void PBLevelProperty::clear_levelproperty() {
  levelproperty_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLevelProperty::levelproperty() const {
  return levelproperty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLevelProperty::mutable_levelproperty() {
  return &levelproperty_;
}
inline ::google::protobuf::uint32 PBLevelProperty::levelproperty(int index) const {
  return levelproperty_.Get(index);
}
inline void PBLevelProperty::set_levelproperty(int index, ::google::protobuf::uint32 value) {
  levelproperty_.Set(index, value);
}
inline void PBLevelProperty::add_levelproperty(::google::protobuf::uint32 value) {
  levelproperty_.Add(value);
}

// -------------------------------------------------------------------

// PBHonorToExp

// optional uint32 TempID = 1;
inline bool PBHonorToExp::has_tempid() const {
  return _has_bit(0);
}
inline void PBHonorToExp::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBHonorToExp::tempid() const {
  return tempid_;
}
inline void PBHonorToExp::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Exp = 2;
inline int PBHonorToExp::exp_size() const {
  return exp_.size();
}
inline void PBHonorToExp::clear_exp() {
  exp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorToExp::exp() const {
  return exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorToExp::mutable_exp() {
  return &exp_;
}
inline ::google::protobuf::uint32 PBHonorToExp::exp(int index) const {
  return exp_.Get(index);
}
inline void PBHonorToExp::set_exp(int index, ::google::protobuf::uint32 value) {
  exp_.Set(index, value);
}
inline void PBHonorToExp::add_exp(::google::protobuf::uint32 value) {
  exp_.Add(value);
}

// repeated uint32 Wizard = 3;
inline int PBHonorToExp::wizard_size() const {
  return wizard_.size();
}
inline void PBHonorToExp::clear_wizard() {
  wizard_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorToExp::wizard() const {
  return wizard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorToExp::mutable_wizard() {
  return &wizard_;
}
inline ::google::protobuf::uint32 PBHonorToExp::wizard(int index) const {
  return wizard_.Get(index);
}
inline void PBHonorToExp::set_wizard(int index, ::google::protobuf::uint32 value) {
  wizard_.Set(index, value);
}
inline void PBHonorToExp::add_wizard(::google::protobuf::uint32 value) {
  wizard_.Add(value);
}

// optional uint32 ExpLimit = 4;
inline bool PBHonorToExp::has_explimit() const {
  return _has_bit(3);
}
inline void PBHonorToExp::clear_explimit() {
  explimit_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBHonorToExp::explimit() const {
  return explimit_;
}
inline void PBHonorToExp::set_explimit(::google::protobuf::uint32 value) {
  _set_bit(3);
  explimit_ = value;
}

// optional uint32 ItemID = 5;
inline bool PBHonorToExp::has_itemid() const {
  return _has_bit(4);
}
inline void PBHonorToExp::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBHonorToExp::itemid() const {
  return itemid_;
}
inline void PBHonorToExp::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(4);
  itemid_ = value;
}

// optional uint32 ItemHonor = 6;
inline bool PBHonorToExp::has_itemhonor() const {
  return _has_bit(5);
}
inline void PBHonorToExp::clear_itemhonor() {
  itemhonor_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBHonorToExp::itemhonor() const {
  return itemhonor_;
}
inline void PBHonorToExp::set_itemhonor(::google::protobuf::uint32 value) {
  _set_bit(5);
  itemhonor_ = value;
}

// optional uint32 ItemLimit = 7;
inline bool PBHonorToExp::has_itemlimit() const {
  return _has_bit(6);
}
inline void PBHonorToExp::clear_itemlimit() {
  itemlimit_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBHonorToExp::itemlimit() const {
  return itemlimit_;
}
inline void PBHonorToExp::set_itemlimit(::google::protobuf::uint32 value) {
  _set_bit(6);
  itemlimit_ = value;
}

// -------------------------------------------------------------------

// PBHonorObtain

// optional uint32 TempID = 1;
inline bool PBHonorObtain::has_tempid() const {
  return _has_bit(0);
}
inline void PBHonorObtain::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBHonorObtain::tempid() const {
  return tempid_;
}
inline void PBHonorObtain::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 InLimit = 2;
inline bool PBHonorObtain::has_inlimit() const {
  return _has_bit(1);
}
inline void PBHonorObtain::clear_inlimit() {
  inlimit_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBHonorObtain::inlimit() const {
  return inlimit_;
}
inline void PBHonorObtain::set_inlimit(::google::protobuf::uint32 value) {
  _set_bit(1);
  inlimit_ = value;
}

// optional uint32 OutLimit = 3;
inline bool PBHonorObtain::has_outlimit() const {
  return _has_bit(2);
}
inline void PBHonorObtain::clear_outlimit() {
  outlimit_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBHonorObtain::outlimit() const {
  return outlimit_;
}
inline void PBHonorObtain::set_outlimit(::google::protobuf::uint32 value) {
  _set_bit(2);
  outlimit_ = value;
}

// optional uint32 OutDieExp = 4;
inline bool PBHonorObtain::has_outdieexp() const {
  return _has_bit(3);
}
inline void PBHonorObtain::clear_outdieexp() {
  outdieexp_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBHonorObtain::outdieexp() const {
  return outdieexp_;
}
inline void PBHonorObtain::set_outdieexp(::google::protobuf::uint32 value) {
  _set_bit(3);
  outdieexp_ = value;
}

// optional uint32 InDieExp = 5;
inline bool PBHonorObtain::has_indieexp() const {
  return _has_bit(4);
}
inline void PBHonorObtain::clear_indieexp() {
  indieexp_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBHonorObtain::indieexp() const {
  return indieexp_;
}
inline void PBHonorObtain::set_indieexp(::google::protobuf::uint32 value) {
  _set_bit(4);
  indieexp_ = value;
}

// optional uint32 BorderDieExp = 6;
inline bool PBHonorObtain::has_borderdieexp() const {
  return _has_bit(5);
}
inline void PBHonorObtain::clear_borderdieexp() {
  borderdieexp_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBHonorObtain::borderdieexp() const {
  return borderdieexp_;
}
inline void PBHonorObtain::set_borderdieexp(::google::protobuf::uint32 value) {
  _set_bit(5);
  borderdieexp_ = value;
}

// repeated uint32 OutLowExp = 7;
inline int PBHonorObtain::outlowexp_size() const {
  return outlowexp_.size();
}
inline void PBHonorObtain::clear_outlowexp() {
  outlowexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::outlowexp() const {
  return outlowexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_outlowexp() {
  return &outlowexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::outlowexp(int index) const {
  return outlowexp_.Get(index);
}
inline void PBHonorObtain::set_outlowexp(int index, ::google::protobuf::uint32 value) {
  outlowexp_.Set(index, value);
}
inline void PBHonorObtain::add_outlowexp(::google::protobuf::uint32 value) {
  outlowexp_.Add(value);
}

// repeated uint32 OutHighExp = 8;
inline int PBHonorObtain::outhighexp_size() const {
  return outhighexp_.size();
}
inline void PBHonorObtain::clear_outhighexp() {
  outhighexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::outhighexp() const {
  return outhighexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_outhighexp() {
  return &outhighexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::outhighexp(int index) const {
  return outhighexp_.Get(index);
}
inline void PBHonorObtain::set_outhighexp(int index, ::google::protobuf::uint32 value) {
  outhighexp_.Set(index, value);
}
inline void PBHonorObtain::add_outhighexp(::google::protobuf::uint32 value) {
  outhighexp_.Add(value);
}

// repeated uint32 InLowExp = 9;
inline int PBHonorObtain::inlowexp_size() const {
  return inlowexp_.size();
}
inline void PBHonorObtain::clear_inlowexp() {
  inlowexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::inlowexp() const {
  return inlowexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_inlowexp() {
  return &inlowexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::inlowexp(int index) const {
  return inlowexp_.Get(index);
}
inline void PBHonorObtain::set_inlowexp(int index, ::google::protobuf::uint32 value) {
  inlowexp_.Set(index, value);
}
inline void PBHonorObtain::add_inlowexp(::google::protobuf::uint32 value) {
  inlowexp_.Add(value);
}

// repeated uint32 InHighExp = 10;
inline int PBHonorObtain::inhighexp_size() const {
  return inhighexp_.size();
}
inline void PBHonorObtain::clear_inhighexp() {
  inhighexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::inhighexp() const {
  return inhighexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_inhighexp() {
  return &inhighexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::inhighexp(int index) const {
  return inhighexp_.Get(index);
}
inline void PBHonorObtain::set_inhighexp(int index, ::google::protobuf::uint32 value) {
  inhighexp_.Set(index, value);
}
inline void PBHonorObtain::add_inhighexp(::google::protobuf::uint32 value) {
  inhighexp_.Add(value);
}

// repeated uint32 BorderLowExp = 11;
inline int PBHonorObtain::borderlowexp_size() const {
  return borderlowexp_.size();
}
inline void PBHonorObtain::clear_borderlowexp() {
  borderlowexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::borderlowexp() const {
  return borderlowexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_borderlowexp() {
  return &borderlowexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::borderlowexp(int index) const {
  return borderlowexp_.Get(index);
}
inline void PBHonorObtain::set_borderlowexp(int index, ::google::protobuf::uint32 value) {
  borderlowexp_.Set(index, value);
}
inline void PBHonorObtain::add_borderlowexp(::google::protobuf::uint32 value) {
  borderlowexp_.Add(value);
}

// repeated uint32 BorderHighExp = 12;
inline int PBHonorObtain::borderhighexp_size() const {
  return borderhighexp_.size();
}
inline void PBHonorObtain::clear_borderhighexp() {
  borderhighexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::borderhighexp() const {
  return borderhighexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_borderhighexp() {
  return &borderhighexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::borderhighexp(int index) const {
  return borderhighexp_.Get(index);
}
inline void PBHonorObtain::set_borderhighexp(int index, ::google::protobuf::uint32 value) {
  borderhighexp_.Set(index, value);
}
inline void PBHonorObtain::add_borderhighexp(::google::protobuf::uint32 value) {
  borderhighexp_.Add(value);
}

// repeated uint32 LostLowExp = 13;
inline int PBHonorObtain::lostlowexp_size() const {
  return lostlowexp_.size();
}
inline void PBHonorObtain::clear_lostlowexp() {
  lostlowexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::lostlowexp() const {
  return lostlowexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_lostlowexp() {
  return &lostlowexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::lostlowexp(int index) const {
  return lostlowexp_.Get(index);
}
inline void PBHonorObtain::set_lostlowexp(int index, ::google::protobuf::uint32 value) {
  lostlowexp_.Set(index, value);
}
inline void PBHonorObtain::add_lostlowexp(::google::protobuf::uint32 value) {
  lostlowexp_.Add(value);
}

// repeated uint32 LostHighExp = 14;
inline int PBHonorObtain::losthighexp_size() const {
  return losthighexp_.size();
}
inline void PBHonorObtain::clear_losthighexp() {
  losthighexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::losthighexp() const {
  return losthighexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_losthighexp() {
  return &losthighexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::losthighexp(int index) const {
  return losthighexp_.Get(index);
}
inline void PBHonorObtain::set_losthighexp(int index, ::google::protobuf::uint32 value) {
  losthighexp_.Set(index, value);
}
inline void PBHonorObtain::add_losthighexp(::google::protobuf::uint32 value) {
  losthighexp_.Add(value);
}

// repeated uint32 BasicExp = 15;
inline int PBHonorObtain::basicexp_size() const {
  return basicexp_.size();
}
inline void PBHonorObtain::clear_basicexp() {
  basicexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBHonorObtain::basicexp() const {
  return basicexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBHonorObtain::mutable_basicexp() {
  return &basicexp_;
}
inline ::google::protobuf::uint32 PBHonorObtain::basicexp(int index) const {
  return basicexp_.Get(index);
}
inline void PBHonorObtain::set_basicexp(int index, ::google::protobuf::uint32 value) {
  basicexp_.Set(index, value);
}
inline void PBHonorObtain::add_basicexp(::google::protobuf::uint32 value) {
  basicexp_.Add(value);
}

// -------------------------------------------------------------------

// PBDiploidTable

// optional uint32 TempID = 1;
inline bool PBDiploidTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBDiploidTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDiploidTable::tempid() const {
  return tempid_;
}
inline void PBDiploidTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 TotalTime = 2;
inline bool PBDiploidTable::has_totaltime() const {
  return _has_bit(1);
}
inline void PBDiploidTable::clear_totaltime() {
  totaltime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBDiploidTable::totaltime() const {
  return totaltime_;
}
inline void PBDiploidTable::set_totaltime(::google::protobuf::uint32 value) {
  _set_bit(1);
  totaltime_ = value;
}

// optional uint32 ValidMax = 3;
inline bool PBDiploidTable::has_validmax() const {
  return _has_bit(2);
}
inline void PBDiploidTable::clear_validmax() {
  validmax_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBDiploidTable::validmax() const {
  return validmax_;
}
inline void PBDiploidTable::set_validmax(::google::protobuf::uint32 value) {
  _set_bit(2);
  validmax_ = value;
}

// optional uint32 TypeNumber = 4;
inline bool PBDiploidTable::has_typenumber() const {
  return _has_bit(3);
}
inline void PBDiploidTable::clear_typenumber() {
  typenumber_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBDiploidTable::typenumber() const {
  return typenumber_;
}
inline void PBDiploidTable::set_typenumber(::google::protobuf::uint32 value) {
  _set_bit(3);
  typenumber_ = value;
}

// repeated uint32 BuffID = 5;
inline int PBDiploidTable::buffid_size() const {
  return buffid_.size();
}
inline void PBDiploidTable::clear_buffid() {
  buffid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBDiploidTable::buffid() const {
  return buffid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBDiploidTable::mutable_buffid() {
  return &buffid_;
}
inline ::google::protobuf::uint32 PBDiploidTable::buffid(int index) const {
  return buffid_.Get(index);
}
inline void PBDiploidTable::set_buffid(int index, ::google::protobuf::uint32 value) {
  buffid_.Set(index, value);
}
inline void PBDiploidTable::add_buffid(::google::protobuf::uint32 value) {
  buffid_.Add(value);
}

// -------------------------------------------------------------------

// PBRedStone

// optional .PBItemBase BaseItem = 1;
inline bool PBRedStone::has_baseitem() const {
  return _has_bit(0);
}
inline void PBRedStone::clear_baseitem() {
  if (baseitem_ != NULL) baseitem_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBRedStone::baseitem() const {
  return baseitem_ != NULL ? *baseitem_ : *default_instance_->baseitem_;
}
inline ::PBItemBase* PBRedStone::mutable_baseitem() {
  _set_bit(0);
  if (baseitem_ == NULL) baseitem_ = new ::PBItemBase;
  return baseitem_;
}

// optional string MagicIconName = 2;
inline bool PBRedStone::has_magiciconname() const {
  return _has_bit(1);
}
inline void PBRedStone::clear_magiciconname() {
  if (magiciconname_ != &_default_magiciconname_) {
    magiciconname_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBRedStone::magiciconname() const {
  return *magiciconname_;
}
inline void PBRedStone::set_magiciconname(const ::std::string& value) {
  _set_bit(1);
  if (magiciconname_ == &_default_magiciconname_) {
    magiciconname_ = new ::std::string;
  }
  magiciconname_->assign(value);
}
inline void PBRedStone::set_magiciconname(const char* value) {
  _set_bit(1);
  if (magiciconname_ == &_default_magiciconname_) {
    magiciconname_ = new ::std::string;
  }
  magiciconname_->assign(value);
}
inline void PBRedStone::set_magiciconname(const char* value, size_t size) {
  _set_bit(1);
  if (magiciconname_ == &_default_magiciconname_) {
    magiciconname_ = new ::std::string;
  }
  magiciconname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBRedStone::mutable_magiciconname() {
  _set_bit(1);
  if (magiciconname_ == &_default_magiciconname_) {
    magiciconname_ = new ::std::string;
  }
  return magiciconname_;
}

// optional uint32 GuageTime = 3;
inline bool PBRedStone::has_guagetime() const {
  return _has_bit(2);
}
inline void PBRedStone::clear_guagetime() {
  guagetime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBRedStone::guagetime() const {
  return guagetime_;
}
inline void PBRedStone::set_guagetime(::google::protobuf::uint32 value) {
  _set_bit(2);
  guagetime_ = value;
}

// optional uint32 MagicSustainTime = 4;
inline bool PBRedStone::has_magicsustaintime() const {
  return _has_bit(3);
}
inline void PBRedStone::clear_magicsustaintime() {
  magicsustaintime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBRedStone::magicsustaintime() const {
  return magicsustaintime_;
}
inline void PBRedStone::set_magicsustaintime(::google::protobuf::uint32 value) {
  _set_bit(3);
  magicsustaintime_ = value;
}

// optional uint32 ExpTime = 5;
inline bool PBRedStone::has_exptime() const {
  return _has_bit(4);
}
inline void PBRedStone::clear_exptime() {
  exptime_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBRedStone::exptime() const {
  return exptime_;
}
inline void PBRedStone::set_exptime(::google::protobuf::uint32 value) {
  _set_bit(4);
  exptime_ = value;
}

// optional uint32 Radius = 6;
inline bool PBRedStone::has_radius() const {
  return _has_bit(5);
}
inline void PBRedStone::clear_radius() {
  radius_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBRedStone::radius() const {
  return radius_;
}
inline void PBRedStone::set_radius(::google::protobuf::uint32 value) {
  _set_bit(5);
  radius_ = value;
}

// optional uint32 RedStoneType = 7;
inline bool PBRedStone::has_redstonetype() const {
  return _has_bit(6);
}
inline void PBRedStone::clear_redstonetype() {
  redstonetype_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBRedStone::redstonetype() const {
  return redstonetype_;
}
inline void PBRedStone::set_redstonetype(::google::protobuf::uint32 value) {
  _set_bit(6);
  redstonetype_ = value;
}

// optional uint32 FamilyExpRate = 8;
inline bool PBRedStone::has_familyexprate() const {
  return _has_bit(7);
}
inline void PBRedStone::clear_familyexprate() {
  familyexprate_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBRedStone::familyexprate() const {
  return familyexprate_;
}
inline void PBRedStone::set_familyexprate(::google::protobuf::uint32 value) {
  _set_bit(7);
  familyexprate_ = value;
}

// optional uint32 ExpTableID = 9;
inline bool PBRedStone::has_exptableid() const {
  return _has_bit(8);
}
inline void PBRedStone::clear_exptableid() {
  exptableid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBRedStone::exptableid() const {
  return exptableid_;
}
inline void PBRedStone::set_exptableid(::google::protobuf::uint32 value) {
  _set_bit(8);
  exptableid_ = value;
}

// optional uint32 NumberEffected = 10;
inline bool PBRedStone::has_numbereffected() const {
  return _has_bit(9);
}
inline void PBRedStone::clear_numbereffected() {
  numbereffected_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBRedStone::numbereffected() const {
  return numbereffected_;
}
inline void PBRedStone::set_numbereffected(::google::protobuf::uint32 value) {
  _set_bit(9);
  numbereffected_ = value;
}

// optional uint32 MetierID = 11;
inline bool PBRedStone::has_metierid() const {
  return _has_bit(10);
}
inline void PBRedStone::clear_metierid() {
  metierid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBRedStone::metierid() const {
  return metierid_;
}
inline void PBRedStone::set_metierid(::google::protobuf::uint32 value) {
  _set_bit(10);
  metierid_ = value;
}

// repeated uint32 KeyBuffID = 12;
inline int PBRedStone::keybuffid_size() const {
  return keybuffid_.size();
}
inline void PBRedStone::clear_keybuffid() {
  keybuffid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBRedStone::keybuffid() const {
  return keybuffid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBRedStone::mutable_keybuffid() {
  return &keybuffid_;
}
inline ::google::protobuf::uint32 PBRedStone::keybuffid(int index) const {
  return keybuffid_.Get(index);
}
inline void PBRedStone::set_keybuffid(int index, ::google::protobuf::uint32 value) {
  keybuffid_.Set(index, value);
}
inline void PBRedStone::add_keybuffid(::google::protobuf::uint32 value) {
  keybuffid_.Add(value);
}

// repeated uint32 EncBuffID = 13;
inline int PBRedStone::encbuffid_size() const {
  return encbuffid_.size();
}
inline void PBRedStone::clear_encbuffid() {
  encbuffid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBRedStone::encbuffid() const {
  return encbuffid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBRedStone::mutable_encbuffid() {
  return &encbuffid_;
}
inline ::google::protobuf::uint32 PBRedStone::encbuffid(int index) const {
  return encbuffid_.Get(index);
}
inline void PBRedStone::set_encbuffid(int index, ::google::protobuf::uint32 value) {
  encbuffid_.Set(index, value);
}
inline void PBRedStone::add_encbuffid(::google::protobuf::uint32 value) {
  encbuffid_.Add(value);
}

// repeated uint32 EncPercent = 14;
inline int PBRedStone::encpercent_size() const {
  return encpercent_.size();
}
inline void PBRedStone::clear_encpercent() {
  encpercent_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBRedStone::encpercent() const {
  return encpercent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBRedStone::mutable_encpercent() {
  return &encpercent_;
}
inline ::google::protobuf::uint32 PBRedStone::encpercent(int index) const {
  return encpercent_.Get(index);
}
inline void PBRedStone::set_encpercent(int index, ::google::protobuf::uint32 value) {
  encpercent_.Set(index, value);
}
inline void PBRedStone::add_encpercent(::google::protobuf::uint32 value) {
  encpercent_.Add(value);
}

// optional uint32 IsEternal = 15;
inline bool PBRedStone::has_iseternal() const {
  return _has_bit(14);
}
inline void PBRedStone::clear_iseternal() {
  iseternal_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBRedStone::iseternal() const {
  return iseternal_;
}
inline void PBRedStone::set_iseternal(::google::protobuf::uint32 value) {
  _set_bit(14);
  iseternal_ = value;
}

// -------------------------------------------------------------------

// PBRedStoneExpTable

// optional uint32 TempID = 1;
inline bool PBRedStoneExpTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBRedStoneExpTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRedStoneExpTable::tempid() const {
  return tempid_;
}
inline void PBRedStoneExpTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Exp = 2;
inline int PBRedStoneExpTable::exp_size() const {
  return exp_.size();
}
inline void PBRedStoneExpTable::clear_exp() {
  exp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBRedStoneExpTable::exp() const {
  return exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBRedStoneExpTable::mutable_exp() {
  return &exp_;
}
inline ::google::protobuf::uint32 PBRedStoneExpTable::exp(int index) const {
  return exp_.Get(index);
}
inline void PBRedStoneExpTable::set_exp(int index, ::google::protobuf::uint32 value) {
  exp_.Set(index, value);
}
inline void PBRedStoneExpTable::add_exp(::google::protobuf::uint32 value) {
  exp_.Add(value);
}

// optional string EffectName = 3;
inline bool PBRedStoneExpTable::has_effectname() const {
  return _has_bit(2);
}
inline void PBRedStoneExpTable::clear_effectname() {
  if (effectname_ != &_default_effectname_) {
    effectname_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBRedStoneExpTable::effectname() const {
  return *effectname_;
}
inline void PBRedStoneExpTable::set_effectname(const ::std::string& value) {
  _set_bit(2);
  if (effectname_ == &_default_effectname_) {
    effectname_ = new ::std::string;
  }
  effectname_->assign(value);
}
inline void PBRedStoneExpTable::set_effectname(const char* value) {
  _set_bit(2);
  if (effectname_ == &_default_effectname_) {
    effectname_ = new ::std::string;
  }
  effectname_->assign(value);
}
inline void PBRedStoneExpTable::set_effectname(const char* value, size_t size) {
  _set_bit(2);
  if (effectname_ == &_default_effectname_) {
    effectname_ = new ::std::string;
  }
  effectname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBRedStoneExpTable::mutable_effectname() {
  _set_bit(2);
  if (effectname_ == &_default_effectname_) {
    effectname_ = new ::std::string;
  }
  return effectname_;
}

// -------------------------------------------------------------------

// PBReliveTable

// optional uint32 TempID = 1;
inline bool PBReliveTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBReliveTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBReliveTable::tempid() const {
  return tempid_;
}
inline void PBReliveTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Fee = 2;
inline int PBReliveTable::fee_size() const {
  return fee_.size();
}
inline void PBReliveTable::clear_fee() {
  fee_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBReliveTable::fee() const {
  return fee_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBReliveTable::mutable_fee() {
  return &fee_;
}
inline ::google::protobuf::uint32 PBReliveTable::fee(int index) const {
  return fee_.Get(index);
}
inline void PBReliveTable::set_fee(int index, ::google::protobuf::uint32 value) {
  fee_.Set(index, value);
}
inline void PBReliveTable::add_fee(::google::protobuf::uint32 value) {
  fee_.Add(value);
}

// optional uint32 Rate = 3;
inline bool PBReliveTable::has_rate() const {
  return _has_bit(2);
}
inline void PBReliveTable::clear_rate() {
  rate_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBReliveTable::rate() const {
  return rate_;
}
inline void PBReliveTable::set_rate(::google::protobuf::uint32 value) {
  _set_bit(2);
  rate_ = value;
}

// -------------------------------------------------------------------

// PBQuestionExp

// optional uint32 TempID = 1;
inline bool PBQuestionExp::has_tempid() const {
  return _has_bit(0);
}
inline void PBQuestionExp::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBQuestionExp::tempid() const {
  return tempid_;
}
inline void PBQuestionExp::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 NpcQuestionNum = 2;
inline bool PBQuestionExp::has_npcquestionnum() const {
  return _has_bit(1);
}
inline void PBQuestionExp::clear_npcquestionnum() {
  npcquestionnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBQuestionExp::npcquestionnum() const {
  return npcquestionnum_;
}
inline void PBQuestionExp::set_npcquestionnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcquestionnum_ = value;
}

// repeated uint32 Exp = 3;
inline int PBQuestionExp::exp_size() const {
  return exp_.size();
}
inline void PBQuestionExp::clear_exp() {
  exp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBQuestionExp::exp() const {
  return exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBQuestionExp::mutable_exp() {
  return &exp_;
}
inline ::google::protobuf::uint32 PBQuestionExp::exp(int index) const {
  return exp_.Get(index);
}
inline void PBQuestionExp::set_exp(int index, ::google::protobuf::uint32 value) {
  exp_.Set(index, value);
}
inline void PBQuestionExp::add_exp(::google::protobuf::uint32 value) {
  exp_.Add(value);
}

// optional uint32 NpcExpAddRate = 4;
inline bool PBQuestionExp::has_npcexpaddrate() const {
  return _has_bit(3);
}
inline void PBQuestionExp::clear_npcexpaddrate() {
  npcexpaddrate_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBQuestionExp::npcexpaddrate() const {
  return npcexpaddrate_;
}
inline void PBQuestionExp::set_npcexpaddrate(::google::protobuf::uint32 value) {
  _set_bit(3);
  npcexpaddrate_ = value;
}

// -------------------------------------------------------------------

// PBBindChargeTable

// optional uint32 TempID = 1;
inline bool PBBindChargeTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBBindChargeTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBBindChargeTable::tempid() const {
  return tempid_;
}
inline void PBBindChargeTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 MoneyBindNeed = 2;
inline bool PBBindChargeTable::has_moneybindneed() const {
  return _has_bit(1);
}
inline void PBBindChargeTable::clear_moneybindneed() {
  moneybindneed_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBBindChargeTable::moneybindneed() const {
  return moneybindneed_;
}
inline void PBBindChargeTable::set_moneybindneed(::google::protobuf::uint32 value) {
  _set_bit(1);
  moneybindneed_ = value;
}

// optional uint32 CanBindUseBM = 3;
inline bool PBBindChargeTable::has_canbindusebm() const {
  return _has_bit(2);
}
inline void PBBindChargeTable::clear_canbindusebm() {
  canbindusebm_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBBindChargeTable::canbindusebm() const {
  return canbindusebm_;
}
inline void PBBindChargeTable::set_canbindusebm(::google::protobuf::uint32 value) {
  _set_bit(2);
  canbindusebm_ = value;
}

// optional uint32 MoneyUnBindNeed = 4;
inline bool PBBindChargeTable::has_moneyunbindneed() const {
  return _has_bit(3);
}
inline void PBBindChargeTable::clear_moneyunbindneed() {
  moneyunbindneed_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBBindChargeTable::moneyunbindneed() const {
  return moneyunbindneed_;
}
inline void PBBindChargeTable::set_moneyunbindneed(::google::protobuf::uint32 value) {
  _set_bit(3);
  moneyunbindneed_ = value;
}

// optional uint32 UnBindUseBM = 5;
inline bool PBBindChargeTable::has_unbindusebm() const {
  return _has_bit(4);
}
inline void PBBindChargeTable::clear_unbindusebm() {
  unbindusebm_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBBindChargeTable::unbindusebm() const {
  return unbindusebm_;
}
inline void PBBindChargeTable::set_unbindusebm(::google::protobuf::uint32 value) {
  _set_bit(4);
  unbindusebm_ = value;
}

// optional uint32 MoneyResumeBind = 6;
inline bool PBBindChargeTable::has_moneyresumebind() const {
  return _has_bit(5);
}
inline void PBBindChargeTable::clear_moneyresumebind() {
  moneyresumebind_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBBindChargeTable::moneyresumebind() const {
  return moneyresumebind_;
}
inline void PBBindChargeTable::set_moneyresumebind(::google::protobuf::uint32 value) {
  _set_bit(5);
  moneyresumebind_ = value;
}

// optional uint32 CanResumeBind = 7;
inline bool PBBindChargeTable::has_canresumebind() const {
  return _has_bit(6);
}
inline void PBBindChargeTable::clear_canresumebind() {
  canresumebind_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBBindChargeTable::canresumebind() const {
  return canresumebind_;
}
inline void PBBindChargeTable::set_canresumebind(::google::protobuf::uint32 value) {
  _set_bit(6);
  canresumebind_ = value;
}

// -------------------------------------------------------------------

// PBMinePos

// optional uint32 MapID = 1;
inline bool PBMinePos::has_mapid() const {
  return _has_bit(0);
}
inline void PBMinePos::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMinePos::mapid() const {
  return mapid_;
}
inline void PBMinePos::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// optional uint32 PosX = 2;
inline bool PBMinePos::has_posx() const {
  return _has_bit(1);
}
inline void PBMinePos::clear_posx() {
  posx_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMinePos::posx() const {
  return posx_;
}
inline void PBMinePos::set_posx(::google::protobuf::uint32 value) {
  _set_bit(1);
  posx_ = value;
}

// optional uint32 PosY = 3;
inline bool PBMinePos::has_posy() const {
  return _has_bit(2);
}
inline void PBMinePos::clear_posy() {
  posy_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMinePos::posy() const {
  return posy_;
}
inline void PBMinePos::set_posy(::google::protobuf::uint32 value) {
  _set_bit(2);
  posy_ = value;
}

// optional uint32 Probability = 4;
inline bool PBMinePos::has_probability() const {
  return _has_bit(3);
}
inline void PBMinePos::clear_probability() {
  probability_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMinePos::probability() const {
  return probability_;
}
inline void PBMinePos::set_probability(::google::protobuf::uint32 value) {
  _set_bit(3);
  probability_ = value;
}

// -------------------------------------------------------------------

// PBMineEvent

// optional uint32 EventID = 1;
inline bool PBMineEvent::has_eventid() const {
  return _has_bit(0);
}
inline void PBMineEvent::clear_eventid() {
  eventid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMineEvent::eventid() const {
  return eventid_;
}
inline void PBMineEvent::set_eventid(::google::protobuf::uint32 value) {
  _set_bit(0);
  eventid_ = value;
}

// optional uint32 TouchRate = 2;
inline bool PBMineEvent::has_touchrate() const {
  return _has_bit(1);
}
inline void PBMineEvent::clear_touchrate() {
  touchrate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMineEvent::touchrate() const {
  return touchrate_;
}
inline void PBMineEvent::set_touchrate(::google::protobuf::uint32 value) {
  _set_bit(1);
  touchrate_ = value;
}

// -------------------------------------------------------------------

// PBItemMineMap

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemMineMap::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemMineMap::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemMineMap::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemMineMap::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// repeated .PBMinePos MinePos = 2;
inline int PBItemMineMap::minepos_size() const {
  return minepos_.size();
}
inline void PBItemMineMap::clear_minepos() {
  minepos_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMinePos >&
PBItemMineMap::minepos() const {
  return minepos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMinePos >*
PBItemMineMap::mutable_minepos() {
  return &minepos_;
}
inline const ::PBMinePos& PBItemMineMap::minepos(int index) const {
  return minepos_.Get(index);
}
inline ::PBMinePos* PBItemMineMap::mutable_minepos(int index) {
  return minepos_.Mutable(index);
}
inline ::PBMinePos* PBItemMineMap::add_minepos() {
  return minepos_.Add();
}

// repeated .PBMineEvent MineEvent = 3;
inline int PBItemMineMap::mineevent_size() const {
  return mineevent_.size();
}
inline void PBItemMineMap::clear_mineevent() {
  mineevent_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMineEvent >&
PBItemMineMap::mineevent() const {
  return mineevent_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMineEvent >*
PBItemMineMap::mutable_mineevent() {
  return &mineevent_;
}
inline const ::PBMineEvent& PBItemMineMap::mineevent(int index) const {
  return mineevent_.Get(index);
}
inline ::PBMineEvent* PBItemMineMap::mutable_mineevent(int index) {
  return mineevent_.Mutable(index);
}
inline ::PBMineEvent* PBItemMineMap::add_mineevent() {
  return mineevent_.Add();
}

// optional uint32 Radius = 4;
inline bool PBItemMineMap::has_radius() const {
  return _has_bit(3);
}
inline void PBItemMineMap::clear_radius() {
  radius_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemMineMap::radius() const {
  return radius_;
}
inline void PBItemMineMap::set_radius(::google::protobuf::uint32 value) {
  _set_bit(3);
  radius_ = value;
}

// optional uint32 DropTable = 5;
inline bool PBItemMineMap::has_droptable() const {
  return _has_bit(4);
}
inline void PBItemMineMap::clear_droptable() {
  droptable_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemMineMap::droptable() const {
  return droptable_;
}
inline void PBItemMineMap::set_droptable(::google::protobuf::uint32 value) {
  _set_bit(4);
  droptable_ = value;
}

// optional uint32 DecBuff = 6;
inline bool PBItemMineMap::has_decbuff() const {
  return _has_bit(5);
}
inline void PBItemMineMap::clear_decbuff() {
  decbuff_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemMineMap::decbuff() const {
  return decbuff_;
}
inline void PBItemMineMap::set_decbuff(::google::protobuf::uint32 value) {
  _set_bit(5);
  decbuff_ = value;
}

// optional uint32 OgreID = 7;
inline bool PBItemMineMap::has_ogreid() const {
  return _has_bit(6);
}
inline void PBItemMineMap::clear_ogreid() {
  ogreid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemMineMap::ogreid() const {
  return ogreid_;
}
inline void PBItemMineMap::set_ogreid(::google::protobuf::uint32 value) {
  _set_bit(6);
  ogreid_ = value;
}

// optional uint32 OgreNum = 8;
inline bool PBItemMineMap::has_ogrenum() const {
  return _has_bit(7);
}
inline void PBItemMineMap::clear_ogrenum() {
  ogrenum_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemMineMap::ogrenum() const {
  return ogrenum_;
}
inline void PBItemMineMap::set_ogrenum(::google::protobuf::uint32 value) {
  _set_bit(7);
  ogrenum_ = value;
}

// optional uint32 MapID = 9;
inline bool PBItemMineMap::has_mapid() const {
  return _has_bit(8);
}
inline void PBItemMineMap::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemMineMap::mapid() const {
  return mapid_;
}
inline void PBItemMineMap::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(8);
  mapid_ = value;
}

// optional uint32 PosX = 10;
inline bool PBItemMineMap::has_posx() const {
  return _has_bit(9);
}
inline void PBItemMineMap::clear_posx() {
  posx_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemMineMap::posx() const {
  return posx_;
}
inline void PBItemMineMap::set_posx(::google::protobuf::uint32 value) {
  _set_bit(9);
  posx_ = value;
}

// optional uint32 PosY = 11;
inline bool PBItemMineMap::has_posy() const {
  return _has_bit(10);
}
inline void PBItemMineMap::clear_posy() {
  posy_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemMineMap::posy() const {
  return posy_;
}
inline void PBItemMineMap::set_posy(::google::protobuf::uint32 value) {
  _set_bit(10);
  posy_ = value;
}

// optional uint32 Special = 12;
inline bool PBItemMineMap::has_special() const {
  return _has_bit(11);
}
inline void PBItemMineMap::clear_special() {
  special_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemMineMap::special() const {
  return special_;
}
inline void PBItemMineMap::set_special(::google::protobuf::uint32 value) {
  _set_bit(11);
  special_ = value;
}

// -------------------------------------------------------------------

// PBRelatively_Pos

// optional int32 X = 1;
inline bool PBRelatively_Pos::has_x() const {
  return _has_bit(0);
}
inline void PBRelatively_Pos::clear_x() {
  x_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PBRelatively_Pos::x() const {
  return x_;
}
inline void PBRelatively_Pos::set_x(::google::protobuf::int32 value) {
  _set_bit(0);
  x_ = value;
}

// optional int32 Y = 2;
inline bool PBRelatively_Pos::has_y() const {
  return _has_bit(1);
}
inline void PBRelatively_Pos::clear_y() {
  y_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBRelatively_Pos::y() const {
  return y_;
}
inline void PBRelatively_Pos::set_y(::google::protobuf::int32 value) {
  _set_bit(1);
  y_ = value;
}

// -------------------------------------------------------------------

// PBBlock

// optional .PBOgreProperty BaseInfo = 1;
inline bool PBBlock::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBBlock::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBOgreProperty::Clear();
  _clear_bit(0);
}
inline const ::PBOgreProperty& PBBlock::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBOgreProperty* PBBlock::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBOgreProperty;
  return baseinfo_;
}

// optional int32 Select = 2;
inline bool PBBlock::has_select() const {
  return _has_bit(1);
}
inline void PBBlock::clear_select() {
  select_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBBlock::select() const {
  return select_;
}
inline void PBBlock::set_select(::google::protobuf::int32 value) {
  _set_bit(1);
  select_ = value;
}

// repeated .PBRelatively_Pos Pos = 3;
inline int PBBlock::pos_size() const {
  return pos_.size();
}
inline void PBBlock::clear_pos() {
  pos_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBRelatively_Pos >&
PBBlock::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBRelatively_Pos >*
PBBlock::mutable_pos() {
  return &pos_;
}
inline const ::PBRelatively_Pos& PBBlock::pos(int index) const {
  return pos_.Get(index);
}
inline ::PBRelatively_Pos* PBBlock::mutable_pos(int index) {
  return pos_.Mutable(index);
}
inline ::PBRelatively_Pos* PBBlock::add_pos() {
  return pos_.Add();
}

// -------------------------------------------------------------------

// PBPKDrop

// optional uint32 State = 1;
inline bool PBPKDrop::has_state() const {
  return _has_bit(0);
}
inline void PBPKDrop::clear_state() {
  state_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPKDrop::state() const {
  return state_;
}
inline void PBPKDrop::set_state(::google::protobuf::uint32 value) {
  _set_bit(0);
  state_ = value;
}

// optional int32 EquipDropRate = 2;
inline bool PBPKDrop::has_equipdroprate() const {
  return _has_bit(1);
}
inline void PBPKDrop::clear_equipdroprate() {
  equipdroprate_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBPKDrop::equipdroprate() const {
  return equipdroprate_;
}
inline void PBPKDrop::set_equipdroprate(::google::protobuf::int32 value) {
  _set_bit(1);
  equipdroprate_ = value;
}

// optional int32 BagDropRate1 = 3;
inline bool PBPKDrop::has_bagdroprate1() const {
  return _has_bit(2);
}
inline void PBPKDrop::clear_bagdroprate1() {
  bagdroprate1_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBPKDrop::bagdroprate1() const {
  return bagdroprate1_;
}
inline void PBPKDrop::set_bagdroprate1(::google::protobuf::int32 value) {
  _set_bit(2);
  bagdroprate1_ = value;
}

// optional int32 BagDropRate2 = 4;
inline bool PBPKDrop::has_bagdroprate2() const {
  return _has_bit(3);
}
inline void PBPKDrop::clear_bagdroprate2() {
  bagdroprate2_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PBPKDrop::bagdroprate2() const {
  return bagdroprate2_;
}
inline void PBPKDrop::set_bagdroprate2(::google::protobuf::int32 value) {
  _set_bit(3);
  bagdroprate2_ = value;
}

// optional int32 GoPrisonRate = 5;
inline bool PBPKDrop::has_goprisonrate() const {
  return _has_bit(4);
}
inline void PBPKDrop::clear_goprisonrate() {
  goprisonrate_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 PBPKDrop::goprisonrate() const {
  return goprisonrate_;
}
inline void PBPKDrop::set_goprisonrate(::google::protobuf::int32 value) {
  _set_bit(4);
  goprisonrate_ = value;
}

// optional int32 PrisonTime = 6;
inline bool PBPKDrop::has_prisontime() const {
  return _has_bit(5);
}
inline void PBPKDrop::clear_prisontime() {
  prisontime_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PBPKDrop::prisontime() const {
  return prisontime_;
}
inline void PBPKDrop::set_prisontime(::google::protobuf::int32 value) {
  _set_bit(5);
  prisontime_ = value;
}

// -------------------------------------------------------------------

// PBPKValueTable

// optional uint32 TempID = 1;
inline bool PBPKValueTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBPKValueTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPKValueTable::tempid() const {
  return tempid_;
}
inline void PBPKValueTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional int32 NavyBlue = 2;
inline bool PBPKValueTable::has_navyblue() const {
  return _has_bit(1);
}
inline void PBPKValueTable::clear_navyblue() {
  navyblue_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 PBPKValueTable::navyblue() const {
  return navyblue_;
}
inline void PBPKValueTable::set_navyblue(::google::protobuf::int32 value) {
  _set_bit(1);
  navyblue_ = value;
}

// optional int32 Blue = 3;
inline bool PBPKValueTable::has_blue() const {
  return _has_bit(2);
}
inline void PBPKValueTable::clear_blue() {
  blue_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 PBPKValueTable::blue() const {
  return blue_;
}
inline void PBPKValueTable::set_blue(::google::protobuf::int32 value) {
  _set_bit(2);
  blue_ = value;
}

// optional int32 CambridgeBlue = 4;
inline bool PBPKValueTable::has_cambridgeblue() const {
  return _has_bit(3);
}
inline void PBPKValueTable::clear_cambridgeblue() {
  cambridgeblue_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 PBPKValueTable::cambridgeblue() const {
  return cambridgeblue_;
}
inline void PBPKValueTable::set_cambridgeblue(::google::protobuf::int32 value) {
  _set_bit(3);
  cambridgeblue_ = value;
}

// optional int32 White = 5;
inline bool PBPKValueTable::has_white() const {
  return _has_bit(4);
}
inline void PBPKValueTable::clear_white() {
  white_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 PBPKValueTable::white() const {
  return white_;
}
inline void PBPKValueTable::set_white(::google::protobuf::int32 value) {
  _set_bit(4);
  white_ = value;
}

// optional int32 Rosiness = 6;
inline bool PBPKValueTable::has_rosiness() const {
  return _has_bit(5);
}
inline void PBPKValueTable::clear_rosiness() {
  rosiness_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 PBPKValueTable::rosiness() const {
  return rosiness_;
}
inline void PBPKValueTable::set_rosiness(::google::protobuf::int32 value) {
  _set_bit(5);
  rosiness_ = value;
}

// optional int32 Red = 7;
inline bool PBPKValueTable::has_red() const {
  return _has_bit(6);
}
inline void PBPKValueTable::clear_red() {
  red_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 PBPKValueTable::red() const {
  return red_;
}
inline void PBPKValueTable::set_red(::google::protobuf::int32 value) {
  _set_bit(6);
  red_ = value;
}

// optional int32 CarMine = 8;
inline bool PBPKValueTable::has_carmine() const {
  return _has_bit(7);
}
inline void PBPKValueTable::clear_carmine() {
  carmine_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 PBPKValueTable::carmine() const {
  return carmine_;
}
inline void PBPKValueTable::set_carmine(::google::protobuf::int32 value) {
  _set_bit(7);
  carmine_ = value;
}

// optional int32 RedTopLimit = 9;
inline bool PBPKValueTable::has_redtoplimit() const {
  return _has_bit(8);
}
inline void PBPKValueTable::clear_redtoplimit() {
  redtoplimit_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 PBPKValueTable::redtoplimit() const {
  return redtoplimit_;
}
inline void PBPKValueTable::set_redtoplimit(::google::protobuf::int32 value) {
  _set_bit(8);
  redtoplimit_ = value;
}

// optional int32 YellowTime = 10;
inline bool PBPKValueTable::has_yellowtime() const {
  return _has_bit(9);
}
inline void PBPKValueTable::clear_yellowtime() {
  yellowtime_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 PBPKValueTable::yellowtime() const {
  return yellowtime_;
}
inline void PBPKValueTable::set_yellowtime(::google::protobuf::int32 value) {
  _set_bit(9);
  yellowtime_ = value;
}

// optional int32 DecValue = 11;
inline bool PBPKValueTable::has_decvalue() const {
  return _has_bit(10);
}
inline void PBPKValueTable::clear_decvalue() {
  decvalue_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 PBPKValueTable::decvalue() const {
  return decvalue_;
}
inline void PBPKValueTable::set_decvalue(::google::protobuf::int32 value) {
  _set_bit(10);
  decvalue_ = value;
}

// repeated int32 DecExpRate = 12;
inline int PBPKValueTable::decexprate_size() const {
  return decexprate_.size();
}
inline void PBPKValueTable::clear_decexprate() {
  decexprate_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBPKValueTable::decexprate() const {
  return decexprate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBPKValueTable::mutable_decexprate() {
  return &decexprate_;
}
inline ::google::protobuf::int32 PBPKValueTable::decexprate(int index) const {
  return decexprate_.Get(index);
}
inline void PBPKValueTable::set_decexprate(int index, ::google::protobuf::int32 value) {
  decexprate_.Set(index, value);
}
inline void PBPKValueTable::add_decexprate(::google::protobuf::int32 value) {
  decexprate_.Add(value);
}

// repeated int32 TopLimitDecExp = 13;
inline int PBPKValueTable::toplimitdecexp_size() const {
  return toplimitdecexp_.size();
}
inline void PBPKValueTable::clear_toplimitdecexp() {
  toplimitdecexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBPKValueTable::toplimitdecexp() const {
  return toplimitdecexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBPKValueTable::mutable_toplimitdecexp() {
  return &toplimitdecexp_;
}
inline ::google::protobuf::int32 PBPKValueTable::toplimitdecexp(int index) const {
  return toplimitdecexp_.Get(index);
}
inline void PBPKValueTable::set_toplimitdecexp(int index, ::google::protobuf::int32 value) {
  toplimitdecexp_.Set(index, value);
}
inline void PBPKValueTable::add_toplimitdecexp(::google::protobuf::int32 value) {
  toplimitdecexp_.Add(value);
}

// repeated int32 PriceChange = 14;
inline int PBPKValueTable::pricechange_size() const {
  return pricechange_.size();
}
inline void PBPKValueTable::clear_pricechange() {
  pricechange_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBPKValueTable::pricechange() const {
  return pricechange_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBPKValueTable::mutable_pricechange() {
  return &pricechange_;
}
inline ::google::protobuf::int32 PBPKValueTable::pricechange(int index) const {
  return pricechange_.Get(index);
}
inline void PBPKValueTable::set_pricechange(int index, ::google::protobuf::int32 value) {
  pricechange_.Set(index, value);
}
inline void PBPKValueTable::add_pricechange(::google::protobuf::int32 value) {
  pricechange_.Add(value);
}

// optional int32 LineID = 15;
inline bool PBPKValueTable::has_lineid() const {
  return _has_bit(14);
}
inline void PBPKValueTable::clear_lineid() {
  lineid_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 PBPKValueTable::lineid() const {
  return lineid_;
}
inline void PBPKValueTable::set_lineid(::google::protobuf::int32 value) {
  _set_bit(14);
  lineid_ = value;
}

// optional int32 MapID = 16;
inline bool PBPKValueTable::has_mapid() const {
  return _has_bit(15);
}
inline void PBPKValueTable::clear_mapid() {
  mapid_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 PBPKValueTable::mapid() const {
  return mapid_;
}
inline void PBPKValueTable::set_mapid(::google::protobuf::int32 value) {
  _set_bit(15);
  mapid_ = value;
}

// optional int32 PosX = 17;
inline bool PBPKValueTable::has_posx() const {
  return _has_bit(16);
}
inline void PBPKValueTable::clear_posx() {
  posx_ = 0;
  _clear_bit(16);
}
inline ::google::protobuf::int32 PBPKValueTable::posx() const {
  return posx_;
}
inline void PBPKValueTable::set_posx(::google::protobuf::int32 value) {
  _set_bit(16);
  posx_ = value;
}

// optional int32 PosY = 18;
inline bool PBPKValueTable::has_posy() const {
  return _has_bit(17);
}
inline void PBPKValueTable::clear_posy() {
  posy_ = 0;
  _clear_bit(17);
}
inline ::google::protobuf::int32 PBPKValueTable::posy() const {
  return posy_;
}
inline void PBPKValueTable::set_posy(::google::protobuf::int32 value) {
  _set_bit(17);
  posy_ = value;
}

// repeated .PBPKDrop Drop = 19;
inline int PBPKValueTable::drop_size() const {
  return drop_.size();
}
inline void PBPKValueTable::clear_drop() {
  drop_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPKDrop >&
PBPKValueTable::drop() const {
  return drop_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPKDrop >*
PBPKValueTable::mutable_drop() {
  return &drop_;
}
inline const ::PBPKDrop& PBPKValueTable::drop(int index) const {
  return drop_.Get(index);
}
inline ::PBPKDrop* PBPKValueTable::mutable_drop(int index) {
  return drop_.Mutable(index);
}
inline ::PBPKDrop* PBPKValueTable::add_drop() {
  return drop_.Add();
}

// optional uint32 FreeMapID = 20;
inline bool PBPKValueTable::has_freemapid() const {
  return _has_bit(19);
}
inline void PBPKValueTable::clear_freemapid() {
  freemapid_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBPKValueTable::freemapid() const {
  return freemapid_;
}
inline void PBPKValueTable::set_freemapid(::google::protobuf::uint32 value) {
  _set_bit(19);
  freemapid_ = value;
}

// optional uint32 FreePosX = 21;
inline bool PBPKValueTable::has_freeposx() const {
  return _has_bit(20);
}
inline void PBPKValueTable::clear_freeposx() {
  freeposx_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBPKValueTable::freeposx() const {
  return freeposx_;
}
inline void PBPKValueTable::set_freeposx(::google::protobuf::uint32 value) {
  _set_bit(20);
  freeposx_ = value;
}

// optional uint32 FreePosY = 22;
inline bool PBPKValueTable::has_freeposy() const {
  return _has_bit(21);
}
inline void PBPKValueTable::clear_freeposy() {
  freeposy_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBPKValueTable::freeposy() const {
  return freeposy_;
}
inline void PBPKValueTable::set_freeposy(::google::protobuf::uint32 value) {
  _set_bit(21);
  freeposy_ = value;
}

// optional uint32 PrisonTime = 23;
inline bool PBPKValueTable::has_prisontime() const {
  return _has_bit(22);
}
inline void PBPKValueTable::clear_prisontime() {
  prisontime_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBPKValueTable::prisontime() const {
  return prisontime_;
}
inline void PBPKValueTable::set_prisontime(::google::protobuf::uint32 value) {
  _set_bit(22);
  prisontime_ = value;
}

// optional uint32 BasePKValue = 24;
inline bool PBPKValueTable::has_basepkvalue() const {
  return _has_bit(23);
}
inline void PBPKValueTable::clear_basepkvalue() {
  basepkvalue_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBPKValueTable::basepkvalue() const {
  return basepkvalue_;
}
inline void PBPKValueTable::set_basepkvalue(::google::protobuf::uint32 value) {
  _set_bit(23);
  basepkvalue_ = value;
}

// repeated uint32 PKValueLevel = 25;
inline int PBPKValueTable::pkvaluelevel_size() const {
  return pkvaluelevel_.size();
}
inline void PBPKValueTable::clear_pkvaluelevel() {
  pkvaluelevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPKValueTable::pkvaluelevel() const {
  return pkvaluelevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPKValueTable::mutable_pkvaluelevel() {
  return &pkvaluelevel_;
}
inline ::google::protobuf::uint32 PBPKValueTable::pkvaluelevel(int index) const {
  return pkvaluelevel_.Get(index);
}
inline void PBPKValueTable::set_pkvaluelevel(int index, ::google::protobuf::uint32 value) {
  pkvaluelevel_.Set(index, value);
}
inline void PBPKValueTable::add_pkvaluelevel(::google::protobuf::uint32 value) {
  pkvaluelevel_.Add(value);
}

// optional uint32 DropRateInEnemy = 26;
inline bool PBPKValueTable::has_droprateinenemy() const {
  return _has_bit(25);
}
inline void PBPKValueTable::clear_droprateinenemy() {
  droprateinenemy_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBPKValueTable::droprateinenemy() const {
  return droprateinenemy_;
}
inline void PBPKValueTable::set_droprateinenemy(::google::protobuf::uint32 value) {
  _set_bit(25);
  droprateinenemy_ = value;
}

// optional uint32 PrisonBuffID = 27;
inline bool PBPKValueTable::has_prisonbuffid() const {
  return _has_bit(26);
}
inline void PBPKValueTable::clear_prisonbuffid() {
  prisonbuffid_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBPKValueTable::prisonbuffid() const {
  return prisonbuffid_;
}
inline void PBPKValueTable::set_prisonbuffid(::google::protobuf::uint32 value) {
  _set_bit(26);
  prisonbuffid_ = value;
}

// -------------------------------------------------------------------

// PBItemToken

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemToken::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemToken::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemToken::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemToken::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// repeated .PBMinePos Pos = 2;
inline int PBItemToken::pos_size() const {
  return pos_.size();
}
inline void PBItemToken::clear_pos() {
  pos_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMinePos >&
PBItemToken::pos() const {
  return pos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMinePos >*
PBItemToken::mutable_pos() {
  return &pos_;
}
inline const ::PBMinePos& PBItemToken::pos(int index) const {
  return pos_.Get(index);
}
inline ::PBMinePos* PBItemToken::mutable_pos(int index) {
  return pos_.Mutable(index);
}
inline ::PBMinePos* PBItemToken::add_pos() {
  return pos_.Add();
}

// optional uint32 Radius = 3;
inline bool PBItemToken::has_radius() const {
  return _has_bit(2);
}
inline void PBItemToken::clear_radius() {
  radius_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemToken::radius() const {
  return radius_;
}
inline void PBItemToken::set_radius(::google::protobuf::uint32 value) {
  _set_bit(2);
  radius_ = value;
}

// optional uint32 OgreID = 4;
inline bool PBItemToken::has_ogreid() const {
  return _has_bit(3);
}
inline void PBItemToken::clear_ogreid() {
  ogreid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemToken::ogreid() const {
  return ogreid_;
}
inline void PBItemToken::set_ogreid(::google::protobuf::uint32 value) {
  _set_bit(3);
  ogreid_ = value;
}

// optional uint32 OgreNum = 5;
inline bool PBItemToken::has_ogrenum() const {
  return _has_bit(4);
}
inline void PBItemToken::clear_ogrenum() {
  ogrenum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemToken::ogrenum() const {
  return ogrenum_;
}
inline void PBItemToken::set_ogrenum(::google::protobuf::uint32 value) {
  _set_bit(4);
  ogrenum_ = value;
}

// -------------------------------------------------------------------

// PBItemKitBag

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemKitBag::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemKitBag::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemKitBag::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemKitBag::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 IndexNum = 2;
inline bool PBItemKitBag::has_indexnum() const {
  return _has_bit(1);
}
inline void PBItemKitBag::clear_indexnum() {
  indexnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemKitBag::indexnum() const {
  return indexnum_;
}
inline void PBItemKitBag::set_indexnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  indexnum_ = value;
}

// -------------------------------------------------------------------

// PBItemGiftBag

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemGiftBag::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemGiftBag::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemGiftBag::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemGiftBag::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 DropTableID = 2;
inline bool PBItemGiftBag::has_droptableid() const {
  return _has_bit(1);
}
inline void PBItemGiftBag::clear_droptableid() {
  droptableid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemGiftBag::droptableid() const {
  return droptableid_;
}
inline void PBItemGiftBag::set_droptableid(::google::protobuf::uint32 value) {
  _set_bit(1);
  droptableid_ = value;
}

// optional uint32 MinLevel = 3;
inline bool PBItemGiftBag::has_minlevel() const {
  return _has_bit(2);
}
inline void PBItemGiftBag::clear_minlevel() {
  minlevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemGiftBag::minlevel() const {
  return minlevel_;
}
inline void PBItemGiftBag::set_minlevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  minlevel_ = value;
}

// optional uint32 MinMoney = 4;
inline bool PBItemGiftBag::has_minmoney() const {
  return _has_bit(3);
}
inline void PBItemGiftBag::clear_minmoney() {
  minmoney_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemGiftBag::minmoney() const {
  return minmoney_;
}
inline void PBItemGiftBag::set_minmoney(::google::protobuf::uint32 value) {
  _set_bit(3);
  minmoney_ = value;
}

// optional uint32 MinBindMoney = 5;
inline bool PBItemGiftBag::has_minbindmoney() const {
  return _has_bit(4);
}
inline void PBItemGiftBag::clear_minbindmoney() {
  minbindmoney_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemGiftBag::minbindmoney() const {
  return minbindmoney_;
}
inline void PBItemGiftBag::set_minbindmoney(::google::protobuf::uint32 value) {
  _set_bit(4);
  minbindmoney_ = value;
}

// optional uint32 MinSilverYB = 6;
inline bool PBItemGiftBag::has_minsilveryb() const {
  return _has_bit(5);
}
inline void PBItemGiftBag::clear_minsilveryb() {
  minsilveryb_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemGiftBag::minsilveryb() const {
  return minsilveryb_;
}
inline void PBItemGiftBag::set_minsilveryb(::google::protobuf::uint32 value) {
  _set_bit(5);
  minsilveryb_ = value;
}

// optional uint32 DropInBag = 7;
inline bool PBItemGiftBag::has_dropinbag() const {
  return _has_bit(6);
}
inline void PBItemGiftBag::clear_dropinbag() {
  dropinbag_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemGiftBag::dropinbag() const {
  return dropinbag_;
}
inline void PBItemGiftBag::set_dropinbag(::google::protobuf::uint32 value) {
  _set_bit(6);
  dropinbag_ = value;
}

// optional uint32 MaxMoney = 8;
inline bool PBItemGiftBag::has_maxmoney() const {
  return _has_bit(7);
}
inline void PBItemGiftBag::clear_maxmoney() {
  maxmoney_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemGiftBag::maxmoney() const {
  return maxmoney_;
}
inline void PBItemGiftBag::set_maxmoney(::google::protobuf::uint32 value) {
  _set_bit(7);
  maxmoney_ = value;
}

// optional uint32 MaxBindMoney = 9;
inline bool PBItemGiftBag::has_maxbindmoney() const {
  return _has_bit(8);
}
inline void PBItemGiftBag::clear_maxbindmoney() {
  maxbindmoney_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemGiftBag::maxbindmoney() const {
  return maxbindmoney_;
}
inline void PBItemGiftBag::set_maxbindmoney(::google::protobuf::uint32 value) {
  _set_bit(8);
  maxbindmoney_ = value;
}

// optional uint32 MaxSilverYB = 10;
inline bool PBItemGiftBag::has_maxsilveryb() const {
  return _has_bit(9);
}
inline void PBItemGiftBag::clear_maxsilveryb() {
  maxsilveryb_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemGiftBag::maxsilveryb() const {
  return maxsilveryb_;
}
inline void PBItemGiftBag::set_maxsilveryb(::google::protobuf::uint32 value) {
  _set_bit(9);
  maxsilveryb_ = value;
}

// optional uint32 CheckBag = 11;
inline bool PBItemGiftBag::has_checkbag() const {
  return _has_bit(10);
}
inline void PBItemGiftBag::clear_checkbag() {
  checkbag_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemGiftBag::checkbag() const {
  return checkbag_;
}
inline void PBItemGiftBag::set_checkbag(::google::protobuf::uint32 value) {
  _set_bit(10);
  checkbag_ = value;
}

// optional uint32 MinExp = 12;
inline bool PBItemGiftBag::has_minexp() const {
  return _has_bit(11);
}
inline void PBItemGiftBag::clear_minexp() {
  minexp_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemGiftBag::minexp() const {
  return minexp_;
}
inline void PBItemGiftBag::set_minexp(::google::protobuf::uint32 value) {
  _set_bit(11);
  minexp_ = value;
}

// optional uint32 MaxExp = 13;
inline bool PBItemGiftBag::has_maxexp() const {
  return _has_bit(12);
}
inline void PBItemGiftBag::clear_maxexp() {
  maxexp_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemGiftBag::maxexp() const {
  return maxexp_;
}
inline void PBItemGiftBag::set_maxexp(::google::protobuf::uint32 value) {
  _set_bit(12);
  maxexp_ = value;
}

// repeated uint32 LevelTableID = 14;
inline int PBItemGiftBag::leveltableid_size() const {
  return leveltableid_.size();
}
inline void PBItemGiftBag::clear_leveltableid() {
  leveltableid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemGiftBag::leveltableid() const {
  return leveltableid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemGiftBag::mutable_leveltableid() {
  return &leveltableid_;
}
inline ::google::protobuf::uint32 PBItemGiftBag::leveltableid(int index) const {
  return leveltableid_.Get(index);
}
inline void PBItemGiftBag::set_leveltableid(int index, ::google::protobuf::uint32 value) {
  leveltableid_.Set(index, value);
}
inline void PBItemGiftBag::add_leveltableid(::google::protobuf::uint32 value) {
  leveltableid_.Add(value);
}

// optional uint32 LiHuaID = 15;
inline bool PBItemGiftBag::has_lihuaid() const {
  return _has_bit(14);
}
inline void PBItemGiftBag::clear_lihuaid() {
  lihuaid_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBItemGiftBag::lihuaid() const {
  return lihuaid_;
}
inline void PBItemGiftBag::set_lihuaid(::google::protobuf::uint32 value) {
  _set_bit(14);
  lihuaid_ = value;
}

// repeated uint32 OpenItemID = 16;
inline int PBItemGiftBag::openitemid_size() const {
  return openitemid_.size();
}
inline void PBItemGiftBag::clear_openitemid() {
  openitemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemGiftBag::openitemid() const {
  return openitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemGiftBag::mutable_openitemid() {
  return &openitemid_;
}
inline ::google::protobuf::uint32 PBItemGiftBag::openitemid(int index) const {
  return openitemid_.Get(index);
}
inline void PBItemGiftBag::set_openitemid(int index, ::google::protobuf::uint32 value) {
  openitemid_.Set(index, value);
}
inline void PBItemGiftBag::add_openitemid(::google::protobuf::uint32 value) {
  openitemid_.Add(value);
}

// repeated uint32 OpenTableID = 17;
inline int PBItemGiftBag::opentableid_size() const {
  return opentableid_.size();
}
inline void PBItemGiftBag::clear_opentableid() {
  opentableid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemGiftBag::opentableid() const {
  return opentableid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemGiftBag::mutable_opentableid() {
  return &opentableid_;
}
inline ::google::protobuf::uint32 PBItemGiftBag::opentableid(int index) const {
  return opentableid_.Get(index);
}
inline void PBItemGiftBag::set_opentableid(int index, ::google::protobuf::uint32 value) {
  opentableid_.Set(index, value);
}
inline void PBItemGiftBag::add_opentableid(::google::protobuf::uint32 value) {
  opentableid_.Add(value);
}

// -------------------------------------------------------------------

// PBItemAdapter

// optional uint32 TempID = 1;
inline bool PBItemAdapter::has_tempid() const {
  return _has_bit(0);
}
inline void PBItemAdapter::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemAdapter::tempid() const {
  return tempid_;
}
inline void PBItemAdapter::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 ItemType = 2;
inline bool PBItemAdapter::has_itemtype() const {
  return _has_bit(1);
}
inline void PBItemAdapter::clear_itemtype() {
  itemtype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemAdapter::itemtype() const {
  return itemtype_;
}
inline void PBItemAdapter::set_itemtype(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemtype_ = value;
}

// optional uint32 RealType = 3;
inline bool PBItemAdapter::has_realtype() const {
  return _has_bit(2);
}
inline void PBItemAdapter::clear_realtype() {
  realtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemAdapter::realtype() const {
  return realtype_;
}
inline void PBItemAdapter::set_realtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  realtype_ = value;
}

// optional uint32 RealTempID = 4;
inline bool PBItemAdapter::has_realtempid() const {
  return _has_bit(3);
}
inline void PBItemAdapter::clear_realtempid() {
  realtempid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemAdapter::realtempid() const {
  return realtempid_;
}
inline void PBItemAdapter::set_realtempid(::google::protobuf::uint32 value) {
  _set_bit(3);
  realtempid_ = value;
}

// optional uint32 MaxLevelMinus = 5;
inline bool PBItemAdapter::has_maxlevelminus() const {
  return _has_bit(4);
}
inline void PBItemAdapter::clear_maxlevelminus() {
  maxlevelminus_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemAdapter::maxlevelminus() const {
  return maxlevelminus_;
}
inline void PBItemAdapter::set_maxlevelminus(::google::protobuf::uint32 value) {
  _set_bit(4);
  maxlevelminus_ = value;
}

// optional uint32 Param = 6;
inline bool PBItemAdapter::has_param() const {
  return _has_bit(5);
}
inline void PBItemAdapter::clear_param() {
  param_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemAdapter::param() const {
  return param_;
}
inline void PBItemAdapter::set_param(::google::protobuf::uint32 value) {
  _set_bit(5);
  param_ = value;
}

// optional uint32 MaxValue = 7;
inline bool PBItemAdapter::has_maxvalue() const {
  return _has_bit(6);
}
inline void PBItemAdapter::clear_maxvalue() {
  maxvalue_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemAdapter::maxvalue() const {
  return maxvalue_;
}
inline void PBItemAdapter::set_maxvalue(::google::protobuf::uint32 value) {
  _set_bit(6);
  maxvalue_ = value;
}

// optional uint32 MinValue = 8;
inline bool PBItemAdapter::has_minvalue() const {
  return _has_bit(7);
}
inline void PBItemAdapter::clear_minvalue() {
  minvalue_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemAdapter::minvalue() const {
  return minvalue_;
}
inline void PBItemAdapter::set_minvalue(::google::protobuf::uint32 value) {
  _set_bit(7);
  minvalue_ = value;
}

// -------------------------------------------------------------------

// PBTplHierogram

// optional uint32 TempID = 1;
inline bool PBTplHierogram::has_tempid() const {
  return _has_bit(0);
}
inline void PBTplHierogram::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTplHierogram::tempid() const {
  return tempid_;
}
inline void PBTplHierogram::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Res = 2;
inline bool PBTplHierogram::has_res() const {
  return _has_bit(1);
}
inline void PBTplHierogram::clear_res() {
  if (res_ != &_default_res_) {
    res_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBTplHierogram::res() const {
  return *res_;
}
inline void PBTplHierogram::set_res(const ::std::string& value) {
  _set_bit(1);
  if (res_ == &_default_res_) {
    res_ = new ::std::string;
  }
  res_->assign(value);
}
inline void PBTplHierogram::set_res(const char* value) {
  _set_bit(1);
  if (res_ == &_default_res_) {
    res_ = new ::std::string;
  }
  res_->assign(value);
}
inline void PBTplHierogram::set_res(const char* value, size_t size) {
  _set_bit(1);
  if (res_ == &_default_res_) {
    res_ = new ::std::string;
  }
  res_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTplHierogram::mutable_res() {
  _set_bit(1);
  if (res_ == &_default_res_) {
    res_ = new ::std::string;
  }
  return res_;
}

// optional uint32 Alive = 3;
inline bool PBTplHierogram::has_alive() const {
  return _has_bit(2);
}
inline void PBTplHierogram::clear_alive() {
  alive_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTplHierogram::alive() const {
  return alive_;
}
inline void PBTplHierogram::set_alive(::google::protobuf::uint32 value) {
  _set_bit(2);
  alive_ = value;
}

// optional uint32 Type = 4;
inline bool PBTplHierogram::has_type() const {
  return _has_bit(3);
}
inline void PBTplHierogram::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTplHierogram::type() const {
  return type_;
}
inline void PBTplHierogram::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// optional uint32 Parame1 = 5;
inline bool PBTplHierogram::has_parame1() const {
  return _has_bit(4);
}
inline void PBTplHierogram::clear_parame1() {
  parame1_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTplHierogram::parame1() const {
  return parame1_;
}
inline void PBTplHierogram::set_parame1(::google::protobuf::uint32 value) {
  _set_bit(4);
  parame1_ = value;
}

// optional uint32 Parame2 = 6;
inline bool PBTplHierogram::has_parame2() const {
  return _has_bit(5);
}
inline void PBTplHierogram::clear_parame2() {
  parame2_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBTplHierogram::parame2() const {
  return parame2_;
}
inline void PBTplHierogram::set_parame2(::google::protobuf::uint32 value) {
  _set_bit(5);
  parame2_ = value;
}

// -------------------------------------------------------------------

// PBStep

// optional uint32 StageID = 1;
inline bool PBStep::has_stageid() const {
  return _has_bit(0);
}
inline void PBStep::clear_stageid() {
  stageid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBStep::stageid() const {
  return stageid_;
}
inline void PBStep::set_stageid(::google::protobuf::uint32 value) {
  _set_bit(0);
  stageid_ = value;
}

// optional uint32 SkillTree = 2;
inline bool PBStep::has_skilltree() const {
  return _has_bit(1);
}
inline void PBStep::clear_skilltree() {
  skilltree_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBStep::skilltree() const {
  return skilltree_;
}
inline void PBStep::set_skilltree(::google::protobuf::uint32 value) {
  _set_bit(1);
  skilltree_ = value;
}

// repeated uint32 Next = 3;
inline int PBStep::next_size() const {
  return next_.size();
}
inline void PBStep::clear_next() {
  next_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBStep::next() const {
  return next_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBStep::mutable_next() {
  return &next_;
}
inline ::google::protobuf::uint32 PBStep::next(int index) const {
  return next_.Get(index);
}
inline void PBStep::set_next(int index, ::google::protobuf::uint32 value) {
  next_.Set(index, value);
}
inline void PBStep::add_next(::google::protobuf::uint32 value) {
  next_.Add(value);
}

// optional uint32 MaxPoint = 5;
inline bool PBStep::has_maxpoint() const {
  return _has_bit(3);
}
inline void PBStep::clear_maxpoint() {
  maxpoint_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBStep::maxpoint() const {
  return maxpoint_;
}
inline void PBStep::set_maxpoint(::google::protobuf::uint32 value) {
  _set_bit(3);
  maxpoint_ = value;
}

// optional string StageDesc = 6;
inline bool PBStep::has_stagedesc() const {
  return _has_bit(4);
}
inline void PBStep::clear_stagedesc() {
  if (stagedesc_ != &_default_stagedesc_) {
    stagedesc_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& PBStep::stagedesc() const {
  return *stagedesc_;
}
inline void PBStep::set_stagedesc(const ::std::string& value) {
  _set_bit(4);
  if (stagedesc_ == &_default_stagedesc_) {
    stagedesc_ = new ::std::string;
  }
  stagedesc_->assign(value);
}
inline void PBStep::set_stagedesc(const char* value) {
  _set_bit(4);
  if (stagedesc_ == &_default_stagedesc_) {
    stagedesc_ = new ::std::string;
  }
  stagedesc_->assign(value);
}
inline void PBStep::set_stagedesc(const char* value, size_t size) {
  _set_bit(4);
  if (stagedesc_ == &_default_stagedesc_) {
    stagedesc_ = new ::std::string;
  }
  stagedesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBStep::mutable_stagedesc() {
  _set_bit(4);
  if (stagedesc_ == &_default_stagedesc_) {
    stagedesc_ = new ::std::string;
  }
  return stagedesc_;
}

// optional uint32 Layer = 7;
inline bool PBStep::has_layer() const {
  return _has_bit(5);
}
inline void PBStep::clear_layer() {
  layer_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBStep::layer() const {
  return layer_;
}
inline void PBStep::set_layer(::google::protobuf::uint32 value) {
  _set_bit(5);
  layer_ = value;
}

// -------------------------------------------------------------------

// PBTitle

// optional string Title = 1;
inline bool PBTitle::has_title() const {
  return _has_bit(0);
}
inline void PBTitle::clear_title() {
  if (title_ != &_default_title_) {
    title_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& PBTitle::title() const {
  return *title_;
}
inline void PBTitle::set_title(const ::std::string& value) {
  _set_bit(0);
  if (title_ == &_default_title_) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void PBTitle::set_title(const char* value) {
  _set_bit(0);
  if (title_ == &_default_title_) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void PBTitle::set_title(const char* value, size_t size) {
  _set_bit(0);
  if (title_ == &_default_title_) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTitle::mutable_title() {
  _set_bit(0);
  if (title_ == &_default_title_) {
    title_ = new ::std::string;
  }
  return title_;
}

// optional uint32 Type = 2;
inline bool PBTitle::has_type() const {
  return _has_bit(1);
}
inline void PBTitle::clear_type() {
  type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTitle::type() const {
  return type_;
}
inline void PBTitle::set_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  type_ = value;
}

// optional uint32 ObtainCondition = 3;
inline bool PBTitle::has_obtaincondition() const {
  return _has_bit(2);
}
inline void PBTitle::clear_obtaincondition() {
  obtaincondition_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTitle::obtaincondition() const {
  return obtaincondition_;
}
inline void PBTitle::set_obtaincondition(::google::protobuf::uint32 value) {
  _set_bit(2);
  obtaincondition_ = value;
}

// optional uint32 SubCondition = 4;
inline bool PBTitle::has_subcondition() const {
  return _has_bit(3);
}
inline void PBTitle::clear_subcondition() {
  subcondition_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBTitle::subcondition() const {
  return subcondition_;
}
inline void PBTitle::set_subcondition(::google::protobuf::uint32 value) {
  _set_bit(3);
  subcondition_ = value;
}

// optional uint32 Color = 5;
inline bool PBTitle::has_color() const {
  return _has_bit(4);
}
inline void PBTitle::clear_color() {
  color_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBTitle::color() const {
  return color_;
}
inline void PBTitle::set_color(::google::protobuf::uint32 value) {
  _set_bit(4);
  color_ = value;
}

// optional uint32 AddProperty = 6;
inline bool PBTitle::has_addproperty() const {
  return _has_bit(5);
}
inline void PBTitle::clear_addproperty() {
  addproperty_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBTitle::addproperty() const {
  return addproperty_;
}
inline void PBTitle::set_addproperty(::google::protobuf::uint32 value) {
  _set_bit(5);
  addproperty_ = value;
}

// optional uint32 IsHidden = 7;
inline bool PBTitle::has_ishidden() const {
  return _has_bit(6);
}
inline void PBTitle::clear_ishidden() {
  ishidden_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBTitle::ishidden() const {
  return ishidden_;
}
inline void PBTitle::set_ishidden(::google::protobuf::uint32 value) {
  _set_bit(6);
  ishidden_ = value;
}

// optional uint32 IsReplace = 8;
inline bool PBTitle::has_isreplace() const {
  return _has_bit(7);
}
inline void PBTitle::clear_isreplace() {
  isreplace_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBTitle::isreplace() const {
  return isreplace_;
}
inline void PBTitle::set_isreplace(::google::protobuf::uint32 value) {
  _set_bit(7);
  isreplace_ = value;
}

// optional string Descrbe = 9;
inline bool PBTitle::has_descrbe() const {
  return _has_bit(8);
}
inline void PBTitle::clear_descrbe() {
  if (descrbe_ != &_default_descrbe_) {
    descrbe_->clear();
  }
  _clear_bit(8);
}
inline const ::std::string& PBTitle::descrbe() const {
  return *descrbe_;
}
inline void PBTitle::set_descrbe(const ::std::string& value) {
  _set_bit(8);
  if (descrbe_ == &_default_descrbe_) {
    descrbe_ = new ::std::string;
  }
  descrbe_->assign(value);
}
inline void PBTitle::set_descrbe(const char* value) {
  _set_bit(8);
  if (descrbe_ == &_default_descrbe_) {
    descrbe_ = new ::std::string;
  }
  descrbe_->assign(value);
}
inline void PBTitle::set_descrbe(const char* value, size_t size) {
  _set_bit(8);
  if (descrbe_ == &_default_descrbe_) {
    descrbe_ = new ::std::string;
  }
  descrbe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTitle::mutable_descrbe() {
  _set_bit(8);
  if (descrbe_ == &_default_descrbe_) {
    descrbe_ = new ::std::string;
  }
  return descrbe_;
}

// optional uint32 ValidTime = 10;
inline bool PBTitle::has_validtime() const {
  return _has_bit(9);
}
inline void PBTitle::clear_validtime() {
  validtime_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBTitle::validtime() const {
  return validtime_;
}
inline void PBTitle::set_validtime(::google::protobuf::uint32 value) {
  _set_bit(9);
  validtime_ = value;
}

// optional uint32 IsTeamTitle = 11;
inline bool PBTitle::has_isteamtitle() const {
  return _has_bit(10);
}
inline void PBTitle::clear_isteamtitle() {
  isteamtitle_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBTitle::isteamtitle() const {
  return isteamtitle_;
}
inline void PBTitle::set_isteamtitle(::google::protobuf::uint32 value) {
  _set_bit(10);
  isteamtitle_ = value;
}

// optional uint32 Param = 12;
inline bool PBTitle::has_param() const {
  return _has_bit(11);
}
inline void PBTitle::clear_param() {
  param_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBTitle::param() const {
  return param_;
}
inline void PBTitle::set_param(::google::protobuf::uint32 value) {
  _set_bit(11);
  param_ = value;
}

// optional string Detail = 13;
inline bool PBTitle::has_detail() const {
  return _has_bit(12);
}
inline void PBTitle::clear_detail() {
  if (detail_ != &_default_detail_) {
    detail_->clear();
  }
  _clear_bit(12);
}
inline const ::std::string& PBTitle::detail() const {
  return *detail_;
}
inline void PBTitle::set_detail(const ::std::string& value) {
  _set_bit(12);
  if (detail_ == &_default_detail_) {
    detail_ = new ::std::string;
  }
  detail_->assign(value);
}
inline void PBTitle::set_detail(const char* value) {
  _set_bit(12);
  if (detail_ == &_default_detail_) {
    detail_ = new ::std::string;
  }
  detail_->assign(value);
}
inline void PBTitle::set_detail(const char* value, size_t size) {
  _set_bit(12);
  if (detail_ == &_default_detail_) {
    detail_ = new ::std::string;
  }
  detail_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTitle::mutable_detail() {
  _set_bit(12);
  if (detail_ == &_default_detail_) {
    detail_ = new ::std::string;
  }
  return detail_;
}

// -------------------------------------------------------------------

// PBTitleManager

// optional uint32 TempID = 1;
inline bool PBTitleManager::has_tempid() const {
  return _has_bit(0);
}
inline void PBTitleManager::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTitleManager::tempid() const {
  return tempid_;
}
inline void PBTitleManager::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBTitle Title = 2;
inline int PBTitleManager::title_size() const {
  return title_.size();
}
inline void PBTitleManager::clear_title() {
  title_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTitle >&
PBTitleManager::title() const {
  return title_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTitle >*
PBTitleManager::mutable_title() {
  return &title_;
}
inline const ::PBTitle& PBTitleManager::title(int index) const {
  return title_.Get(index);
}
inline ::PBTitle* PBTitleManager::mutable_title(int index) {
  return title_.Mutable(index);
}
inline ::PBTitle* PBTitleManager::add_title() {
  return title_.Add();
}

// -------------------------------------------------------------------

// PBTplBuffImmunity

// optional uint32 TempID = 1;
inline bool PBTplBuffImmunity::has_tempid() const {
  return _has_bit(0);
}
inline void PBTplBuffImmunity::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTplBuffImmunity::tempid() const {
  return tempid_;
}
inline void PBTplBuffImmunity::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 BuffType = 2;
inline int PBTplBuffImmunity::bufftype_size() const {
  return bufftype_.size();
}
inline void PBTplBuffImmunity::clear_bufftype() {
  bufftype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTplBuffImmunity::bufftype() const {
  return bufftype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTplBuffImmunity::mutable_bufftype() {
  return &bufftype_;
}
inline ::google::protobuf::uint32 PBTplBuffImmunity::bufftype(int index) const {
  return bufftype_.Get(index);
}
inline void PBTplBuffImmunity::set_bufftype(int index, ::google::protobuf::uint32 value) {
  bufftype_.Set(index, value);
}
inline void PBTplBuffImmunity::add_bufftype(::google::protobuf::uint32 value) {
  bufftype_.Add(value);
}

// -------------------------------------------------------------------

// PBTemplateTalent

// optional uint32 TempID = 1;
inline bool PBTemplateTalent::has_tempid() const {
  return _has_bit(0);
}
inline void PBTemplateTalent::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTemplateTalent::tempid() const {
  return tempid_;
}
inline void PBTemplateTalent::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBStep Step = 2;
inline int PBTemplateTalent::step_size() const {
  return step_.size();
}
inline void PBTemplateTalent::clear_step() {
  step_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBStep >&
PBTemplateTalent::step() const {
  return step_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBStep >*
PBTemplateTalent::mutable_step() {
  return &step_;
}
inline const ::PBStep& PBTemplateTalent::step(int index) const {
  return step_.Get(index);
}
inline ::PBStep* PBTemplateTalent::mutable_step(int index) {
  return step_.Mutable(index);
}
inline ::PBStep* PBTemplateTalent::add_step() {
  return step_.Add();
}

// repeated uint32 Exp = 3;
inline int PBTemplateTalent::exp_size() const {
  return exp_.size();
}
inline void PBTemplateTalent::clear_exp() {
  exp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTemplateTalent::exp() const {
  return exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTemplateTalent::mutable_exp() {
  return &exp_;
}
inline ::google::protobuf::uint32 PBTemplateTalent::exp(int index) const {
  return exp_.Get(index);
}
inline void PBTemplateTalent::set_exp(int index, ::google::protobuf::uint32 value) {
  exp_.Set(index, value);
}
inline void PBTemplateTalent::add_exp(::google::protobuf::uint32 value) {
  exp_.Add(value);
}

// -------------------------------------------------------------------

// PBMagicWeaponProIncValue

// optional uint32 LevelPoints = 1;
inline bool PBMagicWeaponProIncValue::has_levelpoints() const {
  return _has_bit(0);
}
inline void PBMagicWeaponProIncValue::clear_levelpoints() {
  levelpoints_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelpoints() const {
  return levelpoints_;
}
inline void PBMagicWeaponProIncValue::set_levelpoints(::google::protobuf::uint32 value) {
  _set_bit(0);
  levelpoints_ = value;
}

// optional uint64 LevelExp = 2;
inline bool PBMagicWeaponProIncValue::has_levelexp() const {
  return _has_bit(1);
}
inline void PBMagicWeaponProIncValue::clear_levelexp() {
  levelexp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PBMagicWeaponProIncValue::levelexp() const {
  return levelexp_;
}
inline void PBMagicWeaponProIncValue::set_levelexp(::google::protobuf::uint64 value) {
  _set_bit(1);
  levelexp_ = value;
}

// optional uint32 LevelProcessVal = 3;
inline bool PBMagicWeaponProIncValue::has_levelprocessval() const {
  return _has_bit(2);
}
inline void PBMagicWeaponProIncValue::clear_levelprocessval() {
  levelprocessval_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelprocessval() const {
  return levelprocessval_;
}
inline void PBMagicWeaponProIncValue::set_levelprocessval(::google::protobuf::uint32 value) {
  _set_bit(2);
  levelprocessval_ = value;
}

// optional uint32 LevelProcessCurel = 4;
inline bool PBMagicWeaponProIncValue::has_levelprocesscurel() const {
  return _has_bit(3);
}
inline void PBMagicWeaponProIncValue::clear_levelprocesscurel() {
  levelprocesscurel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelprocesscurel() const {
  return levelprocesscurel_;
}
inline void PBMagicWeaponProIncValue::set_levelprocesscurel(::google::protobuf::uint32 value) {
  _set_bit(3);
  levelprocesscurel_ = value;
}

// optional uint32 LevelProcessCurelVal = 5;
inline bool PBMagicWeaponProIncValue::has_levelprocesscurelval() const {
  return _has_bit(4);
}
inline void PBMagicWeaponProIncValue::clear_levelprocesscurelval() {
  levelprocesscurelval_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelprocesscurelval() const {
  return levelprocesscurelval_;
}
inline void PBMagicWeaponProIncValue::set_levelprocesscurelval(::google::protobuf::uint32 value) {
  _set_bit(4);
  levelprocesscurelval_ = value;
}

// optional uint32 LevelKeen = 6;
inline bool PBMagicWeaponProIncValue::has_levelkeen() const {
  return _has_bit(5);
}
inline void PBMagicWeaponProIncValue::clear_levelkeen() {
  levelkeen_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelkeen() const {
  return levelkeen_;
}
inline void PBMagicWeaponProIncValue::set_levelkeen(::google::protobuf::uint32 value) {
  _set_bit(5);
  levelkeen_ = value;
}

// optional uint32 LevelCalm = 7;
inline bool PBMagicWeaponProIncValue::has_levelcalm() const {
  return _has_bit(6);
}
inline void PBMagicWeaponProIncValue::clear_levelcalm() {
  levelcalm_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelcalm() const {
  return levelcalm_;
}
inline void PBMagicWeaponProIncValue::set_levelcalm(::google::protobuf::uint32 value) {
  _set_bit(6);
  levelcalm_ = value;
}

// optional uint32 LevelMagic = 8;
inline bool PBMagicWeaponProIncValue::has_levelmagic() const {
  return _has_bit(7);
}
inline void PBMagicWeaponProIncValue::clear_levelmagic() {
  levelmagic_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelmagic() const {
  return levelmagic_;
}
inline void PBMagicWeaponProIncValue::set_levelmagic(::google::protobuf::uint32 value) {
  _set_bit(7);
  levelmagic_ = value;
}

// optional uint32 LevelBier = 9;
inline bool PBMagicWeaponProIncValue::has_levelbier() const {
  return _has_bit(8);
}
inline void PBMagicWeaponProIncValue::clear_levelbier() {
  levelbier_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelbier() const {
  return levelbier_;
}
inline void PBMagicWeaponProIncValue::set_levelbier(::google::protobuf::uint32 value) {
  _set_bit(8);
  levelbier_ = value;
}

// optional uint32 LevelImmortal = 10;
inline bool PBMagicWeaponProIncValue::has_levelimmortal() const {
  return _has_bit(9);
}
inline void PBMagicWeaponProIncValue::clear_levelimmortal() {
  levelimmortal_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBMagicWeaponProIncValue::levelimmortal() const {
  return levelimmortal_;
}
inline void PBMagicWeaponProIncValue::set_levelimmortal(::google::protobuf::uint32 value) {
  _set_bit(9);
  levelimmortal_ = value;
}

// -------------------------------------------------------------------

// PBTemplateLifeSkill

// optional uint32 TempID = 1;
inline bool PBTemplateLifeSkill::has_tempid() const {
  return _has_bit(0);
}
inline void PBTemplateLifeSkill::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::tempid() const {
  return tempid_;
}
inline void PBTemplateLifeSkill::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 LifeSkillType = 2;
inline bool PBTemplateLifeSkill::has_lifeskilltype() const {
  return _has_bit(1);
}
inline void PBTemplateLifeSkill::clear_lifeskilltype() {
  lifeskilltype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::lifeskilltype() const {
  return lifeskilltype_;
}
inline void PBTemplateLifeSkill::set_lifeskilltype(::google::protobuf::uint32 value) {
  _set_bit(1);
  lifeskilltype_ = value;
}

// optional uint32 LifeSkillKind = 3;
inline bool PBTemplateLifeSkill::has_lifeskillkind() const {
  return _has_bit(2);
}
inline void PBTemplateLifeSkill::clear_lifeskillkind() {
  lifeskillkind_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::lifeskillkind() const {
  return lifeskillkind_;
}
inline void PBTemplateLifeSkill::set_lifeskillkind(::google::protobuf::uint32 value) {
  _set_bit(2);
  lifeskillkind_ = value;
}

// repeated uint32 DegreeStarted = 4;
inline int PBTemplateLifeSkill::degreestarted_size() const {
  return degreestarted_.size();
}
inline void PBTemplateLifeSkill::clear_degreestarted() {
  degreestarted_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTemplateLifeSkill::degreestarted() const {
  return degreestarted_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTemplateLifeSkill::mutable_degreestarted() {
  return &degreestarted_;
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::degreestarted(int index) const {
  return degreestarted_.Get(index);
}
inline void PBTemplateLifeSkill::set_degreestarted(int index, ::google::protobuf::uint32 value) {
  degreestarted_.Set(index, value);
}
inline void PBTemplateLifeSkill::add_degreestarted(::google::protobuf::uint32 value) {
  degreestarted_.Add(value);
}

// repeated uint32 StudyMoney = 5;
inline int PBTemplateLifeSkill::studymoney_size() const {
  return studymoney_.size();
}
inline void PBTemplateLifeSkill::clear_studymoney() {
  studymoney_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTemplateLifeSkill::studymoney() const {
  return studymoney_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTemplateLifeSkill::mutable_studymoney() {
  return &studymoney_;
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::studymoney(int index) const {
  return studymoney_.Get(index);
}
inline void PBTemplateLifeSkill::set_studymoney(int index, ::google::protobuf::uint32 value) {
  studymoney_.Set(index, value);
}
inline void PBTemplateLifeSkill::add_studymoney(::google::protobuf::uint32 value) {
  studymoney_.Add(value);
}

// repeated string SkillName = 6;
inline int PBTemplateLifeSkill::skillname_size() const {
  return skillname_.size();
}
inline void PBTemplateLifeSkill::clear_skillname() {
  skillname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBTemplateLifeSkill::skillname() const {
  return skillname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBTemplateLifeSkill::mutable_skillname() {
  return &skillname_;
}
inline const ::std::string& PBTemplateLifeSkill::skillname(int index) const {
  return skillname_.Get(index);
}
inline ::std::string* PBTemplateLifeSkill::mutable_skillname(int index) {
  return skillname_.Mutable(index);
}
inline void PBTemplateLifeSkill::set_skillname(int index, const ::std::string& value) {
  skillname_.Mutable(index)->assign(value);
}
inline void PBTemplateLifeSkill::set_skillname(int index, const char* value) {
  skillname_.Mutable(index)->assign(value);
}
inline void PBTemplateLifeSkill::set_skillname(int index, const char* value, size_t size) {
  skillname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTemplateLifeSkill::add_skillname() {
  return skillname_.Add();
}
inline void PBTemplateLifeSkill::add_skillname(const ::std::string& value) {
  skillname_.Add()->assign(value);
}
inline void PBTemplateLifeSkill::add_skillname(const char* value) {
  skillname_.Add()->assign(value);
}
inline void PBTemplateLifeSkill::add_skillname(const char* value, size_t size) {
  skillname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 CharacterNameID = 7;
inline int PBTemplateLifeSkill::characternameid_size() const {
  return characternameid_.size();
}
inline void PBTemplateLifeSkill::clear_characternameid() {
  characternameid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTemplateLifeSkill::characternameid() const {
  return characternameid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTemplateLifeSkill::mutable_characternameid() {
  return &characternameid_;
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::characternameid(int index) const {
  return characternameid_.Get(index);
}
inline void PBTemplateLifeSkill::set_characternameid(int index, ::google::protobuf::uint32 value) {
  characternameid_.Set(index, value);
}
inline void PBTemplateLifeSkill::add_characternameid(::google::protobuf::uint32 value) {
  characternameid_.Add(value);
}

// repeated uint32 StudyDegree = 8;
inline int PBTemplateLifeSkill::studydegree_size() const {
  return studydegree_.size();
}
inline void PBTemplateLifeSkill::clear_studydegree() {
  studydegree_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTemplateLifeSkill::studydegree() const {
  return studydegree_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTemplateLifeSkill::mutable_studydegree() {
  return &studydegree_;
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::studydegree(int index) const {
  return studydegree_.Get(index);
}
inline void PBTemplateLifeSkill::set_studydegree(int index, ::google::protobuf::uint32 value) {
  studydegree_.Set(index, value);
}
inline void PBTemplateLifeSkill::add_studydegree(::google::protobuf::uint32 value) {
  studydegree_.Add(value);
}

// repeated uint32 Level = 9;
inline int PBTemplateLifeSkill::level_size() const {
  return level_.size();
}
inline void PBTemplateLifeSkill::clear_level() {
  level_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTemplateLifeSkill::level() const {
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTemplateLifeSkill::mutable_level() {
  return &level_;
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::level(int index) const {
  return level_.Get(index);
}
inline void PBTemplateLifeSkill::set_level(int index, ::google::protobuf::uint32 value) {
  level_.Set(index, value);
}
inline void PBTemplateLifeSkill::add_level(::google::protobuf::uint32 value) {
  level_.Add(value);
}

// optional uint32 SubSkillLevelLimit = 10;
inline bool PBTemplateLifeSkill::has_subskilllevellimit() const {
  return _has_bit(9);
}
inline void PBTemplateLifeSkill::clear_subskilllevellimit() {
  subskilllevellimit_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::subskilllevellimit() const {
  return subskilllevellimit_;
}
inline void PBTemplateLifeSkill::set_subskilllevellimit(::google::protobuf::uint32 value) {
  _set_bit(9);
  subskilllevellimit_ = value;
}

// repeated uint32 DegreeValue = 11;
inline int PBTemplateLifeSkill::degreevalue_size() const {
  return degreevalue_.size();
}
inline void PBTemplateLifeSkill::clear_degreevalue() {
  degreevalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTemplateLifeSkill::degreevalue() const {
  return degreevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTemplateLifeSkill::mutable_degreevalue() {
  return &degreevalue_;
}
inline ::google::protobuf::uint32 PBTemplateLifeSkill::degreevalue(int index) const {
  return degreevalue_.Get(index);
}
inline void PBTemplateLifeSkill::set_degreevalue(int index, ::google::protobuf::uint32 value) {
  degreevalue_.Set(index, value);
}
inline void PBTemplateLifeSkill::add_degreevalue(::google::protobuf::uint32 value) {
  degreevalue_.Add(value);
}

// -------------------------------------------------------------------

// PBDecompondTable

// optional uint32 FstItemID = 1;
inline bool PBDecompondTable::has_fstitemid() const {
  return _has_bit(0);
}
inline void PBDecompondTable::clear_fstitemid() {
  fstitemid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDecompondTable::fstitemid() const {
  return fstitemid_;
}
inline void PBDecompondTable::set_fstitemid(::google::protobuf::uint32 value) {
  _set_bit(0);
  fstitemid_ = value;
}

// optional uint32 FstProbability = 2;
inline bool PBDecompondTable::has_fstprobability() const {
  return _has_bit(1);
}
inline void PBDecompondTable::clear_fstprobability() {
  fstprobability_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBDecompondTable::fstprobability() const {
  return fstprobability_;
}
inline void PBDecompondTable::set_fstprobability(::google::protobuf::uint32 value) {
  _set_bit(1);
  fstprobability_ = value;
}

// optional uint32 SecItemID = 3;
inline bool PBDecompondTable::has_secitemid() const {
  return _has_bit(2);
}
inline void PBDecompondTable::clear_secitemid() {
  secitemid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBDecompondTable::secitemid() const {
  return secitemid_;
}
inline void PBDecompondTable::set_secitemid(::google::protobuf::uint32 value) {
  _set_bit(2);
  secitemid_ = value;
}

// optional uint32 SecProbability = 4;
inline bool PBDecompondTable::has_secprobability() const {
  return _has_bit(3);
}
inline void PBDecompondTable::clear_secprobability() {
  secprobability_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBDecompondTable::secprobability() const {
  return secprobability_;
}
inline void PBDecompondTable::set_secprobability(::google::protobuf::uint32 value) {
  _set_bit(3);
  secprobability_ = value;
}

// optional uint32 ThirdItemID = 5;
inline bool PBDecompondTable::has_thirditemid() const {
  return _has_bit(4);
}
inline void PBDecompondTable::clear_thirditemid() {
  thirditemid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBDecompondTable::thirditemid() const {
  return thirditemid_;
}
inline void PBDecompondTable::set_thirditemid(::google::protobuf::uint32 value) {
  _set_bit(4);
  thirditemid_ = value;
}

// optional uint32 ThirdProbability = 6;
inline bool PBDecompondTable::has_thirdprobability() const {
  return _has_bit(5);
}
inline void PBDecompondTable::clear_thirdprobability() {
  thirdprobability_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBDecompondTable::thirdprobability() const {
  return thirdprobability_;
}
inline void PBDecompondTable::set_thirdprobability(::google::protobuf::uint32 value) {
  _set_bit(5);
  thirdprobability_ = value;
}

// optional uint32 DegreeNeeded = 7;
inline bool PBDecompondTable::has_degreeneeded() const {
  return _has_bit(6);
}
inline void PBDecompondTable::clear_degreeneeded() {
  degreeneeded_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBDecompondTable::degreeneeded() const {
  return degreeneeded_;
}
inline void PBDecompondTable::set_degreeneeded(::google::protobuf::uint32 value) {
  _set_bit(6);
  degreeneeded_ = value;
}

// optional uint32 FstItemNum = 8;
inline bool PBDecompondTable::has_fstitemnum() const {
  return _has_bit(7);
}
inline void PBDecompondTable::clear_fstitemnum() {
  fstitemnum_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBDecompondTable::fstitemnum() const {
  return fstitemnum_;
}
inline void PBDecompondTable::set_fstitemnum(::google::protobuf::uint32 value) {
  _set_bit(7);
  fstitemnum_ = value;
}

// optional uint32 SecItemNum = 9;
inline bool PBDecompondTable::has_secitemnum() const {
  return _has_bit(8);
}
inline void PBDecompondTable::clear_secitemnum() {
  secitemnum_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBDecompondTable::secitemnum() const {
  return secitemnum_;
}
inline void PBDecompondTable::set_secitemnum(::google::protobuf::uint32 value) {
  _set_bit(8);
  secitemnum_ = value;
}

// optional uint32 ThirdItemNum = 10;
inline bool PBDecompondTable::has_thirditemnum() const {
  return _has_bit(9);
}
inline void PBDecompondTable::clear_thirditemnum() {
  thirditemnum_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBDecompondTable::thirditemnum() const {
  return thirditemnum_;
}
inline void PBDecompondTable::set_thirditemnum(::google::protobuf::uint32 value) {
  _set_bit(9);
  thirditemnum_ = value;
}

// -------------------------------------------------------------------

// PBCTemplateDecompound

// optional uint32 TempID = 1;
inline bool PBCTemplateDecompound::has_tempid() const {
  return _has_bit(0);
}
inline void PBCTemplateDecompound::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCTemplateDecompound::tempid() const {
  return tempid_;
}
inline void PBCTemplateDecompound::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBDecompondTable WhiteDecompond = 2;
inline int PBCTemplateDecompound::whitedecompond_size() const {
  return whitedecompond_.size();
}
inline void PBCTemplateDecompound::clear_whitedecompond() {
  whitedecompond_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >&
PBCTemplateDecompound::whitedecompond() const {
  return whitedecompond_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >*
PBCTemplateDecompound::mutable_whitedecompond() {
  return &whitedecompond_;
}
inline const ::PBDecompondTable& PBCTemplateDecompound::whitedecompond(int index) const {
  return whitedecompond_.Get(index);
}
inline ::PBDecompondTable* PBCTemplateDecompound::mutable_whitedecompond(int index) {
  return whitedecompond_.Mutable(index);
}
inline ::PBDecompondTable* PBCTemplateDecompound::add_whitedecompond() {
  return whitedecompond_.Add();
}

// repeated .PBDecompondTable BlueDecompond = 3;
inline int PBCTemplateDecompound::bluedecompond_size() const {
  return bluedecompond_.size();
}
inline void PBCTemplateDecompound::clear_bluedecompond() {
  bluedecompond_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >&
PBCTemplateDecompound::bluedecompond() const {
  return bluedecompond_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >*
PBCTemplateDecompound::mutable_bluedecompond() {
  return &bluedecompond_;
}
inline const ::PBDecompondTable& PBCTemplateDecompound::bluedecompond(int index) const {
  return bluedecompond_.Get(index);
}
inline ::PBDecompondTable* PBCTemplateDecompound::mutable_bluedecompond(int index) {
  return bluedecompond_.Mutable(index);
}
inline ::PBDecompondTable* PBCTemplateDecompound::add_bluedecompond() {
  return bluedecompond_.Add();
}

// repeated .PBDecompondTable PurpleDecompond = 4;
inline int PBCTemplateDecompound::purpledecompond_size() const {
  return purpledecompond_.size();
}
inline void PBCTemplateDecompound::clear_purpledecompond() {
  purpledecompond_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >&
PBCTemplateDecompound::purpledecompond() const {
  return purpledecompond_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDecompondTable >*
PBCTemplateDecompound::mutable_purpledecompond() {
  return &purpledecompond_;
}
inline const ::PBDecompondTable& PBCTemplateDecompound::purpledecompond(int index) const {
  return purpledecompond_.Get(index);
}
inline ::PBDecompondTable* PBCTemplateDecompound::mutable_purpledecompond(int index) {
  return purpledecompond_.Mutable(index);
}
inline ::PBDecompondTable* PBCTemplateDecompound::add_purpledecompond() {
  return purpledecompond_.Add();
}

// repeated uint32 Value = 5;
inline int PBCTemplateDecompound::value_size() const {
  return value_.size();
}
inline void PBCTemplateDecompound::clear_value() {
  value_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCTemplateDecompound::value() const {
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCTemplateDecompound::mutable_value() {
  return &value_;
}
inline ::google::protobuf::uint32 PBCTemplateDecompound::value(int index) const {
  return value_.Get(index);
}
inline void PBCTemplateDecompound::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
}
inline void PBCTemplateDecompound::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
}

// repeated uint32 Probability = 6;
inline int PBCTemplateDecompound::probability_size() const {
  return probability_.size();
}
inline void PBCTemplateDecompound::clear_probability() {
  probability_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCTemplateDecompound::probability() const {
  return probability_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCTemplateDecompound::mutable_probability() {
  return &probability_;
}
inline ::google::protobuf::uint32 PBCTemplateDecompound::probability(int index) const {
  return probability_.Get(index);
}
inline void PBCTemplateDecompound::set_probability(int index, ::google::protobuf::uint32 value) {
  probability_.Set(index, value);
}
inline void PBCTemplateDecompound::add_probability(::google::protobuf::uint32 value) {
  probability_.Add(value);
}

// repeated uint32 DegreeValue = 7;
inline int PBCTemplateDecompound::degreevalue_size() const {
  return degreevalue_.size();
}
inline void PBCTemplateDecompound::clear_degreevalue() {
  degreevalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCTemplateDecompound::degreevalue() const {
  return degreevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCTemplateDecompound::mutable_degreevalue() {
  return &degreevalue_;
}
inline ::google::protobuf::uint32 PBCTemplateDecompound::degreevalue(int index) const {
  return degreevalue_.Get(index);
}
inline void PBCTemplateDecompound::set_degreevalue(int index, ::google::protobuf::uint32 value) {
  degreevalue_.Set(index, value);
}
inline void PBCTemplateDecompound::add_degreevalue(::google::protobuf::uint32 value) {
  degreevalue_.Add(value);
}

// -------------------------------------------------------------------

// PBTplMagicWeaponProIncTable

// optional uint32 TempID = 1;
inline bool PBTplMagicWeaponProIncTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBTplMagicWeaponProIncTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTplMagicWeaponProIncTable::tempid() const {
  return tempid_;
}
inline void PBTplMagicWeaponProIncTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBMagicWeaponProIncValue Values = 3;
inline int PBTplMagicWeaponProIncTable::values_size() const {
  return values_.size();
}
inline void PBTplMagicWeaponProIncTable::clear_values() {
  values_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponProIncValue >&
PBTplMagicWeaponProIncTable::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMagicWeaponProIncValue >*
PBTplMagicWeaponProIncTable::mutable_values() {
  return &values_;
}
inline const ::PBMagicWeaponProIncValue& PBTplMagicWeaponProIncTable::values(int index) const {
  return values_.Get(index);
}
inline ::PBMagicWeaponProIncValue* PBTplMagicWeaponProIncTable::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::PBMagicWeaponProIncValue* PBTplMagicWeaponProIncTable::add_values() {
  return values_.Add();
}

// -------------------------------------------------------------------

// SingleMWDecomposeData

// optional uint32 TempID = 1;
inline bool SingleMWDecomposeData::has_tempid() const {
  return _has_bit(0);
}
inline void SingleMWDecomposeData::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SingleMWDecomposeData::tempid() const {
  return tempid_;
}
inline void SingleMWDecomposeData::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 NumMin = 2;
inline bool SingleMWDecomposeData::has_nummin() const {
  return _has_bit(1);
}
inline void SingleMWDecomposeData::clear_nummin() {
  nummin_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SingleMWDecomposeData::nummin() const {
  return nummin_;
}
inline void SingleMWDecomposeData::set_nummin(::google::protobuf::uint32 value) {
  _set_bit(1);
  nummin_ = value;
}

// optional uint32 NumMax = 3;
inline bool SingleMWDecomposeData::has_nummax() const {
  return _has_bit(2);
}
inline void SingleMWDecomposeData::clear_nummax() {
  nummax_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 SingleMWDecomposeData::nummax() const {
  return nummax_;
}
inline void SingleMWDecomposeData::set_nummax(::google::protobuf::uint32 value) {
  _set_bit(2);
  nummax_ = value;
}

// optional uint32 Prob = 4;
inline bool SingleMWDecomposeData::has_prob() const {
  return _has_bit(3);
}
inline void SingleMWDecomposeData::clear_prob() {
  prob_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 SingleMWDecomposeData::prob() const {
  return prob_;
}
inline void SingleMWDecomposeData::set_prob(::google::protobuf::uint32 value) {
  _set_bit(3);
  prob_ = value;
}

// -------------------------------------------------------------------

// PBMagicWeaponDecomposeTable

// optional uint32 TempID = 1;
inline bool PBMagicWeaponDecomposeTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBMagicWeaponDecomposeTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMagicWeaponDecomposeTable::tempid() const {
  return tempid_;
}
inline void PBMagicWeaponDecomposeTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 NeedMoneyType = 2;
inline bool PBMagicWeaponDecomposeTable::has_needmoneytype() const {
  return _has_bit(1);
}
inline void PBMagicWeaponDecomposeTable::clear_needmoneytype() {
  needmoneytype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMagicWeaponDecomposeTable::needmoneytype() const {
  return needmoneytype_;
}
inline void PBMagicWeaponDecomposeTable::set_needmoneytype(::google::protobuf::uint32 value) {
  _set_bit(1);
  needmoneytype_ = value;
}

// optional uint32 NeedMoney = 3;
inline bool PBMagicWeaponDecomposeTable::has_needmoney() const {
  return _has_bit(2);
}
inline void PBMagicWeaponDecomposeTable::clear_needmoney() {
  needmoney_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMagicWeaponDecomposeTable::needmoney() const {
  return needmoney_;
}
inline void PBMagicWeaponDecomposeTable::set_needmoney(::google::protobuf::uint32 value) {
  _set_bit(2);
  needmoney_ = value;
}

// repeated .SingleMWDecomposeData Items = 4;
inline int PBMagicWeaponDecomposeTable::items_size() const {
  return items_.size();
}
inline void PBMagicWeaponDecomposeTable::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::SingleMWDecomposeData >&
PBMagicWeaponDecomposeTable::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::SingleMWDecomposeData >*
PBMagicWeaponDecomposeTable::mutable_items() {
  return &items_;
}
inline const ::SingleMWDecomposeData& PBMagicWeaponDecomposeTable::items(int index) const {
  return items_.Get(index);
}
inline ::SingleMWDecomposeData* PBMagicWeaponDecomposeTable::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::SingleMWDecomposeData* PBMagicWeaponDecomposeTable::add_items() {
  return items_.Add();
}

// -------------------------------------------------------------------

// PBMagicWeaponQuickUpTable

// optional uint32 TempID = 1;
inline bool PBMagicWeaponQuickUpTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBMagicWeaponQuickUpTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::tempid() const {
  return tempid_;
}
inline void PBMagicWeaponQuickUpTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 NeedItem = 2;
inline bool PBMagicWeaponQuickUpTable::has_needitem() const {
  return _has_bit(1);
}
inline void PBMagicWeaponQuickUpTable::clear_needitem() {
  needitem_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::needitem() const {
  return needitem_;
}
inline void PBMagicWeaponQuickUpTable::set_needitem(::google::protobuf::uint32 value) {
  _set_bit(1);
  needitem_ = value;
}

// optional uint32 NeedItemNum = 3;
inline bool PBMagicWeaponQuickUpTable::has_needitemnum() const {
  return _has_bit(2);
}
inline void PBMagicWeaponQuickUpTable::clear_needitemnum() {
  needitemnum_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::needitemnum() const {
  return needitemnum_;
}
inline void PBMagicWeaponQuickUpTable::set_needitemnum(::google::protobuf::uint32 value) {
  _set_bit(2);
  needitemnum_ = value;
}

// optional uint32 NeedMoneyType = 4;
inline bool PBMagicWeaponQuickUpTable::has_needmoneytype() const {
  return _has_bit(3);
}
inline void PBMagicWeaponQuickUpTable::clear_needmoneytype() {
  needmoneytype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::needmoneytype() const {
  return needmoneytype_;
}
inline void PBMagicWeaponQuickUpTable::set_needmoneytype(::google::protobuf::uint32 value) {
  _set_bit(3);
  needmoneytype_ = value;
}

// optional uint32 NeedMoney = 5;
inline bool PBMagicWeaponQuickUpTable::has_needmoney() const {
  return _has_bit(4);
}
inline void PBMagicWeaponQuickUpTable::clear_needmoney() {
  needmoney_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::needmoney() const {
  return needmoney_;
}
inline void PBMagicWeaponQuickUpTable::set_needmoney(::google::protobuf::uint32 value) {
  _set_bit(4);
  needmoney_ = value;
}

// optional uint32 SuccessProb = 6;
inline bool PBMagicWeaponQuickUpTable::has_successprob() const {
  return _has_bit(5);
}
inline void PBMagicWeaponQuickUpTable::clear_successprob() {
  successprob_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::successprob() const {
  return successprob_;
}
inline void PBMagicWeaponQuickUpTable::set_successprob(::google::protobuf::uint32 value) {
  _set_bit(5);
  successprob_ = value;
}

// optional uint32 NewMWID = 7;
inline bool PBMagicWeaponQuickUpTable::has_newmwid() const {
  return _has_bit(6);
}
inline void PBMagicWeaponQuickUpTable::clear_newmwid() {
  newmwid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::newmwid() const {
  return newmwid_;
}
inline void PBMagicWeaponQuickUpTable::set_newmwid(::google::protobuf::uint32 value) {
  _set_bit(6);
  newmwid_ = value;
}

// optional uint32 NeedLevel = 8;
inline bool PBMagicWeaponQuickUpTable::has_needlevel() const {
  return _has_bit(7);
}
inline void PBMagicWeaponQuickUpTable::clear_needlevel() {
  needlevel_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::needlevel() const {
  return needlevel_;
}
inline void PBMagicWeaponQuickUpTable::set_needlevel(::google::protobuf::uint32 value) {
  _set_bit(7);
  needlevel_ = value;
}

// optional uint32 LeastLeve = 9;
inline bool PBMagicWeaponQuickUpTable::has_leastleve() const {
  return _has_bit(8);
}
inline void PBMagicWeaponQuickUpTable::clear_leastleve() {
  leastleve_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMagicWeaponQuickUpTable::leastleve() const {
  return leastleve_;
}
inline void PBMagicWeaponQuickUpTable::set_leastleve(::google::protobuf::uint32 value) {
  _set_bit(8);
  leastleve_ = value;
}

// -------------------------------------------------------------------

// PBItemMagicWeapon

// optional .PBEquipment Base = 1;
inline bool PBItemMagicWeapon::has_base() const {
  return _has_bit(0);
}
inline void PBItemMagicWeapon::clear_base() {
  if (base_ != NULL) base_->::PBEquipment::Clear();
  _clear_bit(0);
}
inline const ::PBEquipment& PBItemMagicWeapon::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::PBEquipment* PBItemMagicWeapon::mutable_base() {
  _set_bit(0);
  if (base_ == NULL) base_ = new ::PBEquipment;
  return base_;
}

// optional string ShowLevel = 2;
inline bool PBItemMagicWeapon::has_showlevel() const {
  return _has_bit(1);
}
inline void PBItemMagicWeapon::clear_showlevel() {
  if (showlevel_ != &_default_showlevel_) {
    showlevel_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBItemMagicWeapon::showlevel() const {
  return *showlevel_;
}
inline void PBItemMagicWeapon::set_showlevel(const ::std::string& value) {
  _set_bit(1);
  if (showlevel_ == &_default_showlevel_) {
    showlevel_ = new ::std::string;
  }
  showlevel_->assign(value);
}
inline void PBItemMagicWeapon::set_showlevel(const char* value) {
  _set_bit(1);
  if (showlevel_ == &_default_showlevel_) {
    showlevel_ = new ::std::string;
  }
  showlevel_->assign(value);
}
inline void PBItemMagicWeapon::set_showlevel(const char* value, size_t size) {
  _set_bit(1);
  if (showlevel_ == &_default_showlevel_) {
    showlevel_ = new ::std::string;
  }
  showlevel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemMagicWeapon::mutable_showlevel() {
  _set_bit(1);
  if (showlevel_ == &_default_showlevel_) {
    showlevel_ = new ::std::string;
  }
  return showlevel_;
}

// optional string ShowType = 3;
inline bool PBItemMagicWeapon::has_showtype() const {
  return _has_bit(2);
}
inline void PBItemMagicWeapon::clear_showtype() {
  if (showtype_ != &_default_showtype_) {
    showtype_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBItemMagicWeapon::showtype() const {
  return *showtype_;
}
inline void PBItemMagicWeapon::set_showtype(const ::std::string& value) {
  _set_bit(2);
  if (showtype_ == &_default_showtype_) {
    showtype_ = new ::std::string;
  }
  showtype_->assign(value);
}
inline void PBItemMagicWeapon::set_showtype(const char* value) {
  _set_bit(2);
  if (showtype_ == &_default_showtype_) {
    showtype_ = new ::std::string;
  }
  showtype_->assign(value);
}
inline void PBItemMagicWeapon::set_showtype(const char* value, size_t size) {
  _set_bit(2);
  if (showtype_ == &_default_showtype_) {
    showtype_ = new ::std::string;
  }
  showtype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemMagicWeapon::mutable_showtype() {
  _set_bit(2);
  if (showtype_ == &_default_showtype_) {
    showtype_ = new ::std::string;
  }
  return showtype_;
}

// optional string NewWeaponName = 4;
inline bool PBItemMagicWeapon::has_newweaponname() const {
  return _has_bit(3);
}
inline void PBItemMagicWeapon::clear_newweaponname() {
  if (newweaponname_ != &_default_newweaponname_) {
    newweaponname_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBItemMagicWeapon::newweaponname() const {
  return *newweaponname_;
}
inline void PBItemMagicWeapon::set_newweaponname(const ::std::string& value) {
  _set_bit(3);
  if (newweaponname_ == &_default_newweaponname_) {
    newweaponname_ = new ::std::string;
  }
  newweaponname_->assign(value);
}
inline void PBItemMagicWeapon::set_newweaponname(const char* value) {
  _set_bit(3);
  if (newweaponname_ == &_default_newweaponname_) {
    newweaponname_ = new ::std::string;
  }
  newweaponname_->assign(value);
}
inline void PBItemMagicWeapon::set_newweaponname(const char* value, size_t size) {
  _set_bit(3);
  if (newweaponname_ == &_default_newweaponname_) {
    newweaponname_ = new ::std::string;
  }
  newweaponname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemMagicWeapon::mutable_newweaponname() {
  _set_bit(3);
  if (newweaponname_ == &_default_newweaponname_) {
    newweaponname_ = new ::std::string;
  }
  return newweaponname_;
}

// optional uint32 UmmiBuffID = 5;
inline bool PBItemMagicWeapon::has_ummibuffid() const {
  return _has_bit(4);
}
inline void PBItemMagicWeapon::clear_ummibuffid() {
  ummibuffid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::ummibuffid() const {
  return ummibuffid_;
}
inline void PBItemMagicWeapon::set_ummibuffid(::google::protobuf::uint32 value) {
  _set_bit(4);
  ummibuffid_ = value;
}

// optional uint32 InitLevel = 6;
inline bool PBItemMagicWeapon::has_initlevel() const {
  return _has_bit(5);
}
inline void PBItemMagicWeapon::clear_initlevel() {
  initlevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::initlevel() const {
  return initlevel_;
}
inline void PBItemMagicWeapon::set_initlevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  initlevel_ = value;
}

// optional uint32 InitMp = 7;
inline bool PBItemMagicWeapon::has_initmp() const {
  return _has_bit(6);
}
inline void PBItemMagicWeapon::clear_initmp() {
  initmp_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::initmp() const {
  return initmp_;
}
inline void PBItemMagicWeapon::set_initmp(::google::protobuf::uint32 value) {
  _set_bit(6);
  initmp_ = value;
}

// optional uint32 InitHp = 8;
inline bool PBItemMagicWeapon::has_inithp() const {
  return _has_bit(7);
}
inline void PBItemMagicWeapon::clear_inithp() {
  inithp_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::inithp() const {
  return inithp_;
}
inline void PBItemMagicWeapon::set_inithp(::google::protobuf::uint32 value) {
  _set_bit(7);
  inithp_ = value;
}

// optional uint32 InitMaxMp = 9;
inline bool PBItemMagicWeapon::has_initmaxmp() const {
  return _has_bit(8);
}
inline void PBItemMagicWeapon::clear_initmaxmp() {
  initmaxmp_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::initmaxmp() const {
  return initmaxmp_;
}
inline void PBItemMagicWeapon::set_initmaxmp(::google::protobuf::uint32 value) {
  _set_bit(8);
  initmaxmp_ = value;
}

// optional uint32 InitMaxHp = 10;
inline bool PBItemMagicWeapon::has_initmaxhp() const {
  return _has_bit(9);
}
inline void PBItemMagicWeapon::clear_initmaxhp() {
  initmaxhp_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::initmaxhp() const {
  return initmaxhp_;
}
inline void PBItemMagicWeapon::set_initmaxhp(::google::protobuf::uint32 value) {
  _set_bit(9);
  initmaxhp_ = value;
}

// optional uint32 InitBase = 11;
inline bool PBItemMagicWeapon::has_initbase() const {
  return _has_bit(10);
}
inline void PBItemMagicWeapon::clear_initbase() {
  initbase_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::initbase() const {
  return initbase_;
}
inline void PBItemMagicWeapon::set_initbase(::google::protobuf::uint32 value) {
  _set_bit(10);
  initbase_ = value;
}

// optional uint32 InitShape = 12;
inline bool PBItemMagicWeapon::has_initshape() const {
  return _has_bit(11);
}
inline void PBItemMagicWeapon::clear_initshape() {
  initshape_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::initshape() const {
  return initshape_;
}
inline void PBItemMagicWeapon::set_initshape(::google::protobuf::uint32 value) {
  _set_bit(11);
  initshape_ = value;
}

// optional uint32 InitEffect = 13;
inline bool PBItemMagicWeapon::has_initeffect() const {
  return _has_bit(12);
}
inline void PBItemMagicWeapon::clear_initeffect() {
  initeffect_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::initeffect() const {
  return initeffect_;
}
inline void PBItemMagicWeapon::set_initeffect(::google::protobuf::uint32 value) {
  _set_bit(12);
  initeffect_ = value;
}

// optional uint32 InitSpir = 14;
inline bool PBItemMagicWeapon::has_initspir() const {
  return _has_bit(13);
}
inline void PBItemMagicWeapon::clear_initspir() {
  initspir_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::initspir() const {
  return initspir_;
}
inline void PBItemMagicWeapon::set_initspir(::google::protobuf::uint32 value) {
  _set_bit(13);
  initspir_ = value;
}

// optional uint32 IncMaxMp = 15;
inline bool PBItemMagicWeapon::has_incmaxmp() const {
  return _has_bit(14);
}
inline void PBItemMagicWeapon::clear_incmaxmp() {
  incmaxmp_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::incmaxmp() const {
  return incmaxmp_;
}
inline void PBItemMagicWeapon::set_incmaxmp(::google::protobuf::uint32 value) {
  _set_bit(14);
  incmaxmp_ = value;
}

// optional uint32 IncMaxHp = 16;
inline bool PBItemMagicWeapon::has_incmaxhp() const {
  return _has_bit(15);
}
inline void PBItemMagicWeapon::clear_incmaxhp() {
  incmaxhp_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::incmaxhp() const {
  return incmaxhp_;
}
inline void PBItemMagicWeapon::set_incmaxhp(::google::protobuf::uint32 value) {
  _set_bit(15);
  incmaxhp_ = value;
}

// optional uint32 MPIncValue = 17;
inline bool PBItemMagicWeapon::has_mpincvalue() const {
  return _has_bit(16);
}
inline void PBItemMagicWeapon::clear_mpincvalue() {
  mpincvalue_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::mpincvalue() const {
  return mpincvalue_;
}
inline void PBItemMagicWeapon::set_mpincvalue(::google::protobuf::uint32 value) {
  _set_bit(16);
  mpincvalue_ = value;
}

// optional uint32 HPIncValue = 18;
inline bool PBItemMagicWeapon::has_hpincvalue() const {
  return _has_bit(17);
}
inline void PBItemMagicWeapon::clear_hpincvalue() {
  hpincvalue_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::hpincvalue() const {
  return hpincvalue_;
}
inline void PBItemMagicWeapon::set_hpincvalue(::google::protobuf::uint32 value) {
  _set_bit(17);
  hpincvalue_ = value;
}

// optional uint32 MPIncValuePerMagic = 19;
inline bool PBItemMagicWeapon::has_mpincvaluepermagic() const {
  return _has_bit(18);
}
inline void PBItemMagicWeapon::clear_mpincvaluepermagic() {
  mpincvaluepermagic_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::mpincvaluepermagic() const {
  return mpincvaluepermagic_;
}
inline void PBItemMagicWeapon::set_mpincvaluepermagic(::google::protobuf::uint32 value) {
  _set_bit(18);
  mpincvaluepermagic_ = value;
}

// optional uint32 HPIncValuePerMagic = 20;
inline bool PBItemMagicWeapon::has_hpincvaluepermagic() const {
  return _has_bit(19);
}
inline void PBItemMagicWeapon::clear_hpincvaluepermagic() {
  hpincvaluepermagic_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::hpincvaluepermagic() const {
  return hpincvaluepermagic_;
}
inline void PBItemMagicWeapon::set_hpincvaluepermagic(::google::protobuf::uint32 value) {
  _set_bit(19);
  hpincvaluepermagic_ = value;
}

// optional uint32 AttackInc = 21;
inline bool PBItemMagicWeapon::has_attackinc() const {
  return _has_bit(20);
}
inline void PBItemMagicWeapon::clear_attackinc() {
  attackinc_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::attackinc() const {
  return attackinc_;
}
inline void PBItemMagicWeapon::set_attackinc(::google::protobuf::uint32 value) {
  _set_bit(20);
  attackinc_ = value;
}

// optional uint32 RecovInc = 22;
inline bool PBItemMagicWeapon::has_recovinc() const {
  return _has_bit(21);
}
inline void PBItemMagicWeapon::clear_recovinc() {
  recovinc_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::recovinc() const {
  return recovinc_;
}
inline void PBItemMagicWeapon::set_recovinc(::google::protobuf::uint32 value) {
  _set_bit(21);
  recovinc_ = value;
}

// optional uint32 MaxMPInc = 23;
inline bool PBItemMagicWeapon::has_maxmpinc() const {
  return _has_bit(22);
}
inline void PBItemMagicWeapon::clear_maxmpinc() {
  maxmpinc_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::maxmpinc() const {
  return maxmpinc_;
}
inline void PBItemMagicWeapon::set_maxmpinc(::google::protobuf::uint32 value) {
  _set_bit(22);
  maxmpinc_ = value;
}

// optional uint32 MaxHPInc = 24;
inline bool PBItemMagicWeapon::has_maxhpinc() const {
  return _has_bit(23);
}
inline void PBItemMagicWeapon::clear_maxhpinc() {
  maxhpinc_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::maxhpinc() const {
  return maxhpinc_;
}
inline void PBItemMagicWeapon::set_maxhpinc(::google::protobuf::uint32 value) {
  _set_bit(23);
  maxhpinc_ = value;
}

// optional uint32 DeadLineInc = 25;
inline bool PBItemMagicWeapon::has_deadlineinc() const {
  return _has_bit(24);
}
inline void PBItemMagicWeapon::clear_deadlineinc() {
  deadlineinc_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::deadlineinc() const {
  return deadlineinc_;
}
inline void PBItemMagicWeapon::set_deadlineinc(::google::protobuf::uint32 value) {
  _set_bit(24);
  deadlineinc_ = value;
}

// optional uint32 CanUseBook = 26;
inline bool PBItemMagicWeapon::has_canusebook() const {
  return _has_bit(25);
}
inline void PBItemMagicWeapon::clear_canusebook() {
  canusebook_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::canusebook() const {
  return canusebook_;
}
inline void PBItemMagicWeapon::set_canusebook(::google::protobuf::uint32 value) {
  _set_bit(25);
  canusebook_ = value;
}

// optional uint32 GetSkillScl = 27;
inline bool PBItemMagicWeapon::has_getskillscl() const {
  return _has_bit(26);
}
inline void PBItemMagicWeapon::clear_getskillscl() {
  getskillscl_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::getskillscl() const {
  return getskillscl_;
}
inline void PBItemMagicWeapon::set_getskillscl(::google::protobuf::uint32 value) {
  _set_bit(26);
  getskillscl_ = value;
}

// optional uint32 LevelTableID = 28;
inline bool PBItemMagicWeapon::has_leveltableid() const {
  return _has_bit(27);
}
inline void PBItemMagicWeapon::clear_leveltableid() {
  leveltableid_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::leveltableid() const {
  return leveltableid_;
}
inline void PBItemMagicWeapon::set_leveltableid(::google::protobuf::uint32 value) {
  _set_bit(27);
  leveltableid_ = value;
}

// optional uint32 SkillBoxTableID = 29;
inline bool PBItemMagicWeapon::has_skillboxtableid() const {
  return _has_bit(28);
}
inline void PBItemMagicWeapon::clear_skillboxtableid() {
  skillboxtableid_ = 0u;
  _clear_bit(28);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::skillboxtableid() const {
  return skillboxtableid_;
}
inline void PBItemMagicWeapon::set_skillboxtableid(::google::protobuf::uint32 value) {
  _set_bit(28);
  skillboxtableid_ = value;
}

// optional uint32 DieOffHp = 30;
inline bool PBItemMagicWeapon::has_dieoffhp() const {
  return _has_bit(29);
}
inline void PBItemMagicWeapon::clear_dieoffhp() {
  dieoffhp_ = 0u;
  _clear_bit(29);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::dieoffhp() const {
  return dieoffhp_;
}
inline void PBItemMagicWeapon::set_dieoffhp(::google::protobuf::uint32 value) {
  _set_bit(29);
  dieoffhp_ = value;
}

// optional uint32 ProJudgeCost = 31;
inline bool PBItemMagicWeapon::has_projudgecost() const {
  return _has_bit(30);
}
inline void PBItemMagicWeapon::clear_projudgecost() {
  projudgecost_ = 0u;
  _clear_bit(30);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::projudgecost() const {
  return projudgecost_;
}
inline void PBItemMagicWeapon::set_projudgecost(::google::protobuf::uint32 value) {
  _set_bit(30);
  projudgecost_ = value;
}

// optional string DispResName = 32;
inline bool PBItemMagicWeapon::has_dispresname() const {
  return _has_bit(31);
}
inline void PBItemMagicWeapon::clear_dispresname() {
  if (dispresname_ != &_default_dispresname_) {
    dispresname_->clear();
  }
  _clear_bit(31);
}
inline const ::std::string& PBItemMagicWeapon::dispresname() const {
  return *dispresname_;
}
inline void PBItemMagicWeapon::set_dispresname(const ::std::string& value) {
  _set_bit(31);
  if (dispresname_ == &_default_dispresname_) {
    dispresname_ = new ::std::string;
  }
  dispresname_->assign(value);
}
inline void PBItemMagicWeapon::set_dispresname(const char* value) {
  _set_bit(31);
  if (dispresname_ == &_default_dispresname_) {
    dispresname_ = new ::std::string;
  }
  dispresname_->assign(value);
}
inline void PBItemMagicWeapon::set_dispresname(const char* value, size_t size) {
  _set_bit(31);
  if (dispresname_ == &_default_dispresname_) {
    dispresname_ = new ::std::string;
  }
  dispresname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBItemMagicWeapon::mutable_dispresname() {
  _set_bit(31);
  if (dispresname_ == &_default_dispresname_) {
    dispresname_ = new ::std::string;
  }
  return dispresname_;
}

// optional uint32 DefaultSkill = 33;
inline bool PBItemMagicWeapon::has_defaultskill() const {
  return _has_bit(32);
}
inline void PBItemMagicWeapon::clear_defaultskill() {
  defaultskill_ = 0u;
  _clear_bit(32);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::defaultskill() const {
  return defaultskill_;
}
inline void PBItemMagicWeapon::set_defaultskill(::google::protobuf::uint32 value) {
  _set_bit(32);
  defaultskill_ = value;
}

// optional uint32 DefaultSkill2 = 34;
inline bool PBItemMagicWeapon::has_defaultskill2() const {
  return _has_bit(33);
}
inline void PBItemMagicWeapon::clear_defaultskill2() {
  defaultskill2_ = 0u;
  _clear_bit(33);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::defaultskill2() const {
  return defaultskill2_;
}
inline void PBItemMagicWeapon::set_defaultskill2(::google::protobuf::uint32 value) {
  _set_bit(33);
  defaultskill2_ = value;
}

// optional uint32 JudgeEffTableID = 35;
inline bool PBItemMagicWeapon::has_judgeefftableid() const {
  return _has_bit(34);
}
inline void PBItemMagicWeapon::clear_judgeefftableid() {
  judgeefftableid_ = 0u;
  _clear_bit(34);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::judgeefftableid() const {
  return judgeefftableid_;
}
inline void PBItemMagicWeapon::set_judgeefftableid(::google::protobuf::uint32 value) {
  _set_bit(34);
  judgeefftableid_ = value;
}

// optional uint32 JudgeSpirTableID = 36;
inline bool PBItemMagicWeapon::has_judgespirtableid() const {
  return _has_bit(35);
}
inline void PBItemMagicWeapon::clear_judgespirtableid() {
  judgespirtableid_ = 0u;
  _clear_bit(35);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::judgespirtableid() const {
  return judgespirtableid_;
}
inline void PBItemMagicWeapon::set_judgespirtableid(::google::protobuf::uint32 value) {
  _set_bit(35);
  judgespirtableid_ = value;
}

// optional uint32 LevelQuotietyTabID = 37;
inline bool PBItemMagicWeapon::has_levelquotietytabid() const {
  return _has_bit(36);
}
inline void PBItemMagicWeapon::clear_levelquotietytabid() {
  levelquotietytabid_ = 0u;
  _clear_bit(36);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::levelquotietytabid() const {
  return levelquotietytabid_;
}
inline void PBItemMagicWeapon::set_levelquotietytabid(::google::protobuf::uint32 value) {
  _set_bit(36);
  levelquotietytabid_ = value;
}

// optional uint32 DecomposeTabID = 38;
inline bool PBItemMagicWeapon::has_decomposetabid() const {
  return _has_bit(37);
}
inline void PBItemMagicWeapon::clear_decomposetabid() {
  decomposetabid_ = 0u;
  _clear_bit(37);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::decomposetabid() const {
  return decomposetabid_;
}
inline void PBItemMagicWeapon::set_decomposetabid(::google::protobuf::uint32 value) {
  _set_bit(37);
  decomposetabid_ = value;
}

// optional uint32 LvByNum = 39;
inline bool PBItemMagicWeapon::has_lvbynum() const {
  return _has_bit(38);
}
inline void PBItemMagicWeapon::clear_lvbynum() {
  lvbynum_ = 0u;
  _clear_bit(38);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::lvbynum() const {
  return lvbynum_;
}
inline void PBItemMagicWeapon::set_lvbynum(::google::protobuf::uint32 value) {
  _set_bit(38);
  lvbynum_ = value;
}

// optional uint32 QuickUpTabID = 40;
inline bool PBItemMagicWeapon::has_quickuptabid() const {
  return _has_bit(39);
}
inline void PBItemMagicWeapon::clear_quickuptabid() {
  quickuptabid_ = 0u;
  _clear_bit(39);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::quickuptabid() const {
  return quickuptabid_;
}
inline void PBItemMagicWeapon::set_quickuptabid(::google::protobuf::uint32 value) {
  _set_bit(39);
  quickuptabid_ = value;
}

// optional uint32 UpLevelTabID = 41;
inline bool PBItemMagicWeapon::has_upleveltabid() const {
  return _has_bit(40);
}
inline void PBItemMagicWeapon::clear_upleveltabid() {
  upleveltabid_ = 0u;
  _clear_bit(40);
}
inline ::google::protobuf::uint32 PBItemMagicWeapon::upleveltabid() const {
  return upleveltabid_;
}
inline void PBItemMagicWeapon::set_upleveltabid(::google::protobuf::uint32 value) {
  _set_bit(40);
  upleveltabid_ = value;
}

// -------------------------------------------------------------------

// PBSingleSkillStorage

// optional uint32 SkillID = 1;
inline bool PBSingleSkillStorage::has_skillid() const {
  return _has_bit(0);
}
inline void PBSingleSkillStorage::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSingleSkillStorage::skillid() const {
  return skillid_;
}
inline void PBSingleSkillStorage::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional uint32 FirstProb = 2;
inline bool PBSingleSkillStorage::has_firstprob() const {
  return _has_bit(1);
}
inline void PBSingleSkillStorage::clear_firstprob() {
  firstprob_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSingleSkillStorage::firstprob() const {
  return firstprob_;
}
inline void PBSingleSkillStorage::set_firstprob(::google::protobuf::uint32 value) {
  _set_bit(1);
  firstprob_ = value;
}

// optional uint32 OtherProb = 3;
inline bool PBSingleSkillStorage::has_otherprob() const {
  return _has_bit(2);
}
inline void PBSingleSkillStorage::clear_otherprob() {
  otherprob_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSingleSkillStorage::otherprob() const {
  return otherprob_;
}
inline void PBSingleSkillStorage::set_otherprob(::google::protobuf::uint32 value) {
  _set_bit(2);
  otherprob_ = value;
}

// -------------------------------------------------------------------

// PBItemMagicStone

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemMagicStone::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemMagicStone::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemMagicStone::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemMagicStone::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 Part = 2;
inline bool PBItemMagicStone::has_part() const {
  return _has_bit(1);
}
inline void PBItemMagicStone::clear_part() {
  part_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemMagicStone::part() const {
  return part_;
}
inline void PBItemMagicStone::set_part(::google::protobuf::uint32 value) {
  _set_bit(1);
  part_ = value;
}

// repeated uint32 Attribute = 3;
inline int PBItemMagicStone::attribute_size() const {
  return attribute_.size();
}
inline void PBItemMagicStone::clear_attribute() {
  attribute_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemMagicStone::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemMagicStone::mutable_attribute() {
  return &attribute_;
}
inline ::google::protobuf::uint32 PBItemMagicStone::attribute(int index) const {
  return attribute_.Get(index);
}
inline void PBItemMagicStone::set_attribute(int index, ::google::protobuf::uint32 value) {
  attribute_.Set(index, value);
}
inline void PBItemMagicStone::add_attribute(::google::protobuf::uint32 value) {
  attribute_.Add(value);
}

// optional uint32 UsedTimes = 4;
inline bool PBItemMagicStone::has_usedtimes() const {
  return _has_bit(3);
}
inline void PBItemMagicStone::clear_usedtimes() {
  usedtimes_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemMagicStone::usedtimes() const {
  return usedtimes_;
}
inline void PBItemMagicStone::set_usedtimes(::google::protobuf::uint32 value) {
  _set_bit(3);
  usedtimes_ = value;
}

// repeated uint32 Probability = 5;
inline int PBItemMagicStone::probability_size() const {
  return probability_.size();
}
inline void PBItemMagicStone::clear_probability() {
  probability_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemMagicStone::probability() const {
  return probability_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemMagicStone::mutable_probability() {
  return &probability_;
}
inline ::google::protobuf::uint32 PBItemMagicStone::probability(int index) const {
  return probability_.Get(index);
}
inline void PBItemMagicStone::set_probability(int index, ::google::protobuf::uint32 value) {
  probability_.Set(index, value);
}
inline void PBItemMagicStone::add_probability(::google::protobuf::uint32 value) {
  probability_.Add(value);
}

// optional uint32 LevelLimit = 6;
inline bool PBItemMagicStone::has_levellimit() const {
  return _has_bit(5);
}
inline void PBItemMagicStone::clear_levellimit() {
  levellimit_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemMagicStone::levellimit() const {
  return levellimit_;
}
inline void PBItemMagicStone::set_levellimit(::google::protobuf::uint32 value) {
  _set_bit(5);
  levellimit_ = value;
}

// -------------------------------------------------------------------

// PBLifeSkillScroll

// optional .PBItemBase BaseInfo = 1;
inline bool PBLifeSkillScroll::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBLifeSkillScroll::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBLifeSkillScroll::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBLifeSkillScroll::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 ComposeID = 2;
inline bool PBLifeSkillScroll::has_composeid() const {
  return _has_bit(1);
}
inline void PBLifeSkillScroll::clear_composeid() {
  composeid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBLifeSkillScroll::composeid() const {
  return composeid_;
}
inline void PBLifeSkillScroll::set_composeid(::google::protobuf::uint32 value) {
  _set_bit(1);
  composeid_ = value;
}

// optional uint32 ComposeType = 3;
inline bool PBLifeSkillScroll::has_composetype() const {
  return _has_bit(2);
}
inline void PBLifeSkillScroll::clear_composetype() {
  composetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBLifeSkillScroll::composetype() const {
  return composetype_;
}
inline void PBLifeSkillScroll::set_composetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  composetype_ = value;
}

// -------------------------------------------------------------------

// PBSkillStorage

// optional uint32 TempID = 1;
inline bool PBSkillStorage::has_tempid() const {
  return _has_bit(0);
}
inline void PBSkillStorage::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSkillStorage::tempid() const {
  return tempid_;
}
inline void PBSkillStorage::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBSingleSkillStorage Values = 2;
inline int PBSkillStorage::values_size() const {
  return values_.size();
}
inline void PBSkillStorage::clear_values() {
  values_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSingleSkillStorage >&
PBSkillStorage::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSingleSkillStorage >*
PBSkillStorage::mutable_values() {
  return &values_;
}
inline const ::PBSingleSkillStorage& PBSkillStorage::values(int index) const {
  return values_.Get(index);
}
inline ::PBSingleSkillStorage* PBSkillStorage::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::PBSingleSkillStorage* PBSkillStorage::add_values() {
  return values_.Add();
}

// -------------------------------------------------------------------

// PBSkillBoxProperty

// optional uint32 SkillBoxColor = 1;
inline bool PBSkillBoxProperty::has_skillboxcolor() const {
  return _has_bit(0);
}
inline void PBSkillBoxProperty::clear_skillboxcolor() {
  skillboxcolor_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBSkillBoxProperty::skillboxcolor() const {
  return skillboxcolor_;
}
inline void PBSkillBoxProperty::set_skillboxcolor(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillboxcolor_ = value;
}

// optional uint32 SkillBoxNeedVal = 2;
inline bool PBSkillBoxProperty::has_skillboxneedval() const {
  return _has_bit(1);
}
inline void PBSkillBoxProperty::clear_skillboxneedval() {
  skillboxneedval_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSkillBoxProperty::skillboxneedval() const {
  return skillboxneedval_;
}
inline void PBSkillBoxProperty::set_skillboxneedval(::google::protobuf::uint32 value) {
  _set_bit(1);
  skillboxneedval_ = value;
}

// optional uint32 InitState = 3;
inline bool PBSkillBoxProperty::has_initstate() const {
  return _has_bit(2);
}
inline void PBSkillBoxProperty::clear_initstate() {
  initstate_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSkillBoxProperty::initstate() const {
  return initstate_;
}
inline void PBSkillBoxProperty::set_initstate(::google::protobuf::uint32 value) {
  _set_bit(2);
  initstate_ = value;
}

// optional uint32 InitSkillID = 4;
inline bool PBSkillBoxProperty::has_initskillid() const {
  return _has_bit(3);
}
inline void PBSkillBoxProperty::clear_initskillid() {
  initskillid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSkillBoxProperty::initskillid() const {
  return initskillid_;
}
inline void PBSkillBoxProperty::set_initskillid(::google::protobuf::uint32 value) {
  _set_bit(3);
  initskillid_ = value;
}

// optional uint32 SkillBoxType = 5;
inline bool PBSkillBoxProperty::has_skillboxtype() const {
  return _has_bit(4);
}
inline void PBSkillBoxProperty::clear_skillboxtype() {
  skillboxtype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBSkillBoxProperty::skillboxtype() const {
  return skillboxtype_;
}
inline void PBSkillBoxProperty::set_skillboxtype(::google::protobuf::uint32 value) {
  _set_bit(4);
  skillboxtype_ = value;
}

// optional uint32 SkillBoxSkill = 6;
inline bool PBSkillBoxProperty::has_skillboxskill() const {
  return _has_bit(5);
}
inline void PBSkillBoxProperty::clear_skillboxskill() {
  skillboxskill_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBSkillBoxProperty::skillboxskill() const {
  return skillboxskill_;
}
inline void PBSkillBoxProperty::set_skillboxskill(::google::protobuf::uint32 value) {
  _set_bit(5);
  skillboxskill_ = value;
}

// optional uint32 SkillBoxActMoney = 7;
inline bool PBSkillBoxProperty::has_skillboxactmoney() const {
  return _has_bit(6);
}
inline void PBSkillBoxProperty::clear_skillboxactmoney() {
  skillboxactmoney_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBSkillBoxProperty::skillboxactmoney() const {
  return skillboxactmoney_;
}
inline void PBSkillBoxProperty::set_skillboxactmoney(::google::protobuf::uint32 value) {
  _set_bit(6);
  skillboxactmoney_ = value;
}

// optional uint32 SkillBoxSkillStorage = 8;
inline bool PBSkillBoxProperty::has_skillboxskillstorage() const {
  return _has_bit(7);
}
inline void PBSkillBoxProperty::clear_skillboxskillstorage() {
  skillboxskillstorage_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBSkillBoxProperty::skillboxskillstorage() const {
  return skillboxskillstorage_;
}
inline void PBSkillBoxProperty::set_skillboxskillstorage(::google::protobuf::uint32 value) {
  _set_bit(7);
  skillboxskillstorage_ = value;
}

// -------------------------------------------------------------------

// PBMagicWeaponSkillBoxProTable

// optional uint32 TempID = 1;
inline bool PBMagicWeaponSkillBoxProTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBMagicWeaponSkillBoxProTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMagicWeaponSkillBoxProTable::tempid() const {
  return tempid_;
}
inline void PBMagicWeaponSkillBoxProTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBSkillBoxProperty Values = 2;
inline int PBMagicWeaponSkillBoxProTable::values_size() const {
  return values_.size();
}
inline void PBMagicWeaponSkillBoxProTable::clear_values() {
  values_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkillBoxProperty >&
PBMagicWeaponSkillBoxProTable::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkillBoxProperty >*
PBMagicWeaponSkillBoxProTable::mutable_values() {
  return &values_;
}
inline const ::PBSkillBoxProperty& PBMagicWeaponSkillBoxProTable::values(int index) const {
  return values_.Get(index);
}
inline ::PBSkillBoxProperty* PBMagicWeaponSkillBoxProTable::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::PBSkillBoxProperty* PBMagicWeaponSkillBoxProTable::add_values() {
  return values_.Add();
}

// -------------------------------------------------------------------

// PBMWProJudgeEffTable

// optional uint32 TempID = 1;
inline bool PBMWProJudgeEffTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBMWProJudgeEffTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMWProJudgeEffTable::tempid() const {
  return tempid_;
}
inline void PBMWProJudgeEffTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 ProbFirst = 2;
inline int PBMWProJudgeEffTable::probfirst_size() const {
  return probfirst_.size();
}
inline void PBMWProJudgeEffTable::clear_probfirst() {
  probfirst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWProJudgeEffTable::probfirst() const {
  return probfirst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWProJudgeEffTable::mutable_probfirst() {
  return &probfirst_;
}
inline ::google::protobuf::uint32 PBMWProJudgeEffTable::probfirst(int index) const {
  return probfirst_.Get(index);
}
inline void PBMWProJudgeEffTable::set_probfirst(int index, ::google::protobuf::uint32 value) {
  probfirst_.Set(index, value);
}
inline void PBMWProJudgeEffTable::add_probfirst(::google::protobuf::uint32 value) {
  probfirst_.Add(value);
}

// repeated uint32 ProbSecond = 3;
inline int PBMWProJudgeEffTable::probsecond_size() const {
  return probsecond_.size();
}
inline void PBMWProJudgeEffTable::clear_probsecond() {
  probsecond_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWProJudgeEffTable::probsecond() const {
  return probsecond_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWProJudgeEffTable::mutable_probsecond() {
  return &probsecond_;
}
inline ::google::protobuf::uint32 PBMWProJudgeEffTable::probsecond(int index) const {
  return probsecond_.Get(index);
}
inline void PBMWProJudgeEffTable::set_probsecond(int index, ::google::protobuf::uint32 value) {
  probsecond_.Set(index, value);
}
inline void PBMWProJudgeEffTable::add_probsecond(::google::protobuf::uint32 value) {
  probsecond_.Add(value);
}

// repeated string ShowName = 4;
inline int PBMWProJudgeEffTable::showname_size() const {
  return showname_.size();
}
inline void PBMWProJudgeEffTable::clear_showname() {
  showname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBMWProJudgeEffTable::showname() const {
  return showname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBMWProJudgeEffTable::mutable_showname() {
  return &showname_;
}
inline const ::std::string& PBMWProJudgeEffTable::showname(int index) const {
  return showname_.Get(index);
}
inline ::std::string* PBMWProJudgeEffTable::mutable_showname(int index) {
  return showname_.Mutable(index);
}
inline void PBMWProJudgeEffTable::set_showname(int index, const ::std::string& value) {
  showname_.Mutable(index)->assign(value);
}
inline void PBMWProJudgeEffTable::set_showname(int index, const char* value) {
  showname_.Mutable(index)->assign(value);
}
inline void PBMWProJudgeEffTable::set_showname(int index, const char* value, size_t size) {
  showname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMWProJudgeEffTable::add_showname() {
  return showname_.Add();
}
inline void PBMWProJudgeEffTable::add_showname(const ::std::string& value) {
  showname_.Add()->assign(value);
}
inline void PBMWProJudgeEffTable::add_showname(const char* value) {
  showname_.Add()->assign(value);
}
inline void PBMWProJudgeEffTable::add_showname(const char* value, size_t size) {
  showname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 JudgeLevel = 5;
inline int PBMWProJudgeEffTable::judgelevel_size() const {
  return judgelevel_.size();
}
inline void PBMWProJudgeEffTable::clear_judgelevel() {
  judgelevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWProJudgeEffTable::judgelevel() const {
  return judgelevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWProJudgeEffTable::mutable_judgelevel() {
  return &judgelevel_;
}
inline ::google::protobuf::uint32 PBMWProJudgeEffTable::judgelevel(int index) const {
  return judgelevel_.Get(index);
}
inline void PBMWProJudgeEffTable::set_judgelevel(int index, ::google::protobuf::uint32 value) {
  judgelevel_.Set(index, value);
}
inline void PBMWProJudgeEffTable::add_judgelevel(::google::protobuf::uint32 value) {
  judgelevel_.Add(value);
}

// -------------------------------------------------------------------

// PBMWProJudgeSpirTable

// optional uint32 TempID = 1;
inline bool PBMWProJudgeSpirTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBMWProJudgeSpirTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMWProJudgeSpirTable::tempid() const {
  return tempid_;
}
inline void PBMWProJudgeSpirTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 ProbFirst = 2;
inline int PBMWProJudgeSpirTable::probfirst_size() const {
  return probfirst_.size();
}
inline void PBMWProJudgeSpirTable::clear_probfirst() {
  probfirst_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWProJudgeSpirTable::probfirst() const {
  return probfirst_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWProJudgeSpirTable::mutable_probfirst() {
  return &probfirst_;
}
inline ::google::protobuf::uint32 PBMWProJudgeSpirTable::probfirst(int index) const {
  return probfirst_.Get(index);
}
inline void PBMWProJudgeSpirTable::set_probfirst(int index, ::google::protobuf::uint32 value) {
  probfirst_.Set(index, value);
}
inline void PBMWProJudgeSpirTable::add_probfirst(::google::protobuf::uint32 value) {
  probfirst_.Add(value);
}

// repeated uint32 ProbSecond = 3;
inline int PBMWProJudgeSpirTable::probsecond_size() const {
  return probsecond_.size();
}
inline void PBMWProJudgeSpirTable::clear_probsecond() {
  probsecond_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWProJudgeSpirTable::probsecond() const {
  return probsecond_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWProJudgeSpirTable::mutable_probsecond() {
  return &probsecond_;
}
inline ::google::protobuf::uint32 PBMWProJudgeSpirTable::probsecond(int index) const {
  return probsecond_.Get(index);
}
inline void PBMWProJudgeSpirTable::set_probsecond(int index, ::google::protobuf::uint32 value) {
  probsecond_.Set(index, value);
}
inline void PBMWProJudgeSpirTable::add_probsecond(::google::protobuf::uint32 value) {
  probsecond_.Add(value);
}

// repeated string ShowName = 4;
inline int PBMWProJudgeSpirTable::showname_size() const {
  return showname_.size();
}
inline void PBMWProJudgeSpirTable::clear_showname() {
  showname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBMWProJudgeSpirTable::showname() const {
  return showname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBMWProJudgeSpirTable::mutable_showname() {
  return &showname_;
}
inline const ::std::string& PBMWProJudgeSpirTable::showname(int index) const {
  return showname_.Get(index);
}
inline ::std::string* PBMWProJudgeSpirTable::mutable_showname(int index) {
  return showname_.Mutable(index);
}
inline void PBMWProJudgeSpirTable::set_showname(int index, const ::std::string& value) {
  showname_.Mutable(index)->assign(value);
}
inline void PBMWProJudgeSpirTable::set_showname(int index, const char* value) {
  showname_.Mutable(index)->assign(value);
}
inline void PBMWProJudgeSpirTable::set_showname(int index, const char* value, size_t size) {
  showname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMWProJudgeSpirTable::add_showname() {
  return showname_.Add();
}
inline void PBMWProJudgeSpirTable::add_showname(const ::std::string& value) {
  showname_.Add()->assign(value);
}
inline void PBMWProJudgeSpirTable::add_showname(const char* value) {
  showname_.Add()->assign(value);
}
inline void PBMWProJudgeSpirTable::add_showname(const char* value, size_t size) {
  showname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 JudgeLevel = 5;
inline int PBMWProJudgeSpirTable::judgelevel_size() const {
  return judgelevel_.size();
}
inline void PBMWProJudgeSpirTable::clear_judgelevel() {
  judgelevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWProJudgeSpirTable::judgelevel() const {
  return judgelevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWProJudgeSpirTable::mutable_judgelevel() {
  return &judgelevel_;
}
inline ::google::protobuf::uint32 PBMWProJudgeSpirTable::judgelevel(int index) const {
  return judgelevel_.Get(index);
}
inline void PBMWProJudgeSpirTable::set_judgelevel(int index, ::google::protobuf::uint32 value) {
  judgelevel_.Set(index, value);
}
inline void PBMWProJudgeSpirTable::add_judgelevel(::google::protobuf::uint32 value) {
  judgelevel_.Add(value);
}

// -------------------------------------------------------------------

// PBMWLevelQuotietyTab

// optional uint32 TempID = 1;
inline bool PBMWLevelQuotietyTab::has_tempid() const {
  return _has_bit(0);
}
inline void PBMWLevelQuotietyTab::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMWLevelQuotietyTab::tempid() const {
  return tempid_;
}
inline void PBMWLevelQuotietyTab::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 KeenQuotiety = 2;
inline int PBMWLevelQuotietyTab::keenquotiety_size() const {
  return keenquotiety_.size();
}
inline void PBMWLevelQuotietyTab::clear_keenquotiety() {
  keenquotiety_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWLevelQuotietyTab::keenquotiety() const {
  return keenquotiety_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWLevelQuotietyTab::mutable_keenquotiety() {
  return &keenquotiety_;
}
inline ::google::protobuf::uint32 PBMWLevelQuotietyTab::keenquotiety(int index) const {
  return keenquotiety_.Get(index);
}
inline void PBMWLevelQuotietyTab::set_keenquotiety(int index, ::google::protobuf::uint32 value) {
  keenquotiety_.Set(index, value);
}
inline void PBMWLevelQuotietyTab::add_keenquotiety(::google::protobuf::uint32 value) {
  keenquotiety_.Add(value);
}

// repeated uint32 CalmQuotiety = 3;
inline int PBMWLevelQuotietyTab::calmquotiety_size() const {
  return calmquotiety_.size();
}
inline void PBMWLevelQuotietyTab::clear_calmquotiety() {
  calmquotiety_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWLevelQuotietyTab::calmquotiety() const {
  return calmquotiety_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWLevelQuotietyTab::mutable_calmquotiety() {
  return &calmquotiety_;
}
inline ::google::protobuf::uint32 PBMWLevelQuotietyTab::calmquotiety(int index) const {
  return calmquotiety_.Get(index);
}
inline void PBMWLevelQuotietyTab::set_calmquotiety(int index, ::google::protobuf::uint32 value) {
  calmquotiety_.Set(index, value);
}
inline void PBMWLevelQuotietyTab::add_calmquotiety(::google::protobuf::uint32 value) {
  calmquotiety_.Add(value);
}

// repeated uint32 MagicQuotiety = 4;
inline int PBMWLevelQuotietyTab::magicquotiety_size() const {
  return magicquotiety_.size();
}
inline void PBMWLevelQuotietyTab::clear_magicquotiety() {
  magicquotiety_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWLevelQuotietyTab::magicquotiety() const {
  return magicquotiety_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWLevelQuotietyTab::mutable_magicquotiety() {
  return &magicquotiety_;
}
inline ::google::protobuf::uint32 PBMWLevelQuotietyTab::magicquotiety(int index) const {
  return magicquotiety_.Get(index);
}
inline void PBMWLevelQuotietyTab::set_magicquotiety(int index, ::google::protobuf::uint32 value) {
  magicquotiety_.Set(index, value);
}
inline void PBMWLevelQuotietyTab::add_magicquotiety(::google::protobuf::uint32 value) {
  magicquotiety_.Add(value);
}

// repeated uint32 BierQuotiety = 5;
inline int PBMWLevelQuotietyTab::bierquotiety_size() const {
  return bierquotiety_.size();
}
inline void PBMWLevelQuotietyTab::clear_bierquotiety() {
  bierquotiety_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWLevelQuotietyTab::bierquotiety() const {
  return bierquotiety_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWLevelQuotietyTab::mutable_bierquotiety() {
  return &bierquotiety_;
}
inline ::google::protobuf::uint32 PBMWLevelQuotietyTab::bierquotiety(int index) const {
  return bierquotiety_.Get(index);
}
inline void PBMWLevelQuotietyTab::set_bierquotiety(int index, ::google::protobuf::uint32 value) {
  bierquotiety_.Set(index, value);
}
inline void PBMWLevelQuotietyTab::add_bierquotiety(::google::protobuf::uint32 value) {
  bierquotiety_.Add(value);
}

// repeated uint32 ImmorQuotiety = 6;
inline int PBMWLevelQuotietyTab::immorquotiety_size() const {
  return immorquotiety_.size();
}
inline void PBMWLevelQuotietyTab::clear_immorquotiety() {
  immorquotiety_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMWLevelQuotietyTab::immorquotiety() const {
  return immorquotiety_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMWLevelQuotietyTab::mutable_immorquotiety() {
  return &immorquotiety_;
}
inline ::google::protobuf::uint32 PBMWLevelQuotietyTab::immorquotiety(int index) const {
  return immorquotiety_.Get(index);
}
inline void PBMWLevelQuotietyTab::set_immorquotiety(int index, ::google::protobuf::uint32 value) {
  immorquotiety_.Set(index, value);
}
inline void PBMWLevelQuotietyTab::add_immorquotiety(::google::protobuf::uint32 value) {
  immorquotiety_.Add(value);
}

// -------------------------------------------------------------------

// PBFuncItem

// optional .PBItemBase BaseInfo = 1;
inline bool PBFuncItem::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBFuncItem::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBFuncItem::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBFuncItem::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 FuncCode = 2;
inline bool PBFuncItem::has_funccode() const {
  return _has_bit(1);
}
inline void PBFuncItem::clear_funccode() {
  funccode_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBFuncItem::funccode() const {
  return funccode_;
}
inline void PBFuncItem::set_funccode(::google::protobuf::uint32 value) {
  _set_bit(1);
  funccode_ = value;
}

// repeated uint32 Params = 3;
inline int PBFuncItem::params_size() const {
  return params_.size();
}
inline void PBFuncItem::clear_params() {
  params_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFuncItem::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFuncItem::mutable_params() {
  return &params_;
}
inline ::google::protobuf::uint32 PBFuncItem::params(int index) const {
  return params_.Get(index);
}
inline void PBFuncItem::set_params(int index, ::google::protobuf::uint32 value) {
  params_.Set(index, value);
}
inline void PBFuncItem::add_params(::google::protobuf::uint32 value) {
  params_.Add(value);
}

// -------------------------------------------------------------------

// PBEquipExchangeTable

// optional uint32 TempID = 1;
inline bool PBEquipExchangeTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBEquipExchangeTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBEquipExchangeTable::tempid() const {
  return tempid_;
}
inline void PBEquipExchangeTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 ComposeID = 2;
inline int PBEquipExchangeTable::composeid_size() const {
  return composeid_.size();
}
inline void PBEquipExchangeTable::clear_composeid() {
  composeid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipExchangeTable::composeid() const {
  return composeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipExchangeTable::mutable_composeid() {
  return &composeid_;
}
inline ::google::protobuf::uint32 PBEquipExchangeTable::composeid(int index) const {
  return composeid_.Get(index);
}
inline void PBEquipExchangeTable::set_composeid(int index, ::google::protobuf::uint32 value) {
  composeid_.Set(index, value);
}
inline void PBEquipExchangeTable::add_composeid(::google::protobuf::uint32 value) {
  composeid_.Add(value);
}

// optional uint32 ExchangeType = 3;
inline bool PBEquipExchangeTable::has_exchangetype() const {
  return _has_bit(2);
}
inline void PBEquipExchangeTable::clear_exchangetype() {
  exchangetype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBEquipExchangeTable::exchangetype() const {
  return exchangetype_;
}
inline void PBEquipExchangeTable::set_exchangetype(::google::protobuf::uint32 value) {
  _set_bit(2);
  exchangetype_ = value;
}

// -------------------------------------------------------------------

// PBMultiBuffEvent

// optional uint32 EventID = 1;
inline bool PBMultiBuffEvent::has_eventid() const {
  return _has_bit(0);
}
inline void PBMultiBuffEvent::clear_eventid() {
  eventid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMultiBuffEvent::eventid() const {
  return eventid_;
}
inline void PBMultiBuffEvent::set_eventid(::google::protobuf::uint32 value) {
  _set_bit(0);
  eventid_ = value;
}

// optional uint32 TeamFlag = 2;
inline bool PBMultiBuffEvent::has_teamflag() const {
  return _has_bit(1);
}
inline void PBMultiBuffEvent::clear_teamflag() {
  teamflag_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMultiBuffEvent::teamflag() const {
  return teamflag_;
}
inline void PBMultiBuffEvent::set_teamflag(::google::protobuf::uint32 value) {
  _set_bit(1);
  teamflag_ = value;
}

// optional uint32 Distance = 3;
inline bool PBMultiBuffEvent::has_distance() const {
  return _has_bit(2);
}
inline void PBMultiBuffEvent::clear_distance() {
  distance_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMultiBuffEvent::distance() const {
  return distance_;
}
inline void PBMultiBuffEvent::set_distance(::google::protobuf::uint32 value) {
  _set_bit(2);
  distance_ = value;
}

// optional uint32 BuffID = 4;
inline bool PBMultiBuffEvent::has_buffid() const {
  return _has_bit(3);
}
inline void PBMultiBuffEvent::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMultiBuffEvent::buffid() const {
  return buffid_;
}
inline void PBMultiBuffEvent::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(3);
  buffid_ = value;
}

// repeated uint32 RepetionIndex = 5;
inline int PBMultiBuffEvent::repetionindex_size() const {
  return repetionindex_.size();
}
inline void PBMultiBuffEvent::clear_repetionindex() {
  repetionindex_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiBuffEvent::repetionindex() const {
  return repetionindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiBuffEvent::mutable_repetionindex() {
  return &repetionindex_;
}
inline ::google::protobuf::uint32 PBMultiBuffEvent::repetionindex(int index) const {
  return repetionindex_.Get(index);
}
inline void PBMultiBuffEvent::set_repetionindex(int index, ::google::protobuf::uint32 value) {
  repetionindex_.Set(index, value);
}
inline void PBMultiBuffEvent::add_repetionindex(::google::protobuf::uint32 value) {
  repetionindex_.Add(value);
}

// -------------------------------------------------------------------

// PBMultiBuff

// optional uint32 TempID = 1;
inline bool PBMultiBuff::has_tempid() const {
  return _has_bit(0);
}
inline void PBMultiBuff::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMultiBuff::tempid() const {
  return tempid_;
}
inline void PBMultiBuff::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBMultiBuffEvent BuffEvent = 2;
inline int PBMultiBuff::buffevent_size() const {
  return buffevent_.size();
}
inline void PBMultiBuff::clear_buffevent() {
  buffevent_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMultiBuffEvent >&
PBMultiBuff::buffevent() const {
  return buffevent_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMultiBuffEvent >*
PBMultiBuff::mutable_buffevent() {
  return &buffevent_;
}
inline const ::PBMultiBuffEvent& PBMultiBuff::buffevent(int index) const {
  return buffevent_.Get(index);
}
inline ::PBMultiBuffEvent* PBMultiBuff::mutable_buffevent(int index) {
  return buffevent_.Mutable(index);
}
inline ::PBMultiBuffEvent* PBMultiBuff::add_buffevent() {
  return buffevent_.Add();
}

// repeated uint32 Param = 3;
inline int PBMultiBuff::param_size() const {
  return param_.size();
}
inline void PBMultiBuff::clear_param() {
  param_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiBuff::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiBuff::mutable_param() {
  return &param_;
}
inline ::google::protobuf::uint32 PBMultiBuff::param(int index) const {
  return param_.Get(index);
}
inline void PBMultiBuff::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void PBMultiBuff::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}

// repeated uint32 NewBuff = 4;
inline int PBMultiBuff::newbuff_size() const {
  return newbuff_.size();
}
inline void PBMultiBuff::clear_newbuff() {
  newbuff_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiBuff::newbuff() const {
  return newbuff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiBuff::mutable_newbuff() {
  return &newbuff_;
}
inline ::google::protobuf::uint32 PBMultiBuff::newbuff(int index) const {
  return newbuff_.Get(index);
}
inline void PBMultiBuff::set_newbuff(int index, ::google::protobuf::uint32 value) {
  newbuff_.Set(index, value);
}
inline void PBMultiBuff::add_newbuff(::google::protobuf::uint32 value) {
  newbuff_.Add(value);
}

// -------------------------------------------------------------------

// PBCDGroupTable

// optional uint32 TempID = 1;
inline bool PBCDGroupTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBCDGroupTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCDGroupTable::tempid() const {
  return tempid_;
}
inline void PBCDGroupTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 CDTime = 2;
inline int PBCDGroupTable::cdtime_size() const {
  return cdtime_.size();
}
inline void PBCDGroupTable::clear_cdtime() {
  cdtime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCDGroupTable::cdtime() const {
  return cdtime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCDGroupTable::mutable_cdtime() {
  return &cdtime_;
}
inline ::google::protobuf::uint32 PBCDGroupTable::cdtime(int index) const {
  return cdtime_.Get(index);
}
inline void PBCDGroupTable::set_cdtime(int index, ::google::protobuf::uint32 value) {
  cdtime_.Set(index, value);
}
inline void PBCDGroupTable::add_cdtime(::google::protobuf::uint32 value) {
  cdtime_.Add(value);
}

// -------------------------------------------------------------------

// PBMetierAp

// optional uint32 Metier = 1;
inline bool PBMetierAp::has_metier() const {
  return _has_bit(0);
}
inline void PBMetierAp::clear_metier() {
  metier_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMetierAp::metier() const {
  return metier_;
}
inline void PBMetierAp::set_metier(::google::protobuf::uint32 value) {
  _set_bit(0);
  metier_ = value;
}

// optional uint32 Ap = 2;
inline bool PBMetierAp::has_ap() const {
  return _has_bit(1);
}
inline void PBMetierAp::clear_ap() {
  ap_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBMetierAp::ap() const {
  return ap_;
}
inline void PBMetierAp::set_ap(::google::protobuf::uint32 value) {
  _set_bit(1);
  ap_ = value;
}

// -------------------------------------------------------------------

// PBApConfig

// optional uint32 TempID = 1;
inline bool PBApConfig::has_tempid() const {
  return _has_bit(0);
}
inline void PBApConfig::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBApConfig::tempid() const {
  return tempid_;
}
inline void PBApConfig::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 ConsumeHook = 2;
inline bool PBApConfig::has_consumehook() const {
  return _has_bit(1);
}
inline void PBApConfig::clear_consumehook() {
  consumehook_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBApConfig::consumehook() const {
  return consumehook_;
}
inline void PBApConfig::set_consumehook(::google::protobuf::uint32 value) {
  _set_bit(1);
  consumehook_ = value;
}

// optional uint32 WorldChat = 3;
inline bool PBApConfig::has_worldchat() const {
  return _has_bit(2);
}
inline void PBApConfig::clear_worldchat() {
  worldchat_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBApConfig::worldchat() const {
  return worldchat_;
}
inline void PBApConfig::set_worldchat(::google::protobuf::uint32 value) {
  _set_bit(2);
  worldchat_ = value;
}

// optional uint32 CampChat = 4;
inline bool PBApConfig::has_campchat() const {
  return _has_bit(3);
}
inline void PBApConfig::clear_campchat() {
  campchat_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBApConfig::campchat() const {
  return campchat_;
}
inline void PBApConfig::set_campchat(::google::protobuf::uint32 value) {
  _set_bit(3);
  campchat_ = value;
}

// optional uint32 IncApMax = 5;
inline bool PBApConfig::has_incapmax() const {
  return _has_bit(4);
}
inline void PBApConfig::clear_incapmax() {
  incapmax_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBApConfig::incapmax() const {
  return incapmax_;
}
inline void PBApConfig::set_incapmax(::google::protobuf::uint32 value) {
  _set_bit(4);
  incapmax_ = value;
}

// repeated .PBMetierAp MetierAp = 6;
inline int PBApConfig::metierap_size() const {
  return metierap_.size();
}
inline void PBApConfig::clear_metierap() {
  metierap_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMetierAp >&
PBApConfig::metierap() const {
  return metierap_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMetierAp >*
PBApConfig::mutable_metierap() {
  return &metierap_;
}
inline const ::PBMetierAp& PBApConfig::metierap(int index) const {
  return metierap_.Get(index);
}
inline ::PBMetierAp* PBApConfig::mutable_metierap(int index) {
  return metierap_.Mutable(index);
}
inline ::PBMetierAp* PBApConfig::add_metierap() {
  return metierap_.Add();
}

// repeated uint32 RedPhysic = 7;
inline int PBApConfig::redphysic_size() const {
  return redphysic_.size();
}
inline void PBApConfig::clear_redphysic() {
  redphysic_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBApConfig::redphysic() const {
  return redphysic_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBApConfig::mutable_redphysic() {
  return &redphysic_;
}
inline ::google::protobuf::uint32 PBApConfig::redphysic(int index) const {
  return redphysic_.Get(index);
}
inline void PBApConfig::set_redphysic(int index, ::google::protobuf::uint32 value) {
  redphysic_.Set(index, value);
}
inline void PBApConfig::add_redphysic(::google::protobuf::uint32 value) {
  redphysic_.Add(value);
}

// repeated uint32 BluePhysic = 8;
inline int PBApConfig::bluephysic_size() const {
  return bluephysic_.size();
}
inline void PBApConfig::clear_bluephysic() {
  bluephysic_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBApConfig::bluephysic() const {
  return bluephysic_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBApConfig::mutable_bluephysic() {
  return &bluephysic_;
}
inline ::google::protobuf::uint32 PBApConfig::bluephysic(int index) const {
  return bluephysic_.Get(index);
}
inline void PBApConfig::set_bluephysic(int index, ::google::protobuf::uint32 value) {
  bluephysic_.Set(index, value);
}
inline void PBApConfig::add_bluephysic(::google::protobuf::uint32 value) {
  bluephysic_.Add(value);
}

// repeated uint32 ApPhysic = 9;
inline int PBApConfig::apphysic_size() const {
  return apphysic_.size();
}
inline void PBApConfig::clear_apphysic() {
  apphysic_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBApConfig::apphysic() const {
  return apphysic_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBApConfig::mutable_apphysic() {
  return &apphysic_;
}
inline ::google::protobuf::uint32 PBApConfig::apphysic(int index) const {
  return apphysic_.Get(index);
}
inline void PBApConfig::set_apphysic(int index, ::google::protobuf::uint32 value) {
  apphysic_.Set(index, value);
}
inline void PBApConfig::add_apphysic(::google::protobuf::uint32 value) {
  apphysic_.Add(value);
}

// repeated uint32 FbHpPhysic = 10;
inline int PBApConfig::fbhpphysic_size() const {
  return fbhpphysic_.size();
}
inline void PBApConfig::clear_fbhpphysic() {
  fbhpphysic_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBApConfig::fbhpphysic() const {
  return fbhpphysic_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBApConfig::mutable_fbhpphysic() {
  return &fbhpphysic_;
}
inline ::google::protobuf::uint32 PBApConfig::fbhpphysic(int index) const {
  return fbhpphysic_.Get(index);
}
inline void PBApConfig::set_fbhpphysic(int index, ::google::protobuf::uint32 value) {
  fbhpphysic_.Set(index, value);
}
inline void PBApConfig::add_fbhpphysic(::google::protobuf::uint32 value) {
  fbhpphysic_.Add(value);
}

// repeated uint32 FbMpPhysic = 11;
inline int PBApConfig::fbmpphysic_size() const {
  return fbmpphysic_.size();
}
inline void PBApConfig::clear_fbmpphysic() {
  fbmpphysic_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBApConfig::fbmpphysic() const {
  return fbmpphysic_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBApConfig::mutable_fbmpphysic() {
  return &fbmpphysic_;
}
inline ::google::protobuf::uint32 PBApConfig::fbmpphysic(int index) const {
  return fbmpphysic_.Get(index);
}
inline void PBApConfig::set_fbmpphysic(int index, ::google::protobuf::uint32 value) {
  fbmpphysic_.Set(index, value);
}
inline void PBApConfig::add_fbmpphysic(::google::protobuf::uint32 value) {
  fbmpphysic_.Add(value);
}

// repeated uint32 MendPhysic = 12;
inline int PBApConfig::mendphysic_size() const {
  return mendphysic_.size();
}
inline void PBApConfig::clear_mendphysic() {
  mendphysic_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBApConfig::mendphysic() const {
  return mendphysic_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBApConfig::mutable_mendphysic() {
  return &mendphysic_;
}
inline ::google::protobuf::uint32 PBApConfig::mendphysic(int index) const {
  return mendphysic_.Get(index);
}
inline void PBApConfig::set_mendphysic(int index, ::google::protobuf::uint32 value) {
  mendphysic_.Set(index, value);
}
inline void PBApConfig::add_mendphysic(::google::protobuf::uint32 value) {
  mendphysic_.Add(value);
}

// -------------------------------------------------------------------

// PBLightTable

// optional uint32 TempID = 1;
inline bool PBLightTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBLightTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBLightTable::tempid() const {
  return tempid_;
}
inline void PBLightTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 LevelPoint = 2;
inline int PBLightTable::levelpoint_size() const {
  return levelpoint_.size();
}
inline void PBLightTable::clear_levelpoint() {
  levelpoint_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLightTable::levelpoint() const {
  return levelpoint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLightTable::mutable_levelpoint() {
  return &levelpoint_;
}
inline ::google::protobuf::uint32 PBLightTable::levelpoint(int index) const {
  return levelpoint_.Get(index);
}
inline void PBLightTable::set_levelpoint(int index, ::google::protobuf::uint32 value) {
  levelpoint_.Set(index, value);
}
inline void PBLightTable::add_levelpoint(::google::protobuf::uint32 value) {
  levelpoint_.Add(value);
}

// repeated uint32 JewelPoint = 3;
inline int PBLightTable::jewelpoint_size() const {
  return jewelpoint_.size();
}
inline void PBLightTable::clear_jewelpoint() {
  jewelpoint_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLightTable::jewelpoint() const {
  return jewelpoint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLightTable::mutable_jewelpoint() {
  return &jewelpoint_;
}
inline ::google::protobuf::uint32 PBLightTable::jewelpoint(int index) const {
  return jewelpoint_.Get(index);
}
inline void PBLightTable::set_jewelpoint(int index, ::google::protobuf::uint32 value) {
  jewelpoint_.Set(index, value);
}
inline void PBLightTable::add_jewelpoint(::google::protobuf::uint32 value) {
  jewelpoint_.Add(value);
}

// repeated uint32 LevelGrade1 = 4;
inline int PBLightTable::levelgrade1_size() const {
  return levelgrade1_.size();
}
inline void PBLightTable::clear_levelgrade1() {
  levelgrade1_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLightTable::levelgrade1() const {
  return levelgrade1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLightTable::mutable_levelgrade1() {
  return &levelgrade1_;
}
inline ::google::protobuf::uint32 PBLightTable::levelgrade1(int index) const {
  return levelgrade1_.Get(index);
}
inline void PBLightTable::set_levelgrade1(int index, ::google::protobuf::uint32 value) {
  levelgrade1_.Set(index, value);
}
inline void PBLightTable::add_levelgrade1(::google::protobuf::uint32 value) {
  levelgrade1_.Add(value);
}

// repeated uint32 JewelGrade1 = 5;
inline int PBLightTable::jewelgrade1_size() const {
  return jewelgrade1_.size();
}
inline void PBLightTable::clear_jewelgrade1() {
  jewelgrade1_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLightTable::jewelgrade1() const {
  return jewelgrade1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLightTable::mutable_jewelgrade1() {
  return &jewelgrade1_;
}
inline ::google::protobuf::uint32 PBLightTable::jewelgrade1(int index) const {
  return jewelgrade1_.Get(index);
}
inline void PBLightTable::set_jewelgrade1(int index, ::google::protobuf::uint32 value) {
  jewelgrade1_.Set(index, value);
}
inline void PBLightTable::add_jewelgrade1(::google::protobuf::uint32 value) {
  jewelgrade1_.Add(value);
}

// repeated uint32 LevelGrade2 = 6;
inline int PBLightTable::levelgrade2_size() const {
  return levelgrade2_.size();
}
inline void PBLightTable::clear_levelgrade2() {
  levelgrade2_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLightTable::levelgrade2() const {
  return levelgrade2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLightTable::mutable_levelgrade2() {
  return &levelgrade2_;
}
inline ::google::protobuf::uint32 PBLightTable::levelgrade2(int index) const {
  return levelgrade2_.Get(index);
}
inline void PBLightTable::set_levelgrade2(int index, ::google::protobuf::uint32 value) {
  levelgrade2_.Set(index, value);
}
inline void PBLightTable::add_levelgrade2(::google::protobuf::uint32 value) {
  levelgrade2_.Add(value);
}

// repeated uint32 JewelGrade2 = 7;
inline int PBLightTable::jewelgrade2_size() const {
  return jewelgrade2_.size();
}
inline void PBLightTable::clear_jewelgrade2() {
  jewelgrade2_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBLightTable::jewelgrade2() const {
  return jewelgrade2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBLightTable::mutable_jewelgrade2() {
  return &jewelgrade2_;
}
inline ::google::protobuf::uint32 PBLightTable::jewelgrade2(int index) const {
  return jewelgrade2_.Get(index);
}
inline void PBLightTable::set_jewelgrade2(int index, ::google::protobuf::uint32 value) {
  jewelgrade2_.Set(index, value);
}
inline void PBLightTable::add_jewelgrade2(::google::protobuf::uint32 value) {
  jewelgrade2_.Add(value);
}

// -------------------------------------------------------------------

// PBWizardTable

// optional uint32 TempID = 1;
inline bool PBWizardTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBWizardTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBWizardTable::tempid() const {
  return tempid_;
}
inline void PBWizardTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Exp = 2;
inline int PBWizardTable::exp_size() const {
  return exp_.size();
}
inline void PBWizardTable::clear_exp() {
  exp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWizardTable::exp() const {
  return exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWizardTable::mutable_exp() {
  return &exp_;
}
inline ::google::protobuf::uint32 PBWizardTable::exp(int index) const {
  return exp_.Get(index);
}
inline void PBWizardTable::set_exp(int index, ::google::protobuf::uint32 value) {
  exp_.Set(index, value);
}
inline void PBWizardTable::add_exp(::google::protobuf::uint32 value) {
  exp_.Add(value);
}

// optional uint32 KeepRand = 3;
inline bool PBWizardTable::has_keeprand() const {
  return _has_bit(2);
}
inline void PBWizardTable::clear_keeprand() {
  keeprand_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBWizardTable::keeprand() const {
  return keeprand_;
}
inline void PBWizardTable::set_keeprand(::google::protobuf::uint32 value) {
  _set_bit(2);
  keeprand_ = value;
}

// repeated uint32 TrendRand = 4;
inline int PBWizardTable::trendrand_size() const {
  return trendrand_.size();
}
inline void PBWizardTable::clear_trendrand() {
  trendrand_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWizardTable::trendrand() const {
  return trendrand_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWizardTable::mutable_trendrand() {
  return &trendrand_;
}
inline ::google::protobuf::uint32 PBWizardTable::trendrand(int index) const {
  return trendrand_.Get(index);
}
inline void PBWizardTable::set_trendrand(int index, ::google::protobuf::uint32 value) {
  trendrand_.Set(index, value);
}
inline void PBWizardTable::add_trendrand(::google::protobuf::uint32 value) {
  trendrand_.Add(value);
}

// repeated uint32 TrendResult = 5;
inline int PBWizardTable::trendresult_size() const {
  return trendresult_.size();
}
inline void PBWizardTable::clear_trendresult() {
  trendresult_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWizardTable::trendresult() const {
  return trendresult_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWizardTable::mutable_trendresult() {
  return &trendresult_;
}
inline ::google::protobuf::uint32 PBWizardTable::trendresult(int index) const {
  return trendresult_.Get(index);
}
inline void PBWizardTable::set_trendresult(int index, ::google::protobuf::uint32 value) {
  trendresult_.Set(index, value);
}
inline void PBWizardTable::add_trendresult(::google::protobuf::uint32 value) {
  trendresult_.Add(value);
}

// optional uint32 Money = 6;
inline bool PBWizardTable::has_money() const {
  return _has_bit(5);
}
inline void PBWizardTable::clear_money() {
  money_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBWizardTable::money() const {
  return money_;
}
inline void PBWizardTable::set_money(::google::protobuf::uint32 value) {
  _set_bit(5);
  money_ = value;
}

// -------------------------------------------------------------------

// PBJudgeLevel

// optional uint32 JudgeType = 1;
inline bool PBJudgeLevel::has_judgetype() const {
  return _has_bit(0);
}
inline void PBJudgeLevel::clear_judgetype() {
  judgetype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBJudgeLevel::judgetype() const {
  return judgetype_;
}
inline void PBJudgeLevel::set_judgetype(::google::protobuf::uint32 value) {
  _set_bit(0);
  judgetype_ = value;
}

// optional uint32 LevelMin = 2;
inline bool PBJudgeLevel::has_levelmin() const {
  return _has_bit(1);
}
inline void PBJudgeLevel::clear_levelmin() {
  levelmin_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBJudgeLevel::levelmin() const {
  return levelmin_;
}
inline void PBJudgeLevel::set_levelmin(::google::protobuf::uint32 value) {
  _set_bit(1);
  levelmin_ = value;
}

// optional uint32 LevelMax = 3;
inline bool PBJudgeLevel::has_levelmax() const {
  return _has_bit(2);
}
inline void PBJudgeLevel::clear_levelmax() {
  levelmax_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBJudgeLevel::levelmax() const {
  return levelmax_;
}
inline void PBJudgeLevel::set_levelmax(::google::protobuf::uint32 value) {
  _set_bit(2);
  levelmax_ = value;
}

// optional uint32 Star = 4;
inline bool PBJudgeLevel::has_star() const {
  return _has_bit(3);
}
inline void PBJudgeLevel::clear_star() {
  star_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBJudgeLevel::star() const {
  return star_;
}
inline void PBJudgeLevel::set_star(::google::protobuf::uint32 value) {
  _set_bit(3);
  star_ = value;
}

// optional uint32 LevelType = 5;
inline bool PBJudgeLevel::has_leveltype() const {
  return _has_bit(4);
}
inline void PBJudgeLevel::clear_leveltype() {
  leveltype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBJudgeLevel::leveltype() const {
  return leveltype_;
}
inline void PBJudgeLevel::set_leveltype(::google::protobuf::uint32 value) {
  _set_bit(4);
  leveltype_ = value;
}

// -------------------------------------------------------------------

// PBJudgeConfig

// optional uint32 TempID = 1;
inline bool PBJudgeConfig::has_tempid() const {
  return _has_bit(0);
}
inline void PBJudgeConfig::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBJudgeConfig::tempid() const {
  return tempid_;
}
inline void PBJudgeConfig::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 OpenCD = 2;
inline bool PBJudgeConfig::has_opencd() const {
  return _has_bit(1);
}
inline void PBJudgeConfig::clear_opencd() {
  opencd_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBJudgeConfig::opencd() const {
  return opencd_;
}
inline void PBJudgeConfig::set_opencd(::google::protobuf::uint32 value) {
  _set_bit(1);
  opencd_ = value;
}

// repeated .PBJudgeLevel JudgeLevel = 3;
inline int PBJudgeConfig::judgelevel_size() const {
  return judgelevel_.size();
}
inline void PBJudgeConfig::clear_judgelevel() {
  judgelevel_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBJudgeLevel >&
PBJudgeConfig::judgelevel() const {
  return judgelevel_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBJudgeLevel >*
PBJudgeConfig::mutable_judgelevel() {
  return &judgelevel_;
}
inline const ::PBJudgeLevel& PBJudgeConfig::judgelevel(int index) const {
  return judgelevel_.Get(index);
}
inline ::PBJudgeLevel* PBJudgeConfig::mutable_judgelevel(int index) {
  return judgelevel_.Mutable(index);
}
inline ::PBJudgeLevel* PBJudgeConfig::add_judgelevel() {
  return judgelevel_.Add();
}

// optional uint32 ScoreBase = 4;
inline bool PBJudgeConfig::has_scorebase() const {
  return _has_bit(3);
}
inline void PBJudgeConfig::clear_scorebase() {
  scorebase_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBJudgeConfig::scorebase() const {
  return scorebase_;
}
inline void PBJudgeConfig::set_scorebase(::google::protobuf::uint32 value) {
  _set_bit(3);
  scorebase_ = value;
}

// optional uint32 ScoreRate = 5;
inline bool PBJudgeConfig::has_scorerate() const {
  return _has_bit(4);
}
inline void PBJudgeConfig::clear_scorerate() {
  scorerate_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBJudgeConfig::scorerate() const {
  return scorerate_;
}
inline void PBJudgeConfig::set_scorerate(::google::protobuf::uint32 value) {
  _set_bit(4);
  scorerate_ = value;
}

// optional uint32 ScoreLevel = 6;
inline bool PBJudgeConfig::has_scorelevel() const {
  return _has_bit(5);
}
inline void PBJudgeConfig::clear_scorelevel() {
  scorelevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBJudgeConfig::scorelevel() const {
  return scorelevel_;
}
inline void PBJudgeConfig::set_scorelevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  scorelevel_ = value;
}

// -------------------------------------------------------------------

// PBPaperValue

// optional uint32 Value = 1;
inline bool PBPaperValue::has_value() const {
  return _has_bit(0);
}
inline void PBPaperValue::clear_value() {
  value_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPaperValue::value() const {
  return value_;
}
inline void PBPaperValue::set_value(::google::protobuf::uint32 value) {
  _set_bit(0);
  value_ = value;
}

// optional uint32 Probality = 2;
inline bool PBPaperValue::has_probality() const {
  return _has_bit(1);
}
inline void PBPaperValue::clear_probality() {
  probality_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBPaperValue::probality() const {
  return probality_;
}
inline void PBPaperValue::set_probality(::google::protobuf::uint32 value) {
  _set_bit(1);
  probality_ = value;
}

// -------------------------------------------------------------------

// PBItemRedPaper

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemRedPaper::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemRedPaper::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemRedPaper::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemRedPaper::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 BaseCharge = 2;
inline bool PBItemRedPaper::has_basecharge() const {
  return _has_bit(1);
}
inline void PBItemRedPaper::clear_basecharge() {
  basecharge_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemRedPaper::basecharge() const {
  return basecharge_;
}
inline void PBItemRedPaper::set_basecharge(::google::protobuf::uint32 value) {
  _set_bit(1);
  basecharge_ = value;
}

// repeated .PBPaperValue MoneyInfo = 3;
inline int PBItemRedPaper::moneyinfo_size() const {
  return moneyinfo_.size();
}
inline void PBItemRedPaper::clear_moneyinfo() {
  moneyinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPaperValue >&
PBItemRedPaper::moneyinfo() const {
  return moneyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPaperValue >*
PBItemRedPaper::mutable_moneyinfo() {
  return &moneyinfo_;
}
inline const ::PBPaperValue& PBItemRedPaper::moneyinfo(int index) const {
  return moneyinfo_.Get(index);
}
inline ::PBPaperValue* PBItemRedPaper::mutable_moneyinfo(int index) {
  return moneyinfo_.Mutable(index);
}
inline ::PBPaperValue* PBItemRedPaper::add_moneyinfo() {
  return moneyinfo_.Add();
}

// repeated .PBPaperValue BindMoneyInfo = 4;
inline int PBItemRedPaper::bindmoneyinfo_size() const {
  return bindmoneyinfo_.size();
}
inline void PBItemRedPaper::clear_bindmoneyinfo() {
  bindmoneyinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPaperValue >&
PBItemRedPaper::bindmoneyinfo() const {
  return bindmoneyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPaperValue >*
PBItemRedPaper::mutable_bindmoneyinfo() {
  return &bindmoneyinfo_;
}
inline const ::PBPaperValue& PBItemRedPaper::bindmoneyinfo(int index) const {
  return bindmoneyinfo_.Get(index);
}
inline ::PBPaperValue* PBItemRedPaper::mutable_bindmoneyinfo(int index) {
  return bindmoneyinfo_.Mutable(index);
}
inline ::PBPaperValue* PBItemRedPaper::add_bindmoneyinfo() {
  return bindmoneyinfo_.Add();
}

// optional uint32 RedPaperType = 5;
inline bool PBItemRedPaper::has_redpapertype() const {
  return _has_bit(4);
}
inline void PBItemRedPaper::clear_redpapertype() {
  redpapertype_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemRedPaper::redpapertype() const {
  return redpapertype_;
}
inline void PBItemRedPaper::set_redpapertype(::google::protobuf::uint32 value) {
  _set_bit(4);
  redpapertype_ = value;
}

// -------------------------------------------------------------------

// PBTrend

// optional uint32 TempID = 1;
inline bool PBTrend::has_tempid() const {
  return _has_bit(0);
}
inline void PBTrend::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTrend::tempid() const {
  return tempid_;
}
inline void PBTrend::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Bonus = 2;
inline int PBTrend::bonus_size() const {
  return bonus_.size();
}
inline void PBTrend::clear_bonus() {
  bonus_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTrend::bonus() const {
  return bonus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTrend::mutable_bonus() {
  return &bonus_;
}
inline ::google::protobuf::uint32 PBTrend::bonus(int index) const {
  return bonus_.Get(index);
}
inline void PBTrend::set_bonus(int index, ::google::protobuf::uint32 value) {
  bonus_.Set(index, value);
}
inline void PBTrend::add_bonus(::google::protobuf::uint32 value) {
  bonus_.Add(value);
}

// optional string Name = 3;
inline bool PBTrend::has_name() const {
  return _has_bit(2);
}
inline void PBTrend::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBTrend::name() const {
  return *name_;
}
inline void PBTrend::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBTrend::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBTrend::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTrend::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string Desc = 4;
inline bool PBTrend::has_desc() const {
  return _has_bit(3);
}
inline void PBTrend::clear_desc() {
  if (desc_ != &_default_desc_) {
    desc_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& PBTrend::desc() const {
  return *desc_;
}
inline void PBTrend::set_desc(const ::std::string& value) {
  _set_bit(3);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBTrend::set_desc(const char* value) {
  _set_bit(3);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBTrend::set_desc(const char* value, size_t size) {
  _set_bit(3);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTrend::mutable_desc() {
  _set_bit(3);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  return desc_;
}

// -------------------------------------------------------------------

// PBAward

// optional uint32 ItemID = 1;
inline bool PBAward::has_itemid() const {
  return _has_bit(0);
}
inline void PBAward::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBAward::itemid() const {
  return itemid_;
}
inline void PBAward::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemid_ = value;
}

// optional uint32 ItemNum = 2;
inline bool PBAward::has_itemnum() const {
  return _has_bit(1);
}
inline void PBAward::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBAward::itemnum() const {
  return itemnum_;
}
inline void PBAward::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemnum_ = value;
}

// -------------------------------------------------------------------

// PBAchieveAward

// optional uint32 TempID = 1;
inline bool PBAchieveAward::has_tempid() const {
  return _has_bit(0);
}
inline void PBAchieveAward::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBAchieveAward::tempid() const {
  return tempid_;
}
inline void PBAchieveAward::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 AwardID = 2;
inline int PBAchieveAward::awardid_size() const {
  return awardid_.size();
}
inline void PBAchieveAward::clear_awardid() {
  awardid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAchieveAward::awardid() const {
  return awardid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAchieveAward::mutable_awardid() {
  return &awardid_;
}
inline ::google::protobuf::uint32 PBAchieveAward::awardid(int index) const {
  return awardid_.Get(index);
}
inline void PBAchieveAward::set_awardid(int index, ::google::protobuf::uint32 value) {
  awardid_.Set(index, value);
}
inline void PBAchieveAward::add_awardid(::google::protobuf::uint32 value) {
  awardid_.Add(value);
}

// repeated uint32 AwardNum = 3;
inline int PBAchieveAward::awardnum_size() const {
  return awardnum_.size();
}
inline void PBAchieveAward::clear_awardnum() {
  awardnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAchieveAward::awardnum() const {
  return awardnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAchieveAward::mutable_awardnum() {
  return &awardnum_;
}
inline ::google::protobuf::uint32 PBAchieveAward::awardnum(int index) const {
  return awardnum_.Get(index);
}
inline void PBAchieveAward::set_awardnum(int index, ::google::protobuf::uint32 value) {
  awardnum_.Set(index, value);
}
inline void PBAchieveAward::add_awardnum(::google::protobuf::uint32 value) {
  awardnum_.Add(value);
}

// repeated uint32 Point = 4;
inline int PBAchieveAward::point_size() const {
  return point_.size();
}
inline void PBAchieveAward::clear_point() {
  point_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAchieveAward::point() const {
  return point_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAchieveAward::mutable_point() {
  return &point_;
}
inline ::google::protobuf::uint32 PBAchieveAward::point(int index) const {
  return point_.Get(index);
}
inline void PBAchieveAward::set_point(int index, ::google::protobuf::uint32 value) {
  point_.Set(index, value);
}
inline void PBAchieveAward::add_point(::google::protobuf::uint32 value) {
  point_.Add(value);
}

// optional uint32 SysMailID = 5;
inline bool PBAchieveAward::has_sysmailid() const {
  return _has_bit(4);
}
inline void PBAchieveAward::clear_sysmailid() {
  sysmailid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBAchieveAward::sysmailid() const {
  return sysmailid_;
}
inline void PBAchieveAward::set_sysmailid(::google::protobuf::uint32 value) {
  _set_bit(4);
  sysmailid_ = value;
}

// -------------------------------------------------------------------

// PBPower

// optional uint32 TempID = 1;
inline bool PBPower::has_tempid() const {
  return _has_bit(0);
}
inline void PBPower::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBPower::tempid() const {
  return tempid_;
}
inline void PBPower::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBPower::has_name() const {
  return _has_bit(1);
}
inline void PBPower::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBPower::name() const {
  return *name_;
}
inline void PBPower::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBPower::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBPower::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPower::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string Desc = 3;
inline bool PBPower::has_desc() const {
  return _has_bit(2);
}
inline void PBPower::clear_desc() {
  if (desc_ != &_default_desc_) {
    desc_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBPower::desc() const {
  return *desc_;
}
inline void PBPower::set_desc(const ::std::string& value) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBPower::set_desc(const char* value) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBPower::set_desc(const char* value, size_t size) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPower::mutable_desc() {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  return desc_;
}

// optional uint32 Type = 4;
inline bool PBPower::has_type() const {
  return _has_bit(3);
}
inline void PBPower::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBPower::type() const {
  return type_;
}
inline void PBPower::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// optional uint32 Level = 5;
inline bool PBPower::has_level() const {
  return _has_bit(4);
}
inline void PBPower::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBPower::level() const {
  return level_;
}
inline void PBPower::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint32 Official = 6;
inline bool PBPower::has_official() const {
  return _has_bit(5);
}
inline void PBPower::clear_official() {
  official_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBPower::official() const {
  return official_;
}
inline void PBPower::set_official(::google::protobuf::uint32 value) {
  _set_bit(5);
  official_ = value;
}

// optional uint32 Order = 7;
inline bool PBPower::has_order() const {
  return _has_bit(6);
}
inline void PBPower::clear_order() {
  order_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBPower::order() const {
  return order_;
}
inline void PBPower::set_order(::google::protobuf::uint32 value) {
  _set_bit(6);
  order_ = value;
}

// optional uint32 Param1 = 8;
inline bool PBPower::has_param1() const {
  return _has_bit(7);
}
inline void PBPower::clear_param1() {
  param1_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBPower::param1() const {
  return param1_;
}
inline void PBPower::set_param1(::google::protobuf::uint32 value) {
  _set_bit(7);
  param1_ = value;
}

// optional uint32 Param2 = 9;
inline bool PBPower::has_param2() const {
  return _has_bit(8);
}
inline void PBPower::clear_param2() {
  param2_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBPower::param2() const {
  return param2_;
}
inline void PBPower::set_param2(::google::protobuf::uint32 value) {
  _set_bit(8);
  param2_ = value;
}

// repeated uint32 UseTime = 10;
inline int PBPower::usetime_size() const {
  return usetime_.size();
}
inline void PBPower::clear_usetime() {
  usetime_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPower::usetime() const {
  return usetime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPower::mutable_usetime() {
  return &usetime_;
}
inline ::google::protobuf::uint32 PBPower::usetime(int index) const {
  return usetime_.Get(index);
}
inline void PBPower::set_usetime(int index, ::google::protobuf::uint32 value) {
  usetime_.Set(index, value);
}
inline void PBPower::add_usetime(::google::protobuf::uint32 value) {
  usetime_.Add(value);
}

// optional uint32 Construct = 11;
inline bool PBPower::has_construct() const {
  return _has_bit(10);
}
inline void PBPower::clear_construct() {
  construct_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBPower::construct() const {
  return construct_;
}
inline void PBPower::set_construct(::google::protobuf::uint32 value) {
  _set_bit(10);
  construct_ = value;
}

// optional uint32 Power = 12;
inline bool PBPower::has_power() const {
  return _has_bit(11);
}
inline void PBPower::clear_power() {
  power_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBPower::power() const {
  return power_;
}
inline void PBPower::set_power(::google::protobuf::uint32 value) {
  _set_bit(11);
  power_ = value;
}

// optional uint32 Money = 13;
inline bool PBPower::has_money() const {
  return _has_bit(12);
}
inline void PBPower::clear_money() {
  money_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBPower::money() const {
  return money_;
}
inline void PBPower::set_money(::google::protobuf::uint32 value) {
  _set_bit(12);
  money_ = value;
}

// optional string Icon = 14;
inline bool PBPower::has_icon() const {
  return _has_bit(13);
}
inline void PBPower::clear_icon() {
  if (icon_ != &_default_icon_) {
    icon_->clear();
  }
  _clear_bit(13);
}
inline const ::std::string& PBPower::icon() const {
  return *icon_;
}
inline void PBPower::set_icon(const ::std::string& value) {
  _set_bit(13);
  if (icon_ == &_default_icon_) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void PBPower::set_icon(const char* value) {
  _set_bit(13);
  if (icon_ == &_default_icon_) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void PBPower::set_icon(const char* value, size_t size) {
  _set_bit(13);
  if (icon_ == &_default_icon_) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPower::mutable_icon() {
  _set_bit(13);
  if (icon_ == &_default_icon_) {
    icon_ = new ::std::string;
  }
  return icon_;
}

// optional uint32 Country = 15;
inline bool PBPower::has_country() const {
  return _has_bit(14);
}
inline void PBPower::clear_country() {
  country_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBPower::country() const {
  return country_;
}
inline void PBPower::set_country(::google::protobuf::uint32 value) {
  _set_bit(14);
  country_ = value;
}

// optional uint32 AllCount = 16;
inline bool PBPower::has_allcount() const {
  return _has_bit(15);
}
inline void PBPower::clear_allcount() {
  allcount_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBPower::allcount() const {
  return allcount_;
}
inline void PBPower::set_allcount(::google::protobuf::uint32 value) {
  _set_bit(15);
  allcount_ = value;
}

// optional uint32 StartHour = 17;
inline bool PBPower::has_starthour() const {
  return _has_bit(16);
}
inline void PBPower::clear_starthour() {
  starthour_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBPower::starthour() const {
  return starthour_;
}
inline void PBPower::set_starthour(::google::protobuf::uint32 value) {
  _set_bit(16);
  starthour_ = value;
}

// optional uint32 StartMin = 18;
inline bool PBPower::has_startmin() const {
  return _has_bit(17);
}
inline void PBPower::clear_startmin() {
  startmin_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBPower::startmin() const {
  return startmin_;
}
inline void PBPower::set_startmin(::google::protobuf::uint32 value) {
  _set_bit(17);
  startmin_ = value;
}

// optional uint32 EndHour = 19;
inline bool PBPower::has_endhour() const {
  return _has_bit(18);
}
inline void PBPower::clear_endhour() {
  endhour_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBPower::endhour() const {
  return endhour_;
}
inline void PBPower::set_endhour(::google::protobuf::uint32 value) {
  _set_bit(18);
  endhour_ = value;
}

// optional uint32 EndMin = 20;
inline bool PBPower::has_endmin() const {
  return _has_bit(19);
}
inline void PBPower::clear_endmin() {
  endmin_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBPower::endmin() const {
  return endmin_;
}
inline void PBPower::set_endmin(::google::protobuf::uint32 value) {
  _set_bit(19);
  endmin_ = value;
}

// -------------------------------------------------------------------

// PBOfficial

// optional uint32 TempID = 1;
inline bool PBOfficial::has_tempid() const {
  return _has_bit(0);
}
inline void PBOfficial::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBOfficial::tempid() const {
  return tempid_;
}
inline void PBOfficial::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBOfficial::has_name() const {
  return _has_bit(1);
}
inline void PBOfficial::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBOfficial::name() const {
  return *name_;
}
inline void PBOfficial::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBOfficial::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBOfficial::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBOfficial::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string Desc = 3;
inline bool PBOfficial::has_desc() const {
  return _has_bit(2);
}
inline void PBOfficial::clear_desc() {
  if (desc_ != &_default_desc_) {
    desc_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBOfficial::desc() const {
  return *desc_;
}
inline void PBOfficial::set_desc(const ::std::string& value) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBOfficial::set_desc(const char* value) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBOfficial::set_desc(const char* value, size_t size) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBOfficial::mutable_desc() {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  return desc_;
}

// optional uint32 Type = 4;
inline bool PBOfficial::has_type() const {
  return _has_bit(3);
}
inline void PBOfficial::clear_type() {
  type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBOfficial::type() const {
  return type_;
}
inline void PBOfficial::set_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  type_ = value;
}

// repeated uint32 Wizard = 5;
inline int PBOfficial::wizard_size() const {
  return wizard_.size();
}
inline void PBOfficial::clear_wizard() {
  wizard_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOfficial::wizard() const {
  return wizard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOfficial::mutable_wizard() {
  return &wizard_;
}
inline ::google::protobuf::uint32 PBOfficial::wizard(int index) const {
  return wizard_.Get(index);
}
inline void PBOfficial::set_wizard(int index, ::google::protobuf::uint32 value) {
  wizard_.Set(index, value);
}
inline void PBOfficial::add_wizard(::google::protobuf::uint32 value) {
  wizard_.Add(value);
}

// optional uint32 Power = 6;
inline bool PBOfficial::has_power() const {
  return _has_bit(5);
}
inline void PBOfficial::clear_power() {
  power_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBOfficial::power() const {
  return power_;
}
inline void PBOfficial::set_power(::google::protobuf::uint32 value) {
  _set_bit(5);
  power_ = value;
}

// optional uint32 CountryLevel = 7;
inline bool PBOfficial::has_countrylevel() const {
  return _has_bit(6);
}
inline void PBOfficial::clear_countrylevel() {
  countrylevel_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBOfficial::countrylevel() const {
  return countrylevel_;
}
inline void PBOfficial::set_countrylevel(::google::protobuf::uint32 value) {
  _set_bit(6);
  countrylevel_ = value;
}

// optional uint32 ConstructLevel = 8;
inline bool PBOfficial::has_constructlevel() const {
  return _has_bit(7);
}
inline void PBOfficial::clear_constructlevel() {
  constructlevel_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBOfficial::constructlevel() const {
  return constructlevel_;
}
inline void PBOfficial::set_constructlevel(::google::protobuf::uint32 value) {
  _set_bit(7);
  constructlevel_ = value;
}

// -------------------------------------------------------------------

// PBOfficialTable

// optional uint32 TempID = 1;
inline bool PBOfficialTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBOfficialTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBOfficialTable::tempid() const {
  return tempid_;
}
inline void PBOfficialTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 OfficialData = 2;
inline int PBOfficialTable::officialdata_size() const {
  return officialdata_.size();
}
inline void PBOfficialTable::clear_officialdata() {
  officialdata_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOfficialTable::officialdata() const {
  return officialdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOfficialTable::mutable_officialdata() {
  return &officialdata_;
}
inline ::google::protobuf::uint32 PBOfficialTable::officialdata(int index) const {
  return officialdata_.Get(index);
}
inline void PBOfficialTable::set_officialdata(int index, ::google::protobuf::uint32 value) {
  officialdata_.Set(index, value);
}
inline void PBOfficialTable::add_officialdata(::google::protobuf::uint32 value) {
  officialdata_.Add(value);
}

// -------------------------------------------------------------------

// PBConstructExp

// optional uint32 TempID = 1;
inline bool PBConstructExp::has_tempid() const {
  return _has_bit(0);
}
inline void PBConstructExp::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBConstructExp::tempid() const {
  return tempid_;
}
inline void PBConstructExp::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Exp = 2;
inline int PBConstructExp::exp_size() const {
  return exp_.size();
}
inline void PBConstructExp::clear_exp() {
  exp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBConstructExp::exp() const {
  return exp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBConstructExp::mutable_exp() {
  return &exp_;
}
inline ::google::protobuf::uint32 PBConstructExp::exp(int index) const {
  return exp_.Get(index);
}
inline void PBConstructExp::set_exp(int index, ::google::protobuf::uint32 value) {
  exp_.Set(index, value);
}
inline void PBConstructExp::add_exp(::google::protobuf::uint32 value) {
  exp_.Add(value);
}

// repeated uint32 Bonus = 3;
inline int PBConstructExp::bonus_size() const {
  return bonus_.size();
}
inline void PBConstructExp::clear_bonus() {
  bonus_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBConstructExp::bonus() const {
  return bonus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBConstructExp::mutable_bonus() {
  return &bonus_;
}
inline ::google::protobuf::uint32 PBConstructExp::bonus(int index) const {
  return bonus_.Get(index);
}
inline void PBConstructExp::set_bonus(int index, ::google::protobuf::uint32 value) {
  bonus_.Set(index, value);
}
inline void PBConstructExp::add_bonus(::google::protobuf::uint32 value) {
  bonus_.Add(value);
}

// -------------------------------------------------------------------

// PBAddPKTable

// optional uint32 TempID = 1;
inline bool PBAddPKTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBAddPKTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBAddPKTable::tempid() const {
  return tempid_;
}
inline void PBAddPKTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 KFChangePower = 2;
inline bool PBAddPKTable::has_kfchangepower() const {
  return _has_bit(1);
}
inline void PBAddPKTable::clear_kfchangepower() {
  kfchangepower_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBAddPKTable::kfchangepower() const {
  return kfchangepower_;
}
inline void PBAddPKTable::set_kfchangepower(::google::protobuf::uint32 value) {
  _set_bit(1);
  kfchangepower_ = value;
}

// optional uint32 KPChangePower = 3;
inline bool PBAddPKTable::has_kpchangepower() const {
  return _has_bit(2);
}
inline void PBAddPKTable::clear_kpchangepower() {
  kpchangepower_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBAddPKTable::kpchangepower() const {
  return kpchangepower_;
}
inline void PBAddPKTable::set_kpchangepower(::google::protobuf::uint32 value) {
  _set_bit(2);
  kpchangepower_ = value;
}

// optional uint32 KWChangePower = 4;
inline bool PBAddPKTable::has_kwchangepower() const {
  return _has_bit(3);
}
inline void PBAddPKTable::clear_kwchangepower() {
  kwchangepower_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBAddPKTable::kwchangepower() const {
  return kwchangepower_;
}
inline void PBAddPKTable::set_kwchangepower(::google::protobuf::uint32 value) {
  _set_bit(3);
  kwchangepower_ = value;
}

// optional uint32 DFChangePower = 5;
inline bool PBAddPKTable::has_dfchangepower() const {
  return _has_bit(4);
}
inline void PBAddPKTable::clear_dfchangepower() {
  dfchangepower_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBAddPKTable::dfchangepower() const {
  return dfchangepower_;
}
inline void PBAddPKTable::set_dfchangepower(::google::protobuf::uint32 value) {
  _set_bit(4);
  dfchangepower_ = value;
}

// optional uint32 DPChangePower = 6;
inline bool PBAddPKTable::has_dpchangepower() const {
  return _has_bit(5);
}
inline void PBAddPKTable::clear_dpchangepower() {
  dpchangepower_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBAddPKTable::dpchangepower() const {
  return dpchangepower_;
}
inline void PBAddPKTable::set_dpchangepower(::google::protobuf::uint32 value) {
  _set_bit(5);
  dpchangepower_ = value;
}

// optional uint32 DWChangePower = 7;
inline bool PBAddPKTable::has_dwchangepower() const {
  return _has_bit(6);
}
inline void PBAddPKTable::clear_dwchangepower() {
  dwchangepower_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBAddPKTable::dwchangepower() const {
  return dwchangepower_;
}
inline void PBAddPKTable::set_dwchangepower(::google::protobuf::uint32 value) {
  _set_bit(6);
  dwchangepower_ = value;
}

// optional uint32 KFChangeFriend = 8;
inline bool PBAddPKTable::has_kfchangefriend() const {
  return _has_bit(7);
}
inline void PBAddPKTable::clear_kfchangefriend() {
  kfchangefriend_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBAddPKTable::kfchangefriend() const {
  return kfchangefriend_;
}
inline void PBAddPKTable::set_kfchangefriend(::google::protobuf::uint32 value) {
  _set_bit(7);
  kfchangefriend_ = value;
}

// optional uint32 KPChangeFriend = 9;
inline bool PBAddPKTable::has_kpchangefriend() const {
  return _has_bit(8);
}
inline void PBAddPKTable::clear_kpchangefriend() {
  kpchangefriend_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBAddPKTable::kpchangefriend() const {
  return kpchangefriend_;
}
inline void PBAddPKTable::set_kpchangefriend(::google::protobuf::uint32 value) {
  _set_bit(8);
  kpchangefriend_ = value;
}

// optional uint32 KWChangeFriend = 10;
inline bool PBAddPKTable::has_kwchangefriend() const {
  return _has_bit(9);
}
inline void PBAddPKTable::clear_kwchangefriend() {
  kwchangefriend_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBAddPKTable::kwchangefriend() const {
  return kwchangefriend_;
}
inline void PBAddPKTable::set_kwchangefriend(::google::protobuf::uint32 value) {
  _set_bit(9);
  kwchangefriend_ = value;
}

// optional uint32 KFChangePK = 11;
inline bool PBAddPKTable::has_kfchangepk() const {
  return _has_bit(10);
}
inline void PBAddPKTable::clear_kfchangepk() {
  kfchangepk_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBAddPKTable::kfchangepk() const {
  return kfchangepk_;
}
inline void PBAddPKTable::set_kfchangepk(::google::protobuf::uint32 value) {
  _set_bit(10);
  kfchangepk_ = value;
}

// optional uint32 KWChangePK = 12;
inline bool PBAddPKTable::has_kwchangepk() const {
  return _has_bit(11);
}
inline void PBAddPKTable::clear_kwchangepk() {
  kwchangepk_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBAddPKTable::kwchangepk() const {
  return kwchangepk_;
}
inline void PBAddPKTable::set_kwchangepk(::google::protobuf::uint32 value) {
  _set_bit(11);
  kwchangepk_ = value;
}

// repeated uint32 KPChangePK = 13;
inline int PBAddPKTable::kpchangepk_size() const {
  return kpchangepk_.size();
}
inline void PBAddPKTable::clear_kpchangepk() {
  kpchangepk_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAddPKTable::kpchangepk() const {
  return kpchangepk_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAddPKTable::mutable_kpchangepk() {
  return &kpchangepk_;
}
inline ::google::protobuf::uint32 PBAddPKTable::kpchangepk(int index) const {
  return kpchangepk_.Get(index);
}
inline void PBAddPKTable::set_kpchangepk(int index, ::google::protobuf::uint32 value) {
  kpchangepk_.Set(index, value);
}
inline void PBAddPKTable::add_kpchangepk(::google::protobuf::uint32 value) {
  kpchangepk_.Add(value);
}

// repeated uint32 PFriendMin = 14;
inline int PBAddPKTable::pfriendmin_size() const {
  return pfriendmin_.size();
}
inline void PBAddPKTable::clear_pfriendmin() {
  pfriendmin_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAddPKTable::pfriendmin() const {
  return pfriendmin_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAddPKTable::mutable_pfriendmin() {
  return &pfriendmin_;
}
inline ::google::protobuf::uint32 PBAddPKTable::pfriendmin(int index) const {
  return pfriendmin_.Get(index);
}
inline void PBAddPKTable::set_pfriendmin(int index, ::google::protobuf::uint32 value) {
  pfriendmin_.Set(index, value);
}
inline void PBAddPKTable::add_pfriendmin(::google::protobuf::uint32 value) {
  pfriendmin_.Add(value);
}

// repeated uint32 PFriendMax = 15;
inline int PBAddPKTable::pfriendmax_size() const {
  return pfriendmax_.size();
}
inline void PBAddPKTable::clear_pfriendmax() {
  pfriendmax_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAddPKTable::pfriendmax() const {
  return pfriendmax_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAddPKTable::mutable_pfriendmax() {
  return &pfriendmax_;
}
inline ::google::protobuf::uint32 PBAddPKTable::pfriendmax(int index) const {
  return pfriendmax_.Get(index);
}
inline void PBAddPKTable::set_pfriendmax(int index, ::google::protobuf::uint32 value) {
  pfriendmax_.Set(index, value);
}
inline void PBAddPKTable::add_pfriendmax(::google::protobuf::uint32 value) {
  pfriendmax_.Add(value);
}

// optional uint32 KFChangeHonor = 16;
inline bool PBAddPKTable::has_kfchangehonor() const {
  return _has_bit(15);
}
inline void PBAddPKTable::clear_kfchangehonor() {
  kfchangehonor_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBAddPKTable::kfchangehonor() const {
  return kfchangehonor_;
}
inline void PBAddPKTable::set_kfchangehonor(::google::protobuf::uint32 value) {
  _set_bit(15);
  kfchangehonor_ = value;
}

// optional uint32 KPChangeHonor = 17;
inline bool PBAddPKTable::has_kpchangehonor() const {
  return _has_bit(16);
}
inline void PBAddPKTable::clear_kpchangehonor() {
  kpchangehonor_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBAddPKTable::kpchangehonor() const {
  return kpchangehonor_;
}
inline void PBAddPKTable::set_kpchangehonor(::google::protobuf::uint32 value) {
  _set_bit(16);
  kpchangehonor_ = value;
}

// optional uint32 KWChangeHonor = 18;
inline bool PBAddPKTable::has_kwchangehonor() const {
  return _has_bit(17);
}
inline void PBAddPKTable::clear_kwchangehonor() {
  kwchangehonor_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBAddPKTable::kwchangehonor() const {
  return kwchangehonor_;
}
inline void PBAddPKTable::set_kwchangehonor(::google::protobuf::uint32 value) {
  _set_bit(17);
  kwchangehonor_ = value;
}

// -------------------------------------------------------------------

// PBMapTable

// optional uint32 TempID = 1;
inline bool PBMapTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBMapTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMapTable::tempid() const {
  return tempid_;
}
inline void PBMapTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Level = 2;
inline int PBMapTable::level_size() const {
  return level_.size();
}
inline void PBMapTable::clear_level() {
  level_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMapTable::level() const {
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMapTable::mutable_level() {
  return &level_;
}
inline ::google::protobuf::uint32 PBMapTable::level(int index) const {
  return level_.Get(index);
}
inline void PBMapTable::set_level(int index, ::google::protobuf::uint32 value) {
  level_.Set(index, value);
}
inline void PBMapTable::add_level(::google::protobuf::uint32 value) {
  level_.Add(value);
}

// repeated uint32 Power = 3;
inline int PBMapTable::power_size() const {
  return power_.size();
}
inline void PBMapTable::clear_power() {
  power_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMapTable::power() const {
  return power_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMapTable::mutable_power() {
  return &power_;
}
inline ::google::protobuf::uint32 PBMapTable::power(int index) const {
  return power_.Get(index);
}
inline void PBMapTable::set_power(int index, ::google::protobuf::uint32 value) {
  power_.Set(index, value);
}
inline void PBMapTable::add_power(::google::protobuf::uint32 value) {
  power_.Add(value);
}

// -------------------------------------------------------------------

// PBMultiAttackTable

// optional uint32 TempID = 1;
inline bool PBMultiAttackTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBMultiAttackTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMultiAttackTable::tempid() const {
  return tempid_;
}
inline void PBMultiAttackTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Reduce = 2;
inline int PBMultiAttackTable::reduce_size() const {
  return reduce_.size();
}
inline void PBMultiAttackTable::clear_reduce() {
  reduce_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMultiAttackTable::reduce() const {
  return reduce_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMultiAttackTable::mutable_reduce() {
  return &reduce_;
}
inline ::google::protobuf::uint32 PBMultiAttackTable::reduce(int index) const {
  return reduce_.Get(index);
}
inline void PBMultiAttackTable::set_reduce(int index, ::google::protobuf::uint32 value) {
  reduce_.Set(index, value);
}
inline void PBMultiAttackTable::add_reduce(::google::protobuf::uint32 value) {
  reduce_.Add(value);
}

// -------------------------------------------------------------------

// PBItemVip

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemVip::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemVip::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemVip::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemVip::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 VipLevel = 2;
inline bool PBItemVip::has_viplevel() const {
  return _has_bit(1);
}
inline void PBItemVip::clear_viplevel() {
  viplevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemVip::viplevel() const {
  return viplevel_;
}
inline void PBItemVip::set_viplevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  viplevel_ = value;
}

// optional uint32 VipTime = 3;
inline bool PBItemVip::has_viptime() const {
  return _has_bit(2);
}
inline void PBItemVip::clear_viptime() {
  viptime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemVip::viptime() const {
  return viptime_;
}
inline void PBItemVip::set_viptime(::google::protobuf::uint32 value) {
  _set_bit(2);
  viptime_ = value;
}

// -------------------------------------------------------------------

// PBItemClean

// optional .PBItemBase BaseInfo = 1;
inline bool PBItemClean::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBItemClean::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemClean::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBItemClean::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 CleanType = 2;
inline bool PBItemClean::has_cleantype() const {
  return _has_bit(1);
}
inline void PBItemClean::clear_cleantype() {
  cleantype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemClean::cleantype() const {
  return cleantype_;
}
inline void PBItemClean::set_cleantype(::google::protobuf::uint32 value) {
  _set_bit(1);
  cleantype_ = value;
}

// optional uint32 CleanLevel = 3;
inline bool PBItemClean::has_cleanlevel() const {
  return _has_bit(2);
}
inline void PBItemClean::clear_cleanlevel() {
  cleanlevel_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemClean::cleanlevel() const {
  return cleanlevel_;
}
inline void PBItemClean::set_cleanlevel(::google::protobuf::uint32 value) {
  _set_bit(2);
  cleanlevel_ = value;
}

// optional uint32 Step = 4;
inline bool PBItemClean::has_step() const {
  return _has_bit(3);
}
inline void PBItemClean::clear_step() {
  step_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemClean::step() const {
  return step_;
}
inline void PBItemClean::set_step(::google::protobuf::uint32 value) {
  _set_bit(3);
  step_ = value;
}

// -------------------------------------------------------------------

// PBAwardInfo

// optional uint32 TempID = 1;
inline bool PBAwardInfo::has_tempid() const {
  return _has_bit(0);
}
inline void PBAwardInfo::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBAwardInfo::tempid() const {
  return tempid_;
}
inline void PBAwardInfo::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional string Name = 2;
inline bool PBAwardInfo::has_name() const {
  return _has_bit(1);
}
inline void PBAwardInfo::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PBAwardInfo::name() const {
  return *name_;
}
inline void PBAwardInfo::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBAwardInfo::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBAwardInfo::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBAwardInfo::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional string Desc = 3;
inline bool PBAwardInfo::has_desc() const {
  return _has_bit(2);
}
inline void PBAwardInfo::clear_desc() {
  if (desc_ != &_default_desc_) {
    desc_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& PBAwardInfo::desc() const {
  return *desc_;
}
inline void PBAwardInfo::set_desc(const ::std::string& value) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBAwardInfo::set_desc(const char* value) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void PBAwardInfo::set_desc(const char* value, size_t size) {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBAwardInfo::mutable_desc() {
  _set_bit(2);
  if (desc_ == &_default_desc_) {
    desc_ = new ::std::string;
  }
  return desc_;
}

// repeated uint32 ItemID = 4;
inline int PBAwardInfo::itemid_size() const {
  return itemid_.size();
}
inline void PBAwardInfo::clear_itemid() {
  itemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAwardInfo::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAwardInfo::mutable_itemid() {
  return &itemid_;
}
inline ::google::protobuf::uint32 PBAwardInfo::itemid(int index) const {
  return itemid_.Get(index);
}
inline void PBAwardInfo::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
}
inline void PBAwardInfo::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
}

// repeated uint32 ItemNum = 5;
inline int PBAwardInfo::itemnum_size() const {
  return itemnum_.size();
}
inline void PBAwardInfo::clear_itemnum() {
  itemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBAwardInfo::itemnum() const {
  return itemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBAwardInfo::mutable_itemnum() {
  return &itemnum_;
}
inline ::google::protobuf::uint32 PBAwardInfo::itemnum(int index) const {
  return itemnum_.Get(index);
}
inline void PBAwardInfo::set_itemnum(int index, ::google::protobuf::uint32 value) {
  itemnum_.Set(index, value);
}
inline void PBAwardInfo::add_itemnum(::google::protobuf::uint32 value) {
  itemnum_.Add(value);
}

// optional uint32 BuffID = 6;
inline bool PBAwardInfo::has_buffid() const {
  return _has_bit(5);
}
inline void PBAwardInfo::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBAwardInfo::buffid() const {
  return buffid_;
}
inline void PBAwardInfo::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(5);
  buffid_ = value;
}

// optional uint32 Times = 7;
inline bool PBAwardInfo::has_times() const {
  return _has_bit(6);
}
inline void PBAwardInfo::clear_times() {
  times_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBAwardInfo::times() const {
  return times_;
}
inline void PBAwardInfo::set_times(::google::protobuf::uint32 value) {
  _set_bit(6);
  times_ = value;
}

// optional uint32 NpcID = 8;
inline bool PBAwardInfo::has_npcid() const {
  return _has_bit(7);
}
inline void PBAwardInfo::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBAwardInfo::npcid() const {
  return npcid_;
}
inline void PBAwardInfo::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(7);
  npcid_ = value;
}

// optional uint32 Country = 9;
inline bool PBAwardInfo::has_country() const {
  return _has_bit(8);
}
inline void PBAwardInfo::clear_country() {
  country_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBAwardInfo::country() const {
  return country_;
}
inline void PBAwardInfo::set_country(::google::protobuf::uint32 value) {
  _set_bit(8);
  country_ = value;
}

// optional uint32 NoFamily = 10;
inline bool PBAwardInfo::has_nofamily() const {
  return _has_bit(9);
}
inline void PBAwardInfo::clear_nofamily() {
  nofamily_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBAwardInfo::nofamily() const {
  return nofamily_;
}
inline void PBAwardInfo::set_nofamily(::google::protobuf::uint32 value) {
  _set_bit(9);
  nofamily_ = value;
}

// -------------------------------------------------------------------

// PBLeagueItem

// optional uint32 ItemID = 1;
inline bool PBLeagueItem::has_itemid() const {
  return _has_bit(0);
}
inline void PBLeagueItem::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBLeagueItem::itemid() const {
  return itemid_;
}
inline void PBLeagueItem::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemid_ = value;
}

// optional uint32 ItemNum = 2;
inline bool PBLeagueItem::has_itemnum() const {
  return _has_bit(1);
}
inline void PBLeagueItem::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBLeagueItem::itemnum() const {
  return itemnum_;
}
inline void PBLeagueItem::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemnum_ = value;
}

// optional uint32 Probality = 3;
inline bool PBLeagueItem::has_probality() const {
  return _has_bit(2);
}
inline void PBLeagueItem::clear_probality() {
  probality_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBLeagueItem::probality() const {
  return probality_;
}
inline void PBLeagueItem::set_probality(::google::protobuf::uint32 value) {
  _set_bit(2);
  probality_ = value;
}

// -------------------------------------------------------------------

// PBLeagueBag

// optional .PBItemBase ItemBase = 1;
inline bool PBLeagueBag::has_itembase() const {
  return _has_bit(0);
}
inline void PBLeagueBag::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBLeagueBag::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBLeagueBag::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// repeated .PBLeagueItem LeagueItemInfo = 2;
inline int PBLeagueBag::leagueiteminfo_size() const {
  return leagueiteminfo_.size();
}
inline void PBLeagueBag::clear_leagueiteminfo() {
  leagueiteminfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBLeagueItem >&
PBLeagueBag::leagueiteminfo() const {
  return leagueiteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBLeagueItem >*
PBLeagueBag::mutable_leagueiteminfo() {
  return &leagueiteminfo_;
}
inline const ::PBLeagueItem& PBLeagueBag::leagueiteminfo(int index) const {
  return leagueiteminfo_.Get(index);
}
inline ::PBLeagueItem* PBLeagueBag::mutable_leagueiteminfo(int index) {
  return leagueiteminfo_.Mutable(index);
}
inline ::PBLeagueItem* PBLeagueBag::add_leagueiteminfo() {
  return leagueiteminfo_.Add();
}

// optional uint32 LeagueBagType = 3;
inline bool PBLeagueBag::has_leaguebagtype() const {
  return _has_bit(2);
}
inline void PBLeagueBag::clear_leaguebagtype() {
  leaguebagtype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBLeagueBag::leaguebagtype() const {
  return leaguebagtype_;
}
inline void PBLeagueBag::set_leaguebagtype(::google::protobuf::uint32 value) {
  _set_bit(2);
  leaguebagtype_ = value;
}

// optional uint32 ExchangeTableID = 4;
inline bool PBLeagueBag::has_exchangetableid() const {
  return _has_bit(3);
}
inline void PBLeagueBag::clear_exchangetableid() {
  exchangetableid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBLeagueBag::exchangetableid() const {
  return exchangetableid_;
}
inline void PBLeagueBag::set_exchangetableid(::google::protobuf::uint32 value) {
  _set_bit(3);
  exchangetableid_ = value;
}

// optional uint32 MapID = 5;
inline bool PBLeagueBag::has_mapid() const {
  return _has_bit(4);
}
inline void PBLeagueBag::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBLeagueBag::mapid() const {
  return mapid_;
}
inline void PBLeagueBag::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(4);
  mapid_ = value;
}

// optional uint32 PosX = 6;
inline bool PBLeagueBag::has_posx() const {
  return _has_bit(5);
}
inline void PBLeagueBag::clear_posx() {
  posx_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBLeagueBag::posx() const {
  return posx_;
}
inline void PBLeagueBag::set_posx(::google::protobuf::uint32 value) {
  _set_bit(5);
  posx_ = value;
}

// optional uint32 PosY = 7;
inline bool PBLeagueBag::has_posy() const {
  return _has_bit(6);
}
inline void PBLeagueBag::clear_posy() {
  posy_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBLeagueBag::posy() const {
  return posy_;
}
inline void PBLeagueBag::set_posy(::google::protobuf::uint32 value) {
  _set_bit(6);
  posy_ = value;
}

// -------------------------------------------------------------------

// PBMatrixTable

// optional uint32 TempID = 1;
inline bool PBMatrixTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBMatrixTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBMatrixTable::tempid() const {
  return tempid_;
}
inline void PBMatrixTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 Level = 2;
inline int PBMatrixTable::level_size() const {
  return level_.size();
}
inline void PBMatrixTable::clear_level() {
  level_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixTable::level() const {
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixTable::mutable_level() {
  return &level_;
}
inline ::google::protobuf::uint32 PBMatrixTable::level(int index) const {
  return level_.Get(index);
}
inline void PBMatrixTable::set_level(int index, ::google::protobuf::uint32 value) {
  level_.Set(index, value);
}
inline void PBMatrixTable::add_level(::google::protobuf::uint32 value) {
  level_.Add(value);
}

// optional uint32 MaxLimit = 3;
inline bool PBMatrixTable::has_maxlimit() const {
  return _has_bit(2);
}
inline void PBMatrixTable::clear_maxlimit() {
  maxlimit_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBMatrixTable::maxlimit() const {
  return maxlimit_;
}
inline void PBMatrixTable::set_maxlimit(::google::protobuf::uint32 value) {
  _set_bit(2);
  maxlimit_ = value;
}

// optional uint32 MinLimit = 4;
inline bool PBMatrixTable::has_minlimit() const {
  return _has_bit(3);
}
inline void PBMatrixTable::clear_minlimit() {
  minlimit_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBMatrixTable::minlimit() const {
  return minlimit_;
}
inline void PBMatrixTable::set_minlimit(::google::protobuf::uint32 value) {
  _set_bit(3);
  minlimit_ = value;
}

// repeated uint32 MasterItemID = 5;
inline int PBMatrixTable::masteritemid_size() const {
  return masteritemid_.size();
}
inline void PBMatrixTable::clear_masteritemid() {
  masteritemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixTable::masteritemid() const {
  return masteritemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixTable::mutable_masteritemid() {
  return &masteritemid_;
}
inline ::google::protobuf::uint32 PBMatrixTable::masteritemid(int index) const {
  return masteritemid_.Get(index);
}
inline void PBMatrixTable::set_masteritemid(int index, ::google::protobuf::uint32 value) {
  masteritemid_.Set(index, value);
}
inline void PBMatrixTable::add_masteritemid(::google::protobuf::uint32 value) {
  masteritemid_.Add(value);
}

// repeated uint32 MasterItemNum = 6;
inline int PBMatrixTable::masteritemnum_size() const {
  return masteritemnum_.size();
}
inline void PBMatrixTable::clear_masteritemnum() {
  masteritemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixTable::masteritemnum() const {
  return masteritemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixTable::mutable_masteritemnum() {
  return &masteritemnum_;
}
inline ::google::protobuf::uint32 PBMatrixTable::masteritemnum(int index) const {
  return masteritemnum_.Get(index);
}
inline void PBMatrixTable::set_masteritemnum(int index, ::google::protobuf::uint32 value) {
  masteritemnum_.Set(index, value);
}
inline void PBMatrixTable::add_masteritemnum(::google::protobuf::uint32 value) {
  masteritemnum_.Add(value);
}

// repeated uint32 MailID = 7;
inline int PBMatrixTable::mailid_size() const {
  return mailid_.size();
}
inline void PBMatrixTable::clear_mailid() {
  mailid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixTable::mailid() const {
  return mailid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixTable::mutable_mailid() {
  return &mailid_;
}
inline ::google::protobuf::uint32 PBMatrixTable::mailid(int index) const {
  return mailid_.Get(index);
}
inline void PBMatrixTable::set_mailid(int index, ::google::protobuf::uint32 value) {
  mailid_.Set(index, value);
}
inline void PBMatrixTable::add_mailid(::google::protobuf::uint32 value) {
  mailid_.Add(value);
}

// optional uint32 FormalLevel = 8;
inline bool PBMatrixTable::has_formallevel() const {
  return _has_bit(7);
}
inline void PBMatrixTable::clear_formallevel() {
  formallevel_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBMatrixTable::formallevel() const {
  return formallevel_;
}
inline void PBMatrixTable::set_formallevel(::google::protobuf::uint32 value) {
  _set_bit(7);
  formallevel_ = value;
}

// optional uint32 EducatedLevel = 9;
inline bool PBMatrixTable::has_educatedlevel() const {
  return _has_bit(8);
}
inline void PBMatrixTable::clear_educatedlevel() {
  educatedlevel_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBMatrixTable::educatedlevel() const {
  return educatedlevel_;
}
inline void PBMatrixTable::set_educatedlevel(::google::protobuf::uint32 value) {
  _set_bit(8);
  educatedlevel_ = value;
}

// optional uint32 EnterLimit = 10;
inline bool PBMatrixTable::has_enterlimit() const {
  return _has_bit(9);
}
inline void PBMatrixTable::clear_enterlimit() {
  enterlimit_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBMatrixTable::enterlimit() const {
  return enterlimit_;
}
inline void PBMatrixTable::set_enterlimit(::google::protobuf::uint32 value) {
  _set_bit(9);
  enterlimit_ = value;
}

// optional uint32 RemoveItem = 11;
inline bool PBMatrixTable::has_removeitem() const {
  return _has_bit(10);
}
inline void PBMatrixTable::clear_removeitem() {
  removeitem_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBMatrixTable::removeitem() const {
  return removeitem_;
}
inline void PBMatrixTable::set_removeitem(::google::protobuf::uint32 value) {
  _set_bit(10);
  removeitem_ = value;
}

// optional uint32 RemoveMoney = 12;
inline bool PBMatrixTable::has_removemoney() const {
  return _has_bit(11);
}
inline void PBMatrixTable::clear_removemoney() {
  removemoney_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBMatrixTable::removemoney() const {
  return removemoney_;
}
inline void PBMatrixTable::set_removemoney(::google::protobuf::uint32 value) {
  _set_bit(11);
  removemoney_ = value;
}

// optional uint32 FormalPercent = 13;
inline bool PBMatrixTable::has_formalpercent() const {
  return _has_bit(12);
}
inline void PBMatrixTable::clear_formalpercent() {
  formalpercent_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBMatrixTable::formalpercent() const {
  return formalpercent_;
}
inline void PBMatrixTable::set_formalpercent(::google::protobuf::uint32 value) {
  _set_bit(12);
  formalpercent_ = value;
}

// optional uint32 EducatedPercent = 14;
inline bool PBMatrixTable::has_educatedpercent() const {
  return _has_bit(13);
}
inline void PBMatrixTable::clear_educatedpercent() {
  educatedpercent_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBMatrixTable::educatedpercent() const {
  return educatedpercent_;
}
inline void PBMatrixTable::set_educatedpercent(::google::protobuf::uint32 value) {
  _set_bit(13);
  educatedpercent_ = value;
}

// optional uint32 ReturnLimit = 15;
inline bool PBMatrixTable::has_returnlimit() const {
  return _has_bit(14);
}
inline void PBMatrixTable::clear_returnlimit() {
  returnlimit_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBMatrixTable::returnlimit() const {
  return returnlimit_;
}
inline void PBMatrixTable::set_returnlimit(::google::protobuf::uint32 value) {
  _set_bit(14);
  returnlimit_ = value;
}

// optional uint32 AlterMax = 16;
inline bool PBMatrixTable::has_altermax() const {
  return _has_bit(15);
}
inline void PBMatrixTable::clear_altermax() {
  altermax_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBMatrixTable::altermax() const {
  return altermax_;
}
inline void PBMatrixTable::set_altermax(::google::protobuf::uint32 value) {
  _set_bit(15);
  altermax_ = value;
}

// optional uint32 AlterMin = 17;
inline bool PBMatrixTable::has_altermin() const {
  return _has_bit(16);
}
inline void PBMatrixTable::clear_altermin() {
  altermin_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBMatrixTable::altermin() const {
  return altermin_;
}
inline void PBMatrixTable::set_altermin(::google::protobuf::uint32 value) {
  _set_bit(16);
  altermin_ = value;
}

// optional uint32 ReturnMailID = 18;
inline bool PBMatrixTable::has_returnmailid() const {
  return _has_bit(17);
}
inline void PBMatrixTable::clear_returnmailid() {
  returnmailid_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBMatrixTable::returnmailid() const {
  return returnmailid_;
}
inline void PBMatrixTable::set_returnmailid(::google::protobuf::uint32 value) {
  _set_bit(17);
  returnmailid_ = value;
}

// repeated uint32 SlaveItemID = 19;
inline int PBMatrixTable::slaveitemid_size() const {
  return slaveitemid_.size();
}
inline void PBMatrixTable::clear_slaveitemid() {
  slaveitemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixTable::slaveitemid() const {
  return slaveitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixTable::mutable_slaveitemid() {
  return &slaveitemid_;
}
inline ::google::protobuf::uint32 PBMatrixTable::slaveitemid(int index) const {
  return slaveitemid_.Get(index);
}
inline void PBMatrixTable::set_slaveitemid(int index, ::google::protobuf::uint32 value) {
  slaveitemid_.Set(index, value);
}
inline void PBMatrixTable::add_slaveitemid(::google::protobuf::uint32 value) {
  slaveitemid_.Add(value);
}

// repeated uint32 SlaveItemNum = 20;
inline int PBMatrixTable::slaveitemnum_size() const {
  return slaveitemnum_.size();
}
inline void PBMatrixTable::clear_slaveitemnum() {
  slaveitemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBMatrixTable::slaveitemnum() const {
  return slaveitemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBMatrixTable::mutable_slaveitemnum() {
  return &slaveitemnum_;
}
inline ::google::protobuf::uint32 PBMatrixTable::slaveitemnum(int index) const {
  return slaveitemnum_.Get(index);
}
inline void PBMatrixTable::set_slaveitemnum(int index, ::google::protobuf::uint32 value) {
  slaveitemnum_.Set(index, value);
}
inline void PBMatrixTable::add_slaveitemnum(::google::protobuf::uint32 value) {
  slaveitemnum_.Add(value);
}

// optional uint32 AlterAll = 21;
inline bool PBMatrixTable::has_alterall() const {
  return _has_bit(20);
}
inline void PBMatrixTable::clear_alterall() {
  alterall_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBMatrixTable::alterall() const {
  return alterall_;
}
inline void PBMatrixTable::set_alterall(::google::protobuf::uint32 value) {
  _set_bit(20);
  alterall_ = value;
}

// optional uint32 AlterDefault = 22;
inline bool PBMatrixTable::has_alterdefault() const {
  return _has_bit(21);
}
inline void PBMatrixTable::clear_alterdefault() {
  alterdefault_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBMatrixTable::alterdefault() const {
  return alterdefault_;
}
inline void PBMatrixTable::set_alterdefault(::google::protobuf::uint32 value) {
  _set_bit(21);
  alterdefault_ = value;
}

// optional uint32 SlaveMailID = 23;
inline bool PBMatrixTable::has_slavemailid() const {
  return _has_bit(22);
}
inline void PBMatrixTable::clear_slavemailid() {
  slavemailid_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBMatrixTable::slavemailid() const {
  return slavemailid_;
}
inline void PBMatrixTable::set_slavemailid(::google::protobuf::uint32 value) {
  _set_bit(22);
  slavemailid_ = value;
}

// -------------------------------------------------------------------

// PBWeddingInfo

// optional uint32 WeddingLength = 1;
inline bool PBWeddingInfo::has_weddinglength() const {
  return _has_bit(0);
}
inline void PBWeddingInfo::clear_weddinglength() {
  weddinglength_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBWeddingInfo::weddinglength() const {
  return weddinglength_;
}
inline void PBWeddingInfo::set_weddinglength(::google::protobuf::uint32 value) {
  _set_bit(0);
  weddinglength_ = value;
}

// optional uint32 MoneyNeeded = 2;
inline bool PBWeddingInfo::has_moneyneeded() const {
  return _has_bit(1);
}
inline void PBWeddingInfo::clear_moneyneeded() {
  moneyneeded_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBWeddingInfo::moneyneeded() const {
  return moneyneeded_;
}
inline void PBWeddingInfo::set_moneyneeded(::google::protobuf::uint32 value) {
  _set_bit(1);
  moneyneeded_ = value;
}

// optional uint32 DelayMoneyNeeded = 3;
inline bool PBWeddingInfo::has_delaymoneyneeded() const {
  return _has_bit(2);
}
inline void PBWeddingInfo::clear_delaymoneyneeded() {
  delaymoneyneeded_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBWeddingInfo::delaymoneyneeded() const {
  return delaymoneyneeded_;
}
inline void PBWeddingInfo::set_delaymoneyneeded(::google::protobuf::uint32 value) {
  _set_bit(2);
  delaymoneyneeded_ = value;
}

// optional uint32 WeddingRedstoneID = 4;
inline bool PBWeddingInfo::has_weddingredstoneid() const {
  return _has_bit(3);
}
inline void PBWeddingInfo::clear_weddingredstoneid() {
  weddingredstoneid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBWeddingInfo::weddingredstoneid() const {
  return weddingredstoneid_;
}
inline void PBWeddingInfo::set_weddingredstoneid(::google::protobuf::uint32 value) {
  _set_bit(3);
  weddingredstoneid_ = value;
}

// optional uint32 WeddingHallRedstoneID = 5;
inline bool PBWeddingInfo::has_weddinghallredstoneid() const {
  return _has_bit(4);
}
inline void PBWeddingInfo::clear_weddinghallredstoneid() {
  weddinghallredstoneid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBWeddingInfo::weddinghallredstoneid() const {
  return weddinghallredstoneid_;
}
inline void PBWeddingInfo::set_weddinghallredstoneid(::google::protobuf::uint32 value) {
  _set_bit(4);
  weddinghallredstoneid_ = value;
}

// optional uint32 WeddingHallMapID = 6;
inline bool PBWeddingInfo::has_weddinghallmapid() const {
  return _has_bit(5);
}
inline void PBWeddingInfo::clear_weddinghallmapid() {
  weddinghallmapid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBWeddingInfo::weddinghallmapid() const {
  return weddinghallmapid_;
}
inline void PBWeddingInfo::set_weddinghallmapid(::google::protobuf::uint32 value) {
  _set_bit(5);
  weddinghallmapid_ = value;
}

// optional uint32 InvitationCardID = 7;
inline bool PBWeddingInfo::has_invitationcardid() const {
  return _has_bit(6);
}
inline void PBWeddingInfo::clear_invitationcardid() {
  invitationcardid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBWeddingInfo::invitationcardid() const {
  return invitationcardid_;
}
inline void PBWeddingInfo::set_invitationcardid(::google::protobuf::uint32 value) {
  _set_bit(6);
  invitationcardid_ = value;
}

// optional uint32 InvitationCardNum = 8;
inline bool PBWeddingInfo::has_invitationcardnum() const {
  return _has_bit(7);
}
inline void PBWeddingInfo::clear_invitationcardnum() {
  invitationcardnum_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBWeddingInfo::invitationcardnum() const {
  return invitationcardnum_;
}
inline void PBWeddingInfo::set_invitationcardnum(::google::protobuf::uint32 value) {
  _set_bit(7);
  invitationcardnum_ = value;
}

// optional uint32 FemaleKeepsakeID = 9;
inline bool PBWeddingInfo::has_femalekeepsakeid() const {
  return _has_bit(8);
}
inline void PBWeddingInfo::clear_femalekeepsakeid() {
  femalekeepsakeid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBWeddingInfo::femalekeepsakeid() const {
  return femalekeepsakeid_;
}
inline void PBWeddingInfo::set_femalekeepsakeid(::google::protobuf::uint32 value) {
  _set_bit(8);
  femalekeepsakeid_ = value;
}

// optional uint32 MaleKeepsakeID = 10;
inline bool PBWeddingInfo::has_malekeepsakeid() const {
  return _has_bit(9);
}
inline void PBWeddingInfo::clear_malekeepsakeid() {
  malekeepsakeid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBWeddingInfo::malekeepsakeid() const {
  return malekeepsakeid_;
}
inline void PBWeddingInfo::set_malekeepsakeid(::google::protobuf::uint32 value) {
  _set_bit(9);
  malekeepsakeid_ = value;
}

// optional uint32 PosX = 11;
inline bool PBWeddingInfo::has_posx() const {
  return _has_bit(10);
}
inline void PBWeddingInfo::clear_posx() {
  posx_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBWeddingInfo::posx() const {
  return posx_;
}
inline void PBWeddingInfo::set_posx(::google::protobuf::uint32 value) {
  _set_bit(10);
  posx_ = value;
}

// optional uint32 PosY = 12;
inline bool PBWeddingInfo::has_posy() const {
  return _has_bit(11);
}
inline void PBWeddingInfo::clear_posy() {
  posy_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBWeddingInfo::posy() const {
  return posy_;
}
inline void PBWeddingInfo::set_posy(::google::protobuf::uint32 value) {
  _set_bit(11);
  posy_ = value;
}

// optional uint32 FemaleKeepsakeTwo = 13;
inline bool PBWeddingInfo::has_femalekeepsaketwo() const {
  return _has_bit(12);
}
inline void PBWeddingInfo::clear_femalekeepsaketwo() {
  femalekeepsaketwo_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBWeddingInfo::femalekeepsaketwo() const {
  return femalekeepsaketwo_;
}
inline void PBWeddingInfo::set_femalekeepsaketwo(::google::protobuf::uint32 value) {
  _set_bit(12);
  femalekeepsaketwo_ = value;
}

// optional uint32 MaleKeepsakeTwo = 14;
inline bool PBWeddingInfo::has_malekeepsaketwo() const {
  return _has_bit(13);
}
inline void PBWeddingInfo::clear_malekeepsaketwo() {
  malekeepsaketwo_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBWeddingInfo::malekeepsaketwo() const {
  return malekeepsaketwo_;
}
inline void PBWeddingInfo::set_malekeepsaketwo(::google::protobuf::uint32 value) {
  _set_bit(13);
  malekeepsaketwo_ = value;
}

// optional uint32 FemaleKeepsakeThree = 15;
inline bool PBWeddingInfo::has_femalekeepsakethree() const {
  return _has_bit(14);
}
inline void PBWeddingInfo::clear_femalekeepsakethree() {
  femalekeepsakethree_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBWeddingInfo::femalekeepsakethree() const {
  return femalekeepsakethree_;
}
inline void PBWeddingInfo::set_femalekeepsakethree(::google::protobuf::uint32 value) {
  _set_bit(14);
  femalekeepsakethree_ = value;
}

// optional uint32 MaleKeepsakeThree = 16;
inline bool PBWeddingInfo::has_malekeepsakethree() const {
  return _has_bit(15);
}
inline void PBWeddingInfo::clear_malekeepsakethree() {
  malekeepsakethree_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBWeddingInfo::malekeepsakethree() const {
  return malekeepsakethree_;
}
inline void PBWeddingInfo::set_malekeepsakethree(::google::protobuf::uint32 value) {
  _set_bit(15);
  malekeepsakethree_ = value;
}

// optional uint32 MaleBufferID = 17;
inline bool PBWeddingInfo::has_malebufferid() const {
  return _has_bit(16);
}
inline void PBWeddingInfo::clear_malebufferid() {
  malebufferid_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBWeddingInfo::malebufferid() const {
  return malebufferid_;
}
inline void PBWeddingInfo::set_malebufferid(::google::protobuf::uint32 value) {
  _set_bit(16);
  malebufferid_ = value;
}

// optional uint32 FemaleBufferID = 18;
inline bool PBWeddingInfo::has_femalebufferid() const {
  return _has_bit(17);
}
inline void PBWeddingInfo::clear_femalebufferid() {
  femalebufferid_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBWeddingInfo::femalebufferid() const {
  return femalebufferid_;
}
inline void PBWeddingInfo::set_femalebufferid(::google::protobuf::uint32 value) {
  _set_bit(17);
  femalebufferid_ = value;
}

// optional uint32 MaleItemID = 19;
inline bool PBWeddingInfo::has_maleitemid() const {
  return _has_bit(18);
}
inline void PBWeddingInfo::clear_maleitemid() {
  maleitemid_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBWeddingInfo::maleitemid() const {
  return maleitemid_;
}
inline void PBWeddingInfo::set_maleitemid(::google::protobuf::uint32 value) {
  _set_bit(18);
  maleitemid_ = value;
}

// optional uint32 FemaleItemID = 20;
inline bool PBWeddingInfo::has_femaleitemid() const {
  return _has_bit(19);
}
inline void PBWeddingInfo::clear_femaleitemid() {
  femaleitemid_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBWeddingInfo::femaleitemid() const {
  return femaleitemid_;
}
inline void PBWeddingInfo::set_femaleitemid(::google::protobuf::uint32 value) {
  _set_bit(19);
  femaleitemid_ = value;
}

// optional uint32 GroomPosX = 21;
inline bool PBWeddingInfo::has_groomposx() const {
  return _has_bit(20);
}
inline void PBWeddingInfo::clear_groomposx() {
  groomposx_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBWeddingInfo::groomposx() const {
  return groomposx_;
}
inline void PBWeddingInfo::set_groomposx(::google::protobuf::uint32 value) {
  _set_bit(20);
  groomposx_ = value;
}

// optional uint32 GroomPosY = 22;
inline bool PBWeddingInfo::has_groomposy() const {
  return _has_bit(21);
}
inline void PBWeddingInfo::clear_groomposy() {
  groomposy_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBWeddingInfo::groomposy() const {
  return groomposy_;
}
inline void PBWeddingInfo::set_groomposy(::google::protobuf::uint32 value) {
  _set_bit(21);
  groomposy_ = value;
}

// optional uint32 BridePosX = 23;
inline bool PBWeddingInfo::has_brideposx() const {
  return _has_bit(22);
}
inline void PBWeddingInfo::clear_brideposx() {
  brideposx_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBWeddingInfo::brideposx() const {
  return brideposx_;
}
inline void PBWeddingInfo::set_brideposx(::google::protobuf::uint32 value) {
  _set_bit(22);
  brideposx_ = value;
}

// optional uint32 BridePosY = 24;
inline bool PBWeddingInfo::has_brideposy() const {
  return _has_bit(23);
}
inline void PBWeddingInfo::clear_brideposy() {
  brideposy_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBWeddingInfo::brideposy() const {
  return brideposy_;
}
inline void PBWeddingInfo::set_brideposy(::google::protobuf::uint32 value) {
  _set_bit(23);
  brideposy_ = value;
}

// optional uint32 GroomBufferID = 25;
inline bool PBWeddingInfo::has_groombufferid() const {
  return _has_bit(24);
}
inline void PBWeddingInfo::clear_groombufferid() {
  groombufferid_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBWeddingInfo::groombufferid() const {
  return groombufferid_;
}
inline void PBWeddingInfo::set_groombufferid(::google::protobuf::uint32 value) {
  _set_bit(24);
  groombufferid_ = value;
}

// optional uint32 BrideBufferID = 26;
inline bool PBWeddingInfo::has_bridebufferid() const {
  return _has_bit(25);
}
inline void PBWeddingInfo::clear_bridebufferid() {
  bridebufferid_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBWeddingInfo::bridebufferid() const {
  return bridebufferid_;
}
inline void PBWeddingInfo::set_bridebufferid(::google::protobuf::uint32 value) {
  _set_bit(25);
  bridebufferid_ = value;
}

// optional uint32 MarriageItemID = 27;
inline bool PBWeddingInfo::has_marriageitemid() const {
  return _has_bit(26);
}
inline void PBWeddingInfo::clear_marriageitemid() {
  marriageitemid_ = 0u;
  _clear_bit(26);
}
inline ::google::protobuf::uint32 PBWeddingInfo::marriageitemid() const {
  return marriageitemid_;
}
inline void PBWeddingInfo::set_marriageitemid(::google::protobuf::uint32 value) {
  _set_bit(26);
  marriageitemid_ = value;
}

// optional uint32 WeddingScroll = 28;
inline bool PBWeddingInfo::has_weddingscroll() const {
  return _has_bit(27);
}
inline void PBWeddingInfo::clear_weddingscroll() {
  weddingscroll_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBWeddingInfo::weddingscroll() const {
  return weddingscroll_;
}
inline void PBWeddingInfo::set_weddingscroll(::google::protobuf::uint32 value) {
  _set_bit(27);
  weddingscroll_ = value;
}

// -------------------------------------------------------------------

// PBKeepsnakeInfo

// optional uint32 KeepsakeID = 1;
inline bool PBKeepsnakeInfo::has_keepsakeid() const {
  return _has_bit(0);
}
inline void PBKeepsnakeInfo::clear_keepsakeid() {
  keepsakeid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBKeepsnakeInfo::keepsakeid() const {
  return keepsakeid_;
}
inline void PBKeepsnakeInfo::set_keepsakeid(::google::protobuf::uint32 value) {
  _set_bit(0);
  keepsakeid_ = value;
}

// optional uint32 EquipID = 2;
inline bool PBKeepsnakeInfo::has_equipid() const {
  return _has_bit(1);
}
inline void PBKeepsnakeInfo::clear_equipid() {
  equipid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBKeepsnakeInfo::equipid() const {
  return equipid_;
}
inline void PBKeepsnakeInfo::set_equipid(::google::protobuf::uint32 value) {
  _set_bit(1);
  equipid_ = value;
}

// -------------------------------------------------------------------

// PBTemplateMarriageConfig

// optional uint32 TempID = 1;
inline bool PBTemplateMarriageConfig::has_tempid() const {
  return _has_bit(0);
}
inline void PBTemplateMarriageConfig::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::tempid() const {
  return tempid_;
}
inline void PBTemplateMarriageConfig::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBWeddingInfo WeddingInfo = 2;
inline int PBTemplateMarriageConfig::weddinginfo_size() const {
  return weddinginfo_.size();
}
inline void PBTemplateMarriageConfig::clear_weddinginfo() {
  weddinginfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWeddingInfo >&
PBTemplateMarriageConfig::weddinginfo() const {
  return weddinginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWeddingInfo >*
PBTemplateMarriageConfig::mutable_weddinginfo() {
  return &weddinginfo_;
}
inline const ::PBWeddingInfo& PBTemplateMarriageConfig::weddinginfo(int index) const {
  return weddinginfo_.Get(index);
}
inline ::PBWeddingInfo* PBTemplateMarriageConfig::mutable_weddinginfo(int index) {
  return weddinginfo_.Mutable(index);
}
inline ::PBWeddingInfo* PBTemplateMarriageConfig::add_weddinginfo() {
  return weddinginfo_.Add();
}

// repeated .PBKeepsnakeInfo FemaleKeepsakeInfo = 3;
inline int PBTemplateMarriageConfig::femalekeepsakeinfo_size() const {
  return femalekeepsakeinfo_.size();
}
inline void PBTemplateMarriageConfig::clear_femalekeepsakeinfo() {
  femalekeepsakeinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo >&
PBTemplateMarriageConfig::femalekeepsakeinfo() const {
  return femalekeepsakeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo >*
PBTemplateMarriageConfig::mutable_femalekeepsakeinfo() {
  return &femalekeepsakeinfo_;
}
inline const ::PBKeepsnakeInfo& PBTemplateMarriageConfig::femalekeepsakeinfo(int index) const {
  return femalekeepsakeinfo_.Get(index);
}
inline ::PBKeepsnakeInfo* PBTemplateMarriageConfig::mutable_femalekeepsakeinfo(int index) {
  return femalekeepsakeinfo_.Mutable(index);
}
inline ::PBKeepsnakeInfo* PBTemplateMarriageConfig::add_femalekeepsakeinfo() {
  return femalekeepsakeinfo_.Add();
}

// repeated .PBKeepsnakeInfo MaleKeepsakeInfo = 4;
inline int PBTemplateMarriageConfig::malekeepsakeinfo_size() const {
  return malekeepsakeinfo_.size();
}
inline void PBTemplateMarriageConfig::clear_malekeepsakeinfo() {
  malekeepsakeinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo >&
PBTemplateMarriageConfig::malekeepsakeinfo() const {
  return malekeepsakeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBKeepsnakeInfo >*
PBTemplateMarriageConfig::mutable_malekeepsakeinfo() {
  return &malekeepsakeinfo_;
}
inline const ::PBKeepsnakeInfo& PBTemplateMarriageConfig::malekeepsakeinfo(int index) const {
  return malekeepsakeinfo_.Get(index);
}
inline ::PBKeepsnakeInfo* PBTemplateMarriageConfig::mutable_malekeepsakeinfo(int index) {
  return malekeepsakeinfo_.Mutable(index);
}
inline ::PBKeepsnakeInfo* PBTemplateMarriageConfig::add_malekeepsakeinfo() {
  return malekeepsakeinfo_.Add();
}

// repeated uint32 WeddingNpc = 5;
inline int PBTemplateMarriageConfig::weddingnpc_size() const {
  return weddingnpc_.size();
}
inline void PBTemplateMarriageConfig::clear_weddingnpc() {
  weddingnpc_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTemplateMarriageConfig::weddingnpc() const {
  return weddingnpc_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTemplateMarriageConfig::mutable_weddingnpc() {
  return &weddingnpc_;
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::weddingnpc(int index) const {
  return weddingnpc_.Get(index);
}
inline void PBTemplateMarriageConfig::set_weddingnpc(int index, ::google::protobuf::uint32 value) {
  weddingnpc_.Set(index, value);
}
inline void PBTemplateMarriageConfig::add_weddingnpc(::google::protobuf::uint32 value) {
  weddingnpc_.Add(value);
}

// optional uint32 MarriageLevel = 6;
inline bool PBTemplateMarriageConfig::has_marriagelevel() const {
  return _has_bit(5);
}
inline void PBTemplateMarriageConfig::clear_marriagelevel() {
  marriagelevel_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::marriagelevel() const {
  return marriagelevel_;
}
inline void PBTemplateMarriageConfig::set_marriagelevel(::google::protobuf::uint32 value) {
  _set_bit(5);
  marriagelevel_ = value;
}

// optional uint32 MarriageMoney = 7;
inline bool PBTemplateMarriageConfig::has_marriagemoney() const {
  return _has_bit(6);
}
inline void PBTemplateMarriageConfig::clear_marriagemoney() {
  marriagemoney_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::marriagemoney() const {
  return marriagemoney_;
}
inline void PBTemplateMarriageConfig::set_marriagemoney(::google::protobuf::uint32 value) {
  _set_bit(6);
  marriagemoney_ = value;
}

// optional uint32 MapID = 8;
inline bool PBTemplateMarriageConfig::has_mapid() const {
  return _has_bit(7);
}
inline void PBTemplateMarriageConfig::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::mapid() const {
  return mapid_;
}
inline void PBTemplateMarriageConfig::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(7);
  mapid_ = value;
}

// optional uint32 PosX = 9;
inline bool PBTemplateMarriageConfig::has_posx() const {
  return _has_bit(8);
}
inline void PBTemplateMarriageConfig::clear_posx() {
  posx_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::posx() const {
  return posx_;
}
inline void PBTemplateMarriageConfig::set_posx(::google::protobuf::uint32 value) {
  _set_bit(8);
  posx_ = value;
}

// optional uint32 PosY = 10;
inline bool PBTemplateMarriageConfig::has_posy() const {
  return _has_bit(9);
}
inline void PBTemplateMarriageConfig::clear_posy() {
  posy_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::posy() const {
  return posy_;
}
inline void PBTemplateMarriageConfig::set_posy(::google::protobuf::uint32 value) {
  _set_bit(9);
  posy_ = value;
}

// optional uint32 DivorceItemID = 11;
inline bool PBTemplateMarriageConfig::has_divorceitemid() const {
  return _has_bit(10);
}
inline void PBTemplateMarriageConfig::clear_divorceitemid() {
  divorceitemid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::divorceitemid() const {
  return divorceitemid_;
}
inline void PBTemplateMarriageConfig::set_divorceitemid(::google::protobuf::uint32 value) {
  _set_bit(10);
  divorceitemid_ = value;
}

// optional uint32 MarriageTitleID = 12;
inline bool PBTemplateMarriageConfig::has_marriagetitleid() const {
  return _has_bit(11);
}
inline void PBTemplateMarriageConfig::clear_marriagetitleid() {
  marriagetitleid_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::marriagetitleid() const {
  return marriagetitleid_;
}
inline void PBTemplateMarriageConfig::set_marriagetitleid(::google::protobuf::uint32 value) {
  _set_bit(11);
  marriagetitleid_ = value;
}

// optional uint32 MaleKeepsakeID = 13;
inline bool PBTemplateMarriageConfig::has_malekeepsakeid() const {
  return _has_bit(12);
}
inline void PBTemplateMarriageConfig::clear_malekeepsakeid() {
  malekeepsakeid_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::malekeepsakeid() const {
  return malekeepsakeid_;
}
inline void PBTemplateMarriageConfig::set_malekeepsakeid(::google::protobuf::uint32 value) {
  _set_bit(12);
  malekeepsakeid_ = value;
}

// optional uint32 FemaleKeepsakeID = 14;
inline bool PBTemplateMarriageConfig::has_femalekeepsakeid() const {
  return _has_bit(13);
}
inline void PBTemplateMarriageConfig::clear_femalekeepsakeid() {
  femalekeepsakeid_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::femalekeepsakeid() const {
  return femalekeepsakeid_;
}
inline void PBTemplateMarriageConfig::set_femalekeepsakeid(::google::protobuf::uint32 value) {
  _set_bit(13);
  femalekeepsakeid_ = value;
}

// optional uint32 InvitationID = 15;
inline bool PBTemplateMarriageConfig::has_invitationid() const {
  return _has_bit(14);
}
inline void PBTemplateMarriageConfig::clear_invitationid() {
  invitationid_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::invitationid() const {
  return invitationid_;
}
inline void PBTemplateMarriageConfig::set_invitationid(::google::protobuf::uint32 value) {
  _set_bit(14);
  invitationid_ = value;
}

// optional uint32 InvitationNum = 16;
inline bool PBTemplateMarriageConfig::has_invitationnum() const {
  return _has_bit(15);
}
inline void PBTemplateMarriageConfig::clear_invitationnum() {
  invitationnum_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::invitationnum() const {
  return invitationnum_;
}
inline void PBTemplateMarriageConfig::set_invitationnum(::google::protobuf::uint32 value) {
  _set_bit(15);
  invitationnum_ = value;
}

// optional uint32 MaleItemID = 17;
inline bool PBTemplateMarriageConfig::has_maleitemid() const {
  return _has_bit(16);
}
inline void PBTemplateMarriageConfig::clear_maleitemid() {
  maleitemid_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::maleitemid() const {
  return maleitemid_;
}
inline void PBTemplateMarriageConfig::set_maleitemid(::google::protobuf::uint32 value) {
  _set_bit(16);
  maleitemid_ = value;
}

// optional uint32 FemaleItemID = 18;
inline bool PBTemplateMarriageConfig::has_femaleitemid() const {
  return _has_bit(17);
}
inline void PBTemplateMarriageConfig::clear_femaleitemid() {
  femaleitemid_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::femaleitemid() const {
  return femaleitemid_;
}
inline void PBTemplateMarriageConfig::set_femaleitemid(::google::protobuf::uint32 value) {
  _set_bit(17);
  femaleitemid_ = value;
}

// optional uint32 BaitangBuffID = 19;
inline bool PBTemplateMarriageConfig::has_baitangbuffid() const {
  return _has_bit(18);
}
inline void PBTemplateMarriageConfig::clear_baitangbuffid() {
  baitangbuffid_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::baitangbuffid() const {
  return baitangbuffid_;
}
inline void PBTemplateMarriageConfig::set_baitangbuffid(::google::protobuf::uint32 value) {
  _set_bit(18);
  baitangbuffid_ = value;
}

// optional uint32 BasicMarriageItem = 20;
inline bool PBTemplateMarriageConfig::has_basicmarriageitem() const {
  return _has_bit(19);
}
inline void PBTemplateMarriageConfig::clear_basicmarriageitem() {
  basicmarriageitem_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::basicmarriageitem() const {
  return basicmarriageitem_;
}
inline void PBTemplateMarriageConfig::set_basicmarriageitem(::google::protobuf::uint32 value) {
  _set_bit(19);
  basicmarriageitem_ = value;
}

// optional uint32 BasicMarriageItemNum = 21;
inline bool PBTemplateMarriageConfig::has_basicmarriageitemnum() const {
  return _has_bit(20);
}
inline void PBTemplateMarriageConfig::clear_basicmarriageitemnum() {
  basicmarriageitemnum_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::basicmarriageitemnum() const {
  return basicmarriageitemnum_;
}
inline void PBTemplateMarriageConfig::set_basicmarriageitemnum(::google::protobuf::uint32 value) {
  _set_bit(20);
  basicmarriageitemnum_ = value;
}

// optional uint32 MarriageNpcMapID = 22;
inline bool PBTemplateMarriageConfig::has_marriagenpcmapid() const {
  return _has_bit(21);
}
inline void PBTemplateMarriageConfig::clear_marriagenpcmapid() {
  marriagenpcmapid_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::marriagenpcmapid() const {
  return marriagenpcmapid_;
}
inline void PBTemplateMarriageConfig::set_marriagenpcmapid(::google::protobuf::uint32 value) {
  _set_bit(21);
  marriagenpcmapid_ = value;
}

// optional uint32 MarriageNpcPosX = 23;
inline bool PBTemplateMarriageConfig::has_marriagenpcposx() const {
  return _has_bit(22);
}
inline void PBTemplateMarriageConfig::clear_marriagenpcposx() {
  marriagenpcposx_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::marriagenpcposx() const {
  return marriagenpcposx_;
}
inline void PBTemplateMarriageConfig::set_marriagenpcposx(::google::protobuf::uint32 value) {
  _set_bit(22);
  marriagenpcposx_ = value;
}

// optional uint32 MarriageNpcPosY = 24;
inline bool PBTemplateMarriageConfig::has_marriagenpcposy() const {
  return _has_bit(23);
}
inline void PBTemplateMarriageConfig::clear_marriagenpcposy() {
  marriagenpcposy_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::marriagenpcposy() const {
  return marriagenpcposy_;
}
inline void PBTemplateMarriageConfig::set_marriagenpcposy(::google::protobuf::uint32 value) {
  _set_bit(23);
  marriagenpcposy_ = value;
}

// optional uint32 MarriageIntimacy = 25;
inline bool PBTemplateMarriageConfig::has_marriageintimacy() const {
  return _has_bit(24);
}
inline void PBTemplateMarriageConfig::clear_marriageintimacy() {
  marriageintimacy_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::marriageintimacy() const {
  return marriageintimacy_;
}
inline void PBTemplateMarriageConfig::set_marriageintimacy(::google::protobuf::uint32 value) {
  _set_bit(24);
  marriageintimacy_ = value;
}

// optional uint32 IntimacyItemNum = 26;
inline bool PBTemplateMarriageConfig::has_intimacyitemnum() const {
  return _has_bit(25);
}
inline void PBTemplateMarriageConfig::clear_intimacyitemnum() {
  intimacyitemnum_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBTemplateMarriageConfig::intimacyitemnum() const {
  return intimacyitemnum_;
}
inline void PBTemplateMarriageConfig::set_intimacyitemnum(::google::protobuf::uint32 value) {
  _set_bit(25);
  intimacyitemnum_ = value;
}

// -------------------------------------------------------------------

// PBInvitation

// optional .PBItemBase ItemBase = 1;
inline bool PBInvitation::has_itembase() const {
  return _has_bit(0);
}
inline void PBInvitation::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBInvitation::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBInvitation::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint32 ExchangeItemID = 2;
inline bool PBInvitation::has_exchangeitemid() const {
  return _has_bit(1);
}
inline void PBInvitation::clear_exchangeitemid() {
  exchangeitemid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBInvitation::exchangeitemid() const {
  return exchangeitemid_;
}
inline void PBInvitation::set_exchangeitemid(::google::protobuf::uint32 value) {
  _set_bit(1);
  exchangeitemid_ = value;
}

// -------------------------------------------------------------------

// ProGressInfo

// optional uint32 FuncType = 1;
inline bool ProGressInfo::has_functype() const {
  return _has_bit(0);
}
inline void ProGressInfo::clear_functype() {
  functype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ProGressInfo::functype() const {
  return functype_;
}
inline void ProGressInfo::set_functype(::google::protobuf::uint32 value) {
  _set_bit(0);
  functype_ = value;
}

// optional uint32 ProGressTime = 2;
inline bool ProGressInfo::has_progresstime() const {
  return _has_bit(1);
}
inline void ProGressInfo::clear_progresstime() {
  progresstime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ProGressInfo::progresstime() const {
  return progresstime_;
}
inline void ProGressInfo::set_progresstime(::google::protobuf::uint32 value) {
  _set_bit(1);
  progresstime_ = value;
}

// -------------------------------------------------------------------

// PBProGressConfig

// optional uint32 TmpID = 1;
inline bool PBProGressConfig::has_tmpid() const {
  return _has_bit(0);
}
inline void PBProGressConfig::clear_tmpid() {
  tmpid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBProGressConfig::tmpid() const {
  return tmpid_;
}
inline void PBProGressConfig::set_tmpid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tmpid_ = value;
}

// repeated .ProGressInfo Progress = 2;
inline int PBProGressConfig::progress_size() const {
  return progress_.size();
}
inline void PBProGressConfig::clear_progress() {
  progress_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProGressInfo >&
PBProGressConfig::progress() const {
  return progress_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProGressInfo >*
PBProGressConfig::mutable_progress() {
  return &progress_;
}
inline const ::ProGressInfo& PBProGressConfig::progress(int index) const {
  return progress_.Get(index);
}
inline ::ProGressInfo* PBProGressConfig::mutable_progress(int index) {
  return progress_.Mutable(index);
}
inline ::ProGressInfo* PBProGressConfig::add_progress() {
  return progress_.Add();
}

// -------------------------------------------------------------------

// PBSysInvitation

// optional .PBItemBase ItemBase = 1;
inline bool PBSysInvitation::has_itembase() const {
  return _has_bit(0);
}
inline void PBSysInvitation::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBSysInvitation::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBSysInvitation::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint32 InvitationID = 2;
inline bool PBSysInvitation::has_invitationid() const {
  return _has_bit(1);
}
inline void PBSysInvitation::clear_invitationid() {
  invitationid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSysInvitation::invitationid() const {
  return invitationid_;
}
inline void PBSysInvitation::set_invitationid(::google::protobuf::uint32 value) {
  _set_bit(1);
  invitationid_ = value;
}

// -------------------------------------------------------------------

// PBCount

// optional uint32 CountType = 1;
inline bool PBCount::has_counttype() const {
  return _has_bit(0);
}
inline void PBCount::clear_counttype() {
  counttype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCount::counttype() const {
  return counttype_;
}
inline void PBCount::set_counttype(::google::protobuf::uint32 value) {
  _set_bit(0);
  counttype_ = value;
}

// optional uint32 CountTime = 2;
inline bool PBCount::has_counttime() const {
  return _has_bit(1);
}
inline void PBCount::clear_counttime() {
  counttime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBCount::counttime() const {
  return counttime_;
}
inline void PBCount::set_counttime(::google::protobuf::uint32 value) {
  _set_bit(1);
  counttime_ = value;
}

// optional uint32 VipTime = 3;
inline bool PBCount::has_viptime() const {
  return _has_bit(2);
}
inline void PBCount::clear_viptime() {
  viptime_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBCount::viptime() const {
  return viptime_;
}
inline void PBCount::set_viptime(::google::protobuf::uint32 value) {
  _set_bit(2);
  viptime_ = value;
}

// optional uint32 ClearType = 4;
inline bool PBCount::has_cleartype() const {
  return _has_bit(3);
}
inline void PBCount::clear_cleartype() {
  cleartype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBCount::cleartype() const {
  return cleartype_;
}
inline void PBCount::set_cleartype(::google::protobuf::uint32 value) {
  _set_bit(3);
  cleartype_ = value;
}

// -------------------------------------------------------------------

// PBCountTable

// optional uint32 TempID = 1;
inline bool PBCountTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBCountTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCountTable::tempid() const {
  return tempid_;
}
inline void PBCountTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBCount CountData = 2;
inline int PBCountTable::countdata_size() const {
  return countdata_.size();
}
inline void PBCountTable::clear_countdata() {
  countdata_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCount >&
PBCountTable::countdata() const {
  return countdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCount >*
PBCountTable::mutable_countdata() {
  return &countdata_;
}
inline const ::PBCount& PBCountTable::countdata(int index) const {
  return countdata_.Get(index);
}
inline ::PBCount* PBCountTable::mutable_countdata(int index) {
  return countdata_.Mutable(index);
}
inline ::PBCount* PBCountTable::add_countdata() {
  return countdata_.Add();
}

// -------------------------------------------------------------------

// PBActivityConfig

// optional uint32 TempID = 1;
inline bool PBActivityConfig::has_tempid() const {
  return _has_bit(0);
}
inline void PBActivityConfig::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBActivityConfig::tempid() const {
  return tempid_;
}
inline void PBActivityConfig::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 HydrangeaThrowTime = 2;
inline bool PBActivityConfig::has_hydrangeathrowtime() const {
  return _has_bit(1);
}
inline void PBActivityConfig::clear_hydrangeathrowtime() {
  hydrangeathrowtime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBActivityConfig::hydrangeathrowtime() const {
  return hydrangeathrowtime_;
}
inline void PBActivityConfig::set_hydrangeathrowtime(::google::protobuf::uint32 value) {
  _set_bit(1);
  hydrangeathrowtime_ = value;
}

// repeated uint32 HydrangeaSugarID = 3;
inline int PBActivityConfig::hydrangeasugarid_size() const {
  return hydrangeasugarid_.size();
}
inline void PBActivityConfig::clear_hydrangeasugarid() {
  hydrangeasugarid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBActivityConfig::hydrangeasugarid() const {
  return hydrangeasugarid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBActivityConfig::mutable_hydrangeasugarid() {
  return &hydrangeasugarid_;
}
inline ::google::protobuf::uint32 PBActivityConfig::hydrangeasugarid(int index) const {
  return hydrangeasugarid_.Get(index);
}
inline void PBActivityConfig::set_hydrangeasugarid(int index, ::google::protobuf::uint32 value) {
  hydrangeasugarid_.Set(index, value);
}
inline void PBActivityConfig::add_hydrangeasugarid(::google::protobuf::uint32 value) {
  hydrangeasugarid_.Add(value);
}

// optional uint32 SugarSpreadTime = 4;
inline bool PBActivityConfig::has_sugarspreadtime() const {
  return _has_bit(3);
}
inline void PBActivityConfig::clear_sugarspreadtime() {
  sugarspreadtime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBActivityConfig::sugarspreadtime() const {
  return sugarspreadtime_;
}
inline void PBActivityConfig::set_sugarspreadtime(::google::protobuf::uint32 value) {
  _set_bit(3);
  sugarspreadtime_ = value;
}

// optional uint32 SugarSpreadNum = 5;
inline bool PBActivityConfig::has_sugarspreadnum() const {
  return _has_bit(4);
}
inline void PBActivityConfig::clear_sugarspreadnum() {
  sugarspreadnum_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBActivityConfig::sugarspreadnum() const {
  return sugarspreadnum_;
}
inline void PBActivityConfig::set_sugarspreadnum(::google::protobuf::uint32 value) {
  _set_bit(4);
  sugarspreadnum_ = value;
}

// optional uint32 HydrangeaActivityTime = 6;
inline bool PBActivityConfig::has_hydrangeaactivitytime() const {
  return _has_bit(5);
}
inline void PBActivityConfig::clear_hydrangeaactivitytime() {
  hydrangeaactivitytime_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBActivityConfig::hydrangeaactivitytime() const {
  return hydrangeaactivitytime_;
}
inline void PBActivityConfig::set_hydrangeaactivitytime(::google::protobuf::uint32 value) {
  _set_bit(5);
  hydrangeaactivitytime_ = value;
}

// optional uint32 HydrangeaHolderTime = 7;
inline bool PBActivityConfig::has_hydrangeaholdertime() const {
  return _has_bit(6);
}
inline void PBActivityConfig::clear_hydrangeaholdertime() {
  hydrangeaholdertime_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBActivityConfig::hydrangeaholdertime() const {
  return hydrangeaholdertime_;
}
inline void PBActivityConfig::set_hydrangeaholdertime(::google::protobuf::uint32 value) {
  _set_bit(6);
  hydrangeaholdertime_ = value;
}

// optional uint32 HydrangeaRabTime = 8;
inline bool PBActivityConfig::has_hydrangearabtime() const {
  return _has_bit(7);
}
inline void PBActivityConfig::clear_hydrangearabtime() {
  hydrangearabtime_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBActivityConfig::hydrangearabtime() const {
  return hydrangearabtime_;
}
inline void PBActivityConfig::set_hydrangearabtime(::google::protobuf::uint32 value) {
  _set_bit(7);
  hydrangearabtime_ = value;
}

// optional uint32 HydrangeaRedstoneID = 9;
inline bool PBActivityConfig::has_hydrangearedstoneid() const {
  return _has_bit(8);
}
inline void PBActivityConfig::clear_hydrangearedstoneid() {
  hydrangearedstoneid_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBActivityConfig::hydrangearedstoneid() const {
  return hydrangearedstoneid_;
}
inline void PBActivityConfig::set_hydrangearedstoneid(::google::protobuf::uint32 value) {
  _set_bit(8);
  hydrangearedstoneid_ = value;
}

// optional uint32 HydrangeaExpTableID = 10;
inline bool PBActivityConfig::has_hydrangeaexptableid() const {
  return _has_bit(9);
}
inline void PBActivityConfig::clear_hydrangeaexptableid() {
  hydrangeaexptableid_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBActivityConfig::hydrangeaexptableid() const {
  return hydrangeaexptableid_;
}
inline void PBActivityConfig::set_hydrangeaexptableid(::google::protobuf::uint32 value) {
  _set_bit(9);
  hydrangeaexptableid_ = value;
}

// optional uint32 PreliminaryTitleID = 11;
inline bool PBActivityConfig::has_preliminarytitleid() const {
  return _has_bit(10);
}
inline void PBActivityConfig::clear_preliminarytitleid() {
  preliminarytitleid_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBActivityConfig::preliminarytitleid() const {
  return preliminarytitleid_;
}
inline void PBActivityConfig::set_preliminarytitleid(::google::protobuf::uint32 value) {
  _set_bit(10);
  preliminarytitleid_ = value;
}

// optional uint32 PreliminaryBaseScore = 12;
inline bool PBActivityConfig::has_preliminarybasescore() const {
  return _has_bit(11);
}
inline void PBActivityConfig::clear_preliminarybasescore() {
  preliminarybasescore_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBActivityConfig::preliminarybasescore() const {
  return preliminarybasescore_;
}
inline void PBActivityConfig::set_preliminarybasescore(::google::protobuf::uint32 value) {
  _set_bit(11);
  preliminarybasescore_ = value;
}

// repeated uint32 PreliminaryExtralScore = 13;
inline int PBActivityConfig::preliminaryextralscore_size() const {
  return preliminaryextralscore_.size();
}
inline void PBActivityConfig::clear_preliminaryextralscore() {
  preliminaryextralscore_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBActivityConfig::preliminaryextralscore() const {
  return preliminaryextralscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBActivityConfig::mutable_preliminaryextralscore() {
  return &preliminaryextralscore_;
}
inline ::google::protobuf::uint32 PBActivityConfig::preliminaryextralscore(int index) const {
  return preliminaryextralscore_.Get(index);
}
inline void PBActivityConfig::set_preliminaryextralscore(int index, ::google::protobuf::uint32 value) {
  preliminaryextralscore_.Set(index, value);
}
inline void PBActivityConfig::add_preliminaryextralscore(::google::protobuf::uint32 value) {
  preliminaryextralscore_.Add(value);
}

// optional uint32 PreliminaryTipsTime = 14;
inline bool PBActivityConfig::has_preliminarytipstime() const {
  return _has_bit(13);
}
inline void PBActivityConfig::clear_preliminarytipstime() {
  preliminarytipstime_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBActivityConfig::preliminarytipstime() const {
  return preliminarytipstime_;
}
inline void PBActivityConfig::set_preliminarytipstime(::google::protobuf::uint32 value) {
  _set_bit(13);
  preliminarytipstime_ = value;
}

// optional uint32 PreliminaryAnswerTime = 15;
inline bool PBActivityConfig::has_preliminaryanswertime() const {
  return _has_bit(14);
}
inline void PBActivityConfig::clear_preliminaryanswertime() {
  preliminaryanswertime_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBActivityConfig::preliminaryanswertime() const {
  return preliminaryanswertime_;
}
inline void PBActivityConfig::set_preliminaryanswertime(::google::protobuf::uint32 value) {
  _set_bit(14);
  preliminaryanswertime_ = value;
}

// optional uint32 PreliminaryQuestionTime = 16;
inline bool PBActivityConfig::has_preliminaryquestiontime() const {
  return _has_bit(15);
}
inline void PBActivityConfig::clear_preliminaryquestiontime() {
  preliminaryquestiontime_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBActivityConfig::preliminaryquestiontime() const {
  return preliminaryquestiontime_;
}
inline void PBActivityConfig::set_preliminaryquestiontime(::google::protobuf::uint32 value) {
  _set_bit(15);
  preliminaryquestiontime_ = value;
}

// optional uint32 PreliminaryQuestionNum = 17;
inline bool PBActivityConfig::has_preliminaryquestionnum() const {
  return _has_bit(16);
}
inline void PBActivityConfig::clear_preliminaryquestionnum() {
  preliminaryquestionnum_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBActivityConfig::preliminaryquestionnum() const {
  return preliminaryquestionnum_;
}
inline void PBActivityConfig::set_preliminaryquestionnum(::google::protobuf::uint32 value) {
  _set_bit(16);
  preliminaryquestionnum_ = value;
}

// optional uint32 PreliminaryExpTableID = 18;
inline bool PBActivityConfig::has_preliminaryexptableid() const {
  return _has_bit(17);
}
inline void PBActivityConfig::clear_preliminaryexptableid() {
  preliminaryexptableid_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBActivityConfig::preliminaryexptableid() const {
  return preliminaryexptableid_;
}
inline void PBActivityConfig::set_preliminaryexptableid(::google::protobuf::uint32 value) {
  _set_bit(17);
  preliminaryexptableid_ = value;
}

// optional uint32 EffectiveOffLineExchangeRate = 19;
inline bool PBActivityConfig::has_effectiveofflineexchangerate() const {
  return _has_bit(18);
}
inline void PBActivityConfig::clear_effectiveofflineexchangerate() {
  effectiveofflineexchangerate_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBActivityConfig::effectiveofflineexchangerate() const {
  return effectiveofflineexchangerate_;
}
inline void PBActivityConfig::set_effectiveofflineexchangerate(::google::protobuf::uint32 value) {
  _set_bit(18);
  effectiveofflineexchangerate_ = value;
}

// optional uint32 MaxOnLineEffectiveTime = 20;
inline bool PBActivityConfig::has_maxonlineeffectivetime() const {
  return _has_bit(19);
}
inline void PBActivityConfig::clear_maxonlineeffectivetime() {
  maxonlineeffectivetime_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBActivityConfig::maxonlineeffectivetime() const {
  return maxonlineeffectivetime_;
}
inline void PBActivityConfig::set_maxonlineeffectivetime(::google::protobuf::uint32 value) {
  _set_bit(19);
  maxonlineeffectivetime_ = value;
}

// optional uint32 MaxEffectiveOffLineTime = 21;
inline bool PBActivityConfig::has_maxeffectiveofflinetime() const {
  return _has_bit(20);
}
inline void PBActivityConfig::clear_maxeffectiveofflinetime() {
  maxeffectiveofflinetime_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBActivityConfig::maxeffectiveofflinetime() const {
  return maxeffectiveofflinetime_;
}
inline void PBActivityConfig::set_maxeffectiveofflinetime(::google::protobuf::uint32 value) {
  _set_bit(20);
  maxeffectiveofflinetime_ = value;
}

// optional uint32 MaxOffLineTime = 22;
inline bool PBActivityConfig::has_maxofflinetime() const {
  return _has_bit(21);
}
inline void PBActivityConfig::clear_maxofflinetime() {
  maxofflinetime_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBActivityConfig::maxofflinetime() const {
  return maxofflinetime_;
}
inline void PBActivityConfig::set_maxofflinetime(::google::protobuf::uint32 value) {
  _set_bit(21);
  maxofflinetime_ = value;
}

// optional uint32 OffLineTimeLimit = 23;
inline bool PBActivityConfig::has_offlinetimelimit() const {
  return _has_bit(22);
}
inline void PBActivityConfig::clear_offlinetimelimit() {
  offlinetimelimit_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBActivityConfig::offlinetimelimit() const {
  return offlinetimelimit_;
}
inline void PBActivityConfig::set_offlinetimelimit(::google::protobuf::uint32 value) {
  _set_bit(22);
  offlinetimelimit_ = value;
}

// optional uint32 VipOffLineExchangeRate = 24;
inline bool PBActivityConfig::has_vipofflineexchangerate() const {
  return _has_bit(23);
}
inline void PBActivityConfig::clear_vipofflineexchangerate() {
  vipofflineexchangerate_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBActivityConfig::vipofflineexchangerate() const {
  return vipofflineexchangerate_;
}
inline void PBActivityConfig::set_vipofflineexchangerate(::google::protobuf::uint32 value) {
  _set_bit(23);
  vipofflineexchangerate_ = value;
}

// -------------------------------------------------------------------

// PBItemRefresh

// optional .PBItemBase ItemBase = 1;
inline bool PBItemRefresh::has_itembase() const {
  return _has_bit(0);
}
inline void PBItemRefresh::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemRefresh::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBItemRefresh::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint32 Color = 2;
inline bool PBItemRefresh::has_color() const {
  return _has_bit(1);
}
inline void PBItemRefresh::clear_color() {
  color_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemRefresh::color() const {
  return color_;
}
inline void PBItemRefresh::set_color(::google::protobuf::uint32 value) {
  _set_bit(1);
  color_ = value;
}

// optional uint32 Level = 3;
inline bool PBItemRefresh::has_level() const {
  return _has_bit(2);
}
inline void PBItemRefresh::clear_level() {
  level_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemRefresh::level() const {
  return level_;
}
inline void PBItemRefresh::set_level(::google::protobuf::uint32 value) {
  _set_bit(2);
  level_ = value;
}

// repeated uint32 LimitPos = 4;
inline int PBItemRefresh::limitpos_size() const {
  return limitpos_.size();
}
inline void PBItemRefresh::clear_limitpos() {
  limitpos_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemRefresh::limitpos() const {
  return limitpos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemRefresh::mutable_limitpos() {
  return &limitpos_;
}
inline ::google::protobuf::uint32 PBItemRefresh::limitpos(int index) const {
  return limitpos_.Get(index);
}
inline void PBItemRefresh::set_limitpos(int index, ::google::protobuf::uint32 value) {
  limitpos_.Set(index, value);
}
inline void PBItemRefresh::add_limitpos(::google::protobuf::uint32 value) {
  limitpos_.Add(value);
}

// -------------------------------------------------------------------

// PBItemSummon

// optional .PBItemBase ItemBase = 1;
inline bool PBItemSummon::has_itembase() const {
  return _has_bit(0);
}
inline void PBItemSummon::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemSummon::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBItemSummon::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint32 SummonType = 2;
inline bool PBItemSummon::has_summontype() const {
  return _has_bit(1);
}
inline void PBItemSummon::clear_summontype() {
  summontype_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemSummon::summontype() const {
  return summontype_;
}
inline void PBItemSummon::set_summontype(::google::protobuf::uint32 value) {
  _set_bit(1);
  summontype_ = value;
}

// -------------------------------------------------------------------

// PBDirectTable

// optional uint32 TempID = 1;
inline bool PBDirectTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBDirectTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDirectTable::tempid() const {
  return tempid_;
}
inline void PBDirectTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 DirectID = 2;
inline int PBDirectTable::directid_size() const {
  return directid_.size();
}
inline void PBDirectTable::clear_directid() {
  directid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBDirectTable::directid() const {
  return directid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBDirectTable::mutable_directid() {
  return &directid_;
}
inline ::google::protobuf::uint32 PBDirectTable::directid(int index) const {
  return directid_.Get(index);
}
inline void PBDirectTable::set_directid(int index, ::google::protobuf::uint32 value) {
  directid_.Set(index, value);
}
inline void PBDirectTable::add_directid(::google::protobuf::uint32 value) {
  directid_.Add(value);
}

// repeated uint32 LuckID = 3;
inline int PBDirectTable::luckid_size() const {
  return luckid_.size();
}
inline void PBDirectTable::clear_luckid() {
  luckid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBDirectTable::luckid() const {
  return luckid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBDirectTable::mutable_luckid() {
  return &luckid_;
}
inline ::google::protobuf::uint32 PBDirectTable::luckid(int index) const {
  return luckid_.Get(index);
}
inline void PBDirectTable::set_luckid(int index, ::google::protobuf::uint32 value) {
  luckid_.Set(index, value);
}
inline void PBDirectTable::add_luckid(::google::protobuf::uint32 value) {
  luckid_.Add(value);
}

// repeated uint32 LuckRate = 4;
inline int PBDirectTable::luckrate_size() const {
  return luckrate_.size();
}
inline void PBDirectTable::clear_luckrate() {
  luckrate_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBDirectTable::luckrate() const {
  return luckrate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBDirectTable::mutable_luckrate() {
  return &luckrate_;
}
inline ::google::protobuf::uint32 PBDirectTable::luckrate(int index) const {
  return luckrate_.Get(index);
}
inline void PBDirectTable::set_luckrate(int index, ::google::protobuf::uint32 value) {
  luckrate_.Set(index, value);
}
inline void PBDirectTable::add_luckrate(::google::protobuf::uint32 value) {
  luckrate_.Add(value);
}

// -------------------------------------------------------------------

// PBItemDirect

// optional .PBItemBase ItemBase = 1;
inline bool PBItemDirect::has_itembase() const {
  return _has_bit(0);
}
inline void PBItemDirect::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemDirect::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBItemDirect::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint32 Level = 2;
inline bool PBItemDirect::has_level() const {
  return _has_bit(1);
}
inline void PBItemDirect::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemDirect::level() const {
  return level_;
}
inline void PBItemDirect::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 Star = 3;
inline bool PBItemDirect::has_star() const {
  return _has_bit(2);
}
inline void PBItemDirect::clear_star() {
  star_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemDirect::star() const {
  return star_;
}
inline void PBItemDirect::set_star(::google::protobuf::uint32 value) {
  _set_bit(2);
  star_ = value;
}

// -------------------------------------------------------------------

// PBItemGetStar

// optional .PBItemBase ItemBase = 1;
inline bool PBItemGetStar::has_itembase() const {
  return _has_bit(0);
}
inline void PBItemGetStar::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemGetStar::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBItemGetStar::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint32 Level = 2;
inline bool PBItemGetStar::has_level() const {
  return _has_bit(1);
}
inline void PBItemGetStar::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemGetStar::level() const {
  return level_;
}
inline void PBItemGetStar::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// -------------------------------------------------------------------

// PBWarDate

// optional uint32 Day = 1;
inline bool PBWarDate::has_day() const {
  return _has_bit(0);
}
inline void PBWarDate::clear_day() {
  day_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBWarDate::day() const {
  return day_;
}
inline void PBWarDate::set_day(::google::protobuf::uint32 value) {
  _set_bit(0);
  day_ = value;
}

// optional uint32 Hour = 2;
inline bool PBWarDate::has_hour() const {
  return _has_bit(1);
}
inline void PBWarDate::clear_hour() {
  hour_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBWarDate::hour() const {
  return hour_;
}
inline void PBWarDate::set_hour(::google::protobuf::uint32 value) {
  _set_bit(1);
  hour_ = value;
}

// optional uint32 Minute = 3;
inline bool PBWarDate::has_minute() const {
  return _has_bit(2);
}
inline void PBWarDate::clear_minute() {
  minute_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBWarDate::minute() const {
  return minute_;
}
inline void PBWarDate::set_minute(::google::protobuf::uint32 value) {
  _set_bit(2);
  minute_ = value;
}

// -------------------------------------------------------------------

// PBTax

// optional uint32 TaxRate = 1;
inline bool PBTax::has_taxrate() const {
  return _has_bit(0);
}
inline void PBTax::clear_taxrate() {
  taxrate_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTax::taxrate() const {
  return taxrate_;
}
inline void PBTax::set_taxrate(::google::protobuf::uint32 value) {
  _set_bit(0);
  taxrate_ = value;
}

// optional uint32 IncomeRate = 2;
inline bool PBTax::has_incomerate() const {
  return _has_bit(1);
}
inline void PBTax::clear_incomerate() {
  incomerate_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBTax::incomerate() const {
  return incomerate_;
}
inline void PBTax::set_incomerate(::google::protobuf::uint32 value) {
  _set_bit(1);
  incomerate_ = value;
}

// optional uint32 Limit = 3;
inline bool PBTax::has_limit() const {
  return _has_bit(2);
}
inline void PBTax::clear_limit() {
  limit_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBTax::limit() const {
  return limit_;
}
inline void PBTax::set_limit(::google::protobuf::uint32 value) {
  _set_bit(2);
  limit_ = value;
}

// -------------------------------------------------------------------

// PBWorldBattleConfig

// optional uint32 TempID = 1;
inline bool PBWorldBattleConfig::has_tempid() const {
  return _has_bit(0);
}
inline void PBWorldBattleConfig::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::tempid() const {
  return tempid_;
}
inline void PBWorldBattleConfig::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional .PBWarDate SubmitBegin = 2;
inline bool PBWorldBattleConfig::has_submitbegin() const {
  return _has_bit(1);
}
inline void PBWorldBattleConfig::clear_submitbegin() {
  if (submitbegin_ != NULL) submitbegin_->::PBWarDate::Clear();
  _clear_bit(1);
}
inline const ::PBWarDate& PBWorldBattleConfig::submitbegin() const {
  return submitbegin_ != NULL ? *submitbegin_ : *default_instance_->submitbegin_;
}
inline ::PBWarDate* PBWorldBattleConfig::mutable_submitbegin() {
  _set_bit(1);
  if (submitbegin_ == NULL) submitbegin_ = new ::PBWarDate;
  return submitbegin_;
}

// optional .PBWarDate BattleBegin = 3;
inline bool PBWorldBattleConfig::has_battlebegin() const {
  return _has_bit(2);
}
inline void PBWorldBattleConfig::clear_battlebegin() {
  if (battlebegin_ != NULL) battlebegin_->::PBWarDate::Clear();
  _clear_bit(2);
}
inline const ::PBWarDate& PBWorldBattleConfig::battlebegin() const {
  return battlebegin_ != NULL ? *battlebegin_ : *default_instance_->battlebegin_;
}
inline ::PBWarDate* PBWorldBattleConfig::mutable_battlebegin() {
  _set_bit(2);
  if (battlebegin_ == NULL) battlebegin_ = new ::PBWarDate;
  return battlebegin_;
}

// optional .PBWarDate BattleEnd = 4;
inline bool PBWorldBattleConfig::has_battleend() const {
  return _has_bit(3);
}
inline void PBWorldBattleConfig::clear_battleend() {
  if (battleend_ != NULL) battleend_->::PBWarDate::Clear();
  _clear_bit(3);
}
inline const ::PBWarDate& PBWorldBattleConfig::battleend() const {
  return battleend_ != NULL ? *battleend_ : *default_instance_->battleend_;
}
inline ::PBWarDate* PBWorldBattleConfig::mutable_battleend() {
  _set_bit(3);
  if (battleend_ == NULL) battleend_ = new ::PBWarDate;
  return battleend_;
}

// repeated uint32 StoneID = 5;
inline int PBWorldBattleConfig::stoneid_size() const {
  return stoneid_.size();
}
inline void PBWorldBattleConfig::clear_stoneid() {
  stoneid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldBattleConfig::stoneid() const {
  return stoneid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldBattleConfig::mutable_stoneid() {
  return &stoneid_;
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::stoneid(int index) const {
  return stoneid_.Get(index);
}
inline void PBWorldBattleConfig::set_stoneid(int index, ::google::protobuf::uint32 value) {
  stoneid_.Set(index, value);
}
inline void PBWorldBattleConfig::add_stoneid(::google::protobuf::uint32 value) {
  stoneid_.Add(value);
}

// optional uint32 InitBuffID = 6;
inline bool PBWorldBattleConfig::has_initbuffid() const {
  return _has_bit(5);
}
inline void PBWorldBattleConfig::clear_initbuffid() {
  initbuffid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::initbuffid() const {
  return initbuffid_;
}
inline void PBWorldBattleConfig::set_initbuffid(::google::protobuf::uint32 value) {
  _set_bit(5);
  initbuffid_ = value;
}

// optional uint32 FlagSource = 7;
inline bool PBWorldBattleConfig::has_flagsource() const {
  return _has_bit(6);
}
inline void PBWorldBattleConfig::clear_flagsource() {
  flagsource_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::flagsource() const {
  return flagsource_;
}
inline void PBWorldBattleConfig::set_flagsource(::google::protobuf::uint32 value) {
  _set_bit(6);
  flagsource_ = value;
}

// optional uint32 KillSource = 8;
inline bool PBWorldBattleConfig::has_killsource() const {
  return _has_bit(7);
}
inline void PBWorldBattleConfig::clear_killsource() {
  killsource_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::killsource() const {
  return killsource_;
}
inline void PBWorldBattleConfig::set_killsource(::google::protobuf::uint32 value) {
  _set_bit(7);
  killsource_ = value;
}

// optional uint32 FlagBonus = 9;
inline bool PBWorldBattleConfig::has_flagbonus() const {
  return _has_bit(8);
}
inline void PBWorldBattleConfig::clear_flagbonus() {
  flagbonus_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::flagbonus() const {
  return flagbonus_;
}
inline void PBWorldBattleConfig::set_flagbonus(::google::protobuf::uint32 value) {
  _set_bit(8);
  flagbonus_ = value;
}

// repeated uint32 PerNum = 10;
inline int PBWorldBattleConfig::pernum_size() const {
  return pernum_.size();
}
inline void PBWorldBattleConfig::clear_pernum() {
  pernum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldBattleConfig::pernum() const {
  return pernum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldBattleConfig::mutable_pernum() {
  return &pernum_;
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::pernum(int index) const {
  return pernum_.Get(index);
}
inline void PBWorldBattleConfig::set_pernum(int index, ::google::protobuf::uint32 value) {
  pernum_.Set(index, value);
}
inline void PBWorldBattleConfig::add_pernum(::google::protobuf::uint32 value) {
  pernum_.Add(value);
}

// repeated uint32 MapID = 11;
inline int PBWorldBattleConfig::mapid_size() const {
  return mapid_.size();
}
inline void PBWorldBattleConfig::clear_mapid() {
  mapid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldBattleConfig::mapid() const {
  return mapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldBattleConfig::mutable_mapid() {
  return &mapid_;
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::mapid(int index) const {
  return mapid_.Get(index);
}
inline void PBWorldBattleConfig::set_mapid(int index, ::google::protobuf::uint32 value) {
  mapid_.Set(index, value);
}
inline void PBWorldBattleConfig::add_mapid(::google::protobuf::uint32 value) {
  mapid_.Add(value);
}

// repeated uint32 SubmitMoney = 12;
inline int PBWorldBattleConfig::submitmoney_size() const {
  return submitmoney_.size();
}
inline void PBWorldBattleConfig::clear_submitmoney() {
  submitmoney_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldBattleConfig::submitmoney() const {
  return submitmoney_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldBattleConfig::mutable_submitmoney() {
  return &submitmoney_;
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::submitmoney(int index) const {
  return submitmoney_.Get(index);
}
inline void PBWorldBattleConfig::set_submitmoney(int index, ::google::protobuf::uint32 value) {
  submitmoney_.Set(index, value);
}
inline void PBWorldBattleConfig::add_submitmoney(::google::protobuf::uint32 value) {
  submitmoney_.Add(value);
}

// optional uint32 SubmitLevel = 13;
inline bool PBWorldBattleConfig::has_submitlevel() const {
  return _has_bit(12);
}
inline void PBWorldBattleConfig::clear_submitlevel() {
  submitlevel_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::submitlevel() const {
  return submitlevel_;
}
inline void PBWorldBattleConfig::set_submitlevel(::google::protobuf::uint32 value) {
  _set_bit(12);
  submitlevel_ = value;
}

// repeated uint32 PosX = 14;
inline int PBWorldBattleConfig::posx_size() const {
  return posx_.size();
}
inline void PBWorldBattleConfig::clear_posx() {
  posx_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldBattleConfig::posx() const {
  return posx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldBattleConfig::mutable_posx() {
  return &posx_;
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::posx(int index) const {
  return posx_.Get(index);
}
inline void PBWorldBattleConfig::set_posx(int index, ::google::protobuf::uint32 value) {
  posx_.Set(index, value);
}
inline void PBWorldBattleConfig::add_posx(::google::protobuf::uint32 value) {
  posx_.Add(value);
}

// repeated uint32 PosY = 15;
inline int PBWorldBattleConfig::posy_size() const {
  return posy_.size();
}
inline void PBWorldBattleConfig::clear_posy() {
  posy_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldBattleConfig::posy() const {
  return posy_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldBattleConfig::mutable_posy() {
  return &posy_;
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::posy(int index) const {
  return posy_.Get(index);
}
inline void PBWorldBattleConfig::set_posy(int index, ::google::protobuf::uint32 value) {
  posy_.Set(index, value);
}
inline void PBWorldBattleConfig::add_posy(::google::protobuf::uint32 value) {
  posy_.Add(value);
}

// optional uint32 OutMapID = 16;
inline bool PBWorldBattleConfig::has_outmapid() const {
  return _has_bit(15);
}
inline void PBWorldBattleConfig::clear_outmapid() {
  outmapid_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::outmapid() const {
  return outmapid_;
}
inline void PBWorldBattleConfig::set_outmapid(::google::protobuf::uint32 value) {
  _set_bit(15);
  outmapid_ = value;
}

// optional uint32 OutPosX = 17;
inline bool PBWorldBattleConfig::has_outposx() const {
  return _has_bit(16);
}
inline void PBWorldBattleConfig::clear_outposx() {
  outposx_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::outposx() const {
  return outposx_;
}
inline void PBWorldBattleConfig::set_outposx(::google::protobuf::uint32 value) {
  _set_bit(16);
  outposx_ = value;
}

// optional uint32 OutPosY = 18;
inline bool PBWorldBattleConfig::has_outposy() const {
  return _has_bit(17);
}
inline void PBWorldBattleConfig::clear_outposy() {
  outposy_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::outposy() const {
  return outposy_;
}
inline void PBWorldBattleConfig::set_outposy(::google::protobuf::uint32 value) {
  _set_bit(17);
  outposy_ = value;
}

// repeated uint32 FlagIndex = 19;
inline int PBWorldBattleConfig::flagindex_size() const {
  return flagindex_.size();
}
inline void PBWorldBattleConfig::clear_flagindex() {
  flagindex_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldBattleConfig::flagindex() const {
  return flagindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldBattleConfig::mutable_flagindex() {
  return &flagindex_;
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::flagindex(int index) const {
  return flagindex_.Get(index);
}
inline void PBWorldBattleConfig::set_flagindex(int index, ::google::protobuf::uint32 value) {
  flagindex_.Set(index, value);
}
inline void PBWorldBattleConfig::add_flagindex(::google::protobuf::uint32 value) {
  flagindex_.Add(value);
}

// optional .PBWarDate BidEnd = 20;
inline bool PBWorldBattleConfig::has_bidend() const {
  return _has_bit(19);
}
inline void PBWorldBattleConfig::clear_bidend() {
  if (bidend_ != NULL) bidend_->::PBWarDate::Clear();
  _clear_bit(19);
}
inline const ::PBWarDate& PBWorldBattleConfig::bidend() const {
  return bidend_ != NULL ? *bidend_ : *default_instance_->bidend_;
}
inline ::PBWarDate* PBWorldBattleConfig::mutable_bidend() {
  _set_bit(19);
  if (bidend_ == NULL) bidend_ = new ::PBWarDate;
  return bidend_;
}

// optional uint32 MaxWarHonor = 21;
inline bool PBWorldBattleConfig::has_maxwarhonor() const {
  return _has_bit(20);
}
inline void PBWorldBattleConfig::clear_maxwarhonor() {
  maxwarhonor_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::maxwarhonor() const {
  return maxwarhonor_;
}
inline void PBWorldBattleConfig::set_maxwarhonor(::google::protobuf::uint32 value) {
  _set_bit(20);
  maxwarhonor_ = value;
}

// repeated uint32 Title = 22;
inline int PBWorldBattleConfig::title_size() const {
  return title_.size();
}
inline void PBWorldBattleConfig::clear_title() {
  title_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBWorldBattleConfig::title() const {
  return title_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBWorldBattleConfig::mutable_title() {
  return &title_;
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::title(int index) const {
  return title_.Get(index);
}
inline void PBWorldBattleConfig::set_title(int index, ::google::protobuf::uint32 value) {
  title_.Set(index, value);
}
inline void PBWorldBattleConfig::add_title(::google::protobuf::uint32 value) {
  title_.Add(value);
}

// optional .PBWarDate NoticeBegin = 23;
inline bool PBWorldBattleConfig::has_noticebegin() const {
  return _has_bit(22);
}
inline void PBWorldBattleConfig::clear_noticebegin() {
  if (noticebegin_ != NULL) noticebegin_->::PBWarDate::Clear();
  _clear_bit(22);
}
inline const ::PBWarDate& PBWorldBattleConfig::noticebegin() const {
  return noticebegin_ != NULL ? *noticebegin_ : *default_instance_->noticebegin_;
}
inline ::PBWarDate* PBWorldBattleConfig::mutable_noticebegin() {
  _set_bit(22);
  if (noticebegin_ == NULL) noticebegin_ = new ::PBWarDate;
  return noticebegin_;
}

// optional uint32 TitleValidTime = 24;
inline bool PBWorldBattleConfig::has_titlevalidtime() const {
  return _has_bit(23);
}
inline void PBWorldBattleConfig::clear_titlevalidtime() {
  titlevalidtime_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::titlevalidtime() const {
  return titlevalidtime_;
}
inline void PBWorldBattleConfig::set_titlevalidtime(::google::protobuf::uint32 value) {
  _set_bit(23);
  titlevalidtime_ = value;
}

// optional uint32 StonePosX = 25;
inline bool PBWorldBattleConfig::has_stoneposx() const {
  return _has_bit(24);
}
inline void PBWorldBattleConfig::clear_stoneposx() {
  stoneposx_ = 0u;
  _clear_bit(24);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::stoneposx() const {
  return stoneposx_;
}
inline void PBWorldBattleConfig::set_stoneposx(::google::protobuf::uint32 value) {
  _set_bit(24);
  stoneposx_ = value;
}

// optional uint32 StonePosY = 26;
inline bool PBWorldBattleConfig::has_stoneposy() const {
  return _has_bit(25);
}
inline void PBWorldBattleConfig::clear_stoneposy() {
  stoneposy_ = 0u;
  _clear_bit(25);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::stoneposy() const {
  return stoneposy_;
}
inline void PBWorldBattleConfig::set_stoneposy(::google::protobuf::uint32 value) {
  _set_bit(25);
  stoneposy_ = value;
}

// repeated .PBTax Tax = 27;
inline int PBWorldBattleConfig::tax_size() const {
  return tax_.size();
}
inline void PBWorldBattleConfig::clear_tax() {
  tax_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTax >&
PBWorldBattleConfig::tax() const {
  return tax_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTax >*
PBWorldBattleConfig::mutable_tax() {
  return &tax_;
}
inline const ::PBTax& PBWorldBattleConfig::tax(int index) const {
  return tax_.Get(index);
}
inline ::PBTax* PBWorldBattleConfig::mutable_tax(int index) {
  return tax_.Mutable(index);
}
inline ::PBTax* PBWorldBattleConfig::add_tax() {
  return tax_.Add();
}

// optional uint32 WinTax = 28;
inline bool PBWorldBattleConfig::has_wintax() const {
  return _has_bit(27);
}
inline void PBWorldBattleConfig::clear_wintax() {
  wintax_ = 0u;
  _clear_bit(27);
}
inline ::google::protobuf::uint32 PBWorldBattleConfig::wintax() const {
  return wintax_;
}
inline void PBWorldBattleConfig::set_wintax(::google::protobuf::uint32 value) {
  _set_bit(27);
  wintax_ = value;
}

// -------------------------------------------------------------------

// PBDegreeInfo

// optional uint32 Value = 1;
inline bool PBDegreeInfo::has_value() const {
  return _has_bit(0);
}
inline void PBDegreeInfo::clear_value() {
  value_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBDegreeInfo::value() const {
  return value_;
}
inline void PBDegreeInfo::set_value(::google::protobuf::uint32 value) {
  _set_bit(0);
  value_ = value;
}

// optional uint32 Probality = 2;
inline bool PBDegreeInfo::has_probality() const {
  return _has_bit(1);
}
inline void PBDegreeInfo::clear_probality() {
  probality_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBDegreeInfo::probality() const {
  return probality_;
}
inline void PBDegreeInfo::set_probality(::google::protobuf::uint32 value) {
  _set_bit(1);
  probality_ = value;
}

// optional uint32 DegreeValue = 3;
inline bool PBDegreeInfo::has_degreevalue() const {
  return _has_bit(2);
}
inline void PBDegreeInfo::clear_degreevalue() {
  degreevalue_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBDegreeInfo::degreevalue() const {
  return degreevalue_;
}
inline void PBDegreeInfo::set_degreevalue(::google::protobuf::uint32 value) {
  _set_bit(2);
  degreevalue_ = value;
}

// -------------------------------------------------------------------

// PBItemInfo

// optional uint32 ItemID = 1;
inline bool PBItemInfo::has_itemid() const {
  return _has_bit(0);
}
inline void PBItemInfo::clear_itemid() {
  itemid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBItemInfo::itemid() const {
  return itemid_;
}
inline void PBItemInfo::set_itemid(::google::protobuf::uint32 value) {
  _set_bit(0);
  itemid_ = value;
}

// optional uint32 ItemNum = 2;
inline bool PBItemInfo::has_itemnum() const {
  return _has_bit(1);
}
inline void PBItemInfo::clear_itemnum() {
  itemnum_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemInfo::itemnum() const {
  return itemnum_;
}
inline void PBItemInfo::set_itemnum(::google::protobuf::uint32 value) {
  _set_bit(1);
  itemnum_ = value;
}

// optional uint32 Probality = 3;
inline bool PBItemInfo::has_probality() const {
  return _has_bit(2);
}
inline void PBItemInfo::clear_probality() {
  probality_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemInfo::probality() const {
  return probality_;
}
inline void PBItemInfo::set_probality(::google::protobuf::uint32 value) {
  _set_bit(2);
  probality_ = value;
}

// -------------------------------------------------------------------

// PBItemAutoCollect

// repeated .PBItemInfo ItemInfo = 1;
inline int PBItemAutoCollect::iteminfo_size() const {
  return iteminfo_.size();
}
inline void PBItemAutoCollect::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemInfo >&
PBItemAutoCollect::iteminfo() const {
  return iteminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemInfo >*
PBItemAutoCollect::mutable_iteminfo() {
  return &iteminfo_;
}
inline const ::PBItemInfo& PBItemAutoCollect::iteminfo(int index) const {
  return iteminfo_.Get(index);
}
inline ::PBItemInfo* PBItemAutoCollect::mutable_iteminfo(int index) {
  return iteminfo_.Mutable(index);
}
inline ::PBItemInfo* PBItemAutoCollect::add_iteminfo() {
  return iteminfo_.Add();
}

// repeated .PBDegreeInfo DegreeInfo = 2;
inline int PBItemAutoCollect::degreeinfo_size() const {
  return degreeinfo_.size();
}
inline void PBItemAutoCollect::clear_degreeinfo() {
  degreeinfo_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDegreeInfo >&
PBItemAutoCollect::degreeinfo() const {
  return degreeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDegreeInfo >*
PBItemAutoCollect::mutable_degreeinfo() {
  return &degreeinfo_;
}
inline const ::PBDegreeInfo& PBItemAutoCollect::degreeinfo(int index) const {
  return degreeinfo_.Get(index);
}
inline ::PBDegreeInfo* PBItemAutoCollect::mutable_degreeinfo(int index) {
  return degreeinfo_.Mutable(index);
}
inline ::PBDegreeInfo* PBItemAutoCollect::add_degreeinfo() {
  return degreeinfo_.Add();
}

// optional uint32 MapID = 3;
inline bool PBItemAutoCollect::has_mapid() const {
  return _has_bit(2);
}
inline void PBItemAutoCollect::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemAutoCollect::mapid() const {
  return mapid_;
}
inline void PBItemAutoCollect::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// optional uint32 PosX = 4;
inline bool PBItemAutoCollect::has_posx() const {
  return _has_bit(3);
}
inline void PBItemAutoCollect::clear_posx() {
  posx_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemAutoCollect::posx() const {
  return posx_;
}
inline void PBItemAutoCollect::set_posx(::google::protobuf::uint32 value) {
  _set_bit(3);
  posx_ = value;
}

// optional uint32 PosY = 5;
inline bool PBItemAutoCollect::has_posy() const {
  return _has_bit(4);
}
inline void PBItemAutoCollect::clear_posy() {
  posy_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBItemAutoCollect::posy() const {
  return posy_;
}
inline void PBItemAutoCollect::set_posy(::google::protobuf::uint32 value) {
  _set_bit(4);
  posy_ = value;
}

// optional uint32 Grid = 6;
inline bool PBItemAutoCollect::has_grid() const {
  return _has_bit(5);
}
inline void PBItemAutoCollect::clear_grid() {
  grid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBItemAutoCollect::grid() const {
  return grid_;
}
inline void PBItemAutoCollect::set_grid(::google::protobuf::uint32 value) {
  _set_bit(5);
  grid_ = value;
}

// optional uint32 MaxUseTimes = 7;
inline bool PBItemAutoCollect::has_maxusetimes() const {
  return _has_bit(6);
}
inline void PBItemAutoCollect::clear_maxusetimes() {
  maxusetimes_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBItemAutoCollect::maxusetimes() const {
  return maxusetimes_;
}
inline void PBItemAutoCollect::set_maxusetimes(::google::protobuf::uint32 value) {
  _set_bit(6);
  maxusetimes_ = value;
}

// -------------------------------------------------------------------

// PBFangCunTreeNode

// optional uint32 SkillID = 1;
inline bool PBFangCunTreeNode::has_skillid() const {
  return _has_bit(0);
}
inline void PBFangCunTreeNode::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBFangCunTreeNode::skillid() const {
  return skillid_;
}
inline void PBFangCunTreeNode::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional uint32 MaxLevel = 2;
inline bool PBFangCunTreeNode::has_maxlevel() const {
  return _has_bit(1);
}
inline void PBFangCunTreeNode::clear_maxlevel() {
  maxlevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBFangCunTreeNode::maxlevel() const {
  return maxlevel_;
}
inline void PBFangCunTreeNode::set_maxlevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  maxlevel_ = value;
}

// repeated uint32 NeedSkillID = 3;
inline int PBFangCunTreeNode::needskillid_size() const {
  return needskillid_.size();
}
inline void PBFangCunTreeNode::clear_needskillid() {
  needskillid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFangCunTreeNode::needskillid() const {
  return needskillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFangCunTreeNode::mutable_needskillid() {
  return &needskillid_;
}
inline ::google::protobuf::uint32 PBFangCunTreeNode::needskillid(int index) const {
  return needskillid_.Get(index);
}
inline void PBFangCunTreeNode::set_needskillid(int index, ::google::protobuf::uint32 value) {
  needskillid_.Set(index, value);
}
inline void PBFangCunTreeNode::add_needskillid(::google::protobuf::uint32 value) {
  needskillid_.Add(value);
}

// repeated uint32 NeedSkillPoint = 4;
inline int PBFangCunTreeNode::needskillpoint_size() const {
  return needskillpoint_.size();
}
inline void PBFangCunTreeNode::clear_needskillpoint() {
  needskillpoint_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFangCunTreeNode::needskillpoint() const {
  return needskillpoint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFangCunTreeNode::mutable_needskillpoint() {
  return &needskillpoint_;
}
inline ::google::protobuf::uint32 PBFangCunTreeNode::needskillpoint(int index) const {
  return needskillpoint_.Get(index);
}
inline void PBFangCunTreeNode::set_needskillpoint(int index, ::google::protobuf::uint32 value) {
  needskillpoint_.Set(index, value);
}
inline void PBFangCunTreeNode::add_needskillpoint(::google::protobuf::uint32 value) {
  needskillpoint_.Add(value);
}

// optional uint32 Level = 5;
inline bool PBFangCunTreeNode::has_level() const {
  return _has_bit(4);
}
inline void PBFangCunTreeNode::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBFangCunTreeNode::level() const {
  return level_;
}
inline void PBFangCunTreeNode::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint32 NeedBook = 6;
inline bool PBFangCunTreeNode::has_needbook() const {
  return _has_bit(5);
}
inline void PBFangCunTreeNode::clear_needbook() {
  needbook_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBFangCunTreeNode::needbook() const {
  return needbook_;
}
inline void PBFangCunTreeNode::set_needbook(::google::protobuf::uint32 value) {
  _set_bit(5);
  needbook_ = value;
}

// optional uint32 Stage = 7;
inline bool PBFangCunTreeNode::has_stage() const {
  return _has_bit(6);
}
inline void PBFangCunTreeNode::clear_stage() {
  stage_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBFangCunTreeNode::stage() const {
  return stage_;
}
inline void PBFangCunTreeNode::set_stage(::google::protobuf::uint32 value) {
  _set_bit(6);
  stage_ = value;
}

// optional uint32 Order = 8;
inline bool PBFangCunTreeNode::has_order() const {
  return _has_bit(7);
}
inline void PBFangCunTreeNode::clear_order() {
  order_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBFangCunTreeNode::order() const {
  return order_;
}
inline void PBFangCunTreeNode::set_order(::google::protobuf::uint32 value) {
  _set_bit(7);
  order_ = value;
}

// -------------------------------------------------------------------

// PBFangCunTree

// optional uint32 TempID = 1;
inline bool PBFangCunTree::has_tempid() const {
  return _has_bit(0);
}
inline void PBFangCunTree::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBFangCunTree::tempid() const {
  return tempid_;
}
inline void PBFangCunTree::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBFangCunTreeNode SkillNode = 2;
inline int PBFangCunTree::skillnode_size() const {
  return skillnode_.size();
}
inline void PBFangCunTree::clear_skillnode() {
  skillnode_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode >&
PBFangCunTree::skillnode() const {
  return skillnode_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFangCunTreeNode >*
PBFangCunTree::mutable_skillnode() {
  return &skillnode_;
}
inline const ::PBFangCunTreeNode& PBFangCunTree::skillnode(int index) const {
  return skillnode_.Get(index);
}
inline ::PBFangCunTreeNode* PBFangCunTree::mutable_skillnode(int index) {
  return skillnode_.Mutable(index);
}
inline ::PBFangCunTreeNode* PBFangCunTree::add_skillnode() {
  return skillnode_.Add();
}

// -------------------------------------------------------------------

// PBItemBlackPills

// optional .PBItemBase ItemBase = 1;
inline bool PBItemBlackPills::has_itembase() const {
  return _has_bit(0);
}
inline void PBItemBlackPills::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemBlackPills::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBItemBlackPills::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint32 ExchangeTime = 2;
inline bool PBItemBlackPills::has_exchangetime() const {
  return _has_bit(1);
}
inline void PBItemBlackPills::clear_exchangetime() {
  exchangetime_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBItemBlackPills::exchangetime() const {
  return exchangetime_;
}
inline void PBItemBlackPills::set_exchangetime(::google::protobuf::uint32 value) {
  _set_bit(1);
  exchangetime_ = value;
}

// optional uint32 ExpTableID = 3;
inline bool PBItemBlackPills::has_exptableid() const {
  return _has_bit(2);
}
inline void PBItemBlackPills::clear_exptableid() {
  exptableid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemBlackPills::exptableid() const {
  return exptableid_;
}
inline void PBItemBlackPills::set_exptableid(::google::protobuf::uint32 value) {
  _set_bit(2);
  exptableid_ = value;
}

// -------------------------------------------------------------------

// PBStage

// optional uint32 StageID = 1;
inline bool PBStage::has_stageid() const {
  return _has_bit(0);
}
inline void PBStage::clear_stageid() {
  stageid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBStage::stageid() const {
  return stageid_;
}
inline void PBStage::set_stageid(::google::protobuf::uint32 value) {
  _set_bit(0);
  stageid_ = value;
}

// repeated uint32 Next = 2;
inline int PBStage::next_size() const {
  return next_.size();
}
inline void PBStage::clear_next() {
  next_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBStage::next() const {
  return next_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBStage::mutable_next() {
  return &next_;
}
inline ::google::protobuf::uint32 PBStage::next(int index) const {
  return next_.Get(index);
}
inline void PBStage::set_next(int index, ::google::protobuf::uint32 value) {
  next_.Set(index, value);
}
inline void PBStage::add_next(::google::protobuf::uint32 value) {
  next_.Add(value);
}

// optional uint32 Layer = 3;
inline bool PBStage::has_layer() const {
  return _has_bit(2);
}
inline void PBStage::clear_layer() {
  layer_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBStage::layer() const {
  return layer_;
}
inline void PBStage::set_layer(::google::protobuf::uint32 value) {
  _set_bit(2);
  layer_ = value;
}

// -------------------------------------------------------------------

// PBTemplateTalentStage

// optional uint32 TempID = 1;
inline bool PBTemplateTalentStage::has_tempid() const {
  return _has_bit(0);
}
inline void PBTemplateTalentStage::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBTemplateTalentStage::tempid() const {
  return tempid_;
}
inline void PBTemplateTalentStage::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated .PBStage Stage = 2;
inline int PBTemplateTalentStage::stage_size() const {
  return stage_.size();
}
inline void PBTemplateTalentStage::clear_stage() {
  stage_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBStage >&
PBTemplateTalentStage::stage() const {
  return stage_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBStage >*
PBTemplateTalentStage::mutable_stage() {
  return &stage_;
}
inline const ::PBStage& PBTemplateTalentStage::stage(int index) const {
  return stage_.Get(index);
}
inline ::PBStage* PBTemplateTalentStage::mutable_stage(int index) {
  return stage_.Mutable(index);
}
inline ::PBStage* PBTemplateTalentStage::add_stage() {
  return stage_.Add();
}

// -------------------------------------------------------------------

// PBItemExpContainer

// optional .PBItemBase ItemBase = 1;
inline bool PBItemExpContainer::has_itembase() const {
  return _has_bit(0);
}
inline void PBItemExpContainer::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemExpContainer::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBItemExpContainer::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint64 MaxExp = 2;
inline bool PBItemExpContainer::has_maxexp() const {
  return _has_bit(1);
}
inline void PBItemExpContainer::clear_maxexp() {
  maxexp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PBItemExpContainer::maxexp() const {
  return maxexp_;
}
inline void PBItemExpContainer::set_maxexp(::google::protobuf::uint64 value) {
  _set_bit(1);
  maxexp_ = value;
}

// optional uint32 OgreExpRate = 3;
inline bool PBItemExpContainer::has_ogreexprate() const {
  return _has_bit(2);
}
inline void PBItemExpContainer::clear_ogreexprate() {
  ogreexprate_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemExpContainer::ogreexprate() const {
  return ogreexprate_;
}
inline void PBItemExpContainer::set_ogreexprate(::google::protobuf::uint32 value) {
  _set_bit(2);
  ogreexprate_ = value;
}

// optional uint32 ExpPillsID = 4;
inline bool PBItemExpContainer::has_exppillsid() const {
  return _has_bit(3);
}
inline void PBItemExpContainer::clear_exppillsid() {
  exppillsid_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBItemExpContainer::exppillsid() const {
  return exppillsid_;
}
inline void PBItemExpContainer::set_exppillsid(::google::protobuf::uint32 value) {
  _set_bit(3);
  exppillsid_ = value;
}

// -------------------------------------------------------------------

// PBItemExpPills

// optional .PBItemBase ItemBase = 1;
inline bool PBItemExpPills::has_itembase() const {
  return _has_bit(0);
}
inline void PBItemExpPills::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemExpPills::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBItemExpPills::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint64 Exp = 2;
inline bool PBItemExpPills::has_exp() const {
  return _has_bit(1);
}
inline void PBItemExpPills::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PBItemExpPills::exp() const {
  return exp_;
}
inline void PBItemExpPills::set_exp(::google::protobuf::uint64 value) {
  _set_bit(1);
  exp_ = value;
}

// optional uint32 LevelLimit = 3;
inline bool PBItemExpPills::has_levellimit() const {
  return _has_bit(2);
}
inline void PBItemExpPills::clear_levellimit() {
  levellimit_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemExpPills::levellimit() const {
  return levellimit_;
}
inline void PBItemExpPills::set_levellimit(::google::protobuf::uint32 value) {
  _set_bit(2);
  levellimit_ = value;
}

// -------------------------------------------------------------------

// PBItemExpTome

// optional .PBItemBase ItemBase = 1;
inline bool PBItemExpTome::has_itembase() const {
  return _has_bit(0);
}
inline void PBItemExpTome::clear_itembase() {
  if (itembase_ != NULL) itembase_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBItemExpTome::itembase() const {
  return itembase_ != NULL ? *itembase_ : *default_instance_->itembase_;
}
inline ::PBItemBase* PBItemExpTome::mutable_itembase() {
  _set_bit(0);
  if (itembase_ == NULL) itembase_ = new ::PBItemBase;
  return itembase_;
}

// optional uint64 Exp = 2;
inline bool PBItemExpTome::has_exp() const {
  return _has_bit(1);
}
inline void PBItemExpTome::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 PBItemExpTome::exp() const {
  return exp_;
}
inline void PBItemExpTome::set_exp(::google::protobuf::uint64 value) {
  _set_bit(1);
  exp_ = value;
}

// optional uint32 LevelLimit = 3;
inline bool PBItemExpTome::has_levellimit() const {
  return _has_bit(2);
}
inline void PBItemExpTome::clear_levellimit() {
  levellimit_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBItemExpTome::levellimit() const {
  return levellimit_;
}
inline void PBItemExpTome::set_levellimit(::google::protobuf::uint32 value) {
  _set_bit(2);
  levellimit_ = value;
}

// repeated uint32 OpenItemID = 4;
inline int PBItemExpTome::openitemid_size() const {
  return openitemid_.size();
}
inline void PBItemExpTome::clear_openitemid() {
  openitemid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBItemExpTome::openitemid() const {
  return openitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBItemExpTome::mutable_openitemid() {
  return &openitemid_;
}
inline ::google::protobuf::uint32 PBItemExpTome::openitemid(int index) const {
  return openitemid_.Get(index);
}
inline void PBItemExpTome::set_openitemid(int index, ::google::protobuf::uint32 value) {
  openitemid_.Set(index, value);
}
inline void PBItemExpTome::add_openitemid(::google::protobuf::uint32 value) {
  openitemid_.Add(value);
}

// -------------------------------------------------------------------

// PBAccuseConfig

// optional uint32 TempID = 1;
inline bool PBAccuseConfig::has_tempid() const {
  return _has_bit(0);
}
inline void PBAccuseConfig::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBAccuseConfig::tempid() const {
  return tempid_;
}
inline void PBAccuseConfig::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 AccuseBeginHour = 2;
inline bool PBAccuseConfig::has_accusebeginhour() const {
  return _has_bit(1);
}
inline void PBAccuseConfig::clear_accusebeginhour() {
  accusebeginhour_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accusebeginhour() const {
  return accusebeginhour_;
}
inline void PBAccuseConfig::set_accusebeginhour(::google::protobuf::uint32 value) {
  _set_bit(1);
  accusebeginhour_ = value;
}

// optional uint32 AccuseBeginMinute = 3;
inline bool PBAccuseConfig::has_accusebeginminute() const {
  return _has_bit(2);
}
inline void PBAccuseConfig::clear_accusebeginminute() {
  accusebeginminute_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accusebeginminute() const {
  return accusebeginminute_;
}
inline void PBAccuseConfig::set_accusebeginminute(::google::protobuf::uint32 value) {
  _set_bit(2);
  accusebeginminute_ = value;
}

// optional uint32 AccuseLevel = 4;
inline bool PBAccuseConfig::has_accuselevel() const {
  return _has_bit(3);
}
inline void PBAccuseConfig::clear_accuselevel() {
  accuselevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accuselevel() const {
  return accuselevel_;
}
inline void PBAccuseConfig::set_accuselevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  accuselevel_ = value;
}

// optional uint32 AccuseEndHour = 5;
inline bool PBAccuseConfig::has_accuseendhour() const {
  return _has_bit(4);
}
inline void PBAccuseConfig::clear_accuseendhour() {
  accuseendhour_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accuseendhour() const {
  return accuseendhour_;
}
inline void PBAccuseConfig::set_accuseendhour(::google::protobuf::uint32 value) {
  _set_bit(4);
  accuseendhour_ = value;
}

// optional uint32 AccuseEndMinute = 6;
inline bool PBAccuseConfig::has_accuseendminute() const {
  return _has_bit(5);
}
inline void PBAccuseConfig::clear_accuseendminute() {
  accuseendminute_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accuseendminute() const {
  return accuseendminute_;
}
inline void PBAccuseConfig::set_accuseendminute(::google::protobuf::uint32 value) {
  _set_bit(5);
  accuseendminute_ = value;
}

// optional uint32 AccuseMoney = 7;
inline bool PBAccuseConfig::has_accusemoney() const {
  return _has_bit(6);
}
inline void PBAccuseConfig::clear_accusemoney() {
  accusemoney_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accusemoney() const {
  return accusemoney_;
}
inline void PBAccuseConfig::set_accusemoney(::google::protobuf::uint32 value) {
  _set_bit(6);
  accusemoney_ = value;
}

// optional uint32 AccusePerson = 8;
inline bool PBAccuseConfig::has_accuseperson() const {
  return _has_bit(7);
}
inline void PBAccuseConfig::clear_accuseperson() {
  accuseperson_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accuseperson() const {
  return accuseperson_;
}
inline void PBAccuseConfig::set_accuseperson(::google::protobuf::uint32 value) {
  _set_bit(7);
  accuseperson_ = value;
}

// optional uint32 AccusePercent = 9;
inline bool PBAccuseConfig::has_accusepercent() const {
  return _has_bit(8);
}
inline void PBAccuseConfig::clear_accusepercent() {
  accusepercent_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accusepercent() const {
  return accusepercent_;
}
inline void PBAccuseConfig::set_accusepercent(::google::protobuf::uint32 value) {
  _set_bit(8);
  accusepercent_ = value;
}

// optional uint32 AwardPower = 10;
inline bool PBAccuseConfig::has_awardpower() const {
  return _has_bit(9);
}
inline void PBAccuseConfig::clear_awardpower() {
  awardpower_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBAccuseConfig::awardpower() const {
  return awardpower_;
}
inline void PBAccuseConfig::set_awardpower(::google::protobuf::uint32 value) {
  _set_bit(9);
  awardpower_ = value;
}

// optional uint32 GateNum = 11;
inline bool PBAccuseConfig::has_gatenum() const {
  return _has_bit(10);
}
inline void PBAccuseConfig::clear_gatenum() {
  gatenum_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBAccuseConfig::gatenum() const {
  return gatenum_;
}
inline void PBAccuseConfig::set_gatenum(::google::protobuf::uint32 value) {
  _set_bit(10);
  gatenum_ = value;
}

// optional uint32 FlagNum = 12;
inline bool PBAccuseConfig::has_flagnum() const {
  return _has_bit(11);
}
inline void PBAccuseConfig::clear_flagnum() {
  flagnum_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBAccuseConfig::flagnum() const {
  return flagnum_;
}
inline void PBAccuseConfig::set_flagnum(::google::protobuf::uint32 value) {
  _set_bit(11);
  flagnum_ = value;
}

// optional uint32 GatePower = 13;
inline bool PBAccuseConfig::has_gatepower() const {
  return _has_bit(12);
}
inline void PBAccuseConfig::clear_gatepower() {
  gatepower_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 PBAccuseConfig::gatepower() const {
  return gatepower_;
}
inline void PBAccuseConfig::set_gatepower(::google::protobuf::uint32 value) {
  _set_bit(12);
  gatepower_ = value;
}

// optional uint32 FlagPower = 14;
inline bool PBAccuseConfig::has_flagpower() const {
  return _has_bit(13);
}
inline void PBAccuseConfig::clear_flagpower() {
  flagpower_ = 0u;
  _clear_bit(13);
}
inline ::google::protobuf::uint32 PBAccuseConfig::flagpower() const {
  return flagpower_;
}
inline void PBAccuseConfig::set_flagpower(::google::protobuf::uint32 value) {
  _set_bit(13);
  flagpower_ = value;
}

// optional uint32 AccuseNoticeHour = 15;
inline bool PBAccuseConfig::has_accusenoticehour() const {
  return _has_bit(14);
}
inline void PBAccuseConfig::clear_accusenoticehour() {
  accusenoticehour_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accusenoticehour() const {
  return accusenoticehour_;
}
inline void PBAccuseConfig::set_accusenoticehour(::google::protobuf::uint32 value) {
  _set_bit(14);
  accusenoticehour_ = value;
}

// optional uint32 AccuseNoticeMinute = 16;
inline bool PBAccuseConfig::has_accusenoticeminute() const {
  return _has_bit(15);
}
inline void PBAccuseConfig::clear_accusenoticeminute() {
  accusenoticeminute_ = 0u;
  _clear_bit(15);
}
inline ::google::protobuf::uint32 PBAccuseConfig::accusenoticeminute() const {
  return accusenoticeminute_;
}
inline void PBAccuseConfig::set_accusenoticeminute(::google::protobuf::uint32 value) {
  _set_bit(15);
  accusenoticeminute_ = value;
}

// optional uint32 NoticePower = 17;
inline bool PBAccuseConfig::has_noticepower() const {
  return _has_bit(16);
}
inline void PBAccuseConfig::clear_noticepower() {
  noticepower_ = 0u;
  _clear_bit(16);
}
inline ::google::protobuf::uint32 PBAccuseConfig::noticepower() const {
  return noticepower_;
}
inline void PBAccuseConfig::set_noticepower(::google::protobuf::uint32 value) {
  _set_bit(16);
  noticepower_ = value;
}

// optional uint32 GateParam1 = 18;
inline bool PBAccuseConfig::has_gateparam1() const {
  return _has_bit(17);
}
inline void PBAccuseConfig::clear_gateparam1() {
  gateparam1_ = 0u;
  _clear_bit(17);
}
inline ::google::protobuf::uint32 PBAccuseConfig::gateparam1() const {
  return gateparam1_;
}
inline void PBAccuseConfig::set_gateparam1(::google::protobuf::uint32 value) {
  _set_bit(17);
  gateparam1_ = value;
}

// optional uint32 FlagParam1 = 19;
inline bool PBAccuseConfig::has_flagparam1() const {
  return _has_bit(18);
}
inline void PBAccuseConfig::clear_flagparam1() {
  flagparam1_ = 0u;
  _clear_bit(18);
}
inline ::google::protobuf::uint32 PBAccuseConfig::flagparam1() const {
  return flagparam1_;
}
inline void PBAccuseConfig::set_flagparam1(::google::protobuf::uint32 value) {
  _set_bit(18);
  flagparam1_ = value;
}

// optional uint32 GateParam2 = 20;
inline bool PBAccuseConfig::has_gateparam2() const {
  return _has_bit(19);
}
inline void PBAccuseConfig::clear_gateparam2() {
  gateparam2_ = 0u;
  _clear_bit(19);
}
inline ::google::protobuf::uint32 PBAccuseConfig::gateparam2() const {
  return gateparam2_;
}
inline void PBAccuseConfig::set_gateparam2(::google::protobuf::uint32 value) {
  _set_bit(19);
  gateparam2_ = value;
}

// optional uint32 FlagParam2 = 21;
inline bool PBAccuseConfig::has_flagparam2() const {
  return _has_bit(20);
}
inline void PBAccuseConfig::clear_flagparam2() {
  flagparam2_ = 0u;
  _clear_bit(20);
}
inline ::google::protobuf::uint32 PBAccuseConfig::flagparam2() const {
  return flagparam2_;
}
inline void PBAccuseConfig::set_flagparam2(::google::protobuf::uint32 value) {
  _set_bit(20);
  flagparam2_ = value;
}

// optional uint32 GateParam3 = 22;
inline bool PBAccuseConfig::has_gateparam3() const {
  return _has_bit(21);
}
inline void PBAccuseConfig::clear_gateparam3() {
  gateparam3_ = 0u;
  _clear_bit(21);
}
inline ::google::protobuf::uint32 PBAccuseConfig::gateparam3() const {
  return gateparam3_;
}
inline void PBAccuseConfig::set_gateparam3(::google::protobuf::uint32 value) {
  _set_bit(21);
  gateparam3_ = value;
}

// optional uint32 FlagParam3 = 23;
inline bool PBAccuseConfig::has_flagparam3() const {
  return _has_bit(22);
}
inline void PBAccuseConfig::clear_flagparam3() {
  flagparam3_ = 0u;
  _clear_bit(22);
}
inline ::google::protobuf::uint32 PBAccuseConfig::flagparam3() const {
  return flagparam3_;
}
inline void PBAccuseConfig::set_flagparam3(::google::protobuf::uint32 value) {
  _set_bit(22);
  flagparam3_ = value;
}

// optional uint32 LWPercent = 24;
inline bool PBAccuseConfig::has_lwpercent() const {
  return _has_bit(23);
}
inline void PBAccuseConfig::clear_lwpercent() {
  lwpercent_ = 0u;
  _clear_bit(23);
}
inline ::google::protobuf::uint32 PBAccuseConfig::lwpercent() const {
  return lwpercent_;
}
inline void PBAccuseConfig::set_lwpercent(::google::protobuf::uint32 value) {
  _set_bit(23);
  lwpercent_ = value;
}

// -------------------------------------------------------------------

// PBGlobalMapConfig

// optional uint32 TempID = 1;
inline bool PBGlobalMapConfig::has_tempid() const {
  return _has_bit(0);
}
inline void PBGlobalMapConfig::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBGlobalMapConfig::tempid() const {
  return tempid_;
}
inline void PBGlobalMapConfig::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 MapID = 2;
inline bool PBGlobalMapConfig::has_mapid() const {
  return _has_bit(1);
}
inline void PBGlobalMapConfig::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBGlobalMapConfig::mapid() const {
  return mapid_;
}
inline void PBGlobalMapConfig::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(1);
  mapid_ = value;
}

// optional uint32 BuffID = 3;
inline bool PBGlobalMapConfig::has_buffid() const {
  return _has_bit(2);
}
inline void PBGlobalMapConfig::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBGlobalMapConfig::buffid() const {
  return buffid_;
}
inline void PBGlobalMapConfig::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(2);
  buffid_ = value;
}

// optional uint32 Limit = 4;
inline bool PBGlobalMapConfig::has_limit() const {
  return _has_bit(3);
}
inline void PBGlobalMapConfig::clear_limit() {
  limit_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBGlobalMapConfig::limit() const {
  return limit_;
}
inline void PBGlobalMapConfig::set_limit(::google::protobuf::uint32 value) {
  _set_bit(3);
  limit_ = value;
}

// optional uint32 OutMap = 5;
inline bool PBGlobalMapConfig::has_outmap() const {
  return _has_bit(4);
}
inline void PBGlobalMapConfig::clear_outmap() {
  outmap_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBGlobalMapConfig::outmap() const {
  return outmap_;
}
inline void PBGlobalMapConfig::set_outmap(::google::protobuf::uint32 value) {
  _set_bit(4);
  outmap_ = value;
}

// optional uint32 OutX = 6;
inline bool PBGlobalMapConfig::has_outx() const {
  return _has_bit(5);
}
inline void PBGlobalMapConfig::clear_outx() {
  outx_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBGlobalMapConfig::outx() const {
  return outx_;
}
inline void PBGlobalMapConfig::set_outx(::google::protobuf::uint32 value) {
  _set_bit(5);
  outx_ = value;
}

// optional uint32 OutY = 7;
inline bool PBGlobalMapConfig::has_outy() const {
  return _has_bit(6);
}
inline void PBGlobalMapConfig::clear_outy() {
  outy_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBGlobalMapConfig::outy() const {
  return outy_;
}
inline void PBGlobalMapConfig::set_outy(::google::protobuf::uint32 value) {
  _set_bit(6);
  outy_ = value;
}

// optional uint32 EscapeBuffID = 8;
inline bool PBGlobalMapConfig::has_escapebuffid() const {
  return _has_bit(7);
}
inline void PBGlobalMapConfig::clear_escapebuffid() {
  escapebuffid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBGlobalMapConfig::escapebuffid() const {
  return escapebuffid_;
}
inline void PBGlobalMapConfig::set_escapebuffid(::google::protobuf::uint32 value) {
  _set_bit(7);
  escapebuffid_ = value;
}

// -------------------------------------------------------------------

// PBCorpsBOSS

// optional uint32 TempID = 1;
inline bool PBCorpsBOSS::has_tempid() const {
  return _has_bit(0);
}
inline void PBCorpsBOSS::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCorpsBOSS::tempid() const {
  return tempid_;
}
inline void PBCorpsBOSS::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 BOSSID = 2;
inline int PBCorpsBOSS::bossid_size() const {
  return bossid_.size();
}
inline void PBCorpsBOSS::clear_bossid() {
  bossid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCorpsBOSS::bossid() const {
  return bossid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCorpsBOSS::mutable_bossid() {
  return &bossid_;
}
inline ::google::protobuf::uint32 PBCorpsBOSS::bossid(int index) const {
  return bossid_.Get(index);
}
inline void PBCorpsBOSS::set_bossid(int index, ::google::protobuf::uint32 value) {
  bossid_.Set(index, value);
}
inline void PBCorpsBOSS::add_bossid(::google::protobuf::uint32 value) {
  bossid_.Add(value);
}

// repeated uint32 HardBOSSID = 3;
inline int PBCorpsBOSS::hardbossid_size() const {
  return hardbossid_.size();
}
inline void PBCorpsBOSS::clear_hardbossid() {
  hardbossid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCorpsBOSS::hardbossid() const {
  return hardbossid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCorpsBOSS::mutable_hardbossid() {
  return &hardbossid_;
}
inline ::google::protobuf::uint32 PBCorpsBOSS::hardbossid(int index) const {
  return hardbossid_.Get(index);
}
inline void PBCorpsBOSS::set_hardbossid(int index, ::google::protobuf::uint32 value) {
  hardbossid_.Set(index, value);
}
inline void PBCorpsBOSS::add_hardbossid(::google::protobuf::uint32 value) {
  hardbossid_.Add(value);
}

// repeated uint32 ValueLimit = 4;
inline int PBCorpsBOSS::valuelimit_size() const {
  return valuelimit_.size();
}
inline void PBCorpsBOSS::clear_valuelimit() {
  valuelimit_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCorpsBOSS::valuelimit() const {
  return valuelimit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCorpsBOSS::mutable_valuelimit() {
  return &valuelimit_;
}
inline ::google::protobuf::uint32 PBCorpsBOSS::valuelimit(int index) const {
  return valuelimit_.Get(index);
}
inline void PBCorpsBOSS::set_valuelimit(int index, ::google::protobuf::uint32 value) {
  valuelimit_.Set(index, value);
}
inline void PBCorpsBOSS::add_valuelimit(::google::protobuf::uint32 value) {
  valuelimit_.Add(value);
}

// repeated string DropDesc = 5;
inline int PBCorpsBOSS::dropdesc_size() const {
  return dropdesc_.size();
}
inline void PBCorpsBOSS::clear_dropdesc() {
  dropdesc_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBCorpsBOSS::dropdesc() const {
  return dropdesc_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBCorpsBOSS::mutable_dropdesc() {
  return &dropdesc_;
}
inline const ::std::string& PBCorpsBOSS::dropdesc(int index) const {
  return dropdesc_.Get(index);
}
inline ::std::string* PBCorpsBOSS::mutable_dropdesc(int index) {
  return dropdesc_.Mutable(index);
}
inline void PBCorpsBOSS::set_dropdesc(int index, const ::std::string& value) {
  dropdesc_.Mutable(index)->assign(value);
}
inline void PBCorpsBOSS::set_dropdesc(int index, const char* value) {
  dropdesc_.Mutable(index)->assign(value);
}
inline void PBCorpsBOSS::set_dropdesc(int index, const char* value, size_t size) {
  dropdesc_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCorpsBOSS::add_dropdesc() {
  return dropdesc_.Add();
}
inline void PBCorpsBOSS::add_dropdesc(const ::std::string& value) {
  dropdesc_.Add()->assign(value);
}
inline void PBCorpsBOSS::add_dropdesc(const char* value) {
  dropdesc_.Add()->assign(value);
}
inline void PBCorpsBOSS::add_dropdesc(const char* value, size_t size) {
  dropdesc_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string HardDropDesc = 6;
inline int PBCorpsBOSS::harddropdesc_size() const {
  return harddropdesc_.size();
}
inline void PBCorpsBOSS::clear_harddropdesc() {
  harddropdesc_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBCorpsBOSS::harddropdesc() const {
  return harddropdesc_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBCorpsBOSS::mutable_harddropdesc() {
  return &harddropdesc_;
}
inline const ::std::string& PBCorpsBOSS::harddropdesc(int index) const {
  return harddropdesc_.Get(index);
}
inline ::std::string* PBCorpsBOSS::mutable_harddropdesc(int index) {
  return harddropdesc_.Mutable(index);
}
inline void PBCorpsBOSS::set_harddropdesc(int index, const ::std::string& value) {
  harddropdesc_.Mutable(index)->assign(value);
}
inline void PBCorpsBOSS::set_harddropdesc(int index, const char* value) {
  harddropdesc_.Mutable(index)->assign(value);
}
inline void PBCorpsBOSS::set_harddropdesc(int index, const char* value, size_t size) {
  harddropdesc_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCorpsBOSS::add_harddropdesc() {
  return harddropdesc_.Add();
}
inline void PBCorpsBOSS::add_harddropdesc(const ::std::string& value) {
  harddropdesc_.Add()->assign(value);
}
inline void PBCorpsBOSS::add_harddropdesc(const char* value) {
  harddropdesc_.Add()->assign(value);
}
inline void PBCorpsBOSS::add_harddropdesc(const char* value, size_t size) {
  harddropdesc_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 SummonMinLevel = 7;
inline int PBCorpsBOSS::summonminlevel_size() const {
  return summonminlevel_.size();
}
inline void PBCorpsBOSS::clear_summonminlevel() {
  summonminlevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCorpsBOSS::summonminlevel() const {
  return summonminlevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCorpsBOSS::mutable_summonminlevel() {
  return &summonminlevel_;
}
inline ::google::protobuf::uint32 PBCorpsBOSS::summonminlevel(int index) const {
  return summonminlevel_.Get(index);
}
inline void PBCorpsBOSS::set_summonminlevel(int index, ::google::protobuf::uint32 value) {
  summonminlevel_.Set(index, value);
}
inline void PBCorpsBOSS::add_summonminlevel(::google::protobuf::uint32 value) {
  summonminlevel_.Add(value);
}

// repeated uint32 HardSummonMinLevel = 8;
inline int PBCorpsBOSS::hardsummonminlevel_size() const {
  return hardsummonminlevel_.size();
}
inline void PBCorpsBOSS::clear_hardsummonminlevel() {
  hardsummonminlevel_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCorpsBOSS::hardsummonminlevel() const {
  return hardsummonminlevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCorpsBOSS::mutable_hardsummonminlevel() {
  return &hardsummonminlevel_;
}
inline ::google::protobuf::uint32 PBCorpsBOSS::hardsummonminlevel(int index) const {
  return hardsummonminlevel_.Get(index);
}
inline void PBCorpsBOSS::set_hardsummonminlevel(int index, ::google::protobuf::uint32 value) {
  hardsummonminlevel_.Set(index, value);
}
inline void PBCorpsBOSS::add_hardsummonminlevel(::google::protobuf::uint32 value) {
  hardsummonminlevel_.Add(value);
}

// repeated uint32 SummonMinValue = 9;
inline int PBCorpsBOSS::summonminvalue_size() const {
  return summonminvalue_.size();
}
inline void PBCorpsBOSS::clear_summonminvalue() {
  summonminvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCorpsBOSS::summonminvalue() const {
  return summonminvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCorpsBOSS::mutable_summonminvalue() {
  return &summonminvalue_;
}
inline ::google::protobuf::uint32 PBCorpsBOSS::summonminvalue(int index) const {
  return summonminvalue_.Get(index);
}
inline void PBCorpsBOSS::set_summonminvalue(int index, ::google::protobuf::uint32 value) {
  summonminvalue_.Set(index, value);
}
inline void PBCorpsBOSS::add_summonminvalue(::google::protobuf::uint32 value) {
  summonminvalue_.Add(value);
}

// repeated uint32 HardSummonMinValue = 10;
inline int PBCorpsBOSS::hardsummonminvalue_size() const {
  return hardsummonminvalue_.size();
}
inline void PBCorpsBOSS::clear_hardsummonminvalue() {
  hardsummonminvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCorpsBOSS::hardsummonminvalue() const {
  return hardsummonminvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCorpsBOSS::mutable_hardsummonminvalue() {
  return &hardsummonminvalue_;
}
inline ::google::protobuf::uint32 PBCorpsBOSS::hardsummonminvalue(int index) const {
  return hardsummonminvalue_.Get(index);
}
inline void PBCorpsBOSS::set_hardsummonminvalue(int index, ::google::protobuf::uint32 value) {
  hardsummonminvalue_.Set(index, value);
}
inline void PBCorpsBOSS::add_hardsummonminvalue(::google::protobuf::uint32 value) {
  hardsummonminvalue_.Add(value);
}

// -------------------------------------------------------------------

// PBOffLineExpConfig

// optional uint32 TempID = 1;
inline bool PBOffLineExpConfig::has_tempid() const {
  return _has_bit(0);
}
inline void PBOffLineExpConfig::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBOffLineExpConfig::tempid() const {
  return tempid_;
}
inline void PBOffLineExpConfig::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// optional uint32 OffLineUnit = 2;
inline bool PBOffLineExpConfig::has_offlineunit() const {
  return _has_bit(1);
}
inline void PBOffLineExpConfig::clear_offlineunit() {
  offlineunit_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBOffLineExpConfig::offlineunit() const {
  return offlineunit_;
}
inline void PBOffLineExpConfig::set_offlineunit(::google::protobuf::uint32 value) {
  _set_bit(1);
  offlineunit_ = value;
}

// repeated uint32 OffLineExp = 3;
inline int PBOffLineExpConfig::offlineexp_size() const {
  return offlineexp_.size();
}
inline void PBOffLineExpConfig::clear_offlineexp() {
  offlineexp_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOffLineExpConfig::offlineexp() const {
  return offlineexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOffLineExpConfig::mutable_offlineexp() {
  return &offlineexp_;
}
inline ::google::protobuf::uint32 PBOffLineExpConfig::offlineexp(int index) const {
  return offlineexp_.Get(index);
}
inline void PBOffLineExpConfig::set_offlineexp(int index, ::google::protobuf::uint32 value) {
  offlineexp_.Set(index, value);
}
inline void PBOffLineExpConfig::add_offlineexp(::google::protobuf::uint32 value) {
  offlineexp_.Add(value);
}

// optional uint32 OffLineLevel = 4;
inline bool PBOffLineExpConfig::has_offlinelevel() const {
  return _has_bit(3);
}
inline void PBOffLineExpConfig::clear_offlinelevel() {
  offlinelevel_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBOffLineExpConfig::offlinelevel() const {
  return offlinelevel_;
}
inline void PBOffLineExpConfig::set_offlinelevel(::google::protobuf::uint32 value) {
  _set_bit(3);
  offlinelevel_ = value;
}

// repeated uint32 ExpLimit = 5;
inline int PBOffLineExpConfig::explimit_size() const {
  return explimit_.size();
}
inline void PBOffLineExpConfig::clear_explimit() {
  explimit_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBOffLineExpConfig::explimit() const {
  return explimit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBOffLineExpConfig::mutable_explimit() {
  return &explimit_;
}
inline ::google::protobuf::uint32 PBOffLineExpConfig::explimit(int index) const {
  return explimit_.Get(index);
}
inline void PBOffLineExpConfig::set_explimit(int index, ::google::protobuf::uint32 value) {
  explimit_.Set(index, value);
}
inline void PBOffLineExpConfig::add_explimit(::google::protobuf::uint32 value) {
  explimit_.Add(value);
}

// optional uint32 OffLinePercent = 6;
inline bool PBOffLineExpConfig::has_offlinepercent() const {
  return _has_bit(5);
}
inline void PBOffLineExpConfig::clear_offlinepercent() {
  offlinepercent_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBOffLineExpConfig::offlinepercent() const {
  return offlinepercent_;
}
inline void PBOffLineExpConfig::set_offlinepercent(::google::protobuf::uint32 value) {
  _set_bit(5);
  offlinepercent_ = value;
}

// -------------------------------------------------------------------

// PBRepeFameTable

// optional uint32 TempID = 1;
inline bool PBRepeFameTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBRepeFameTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBRepeFameTable::tempid() const {
  return tempid_;
}
inline void PBRepeFameTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 FameType = 2;
inline int PBRepeFameTable::fametype_size() const {
  return fametype_.size();
}
inline void PBRepeFameTable::clear_fametype() {
  fametype_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBRepeFameTable::fametype() const {
  return fametype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBRepeFameTable::mutable_fametype() {
  return &fametype_;
}
inline ::google::protobuf::uint32 PBRepeFameTable::fametype(int index) const {
  return fametype_.Get(index);
}
inline void PBRepeFameTable::set_fametype(int index, ::google::protobuf::uint32 value) {
  fametype_.Set(index, value);
}
inline void PBRepeFameTable::add_fametype(::google::protobuf::uint32 value) {
  fametype_.Add(value);
}

// repeated uint32 FameValue = 3;
inline int PBRepeFameTable::famevalue_size() const {
  return famevalue_.size();
}
inline void PBRepeFameTable::clear_famevalue() {
  famevalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBRepeFameTable::famevalue() const {
  return famevalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBRepeFameTable::mutable_famevalue() {
  return &famevalue_;
}
inline ::google::protobuf::uint32 PBRepeFameTable::famevalue(int index) const {
  return famevalue_.Get(index);
}
inline void PBRepeFameTable::set_famevalue(int index, ::google::protobuf::uint32 value) {
  famevalue_.Set(index, value);
}
inline void PBRepeFameTable::add_famevalue(::google::protobuf::uint32 value) {
  famevalue_.Add(value);
}

// repeated uint32 ItemValue = 4;
inline int PBRepeFameTable::itemvalue_size() const {
  return itemvalue_.size();
}
inline void PBRepeFameTable::clear_itemvalue() {
  itemvalue_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBRepeFameTable::itemvalue() const {
  return itemvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBRepeFameTable::mutable_itemvalue() {
  return &itemvalue_;
}
inline ::google::protobuf::uint32 PBRepeFameTable::itemvalue(int index) const {
  return itemvalue_.Get(index);
}
inline void PBRepeFameTable::set_itemvalue(int index, ::google::protobuf::uint32 value) {
  itemvalue_.Set(index, value);
}
inline void PBRepeFameTable::add_itemvalue(::google::protobuf::uint32 value) {
  itemvalue_.Add(value);
}

// optional uint32 CombatItemID = 5;
inline bool PBRepeFameTable::has_combatitemid() const {
  return _has_bit(4);
}
inline void PBRepeFameTable::clear_combatitemid() {
  combatitemid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBRepeFameTable::combatitemid() const {
  return combatitemid_;
}
inline void PBRepeFameTable::set_combatitemid(::google::protobuf::uint32 value) {
  _set_bit(4);
  combatitemid_ = value;
}

// optional uint32 RepeItemID = 6;
inline bool PBRepeFameTable::has_repeitemid() const {
  return _has_bit(5);
}
inline void PBRepeFameTable::clear_repeitemid() {
  repeitemid_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBRepeFameTable::repeitemid() const {
  return repeitemid_;
}
inline void PBRepeFameTable::set_repeitemid(::google::protobuf::uint32 value) {
  _set_bit(5);
  repeitemid_ = value;
}

// optional uint32 CommonItemID = 7;
inline bool PBRepeFameTable::has_commonitemid() const {
  return _has_bit(6);
}
inline void PBRepeFameTable::clear_commonitemid() {
  commonitemid_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 PBRepeFameTable::commonitemid() const {
  return commonitemid_;
}
inline void PBRepeFameTable::set_commonitemid(::google::protobuf::uint32 value) {
  _set_bit(6);
  commonitemid_ = value;
}

// optional uint32 CombatLimit = 8;
inline bool PBRepeFameTable::has_combatlimit() const {
  return _has_bit(7);
}
inline void PBRepeFameTable::clear_combatlimit() {
  combatlimit_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 PBRepeFameTable::combatlimit() const {
  return combatlimit_;
}
inline void PBRepeFameTable::set_combatlimit(::google::protobuf::uint32 value) {
  _set_bit(7);
  combatlimit_ = value;
}

// optional uint32 RepeLimit = 9;
inline bool PBRepeFameTable::has_repelimit() const {
  return _has_bit(8);
}
inline void PBRepeFameTable::clear_repelimit() {
  repelimit_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 PBRepeFameTable::repelimit() const {
  return repelimit_;
}
inline void PBRepeFameTable::set_repelimit(::google::protobuf::uint32 value) {
  _set_bit(8);
  repelimit_ = value;
}

// optional uint32 CommonLimit = 10;
inline bool PBRepeFameTable::has_commonlimit() const {
  return _has_bit(9);
}
inline void PBRepeFameTable::clear_commonlimit() {
  commonlimit_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 PBRepeFameTable::commonlimit() const {
  return commonlimit_;
}
inline void PBRepeFameTable::set_commonlimit(::google::protobuf::uint32 value) {
  _set_bit(9);
  commonlimit_ = value;
}

// -------------------------------------------------------------------

// PBCastingSpiritTable

// optional uint32 TempID = 1;
inline bool PBCastingSpiritTable::has_tempid() const {
  return _has_bit(0);
}
inline void PBCastingSpiritTable::clear_tempid() {
  tempid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 PBCastingSpiritTable::tempid() const {
  return tempid_;
}
inline void PBCastingSpiritTable::set_tempid(::google::protobuf::uint32 value) {
  _set_bit(0);
  tempid_ = value;
}

// repeated uint32 OpenStatus = 2;
inline int PBCastingSpiritTable::openstatus_size() const {
  return openstatus_.size();
}
inline void PBCastingSpiritTable::clear_openstatus() {
  openstatus_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCastingSpiritTable::openstatus() const {
  return openstatus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCastingSpiritTable::mutable_openstatus() {
  return &openstatus_;
}
inline ::google::protobuf::uint32 PBCastingSpiritTable::openstatus(int index) const {
  return openstatus_.Get(index);
}
inline void PBCastingSpiritTable::set_openstatus(int index, ::google::protobuf::uint32 value) {
  openstatus_.Set(index, value);
}
inline void PBCastingSpiritTable::add_openstatus(::google::protobuf::uint32 value) {
  openstatus_.Add(value);
}

// repeated string PositionName = 3;
inline int PBCastingSpiritTable::positionname_size() const {
  return positionname_.size();
}
inline void PBCastingSpiritTable::clear_positionname() {
  positionname_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBCastingSpiritTable::positionname() const {
  return positionname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBCastingSpiritTable::mutable_positionname() {
  return &positionname_;
}
inline const ::std::string& PBCastingSpiritTable::positionname(int index) const {
  return positionname_.Get(index);
}
inline ::std::string* PBCastingSpiritTable::mutable_positionname(int index) {
  return positionname_.Mutable(index);
}
inline void PBCastingSpiritTable::set_positionname(int index, const ::std::string& value) {
  positionname_.Mutable(index)->assign(value);
}
inline void PBCastingSpiritTable::set_positionname(int index, const char* value) {
  positionname_.Mutable(index)->assign(value);
}
inline void PBCastingSpiritTable::set_positionname(int index, const char* value, size_t size) {
  positionname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCastingSpiritTable::add_positionname() {
  return positionname_.Add();
}
inline void PBCastingSpiritTable::add_positionname(const ::std::string& value) {
  positionname_.Add()->assign(value);
}
inline void PBCastingSpiritTable::add_positionname(const char* value) {
  positionname_.Add()->assign(value);
}
inline void PBCastingSpiritTable::add_positionname(const char* value, size_t size) {
  positionname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string PositionDesc = 4;
inline int PBCastingSpiritTable::positiondesc_size() const {
  return positiondesc_.size();
}
inline void PBCastingSpiritTable::clear_positiondesc() {
  positiondesc_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBCastingSpiritTable::positiondesc() const {
  return positiondesc_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBCastingSpiritTable::mutable_positiondesc() {
  return &positiondesc_;
}
inline const ::std::string& PBCastingSpiritTable::positiondesc(int index) const {
  return positiondesc_.Get(index);
}
inline ::std::string* PBCastingSpiritTable::mutable_positiondesc(int index) {
  return positiondesc_.Mutable(index);
}
inline void PBCastingSpiritTable::set_positiondesc(int index, const ::std::string& value) {
  positiondesc_.Mutable(index)->assign(value);
}
inline void PBCastingSpiritTable::set_positiondesc(int index, const char* value) {
  positiondesc_.Mutable(index)->assign(value);
}
inline void PBCastingSpiritTable::set_positiondesc(int index, const char* value, size_t size) {
  positiondesc_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCastingSpiritTable::add_positiondesc() {
  return positiondesc_.Add();
}
inline void PBCastingSpiritTable::add_positiondesc(const ::std::string& value) {
  positiondesc_.Add()->assign(value);
}
inline void PBCastingSpiritTable::add_positiondesc(const char* value) {
  positiondesc_.Add()->assign(value);
}
inline void PBCastingSpiritTable::add_positiondesc(const char* value, size_t size) {
  positiondesc_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string SpiritTypeName = 5;
inline int PBCastingSpiritTable::spirittypename_size() const {
  return spirittypename_.size();
}
inline void PBCastingSpiritTable::clear_spirittypename() {
  spirittypename_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBCastingSpiritTable::spirittypename() const {
  return spirittypename_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBCastingSpiritTable::mutable_spirittypename() {
  return &spirittypename_;
}
inline const ::std::string& PBCastingSpiritTable::spirittypename(int index) const {
  return spirittypename_.Get(index);
}
inline ::std::string* PBCastingSpiritTable::mutable_spirittypename(int index) {
  return spirittypename_.Mutable(index);
}
inline void PBCastingSpiritTable::set_spirittypename(int index, const ::std::string& value) {
  spirittypename_.Mutable(index)->assign(value);
}
inline void PBCastingSpiritTable::set_spirittypename(int index, const char* value) {
  spirittypename_.Mutable(index)->assign(value);
}
inline void PBCastingSpiritTable::set_spirittypename(int index, const char* value, size_t size) {
  spirittypename_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCastingSpiritTable::add_spirittypename() {
  return spirittypename_.Add();
}
inline void PBCastingSpiritTable::add_spirittypename(const ::std::string& value) {
  spirittypename_.Add()->assign(value);
}
inline void PBCastingSpiritTable::add_spirittypename(const char* value) {
  spirittypename_.Add()->assign(value);
}
inline void PBCastingSpiritTable::add_spirittypename(const char* value, size_t size) {
  spirittypename_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string SpiritTypeDesc = 6;
inline int PBCastingSpiritTable::spirittypedesc_size() const {
  return spirittypedesc_.size();
}
inline void PBCastingSpiritTable::clear_spirittypedesc() {
  spirittypedesc_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBCastingSpiritTable::spirittypedesc() const {
  return spirittypedesc_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PBCastingSpiritTable::mutable_spirittypedesc() {
  return &spirittypedesc_;
}
inline const ::std::string& PBCastingSpiritTable::spirittypedesc(int index) const {
  return spirittypedesc_.Get(index);
}
inline ::std::string* PBCastingSpiritTable::mutable_spirittypedesc(int index) {
  return spirittypedesc_.Mutable(index);
}
inline void PBCastingSpiritTable::set_spirittypedesc(int index, const ::std::string& value) {
  spirittypedesc_.Mutable(index)->assign(value);
}
inline void PBCastingSpiritTable::set_spirittypedesc(int index, const char* value) {
  spirittypedesc_.Mutable(index)->assign(value);
}
inline void PBCastingSpiritTable::set_spirittypedesc(int index, const char* value, size_t size) {
  spirittypedesc_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCastingSpiritTable::add_spirittypedesc() {
  return spirittypedesc_.Add();
}
inline void PBCastingSpiritTable::add_spirittypedesc(const ::std::string& value) {
  spirittypedesc_.Add()->assign(value);
}
inline void PBCastingSpiritTable::add_spirittypedesc(const char* value) {
  spirittypedesc_.Add()->assign(value);
}
inline void PBCastingSpiritTable::add_spirittypedesc(const char* value, size_t size) {
  spirittypedesc_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated uint32 SpiritItem = 7;
inline int PBCastingSpiritTable::spirititem_size() const {
  return spirititem_.size();
}
inline void PBCastingSpiritTable::clear_spirititem() {
  spirititem_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCastingSpiritTable::spirititem() const {
  return spirititem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCastingSpiritTable::mutable_spirititem() {
  return &spirititem_;
}
inline ::google::protobuf::uint32 PBCastingSpiritTable::spirititem(int index) const {
  return spirititem_.Get(index);
}
inline void PBCastingSpiritTable::set_spirititem(int index, ::google::protobuf::uint32 value) {
  spirititem_.Set(index, value);
}
inline void PBCastingSpiritTable::add_spirititem(::google::protobuf::uint32 value) {
  spirititem_.Add(value);
}

// repeated uint32 SpiritItemNum = 8;
inline int PBCastingSpiritTable::spirititemnum_size() const {
  return spirititemnum_.size();
}
inline void PBCastingSpiritTable::clear_spirititemnum() {
  spirititemnum_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCastingSpiritTable::spirititemnum() const {
  return spirititemnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCastingSpiritTable::mutable_spirititemnum() {
  return &spirititemnum_;
}
inline ::google::protobuf::uint32 PBCastingSpiritTable::spirititemnum(int index) const {
  return spirititemnum_.Get(index);
}
inline void PBCastingSpiritTable::set_spirititemnum(int index, ::google::protobuf::uint32 value) {
  spirititemnum_.Set(index, value);
}
inline void PBCastingSpiritTable::add_spirititemnum(::google::protobuf::uint32 value) {
  spirititemnum_.Add(value);
}

// repeated uint32 UpgradeMoney = 9;
inline int PBCastingSpiritTable::upgrademoney_size() const {
  return upgrademoney_.size();
}
inline void PBCastingSpiritTable::clear_upgrademoney() {
  upgrademoney_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCastingSpiritTable::upgrademoney() const {
  return upgrademoney_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCastingSpiritTable::mutable_upgrademoney() {
  return &upgrademoney_;
}
inline ::google::protobuf::uint32 PBCastingSpiritTable::upgrademoney(int index) const {
  return upgrademoney_.Get(index);
}
inline void PBCastingSpiritTable::set_upgrademoney(int index, ::google::protobuf::uint32 value) {
  upgrademoney_.Set(index, value);
}
inline void PBCastingSpiritTable::add_upgrademoney(::google::protobuf::uint32 value) {
  upgrademoney_.Add(value);
}

// repeated uint32 DowngradeMoney = 10;
inline int PBCastingSpiritTable::downgrademoney_size() const {
  return downgrademoney_.size();
}
inline void PBCastingSpiritTable::clear_downgrademoney() {
  downgrademoney_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCastingSpiritTable::downgrademoney() const {
  return downgrademoney_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCastingSpiritTable::mutable_downgrademoney() {
  return &downgrademoney_;
}
inline ::google::protobuf::uint32 PBCastingSpiritTable::downgrademoney(int index) const {
  return downgrademoney_.Get(index);
}
inline void PBCastingSpiritTable::set_downgrademoney(int index, ::google::protobuf::uint32 value) {
  downgrademoney_.Set(index, value);
}
inline void PBCastingSpiritTable::add_downgrademoney(::google::protobuf::uint32 value) {
  downgrademoney_.Add(value);
}

// optional uint32 UpgradeItem = 11;
inline bool PBCastingSpiritTable::has_upgradeitem() const {
  return _has_bit(10);
}
inline void PBCastingSpiritTable::clear_upgradeitem() {
  upgradeitem_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 PBCastingSpiritTable::upgradeitem() const {
  return upgradeitem_;
}
inline void PBCastingSpiritTable::set_upgradeitem(::google::protobuf::uint32 value) {
  _set_bit(10);
  upgradeitem_ = value;
}

// optional uint32 DowngradeItem = 12;
inline bool PBCastingSpiritTable::has_downgradeitem() const {
  return _has_bit(11);
}
inline void PBCastingSpiritTable::clear_downgradeitem() {
  downgradeitem_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 PBCastingSpiritTable::downgradeitem() const {
  return downgradeitem_;
}
inline void PBCastingSpiritTable::set_downgradeitem(::google::protobuf::uint32 value) {
  _set_bit(11);
  downgradeitem_ = value;
}

// -------------------------------------------------------------------

// PBSpiritItem

// optional .PBItemBase BaseInfo = 1;
inline bool PBSpiritItem::has_baseinfo() const {
  return _has_bit(0);
}
inline void PBSpiritItem::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBItemBase::Clear();
  _clear_bit(0);
}
inline const ::PBItemBase& PBSpiritItem::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBItemBase* PBSpiritItem::mutable_baseinfo() {
  _set_bit(0);
  if (baseinfo_ == NULL) baseinfo_ = new ::PBItemBase;
  return baseinfo_;
}

// optional uint32 Grade = 2;
inline bool PBSpiritItem::has_grade() const {
  return _has_bit(1);
}
inline void PBSpiritItem::clear_grade() {
  grade_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 PBSpiritItem::grade() const {
  return grade_;
}
inline void PBSpiritItem::set_grade(::google::protobuf::uint32 value) {
  _set_bit(1);
  grade_ = value;
}

// optional uint32 ColorGrade = 3;
inline bool PBSpiritItem::has_colorgrade() const {
  return _has_bit(2);
}
inline void PBSpiritItem::clear_colorgrade() {
  colorgrade_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 PBSpiritItem::colorgrade() const {
  return colorgrade_;
}
inline void PBSpiritItem::set_colorgrade(::google::protobuf::uint32 value) {
  _set_bit(2);
  colorgrade_ = value;
}

// optional uint32 SpiritType = 4;
inline bool PBSpiritItem::has_spirittype() const {
  return _has_bit(3);
}
inline void PBSpiritItem::clear_spirittype() {
  spirittype_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 PBSpiritItem::spirittype() const {
  return spirittype_;
}
inline void PBSpiritItem::set_spirittype(::google::protobuf::uint32 value) {
  _set_bit(3);
  spirittype_ = value;
}

// optional uint32 LevelLimit = 5;
inline bool PBSpiritItem::has_levellimit() const {
  return _has_bit(4);
}
inline void PBSpiritItem::clear_levellimit() {
  levellimit_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 PBSpiritItem::levellimit() const {
  return levellimit_;
}
inline void PBSpiritItem::set_levellimit(::google::protobuf::uint32 value) {
  _set_bit(4);
  levellimit_ = value;
}

// optional uint32 EffectPoint = 6;
inline bool PBSpiritItem::has_effectpoint() const {
  return _has_bit(5);
}
inline void PBSpiritItem::clear_effectpoint() {
  effectpoint_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 PBSpiritItem::effectpoint() const {
  return effectpoint_;
}
inline void PBSpiritItem::set_effectpoint(::google::protobuf::uint32 value) {
  _set_bit(5);
  effectpoint_ = value;
}

#endif  // PROTOBUF_template_5fpb_2ehxx__INCLUDED
